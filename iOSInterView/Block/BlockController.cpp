#ifndef __OBJC2__
#define __OBJC2__
#endif
struct objc_selector; struct objc_class;
struct __rw_objc_super { 
	struct objc_object *object; 
	struct objc_object *superClass; 
	__rw_objc_super(struct objc_object *o, struct objc_object *s) : object(o), superClass(s) {} 
};
#ifndef _REWRITER_typedef_Protocol
typedef struct objc_object Protocol;
#define _REWRITER_typedef_Protocol
#endif
#define __OBJC_RW_DLLIMPORT extern
__OBJC_RW_DLLIMPORT void objc_msgSend(void);
__OBJC_RW_DLLIMPORT void objc_msgSendSuper(void);
__OBJC_RW_DLLIMPORT void objc_msgSend_stret(void);
__OBJC_RW_DLLIMPORT void objc_msgSendSuper_stret(void);
__OBJC_RW_DLLIMPORT void objc_msgSend_fpret(void);
__OBJC_RW_DLLIMPORT struct objc_class *objc_getClass(const char *);
__OBJC_RW_DLLIMPORT struct objc_class *class_getSuperclass(struct objc_class *);
__OBJC_RW_DLLIMPORT struct objc_class *objc_getMetaClass(const char *);
__OBJC_RW_DLLIMPORT void objc_exception_throw( struct objc_object *);
__OBJC_RW_DLLIMPORT int objc_sync_enter( struct objc_object *);
__OBJC_RW_DLLIMPORT int objc_sync_exit( struct objc_object *);
__OBJC_RW_DLLIMPORT Protocol *objc_getProtocol(const char *);
#ifdef _WIN64
typedef unsigned long long  _WIN_NSUInteger;
#else
typedef unsigned int _WIN_NSUInteger;
#endif
#ifndef __FASTENUMERATIONSTATE
struct __objcFastEnumerationState {
	unsigned long state;
	void **itemsPtr;
	unsigned long *mutationsPtr;
	unsigned long extra[5];
};
__OBJC_RW_DLLIMPORT void objc_enumerationMutation(struct objc_object *);
#define __FASTENUMERATIONSTATE
#endif
#ifndef __NSCONSTANTSTRINGIMPL
struct __NSConstantStringImpl {
  int *isa;
  int flags;
  char *str;
#if _WIN64
  long long length;
#else
  long length;
#endif
};
#ifdef CF_EXPORT_CONSTANT_STRING
extern "C" __declspec(dllexport) int __CFConstantStringClassReference[];
#else
__OBJC_RW_DLLIMPORT int __CFConstantStringClassReference[];
#endif
#define __NSCONSTANTSTRINGIMPL
#endif
#ifndef BLOCK_IMPL
#define BLOCK_IMPL
struct __block_impl {
  void *isa;
  int Flags;
  int Reserved;
  void *FuncPtr;
};
// Runtime copy/destroy helper functions (from Block_private.h)
#ifdef __OBJC_EXPORT_BLOCKS
extern "C" __declspec(dllexport) void _Block_object_assign(void *, const void *, const int);
extern "C" __declspec(dllexport) void _Block_object_dispose(const void *, const int);
extern "C" __declspec(dllexport) void *_NSConcreteGlobalBlock[32];
extern "C" __declspec(dllexport) void *_NSConcreteStackBlock[32];
#else
__OBJC_RW_DLLIMPORT void _Block_object_assign(void *, const void *, const int);
__OBJC_RW_DLLIMPORT void _Block_object_dispose(const void *, const int);
__OBJC_RW_DLLIMPORT void *_NSConcreteGlobalBlock[32];
__OBJC_RW_DLLIMPORT void *_NSConcreteStackBlock[32];
#endif
#endif
#define __block
#define __weak

#include <stdarg.h>
struct __NSContainer_literal {
  void * *arr;
  __NSContainer_literal (unsigned int count, ...) {
	va_list marker;
	va_start(marker, count);
	arr = new void *[count];
	for (unsigned i = 0; i < count; i++)
	  arr[i] = va_arg(marker, void *);
	va_end( marker );
  };
  ~__NSContainer_literal() {
	delete[] arr;
  }
};
extern "C" __declspec(dllimport) void * objc_autoreleasePoolPush(void);
extern "C" __declspec(dllimport) void objc_autoreleasePoolPop(void *);

struct __AtAutoreleasePool {
  __AtAutoreleasePool() {atautoreleasepoolobj = objc_autoreleasePoolPush();}
  ~__AtAutoreleasePool() {objc_autoreleasePoolPop(atautoreleasepoolobj);}
  void * atautoreleasepoolobj;
};

#define __OFFSETOFIVAR__(TYPE, MEMBER) ((long long) &((TYPE *)0)->MEMBER)
static __NSConstantStringImpl __NSConstantStringImpl__var_folders_yx_x0n54cd97rb9jb777qy7pncm0000gq_T_BlockController_369ade_mi_0 __attribute__ ((section ("__DATA, __cfstring"))) = {__CFConstantStringClassReference,0x000007c8,"age is %d",9};
static __NSConstantStringImpl __NSConstantStringImpl__var_folders_yx_x0n54cd97rb9jb777qy7pncm0000gq_T_BlockController_369ade_mi_1 __attribute__ ((section ("__DATA, __cfstring"))) = {__CFConstantStringClassReference,0x000007c8,"age is %d",9};
static __NSConstantStringImpl __NSConstantStringImpl__var_folders_yx_x0n54cd97rb9jb777qy7pncm0000gq_T_BlockController_369ade_mi_2 __attribute__ ((section ("__DATA, __cfstring"))) = {__CFConstantStringClassReference,0x000007c8,"\346\211\247\350\241\214\345\256\214block",14};
static __NSConstantStringImpl __NSConstantStringImpl__var_folders_yx_x0n54cd97rb9jb777qy7pncm0000gq_T_BlockController_369ade_mi_3 __attribute__ ((section ("__DATA, __cfstring"))) = {__CFConstantStringClassReference,0x000007c8,"\346\211\247\350\241\214\345\256\214block age is %d",24};
static __NSConstantStringImpl __NSConstantStringImpl__var_folders_yx_x0n54cd97rb9jb777qy7pncm0000gq_T_BlockController_369ade_mi_4 __attribute__ ((section ("__DATA, __cfstring"))) = {__CFConstantStringClassReference,0x000007c8,"Hello",5};
static __NSConstantStringImpl __NSConstantStringImpl__var_folders_yx_x0n54cd97rb9jb777qy7pncm0000gq_T_BlockController_369ade_mi_5 __attribute__ ((section ("__DATA, __cfstring"))) = {__CFConstantStringClassReference,0x000007c8,"Hello - %d",10};
static __NSConstantStringImpl __NSConstantStringImpl__var_folders_yx_x0n54cd97rb9jb777qy7pncm0000gq_T_BlockController_369ade_mi_6 __attribute__ ((section ("__DATA, __cfstring"))) = {__CFConstantStringClassReference,0x000007c8,"%@ %@ %@",8};
static __NSConstantStringImpl __NSConstantStringImpl__var_folders_yx_x0n54cd97rb9jb777qy7pncm0000gq_T_BlockController_369ade_mi_7 __attribute__ ((section ("__DATA, __cfstring"))) = {__CFConstantStringClassReference,0x000007c8,"Hello - %d",10};
static __NSConstantStringImpl __NSConstantStringImpl__var_folders_yx_x0n54cd97rb9jb777qy7pncm0000gq_T_BlockController_369ade_mi_8 __attribute__ ((section ("__DATA, __cfstring"))) = {__CFConstantStringClassReference,0x000007c8,"Hello - %ld",11};
static __NSConstantStringImpl __NSConstantStringImpl__var_folders_yx_x0n54cd97rb9jb777qy7pncm0000gq_T_BlockController_369ade_mi_9 __attribute__ ((section ("__DATA, __cfstring"))) = {__CFConstantStringClassReference,0x000007c8,"block4 %@",9};
static __NSConstantStringImpl __NSConstantStringImpl__var_folders_yx_x0n54cd97rb9jb777qy7pncm0000gq_T_BlockController_369ade_mi_10 __attribute__ ((section ("__DATA, __cfstring"))) = {__CFConstantStringClassReference,0x000007c8,"Hello - %ld",11};
static __NSConstantStringImpl __NSConstantStringImpl__var_folders_yx_x0n54cd97rb9jb777qy7pncm0000gq_T_BlockController_369ade_mi_11 __attribute__ ((section ("__DATA, __cfstring"))) = {__CFConstantStringClassReference,0x000007c8,"block3 %@",9};
static __NSConstantStringImpl __NSConstantStringImpl__var_folders_yx_x0n54cd97rb9jb777qy7pncm0000gq_T_BlockController_369ade_mi_12 __attribute__ ((section ("__DATA, __cfstring"))) = {__CFConstantStringClassReference,0x000007c8,"block5 - %d",11};
static void __Block_byref_id_object_copy_131(void *dst, void *src) {
 _Block_object_assign((char*)dst + 40, *(void * *) ((char*)src + 40), 131);
}
static void __Block_byref_id_object_dispose_131(void *src) {
 _Block_object_dispose(*(void * *) ((char*)src + 40), 131);
}
static __NSConstantStringImpl __NSConstantStringImpl__var_folders_yx_x0n54cd97rb9jb777qy7pncm0000gq_T_BlockController_369ade_mi_13 __attribute__ ((section ("__DATA, __cfstring"))) = {__CFConstantStringClassReference,0x000007c8,"block6 - %ld",12};
static __NSConstantStringImpl __NSConstantStringImpl__var_folders_yx_x0n54cd97rb9jb777qy7pncm0000gq_T_BlockController_369ade_mi_14 __attribute__ ((section ("__DATA, __cfstring"))) = {__CFConstantStringClassReference,0x000007c8,"%d",2};
static __NSConstantStringImpl __NSConstantStringImpl__var_folders_yx_x0n54cd97rb9jb777qy7pncm0000gq_T_BlockController_369ade_mi_15 __attribute__ ((section ("__DATA, __cfstring"))) = {__CFConstantStringClassReference,0x000007c8,"%ld",3};
static __NSConstantStringImpl __NSConstantStringImpl__var_folders_yx_x0n54cd97rb9jb777qy7pncm0000gq_T_BlockController_369ade_mi_16 __attribute__ ((section ("__DATA, __cfstring"))) = {__CFConstantStringClassReference,0x000007c8,"block5  end",11};
















































typedef signed char __int8_t;



typedef unsigned char __uint8_t;
typedef short __int16_t;
typedef unsigned short __uint16_t;
typedef int __int32_t;
typedef unsigned int __uint32_t;
typedef long long __int64_t;
typedef unsigned long long __uint64_t;

typedef long __darwin_intptr_t;
typedef unsigned int __darwin_natural_t;
typedef int __darwin_ct_rune_t;





typedef union {
 char __mbstate8[128];
 long long _mbstateL;
} __mbstate_t;

typedef __mbstate_t __darwin_mbstate_t;


typedef long int __darwin_ptrdiff_t;







typedef long unsigned int __darwin_size_t;





typedef __builtin_va_list __darwin_va_list;





typedef int __darwin_wchar_t;




typedef __darwin_wchar_t __darwin_rune_t;


typedef int __darwin_wint_t;




typedef unsigned long __darwin_clock_t;
typedef __uint32_t __darwin_socklen_t;
typedef long __darwin_ssize_t;
typedef long __darwin_time_t;





typedef signed char int8_t;
typedef short int16_t;
typedef int int32_t;
typedef long long int64_t;

typedef unsigned char u_int8_t;
typedef unsigned short u_int16_t;
typedef unsigned int u_int32_t;
typedef unsigned long long u_int64_t;


typedef int64_t register_t;






typedef __darwin_intptr_t intptr_t;
typedef unsigned long uintptr_t;




typedef u_int64_t user_addr_t;
typedef u_int64_t user_size_t;
typedef int64_t user_ssize_t;
typedef int64_t user_long_t;
typedef u_int64_t user_ulong_t;
typedef int64_t user_time_t;
typedef int64_t user_off_t;
typedef u_int64_t syscall_arg_t;
typedef __int64_t __darwin_blkcnt_t;
typedef __int32_t __darwin_blksize_t;
typedef __int32_t __darwin_dev_t;
typedef unsigned int __darwin_fsblkcnt_t;
typedef unsigned int __darwin_fsfilcnt_t;
typedef __uint32_t __darwin_gid_t;
typedef __uint32_t __darwin_id_t;
typedef __uint64_t __darwin_ino64_t;

typedef __darwin_ino64_t __darwin_ino_t;



typedef __darwin_natural_t __darwin_mach_port_name_t;
typedef __darwin_mach_port_name_t __darwin_mach_port_t;
typedef __uint16_t __darwin_mode_t;
typedef __int64_t __darwin_off_t;
typedef __int32_t __darwin_pid_t;
typedef __uint32_t __darwin_sigset_t;
typedef __int32_t __darwin_suseconds_t;
typedef __uint32_t __darwin_uid_t;
typedef __uint32_t __darwin_useconds_t;
typedef unsigned char __darwin_uuid_t[16];
typedef char __darwin_uuid_string_t[37];


struct __darwin_pthread_handler_rec {
 void (*__routine)(void *);
 void *__arg;
 struct __darwin_pthread_handler_rec *__next;
};

struct _opaque_pthread_attr_t {
 long __sig;
 char __opaque[56];
};

struct _opaque_pthread_cond_t {
 long __sig;
 char __opaque[40];
};

struct _opaque_pthread_condattr_t {
 long __sig;
 char __opaque[8];
};

struct _opaque_pthread_mutex_t {
 long __sig;
 char __opaque[56];
};

struct _opaque_pthread_mutexattr_t {
 long __sig;
 char __opaque[8];
};

struct _opaque_pthread_once_t {
 long __sig;
 char __opaque[8];
};

struct _opaque_pthread_rwlock_t {
 long __sig;
 char __opaque[192];
};

struct _opaque_pthread_rwlockattr_t {
 long __sig;
 char __opaque[16];
};

struct _opaque_pthread_t {
 long __sig;
 struct __darwin_pthread_handler_rec *__cleanup_stack;
 char __opaque[8176];
};

typedef struct _opaque_pthread_attr_t __darwin_pthread_attr_t;
typedef struct _opaque_pthread_cond_t __darwin_pthread_cond_t;
typedef struct _opaque_pthread_condattr_t __darwin_pthread_condattr_t;
typedef unsigned long __darwin_pthread_key_t;
typedef struct _opaque_pthread_mutex_t __darwin_pthread_mutex_t;
typedef struct _opaque_pthread_mutexattr_t __darwin_pthread_mutexattr_t;
typedef struct _opaque_pthread_once_t __darwin_pthread_once_t;
typedef struct _opaque_pthread_rwlock_t __darwin_pthread_rwlock_t;
typedef struct _opaque_pthread_rwlockattr_t __darwin_pthread_rwlockattr_t;
typedef struct _opaque_pthread_t *__darwin_pthread_t;








typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned int uint32_t;
typedef unsigned long long uint64_t;


typedef int8_t int_least8_t;
typedef int16_t int_least16_t;
typedef int32_t int_least32_t;
typedef int64_t int_least64_t;
typedef uint8_t uint_least8_t;
typedef uint16_t uint_least16_t;
typedef uint32_t uint_least32_t;
typedef uint64_t uint_least64_t;



typedef int8_t int_fast8_t;
typedef int16_t int_fast16_t;
typedef int32_t int_fast32_t;
typedef int64_t int_fast64_t;
typedef uint8_t uint_fast8_t;
typedef uint16_t uint_fast16_t;
typedef uint32_t uint_fast32_t;
typedef uint64_t uint_fast64_t;
typedef long int intmax_t;
typedef long unsigned int uintmax_t;



static __inline__
uint16_t
_OSSwapInt16(
    uint16_t data
)
{

  return (uint16_t)(data << 8 | data >> 8);
}

static __inline__
uint32_t
_OSSwapInt32(
    uint32_t data
)
{

  data = __builtin_bswap32(data);





  return data;
}

static __inline__
uint64_t
_OSSwapInt64(
    uint64_t data
)
{

    return __builtin_bswap64(data);
}



static __inline__
uint16_t
OSReadSwapInt16(
    const volatile void * base,
    uintptr_t offset
)
{
    uint16_t result;

    result = *(volatile uint16_t *)((volatile uintptr_t)base + offset);
    return _OSSwapInt16(result);
}

static __inline__
uint32_t
OSReadSwapInt32(
    const volatile void * base,
    uintptr_t offset
)
{
    uint32_t result;

    result = *(volatile uint32_t *)((volatile uintptr_t)base + offset);
    return _OSSwapInt32(result);
}

static __inline__
uint64_t
OSReadSwapInt64(
    const volatile void * base,
    uintptr_t offset
)
{
    volatile uint32_t * inp;
    union ullc {
        uint64_t ull;
        uint32_t ul[2];
    } outv;

    inp = (volatile uint32_t *)((volatile uintptr_t)base + offset);
    outv.ul[0] = inp[1];
    outv.ul[1] = inp[0];
    outv.ul[0] = _OSSwapInt32(outv.ul[0]);
    outv.ul[1] = _OSSwapInt32(outv.ul[1]);
    return outv.ull;
}



static __inline__
void
OSWriteSwapInt16(
    volatile void * base,
    uintptr_t offset,
    uint16_t data
)
{
    *(volatile uint16_t *)((volatile uintptr_t)base + offset) = _OSSwapInt16(data);
}

static __inline__
void
OSWriteSwapInt32(
    volatile void * base,
    uintptr_t offset,
    uint32_t data
)
{
    *(volatile uint32_t *)((volatile uintptr_t)base + offset) = _OSSwapInt32(data);
}

static __inline__
void
OSWriteSwapInt64(
    volatile void * base,
    uintptr_t offset,
    uint64_t data
)
{
    *(volatile uint64_t *)((volatile uintptr_t)base + offset) = _OSSwapInt64(data);
}


typedef unsigned char u_char;
typedef unsigned short u_short;
typedef unsigned int u_int;

typedef unsigned long u_long;


typedef unsigned short ushort;
typedef unsigned int uint;


typedef u_int64_t u_quad_t;
typedef int64_t quad_t;
typedef quad_t * qaddr_t;


typedef char * caddr_t;

typedef int32_t daddr_t;


typedef __darwin_dev_t dev_t;

typedef u_int32_t fixpt_t;


typedef __darwin_blkcnt_t blkcnt_t;
typedef __darwin_blksize_t blksize_t;
typedef __darwin_gid_t gid_t;
typedef __uint32_t in_addr_t;
typedef __uint16_t in_port_t;
typedef __darwin_ino_t ino_t;


typedef __darwin_ino64_t ino64_t;


typedef __int32_t key_t;
typedef __darwin_mode_t mode_t;
typedef __uint16_t nlink_t;
typedef __darwin_id_t id_t;
typedef __darwin_pid_t pid_t;
typedef __darwin_off_t off_t;

typedef int32_t segsz_t;
typedef int32_t swblk_t;


typedef __darwin_uid_t uid_t;
static inline __int32_t major(__uint32_t _x)
{
 return (__int32_t)(((__uint32_t)_x >> 24) & 0xff);
}

static inline __int32_t minor(__uint32_t _x)
{
 return (__int32_t)((_x) & 0xffffff);
}

static inline dev_t makedev(__uint32_t _major, __uint32_t _minor)
{
 return (dev_t)(((_major) << 24) | (_minor));
}
typedef __darwin_clock_t clock_t;
typedef __darwin_size_t size_t;
typedef __darwin_ssize_t ssize_t;
typedef __darwin_time_t time_t;

typedef __darwin_useconds_t useconds_t;
typedef __darwin_suseconds_t suseconds_t;


typedef __darwin_size_t rsize_t;
typedef int errno_t;








extern "C" {
typedef struct fd_set {
 __int32_t fds_bits[((((1024) % ((sizeof(__int32_t) * 8))) == 0) ? ((1024) / ((sizeof(__int32_t) * 8))) : (((1024) / ((sizeof(__int32_t) * 8))) + 1))];
} fd_set;
}


static inline int
__darwin_fd_isset(int _n, const struct fd_set *_p)
{
 return (_p->fds_bits[(unsigned long)_n/(sizeof(__int32_t) * 8)] & ((__int32_t)(((unsigned long)1)<<((unsigned long)_n % (sizeof(__int32_t) * 8)))));
}




typedef __int32_t fd_mask;










typedef __darwin_pthread_attr_t pthread_attr_t;
typedef __darwin_pthread_cond_t pthread_cond_t;
typedef __darwin_pthread_condattr_t pthread_condattr_t;
typedef __darwin_pthread_mutex_t pthread_mutex_t;
typedef __darwin_pthread_mutexattr_t pthread_mutexattr_t;
typedef __darwin_pthread_once_t pthread_once_t;
typedef __darwin_pthread_rwlock_t pthread_rwlock_t;
typedef __darwin_pthread_rwlockattr_t pthread_rwlockattr_t;
typedef __darwin_pthread_t pthread_t;



typedef __darwin_pthread_key_t pthread_key_t;




typedef __darwin_fsblkcnt_t fsblkcnt_t;
typedef __darwin_fsfilcnt_t fsfilcnt_t;
typedef __builtin_va_list va_list;
typedef __builtin_va_list __gnuc_va_list;
typedef int __darwin_nl_item;
typedef int __darwin_wctrans_t;

typedef __uint32_t __darwin_wctype_t;

typedef enum {
 P_ALL,
 P_PID,
 P_PGID
} idtype_t;
typedef int sig_atomic_t;
struct __darwin_arm_exception_state
{
 __uint32_t __exception;
 __uint32_t __fsr;
 __uint32_t __far;
};
struct __darwin_arm_exception_state64
{
 __uint64_t __far;
 __uint32_t __esr;
 __uint32_t __exception;
};
struct __darwin_arm_thread_state
{
 __uint32_t __r[13];
 __uint32_t __sp;
 __uint32_t __lr;
 __uint32_t __pc;
 __uint32_t __cpsr;
};
struct __darwin_arm_thread_state64
{
 __uint64_t __x[29];
 __uint64_t __fp;
 __uint64_t __lr;
 __uint64_t __sp;
 __uint64_t __pc;
 __uint32_t __cpsr;
 __uint32_t __pad;
};
struct __darwin_arm_vfp_state
{
 __uint32_t __r[64];
 __uint32_t __fpscr;

};
struct __darwin_arm_neon_state64
{
 __uint128_t __v[32];
 __uint32_t __fpsr;
 __uint32_t __fpcr;
};

struct __darwin_arm_neon_state
{
 __uint128_t __v[16];
 __uint32_t __fpsr;
 __uint32_t __fpcr;
};
struct arm_legacy_debug_state
{
 __uint32_t __bvr[16];
 __uint32_t __bcr[16];
 __uint32_t __wvr[16];
 __uint32_t __wcr[16];
};
struct __darwin_arm_debug_state32
{
 __uint32_t __bvr[16];
 __uint32_t __bcr[16];
 __uint32_t __wvr[16];
 __uint32_t __wcr[16];
 __uint64_t __mdscr_el1;
};


struct __darwin_arm_debug_state64
{
 __uint64_t __bvr[16];
 __uint64_t __bcr[16];
 __uint64_t __wvr[16];
 __uint64_t __wcr[16];
 __uint64_t __mdscr_el1;
};
struct __darwin_arm_cpmu_state64
{
 __uint64_t __ctrs[16];
};




struct __darwin_mcontext32
{
 struct __darwin_arm_exception_state __es;
 struct __darwin_arm_thread_state __ss;
 struct __darwin_arm_vfp_state __fs;
};
struct __darwin_mcontext64
{
 struct __darwin_arm_exception_state64 __es;
 struct __darwin_arm_thread_state64 __ss;
 struct __darwin_arm_neon_state64 __ns;
};
typedef struct __darwin_mcontext64 *mcontext_t;



struct __darwin_sigaltstack
{
 void *ss_sp;
 __darwin_size_t ss_size;
 int ss_flags;
};
typedef struct __darwin_sigaltstack stack_t;


struct __darwin_ucontext
{
 int uc_onstack;
 __darwin_sigset_t uc_sigmask;
 struct __darwin_sigaltstack uc_stack;
 struct __darwin_ucontext *uc_link;
 __darwin_size_t uc_mcsize;
 struct __darwin_mcontext64 *uc_mcontext;



};


typedef struct __darwin_ucontext ucontext_t;


typedef __darwin_sigset_t sigset_t;



union sigval {

 int sival_int;
 void *sival_ptr;
};





struct sigevent {
 int sigev_notify;
 int sigev_signo;
 union sigval sigev_value;
 void (*sigev_notify_function)(union sigval);
 pthread_attr_t *sigev_notify_attributes;
};


typedef struct __siginfo {
 int si_signo;
 int si_errno;
 int si_code;
 pid_t si_pid;
 uid_t si_uid;
 int si_status;
 void *si_addr;
 union sigval si_value;
 long si_band;
 unsigned long __pad[7];
} siginfo_t;
union __sigaction_u {
 void (*__sa_handler)(int);
 void (*__sa_sigaction)(int, struct __siginfo *,
         void *);
};


struct __sigaction {
 union __sigaction_u __sigaction_u;
 void (*sa_tramp)(void *, int, int, siginfo_t *, void *);
 sigset_t sa_mask;
 int sa_flags;
};




struct sigaction {
 union __sigaction_u __sigaction_u;
 sigset_t sa_mask;
 int sa_flags;
};
typedef void (*sig_t)(int);
struct sigvec {
 void (*sv_handler)(int);
 int sv_mask;
 int sv_flags;
};
struct sigstack {
 char *ss_sp;
 int ss_onstack;
};
extern "C" {
void (*signal(int, void (*)(int)))(int);
}
struct timeval
{
 __darwin_time_t tv_sec;
 __darwin_suseconds_t tv_usec;
};








typedef __uint64_t rlim_t;
struct rusage {
 struct timeval ru_utime;
 struct timeval ru_stime;
 long ru_maxrss;

 long ru_ixrss;
 long ru_idrss;
 long ru_isrss;
 long ru_minflt;
 long ru_majflt;
 long ru_nswap;
 long ru_inblock;
 long ru_oublock;
 long ru_msgsnd;
 long ru_msgrcv;
 long ru_nsignals;
 long ru_nvcsw;
 long ru_nivcsw;


};
typedef void *rusage_info_t;

struct rusage_info_v0 {
 uint8_t ri_uuid[16];
 uint64_t ri_user_time;
 uint64_t ri_system_time;
 uint64_t ri_pkg_idle_wkups;
 uint64_t ri_interrupt_wkups;
 uint64_t ri_pageins;
 uint64_t ri_wired_size;
 uint64_t ri_resident_size;
 uint64_t ri_phys_footprint;
 uint64_t ri_proc_start_abstime;
 uint64_t ri_proc_exit_abstime;
};

struct rusage_info_v1 {
 uint8_t ri_uuid[16];
 uint64_t ri_user_time;
 uint64_t ri_system_time;
 uint64_t ri_pkg_idle_wkups;
 uint64_t ri_interrupt_wkups;
 uint64_t ri_pageins;
 uint64_t ri_wired_size;
 uint64_t ri_resident_size;
 uint64_t ri_phys_footprint;
 uint64_t ri_proc_start_abstime;
 uint64_t ri_proc_exit_abstime;
 uint64_t ri_child_user_time;
 uint64_t ri_child_system_time;
 uint64_t ri_child_pkg_idle_wkups;
 uint64_t ri_child_interrupt_wkups;
 uint64_t ri_child_pageins;
 uint64_t ri_child_elapsed_abstime;
};

struct rusage_info_v2 {
 uint8_t ri_uuid[16];
 uint64_t ri_user_time;
 uint64_t ri_system_time;
 uint64_t ri_pkg_idle_wkups;
 uint64_t ri_interrupt_wkups;
 uint64_t ri_pageins;
 uint64_t ri_wired_size;
 uint64_t ri_resident_size;
 uint64_t ri_phys_footprint;
 uint64_t ri_proc_start_abstime;
 uint64_t ri_proc_exit_abstime;
 uint64_t ri_child_user_time;
 uint64_t ri_child_system_time;
 uint64_t ri_child_pkg_idle_wkups;
 uint64_t ri_child_interrupt_wkups;
 uint64_t ri_child_pageins;
 uint64_t ri_child_elapsed_abstime;
 uint64_t ri_diskio_bytesread;
 uint64_t ri_diskio_byteswritten;
};

struct rusage_info_v3 {
 uint8_t ri_uuid[16];
 uint64_t ri_user_time;
 uint64_t ri_system_time;
 uint64_t ri_pkg_idle_wkups;
 uint64_t ri_interrupt_wkups;
 uint64_t ri_pageins;
 uint64_t ri_wired_size;
 uint64_t ri_resident_size;
 uint64_t ri_phys_footprint;
 uint64_t ri_proc_start_abstime;
 uint64_t ri_proc_exit_abstime;
 uint64_t ri_child_user_time;
 uint64_t ri_child_system_time;
 uint64_t ri_child_pkg_idle_wkups;
 uint64_t ri_child_interrupt_wkups;
 uint64_t ri_child_pageins;
 uint64_t ri_child_elapsed_abstime;
 uint64_t ri_diskio_bytesread;
 uint64_t ri_diskio_byteswritten;
 uint64_t ri_cpu_time_qos_default;
 uint64_t ri_cpu_time_qos_maintenance;
 uint64_t ri_cpu_time_qos_background;
 uint64_t ri_cpu_time_qos_utility;
 uint64_t ri_cpu_time_qos_legacy;
 uint64_t ri_cpu_time_qos_user_initiated;
 uint64_t ri_cpu_time_qos_user_interactive;
 uint64_t ri_billed_system_time;
 uint64_t ri_serviced_system_time;
};

struct rusage_info_v4 {
 uint8_t ri_uuid[16];
 uint64_t ri_user_time;
 uint64_t ri_system_time;
 uint64_t ri_pkg_idle_wkups;
 uint64_t ri_interrupt_wkups;
 uint64_t ri_pageins;
 uint64_t ri_wired_size;
 uint64_t ri_resident_size;
 uint64_t ri_phys_footprint;
 uint64_t ri_proc_start_abstime;
 uint64_t ri_proc_exit_abstime;
 uint64_t ri_child_user_time;
 uint64_t ri_child_system_time;
 uint64_t ri_child_pkg_idle_wkups;
 uint64_t ri_child_interrupt_wkups;
 uint64_t ri_child_pageins;
 uint64_t ri_child_elapsed_abstime;
 uint64_t ri_diskio_bytesread;
 uint64_t ri_diskio_byteswritten;
 uint64_t ri_cpu_time_qos_default;
 uint64_t ri_cpu_time_qos_maintenance;
 uint64_t ri_cpu_time_qos_background;
 uint64_t ri_cpu_time_qos_utility;
 uint64_t ri_cpu_time_qos_legacy;
 uint64_t ri_cpu_time_qos_user_initiated;
 uint64_t ri_cpu_time_qos_user_interactive;
 uint64_t ri_billed_system_time;
 uint64_t ri_serviced_system_time;
 uint64_t ri_logical_writes;
 uint64_t ri_lifetime_max_phys_footprint;
 uint64_t ri_instructions;
 uint64_t ri_cycles;
 uint64_t ri_billed_energy;
 uint64_t ri_serviced_energy;

 uint64_t ri_unused[2];
};

typedef struct rusage_info_v4 rusage_info_current;
struct rlimit {
 rlim_t rlim_cur;
 rlim_t rlim_max;
};
struct proc_rlimit_control_wakeupmon {
 uint32_t wm_flags;
 int32_t wm_rate;
};
extern "C" {
int getpriority(int, id_t);

int getiopolicy_np(int, int) __attribute__((availability(ios,introduced=2.0)));

int getrlimit(int, struct rlimit *) __asm("_" "getrlimit" );
int getrusage(int, struct rusage *);
int setpriority(int, id_t, int);

int setiopolicy_np(int, int, int) __attribute__((availability(ios,introduced=2.0)));

int setrlimit(int, const struct rlimit *) __asm("_" "setrlimit" );
}
union wait {
 int w_status;



 struct {

  unsigned int w_Termsig:7,
    w_Coredump:1,
    w_Retcode:8,
    w_Filler:16;







 } w_T;





 struct {

  unsigned int w_Stopval:8,
    w_Stopsig:8,
    w_Filler:16;






 } w_S;
};
extern "C" {
pid_t wait(int *) __asm("_" "wait" );
pid_t waitpid(pid_t, int *, int) __asm("_" "waitpid" );

int waitid(idtype_t, id_t, siginfo_t *, int) __asm("_" "waitid" );


pid_t wait3(int *, int, struct rusage *);
pid_t wait4(pid_t, int *, int, struct rusage *);

}

extern "C" {
void *alloca(size_t);
}








typedef __darwin_ct_rune_t ct_rune_t;
typedef __darwin_rune_t rune_t;



typedef struct {
 int quot;
 int rem;
} div_t;

typedef struct {
 long quot;
 long rem;
} ldiv_t;


typedef struct {
 long long quot;
 long long rem;
} lldiv_t;



extern int __mb_cur_max;
extern "C" {
void abort(void) __attribute__((noreturn));
int abs(int) __attribute__((const));
int atexit(void (* _Nonnull)(void));
double atof(const char *);
int atoi(const char *);
long atol(const char *);

long long
  atoll(const char *);

void *bsearch(const void *__key, const void *__base, size_t __nel,
     size_t __width, int (* _Nonnull __compar)(const void *, const void *));
void *calloc(size_t __count, size_t __size) __attribute__((__warn_unused_result__)) __attribute__((alloc_size(1,2)));
div_t div(int, int) __attribute__((const));
void exit(int) __attribute__((noreturn));
void free(void *);
char *getenv(const char *);
long labs(long) __attribute__((const));
ldiv_t ldiv(long, long) __attribute__((const));

long long
  llabs(long long);
lldiv_t lldiv(long long, long long);

void *malloc(size_t __size) __attribute__((__warn_unused_result__)) __attribute__((alloc_size(1)));
int mblen(const char *__s, size_t __n);
size_t mbstowcs(wchar_t * , const char * , size_t);
int mbtowc(wchar_t * , const char * , size_t);
int posix_memalign(void **__memptr, size_t __alignment, size_t __size) __attribute__((availability(ios,introduced=3.0)));
void qsort(void *__base, size_t __nel, size_t __width,
     int (* _Nonnull __compar)(const void *, const void *));
int rand(void) __attribute__((__availability__(swift, unavailable, message="Use arc4random instead.")));
void *realloc(void *__ptr, size_t __size) __attribute__((__warn_unused_result__)) __attribute__((alloc_size(2)));
void srand(unsigned) __attribute__((__availability__(swift, unavailable, message="Use arc4random instead.")));
double strtod(const char *, char **) __asm("_" "strtod" );
float strtof(const char *, char **) __asm("_" "strtof" );
long strtol(const char *__str, char **__endptr, int __base);
long double
  strtold(const char *, char **);

long long
  strtoll(const char *__str, char **__endptr, int __base);

unsigned long
  strtoul(const char *__str, char **__endptr, int __base);

unsigned long long
  strtoull(const char *__str, char **__endptr, int __base);
__attribute__((__availability__(swift, unavailable, message="Use posix_spawn APIs or NSTask instead.")))
__attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,unavailable)))
__attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
int system(const char *) __asm("_" "system" );



size_t wcstombs(char * , const wchar_t * , size_t);
int wctomb(char *, wchar_t);


void _Exit(int) __attribute__((noreturn));
long a64l(const char *);
double drand48(void);
char *ecvt(double, int, int *, int *);
double erand48(unsigned short[3]);
char *fcvt(double, int, int *, int *);
char *gcvt(double, int, char *);
int getsubopt(char **, char * const *, char **);
int grantpt(int);

char *initstate(unsigned, char *, size_t);



long jrand48(unsigned short[3]) __attribute__((__availability__(swift, unavailable, message="Use arc4random instead.")));
char *l64a(long);
void lcong48(unsigned short[7]);
long lrand48(void) __attribute__((__availability__(swift, unavailable, message="Use arc4random instead.")));
char *mktemp(char *);
int mkstemp(char *);
long mrand48(void) __attribute__((__availability__(swift, unavailable, message="Use arc4random instead.")));
long nrand48(unsigned short[3]) __attribute__((__availability__(swift, unavailable, message="Use arc4random instead.")));
int posix_openpt(int);
char *ptsname(int);


int ptsname_r(int fildes, char *buffer, size_t buflen) __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3))) __attribute__((availability(tvos,introduced=11.3))) __attribute__((availability(watchos,introduced=4.3)));


int putenv(char *) __asm("_" "putenv" );
long random(void) __attribute__((__availability__(swift, unavailable, message="Use arc4random instead.")));
int rand_r(unsigned *) __attribute__((__availability__(swift, unavailable, message="Use arc4random instead.")));

char *realpath(const char * , char * ) __asm("_" "realpath" "$DARWIN_EXTSN");



unsigned short
 *seed48(unsigned short[3]);
int setenv(const char * __name, const char * __value, int __overwrite) __asm("_" "setenv" );

void setkey(const char *) __asm("_" "setkey" );



char *setstate(const char *);
void srand48(long);

void srandom(unsigned);



int unlockpt(int);

int unsetenv(const char *) __asm("_" "unsetenv" );
uint32_t arc4random(void);
void arc4random_addrandom(unsigned char * , int )
    __attribute__((availability(macosx,introduced=10.0))) __attribute__((availability(macosx,deprecated=10.12,message="use arc4random_stir")))
    __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(ios,deprecated=10.0,message="use arc4random_stir")))
    __attribute__((availability(tvos,introduced=2.0))) __attribute__((availability(tvos,deprecated=10.0,message="use arc4random_stir")))
    __attribute__((availability(watchos,introduced=1.0))) __attribute__((availability(watchos,deprecated=3.0,message="use arc4random_stir")));
void arc4random_buf(void * __buf, size_t __nbytes) __attribute__((availability(ios,introduced=4.3)));
void arc4random_stir(void);
uint32_t
  arc4random_uniform(uint32_t __upper_bound) __attribute__((availability(ios,introduced=4.3)));

int atexit_b(void (^ _Nonnull)(void)) __attribute__((availability(ios,introduced=3.2)));
void *bsearch_b(const void *__key, const void *__base, size_t __nel,
     size_t __width, int (^ _Nonnull __compar)(const void *, const void *)) __attribute__((availability(ios,introduced=3.2)));



char *cgetcap(char *, const char *, int);
int cgetclose(void);
int cgetent(char **, char **, const char *);
int cgetfirst(char **, char **);
int cgetmatch(const char *, const char *);
int cgetnext(char **, char **);
int cgetnum(char *, const char *, long *);
int cgetset(const char *);
int cgetstr(char *, const char *, char **);
int cgetustr(char *, const char *, char **);

int daemon(int, int) __asm("_" "daemon" ) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Use posix_spawn APIs instead."))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
char *devname(dev_t, mode_t);
char *devname_r(dev_t, mode_t, char *buf, int len);
char *getbsize(int *, long *);
int getloadavg(double [], int);
const char
 *getprogname(void);

int heapsort(void *__base, size_t __nel, size_t __width,
     int (* _Nonnull __compar)(const void *, const void *));

int heapsort_b(void *__base, size_t __nel, size_t __width,
     int (^ _Nonnull __compar)(const void *, const void *)) __attribute__((availability(ios,introduced=3.2)));

int mergesort(void *__base, size_t __nel, size_t __width,
     int (* _Nonnull __compar)(const void *, const void *));

int mergesort_b(void *__base, size_t __nel, size_t __width,
     int (^ _Nonnull __compar)(const void *, const void *)) __attribute__((availability(ios,introduced=3.2)));

void psort(void *__base, size_t __nel, size_t __width,
     int (* _Nonnull __compar)(const void *, const void *)) __attribute__((availability(ios,introduced=3.2)));

void psort_b(void *__base, size_t __nel, size_t __width,
     int (^ _Nonnull __compar)(const void *, const void *)) __attribute__((availability(ios,introduced=3.2)));

void psort_r(void *__base, size_t __nel, size_t __width, void *,
     int (* _Nonnull __compar)(void *, const void *, const void *)) __attribute__((availability(ios,introduced=3.2)));

void qsort_b(void *__base, size_t __nel, size_t __width,
     int (^ _Nonnull __compar)(const void *, const void *)) __attribute__((availability(ios,introduced=3.2)));

void qsort_r(void *__base, size_t __nel, size_t __width, void *,
     int (* _Nonnull __compar)(void *, const void *, const void *));
int radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
     unsigned __endbyte);
void setprogname(const char *);
int sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,
     unsigned __endbyte);
void sranddev(void);
void srandomdev(void);
void *reallocf(void *__ptr, size_t __size) __attribute__((alloc_size(2)));

long long
  strtoq(const char *__str, char **__endptr, int __base);
unsigned long long
  strtouq(const char *__str, char **__endptr, int __base);

extern char *suboptarg;
void *valloc(size_t) __attribute__((alloc_size(1)));






}
extern "C" {
void __assert_rtn(const char *, const char *, int, const char *) __attribute__((noreturn)) __attribute__((__disable_tail_calls__));



}
typedef __darwin_wint_t wint_t;
typedef struct {
 __darwin_rune_t __min;
 __darwin_rune_t __max;
 __darwin_rune_t __map;
 __uint32_t *__types;
} _RuneEntry;

typedef struct {
 int __nranges;
 _RuneEntry *__ranges;
} _RuneRange;

typedef struct {
 char __name[14];
 __uint32_t __mask;
} _RuneCharClass;

typedef struct {
 char __magic[8];
 char __encoding[32];

 __darwin_rune_t (*__sgetrune)(const char *, __darwin_size_t, char const **);
 int (*__sputrune)(__darwin_rune_t, char *, __darwin_size_t, char **);
 __darwin_rune_t __invalid_rune;

 __uint32_t __runetype[(1 <<8 )];
 __darwin_rune_t __maplower[(1 <<8 )];
 __darwin_rune_t __mapupper[(1 <<8 )];






 _RuneRange __runetype_ext;
 _RuneRange __maplower_ext;
 _RuneRange __mapupper_ext;

 void *__variable;
 int __variable_len;




 int __ncharclasses;
 _RuneCharClass *__charclasses;
} _RuneLocale;



extern "C" {
extern _RuneLocale _DefaultRuneLocale;
extern _RuneLocale *_CurrentRuneLocale;
}
extern "C" {
unsigned long ___runetype(__darwin_ct_rune_t);
__darwin_ct_rune_t ___tolower(__darwin_ct_rune_t);
__darwin_ct_rune_t ___toupper(__darwin_ct_rune_t);
}

inline int
isascii(int _c)
{
 return ((_c & ~0x7F) == 0);
}
extern "C" {
int __maskrune(__darwin_ct_rune_t, unsigned long);
}


inline int
__istype(__darwin_ct_rune_t _c, unsigned long _f)
{



 return (isascii(_c) ? !!(_DefaultRuneLocale.__runetype[_c] & _f)
  : !!__maskrune(_c, _f));

}

inline __darwin_ct_rune_t
__isctype(__darwin_ct_rune_t _c, unsigned long _f)
{



 return (_c < 0 || _c >= (1 <<8 )) ? 0 :
  !!(_DefaultRuneLocale.__runetype[_c] & _f);

}
extern "C" {
__darwin_ct_rune_t __toupper(__darwin_ct_rune_t);
__darwin_ct_rune_t __tolower(__darwin_ct_rune_t);
}


inline int
__wcwidth(__darwin_ct_rune_t _c)
{
 unsigned int _x;

 if (_c == 0)
  return (0);
 _x = (unsigned int)__maskrune(_c, 0xe0000000L|0x00040000L);
 if ((_x & 0xe0000000L) != 0)
  return ((_x & 0xe0000000L) >> 30);
 return ((_x & 0x00040000L) != 0 ? 1 : -1);
}






inline int
isalnum(int _c)
{
 return (__istype(_c, 0x00000100L|0x00000400L));
}

inline int
isalpha(int _c)
{
 return (__istype(_c, 0x00000100L));
}

inline int
isblank(int _c)
{
 return (__istype(_c, 0x00020000L));
}

inline int
iscntrl(int _c)
{
 return (__istype(_c, 0x00000200L));
}


inline int
isdigit(int _c)
{
 return (__isctype(_c, 0x00000400L));
}

inline int
isgraph(int _c)
{
 return (__istype(_c, 0x00000800L));
}

inline int
islower(int _c)
{
 return (__istype(_c, 0x00001000L));
}

inline int
isprint(int _c)
{
 return (__istype(_c, 0x00040000L));
}

inline int
ispunct(int _c)
{
 return (__istype(_c, 0x00002000L));
}

inline int
isspace(int _c)
{
 return (__istype(_c, 0x00004000L));
}

inline int
isupper(int _c)
{
 return (__istype(_c, 0x00008000L));
}


inline int
isxdigit(int _c)
{
 return (__isctype(_c, 0x00010000L));
}

inline int
toascii(int _c)
{
 return (_c & 0x7F);
}

inline int
tolower(int _c)
{
        return (__tolower(_c));
}

inline int
toupper(int _c)
{
        return (__toupper(_c));
}


inline int
digittoint(int _c)
{
 return (__maskrune(_c, 0x0F));
}

inline int
ishexnumber(int _c)
{
 return (__istype(_c, 0x00010000L));
}

inline int
isideogram(int _c)
{
 return (__istype(_c, 0x00080000L));
}

inline int
isnumber(int _c)
{
 return (__istype(_c, 0x00000400L));
}

inline int
isphonogram(int _c)
{
 return (__istype(_c, 0x00200000L));
}

inline int
isrune(int _c)
{
 return (__istype(_c, 0xFFFFFFF0L));
}

inline int
isspecial(int _c)
{
 return (__istype(_c, 0x00100000L));
}
extern "C" {
extern int * __error(void);

}





struct lconv {
 char *decimal_point;
 char *thousands_sep;
 char *grouping;
 char *int_curr_symbol;
 char *currency_symbol;
 char *mon_decimal_point;
 char *mon_thousands_sep;
 char *mon_grouping;
 char *positive_sign;
 char *negative_sign;
 char int_frac_digits;
 char frac_digits;
 char p_cs_precedes;
 char p_sep_by_space;
 char n_cs_precedes;
 char n_sep_by_space;
 char p_sign_posn;
 char n_sign_posn;
 char int_p_cs_precedes;
 char int_n_cs_precedes;
 char int_p_sep_by_space;
 char int_n_sep_by_space;
 char int_p_sign_posn;
 char int_n_sign_posn;
};



extern "C" {
struct lconv *localeconv(void);
}
extern "C" {
char *setlocale(int, const char *);
}
extern "C" {
    typedef float float_t;
    typedef double double_t;
extern int __math_errhandling(void);
extern int __fpclassifyf(float);
extern int __fpclassifyd(double);
extern int __fpclassifyl(long double);
inline __attribute__ ((__always_inline__)) int __inline_isfinitef(float);
inline __attribute__ ((__always_inline__)) int __inline_isfinited(double);
inline __attribute__ ((__always_inline__)) int __inline_isfinitel(long double);
inline __attribute__ ((__always_inline__)) int __inline_isinff(float);
inline __attribute__ ((__always_inline__)) int __inline_isinfd(double);
inline __attribute__ ((__always_inline__)) int __inline_isinfl(long double);
inline __attribute__ ((__always_inline__)) int __inline_isnanf(float);
inline __attribute__ ((__always_inline__)) int __inline_isnand(double);
inline __attribute__ ((__always_inline__)) int __inline_isnanl(long double);
inline __attribute__ ((__always_inline__)) int __inline_isnormalf(float);
inline __attribute__ ((__always_inline__)) int __inline_isnormald(double);
inline __attribute__ ((__always_inline__)) int __inline_isnormall(long double);
inline __attribute__ ((__always_inline__)) int __inline_signbitf(float);
inline __attribute__ ((__always_inline__)) int __inline_signbitd(double);
inline __attribute__ ((__always_inline__)) int __inline_signbitl(long double);

inline __attribute__ ((__always_inline__)) int __inline_isfinitef(float __x) {
    return __x == __x && __builtin_fabsf(__x) != __builtin_inff();
}
inline __attribute__ ((__always_inline__)) int __inline_isfinited(double __x) {
    return __x == __x && __builtin_fabs(__x) != __builtin_inf();
}
inline __attribute__ ((__always_inline__)) int __inline_isfinitel(long double __x) {
    return __x == __x && __builtin_fabsl(__x) != __builtin_infl();
}
inline __attribute__ ((__always_inline__)) int __inline_isinff(float __x) {
    return __builtin_fabsf(__x) == __builtin_inff();
}
inline __attribute__ ((__always_inline__)) int __inline_isinfd(double __x) {
    return __builtin_fabs(__x) == __builtin_inf();
}
inline __attribute__ ((__always_inline__)) int __inline_isinfl(long double __x) {
    return __builtin_fabsl(__x) == __builtin_infl();
}
inline __attribute__ ((__always_inline__)) int __inline_isnanf(float __x) {
    return __x != __x;
}
inline __attribute__ ((__always_inline__)) int __inline_isnand(double __x) {
    return __x != __x;
}
inline __attribute__ ((__always_inline__)) int __inline_isnanl(long double __x) {
    return __x != __x;
}
inline __attribute__ ((__always_inline__)) int __inline_signbitf(float __x) {
    union { float __f; unsigned int __u; } __u;
    __u.__f = __x;
    return (int)(__u.__u >> 31);
}
inline __attribute__ ((__always_inline__)) int __inline_signbitd(double __x) {
    union { double __f; unsigned long long __u; } __u;
    __u.__f = __x;
    return (int)(__u.__u >> 63);
}
inline __attribute__ ((__always_inline__)) int __inline_signbitl(long double __x) {
    union { long double __f; unsigned long long __u;} __u;
    __u.__f = __x;
    return (int)(__u.__u >> 63);
}

inline __attribute__ ((__always_inline__)) int __inline_isnormalf(float __x) {
    return __inline_isfinitef(__x) && __builtin_fabsf(__x) >= 1.17549435e-38F;
}
inline __attribute__ ((__always_inline__)) int __inline_isnormald(double __x) {
    return __inline_isfinited(__x) && __builtin_fabs(__x) >= 2.2250738585072014e-308;
}
inline __attribute__ ((__always_inline__)) int __inline_isnormall(long double __x) {
    return __inline_isfinitel(__x) && __builtin_fabsl(__x) >= 2.2250738585072014e-308L;
}
extern float acosf(float);
extern double acos(double);
extern long double acosl(long double);

extern float asinf(float);
extern double asin(double);
extern long double asinl(long double);

extern float atanf(float);
extern double atan(double);
extern long double atanl(long double);

extern float atan2f(float, float);
extern double atan2(double, double);
extern long double atan2l(long double, long double);

extern float cosf(float);
extern double cos(double);
extern long double cosl(long double);

extern float sinf(float);
extern double sin(double);
extern long double sinl(long double);

extern float tanf(float);
extern double tan(double);
extern long double tanl(long double);

extern float acoshf(float);
extern double acosh(double);
extern long double acoshl(long double);

extern float asinhf(float);
extern double asinh(double);
extern long double asinhl(long double);

extern float atanhf(float);
extern double atanh(double);
extern long double atanhl(long double);

extern float coshf(float);
extern double cosh(double);
extern long double coshl(long double);

extern float sinhf(float);
extern double sinh(double);
extern long double sinhl(long double);

extern float tanhf(float);
extern double tanh(double);
extern long double tanhl(long double);

extern float expf(float);
extern double exp(double);
extern long double expl(long double);

extern float exp2f(float);
extern double exp2(double);
extern long double exp2l(long double);

extern float expm1f(float);
extern double expm1(double);
extern long double expm1l(long double);

extern float logf(float);
extern double log(double);
extern long double logl(long double);

extern float log10f(float);
extern double log10(double);
extern long double log10l(long double);

extern float log2f(float);
extern double log2(double);
extern long double log2l(long double);

extern float log1pf(float);
extern double log1p(double);
extern long double log1pl(long double);

extern float logbf(float);
extern double logb(double);
extern long double logbl(long double);

extern float modff(float, float *);
extern double modf(double, double *);
extern long double modfl(long double, long double *);

extern float ldexpf(float, int);
extern double ldexp(double, int);
extern long double ldexpl(long double, int);

extern float frexpf(float, int *);
extern double frexp(double, int *);
extern long double frexpl(long double, int *);

extern int ilogbf(float);
extern int ilogb(double);
extern int ilogbl(long double);

extern float scalbnf(float, int);
extern double scalbn(double, int);
extern long double scalbnl(long double, int);

extern float scalblnf(float, long int);
extern double scalbln(double, long int);
extern long double scalblnl(long double, long int);

extern float fabsf(float);
extern double fabs(double);
extern long double fabsl(long double);

extern float cbrtf(float);
extern double cbrt(double);
extern long double cbrtl(long double);

extern float hypotf(float, float);
extern double hypot(double, double);
extern long double hypotl(long double, long double);

extern float powf(float, float);
extern double pow(double, double);
extern long double powl(long double, long double);

extern float sqrtf(float);
extern double sqrt(double);
extern long double sqrtl(long double);

extern float erff(float);
extern double erf(double);
extern long double erfl(long double);

extern float erfcf(float);
extern double erfc(double);
extern long double erfcl(long double);




extern float lgammaf(float);
extern double lgamma(double);
extern long double lgammal(long double);

extern float tgammaf(float);
extern double tgamma(double);
extern long double tgammal(long double);

extern float ceilf(float);
extern double ceil(double);
extern long double ceill(long double);

extern float floorf(float);
extern double floor(double);
extern long double floorl(long double);

extern float nearbyintf(float);
extern double nearbyint(double);
extern long double nearbyintl(long double);

extern float rintf(float);
extern double rint(double);
extern long double rintl(long double);

extern long int lrintf(float);
extern long int lrint(double);
extern long int lrintl(long double);

extern float roundf(float);
extern double round(double);
extern long double roundl(long double);

extern long int lroundf(float);
extern long int lround(double);
extern long int lroundl(long double);




extern long long int llrintf(float);
extern long long int llrint(double);
extern long long int llrintl(long double);

extern long long int llroundf(float);
extern long long int llround(double);
extern long long int llroundl(long double);


extern float truncf(float);
extern double trunc(double);
extern long double truncl(long double);

extern float fmodf(float, float);
extern double fmod(double, double);
extern long double fmodl(long double, long double);

extern float remainderf(float, float);
extern double remainder(double, double);
extern long double remainderl(long double, long double);

extern float remquof(float, float, int *);
extern double remquo(double, double, int *);
extern long double remquol(long double, long double, int *);

extern float copysignf(float, float);
extern double copysign(double, double);
extern long double copysignl(long double, long double);

extern float nanf(const char *);
extern double nan(const char *);
extern long double nanl(const char *);

extern float nextafterf(float, float);
extern double nextafter(double, double);
extern long double nextafterl(long double, long double);

extern double nexttoward(double, long double);
extern float nexttowardf(float, long double);
extern long double nexttowardl(long double, long double);

extern float fdimf(float, float);
extern double fdim(double, double);
extern long double fdiml(long double, long double);

extern float fmaxf(float, float);
extern double fmax(double, double);
extern long double fmaxl(long double, long double);

extern float fminf(float, float);
extern double fmin(double, double);
extern long double fminl(long double, long double);

extern float fmaf(float, float, float);
extern double fma(double, double, double);
extern long double fmal(long double, long double, long double);
extern float __inff(void) __attribute__((availability(ios,unavailable)));
extern double __inf(void) __attribute__((availability(ios,unavailable)));
extern long double __infl(void) __attribute__((availability(ios,unavailable)));

extern float __nan(void) __attribute__((availability(ios,unavailable)));
extern float __exp10f(float) __attribute__((availability(ios,introduced=7.0)));
extern double __exp10(double) __attribute__((availability(ios,introduced=7.0)));





inline __attribute__ ((__always_inline__)) void __sincosf(float __x, float *__sinp, float *__cosp);
inline __attribute__ ((__always_inline__)) void __sincos(double __x, double *__sinp, double *__cosp);
extern float __cospif(float) __attribute__((availability(ios,introduced=7.0)));
extern double __cospi(double) __attribute__((availability(ios,introduced=7.0)));
extern float __sinpif(float) __attribute__((availability(ios,introduced=7.0)));
extern double __sinpi(double) __attribute__((availability(ios,introduced=7.0)));
extern float __tanpif(float) __attribute__((availability(ios,introduced=7.0)));
extern double __tanpi(double) __attribute__((availability(ios,introduced=7.0)));
inline __attribute__ ((__always_inline__)) void __sincospif(float __x, float *__sinp, float *__cosp);
inline __attribute__ ((__always_inline__)) void __sincospi(double __x, double *__sinp, double *__cosp);






struct __float2 { float __sinval; float __cosval; };
struct __double2 { double __sinval; double __cosval; };

extern struct __float2 __sincosf_stret(float);
extern struct __double2 __sincos_stret(double);
extern struct __float2 __sincospif_stret(float);
extern struct __double2 __sincospi_stret(double);

inline __attribute__ ((__always_inline__)) void __sincosf(float __x, float *__sinp, float *__cosp) {
    const struct __float2 __stret = __sincosf_stret(__x);
    *__sinp = __stret.__sinval; *__cosp = __stret.__cosval;
}

inline __attribute__ ((__always_inline__)) void __sincos(double __x, double *__sinp, double *__cosp) {
    const struct __double2 __stret = __sincos_stret(__x);
    *__sinp = __stret.__sinval; *__cosp = __stret.__cosval;
}

inline __attribute__ ((__always_inline__)) void __sincospif(float __x, float *__sinp, float *__cosp) {
    const struct __float2 __stret = __sincospif_stret(__x);
    *__sinp = __stret.__sinval; *__cosp = __stret.__cosval;
}

inline __attribute__ ((__always_inline__)) void __sincospi(double __x, double *__sinp, double *__cosp) {
    const struct __double2 __stret = __sincospi_stret(__x);
    *__sinp = __stret.__sinval; *__cosp = __stret.__cosval;
}







extern double j0(double) __attribute__((availability(ios,introduced=3.2)));
extern double j1(double) __attribute__((availability(ios,introduced=3.2)));
extern double jn(int, double) __attribute__((availability(ios,introduced=3.2)));
extern double y0(double) __attribute__((availability(ios,introduced=3.2)));
extern double y1(double) __attribute__((availability(ios,introduced=3.2)));
extern double yn(int, double) __attribute__((availability(ios,introduced=3.2)));
extern double scalb(double, double);
extern int signgam;
extern long int rinttol(double) __attribute__((availability(ios,unavailable)));

extern long int roundtol(double) __attribute__((availability(ios,unavailable)));

extern double drem(double, double) __attribute__((availability(ios,unavailable)));

extern int finite(double) __attribute__((availability(ios,unavailable)));

extern double gamma(double) __attribute__((availability(ios,unavailable)));

extern double significand(double) __attribute__((availability(ios,unavailable)));
}
typedef int jmp_buf[((14 + 8 + 2) * 2)];
typedef int sigjmp_buf[((14 + 8 + 2) * 2) + 1];





extern "C" {
extern int setjmp(jmp_buf);
extern void longjmp(jmp_buf, int) __attribute__((noreturn));


int _setjmp(jmp_buf);
void _longjmp(jmp_buf, int) __attribute__((noreturn));
int sigsetjmp(sigjmp_buf, int);
void siglongjmp(sigjmp_buf, int) __attribute__((noreturn));



void longjmperror(void);

}
extern const char *const sys_signame[32];
extern const char *const sys_siglist[32];


extern "C" {
int raise(int);
}


extern "C" {
void (* _Nullable bsd_signal(int, void (* _Nullable)(int)))(int);
int kill(pid_t, int) __asm("_" "kill" );
int killpg(pid_t, int) __asm("_" "killpg" );
int pthread_kill(pthread_t, int);
int pthread_sigmask(int, const sigset_t *, sigset_t *) __asm("_" "pthread_sigmask" );
int sigaction(int, const struct sigaction * ,
     struct sigaction * );
int sigaddset(sigset_t *, int);
int sigaltstack(const stack_t * , stack_t * ) __asm("_" "sigaltstack" ) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
int sigdelset(sigset_t *, int);
int sigemptyset(sigset_t *);
int sigfillset(sigset_t *);
int sighold(int);
int sigignore(int);
int siginterrupt(int, int);
int sigismember(const sigset_t *, int);
int sigpause(int) __asm("_" "sigpause" );
int sigpending(sigset_t *);
int sigprocmask(int, const sigset_t * , sigset_t * );
int sigrelse(int);
void (* _Nullable sigset(int, void (* _Nullable)(int)))(int);
int sigsuspend(const sigset_t *) __asm("_" "sigsuspend" );
int sigwait(const sigset_t * , int * ) __asm("_" "sigwait" );

void psignal(unsigned int, const char *);
int sigblock(int);
int sigsetmask(int);
int sigvec(int, struct sigvec *, struct sigvec *);

}
typedef long int ptrdiff_t;
typedef __darwin_va_list va_list;



extern "C" {

int renameat(int, const char *, int, const char *) __attribute__((availability(ios,introduced=8.0)));






int renamex_np(const char *, const char *, unsigned int) __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
int renameatx_np(int, const char *, int, const char *, unsigned int) __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));



}

typedef __darwin_off_t fpos_t;
struct __sbuf {
 unsigned char *_base;
 int _size;
};


struct __sFILEX;
typedef struct __sFILE {
 unsigned char *_p;
 int _r;
 int _w;
 short _flags;
 short _file;
 struct __sbuf _bf;
 int _lbfsize;


 void *_cookie;
 int (* _Nullable _close)(void *);
 int (* _Nullable _read) (void *, char *, int);
 fpos_t (* _Nullable _seek) (void *, fpos_t, int);
 int (* _Nullable _write)(void *, const char *, int);


 struct __sbuf _ub;
 struct __sFILEX *_extra;
 int _ur;


 unsigned char _ubuf[3];
 unsigned char _nbuf[1];


 struct __sbuf _lb;


 int _blksize;
 fpos_t _offset;
} FILE;

extern "C" {
extern FILE *__stdinp;
extern FILE *__stdoutp;
extern FILE *__stderrp;
}
extern "C" {
void clearerr(FILE *);
int fclose(FILE *);
int feof(FILE *);
int ferror(FILE *);
int fflush(FILE *);
int fgetc(FILE *);
int fgetpos(FILE * , fpos_t *);
char *fgets(char * , int, FILE *);



FILE *fopen(const char * __filename, const char * __mode) __asm("_" "fopen" );

int fprintf(FILE * , const char * , ...) __attribute__((__format__ (__printf__, 2, 3)));
int fputc(int, FILE *);
int fputs(const char * , FILE * ) __asm("_" "fputs" );
size_t fread(void * __ptr, size_t __size, size_t __nitems, FILE * __stream);
FILE *freopen(const char * , const char * ,
                 FILE * ) __asm("_" "freopen" );
int fscanf(FILE * , const char * , ...) __attribute__((__format__ (__scanf__, 2, 3)));
int fseek(FILE *, long, int);
int fsetpos(FILE *, const fpos_t *);
long ftell(FILE *);
size_t fwrite(const void * __ptr, size_t __size, size_t __nitems, FILE * __stream) __asm("_" "fwrite" );
int getc(FILE *);
int getchar(void);
char *gets(char *);
void perror(const char *);
int printf(const char * , ...) __attribute__((__format__ (__printf__, 1, 2)));
int putc(int, FILE *);
int putchar(int);
int puts(const char *);
int remove(const char *);
int rename (const char *__old, const char *__new);
void rewind(FILE *);
int scanf(const char * , ...) __attribute__((__format__ (__scanf__, 1, 2)));
void setbuf(FILE * , char * );
int setvbuf(FILE * , char * , int, size_t);
int sprintf(char * , const char * , ...) __attribute__((__format__ (__printf__, 2, 3))) __attribute__((__availability__(swift, unavailable, message="Use snprintf instead.")));
int sscanf(const char * , const char * , ...) __attribute__((__format__ (__scanf__, 2, 3)));
FILE *tmpfile(void);

__attribute__((__availability__(swift, unavailable, message="Use mkstemp(3) instead.")))

__attribute__((deprecated("This function is provided for compatibility reasons only.  Due to security concerns inherent in the design of tmpnam(3), it is highly recommended that you use mkstemp(3) instead.")))

char *tmpnam(char *);
int ungetc(int, FILE *);
int vfprintf(FILE * , const char * , va_list) __attribute__((__format__ (__printf__, 2, 0)));
int vprintf(const char * , va_list) __attribute__((__format__ (__printf__, 1, 0)));
int vsprintf(char * , const char * , va_list) __attribute__((__format__ (__printf__, 2, 0))) __attribute__((__availability__(swift, unavailable, message="Use vsnprintf instead.")));
}
extern "C" {



char *ctermid(char *);





FILE *fdopen(int, const char *) __asm("_" "fdopen" );

int fileno(FILE *);
}
extern "C" {
int pclose(FILE *) __attribute__((__availability__(swift, unavailable, message="Use posix_spawn APIs or NSTask instead.")));



FILE *popen(const char *, const char *) __asm("_" "popen" ) __attribute__((__availability__(swift, unavailable, message="Use posix_spawn APIs or NSTask instead.")));

}
extern "C" {
int __srget(FILE *);
int __svfscanf(FILE *, const char *, va_list) __attribute__((__format__ (__scanf__, 2, 0)));
int __swbuf(int, FILE *);
}







inline __attribute__ ((__always_inline__)) int __sputc(int _c, FILE *_p) {
 if (--_p->_w >= 0 || (_p->_w >= _p->_lbfsize && (char)_c != '\n'))
  return (*_p->_p++ = _c);
 else
  return (__swbuf(_c, _p));
}
extern "C" {
void flockfile(FILE *);
int ftrylockfile(FILE *);
void funlockfile(FILE *);
int getc_unlocked(FILE *);
int getchar_unlocked(void);
int putc_unlocked(int, FILE *);
int putchar_unlocked(int);



int getw(FILE *);
int putw(int, FILE *);


__attribute__((__availability__(swift, unavailable, message="Use mkstemp(3) instead.")))

__attribute__((deprecated("This function is provided for compatibility reasons only.  Due to security concerns inherent in the design of tempnam(3), it is highly recommended that you use mkstemp(3) instead.")))

char *tempnam(const char *__dir, const char *__prefix) __asm("_" "tempnam" );
}
extern "C" {
int fseeko(FILE * __stream, off_t __offset, int __whence);
off_t ftello(FILE * __stream);
}



extern "C" {
int snprintf(char * __str, size_t __size, const char * __format, ...) __attribute__((__format__ (__printf__, 3, 4)));
int vfscanf(FILE * __stream, const char * __format, va_list) __attribute__((__format__ (__scanf__, 2, 0)));
int vscanf(const char * __format, va_list) __attribute__((__format__ (__scanf__, 1, 0)));
int vsnprintf(char * __str, size_t __size, const char * __format, va_list) __attribute__((__format__ (__printf__, 3, 0)));
int vsscanf(const char * __str, const char * __format, va_list) __attribute__((__format__ (__scanf__, 2, 0)));
}
extern "C" {
int dprintf(int, const char * , ...) __attribute__((__format__ (__printf__, 2, 3))) __attribute__((availability(ios,introduced=4.3)));
int vdprintf(int, const char * , va_list) __attribute__((__format__ (__printf__, 2, 0))) __attribute__((availability(ios,introduced=4.3)));
ssize_t getdelim(char ** __linep, size_t * __linecapp, int __delimiter, FILE * __stream) __attribute__((availability(ios,introduced=4.3)));
ssize_t getline(char ** __linep, size_t * __linecapp, FILE * __stream) __attribute__((availability(ios,introduced=4.3)));
FILE *fmemopen(void * __buf, size_t __size, const char * __mode) __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
FILE *open_memstream(char **__bufp, size_t *__sizep) __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
}







extern "C" {
extern const int sys_nerr;
extern const char *const sys_errlist[];

int asprintf(char ** , const char * , ...) __attribute__((__format__ (__printf__, 2, 3)));
char *ctermid_r(char *);
char *fgetln(FILE *, size_t *);
const char *fmtcheck(const char *, const char *);
int fpurge(FILE *);
void setbuffer(FILE *, char *, int);
int setlinebuf(FILE *);
int vasprintf(char ** , const char * , va_list) __attribute__((__format__ (__printf__, 2, 0)));
FILE *zopen(const char *, const char *, int);





FILE *funopen(const void *,
                 int (* _Nullable)(void *, char *, int),
                 int (* _Nullable)(void *, const char *, int),
                 fpos_t (* _Nullable)(void *, fpos_t, int),
                 int (* _Nullable)(void *));
}

extern "C" {
void *memchr(const void *__s, int __c, size_t __n);
int memcmp(const void *__s1, const void *__s2, size_t __n);
void *memcpy(void *__dst, const void *__src, size_t __n);
void *memmove(void *__dst, const void *__src, size_t __len);
void *memset(void *__b, int __c, size_t __len);
char *strcat(char *__s1, const char *__s2);
char *strchr(const char *__s, int __c);
int strcmp(const char *__s1, const char *__s2);
int strcoll(const char *__s1, const char *__s2);
char *strcpy(char *__dst, const char *__src);
size_t strcspn(const char *__s, const char *__charset);
char *strerror(int __errnum) __asm("_" "strerror" );
size_t strlen(const char *__s);
char *strncat(char *__s1, const char *__s2, size_t __n);
int strncmp(const char *__s1, const char *__s2, size_t __n);
char *strncpy(char *__dst, const char *__src, size_t __n);
char *strpbrk(const char *__s, const char *__charset);
char *strrchr(const char *__s, int __c);
size_t strspn(const char *__s, const char *__charset);
char *strstr(const char *__big, const char *__little);
char *strtok(char *__str, const char *__sep);
size_t strxfrm(char *__s1, const char *__s2, size_t __n);
}
extern "C" {
char *strtok_r(char *__str, const char *__sep, char **__lasts);
}
extern "C" {
int strerror_r(int __errnum, char *__strerrbuf, size_t __buflen);
char *strdup(const char *__s1);
void *memccpy(void *__dst, const void *__src, int __c, size_t __n);
}
extern "C" {
char *stpcpy(char *__dst, const char *__src);
char *stpncpy(char *__dst, const char *__src, size_t __n) __attribute__((availability(ios,introduced=4.3)));
char *strndup(const char *__s1, size_t __n) __attribute__((availability(ios,introduced=4.3)));
size_t strnlen(const char *__s1, size_t __n) __attribute__((availability(ios,introduced=4.3)));
char *strsignal(int __sig);
}
extern "C" {
errno_t memset_s(void *__s, rsize_t __smax, int __c, rsize_t __n) __attribute__((availability(ios,introduced=7.0)));
}







extern "C" {
void *memmem(const void *__big, size_t __big_len, const void *__little, size_t __little_len) __attribute__((availability(ios,introduced=4.3)));
void memset_pattern4(void *__b, const void *__pattern4, size_t __len) __attribute__((availability(ios,introduced=3.0)));
void memset_pattern8(void *__b, const void *__pattern8, size_t __len) __attribute__((availability(ios,introduced=3.0)));
void memset_pattern16(void *__b, const void *__pattern16, size_t __len) __attribute__((availability(ios,introduced=3.0)));

char *strcasestr(const char *__big, const char *__little);
char *strnstr(const char *__big, const char *__little, size_t __len);
size_t strlcat(char *__dst, const char *__source, size_t __size);
size_t strlcpy(char *__dst, const char *__source, size_t __size);
void strmode(int __mode, char *__bp);
char *strsep(char **__stringp, const char *__delim);


void swab(const void * , void * , ssize_t);

__attribute__((availability(macosx,introduced=10.12.1))) __attribute__((availability(ios,introduced=10.1)))
__attribute__((availability(tvos,introduced=10.0.1))) __attribute__((availability(watchos,introduced=3.1)))
int timingsafe_bcmp(const void *__b1, const void *__b2, size_t __len);
}







extern "C" {


int bcmp(const void *, const void *, size_t) ;
void bcopy(const void *, void *, size_t) ;
void bzero(void *, size_t) ;
char *index(const char *, int) ;
char *rindex(const char *, int) ;


int ffs(int);
int strcasecmp(const char *, const char *);
int strncasecmp(const char *, const char *, size_t);
}



extern "C" {
int ffsl(long) __attribute__((availability(ios,introduced=2.0)));
int ffsll(long long) __attribute__((availability(ios,introduced=7.0)));
int fls(int) __attribute__((availability(ios,introduced=2.0)));
int flsl(long) __attribute__((availability(ios,introduced=2.0)));
int flsll(long long) __attribute__((availability(ios,introduced=7.0)));
}


struct timespec
{
 __darwin_time_t tv_sec;
 long tv_nsec;
};

struct tm {
 int tm_sec;
 int tm_min;
 int tm_hour;
 int tm_mday;
 int tm_mon;
 int tm_year;
 int tm_wday;
 int tm_yday;
 int tm_isdst;
 long tm_gmtoff;
 char *tm_zone;
};
extern char *tzname[];


extern int getdate_err;

extern long timezone __asm("_" "timezone" );

extern int daylight;

extern "C" {
char *asctime(const struct tm *);
clock_t clock(void) __asm("_" "clock" );
char *ctime(const time_t *);
double difftime(time_t, time_t);
struct tm *getdate(const char *);
struct tm *gmtime(const time_t *);
struct tm *localtime(const time_t *);
time_t mktime(struct tm *) __asm("_" "mktime" );
size_t strftime(char * , size_t, const char * , const struct tm * ) __asm("_" "strftime" );
char *strptime(const char * , const char * , struct tm * ) __asm("_" "strptime" );
time_t time(time_t *);


void tzset(void);



char *asctime_r(const struct tm * , char * );
char *ctime_r(const time_t *, char *);
struct tm *gmtime_r(const time_t * , struct tm * );
struct tm *localtime_r(const time_t * , struct tm * );


time_t posix2time(time_t);



void tzsetwall(void);
time_t time2posix(time_t);
time_t timelocal(struct tm * const);
time_t timegm(struct tm * const);



int nanosleep(const struct timespec *__rqtp, struct timespec *__rmtp) __asm("_" "nanosleep" );
typedef enum {
_CLOCK_REALTIME __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) = 0,

_CLOCK_MONOTONIC __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) = 6,


_CLOCK_MONOTONIC_RAW __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) = 4,

_CLOCK_MONOTONIC_RAW_APPROX __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) = 5,

_CLOCK_UPTIME_RAW __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) = 8,

_CLOCK_UPTIME_RAW_APPROX __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) = 9,


_CLOCK_PROCESS_CPUTIME_ID __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) = 12,

_CLOCK_THREAD_CPUTIME_ID __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) = 16

} clockid_t;

__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)))
int clock_getres(clockid_t __clock_id, struct timespec *__res);

__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)))
int clock_gettime(clockid_t __clock_id, struct timespec *__tp);


__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)))
__uint64_t clock_gettime_nsec_np(clockid_t __clock_id);


__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,unavailable)))
__attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))
int clock_settime(clockid_t __clock_id, const struct timespec *__tp);





}






extern "C" {





extern "C" void *_Block_copy(const void *aBlock)
    __attribute__((availability(ios,introduced=3.2)));


extern "C" void _Block_release(const void *aBlock)
    __attribute__((availability(ios,introduced=3.2)));



extern "C" void _Block_object_assign(void *, const void *, const int)
    __attribute__((availability(ios,introduced=3.2)));


extern "C" void _Block_object_dispose(const void *, const int)
    __attribute__((availability(ios,introduced=3.2)));


extern "C" void * _NSConcreteGlobalBlock[32]
    __attribute__((availability(ios,introduced=3.2)));
extern "C" void * _NSConcreteStackBlock[32]
    __attribute__((availability(ios,introduced=3.2)));



}




extern "C" {


#pragma pack(push, 2)
typedef unsigned char UInt8;
typedef signed char SInt8;
typedef unsigned short UInt16;
typedef signed short SInt16;


typedef unsigned int UInt32;
typedef signed int SInt32;
struct wide {
  UInt32 lo;
  SInt32 hi;
};
typedef struct wide wide;
struct UnsignedWide {
  UInt32 lo;
  UInt32 hi;
};
typedef struct UnsignedWide UnsignedWide;
      typedef signed long long SInt64;
        typedef unsigned long long UInt64;
typedef SInt32 Fixed;
typedef Fixed * FixedPtr;
typedef SInt32 Fract;
typedef Fract * FractPtr;
typedef UInt32 UnsignedFixed;
typedef UnsignedFixed * UnsignedFixedPtr;
typedef short ShortFixed;
typedef ShortFixed * ShortFixedPtr;
typedef float Float32;
typedef double Float64;
struct Float80 {
    SInt16 exp;
    UInt16 man[4];
};
typedef struct Float80 Float80;

struct Float96 {
    SInt16 exp[2];
    UInt16 man[4];
};
typedef struct Float96 Float96;
struct Float32Point {
    Float32 x;
    Float32 y;
};
typedef struct Float32Point Float32Point;
typedef char * Ptr;
typedef Ptr * Handle;
typedef long Size;
typedef SInt16 OSErr;
typedef SInt32 OSStatus;
typedef void * LogicalAddress;
typedef const void * ConstLogicalAddress;
typedef void * PhysicalAddress;
typedef UInt8 * BytePtr;
typedef unsigned long ByteCount;
typedef unsigned long ByteOffset;
typedef SInt32 Duration;
typedef UnsignedWide AbsoluteTime;
typedef UInt32 OptionBits;
typedef unsigned long ItemCount;
typedef UInt32 PBVersion;
typedef SInt16 ScriptCode;
typedef SInt16 LangCode;
typedef SInt16 RegionCode;
typedef UInt32 FourCharCode;
typedef FourCharCode OSType;
typedef FourCharCode ResType;
typedef OSType * OSTypePtr;
typedef ResType * ResTypePtr;
typedef unsigned char Boolean;
typedef long ( * ProcPtr)(void);
typedef void ( * Register68kProcPtr)(void);




typedef ProcPtr UniversalProcPtr;


typedef ProcPtr * ProcHandle;
typedef UniversalProcPtr * UniversalProcHandle;
typedef void * PRefCon;

typedef void * URefCon;
typedef void * SRefCon;
enum {
  noErr = 0
};

enum {
  kNilOptions = 0
};


enum {
  kVariableLengthArray


  __attribute__((deprecated))


  = 1
};

enum {
  kUnknownType = 0x3F3F3F3F
};
typedef UInt32 UnicodeScalarValue;
typedef UInt32 UTF32Char;
typedef UInt16 UniChar;
typedef UInt16 UTF16Char;
typedef UInt8 UTF8Char;
typedef UniChar * UniCharPtr;
typedef unsigned long UniCharCount;
typedef UniCharCount * UniCharCountPtr;
typedef unsigned char Str255[256];
typedef unsigned char Str63[64];
typedef unsigned char Str32[33];
typedef unsigned char Str31[32];
typedef unsigned char Str27[28];
typedef unsigned char Str15[16];
typedef unsigned char Str32Field[34];
typedef Str63 StrFileName;
typedef unsigned char * StringPtr;
typedef StringPtr * StringHandle;
typedef const unsigned char * ConstStringPtr;
typedef const unsigned char * ConstStr255Param;
typedef const unsigned char * ConstStr63Param;
typedef const unsigned char * ConstStr32Param;
typedef const unsigned char * ConstStr31Param;
typedef const unsigned char * ConstStr27Param;
typedef const unsigned char * ConstStr15Param;
typedef ConstStr63Param ConstStrFileNameParam;

inline unsigned char StrLength(ConstStr255Param string) { return (*string); }
struct ProcessSerialNumber {
  UInt32 highLongOfPSN;
  UInt32 lowLongOfPSN;
};
typedef struct ProcessSerialNumber ProcessSerialNumber;
typedef ProcessSerialNumber * ProcessSerialNumberPtr;
struct Point {
  short v;
  short h;
};
typedef struct Point Point;
typedef Point * PointPtr;
struct Rect {
  short top;
  short left;
  short bottom;
  short right;
};
typedef struct Rect Rect;
typedef Rect * RectPtr;
struct FixedPoint {
  Fixed x;
  Fixed y;
};
typedef struct FixedPoint FixedPoint;
struct FixedRect {
  Fixed left;
  Fixed top;
  Fixed right;
  Fixed bottom;
};
typedef struct FixedRect FixedRect;

typedef short CharParameter;
enum {
  normal = 0,
  bold = 1,
  italic = 2,
  underline = 4,
  outline = 8,
  shadow = 0x10,
  condense = 0x20,
  extend = 0x40
};

typedef unsigned char Style;
typedef short StyleParameter;
typedef Style StyleField;
typedef SInt32 TimeValue;
typedef SInt32 TimeScale;
typedef wide CompTimeValue;
typedef SInt64 TimeValue64;
typedef struct TimeBaseRecord* TimeBase;
struct TimeRecord {
  CompTimeValue value;
  TimeScale scale;
  TimeBase base;
};
typedef struct TimeRecord TimeRecord;
struct NumVersion {

  UInt8 nonRelRev;
  UInt8 stage;
  UInt8 minorAndBugRev;
  UInt8 majorRev;
};
typedef struct NumVersion NumVersion;


enum {

  developStage = 0x20,
  alphaStage = 0x40,
  betaStage = 0x60,
  finalStage = 0x80
};

union NumVersionVariant {

  NumVersion parts;
  UInt32 whole;
};
typedef union NumVersionVariant NumVersionVariant;
typedef NumVersionVariant * NumVersionVariantPtr;
typedef NumVersionVariantPtr * NumVersionVariantHandle;
struct VersRec {

  NumVersion numericVersion;
  short countryCode;
  Str255 shortVersion;
  Str255 reserved;
};
typedef struct VersRec VersRec;
typedef VersRec * VersRecPtr;
typedef VersRecPtr * VersRecHndl;





typedef UInt8 Byte;
typedef SInt8 SignedByte;
typedef wide * WidePtr;
typedef UnsignedWide * UnsignedWidePtr;
typedef Float80 extended80;
typedef Float96 extended96;
typedef SInt8 VHSelect;
extern void
Debugger(void) __attribute__((availability(ios,unavailable)));
extern void
DebugStr(ConstStr255Param debuggerMsg) __attribute__((availability(ios,unavailable)));
extern void
SysBreak(void) __attribute__((availability(ios,unavailable)));
extern void
SysBreakStr(ConstStr255Param debuggerMsg) __attribute__((availability(ios,unavailable)));
extern void
SysBreakFunc(ConstStr255Param debuggerMsg) __attribute__((availability(ios,unavailable)));
#pragma pack(pop)


}
extern "C" {
// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

// @class NSAttributedString;
#ifndef _REWRITER_typedef_NSAttributedString
#define _REWRITER_typedef_NSAttributedString
typedef struct objc_object NSAttributedString;
typedef struct {} _objc_exc_NSAttributedString;
#endif

// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

// @class NSNull;
#ifndef _REWRITER_typedef_NSNull
#define _REWRITER_typedef_NSNull
typedef struct objc_object NSNull;
typedef struct {} _objc_exc_NSNull;
#endif

// @class NSCharacterSet;
#ifndef _REWRITER_typedef_NSCharacterSet
#define _REWRITER_typedef_NSCharacterSet
typedef struct objc_object NSCharacterSet;
typedef struct {} _objc_exc_NSCharacterSet;
#endif

// @class NSData;
#ifndef _REWRITER_typedef_NSData
#define _REWRITER_typedef_NSData
typedef struct objc_object NSData;
typedef struct {} _objc_exc_NSData;
#endif

// @class NSDate;
#ifndef _REWRITER_typedef_NSDate
#define _REWRITER_typedef_NSDate
typedef struct objc_object NSDate;
typedef struct {} _objc_exc_NSDate;
#endif

// @class NSTimeZone;
#ifndef _REWRITER_typedef_NSTimeZone
#define _REWRITER_typedef_NSTimeZone
typedef struct objc_object NSTimeZone;
typedef struct {} _objc_exc_NSTimeZone;
#endif

// @class NSDictionary;
#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

// @class NSError;
#ifndef _REWRITER_typedef_NSError
#define _REWRITER_typedef_NSError
typedef struct objc_object NSError;
typedef struct {} _objc_exc_NSError;
#endif

// @class NSLocale;
#ifndef _REWRITER_typedef_NSLocale
#define _REWRITER_typedef_NSLocale
typedef struct objc_object NSLocale;
typedef struct {} _objc_exc_NSLocale;
#endif

// @class NSNumber;
#ifndef _REWRITER_typedef_NSNumber
#define _REWRITER_typedef_NSNumber
typedef struct objc_object NSNumber;
typedef struct {} _objc_exc_NSNumber;
#endif

// @class NSSet;
#ifndef _REWRITER_typedef_NSSet
#define _REWRITER_typedef_NSSet
typedef struct objc_object NSSet;
typedef struct {} _objc_exc_NSSet;
#endif

// @class NSURL;
#ifndef _REWRITER_typedef_NSURL
#define _REWRITER_typedef_NSURL
typedef struct objc_object NSURL;
typedef struct {} _objc_exc_NSURL;
#endif

extern double kCFCoreFoundationVersionNumber;
typedef unsigned long CFTypeID;
typedef unsigned long CFOptionFlags;
typedef unsigned long CFHashCode;
typedef signed long CFIndex;



typedef const __attribute__((objc_bridge(id))) void * CFTypeRef;

typedef const struct __attribute__((objc_bridge(NSString))) __CFString * CFStringRef;
typedef struct __attribute__((objc_bridge_mutable(NSMutableString))) __CFString * CFMutableStringRef;






typedef __attribute__((objc_bridge(id))) CFTypeRef CFPropertyListRef;


typedef CFIndex CFComparisonResult; enum {
    kCFCompareLessThan = -1L,
    kCFCompareEqualTo = 0,
    kCFCompareGreaterThan = 1
};


typedef CFComparisonResult (*CFComparatorFunction)(const void *val1, const void *val2, void *context);


static const CFIndex kCFNotFound = -1;



typedef struct {
    CFIndex location;
    CFIndex length;
} CFRange;


static __inline__ __attribute__((always_inline)) CFRange CFRangeMake(CFIndex loc, CFIndex len) {
    CFRange range;
    range.location = loc;
    range.length = len;
    return range;
}





extern
CFRange __CFRangeMake(CFIndex loc, CFIndex len);




typedef const struct __attribute__((objc_bridge(NSNull))) __CFNull * CFNullRef;

extern
CFTypeID CFNullGetTypeID(void);

extern
const CFNullRef kCFNull;
typedef const struct __attribute__((objc_bridge(id))) __CFAllocator * CFAllocatorRef;


extern
const CFAllocatorRef kCFAllocatorDefault;


extern
const CFAllocatorRef kCFAllocatorSystemDefault;







extern
const CFAllocatorRef kCFAllocatorMalloc;





extern
const CFAllocatorRef kCFAllocatorMallocZone;





extern
const CFAllocatorRef kCFAllocatorNull;





extern
const CFAllocatorRef kCFAllocatorUseContext;

typedef const void * (*CFAllocatorRetainCallBack)(const void *info);
typedef void (*CFAllocatorReleaseCallBack)(const void *info);
typedef CFStringRef (*CFAllocatorCopyDescriptionCallBack)(const void *info);
typedef void * (*CFAllocatorAllocateCallBack)(CFIndex allocSize, CFOptionFlags hint, void *info);
typedef void * (*CFAllocatorReallocateCallBack)(void *ptr, CFIndex newsize, CFOptionFlags hint, void *info);
typedef void (*CFAllocatorDeallocateCallBack)(void *ptr, void *info);
typedef CFIndex (*CFAllocatorPreferredSizeCallBack)(CFIndex size, CFOptionFlags hint, void *info);
typedef struct {
    CFIndex version;
    void * info;
    CFAllocatorRetainCallBack retain;
    CFAllocatorReleaseCallBack release;
    CFAllocatorCopyDescriptionCallBack copyDescription;
    CFAllocatorAllocateCallBack allocate;
    CFAllocatorReallocateCallBack reallocate;
    CFAllocatorDeallocateCallBack deallocate;
    CFAllocatorPreferredSizeCallBack preferredSize;
} CFAllocatorContext;

extern
CFTypeID CFAllocatorGetTypeID(void);
extern
void CFAllocatorSetDefault(CFAllocatorRef allocator);

extern
CFAllocatorRef CFAllocatorGetDefault(void);

extern
CFAllocatorRef CFAllocatorCreate(CFAllocatorRef allocator, CFAllocatorContext *context);

extern
void *CFAllocatorAllocate(CFAllocatorRef allocator, CFIndex size, CFOptionFlags hint);

extern
void *CFAllocatorReallocate(CFAllocatorRef allocator, void *ptr, CFIndex newsize, CFOptionFlags hint);

extern
void CFAllocatorDeallocate(CFAllocatorRef allocator, void *ptr);

extern
CFIndex CFAllocatorGetPreferredSizeForSize(CFAllocatorRef allocator, CFIndex size, CFOptionFlags hint);

extern
void CFAllocatorGetContext(CFAllocatorRef allocator, CFAllocatorContext *context);






extern
CFTypeID CFGetTypeID(CFTypeRef cf);

extern
CFStringRef CFCopyTypeIDDescription(CFTypeID type_id);

extern
CFTypeRef CFRetain(CFTypeRef cf);

extern
void CFRelease(CFTypeRef cf);



extern
CFTypeRef CFAutorelease(CFTypeRef __attribute__((cf_consumed)) arg) __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern
CFIndex CFGetRetainCount(CFTypeRef cf);


extern
Boolean CFEqual(CFTypeRef cf1, CFTypeRef cf2);

extern
CFHashCode CFHash(CFTypeRef cf);

extern
CFStringRef CFCopyDescription(CFTypeRef cf);

extern
CFAllocatorRef CFGetAllocator(CFTypeRef cf);




extern
CFTypeRef CFMakeCollectable(CFTypeRef cf) __attribute__((unavailable("not available in automatic reference counting mode")));
}
extern "C" {
typedef const void * (*CFArrayRetainCallBack)(CFAllocatorRef allocator, const void *value);
typedef void (*CFArrayReleaseCallBack)(CFAllocatorRef allocator, const void *value);
typedef CFStringRef (*CFArrayCopyDescriptionCallBack)(const void *value);
typedef Boolean (*CFArrayEqualCallBack)(const void *value1, const void *value2);
typedef struct {
    CFIndex version;
    CFArrayRetainCallBack retain;
    CFArrayReleaseCallBack release;
    CFArrayCopyDescriptionCallBack copyDescription;
    CFArrayEqualCallBack equal;
} CFArrayCallBacks;






extern
const CFArrayCallBacks kCFTypeArrayCallBacks;
typedef void (*CFArrayApplierFunction)(const void *value, void *context);





typedef const struct __attribute__((objc_bridge(NSArray))) __CFArray * CFArrayRef;





typedef struct __attribute__((objc_bridge_mutable(NSMutableArray))) __CFArray * CFMutableArrayRef;





extern
CFTypeID CFArrayGetTypeID(void);
extern
CFArrayRef CFArrayCreate(CFAllocatorRef allocator, const void **values, CFIndex numValues, const CFArrayCallBacks *callBacks);
extern
CFArrayRef CFArrayCreateCopy(CFAllocatorRef allocator, CFArrayRef theArray);
extern
CFMutableArrayRef CFArrayCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFArrayCallBacks *callBacks);
extern
CFMutableArrayRef CFArrayCreateMutableCopy(CFAllocatorRef allocator, CFIndex capacity, CFArrayRef theArray);
extern
CFIndex CFArrayGetCount(CFArrayRef theArray);
extern
CFIndex CFArrayGetCountOfValue(CFArrayRef theArray, CFRange range, const void *value);
extern
Boolean CFArrayContainsValue(CFArrayRef theArray, CFRange range, const void *value);
extern
const void *CFArrayGetValueAtIndex(CFArrayRef theArray, CFIndex idx);
extern
void CFArrayGetValues(CFArrayRef theArray, CFRange range, const void **values);
extern
void CFArrayApplyFunction(CFArrayRef theArray, CFRange range, CFArrayApplierFunction __attribute__((noescape)) applier, void *context);
extern
CFIndex CFArrayGetFirstIndexOfValue(CFArrayRef theArray, CFRange range, const void *value);
extern
CFIndex CFArrayGetLastIndexOfValue(CFArrayRef theArray, CFRange range, const void *value);
extern
CFIndex CFArrayBSearchValues(CFArrayRef theArray, CFRange range, const void *value, CFComparatorFunction comparator, void *context);
extern
void CFArrayAppendValue(CFMutableArrayRef theArray, const void *value);
extern
void CFArrayInsertValueAtIndex(CFMutableArrayRef theArray, CFIndex idx, const void *value);
extern
void CFArraySetValueAtIndex(CFMutableArrayRef theArray, CFIndex idx, const void *value);
extern
void CFArrayRemoveValueAtIndex(CFMutableArrayRef theArray, CFIndex idx);
extern
void CFArrayRemoveAllValues(CFMutableArrayRef theArray);
extern
void CFArrayReplaceValues(CFMutableArrayRef theArray, CFRange range, const void **newValues, CFIndex newCount);
extern
void CFArrayExchangeValuesAtIndices(CFMutableArrayRef theArray, CFIndex idx1, CFIndex idx2);
extern
void CFArraySortValues(CFMutableArrayRef theArray, CFRange range, CFComparatorFunction comparator, void *context);
extern
void CFArrayAppendArray(CFMutableArrayRef theArray, CFArrayRef otherArray, CFRange otherRange);

}
extern "C" {

typedef const void * (*CFBagRetainCallBack)(CFAllocatorRef allocator, const void *value);
typedef void (*CFBagReleaseCallBack)(CFAllocatorRef allocator, const void *value);
typedef CFStringRef (*CFBagCopyDescriptionCallBack)(const void *value);
typedef Boolean (*CFBagEqualCallBack)(const void *value1, const void *value2);
typedef CFHashCode (*CFBagHashCallBack)(const void *value);
typedef struct {
    CFIndex version;
    CFBagRetainCallBack retain;
    CFBagReleaseCallBack release;
    CFBagCopyDescriptionCallBack copyDescription;
    CFBagEqualCallBack equal;
    CFBagHashCallBack hash;
} CFBagCallBacks;

extern
const CFBagCallBacks kCFTypeBagCallBacks;
extern
const CFBagCallBacks kCFCopyStringBagCallBacks;

typedef void (*CFBagApplierFunction)(const void *value, void *context);

typedef const struct __attribute__((objc_bridge(id))) __CFBag * CFBagRef;
typedef struct __attribute__((objc_bridge_mutable(id))) __CFBag * CFMutableBagRef;

extern
CFTypeID CFBagGetTypeID(void);

extern
CFBagRef CFBagCreate(CFAllocatorRef allocator, const void **values, CFIndex numValues, const CFBagCallBacks *callBacks);

extern
CFBagRef CFBagCreateCopy(CFAllocatorRef allocator, CFBagRef theBag);

extern
CFMutableBagRef CFBagCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFBagCallBacks *callBacks);

extern
CFMutableBagRef CFBagCreateMutableCopy(CFAllocatorRef allocator, CFIndex capacity, CFBagRef theBag);

extern
CFIndex CFBagGetCount(CFBagRef theBag);

extern
CFIndex CFBagGetCountOfValue(CFBagRef theBag, const void *value);

extern
Boolean CFBagContainsValue(CFBagRef theBag, const void *value);

extern
const void *CFBagGetValue(CFBagRef theBag, const void *value);

extern
Boolean CFBagGetValueIfPresent(CFBagRef theBag, const void *candidate, const void **value);

extern
void CFBagGetValues(CFBagRef theBag, const void **values);

extern
void CFBagApplyFunction(CFBagRef theBag, CFBagApplierFunction __attribute__((noescape)) applier, void *context);

extern
void CFBagAddValue(CFMutableBagRef theBag, const void *value);

extern
void CFBagReplaceValue(CFMutableBagRef theBag, const void *value);

extern
void CFBagSetValue(CFMutableBagRef theBag, const void *value);

extern
void CFBagRemoveValue(CFMutableBagRef theBag, const void *value);

extern
void CFBagRemoveAllValues(CFMutableBagRef theBag);

}
extern "C" {

typedef struct {
    CFIndex version;
    void * info;
    const void *(*retain)(const void *info);
    void (*release)(const void *info);
    CFStringRef (*copyDescription)(const void *info);
} CFBinaryHeapCompareContext;
typedef struct {
    CFIndex version;
    const void *(*retain)(CFAllocatorRef allocator, const void *ptr);
    void (*release)(CFAllocatorRef allocator, const void *ptr);
    CFStringRef (*copyDescription)(const void *ptr);
    CFComparisonResult (*compare)(const void *ptr1, const void *ptr2, void *context);
} CFBinaryHeapCallBacks;







extern const CFBinaryHeapCallBacks kCFStringBinaryHeapCallBacks;
typedef void (*CFBinaryHeapApplierFunction)(const void *val, void *context);





typedef struct __attribute__((objc_bridge_mutable(id))) __CFBinaryHeap * CFBinaryHeapRef;





extern CFTypeID CFBinaryHeapGetTypeID(void);
extern CFBinaryHeapRef CFBinaryHeapCreate(CFAllocatorRef allocator, CFIndex capacity, const CFBinaryHeapCallBacks *callBacks, const CFBinaryHeapCompareContext *compareContext);
extern CFBinaryHeapRef CFBinaryHeapCreateCopy(CFAllocatorRef allocator, CFIndex capacity, CFBinaryHeapRef heap);
extern CFIndex CFBinaryHeapGetCount(CFBinaryHeapRef heap);
extern CFIndex CFBinaryHeapGetCountOfValue(CFBinaryHeapRef heap, const void *value);
extern Boolean CFBinaryHeapContainsValue(CFBinaryHeapRef heap, const void *value);
extern const void * CFBinaryHeapGetMinimum(CFBinaryHeapRef heap);
extern Boolean CFBinaryHeapGetMinimumIfPresent(CFBinaryHeapRef heap, const void **value);
extern void CFBinaryHeapGetValues(CFBinaryHeapRef heap, const void **values);
extern void CFBinaryHeapApplyFunction(CFBinaryHeapRef heap, CFBinaryHeapApplierFunction __attribute__((noescape)) applier, void *context);
extern void CFBinaryHeapAddValue(CFBinaryHeapRef heap, const void *value);







extern void CFBinaryHeapRemoveMinimumValue(CFBinaryHeapRef heap);
extern void CFBinaryHeapRemoveAllValues(CFBinaryHeapRef heap);

}
extern "C" {

typedef UInt32 CFBit;

typedef const struct __attribute__((objc_bridge(id))) __CFBitVector * CFBitVectorRef;
typedef struct __attribute__((objc_bridge_mutable(id))) __CFBitVector * CFMutableBitVectorRef;

extern CFTypeID CFBitVectorGetTypeID(void);

extern CFBitVectorRef CFBitVectorCreate(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex numBits);
extern CFBitVectorRef CFBitVectorCreateCopy(CFAllocatorRef allocator, CFBitVectorRef bv);
extern CFMutableBitVectorRef CFBitVectorCreateMutable(CFAllocatorRef allocator, CFIndex capacity);
extern CFMutableBitVectorRef CFBitVectorCreateMutableCopy(CFAllocatorRef allocator, CFIndex capacity, CFBitVectorRef bv);

extern CFIndex CFBitVectorGetCount(CFBitVectorRef bv);
extern CFIndex CFBitVectorGetCountOfBit(CFBitVectorRef bv, CFRange range, CFBit value);
extern Boolean CFBitVectorContainsBit(CFBitVectorRef bv, CFRange range, CFBit value);
extern CFBit CFBitVectorGetBitAtIndex(CFBitVectorRef bv, CFIndex idx);
extern void CFBitVectorGetBits(CFBitVectorRef bv, CFRange range, UInt8 *bytes);
extern CFIndex CFBitVectorGetFirstIndexOfBit(CFBitVectorRef bv, CFRange range, CFBit value);
extern CFIndex CFBitVectorGetLastIndexOfBit(CFBitVectorRef bv, CFRange range, CFBit value);

extern void CFBitVectorSetCount(CFMutableBitVectorRef bv, CFIndex count);
extern void CFBitVectorFlipBitAtIndex(CFMutableBitVectorRef bv, CFIndex idx);
extern void CFBitVectorFlipBits(CFMutableBitVectorRef bv, CFRange range);
extern void CFBitVectorSetBitAtIndex(CFMutableBitVectorRef bv, CFIndex idx, CFBit value);
extern void CFBitVectorSetBits(CFMutableBitVectorRef bv, CFRange range, CFBit value);
extern void CFBitVectorSetAllBits(CFMutableBitVectorRef bv, CFBit value);

}
enum {
    OSUnknownByteOrder,
    OSLittleEndian,
    OSBigEndian
};

static __inline__
int32_t
OSHostByteOrder(void) {

    return OSLittleEndian;





}
static __inline__
uint16_t
_OSReadInt16(
    const volatile void * base,
    uintptr_t byteOffset
)
{
    return *(volatile uint16_t *)((uintptr_t)base + byteOffset);
}

static __inline__
uint32_t
_OSReadInt32(
    const volatile void * base,
    uintptr_t byteOffset
)
{
    return *(volatile uint32_t *)((uintptr_t)base + byteOffset);
}

static __inline__
uint64_t
_OSReadInt64(
    const volatile void * base,
    uintptr_t byteOffset
)
{
    return *(volatile uint64_t *)((uintptr_t)base + byteOffset);
}



static __inline__
void
_OSWriteInt16(
    volatile void * base,
    uintptr_t byteOffset,
    uint16_t data
)
{
    *(volatile uint16_t *)((uintptr_t)base + byteOffset) = data;
}

static __inline__
void
_OSWriteInt32(
    volatile void * base,
    uintptr_t byteOffset,
    uint32_t data
)
{
    *(volatile uint32_t *)((uintptr_t)base + byteOffset) = data;
}

static __inline__
void
_OSWriteInt64(
    volatile void * base,
    uintptr_t byteOffset,
    uint64_t data
)
{
    *(volatile uint64_t *)((uintptr_t)base + byteOffset) = data;
}



extern "C" {

enum __CFByteOrder {
    CFByteOrderUnknown,
    CFByteOrderLittleEndian,
    CFByteOrderBigEndian
};
typedef CFIndex CFByteOrder;

static __inline__ __attribute__((always_inline)) CFByteOrder CFByteOrderGetCurrent(void) {

    int32_t byteOrder = OSHostByteOrder();
    switch (byteOrder) {
    case OSLittleEndian: return CFByteOrderLittleEndian;
    case OSBigEndian: return CFByteOrderBigEndian;
    default: break;
    }
    return CFByteOrderUnknown;
}

static __inline__ __attribute__((always_inline)) uint16_t CFSwapInt16(uint16_t arg) {

    return ((__uint16_t)(__builtin_constant_p(arg) ? ((__uint16_t)((((__uint16_t)(arg) & 0xff00) >> 8) | (((__uint16_t)(arg) & 0x00ff) << 8))) : _OSSwapInt16(arg)));





}

static __inline__ __attribute__((always_inline)) uint32_t CFSwapInt32(uint32_t arg) {

    return (__builtin_constant_p(arg) ? ((__uint32_t)((((__uint32_t)(arg) & 0xff000000) >> 24) | (((__uint32_t)(arg) & 0x00ff0000) >> 8) | (((__uint32_t)(arg) & 0x0000ff00) << 8) | (((__uint32_t)(arg) & 0x000000ff) << 24))) : _OSSwapInt32(arg));





}

static __inline__ __attribute__((always_inline)) uint64_t CFSwapInt64(uint64_t arg) {

    return (__builtin_constant_p(arg) ? ((__uint64_t)((((__uint64_t)(arg) & 0xff00000000000000ULL) >> 56) | (((__uint64_t)(arg) & 0x00ff000000000000ULL) >> 40) | (((__uint64_t)(arg) & 0x0000ff0000000000ULL) >> 24) | (((__uint64_t)(arg) & 0x000000ff00000000ULL) >> 8) | (((__uint64_t)(arg) & 0x00000000ff000000ULL) << 8) | (((__uint64_t)(arg) & 0x0000000000ff0000ULL) << 24) | (((__uint64_t)(arg) & 0x000000000000ff00ULL) << 40) | (((__uint64_t)(arg) & 0x00000000000000ffULL) << 56))) : _OSSwapInt64(arg));
}

static __inline__ __attribute__((always_inline)) uint16_t CFSwapInt16BigToHost(uint16_t arg) {

    return ((__uint16_t)(__builtin_constant_p(arg) ? ((__uint16_t)((((__uint16_t)(arg) & 0xff00) >> 8) | (((__uint16_t)(arg) & 0x00ff) << 8))) : _OSSwapInt16(arg)));





}

static __inline__ __attribute__((always_inline)) uint32_t CFSwapInt32BigToHost(uint32_t arg) {

    return (__builtin_constant_p(arg) ? ((__uint32_t)((((__uint32_t)(arg) & 0xff000000) >> 24) | (((__uint32_t)(arg) & 0x00ff0000) >> 8) | (((__uint32_t)(arg) & 0x0000ff00) << 8) | (((__uint32_t)(arg) & 0x000000ff) << 24))) : _OSSwapInt32(arg));





}

static __inline__ __attribute__((always_inline)) uint64_t CFSwapInt64BigToHost(uint64_t arg) {

    return (__builtin_constant_p(arg) ? ((__uint64_t)((((__uint64_t)(arg) & 0xff00000000000000ULL) >> 56) | (((__uint64_t)(arg) & 0x00ff000000000000ULL) >> 40) | (((__uint64_t)(arg) & 0x0000ff0000000000ULL) >> 24) | (((__uint64_t)(arg) & 0x000000ff00000000ULL) >> 8) | (((__uint64_t)(arg) & 0x00000000ff000000ULL) << 8) | (((__uint64_t)(arg) & 0x0000000000ff0000ULL) << 24) | (((__uint64_t)(arg) & 0x000000000000ff00ULL) << 40) | (((__uint64_t)(arg) & 0x00000000000000ffULL) << 56))) : _OSSwapInt64(arg));





}

static __inline__ __attribute__((always_inline)) uint16_t CFSwapInt16HostToBig(uint16_t arg) {

    return ((__uint16_t)(__builtin_constant_p(arg) ? ((__uint16_t)((((__uint16_t)(arg) & 0xff00) >> 8) | (((__uint16_t)(arg) & 0x00ff) << 8))) : _OSSwapInt16(arg)));





}

static __inline__ __attribute__((always_inline)) uint32_t CFSwapInt32HostToBig(uint32_t arg) {

    return (__builtin_constant_p(arg) ? ((__uint32_t)((((__uint32_t)(arg) & 0xff000000) >> 24) | (((__uint32_t)(arg) & 0x00ff0000) >> 8) | (((__uint32_t)(arg) & 0x0000ff00) << 8) | (((__uint32_t)(arg) & 0x000000ff) << 24))) : _OSSwapInt32(arg));





}

static __inline__ __attribute__((always_inline)) uint64_t CFSwapInt64HostToBig(uint64_t arg) {

    return (__builtin_constant_p(arg) ? ((__uint64_t)((((__uint64_t)(arg) & 0xff00000000000000ULL) >> 56) | (((__uint64_t)(arg) & 0x00ff000000000000ULL) >> 40) | (((__uint64_t)(arg) & 0x0000ff0000000000ULL) >> 24) | (((__uint64_t)(arg) & 0x000000ff00000000ULL) >> 8) | (((__uint64_t)(arg) & 0x00000000ff000000ULL) << 8) | (((__uint64_t)(arg) & 0x0000000000ff0000ULL) << 24) | (((__uint64_t)(arg) & 0x000000000000ff00ULL) << 40) | (((__uint64_t)(arg) & 0x00000000000000ffULL) << 56))) : _OSSwapInt64(arg));





}

static __inline__ __attribute__((always_inline)) uint16_t CFSwapInt16LittleToHost(uint16_t arg) {

    return ((uint16_t)(arg));





}

static __inline__ __attribute__((always_inline)) uint32_t CFSwapInt32LittleToHost(uint32_t arg) {

    return ((uint32_t)(arg));





}

static __inline__ __attribute__((always_inline)) uint64_t CFSwapInt64LittleToHost(uint64_t arg) {

    return ((uint64_t)(arg));





}

static __inline__ __attribute__((always_inline)) uint16_t CFSwapInt16HostToLittle(uint16_t arg) {

    return ((uint16_t)(arg));





}

static __inline__ __attribute__((always_inline)) uint32_t CFSwapInt32HostToLittle(uint32_t arg) {

    return ((uint32_t)(arg));





}

static __inline__ __attribute__((always_inline)) uint64_t CFSwapInt64HostToLittle(uint64_t arg) {

    return ((uint64_t)(arg));





}

typedef struct {uint32_t v;} CFSwappedFloat32;
typedef struct {uint64_t v;} CFSwappedFloat64;

static __inline__ __attribute__((always_inline)) CFSwappedFloat32 CFConvertFloat32HostToSwapped(Float32 arg) {
    union CFSwap {
 Float32 v;
 CFSwappedFloat32 sv;
    } result;
    result.v = arg;

    result.sv.v = CFSwapInt32(result.sv.v);

    return result.sv;
}

static __inline__ __attribute__((always_inline)) Float32 CFConvertFloat32SwappedToHost(CFSwappedFloat32 arg) {
    union CFSwap {
 Float32 v;
 CFSwappedFloat32 sv;
    } result;
    result.sv = arg;

    result.sv.v = CFSwapInt32(result.sv.v);

    return result.v;
}

static __inline__ __attribute__((always_inline)) CFSwappedFloat64 CFConvertFloat64HostToSwapped(Float64 arg) {
    union CFSwap {
 Float64 v;
 CFSwappedFloat64 sv;
    } result;
    result.v = arg;

    result.sv.v = CFSwapInt64(result.sv.v);

    return result.sv;
}

static __inline__ __attribute__((always_inline)) Float64 CFConvertFloat64SwappedToHost(CFSwappedFloat64 arg) {
    union CFSwap {
 Float64 v;
 CFSwappedFloat64 sv;
    } result;
    result.sv = arg;

    result.sv.v = CFSwapInt64(result.sv.v);

    return result.v;
}

static __inline__ __attribute__((always_inline)) CFSwappedFloat32 CFConvertFloatHostToSwapped(float arg) {
    union CFSwap {
 float v;
 CFSwappedFloat32 sv;
    } result;
    result.v = arg;

    result.sv.v = CFSwapInt32(result.sv.v);

    return result.sv;
}

static __inline__ __attribute__((always_inline)) float CFConvertFloatSwappedToHost(CFSwappedFloat32 arg) {
    union CFSwap {
 float v;
 CFSwappedFloat32 sv;
    } result;
    result.sv = arg;

    result.sv.v = CFSwapInt32(result.sv.v);

    return result.v;
}

static __inline__ __attribute__((always_inline)) CFSwappedFloat64 CFConvertDoubleHostToSwapped(double arg) {
    union CFSwap {
 double v;
 CFSwappedFloat64 sv;
    } result;
    result.v = arg;

    result.sv.v = CFSwapInt64(result.sv.v);

    return result.sv;
}

static __inline__ __attribute__((always_inline)) double CFConvertDoubleSwappedToHost(CFSwappedFloat64 arg) {
    union CFSwap {
 double v;
 CFSwappedFloat64 sv;
    } result;
    result.sv = arg;

    result.sv.v = CFSwapInt64(result.sv.v);

    return result.v;
}

}
extern "C" {
typedef const void * (*CFDictionaryRetainCallBack)(CFAllocatorRef allocator, const void *value);
typedef void (*CFDictionaryReleaseCallBack)(CFAllocatorRef allocator, const void *value);
typedef CFStringRef (*CFDictionaryCopyDescriptionCallBack)(const void *value);
typedef Boolean (*CFDictionaryEqualCallBack)(const void *value1, const void *value2);
typedef CFHashCode (*CFDictionaryHashCallBack)(const void *value);
typedef struct {
    CFIndex version;
    CFDictionaryRetainCallBack retain;
    CFDictionaryReleaseCallBack release;
    CFDictionaryCopyDescriptionCallBack copyDescription;
    CFDictionaryEqualCallBack equal;
    CFDictionaryHashCallBack hash;
} CFDictionaryKeyCallBacks;







extern
const CFDictionaryKeyCallBacks kCFTypeDictionaryKeyCallBacks;
extern
const CFDictionaryKeyCallBacks kCFCopyStringDictionaryKeyCallBacks;
typedef struct {
    CFIndex version;
    CFDictionaryRetainCallBack retain;
    CFDictionaryReleaseCallBack release;
    CFDictionaryCopyDescriptionCallBack copyDescription;
    CFDictionaryEqualCallBack equal;
} CFDictionaryValueCallBacks;







extern
const CFDictionaryValueCallBacks kCFTypeDictionaryValueCallBacks;
typedef void (*CFDictionaryApplierFunction)(const void *key, const void *value, void *context);





typedef const struct __attribute__((objc_bridge(NSDictionary))) __CFDictionary * CFDictionaryRef;





typedef struct __attribute__((objc_bridge_mutable(NSMutableDictionary))) __CFDictionary * CFMutableDictionaryRef;





extern
CFTypeID CFDictionaryGetTypeID(void);
extern
CFDictionaryRef CFDictionaryCreate(CFAllocatorRef allocator, const void **keys, const void **values, CFIndex numValues, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks);
extern
CFDictionaryRef CFDictionaryCreateCopy(CFAllocatorRef allocator, CFDictionaryRef theDict);
extern
CFMutableDictionaryRef CFDictionaryCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks);
extern
CFMutableDictionaryRef CFDictionaryCreateMutableCopy(CFAllocatorRef allocator, CFIndex capacity, CFDictionaryRef theDict);
extern
CFIndex CFDictionaryGetCount(CFDictionaryRef theDict);
extern
CFIndex CFDictionaryGetCountOfKey(CFDictionaryRef theDict, const void *key);
extern
CFIndex CFDictionaryGetCountOfValue(CFDictionaryRef theDict, const void *value);
extern
Boolean CFDictionaryContainsKey(CFDictionaryRef theDict, const void *key);
extern
Boolean CFDictionaryContainsValue(CFDictionaryRef theDict, const void *value);
extern
const void *CFDictionaryGetValue(CFDictionaryRef theDict, const void *key);
extern
Boolean CFDictionaryGetValueIfPresent(CFDictionaryRef theDict, const void *key, const void **value);
extern
void CFDictionaryGetKeysAndValues(CFDictionaryRef theDict, const void **keys, const void **values);
extern
void CFDictionaryApplyFunction(CFDictionaryRef theDict, CFDictionaryApplierFunction __attribute__((noescape)) applier, void *context);
extern
void CFDictionaryAddValue(CFMutableDictionaryRef theDict, const void *key, const void *value);
extern
void CFDictionarySetValue(CFMutableDictionaryRef theDict, const void *key, const void *value);
extern
void CFDictionaryReplaceValue(CFMutableDictionaryRef theDict, const void *key, const void *value);
extern
void CFDictionaryRemoveValue(CFMutableDictionaryRef theDict, const void *key);
extern
void CFDictionaryRemoveAllValues(CFMutableDictionaryRef theDict);

}
extern "C" {

typedef CFStringRef CFNotificationName __attribute__((swift_wrapper(struct)));

typedef struct __attribute__((objc_bridge_mutable(id))) __CFNotificationCenter * CFNotificationCenterRef;

typedef void (*CFNotificationCallback)(CFNotificationCenterRef center, void *observer, CFNotificationName name, const void *object, CFDictionaryRef userInfo);

typedef CFIndex CFNotificationSuspensionBehavior; enum {
    CFNotificationSuspensionBehaviorDrop = 1,

    CFNotificationSuspensionBehaviorCoalesce = 2,

    CFNotificationSuspensionBehaviorHold = 3,

    CFNotificationSuspensionBehaviorDeliverImmediately = 4

};

extern CFTypeID CFNotificationCenterGetTypeID(void);

extern CFNotificationCenterRef CFNotificationCenterGetLocalCenter(void);





extern CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void);
extern void CFNotificationCenterAddObserver(CFNotificationCenterRef center, const void *observer, CFNotificationCallback callBack, CFStringRef name, const void *object, CFNotificationSuspensionBehavior suspensionBehavior);

extern void CFNotificationCenterRemoveObserver(CFNotificationCenterRef center, const void *observer, CFNotificationName name, const void *object);
extern void CFNotificationCenterRemoveEveryObserver(CFNotificationCenterRef center, const void *observer);

extern void CFNotificationCenterPostNotification(CFNotificationCenterRef center, CFNotificationName name, const void *object, CFDictionaryRef userInfo, Boolean deliverImmediately);

enum {
    kCFNotificationDeliverImmediately = (1UL << 0),
    kCFNotificationPostToAllSessions = (1UL << 1)
};

extern void CFNotificationCenterPostNotificationWithOptions(CFNotificationCenterRef center, CFNotificationName name, const void *object, CFDictionaryRef userInfo, CFOptionFlags options);


}


extern "C" {

typedef CFStringRef CFLocaleIdentifier __attribute__((swift_wrapper(struct)));
typedef CFStringRef CFLocaleKey __attribute__((swift_wrapper(enum)));

typedef const struct __attribute__((objc_bridge(NSLocale))) __CFLocale *CFLocaleRef;

extern
CFTypeID CFLocaleGetTypeID(void);

extern
CFLocaleRef CFLocaleGetSystem(void);


extern
CFLocaleRef CFLocaleCopyCurrent(void);
extern
CFArrayRef CFLocaleCopyAvailableLocaleIdentifiers(void);



extern
CFArrayRef CFLocaleCopyISOLanguageCodes(void);




extern
CFArrayRef CFLocaleCopyISOCountryCodes(void);




extern
CFArrayRef CFLocaleCopyISOCurrencyCodes(void);




extern
CFArrayRef CFLocaleCopyCommonISOCurrencyCodes(void) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern
CFArrayRef CFLocaleCopyPreferredLanguages(void) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
CFLocaleIdentifier CFLocaleCreateCanonicalLanguageIdentifierFromString(CFAllocatorRef allocator, CFStringRef localeIdentifier);



extern
CFLocaleIdentifier CFLocaleCreateCanonicalLocaleIdentifierFromString(CFAllocatorRef allocator, CFStringRef localeIdentifier);



extern
CFLocaleIdentifier CFLocaleCreateCanonicalLocaleIdentifierFromScriptManagerCodes(CFAllocatorRef allocator, LangCode lcode, RegionCode rcode);


extern
CFLocaleIdentifier CFLocaleCreateLocaleIdentifierFromWindowsLocaleCode(CFAllocatorRef allocator, uint32_t lcid) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
uint32_t CFLocaleGetWindowsLocaleCodeFromLocaleIdentifier(CFLocaleIdentifier localeIdentifier) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


typedef CFIndex CFLocaleLanguageDirection; enum {
    kCFLocaleLanguageDirectionUnknown = 0,
    kCFLocaleLanguageDirectionLeftToRight = 1,
    kCFLocaleLanguageDirectionRightToLeft = 2,
    kCFLocaleLanguageDirectionTopToBottom = 3,
    kCFLocaleLanguageDirectionBottomToTop = 4
};

extern
CFLocaleLanguageDirection CFLocaleGetLanguageCharacterDirection(CFStringRef isoLangCode) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern
CFLocaleLanguageDirection CFLocaleGetLanguageLineDirection(CFStringRef isoLangCode) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern
CFDictionaryRef CFLocaleCreateComponentsFromLocaleIdentifier(CFAllocatorRef allocator, CFLocaleIdentifier localeID);
extern
CFLocaleIdentifier CFLocaleCreateLocaleIdentifierFromComponents(CFAllocatorRef allocator, CFDictionaryRef dictionary);






extern
CFLocaleRef CFLocaleCreate(CFAllocatorRef allocator, CFLocaleIdentifier localeIdentifier);


extern
CFLocaleRef CFLocaleCreateCopy(CFAllocatorRef allocator, CFLocaleRef locale);




extern
CFLocaleIdentifier CFLocaleGetIdentifier(CFLocaleRef locale);



extern
CFTypeRef CFLocaleGetValue(CFLocaleRef locale, CFLocaleKey key);



extern
CFStringRef CFLocaleCopyDisplayNameForPropertyValue(CFLocaleRef displayLocale, CFLocaleKey key, CFStringRef value);





extern const CFNotificationName kCFLocaleCurrentLocaleDidChangeNotification __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern const CFLocaleKey kCFLocaleIdentifier;
extern const CFLocaleKey kCFLocaleLanguageCode;
extern const CFLocaleKey kCFLocaleCountryCode;
extern const CFLocaleKey kCFLocaleScriptCode;
extern const CFLocaleKey kCFLocaleVariantCode;

extern const CFLocaleKey kCFLocaleExemplarCharacterSet;
extern const CFLocaleKey kCFLocaleCalendarIdentifier;
extern const CFLocaleKey kCFLocaleCalendar;
extern const CFLocaleKey kCFLocaleCollationIdentifier;
extern const CFLocaleKey kCFLocaleUsesMetricSystem;
extern const CFLocaleKey kCFLocaleMeasurementSystem;
extern const CFLocaleKey kCFLocaleDecimalSeparator;
extern const CFLocaleKey kCFLocaleGroupingSeparator;
extern const CFLocaleKey kCFLocaleCurrencySymbol;
extern const CFLocaleKey kCFLocaleCurrencyCode;
extern const CFLocaleKey kCFLocaleCollatorIdentifier __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFLocaleKey kCFLocaleQuotationBeginDelimiterKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFLocaleKey kCFLocaleQuotationEndDelimiterKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFLocaleKey kCFLocaleAlternateQuotationBeginDelimiterKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFLocaleKey kCFLocaleAlternateQuotationEndDelimiterKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


typedef CFStringRef CFCalendarIdentifier __attribute__((swift_wrapper(enum)));

extern const CFCalendarIdentifier kCFGregorianCalendar;
extern const CFCalendarIdentifier kCFBuddhistCalendar;
extern const CFCalendarIdentifier kCFChineseCalendar;
extern const CFCalendarIdentifier kCFHebrewCalendar;
extern const CFCalendarIdentifier kCFIslamicCalendar;
extern const CFCalendarIdentifier kCFIslamicCivilCalendar;
extern const CFCalendarIdentifier kCFJapaneseCalendar;
extern const CFCalendarIdentifier kCFRepublicOfChinaCalendar __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFCalendarIdentifier kCFPersianCalendar __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFCalendarIdentifier kCFIndianCalendar __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFCalendarIdentifier kCFISO8601Calendar __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFCalendarIdentifier kCFIslamicTabularCalendar __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFCalendarIdentifier kCFIslamicUmmAlQuraCalendar __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

}
extern "C" {

typedef double CFTimeInterval;
typedef CFTimeInterval CFAbsoluteTime;



extern
CFAbsoluteTime CFAbsoluteTimeGetCurrent(void);

extern
const CFTimeInterval kCFAbsoluteTimeIntervalSince1970;
extern
const CFTimeInterval kCFAbsoluteTimeIntervalSince1904;

typedef const struct __attribute__((objc_bridge(NSDate))) __CFDate * CFDateRef;

extern
CFTypeID CFDateGetTypeID(void);

extern
CFDateRef CFDateCreate(CFAllocatorRef allocator, CFAbsoluteTime at);

extern
CFAbsoluteTime CFDateGetAbsoluteTime(CFDateRef theDate);

extern
CFTimeInterval CFDateGetTimeIntervalSinceDate(CFDateRef theDate, CFDateRef otherDate);

extern
CFComparisonResult CFDateCompare(CFDateRef theDate, CFDateRef otherDate, void *context);



typedef const struct __attribute__((objc_bridge(NSTimeZone))) __CFTimeZone * CFTimeZoneRef;
typedef struct {
    SInt32 year;
    SInt8 month;
    SInt8 day;
    SInt8 hour;
    SInt8 minute;
    double second;
} CFGregorianDate __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use CFCalendar or NSCalendar API instead")));

typedef struct {
    SInt32 years;
    SInt32 months;
    SInt32 days;
    SInt32 hours;
    SInt32 minutes;
    double seconds;
} CFGregorianUnits __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use CFCalendar or NSCalendar API instead")));

typedef CFOptionFlags CFGregorianUnitFlags; enum {
    kCFGregorianUnitsYears __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use CFCalendar or NSCalendar API instead"))) = (1UL << 0),
    kCFGregorianUnitsMonths __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use CFCalendar or NSCalendar API instead"))) = (1UL << 1),
    kCFGregorianUnitsDays __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use CFCalendar or NSCalendar API instead"))) = (1UL << 2),
    kCFGregorianUnitsHours __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use CFCalendar or NSCalendar API instead"))) = (1UL << 3),
    kCFGregorianUnitsMinutes __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use CFCalendar or NSCalendar API instead"))) = (1UL << 4),
    kCFGregorianUnitsSeconds __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use CFCalendar or NSCalendar API instead"))) = (1UL << 5),
    kCFGregorianAllUnits __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use CFCalendar or NSCalendar API instead"))) = 0x00FFFFFF
};

extern
Boolean CFGregorianDateIsValid(CFGregorianDate gdate, CFOptionFlags unitFlags) __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use CFCalendar or NSCalendar API instead")));

extern
CFAbsoluteTime CFGregorianDateGetAbsoluteTime(CFGregorianDate gdate, CFTimeZoneRef tz) __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use CFCalendar or NSCalendar API instead")));

extern
CFGregorianDate CFAbsoluteTimeGetGregorianDate(CFAbsoluteTime at, CFTimeZoneRef tz) __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use CFCalendar or NSCalendar API instead")));

extern
CFAbsoluteTime CFAbsoluteTimeAddGregorianUnits(CFAbsoluteTime at, CFTimeZoneRef tz, CFGregorianUnits units) __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use CFCalendar or NSCalendar API instead")));

extern
CFGregorianUnits CFAbsoluteTimeGetDifferenceAsGregorianUnits(CFAbsoluteTime at1, CFAbsoluteTime at2, CFTimeZoneRef tz, CFOptionFlags unitFlags) __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use CFCalendar or NSCalendar API instead")));

extern
SInt32 CFAbsoluteTimeGetDayOfWeek(CFAbsoluteTime at, CFTimeZoneRef tz) __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use CFCalendar or NSCalendar API instead")));

extern
SInt32 CFAbsoluteTimeGetDayOfYear(CFAbsoluteTime at, CFTimeZoneRef tz) __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use CFCalendar or NSCalendar API instead")));

extern
SInt32 CFAbsoluteTimeGetWeekOfYear(CFAbsoluteTime at, CFTimeZoneRef tz) __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use CFCalendar or NSCalendar API instead")));

}
extern "C" {

typedef const struct __attribute__((objc_bridge(NSData))) __CFData * CFDataRef;
typedef struct __attribute__((objc_bridge_mutable(NSMutableData))) __CFData * CFMutableDataRef;

extern
CFTypeID CFDataGetTypeID(void);

extern
CFDataRef CFDataCreate(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex length);

extern
CFDataRef CFDataCreateWithBytesNoCopy(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex length, CFAllocatorRef bytesDeallocator);


extern
CFDataRef CFDataCreateCopy(CFAllocatorRef allocator, CFDataRef theData);

extern
CFMutableDataRef CFDataCreateMutable(CFAllocatorRef allocator, CFIndex capacity);

extern
CFMutableDataRef CFDataCreateMutableCopy(CFAllocatorRef allocator, CFIndex capacity, CFDataRef theData);

extern
CFIndex CFDataGetLength(CFDataRef theData);

extern
const UInt8 *CFDataGetBytePtr(CFDataRef theData);

extern
UInt8 *CFDataGetMutableBytePtr(CFMutableDataRef theData);

extern
void CFDataGetBytes(CFDataRef theData, CFRange range, UInt8 *buffer);

extern
void CFDataSetLength(CFMutableDataRef theData, CFIndex length);

extern
void CFDataIncreaseLength(CFMutableDataRef theData, CFIndex extraLength);

extern
void CFDataAppendBytes(CFMutableDataRef theData, const UInt8 *bytes, CFIndex length);

extern
void CFDataReplaceBytes(CFMutableDataRef theData, CFRange range, const UInt8 *newBytes, CFIndex newLength);

extern
void CFDataDeleteBytes(CFMutableDataRef theData, CFRange range);

typedef CFOptionFlags CFDataSearchFlags; enum {
    kCFDataSearchBackwards = 1UL << 0,
    kCFDataSearchAnchored = 1UL << 1
} __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern
CFRange CFDataFind(CFDataRef theData, CFDataRef dataToFind, CFRange searchRange, CFDataSearchFlags compareOptions) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

}


extern "C" {





typedef const struct __attribute__((objc_bridge(NSCharacterSet))) __CFCharacterSet * CFCharacterSetRef;





typedef struct __attribute__((objc_bridge_mutable(NSMutableCharacterSet))) __CFCharacterSet * CFMutableCharacterSetRef;






typedef CFIndex CFCharacterSetPredefinedSet; enum {
    kCFCharacterSetControl = 1,
    kCFCharacterSetWhitespace,
    kCFCharacterSetWhitespaceAndNewline,
    kCFCharacterSetDecimalDigit,
    kCFCharacterSetLetter,
    kCFCharacterSetLowercaseLetter,
    kCFCharacterSetUppercaseLetter,
    kCFCharacterSetNonBase,
    kCFCharacterSetDecomposable,
    kCFCharacterSetAlphaNumeric,
    kCFCharacterSetPunctuation,
    kCFCharacterSetCapitalizedLetter = 13,
    kCFCharacterSetSymbol = 14,
    kCFCharacterSetNewline __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 15,
    kCFCharacterSetIllegal = 12
};





extern
CFTypeID CFCharacterSetGetTypeID(void);
extern
CFCharacterSetRef CFCharacterSetGetPredefined(CFCharacterSetPredefinedSet theSetIdentifier);
extern
CFCharacterSetRef CFCharacterSetCreateWithCharactersInRange(CFAllocatorRef alloc, CFRange theRange);
extern
CFCharacterSetRef CFCharacterSetCreateWithCharactersInString(CFAllocatorRef alloc, CFStringRef theString);
extern
CFCharacterSetRef CFCharacterSetCreateWithBitmapRepresentation(CFAllocatorRef alloc, CFDataRef theData);
extern CFCharacterSetRef CFCharacterSetCreateInvertedSet(CFAllocatorRef alloc, CFCharacterSetRef theSet);
extern Boolean CFCharacterSetIsSupersetOfSet(CFCharacterSetRef theSet, CFCharacterSetRef theOtherset);
extern Boolean CFCharacterSetHasMemberInPlane(CFCharacterSetRef theSet, CFIndex thePlane);
extern
CFMutableCharacterSetRef CFCharacterSetCreateMutable(CFAllocatorRef alloc);
extern
CFCharacterSetRef CFCharacterSetCreateCopy(CFAllocatorRef alloc, CFCharacterSetRef theSet);
extern
CFMutableCharacterSetRef CFCharacterSetCreateMutableCopy(CFAllocatorRef alloc, CFCharacterSetRef theSet);
extern
Boolean CFCharacterSetIsCharacterMember(CFCharacterSetRef theSet, UniChar theChar);
extern Boolean CFCharacterSetIsLongCharacterMember(CFCharacterSetRef theSet, UTF32Char theChar);
extern
CFDataRef CFCharacterSetCreateBitmapRepresentation(CFAllocatorRef alloc, CFCharacterSetRef theSet);
extern
void CFCharacterSetAddCharactersInRange(CFMutableCharacterSetRef theSet, CFRange theRange);
extern
void CFCharacterSetRemoveCharactersInRange(CFMutableCharacterSetRef theSet, CFRange theRange);
extern
void CFCharacterSetAddCharactersInString(CFMutableCharacterSetRef theSet, CFStringRef theString);
extern
void CFCharacterSetRemoveCharactersInString(CFMutableCharacterSetRef theSet, CFStringRef theString);
extern
void CFCharacterSetUnion(CFMutableCharacterSetRef theSet, CFCharacterSetRef theOtherSet);
extern
void CFCharacterSetIntersect(CFMutableCharacterSetRef theSet, CFCharacterSetRef theOtherSet);
extern
void CFCharacterSetInvert(CFMutableCharacterSetRef theSet);

}




extern "C" {
typedef UInt32 CFStringEncoding;





typedef CFStringEncoding CFStringBuiltInEncodings; enum {
    kCFStringEncodingMacRoman = 0,
    kCFStringEncodingWindowsLatin1 = 0x0500,
    kCFStringEncodingISOLatin1 = 0x0201,
    kCFStringEncodingNextStepLatin = 0x0B01,
    kCFStringEncodingASCII = 0x0600,
    kCFStringEncodingUnicode = 0x0100,
    kCFStringEncodingUTF8 = 0x08000100,
    kCFStringEncodingNonLossyASCII = 0x0BFF,

    kCFStringEncodingUTF16 = 0x0100,
    kCFStringEncodingUTF16BE = 0x10000100,
    kCFStringEncodingUTF16LE = 0x14000100,

    kCFStringEncodingUTF32 = 0x0c000100,
    kCFStringEncodingUTF32BE = 0x18000100,
    kCFStringEncodingUTF32LE = 0x1c000100
};



extern
CFTypeID CFStringGetTypeID(void);
extern
CFStringRef CFStringCreateWithPascalString(CFAllocatorRef alloc, ConstStr255Param pStr, CFStringEncoding encoding);

extern
CFStringRef CFStringCreateWithCString(CFAllocatorRef alloc, const char *cStr, CFStringEncoding encoding);



extern
CFStringRef CFStringCreateWithBytes(CFAllocatorRef alloc, const UInt8 *bytes, CFIndex numBytes, CFStringEncoding encoding, Boolean isExternalRepresentation);

extern
CFStringRef CFStringCreateWithCharacters(CFAllocatorRef alloc, const UniChar *chars, CFIndex numChars);
extern
CFStringRef CFStringCreateWithPascalStringNoCopy(CFAllocatorRef alloc, ConstStr255Param pStr, CFStringEncoding encoding, CFAllocatorRef contentsDeallocator);

extern
CFStringRef CFStringCreateWithCStringNoCopy(CFAllocatorRef alloc, const char *cStr, CFStringEncoding encoding, CFAllocatorRef contentsDeallocator);



extern
CFStringRef CFStringCreateWithBytesNoCopy(CFAllocatorRef alloc, const UInt8 *bytes, CFIndex numBytes, CFStringEncoding encoding, Boolean isExternalRepresentation, CFAllocatorRef contentsDeallocator);

extern
CFStringRef CFStringCreateWithCharactersNoCopy(CFAllocatorRef alloc, const UniChar *chars, CFIndex numChars, CFAllocatorRef contentsDeallocator);



extern
CFStringRef CFStringCreateWithSubstring(CFAllocatorRef alloc, CFStringRef str, CFRange range);

extern
CFStringRef CFStringCreateCopy(CFAllocatorRef alloc, CFStringRef theString);



extern
CFStringRef CFStringCreateWithFormat(CFAllocatorRef alloc, CFDictionaryRef formatOptions, CFStringRef format, ...) __attribute__((format(CFString, 3, 4)));

extern
CFStringRef CFStringCreateWithFormatAndArguments(CFAllocatorRef alloc, CFDictionaryRef formatOptions, CFStringRef format, va_list arguments) __attribute__((format(CFString, 3, 0)));



extern
CFMutableStringRef CFStringCreateMutable(CFAllocatorRef alloc, CFIndex maxLength);

extern
CFMutableStringRef CFStringCreateMutableCopy(CFAllocatorRef alloc, CFIndex maxLength, CFStringRef theString);







extern
CFMutableStringRef CFStringCreateMutableWithExternalCharactersNoCopy(CFAllocatorRef alloc, UniChar *chars, CFIndex numChars, CFIndex capacity, CFAllocatorRef externalCharactersAllocator);





extern
CFIndex CFStringGetLength(CFStringRef theString);






extern
UniChar CFStringGetCharacterAtIndex(CFStringRef theString, CFIndex idx);

extern
void CFStringGetCharacters(CFStringRef theString, CFRange range, UniChar *buffer);
extern
Boolean CFStringGetPascalString(CFStringRef theString, StringPtr buffer, CFIndex bufferSize, CFStringEncoding encoding);

extern
Boolean CFStringGetCString(CFStringRef theString, char *buffer, CFIndex bufferSize, CFStringEncoding encoding);






extern
ConstStringPtr CFStringGetPascalStringPtr(CFStringRef theString, CFStringEncoding encoding);

extern
const char *CFStringGetCStringPtr(CFStringRef theString, CFStringEncoding encoding);

extern
const UniChar *CFStringGetCharactersPtr(CFStringRef theString);
extern
CFIndex CFStringGetBytes(CFStringRef theString, CFRange range, CFStringEncoding encoding, UInt8 lossByte, Boolean isExternalRepresentation, UInt8 *buffer, CFIndex maxBufLen, CFIndex *usedBufLen);







extern
CFStringRef CFStringCreateFromExternalRepresentation(CFAllocatorRef alloc, CFDataRef data, CFStringEncoding encoding);

extern
CFDataRef CFStringCreateExternalRepresentation(CFAllocatorRef alloc, CFStringRef theString, CFStringEncoding encoding, UInt8 lossByte);



extern
CFStringEncoding CFStringGetSmallestEncoding(CFStringRef theString);

extern
CFStringEncoding CFStringGetFastestEncoding(CFStringRef theString);



extern
CFStringEncoding CFStringGetSystemEncoding(void);

extern
CFIndex CFStringGetMaximumSizeForEncoding(CFIndex length, CFStringEncoding encoding);






extern
Boolean CFStringGetFileSystemRepresentation(CFStringRef string, char *buffer, CFIndex maxBufLen);



extern
CFIndex CFStringGetMaximumSizeOfFileSystemRepresentation(CFStringRef string);



extern
CFStringRef CFStringCreateWithFileSystemRepresentation(CFAllocatorRef alloc, const char *buffer);






typedef CFOptionFlags CFStringCompareFlags; enum {
    kCFCompareCaseInsensitive = 1,
    kCFCompareBackwards = 4,
    kCFCompareAnchored = 8,
    kCFCompareNonliteral = 16,
    kCFCompareLocalized = 32,
    kCFCompareNumerically = 64,
    kCFCompareDiacriticInsensitive __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 128,
    kCFCompareWidthInsensitive __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 256,
    kCFCompareForcedOrdering __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 512
};







extern
CFComparisonResult CFStringCompareWithOptionsAndLocale(CFStringRef theString1, CFStringRef theString2, CFRange rangeToCompare, CFStringCompareFlags compareOptions, CFLocaleRef locale) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern
CFComparisonResult CFStringCompareWithOptions(CFStringRef theString1, CFStringRef theString2, CFRange rangeToCompare, CFStringCompareFlags compareOptions);





extern
CFComparisonResult CFStringCompare(CFStringRef theString1, CFStringRef theString2, CFStringCompareFlags compareOptions);







extern
Boolean CFStringFindWithOptionsAndLocale(CFStringRef theString, CFStringRef stringToFind, CFRange rangeToSearch, CFStringCompareFlags searchOptions, CFLocaleRef locale, CFRange *result) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern
Boolean CFStringFindWithOptions(CFStringRef theString, CFStringRef stringToFind, CFRange rangeToSearch, CFStringCompareFlags searchOptions, CFRange *result);
extern
CFArrayRef CFStringCreateArrayWithFindResults(CFAllocatorRef alloc, CFStringRef theString, CFStringRef stringToFind, CFRange rangeToSearch, CFStringCompareFlags compareOptions);



extern
CFRange CFStringFind(CFStringRef theString, CFStringRef stringToFind, CFStringCompareFlags compareOptions);

extern
Boolean CFStringHasPrefix(CFStringRef theString, CFStringRef prefix);

extern
Boolean CFStringHasSuffix(CFStringRef theString, CFStringRef suffix);
extern CFRange CFStringGetRangeOfComposedCharactersAtIndex(CFStringRef theString, CFIndex theIndex);
extern Boolean CFStringFindCharacterFromSet(CFStringRef theString, CFCharacterSetRef theSet, CFRange rangeToSearch, CFStringCompareFlags searchOptions, CFRange *result);
extern
void CFStringGetLineBounds(CFStringRef theString, CFRange range, CFIndex *lineBeginIndex, CFIndex *lineEndIndex, CFIndex *contentsEndIndex);



extern
void CFStringGetParagraphBounds(CFStringRef string, CFRange range, CFIndex *parBeginIndex, CFIndex *parEndIndex, CFIndex *contentsEndIndex) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
CFIndex CFStringGetHyphenationLocationBeforeIndex(CFStringRef string, CFIndex location, CFRange limitRange, CFOptionFlags options, CFLocaleRef locale, UTF32Char *character) __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.2))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern
Boolean CFStringIsHyphenationAvailableForLocale(CFLocaleRef locale) __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.3))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern
CFStringRef CFStringCreateByCombiningStrings(CFAllocatorRef alloc, CFArrayRef theArray, CFStringRef separatorString);

extern
CFArrayRef CFStringCreateArrayBySeparatingStrings(CFAllocatorRef alloc, CFStringRef theString, CFStringRef separatorString);




extern
SInt32 CFStringGetIntValue(CFStringRef str);

extern
double CFStringGetDoubleValue(CFStringRef str);
extern
void CFStringAppend(CFMutableStringRef theString, CFStringRef appendedString);

extern
void CFStringAppendCharacters(CFMutableStringRef theString, const UniChar *chars, CFIndex numChars);

extern
void CFStringAppendPascalString(CFMutableStringRef theString, ConstStr255Param pStr, CFStringEncoding encoding);

extern
void CFStringAppendCString(CFMutableStringRef theString, const char *cStr, CFStringEncoding encoding);

extern
void CFStringAppendFormat(CFMutableStringRef theString, CFDictionaryRef formatOptions, CFStringRef format, ...) __attribute__((format(CFString, 3, 4)));

extern
void CFStringAppendFormatAndArguments(CFMutableStringRef theString, CFDictionaryRef formatOptions, CFStringRef format, va_list arguments) __attribute__((format(CFString, 3, 0)));

extern
void CFStringInsert(CFMutableStringRef str, CFIndex idx, CFStringRef insertedStr);

extern
void CFStringDelete(CFMutableStringRef theString, CFRange range);

extern
void CFStringReplace(CFMutableStringRef theString, CFRange range, CFStringRef replacement);

extern
void CFStringReplaceAll(CFMutableStringRef theString, CFStringRef replacement);
extern
CFIndex CFStringFindAndReplace(CFMutableStringRef theString, CFStringRef stringToFind, CFStringRef replacementString, CFRange rangeToSearch, CFStringCompareFlags compareOptions);
extern
void CFStringSetExternalCharactersNoCopy(CFMutableStringRef theString, UniChar *chars, CFIndex length, CFIndex capacity);
extern
void CFStringPad(CFMutableStringRef theString, CFStringRef padString, CFIndex length, CFIndex indexIntoPad);

extern
void CFStringTrim(CFMutableStringRef theString, CFStringRef trimString);

extern
void CFStringTrimWhitespace(CFMutableStringRef theString);

extern
void CFStringLowercase(CFMutableStringRef theString, CFLocaleRef locale);

extern
void CFStringUppercase(CFMutableStringRef theString, CFLocaleRef locale);

extern
void CFStringCapitalize(CFMutableStringRef theString, CFLocaleRef locale);







typedef CFIndex CFStringNormalizationForm; enum {
 kCFStringNormalizationFormD = 0,
 kCFStringNormalizationFormKD,
 kCFStringNormalizationFormC,
 kCFStringNormalizationFormKC
};
extern void CFStringNormalize(CFMutableStringRef theString, CFStringNormalizationForm theForm);
extern
void CFStringFold(CFMutableStringRef theString, CFStringCompareFlags theFlags, CFLocaleRef theLocale) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





extern
Boolean CFStringTransform(CFMutableStringRef string, CFRange *range, CFStringRef transform, Boolean reverse);



extern const CFStringRef kCFStringTransformStripCombiningMarks;
extern const CFStringRef kCFStringTransformToLatin;
extern const CFStringRef kCFStringTransformFullwidthHalfwidth;
extern const CFStringRef kCFStringTransformLatinKatakana;
extern const CFStringRef kCFStringTransformLatinHiragana;
extern const CFStringRef kCFStringTransformHiraganaKatakana;
extern const CFStringRef kCFStringTransformMandarinLatin;
extern const CFStringRef kCFStringTransformLatinHangul;
extern const CFStringRef kCFStringTransformLatinArabic;
extern const CFStringRef kCFStringTransformLatinHebrew;
extern const CFStringRef kCFStringTransformLatinThai;
extern const CFStringRef kCFStringTransformLatinCyrillic;
extern const CFStringRef kCFStringTransformLatinGreek;
extern const CFStringRef kCFStringTransformToXMLHex;
extern const CFStringRef kCFStringTransformToUnicodeName;
extern const CFStringRef kCFStringTransformStripDiacritics __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






extern
Boolean CFStringIsEncodingAvailable(CFStringEncoding encoding);



extern
const CFStringEncoding *CFStringGetListOfAvailableEncodings(void);



extern
CFStringRef CFStringGetNameOfEncoding(CFStringEncoding encoding);



extern
unsigned long CFStringConvertEncodingToNSStringEncoding(CFStringEncoding encoding);

extern
CFStringEncoding CFStringConvertNSStringEncodingToEncoding(unsigned long encoding);



extern
UInt32 CFStringConvertEncodingToWindowsCodepage(CFStringEncoding encoding);

extern
CFStringEncoding CFStringConvertWindowsCodepageToEncoding(UInt32 codepage);



extern
CFStringEncoding CFStringConvertIANACharSetNameToEncoding(CFStringRef theString);

extern
CFStringRef CFStringConvertEncodingToIANACharSetName(CFStringEncoding encoding);





extern
CFStringEncoding CFStringGetMostCompatibleMacStringEncoding(CFStringEncoding encoding);
typedef struct {
    UniChar buffer[64];
    CFStringRef theString;
    const UniChar *directUniCharBuffer;
    const char *directCStringBuffer;
    CFRange rangeToBuffer;
    CFIndex bufferedRangeStart;
    CFIndex bufferedRangeEnd;
} CFStringInlineBuffer;


static __inline__ __attribute__((always_inline)) void CFStringInitInlineBuffer(CFStringRef str, CFStringInlineBuffer *buf, CFRange range) {
    buf->theString = str;
    buf->rangeToBuffer = range;
    buf->directCStringBuffer = (buf->directUniCharBuffer = CFStringGetCharactersPtr(str)) ? __null : CFStringGetCStringPtr(str, kCFStringEncodingASCII);
    buf->bufferedRangeStart = buf->bufferedRangeEnd = 0;
}

static __inline__ __attribute__((always_inline)) UniChar CFStringGetCharacterFromInlineBuffer(CFStringInlineBuffer *buf, CFIndex idx) {
    if (idx < 0 || idx >= buf->rangeToBuffer.length) return 0;
    if (buf->directUniCharBuffer) return buf->directUniCharBuffer[idx + buf->rangeToBuffer.location];
    if (buf->directCStringBuffer) return (UniChar)(buf->directCStringBuffer[idx + buf->rangeToBuffer.location]);
    if (idx >= buf->bufferedRangeEnd || idx < buf->bufferedRangeStart) {
 if ((buf->bufferedRangeStart = idx - 4) < 0) buf->bufferedRangeStart = 0;
 buf->bufferedRangeEnd = buf->bufferedRangeStart + 64;
 if (buf->bufferedRangeEnd > buf->rangeToBuffer.length) buf->bufferedRangeEnd = buf->rangeToBuffer.length;
 CFStringGetCharacters(buf->theString, CFRangeMake(buf->rangeToBuffer.location + buf->bufferedRangeStart, buf->bufferedRangeEnd - buf->bufferedRangeStart), buf->buffer);
    }
    return buf->buffer[idx - buf->bufferedRangeStart];
}
static __inline__ __attribute__((always_inline)) Boolean CFStringIsSurrogateHighCharacter(UniChar character) {
    return ((character >= 0xD800UL) && (character <= 0xDBFFUL) ? true : false);
}

static __inline__ __attribute__((always_inline)) Boolean CFStringIsSurrogateLowCharacter(UniChar character) {
    return ((character >= 0xDC00UL) && (character <= 0xDFFFUL) ? true : false);
}

static __inline__ __attribute__((always_inline)) UTF32Char CFStringGetLongCharacterForSurrogatePair(UniChar surrogateHigh, UniChar surrogateLow) {
    return (UTF32Char)(((surrogateHigh - 0xD800UL) << 10) + (surrogateLow - 0xDC00UL) + 0x0010000UL);
}


static __inline__ __attribute__((always_inline)) Boolean CFStringGetSurrogatePairForLongCharacter(UTF32Char character, UniChar *surrogates) {
    if ((character > 0xFFFFUL) && (character < 0x110000UL)) {
        character -= 0x10000;
        if (__null != surrogates) {
            surrogates[0] = (UniChar)((character >> 10) + 0xD800UL);
            surrogates[1] = (UniChar)((character & 0x3FF) + 0xDC00UL);
        }
        return true;
    } else {
        if (__null != surrogates) *surrogates = (UniChar)character;
        return false;
    }
}







extern
void CFShow(CFTypeRef obj);

extern
void CFShowStr(CFStringRef str);


extern
CFStringRef __CFStringMakeConstantString(const char *cStr) __attribute__((format_arg(1)));

}




extern "C" {

extern
CFTypeID CFTimeZoneGetTypeID(void);

extern
CFTimeZoneRef CFTimeZoneCopySystem(void);

extern
void CFTimeZoneResetSystem(void);

extern
CFTimeZoneRef CFTimeZoneCopyDefault(void);

extern
void CFTimeZoneSetDefault(CFTimeZoneRef tz);

extern
CFArrayRef CFTimeZoneCopyKnownNames(void);

extern
CFDictionaryRef CFTimeZoneCopyAbbreviationDictionary(void);

extern
void CFTimeZoneSetAbbreviationDictionary(CFDictionaryRef dict);

extern
CFTimeZoneRef CFTimeZoneCreate(CFAllocatorRef allocator, CFStringRef name, CFDataRef data);

extern
CFTimeZoneRef CFTimeZoneCreateWithTimeIntervalFromGMT(CFAllocatorRef allocator, CFTimeInterval ti);

extern
CFTimeZoneRef CFTimeZoneCreateWithName(CFAllocatorRef allocator, CFStringRef name, Boolean tryAbbrev);

extern
CFStringRef CFTimeZoneGetName(CFTimeZoneRef tz);

extern
CFDataRef CFTimeZoneGetData(CFTimeZoneRef tz);

extern
CFTimeInterval CFTimeZoneGetSecondsFromGMT(CFTimeZoneRef tz, CFAbsoluteTime at);

extern
CFStringRef CFTimeZoneCopyAbbreviation(CFTimeZoneRef tz, CFAbsoluteTime at);

extern
Boolean CFTimeZoneIsDaylightSavingTime(CFTimeZoneRef tz, CFAbsoluteTime at);

extern
CFTimeInterval CFTimeZoneGetDaylightSavingTimeOffset(CFTimeZoneRef tz, CFAbsoluteTime at) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern
CFAbsoluteTime CFTimeZoneGetNextDaylightSavingTimeTransition(CFTimeZoneRef tz, CFAbsoluteTime at) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

typedef CFIndex CFTimeZoneNameStyle; enum {
 kCFTimeZoneNameStyleStandard,
 kCFTimeZoneNameStyleShortStandard,
 kCFTimeZoneNameStyleDaylightSaving,
 kCFTimeZoneNameStyleShortDaylightSaving,
 kCFTimeZoneNameStyleGeneric,
 kCFTimeZoneNameStyleShortGeneric
} __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern
CFStringRef CFTimeZoneCopyLocalizedName(CFTimeZoneRef tz, CFTimeZoneNameStyle style, CFLocaleRef locale) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern
const CFNotificationName kCFTimeZoneSystemTimeZoneDidChangeNotification __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

}


extern "C" {

typedef struct __attribute__((objc_bridge_mutable(NSCalendar))) __CFCalendar * CFCalendarRef;

extern
CFTypeID CFCalendarGetTypeID(void);

extern
CFCalendarRef CFCalendarCopyCurrent(void);

extern
CFCalendarRef CFCalendarCreateWithIdentifier(CFAllocatorRef allocator, CFCalendarIdentifier identifier);



extern
CFCalendarIdentifier CFCalendarGetIdentifier(CFCalendarRef calendar);


extern
CFLocaleRef CFCalendarCopyLocale(CFCalendarRef calendar);

extern
void CFCalendarSetLocale(CFCalendarRef calendar, CFLocaleRef locale);

extern
CFTimeZoneRef CFCalendarCopyTimeZone(CFCalendarRef calendar);

extern
void CFCalendarSetTimeZone(CFCalendarRef calendar, CFTimeZoneRef tz);

extern
CFIndex CFCalendarGetFirstWeekday(CFCalendarRef calendar);

extern
void CFCalendarSetFirstWeekday(CFCalendarRef calendar, CFIndex wkdy);

extern
CFIndex CFCalendarGetMinimumDaysInFirstWeek(CFCalendarRef calendar);

extern
void CFCalendarSetMinimumDaysInFirstWeek(CFCalendarRef calendar, CFIndex mwd);


typedef CFOptionFlags CFCalendarUnit; enum {
 kCFCalendarUnitEra = (1UL << 1),
 kCFCalendarUnitYear = (1UL << 2),
 kCFCalendarUnitMonth = (1UL << 3),
 kCFCalendarUnitDay = (1UL << 4),
 kCFCalendarUnitHour = (1UL << 5),
 kCFCalendarUnitMinute = (1UL << 6),
 kCFCalendarUnitSecond = (1UL << 7),
 kCFCalendarUnitWeek __attribute__((availability(macos,introduced=10.4,deprecated=10.10,message="Use kCFCalendarUnitWeekOfYear or kCFCalendarUnitWeekOfMonth instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,message="Use kCFCalendarUnitWeekOfYear or kCFCalendarUnitWeekOfMonth instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use kCFCalendarUnitWeekOfYear or kCFCalendarUnitWeekOfMonth instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use kCFCalendarUnitWeekOfYear or kCFCalendarUnitWeekOfMonth instead"))) = (1UL << 8),
 kCFCalendarUnitWeekday = (1UL << 9),
 kCFCalendarUnitWeekdayOrdinal = (1UL << 10),
 kCFCalendarUnitQuarter __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = (1UL << 11),
 kCFCalendarUnitWeekOfMonth __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = (1UL << 12),
 kCFCalendarUnitWeekOfYear __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = (1UL << 13),
 kCFCalendarUnitYearForWeekOfYear __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = (1UL << 14),
};

extern
CFRange CFCalendarGetMinimumRangeOfUnit(CFCalendarRef calendar, CFCalendarUnit unit);

extern
CFRange CFCalendarGetMaximumRangeOfUnit(CFCalendarRef calendar, CFCalendarUnit unit);

extern
CFRange CFCalendarGetRangeOfUnit(CFCalendarRef calendar, CFCalendarUnit smallerUnit, CFCalendarUnit biggerUnit, CFAbsoluteTime at);

extern
CFIndex CFCalendarGetOrdinalityOfUnit(CFCalendarRef calendar, CFCalendarUnit smallerUnit, CFCalendarUnit biggerUnit, CFAbsoluteTime at);

extern
Boolean CFCalendarGetTimeRangeOfUnit(CFCalendarRef calendar, CFCalendarUnit unit, CFAbsoluteTime at, CFAbsoluteTime *startp, CFTimeInterval *tip) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern
Boolean CFCalendarComposeAbsoluteTime(CFCalendarRef calendar, CFAbsoluteTime *at, const char *componentDesc, ...);

extern
Boolean CFCalendarDecomposeAbsoluteTime(CFCalendarRef calendar, CFAbsoluteTime at, const char *componentDesc, ...);


enum {
    kCFCalendarComponentsWrap = (1UL << 0)
};

extern
Boolean CFCalendarAddComponents(CFCalendarRef calendar, CFAbsoluteTime *at, CFOptionFlags options, const char *componentDesc, ...);

extern
Boolean CFCalendarGetComponentDifference(CFCalendarRef calendar, CFAbsoluteTime startingAT, CFAbsoluteTime resultAT, CFOptionFlags options, const char *componentDesc, ...);


}



extern "C" {

typedef CFStringRef CFDateFormatterKey __attribute__((swift_wrapper(enum)));

typedef struct __attribute__((objc_bridge_mutable(id))) __CFDateFormatter *CFDateFormatterRef;



extern
CFStringRef CFDateFormatterCreateDateFormatFromTemplate(CFAllocatorRef allocator, CFStringRef tmplate, CFOptionFlags options, CFLocaleRef locale) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
CFTypeID CFDateFormatterGetTypeID(void);
typedef CFIndex CFDateFormatterStyle; enum {
    kCFDateFormatterNoStyle = 0,
    kCFDateFormatterShortStyle = 1,
    kCFDateFormatterMediumStyle = 2,
    kCFDateFormatterLongStyle = 3,
    kCFDateFormatterFullStyle = 4
};

typedef CFOptionFlags CFISO8601DateFormatOptions; enum {




    kCFISO8601DateFormatWithYear __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = (1UL << 0),
    kCFISO8601DateFormatWithMonth __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = (1UL << 1),

    kCFISO8601DateFormatWithWeekOfYear __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = (1UL << 2),






    kCFISO8601DateFormatWithDay __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = (1UL << 4),

    kCFISO8601DateFormatWithTime __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = (1UL << 5),
    kCFISO8601DateFormatWithTimeZone __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = (1UL << 6),

    kCFISO8601DateFormatWithSpaceBetweenDateAndTime __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = (1UL << 7),
    kCFISO8601DateFormatWithDashSeparatorInDate __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = (1UL << 8),
    kCFISO8601DateFormatWithColonSeparatorInTime __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = (1UL << 9),
    kCFISO8601DateFormatWithColonSeparatorInTimeZone __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = (1UL << 10),
    kCFISO8601DateFormatWithFractionalSeconds __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0))) = (1UL << 11),

    kCFISO8601DateFormatWithFullDate __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = kCFISO8601DateFormatWithYear | kCFISO8601DateFormatWithMonth | kCFISO8601DateFormatWithDay | kCFISO8601DateFormatWithDashSeparatorInDate,
    kCFISO8601DateFormatWithFullTime __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = kCFISO8601DateFormatWithTime | kCFISO8601DateFormatWithColonSeparatorInTime | kCFISO8601DateFormatWithTimeZone | kCFISO8601DateFormatWithColonSeparatorInTimeZone,

    kCFISO8601DateFormatWithInternetDateTime __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = kCFISO8601DateFormatWithFullDate | kCFISO8601DateFormatWithFullTime,
};

extern
CFDateFormatterRef CFDateFormatterCreateISO8601Formatter(CFAllocatorRef allocator, CFISO8601DateFormatOptions formatOptions) __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

extern
CFDateFormatterRef CFDateFormatterCreate(CFAllocatorRef allocator, CFLocaleRef locale, CFDateFormatterStyle dateStyle, CFDateFormatterStyle timeStyle);



extern
CFLocaleRef CFDateFormatterGetLocale(CFDateFormatterRef formatter);

extern
CFDateFormatterStyle CFDateFormatterGetDateStyle(CFDateFormatterRef formatter);

extern
CFDateFormatterStyle CFDateFormatterGetTimeStyle(CFDateFormatterRef formatter);


extern
CFStringRef CFDateFormatterGetFormat(CFDateFormatterRef formatter);

extern
void CFDateFormatterSetFormat(CFDateFormatterRef formatter, CFStringRef formatString);







extern
CFStringRef CFDateFormatterCreateStringWithDate(CFAllocatorRef allocator, CFDateFormatterRef formatter, CFDateRef date);

extern
CFStringRef CFDateFormatterCreateStringWithAbsoluteTime(CFAllocatorRef allocator, CFDateFormatterRef formatter, CFAbsoluteTime at);




extern
CFDateRef CFDateFormatterCreateDateFromString(CFAllocatorRef allocator, CFDateFormatterRef formatter, CFStringRef string, CFRange *rangep);

extern
Boolean CFDateFormatterGetAbsoluteTimeFromString(CFDateFormatterRef formatter, CFStringRef string, CFRange *rangep, CFAbsoluteTime *atp);
extern
void CFDateFormatterSetProperty(CFDateFormatterRef formatter, CFStringRef key, CFTypeRef value);

extern
CFTypeRef CFDateFormatterCopyProperty(CFDateFormatterRef formatter, CFDateFormatterKey key);



extern const CFDateFormatterKey kCFDateFormatterIsLenient;
extern const CFDateFormatterKey kCFDateFormatterTimeZone;
extern const CFDateFormatterKey kCFDateFormatterCalendarName;
extern const CFDateFormatterKey kCFDateFormatterDefaultFormat;
extern const CFDateFormatterKey kCFDateFormatterTwoDigitStartDate;
extern const CFDateFormatterKey kCFDateFormatterDefaultDate;
extern const CFDateFormatterKey kCFDateFormatterCalendar;
extern const CFDateFormatterKey kCFDateFormatterEraSymbols;
extern const CFDateFormatterKey kCFDateFormatterMonthSymbols;
extern const CFDateFormatterKey kCFDateFormatterShortMonthSymbols;
extern const CFDateFormatterKey kCFDateFormatterWeekdaySymbols;
extern const CFDateFormatterKey kCFDateFormatterShortWeekdaySymbols;
extern const CFDateFormatterKey kCFDateFormatterAMSymbol;
extern const CFDateFormatterKey kCFDateFormatterPMSymbol;
extern const CFDateFormatterKey kCFDateFormatterLongEraSymbols __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFDateFormatterKey kCFDateFormatterVeryShortMonthSymbols __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFDateFormatterKey kCFDateFormatterStandaloneMonthSymbols __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFDateFormatterKey kCFDateFormatterShortStandaloneMonthSymbols __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFDateFormatterKey kCFDateFormatterVeryShortStandaloneMonthSymbols __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFDateFormatterKey kCFDateFormatterVeryShortWeekdaySymbols __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFDateFormatterKey kCFDateFormatterStandaloneWeekdaySymbols __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFDateFormatterKey kCFDateFormatterShortStandaloneWeekdaySymbols __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFDateFormatterKey kCFDateFormatterVeryShortStandaloneWeekdaySymbols __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFDateFormatterKey kCFDateFormatterQuarterSymbols __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFDateFormatterKey kCFDateFormatterShortQuarterSymbols __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFDateFormatterKey kCFDateFormatterStandaloneQuarterSymbols __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFDateFormatterKey kCFDateFormatterShortStandaloneQuarterSymbols __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFDateFormatterKey kCFDateFormatterGregorianStartDate __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFDateFormatterKey kCFDateFormatterDoesRelativeDateFormattingKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
}

extern "C" {

typedef CFStringRef CFErrorDomain __attribute__((swift_wrapper(struct)));





typedef struct __attribute__((objc_bridge(NSError))) __CFError * CFErrorRef;





extern
CFTypeID CFErrorGetTypeID(void) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern const CFErrorDomain kCFErrorDomainPOSIX __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFErrorDomain kCFErrorDomainOSStatus __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFErrorDomain kCFErrorDomainMach __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFErrorDomain kCFErrorDomainCocoa __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern const CFStringRef kCFErrorLocalizedDescriptionKey __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFStringRef kCFErrorLocalizedFailureKey __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
extern const CFStringRef kCFErrorLocalizedFailureReasonKey __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFStringRef kCFErrorLocalizedRecoverySuggestionKey __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern const CFStringRef kCFErrorDescriptionKey __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern const CFStringRef kCFErrorUnderlyingErrorKey __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFStringRef kCFErrorURLKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFStringRef kCFErrorFilePathKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
CFErrorRef CFErrorCreate(CFAllocatorRef allocator, CFErrorDomain domain, CFIndex code, CFDictionaryRef userInfo) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
CFErrorRef CFErrorCreateWithUserInfoKeysAndValues(CFAllocatorRef allocator, CFErrorDomain domain, CFIndex code, const void *const *userInfoKeys, const void *const *userInfoValues, CFIndex numUserInfoValues) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));







extern
CFErrorDomain CFErrorGetDomain(CFErrorRef err) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));







extern
CFIndex CFErrorGetCode(CFErrorRef err) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
CFDictionaryRef CFErrorCopyUserInfo(CFErrorRef err) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
CFStringRef CFErrorCopyDescription(CFErrorRef err) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
CFStringRef CFErrorCopyFailureReason(CFErrorRef err) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
CFStringRef CFErrorCopyRecoverySuggestion(CFErrorRef err) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



}

extern "C" {

typedef const struct __attribute__((objc_bridge(NSNumber))) __CFBoolean * CFBooleanRef;

extern
const CFBooleanRef kCFBooleanTrue;
extern
const CFBooleanRef kCFBooleanFalse;

extern
CFTypeID CFBooleanGetTypeID(void);

extern
Boolean CFBooleanGetValue(CFBooleanRef boolean);

typedef CFIndex CFNumberType; enum {

    kCFNumberSInt8Type = 1,
    kCFNumberSInt16Type = 2,
    kCFNumberSInt32Type = 3,
    kCFNumberSInt64Type = 4,
    kCFNumberFloat32Type = 5,
    kCFNumberFloat64Type = 6,

    kCFNumberCharType = 7,
    kCFNumberShortType = 8,
    kCFNumberIntType = 9,
    kCFNumberLongType = 10,
    kCFNumberLongLongType = 11,
    kCFNumberFloatType = 12,
    kCFNumberDoubleType = 13,

    kCFNumberCFIndexType = 14,
    kCFNumberNSIntegerType __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 15,
    kCFNumberCGFloatType __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 16,
    kCFNumberMaxType = 16
};

typedef const struct __attribute__((objc_bridge(NSNumber))) __CFNumber * CFNumberRef;

extern
const CFNumberRef kCFNumberPositiveInfinity;
extern
const CFNumberRef kCFNumberNegativeInfinity;
extern
const CFNumberRef kCFNumberNaN;

extern
CFTypeID CFNumberGetTypeID(void);
extern
CFNumberRef CFNumberCreate(CFAllocatorRef allocator, CFNumberType theType, const void *valuePtr);





extern
CFNumberType CFNumberGetType(CFNumberRef number);




extern
CFIndex CFNumberGetByteSize(CFNumberRef number);





extern
Boolean CFNumberIsFloatType(CFNumberRef number);
extern
Boolean CFNumberGetValue(CFNumberRef number, CFNumberType theType, void *valuePtr);
extern
CFComparisonResult CFNumberCompare(CFNumberRef number, CFNumberRef otherNumber, void *context);

}
extern "C" {

typedef CFStringRef CFNumberFormatterKey __attribute__((swift_wrapper(enum)));

typedef struct __attribute__((objc_bridge_mutable(id))) __CFNumberFormatter *CFNumberFormatterRef;



extern
CFTypeID CFNumberFormatterGetTypeID(void);

typedef CFIndex CFNumberFormatterStyle; enum {
 kCFNumberFormatterNoStyle = 0,
 kCFNumberFormatterDecimalStyle = 1,
 kCFNumberFormatterCurrencyStyle = 2,
 kCFNumberFormatterPercentStyle = 3,
 kCFNumberFormatterScientificStyle = 4,
 kCFNumberFormatterSpellOutStyle = 5,
 kCFNumberFormatterOrdinalStyle __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 6,
 kCFNumberFormatterCurrencyISOCodeStyle __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 8,
 kCFNumberFormatterCurrencyPluralStyle __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 9,
 kCFNumberFormatterCurrencyAccountingStyle __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 10,
};


extern
CFNumberFormatterRef CFNumberFormatterCreate(CFAllocatorRef allocator, CFLocaleRef locale, CFNumberFormatterStyle style);



extern
CFLocaleRef CFNumberFormatterGetLocale(CFNumberFormatterRef formatter);

extern
CFNumberFormatterStyle CFNumberFormatterGetStyle(CFNumberFormatterRef formatter);


extern
CFStringRef CFNumberFormatterGetFormat(CFNumberFormatterRef formatter);

extern
void CFNumberFormatterSetFormat(CFNumberFormatterRef formatter, CFStringRef formatString);
extern
CFStringRef CFNumberFormatterCreateStringWithNumber(CFAllocatorRef allocator, CFNumberFormatterRef formatter, CFNumberRef number);

extern
CFStringRef CFNumberFormatterCreateStringWithValue(CFAllocatorRef allocator, CFNumberFormatterRef formatter, CFNumberType numberType, const void *valuePtr);




typedef CFOptionFlags CFNumberFormatterOptionFlags; enum {
    kCFNumberFormatterParseIntegersOnly = 1
};

extern
CFNumberRef CFNumberFormatterCreateNumberFromString(CFAllocatorRef allocator, CFNumberFormatterRef formatter, CFStringRef string, CFRange *rangep, CFOptionFlags options);

extern
Boolean CFNumberFormatterGetValueFromString(CFNumberFormatterRef formatter, CFStringRef string, CFRange *rangep, CFNumberType numberType, void *valuePtr);
extern
void CFNumberFormatterSetProperty(CFNumberFormatterRef formatter, CFNumberFormatterKey key, CFTypeRef value);

extern
CFTypeRef CFNumberFormatterCopyProperty(CFNumberFormatterRef formatter, CFNumberFormatterKey key);



extern const CFNumberFormatterKey kCFNumberFormatterCurrencyCode;
extern const CFNumberFormatterKey kCFNumberFormatterDecimalSeparator;
extern const CFNumberFormatterKey kCFNumberFormatterCurrencyDecimalSeparator;
extern const CFNumberFormatterKey kCFNumberFormatterAlwaysShowDecimalSeparator;
extern const CFNumberFormatterKey kCFNumberFormatterGroupingSeparator;
extern const CFNumberFormatterKey kCFNumberFormatterUseGroupingSeparator;
extern const CFNumberFormatterKey kCFNumberFormatterPercentSymbol;
extern const CFNumberFormatterKey kCFNumberFormatterZeroSymbol;
extern const CFNumberFormatterKey kCFNumberFormatterNaNSymbol;
extern const CFNumberFormatterKey kCFNumberFormatterInfinitySymbol;
extern const CFNumberFormatterKey kCFNumberFormatterMinusSign;
extern const CFNumberFormatterKey kCFNumberFormatterPlusSign;
extern const CFNumberFormatterKey kCFNumberFormatterCurrencySymbol;
extern const CFNumberFormatterKey kCFNumberFormatterExponentSymbol;
extern const CFNumberFormatterKey kCFNumberFormatterMinIntegerDigits;
extern const CFNumberFormatterKey kCFNumberFormatterMaxIntegerDigits;
extern const CFNumberFormatterKey kCFNumberFormatterMinFractionDigits;
extern const CFNumberFormatterKey kCFNumberFormatterMaxFractionDigits;
extern const CFNumberFormatterKey kCFNumberFormatterGroupingSize;
extern const CFNumberFormatterKey kCFNumberFormatterSecondaryGroupingSize;
extern const CFNumberFormatterKey kCFNumberFormatterRoundingMode;
extern const CFNumberFormatterKey kCFNumberFormatterRoundingIncrement;
extern const CFNumberFormatterKey kCFNumberFormatterFormatWidth;
extern const CFNumberFormatterKey kCFNumberFormatterPaddingPosition;
extern const CFNumberFormatterKey kCFNumberFormatterPaddingCharacter;
extern const CFNumberFormatterKey kCFNumberFormatterDefaultFormat;
extern const CFNumberFormatterKey kCFNumberFormatterMultiplier;
extern const CFNumberFormatterKey kCFNumberFormatterPositivePrefix;
extern const CFNumberFormatterKey kCFNumberFormatterPositiveSuffix;
extern const CFNumberFormatterKey kCFNumberFormatterNegativePrefix;
extern const CFNumberFormatterKey kCFNumberFormatterNegativeSuffix;
extern const CFNumberFormatterKey kCFNumberFormatterPerMillSymbol;
extern const CFNumberFormatterKey kCFNumberFormatterInternationalCurrencySymbol;
extern const CFNumberFormatterKey kCFNumberFormatterCurrencyGroupingSeparator __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFNumberFormatterKey kCFNumberFormatterIsLenient __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFNumberFormatterKey kCFNumberFormatterUseSignificantDigits __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFNumberFormatterKey kCFNumberFormatterMinSignificantDigits __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern const CFNumberFormatterKey kCFNumberFormatterMaxSignificantDigits __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

typedef CFIndex CFNumberFormatterRoundingMode; enum {
    kCFNumberFormatterRoundCeiling = 0,
    kCFNumberFormatterRoundFloor = 1,
    kCFNumberFormatterRoundDown = 2,
    kCFNumberFormatterRoundUp = 3,
    kCFNumberFormatterRoundHalfEven = 4,
    kCFNumberFormatterRoundHalfDown = 5,
    kCFNumberFormatterRoundHalfUp = 6
};

typedef CFIndex CFNumberFormatterPadPosition; enum {
    kCFNumberFormatterPadBeforePrefix = 0,
    kCFNumberFormatterPadAfterPrefix = 1,
    kCFNumberFormatterPadBeforeSuffix = 2,
    kCFNumberFormatterPadAfterSuffix = 3
};


extern
Boolean CFNumberFormatterGetDecimalInfoForCurrencyCode(CFStringRef currencyCode, int32_t *defaultFractionDigits, double *roundingIncrement);






}
#pragma clang assume_nonnull begin
extern "C" {

extern
const CFStringRef kCFPreferencesAnyApplication;
extern
const CFStringRef kCFPreferencesCurrentApplication;
extern
const CFStringRef kCFPreferencesAnyHost;
extern
const CFStringRef kCFPreferencesCurrentHost;
extern
const CFStringRef kCFPreferencesAnyUser;
extern
const CFStringRef kCFPreferencesCurrentUser;
extern
_Nullable CFPropertyListRef CFPreferencesCopyAppValue(CFStringRef key, CFStringRef applicationID);




extern
Boolean CFPreferencesGetAppBooleanValue(CFStringRef key, CFStringRef applicationID, Boolean * _Nullable keyExistsAndHasValidFormat);




extern
CFIndex CFPreferencesGetAppIntegerValue(CFStringRef key, CFStringRef applicationID, Boolean * _Nullable keyExistsAndHasValidFormat);




extern
void CFPreferencesSetAppValue(CFStringRef key, _Nullable CFPropertyListRef value, CFStringRef applicationID);





extern
void CFPreferencesAddSuitePreferencesToApp(CFStringRef applicationID, CFStringRef suiteID);

extern
void CFPreferencesRemoveSuitePreferencesFromApp(CFStringRef applicationID, CFStringRef suiteID);



extern
Boolean CFPreferencesAppSynchronize(CFStringRef applicationID);





extern
_Nullable CFPropertyListRef CFPreferencesCopyValue(CFStringRef key, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName);





extern
CFDictionaryRef CFPreferencesCopyMultiple(_Nullable CFArrayRef keysToFetch, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName);



extern
void CFPreferencesSetValue(CFStringRef key, _Nullable CFPropertyListRef value, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName);



extern
void CFPreferencesSetMultiple(_Nullable CFDictionaryRef keysToSet, _Nullable CFArrayRef keysToRemove, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName);

extern
Boolean CFPreferencesSynchronize(CFStringRef applicationID, CFStringRef userName, CFStringRef hostName);





extern
_Nullable CFArrayRef CFPreferencesCopyApplicationList(CFStringRef userName, CFStringRef hostName) __attribute__((availability(macos,introduced=10.0,deprecated=10.9,message="Unsupported API"))) __attribute__((availability(ios,introduced=2.0,deprecated=7.0,message="Unsupported API"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Unsupported API"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Unsupported API")));




extern
_Nullable CFArrayRef CFPreferencesCopyKeyList(CFStringRef applicationID, CFStringRef userName, CFStringRef hostName);







extern
Boolean CFPreferencesAppValueIsForced(CFStringRef key, CFStringRef applicationID);



}
#pragma clang assume_nonnull end
extern "C" {

typedef CFIndex CFURLPathStyle; enum {
    kCFURLPOSIXPathStyle = 0,
    kCFURLHFSPathStyle __attribute__((availability(macos,introduced=10.0,deprecated=10.9,message="Carbon File Manager is deprecated, use kCFURLPOSIXPathStyle where possible"))) __attribute__((availability(ios,introduced=2.0,deprecated=7.0,message="Carbon File Manager is deprecated, use kCFURLPOSIXPathStyle where possible"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Carbon File Manager is deprecated, use kCFURLPOSIXPathStyle where possible"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Carbon File Manager is deprecated, use kCFURLPOSIXPathStyle where possible"))),
    kCFURLWindowsPathStyle
};

typedef const struct __attribute__((objc_bridge(NSURL))) __CFURL * CFURLRef;
extern
CFTypeID CFURLGetTypeID(void);
extern
CFURLRef CFURLCreateWithBytes(CFAllocatorRef allocator, const UInt8 *URLBytes, CFIndex length, CFStringEncoding encoding, CFURLRef baseURL);





extern
CFDataRef CFURLCreateData(CFAllocatorRef allocator, CFURLRef url, CFStringEncoding encoding, Boolean escapeWhitespace);


extern
CFURLRef CFURLCreateWithString(CFAllocatorRef allocator, CFStringRef URLString, CFURLRef baseURL);
extern
CFURLRef CFURLCreateAbsoluteURLWithBytes(CFAllocatorRef alloc, const UInt8 *relativeURLBytes, CFIndex length, CFStringEncoding encoding, CFURLRef baseURL, Boolean useCompatibilityMode);







extern
CFURLRef CFURLCreateWithFileSystemPath(CFAllocatorRef allocator, CFStringRef filePath, CFURLPathStyle pathStyle, Boolean isDirectory);

extern
CFURLRef CFURLCreateFromFileSystemRepresentation(CFAllocatorRef allocator, const UInt8 *buffer, CFIndex bufLen, Boolean isDirectory);







extern
CFURLRef CFURLCreateWithFileSystemPathRelativeToBase(CFAllocatorRef allocator, CFStringRef filePath, CFURLPathStyle pathStyle, Boolean isDirectory, CFURLRef baseURL);

extern
CFURLRef CFURLCreateFromFileSystemRepresentationRelativeToBase(CFAllocatorRef allocator, const UInt8 *buffer, CFIndex bufLen, Boolean isDirectory, CFURLRef baseURL);
extern
Boolean CFURLGetFileSystemRepresentation(CFURLRef url, Boolean resolveAgainstBase, UInt8 *buffer, CFIndex maxBufLen);


extern
CFURLRef CFURLCopyAbsoluteURL(CFURLRef relativeURL);


extern
CFStringRef CFURLGetString(CFURLRef anURL);


extern
CFURLRef CFURLGetBaseURL(CFURLRef anURL);
extern
Boolean CFURLCanBeDecomposed(CFURLRef anURL);

extern
CFStringRef CFURLCopyScheme(CFURLRef anURL);


extern
CFStringRef CFURLCopyNetLocation(CFURLRef anURL);
extern
CFStringRef CFURLCopyPath(CFURLRef anURL);


extern
CFStringRef CFURLCopyStrictPath(CFURLRef anURL, Boolean *isAbsolute);




extern
CFStringRef CFURLCopyFileSystemPath(CFURLRef anURL, CFURLPathStyle pathStyle);



extern
Boolean CFURLHasDirectoryPath(CFURLRef anURL);




extern
CFStringRef CFURLCopyResourceSpecifier(CFURLRef anURL);


extern
CFStringRef CFURLCopyHostName(CFURLRef anURL);

extern
SInt32 CFURLGetPortNumber(CFURLRef anURL);


extern
CFStringRef CFURLCopyUserName(CFURLRef anURL);


extern
CFStringRef CFURLCopyPassword(CFURLRef anURL);







extern
CFStringRef CFURLCopyParameterString(CFURLRef anURL, CFStringRef charactersToLeaveEscaped);

extern
CFStringRef CFURLCopyQueryString(CFURLRef anURL, CFStringRef charactersToLeaveEscaped);

extern
CFStringRef CFURLCopyFragment(CFURLRef anURL, CFStringRef charactersToLeaveEscaped);


extern
CFStringRef CFURLCopyLastPathComponent(CFURLRef url);


extern
CFStringRef CFURLCopyPathExtension(CFURLRef url);

extern
CFURLRef CFURLCreateCopyAppendingPathComponent(CFAllocatorRef allocator, CFURLRef url, CFStringRef pathComponent, Boolean isDirectory);

extern
CFURLRef CFURLCreateCopyDeletingLastPathComponent(CFAllocatorRef allocator, CFURLRef url);

extern
CFURLRef CFURLCreateCopyAppendingPathExtension(CFAllocatorRef allocator, CFURLRef url, CFStringRef extension);

extern
CFURLRef CFURLCreateCopyDeletingPathExtension(CFAllocatorRef allocator, CFURLRef url);







extern
CFIndex CFURLGetBytes(CFURLRef url, UInt8 *buffer, CFIndex bufferLength);

typedef CFIndex CFURLComponentType; enum {
 kCFURLComponentScheme = 1,
 kCFURLComponentNetLocation = 2,
 kCFURLComponentPath = 3,
 kCFURLComponentResourceSpecifier = 4,

 kCFURLComponentUser = 5,
 kCFURLComponentPassword = 6,
 kCFURLComponentUserInfo = 7,
 kCFURLComponentHost = 8,
 kCFURLComponentPort = 9,
 kCFURLComponentParameterString = 10,
 kCFURLComponentQuery = 11,
 kCFURLComponentFragment = 12
};
extern
CFRange CFURLGetByteRangeForComponent(CFURLRef url, CFURLComponentType component, CFRange *rangeIncludingSeparators);
extern
CFStringRef CFURLCreateStringByReplacingPercentEscapes(CFAllocatorRef allocator, CFStringRef originalString, CFStringRef charactersToLeaveEscaped);


extern
CFStringRef CFURLCreateStringByReplacingPercentEscapesUsingEncoding(CFAllocatorRef allocator, CFStringRef origString, CFStringRef charsToLeaveEscaped, CFStringEncoding encoding) __attribute__((availability(macos,introduced=10.0,deprecated=10.11,message="Use [NSString stringByRemovingPercentEncoding] or CFURLCreateStringByReplacingPercentEscapes() instead, which always uses the recommended UTF-8 encoding."))) __attribute__((availability(ios,introduced=2.0,deprecated=9.0,message="Use [NSString stringByRemovingPercentEncoding] or CFURLCreateStringByReplacingPercentEscapes() instead, which always uses the recommended UTF-8 encoding."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use [NSString stringByRemovingPercentEncoding] or CFURLCreateStringByReplacingPercentEscapes() instead, which always uses the recommended UTF-8 encoding."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use [NSString stringByRemovingPercentEncoding] or CFURLCreateStringByReplacingPercentEscapes() instead, which always uses the recommended UTF-8 encoding.")));
extern
CFStringRef CFURLCreateStringByAddingPercentEscapes(CFAllocatorRef allocator, CFStringRef originalString, CFStringRef charactersToLeaveUnescaped, CFStringRef legalURLCharactersToBeEscaped, CFStringEncoding encoding) __attribute__((availability(macos,introduced=10.0,deprecated=10.11,message="Use [NSString stringByAddingPercentEncodingWithAllowedCharacters:] instead, which always uses the recommended UTF-8 encoding, and which encodes for a specific URL component or subcomponent (since each URL component or subcomponent has different rules for what characters are valid)."))) __attribute__((availability(ios,introduced=2.0,deprecated=9.0,message="Use [NSString stringByAddingPercentEncodingWithAllowedCharacters:] instead, which always uses the recommended UTF-8 encoding, and which encodes for a specific URL component or subcomponent (since each URL component or subcomponent has different rules for what characters are valid)."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use [NSString stringByAddingPercentEncodingWithAllowedCharacters:] instead, which always uses the recommended UTF-8 encoding, and which encodes for a specific URL component or subcomponent (since each URL component or subcomponent has different rules for what characters are valid)."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use [NSString stringByAddingPercentEncodingWithAllowedCharacters:] instead, which always uses the recommended UTF-8 encoding, and which encodes for a specific URL component or subcomponent (since each URL component or subcomponent has different rules for what characters are valid).")));
extern
Boolean CFURLIsFileReferenceURL(CFURLRef url) __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
CFURLRef CFURLCreateFileReferenceURL(CFAllocatorRef allocator, CFURLRef url, CFErrorRef *error) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
CFURLRef CFURLCreateFilePathURL(CFAllocatorRef allocator, CFURLRef url, CFErrorRef *error) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));







struct FSRef;



extern
CFURLRef CFURLCreateFromFSRef(CFAllocatorRef allocator, const struct FSRef *fsRef) __attribute__((availability(macos,introduced=10.0,deprecated=10.9,message="Not supported"))) __attribute__((availability(ios,introduced=2.0,deprecated=7.0,message="Not supported"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Not supported"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Not supported")));

extern
Boolean CFURLGetFSRef(CFURLRef url, struct FSRef *fsRef) __attribute__((availability(macos,introduced=10.0,deprecated=10.9,message="Not supported"))) __attribute__((availability(ios,introduced=2.0,deprecated=7.0,message="Not supported"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Not supported"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Not supported")));
extern
Boolean CFURLCopyResourcePropertyForKey(CFURLRef url, CFStringRef key, void *propertyValueTypeRefPtr, CFErrorRef *error) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
CFDictionaryRef CFURLCopyResourcePropertiesForKeys(CFURLRef url, CFArrayRef keys, CFErrorRef *error) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
Boolean CFURLSetResourcePropertyForKey(CFURLRef url, CFStringRef key, CFTypeRef propertyValue, CFErrorRef *error) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
Boolean CFURLSetResourcePropertiesForKeys(CFURLRef url, CFDictionaryRef keyedPropertyValues, CFErrorRef *error) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLKeysOfUnsetValuesKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
void CFURLClearResourcePropertyCacheForKey(CFURLRef url, CFStringRef key) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
void CFURLClearResourcePropertyCache(CFURLRef url) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
void CFURLSetTemporaryResourcePropertyForKey(CFURLRef url, CFStringRef key, CFTypeRef propertyValue) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
Boolean CFURLResourceIsReachable(CFURLRef url, CFErrorRef *error) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






extern
const CFStringRef kCFURLNameKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLLocalizedNameKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLIsRegularFileKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLIsDirectoryKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLIsSymbolicLinkKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLIsVolumeKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLIsPackageKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLIsApplicationKey __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLApplicationIsScriptableKey __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));


extern
const CFStringRef kCFURLIsSystemImmutableKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLIsUserImmutableKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLIsHiddenKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLHasHiddenExtensionKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLCreationDateKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLContentAccessDateKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLContentModificationDateKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLAttributeModificationDateKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLLinkCountKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLParentDirectoryURLKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeURLKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLTypeIdentifierKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLLocalizedTypeDescriptionKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLLabelNumberKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLLabelColorKey __attribute__((availability(macosx,introduced=10.6,deprecated=10.12,message="Use NSURLLabelColorKey"))) __attribute__((availability(ios,introduced=4.0,deprecated=10.0,message="Use NSURLLabelColorKey"))) __attribute__((availability(watchos,introduced=2.0,deprecated=3.0,message="Use NSURLLabelColorKey"))) __attribute__((availability(tvos,introduced=9.0,deprecated=10.0,message="Use NSURLLabelColorKey")));


extern
const CFStringRef kCFURLLocalizedLabelKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLEffectiveIconKey __attribute__((availability(macosx,introduced=10.6,deprecated=10.12,message="Use NSURLEffectiveIconKey"))) __attribute__((availability(ios,introduced=4.0,deprecated=10.0,message="Use NSURLEffectiveIconKey"))) __attribute__((availability(watchos,introduced=2.0,deprecated=3.0,message="Use NSURLEffectiveIconKey"))) __attribute__((availability(tvos,introduced=9.0,deprecated=10.0,message="Use NSURLEffectiveIconKey")));


extern
const CFStringRef kCFURLCustomIconKey __attribute__((availability(macosx,introduced=10.6,deprecated=10.12,message="Use NSURLCustomIconKey"))) __attribute__((availability(ios,introduced=4.0,deprecated=10.0,message="Use NSURLCustomIconKey"))) __attribute__((availability(watchos,introduced=2.0,deprecated=3.0,message="Use NSURLCustomIconKey"))) __attribute__((availability(tvos,introduced=9.0,deprecated=10.0,message="Use NSURLCustomIconKey")));


extern
const CFStringRef kCFURLFileResourceIdentifierKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeIdentifierKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLPreferredIOBlockSizeKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLIsReadableKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLIsWritableKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLIsExecutableKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLFileSecurityKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLIsExcludedFromBackupKey __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=5.1))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLTagNamesKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));


extern
const CFStringRef kCFURLPathKey __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLCanonicalPathKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));


extern
const CFStringRef kCFURLIsMountTriggerKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLGenerationIdentifierKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLDocumentIdentifierKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLAddedToDirectoryDateKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLQuarantinePropertiesKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));


extern
const CFStringRef kCFURLFileResourceTypeKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern
const CFStringRef kCFURLFileResourceTypeNamedPipe __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
const CFStringRef kCFURLFileResourceTypeCharacterSpecial __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
const CFStringRef kCFURLFileResourceTypeDirectory __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
const CFStringRef kCFURLFileResourceTypeBlockSpecial __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
const CFStringRef kCFURLFileResourceTypeRegular __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
const CFStringRef kCFURLFileResourceTypeSymbolicLink __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
const CFStringRef kCFURLFileResourceTypeSocket __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
const CFStringRef kCFURLFileResourceTypeUnknown __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern
const CFStringRef kCFURLFileSizeKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLFileAllocatedSizeKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLTotalFileSizeKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLTotalFileAllocatedSizeKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLIsAliasFileKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLFileProtectionKey __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));



extern
const CFStringRef kCFURLFileProtectionNone __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));

extern
const CFStringRef kCFURLFileProtectionComplete __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));

extern
const CFStringRef kCFURLFileProtectionCompleteUnlessOpen __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));

extern
const CFStringRef kCFURLFileProtectionCompleteUntilFirstUserAuthentication __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));





extern
const CFStringRef kCFURLVolumeLocalizedFormatDescriptionKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeTotalCapacityKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeAvailableCapacityKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeAvailableCapacityForImportantUsageKey __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));






extern
const CFStringRef kCFURLVolumeAvailableCapacityForOpportunisticUsageKey __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));




extern
const CFStringRef kCFURLVolumeResourceCountKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeSupportsPersistentIDsKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeSupportsSymbolicLinksKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeSupportsHardLinksKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeSupportsJournalingKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeIsJournalingKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeSupportsSparseFilesKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeSupportsZeroRunsKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeSupportsCaseSensitiveNamesKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeSupportsCasePreservedNamesKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeSupportsRootDirectoryDatesKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeSupportsVolumeSizesKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeSupportsRenamingKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeSupportsAdvisoryFileLockingKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeSupportsExtendedSecurityKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeIsBrowsableKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeMaximumFileSizeKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeIsEjectableKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeIsRemovableKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeIsInternalKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeIsAutomountedKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeIsLocalKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeIsReadOnlyKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeCreationDateKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeURLForRemountingKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeUUIDStringKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeNameKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeLocalizedNameKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLVolumeIsEncryptedKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));


extern
const CFStringRef kCFURLVolumeIsRootFileSystemKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));


extern
const CFStringRef kCFURLVolumeSupportsCompressionKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));


extern
const CFStringRef kCFURLVolumeSupportsFileCloningKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));


extern
const CFStringRef kCFURLVolumeSupportsSwapRenamingKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));


extern
const CFStringRef kCFURLVolumeSupportsExclusiveRenamingKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));


extern
const CFStringRef kCFURLVolumeSupportsImmutableFilesKey __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));


extern
const CFStringRef kCFURLVolumeSupportsAccessPermissionsKey __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));




extern
const CFStringRef kCFURLIsUbiquitousItemKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLUbiquitousItemHasUnresolvedConflictsKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLUbiquitousItemIsDownloadedKey __attribute__((availability(macos,introduced=10.7,deprecated=10.9,message="Use kCFURLUbiquitousItemDownloadingStatusKey instead"))) __attribute__((availability(ios,introduced=5.0,deprecated=7.0,message="Use kCFURLUbiquitousItemDownloadingStatusKey instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use kCFURLUbiquitousItemDownloadingStatusKey instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use kCFURLUbiquitousItemDownloadingStatusKey instead")));


extern
const CFStringRef kCFURLUbiquitousItemIsDownloadingKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLUbiquitousItemIsUploadedKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLUbiquitousItemIsUploadingKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLUbiquitousItemPercentDownloadedKey __attribute__((availability(macos,introduced=10.7,deprecated=10.8,message="Use NSMetadataQuery and NSMetadataUbiquitousItemPercentDownloadedKey on NSMetadataItem instead"))) __attribute__((availability(ios,introduced=5.0,deprecated=6.0,message="Use NSMetadataQuery and NSMetadataUbiquitousItemPercentDownloadedKey on NSMetadataItem instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use NSMetadataQuery and NSMetadataUbiquitousItemPercentDownloadedKey on NSMetadataItem instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use NSMetadataQuery and NSMetadataUbiquitousItemPercentDownloadedKey on NSMetadataItem instead")));


extern
const CFStringRef kCFURLUbiquitousItemPercentUploadedKey __attribute__((availability(macos,introduced=10.7,deprecated=10.8,message="Use NSMetadataQuery and NSMetadataUbiquitousItemPercentUploadedKey on NSMetadataItem instead"))) __attribute__((availability(ios,introduced=5.0,deprecated=6.0,message="Use NSMetadataQuery and NSMetadataUbiquitousItemPercentUploadedKey on NSMetadataItem instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use NSMetadataQuery and NSMetadataUbiquitousItemPercentUploadedKey on NSMetadataItem instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use NSMetadataQuery and NSMetadataUbiquitousItemPercentUploadedKey on NSMetadataItem instead")));


extern
const CFStringRef kCFURLUbiquitousItemDownloadingStatusKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLUbiquitousItemDownloadingErrorKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLUbiquitousItemUploadingErrorKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));




extern
const CFStringRef kCFURLUbiquitousItemDownloadingStatusNotDownloaded __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLUbiquitousItemDownloadingStatusDownloaded __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern
const CFStringRef kCFURLUbiquitousItemDownloadingStatusCurrent __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



typedef CFOptionFlags CFURLBookmarkCreationOptions; enum {
    kCFURLBookmarkCreationMinimalBookmarkMask = ( 1UL << 9 ),
    kCFURLBookmarkCreationSuitableForBookmarkFile = ( 1UL << 10 ),
    kCFURLBookmarkCreationWithSecurityScope __attribute__((availability(ios,introduced=NA))) = ( 1UL << 11 ),
    kCFURLBookmarkCreationSecurityScopeAllowOnlyReadAccess __attribute__((availability(ios,introduced=NA))) = ( 1UL << 12 ),


    kCFURLBookmarkCreationPreferFileIDResolutionMask __attribute__((availability(ios,introduced=4_0,deprecated=7_0,message="" "kCFURLBookmarkCreationPreferFileIDResolutionMask does nothing and has no effect on bookmark resolution"))) = ( 1UL << 8 ),
} __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

typedef CFOptionFlags CFURLBookmarkResolutionOptions; enum {
    kCFURLBookmarkResolutionWithoutUIMask = ( 1UL << 8 ),
    kCFURLBookmarkResolutionWithoutMountingMask = ( 1UL << 9 ),
    kCFURLBookmarkResolutionWithSecurityScope __attribute__((availability(ios,introduced=NA))) = ( 1UL << 10 ),

    kCFBookmarkResolutionWithoutUIMask = kCFURLBookmarkResolutionWithoutUIMask,
    kCFBookmarkResolutionWithoutMountingMask = kCFURLBookmarkResolutionWithoutMountingMask,
} __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

typedef CFOptionFlags CFURLBookmarkFileCreationOptions;





extern
CFDataRef CFURLCreateBookmarkData ( CFAllocatorRef allocator, CFURLRef url, CFURLBookmarkCreationOptions options, CFArrayRef resourcePropertiesToInclude, CFURLRef relativeToURL, CFErrorRef* error ) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern
CFURLRef CFURLCreateByResolvingBookmarkData ( CFAllocatorRef allocator, CFDataRef bookmark, CFURLBookmarkResolutionOptions options, CFURLRef relativeToURL, CFArrayRef resourcePropertiesToInclude, Boolean* isStale, CFErrorRef* error ) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern
CFDictionaryRef CFURLCreateResourcePropertiesForKeysFromBookmarkData ( CFAllocatorRef allocator, CFArrayRef resourcePropertiesToReturn, CFDataRef bookmark ) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern
CFTypeRef CFURLCreateResourcePropertyForKeyFromBookmarkData( CFAllocatorRef allocator, CFStringRef resourcePropertyKey, CFDataRef bookmark ) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern
CFDataRef CFURLCreateBookmarkDataFromFile(CFAllocatorRef allocator, CFURLRef fileURL, CFErrorRef *errorRef ) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern
Boolean CFURLWriteBookmarkDataToFile( CFDataRef bookmarkRef, CFURLRef fileURL, CFURLBookmarkFileCreationOptions options, CFErrorRef *errorRef ) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern
CFDataRef CFURLCreateBookmarkDataFromAliasRecord ( CFAllocatorRef allocatorRef, CFDataRef aliasRecordDataRef ) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));





extern
Boolean CFURLStartAccessingSecurityScopedResource(CFURLRef url) __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern
void CFURLStopAccessingSecurityScopedResource(CFURLRef url) __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



}
typedef int boolean_t;
typedef __darwin_natural_t natural_t;
typedef int integer_t;






typedef uintptr_t vm_offset_t;
typedef uintptr_t vm_size_t;

typedef uint64_t mach_vm_address_t;
typedef uint64_t mach_vm_offset_t;
typedef uint64_t mach_vm_size_t;

typedef uint64_t vm_map_offset_t;
typedef uint64_t vm_map_address_t;
typedef uint64_t vm_map_size_t;
typedef uint32_t vm32_offset_t;
typedef uint32_t vm32_address_t;
typedef uint32_t vm32_size_t;

typedef vm_offset_t mach_port_context_t;
typedef natural_t mach_port_name_t;
typedef mach_port_name_t *mach_port_name_array_t;
typedef __darwin_mach_port_t mach_port_t;


typedef mach_port_t *mach_port_array_t;
typedef natural_t mach_port_right_t;
typedef natural_t mach_port_type_t;
typedef mach_port_type_t *mach_port_type_array_t;
typedef natural_t mach_port_urefs_t;
typedef integer_t mach_port_delta_t;



typedef natural_t mach_port_seqno_t;
typedef natural_t mach_port_mscount_t;
typedef natural_t mach_port_msgcount_t;
typedef natural_t mach_port_rights_t;






typedef unsigned int mach_port_srights_t;

typedef struct mach_port_status {
 mach_port_rights_t mps_pset;
 mach_port_seqno_t mps_seqno;
 mach_port_mscount_t mps_mscount;
 mach_port_msgcount_t mps_qlimit;
 mach_port_msgcount_t mps_msgcount;
 mach_port_rights_t mps_sorights;
 boolean_t mps_srights;
 boolean_t mps_pdrequest;
 boolean_t mps_nsrequest;
 natural_t mps_flags;
} mach_port_status_t;
typedef struct mach_port_limits {
 mach_port_msgcount_t mpl_qlimit;
} mach_port_limits_t;
typedef struct mach_port_info_ext {
 mach_port_status_t mpie_status;
 mach_port_msgcount_t mpie_boost_cnt;
 uint32_t reserved[6];
} mach_port_info_ext_t;

typedef integer_t *mach_port_info_t;


typedef int mach_port_flavor_t;
typedef struct mach_port_qos {
 unsigned int name:1;
 unsigned int prealloc:1;
 boolean_t pad1:30;
 natural_t len;
} mach_port_qos_t;
typedef struct mach_port_options {
 uint32_t flags;
 mach_port_limits_t mpl;
 uint64_t reserved[2];
}mach_port_options_t;

typedef mach_port_options_t *mach_port_options_ptr_t;
enum mach_port_guard_exception_codes {
 kGUARD_EXC_DESTROY = 1u << 0,
 kGUARD_EXC_MOD_REFS = 1u << 1,
 kGUARD_EXC_SET_CONTEXT = 1u << 2,
 kGUARD_EXC_UNGUARDED = 1u << 3,
 kGUARD_EXC_INCORRECT_GUARD = 1u << 4
};



extern "C" {

typedef CFStringRef CFRunLoopMode __attribute__((swift_wrapper(struct)));

typedef struct __attribute__((objc_bridge_mutable(id))) __CFRunLoop * CFRunLoopRef;

typedef struct __attribute__((objc_bridge_mutable(id))) __CFRunLoopSource * CFRunLoopSourceRef;

typedef struct __attribute__((objc_bridge_mutable(id))) __CFRunLoopObserver * CFRunLoopObserverRef;

typedef struct __attribute__((objc_bridge_mutable(NSTimer))) __CFRunLoopTimer * CFRunLoopTimerRef;


typedef SInt32 CFRunLoopRunResult; enum {
    kCFRunLoopRunFinished = 1,
    kCFRunLoopRunStopped = 2,
    kCFRunLoopRunTimedOut = 3,
    kCFRunLoopRunHandledSource = 4
};


typedef CFOptionFlags CFRunLoopActivity; enum {
    kCFRunLoopEntry = (1UL << 0),
    kCFRunLoopBeforeTimers = (1UL << 1),
    kCFRunLoopBeforeSources = (1UL << 2),
    kCFRunLoopBeforeWaiting = (1UL << 5),
    kCFRunLoopAfterWaiting = (1UL << 6),
    kCFRunLoopExit = (1UL << 7),
    kCFRunLoopAllActivities = 0x0FFFFFFFU
};

extern const CFRunLoopMode kCFRunLoopDefaultMode;
extern const CFRunLoopMode kCFRunLoopCommonModes;

extern CFTypeID CFRunLoopGetTypeID(void);

extern CFRunLoopRef CFRunLoopGetCurrent(void);
extern CFRunLoopRef CFRunLoopGetMain(void);

extern CFRunLoopMode CFRunLoopCopyCurrentMode(CFRunLoopRef rl);

extern CFArrayRef CFRunLoopCopyAllModes(CFRunLoopRef rl);

extern void CFRunLoopAddCommonMode(CFRunLoopRef rl, CFRunLoopMode mode);

extern CFAbsoluteTime CFRunLoopGetNextTimerFireDate(CFRunLoopRef rl, CFRunLoopMode mode);

extern void CFRunLoopRun(void);
extern CFRunLoopRunResult CFRunLoopRunInMode(CFRunLoopMode mode, CFTimeInterval seconds, Boolean returnAfterSourceHandled);
extern Boolean CFRunLoopIsWaiting(CFRunLoopRef rl);
extern void CFRunLoopWakeUp(CFRunLoopRef rl);
extern void CFRunLoopStop(CFRunLoopRef rl);


extern void CFRunLoopPerformBlock(CFRunLoopRef rl, CFTypeRef mode, void (*block)(void)) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern Boolean CFRunLoopContainsSource(CFRunLoopRef rl, CFRunLoopSourceRef source, CFRunLoopMode mode);
extern void CFRunLoopAddSource(CFRunLoopRef rl, CFRunLoopSourceRef source, CFRunLoopMode mode);
extern void CFRunLoopRemoveSource(CFRunLoopRef rl, CFRunLoopSourceRef source, CFRunLoopMode mode);

extern Boolean CFRunLoopContainsObserver(CFRunLoopRef rl, CFRunLoopObserverRef observer, CFRunLoopMode mode);
extern void CFRunLoopAddObserver(CFRunLoopRef rl, CFRunLoopObserverRef observer, CFRunLoopMode mode);
extern void CFRunLoopRemoveObserver(CFRunLoopRef rl, CFRunLoopObserverRef observer, CFRunLoopMode mode);

extern Boolean CFRunLoopContainsTimer(CFRunLoopRef rl, CFRunLoopTimerRef timer, CFRunLoopMode mode);
extern void CFRunLoopAddTimer(CFRunLoopRef rl, CFRunLoopTimerRef timer, CFRunLoopMode mode);
extern void CFRunLoopRemoveTimer(CFRunLoopRef rl, CFRunLoopTimerRef timer, CFRunLoopMode mode);

typedef struct {
    CFIndex version;
    void * info;
    const void *(*retain)(const void *info);
    void (*release)(const void *info);
    CFStringRef (*copyDescription)(const void *info);
    Boolean (*equal)(const void *info1, const void *info2);
    CFHashCode (*hash)(const void *info);
    void (*schedule)(void *info, CFRunLoopRef rl, CFRunLoopMode mode);
    void (*cancel)(void *info, CFRunLoopRef rl, CFRunLoopMode mode);
    void (*perform)(void *info);
} CFRunLoopSourceContext;

typedef struct {
    CFIndex version;
    void * info;
    const void *(*retain)(const void *info);
    void (*release)(const void *info);
    CFStringRef (*copyDescription)(const void *info);
    Boolean (*equal)(const void *info1, const void *info2);
    CFHashCode (*hash)(const void *info);

    mach_port_t (*getPort)(void *info);
    void * (*perform)(void *msg, CFIndex size, CFAllocatorRef allocator, void *info);




} CFRunLoopSourceContext1;

extern CFTypeID CFRunLoopSourceGetTypeID(void);

extern CFRunLoopSourceRef CFRunLoopSourceCreate(CFAllocatorRef allocator, CFIndex order, CFRunLoopSourceContext *context);

extern CFIndex CFRunLoopSourceGetOrder(CFRunLoopSourceRef source);
extern void CFRunLoopSourceInvalidate(CFRunLoopSourceRef source);
extern Boolean CFRunLoopSourceIsValid(CFRunLoopSourceRef source);
extern void CFRunLoopSourceGetContext(CFRunLoopSourceRef source, CFRunLoopSourceContext *context);
extern void CFRunLoopSourceSignal(CFRunLoopSourceRef source);

typedef struct {
    CFIndex version;
    void * info;
    const void *(*retain)(const void *info);
    void (*release)(const void *info);
    CFStringRef (*copyDescription)(const void *info);
} CFRunLoopObserverContext;

typedef void (*CFRunLoopObserverCallBack)(CFRunLoopObserverRef observer, CFRunLoopActivity activity, void *info);

extern CFTypeID CFRunLoopObserverGetTypeID(void);

extern CFRunLoopObserverRef CFRunLoopObserverCreate(CFAllocatorRef allocator, CFOptionFlags activities, Boolean repeats, CFIndex order, CFRunLoopObserverCallBack callout, CFRunLoopObserverContext *context);

extern CFRunLoopObserverRef CFRunLoopObserverCreateWithHandler(CFAllocatorRef allocator, CFOptionFlags activities, Boolean repeats, CFIndex order, void (*block) (CFRunLoopObserverRef observer, CFRunLoopActivity activity)) __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern CFOptionFlags CFRunLoopObserverGetActivities(CFRunLoopObserverRef observer);
extern Boolean CFRunLoopObserverDoesRepeat(CFRunLoopObserverRef observer);
extern CFIndex CFRunLoopObserverGetOrder(CFRunLoopObserverRef observer);
extern void CFRunLoopObserverInvalidate(CFRunLoopObserverRef observer);
extern Boolean CFRunLoopObserverIsValid(CFRunLoopObserverRef observer);
extern void CFRunLoopObserverGetContext(CFRunLoopObserverRef observer, CFRunLoopObserverContext *context);

typedef struct {
    CFIndex version;
    void * info;
    const void *(*retain)(const void *info);
    void (*release)(const void *info);
    CFStringRef (*copyDescription)(const void *info);
} CFRunLoopTimerContext;

typedef void (*CFRunLoopTimerCallBack)(CFRunLoopTimerRef timer, void *info);

extern CFTypeID CFRunLoopTimerGetTypeID(void);

extern CFRunLoopTimerRef CFRunLoopTimerCreate(CFAllocatorRef allocator, CFAbsoluteTime fireDate, CFTimeInterval interval, CFOptionFlags flags, CFIndex order, CFRunLoopTimerCallBack callout, CFRunLoopTimerContext *context);

extern CFRunLoopTimerRef CFRunLoopTimerCreateWithHandler(CFAllocatorRef allocator, CFAbsoluteTime fireDate, CFTimeInterval interval, CFOptionFlags flags, CFIndex order, void (*block) (CFRunLoopTimerRef timer)) __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern CFAbsoluteTime CFRunLoopTimerGetNextFireDate(CFRunLoopTimerRef timer);
extern void CFRunLoopTimerSetNextFireDate(CFRunLoopTimerRef timer, CFAbsoluteTime fireDate);
extern CFTimeInterval CFRunLoopTimerGetInterval(CFRunLoopTimerRef timer);
extern Boolean CFRunLoopTimerDoesRepeat(CFRunLoopTimerRef timer);
extern CFIndex CFRunLoopTimerGetOrder(CFRunLoopTimerRef timer);
extern void CFRunLoopTimerInvalidate(CFRunLoopTimerRef timer);
extern Boolean CFRunLoopTimerIsValid(CFRunLoopTimerRef timer);
extern void CFRunLoopTimerGetContext(CFRunLoopTimerRef timer, CFRunLoopTimerContext *context);



extern CFTimeInterval CFRunLoopTimerGetTolerance(CFRunLoopTimerRef timer) __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern void CFRunLoopTimerSetTolerance(CFRunLoopTimerRef timer, CFTimeInterval tolerance) __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

}
extern "C" {

typedef struct __attribute__((objc_bridge_mutable(id))) __CFSocket * CFSocketRef;
typedef CFIndex CFSocketError; enum {
    kCFSocketSuccess = 0,
    kCFSocketError = -1L,
    kCFSocketTimeout = -2L
};

typedef struct {
    SInt32 protocolFamily;
    SInt32 socketType;
    SInt32 protocol;
    CFDataRef address;
} CFSocketSignature;


typedef CFOptionFlags CFSocketCallBackType; enum {
    kCFSocketNoCallBack = 0,
    kCFSocketReadCallBack = 1,
    kCFSocketAcceptCallBack = 2,
    kCFSocketDataCallBack = 3,
    kCFSocketConnectCallBack = 4,
    kCFSocketWriteCallBack = 8
};


enum {
    kCFSocketAutomaticallyReenableReadCallBack = 1,
    kCFSocketAutomaticallyReenableAcceptCallBack = 2,
    kCFSocketAutomaticallyReenableDataCallBack = 3,
    kCFSocketAutomaticallyReenableWriteCallBack = 8,
    kCFSocketLeaveErrors __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 64,
    kCFSocketCloseOnInvalidate = 128
};

typedef void (*CFSocketCallBack)(CFSocketRef s, CFSocketCallBackType type, CFDataRef address, const void *data, void *info);


typedef struct {
    CFIndex version;
    void * info;
    const void *(*retain)(const void *info);
    void (*release)(const void *info);
    CFStringRef (*copyDescription)(const void *info);
} CFSocketContext;




typedef int CFSocketNativeHandle;


extern CFTypeID CFSocketGetTypeID(void);

extern CFSocketRef CFSocketCreate(CFAllocatorRef allocator, SInt32 protocolFamily, SInt32 socketType, SInt32 protocol, CFOptionFlags callBackTypes, CFSocketCallBack callout, const CFSocketContext *context);
extern CFSocketRef CFSocketCreateWithNative(CFAllocatorRef allocator, CFSocketNativeHandle sock, CFOptionFlags callBackTypes, CFSocketCallBack callout, const CFSocketContext *context);
extern CFSocketRef CFSocketCreateWithSocketSignature(CFAllocatorRef allocator, const CFSocketSignature *signature, CFOptionFlags callBackTypes, CFSocketCallBack callout, const CFSocketContext *context);

extern CFSocketRef CFSocketCreateConnectedToSocketSignature(CFAllocatorRef allocator, const CFSocketSignature *signature, CFOptionFlags callBackTypes, CFSocketCallBack callout, const CFSocketContext *context, CFTimeInterval timeout);


extern CFSocketError CFSocketSetAddress(CFSocketRef s, CFDataRef address);
extern CFSocketError CFSocketConnectToAddress(CFSocketRef s, CFDataRef address, CFTimeInterval timeout);
extern void CFSocketInvalidate(CFSocketRef s);

extern Boolean CFSocketIsValid(CFSocketRef s);
extern CFDataRef CFSocketCopyAddress(CFSocketRef s);
extern CFDataRef CFSocketCopyPeerAddress(CFSocketRef s);
extern void CFSocketGetContext(CFSocketRef s, CFSocketContext *context);
extern CFSocketNativeHandle CFSocketGetNative(CFSocketRef s);

extern CFRunLoopSourceRef CFSocketCreateRunLoopSource(CFAllocatorRef allocator, CFSocketRef s, CFIndex order);

extern CFOptionFlags CFSocketGetSocketFlags(CFSocketRef s);
extern void CFSocketSetSocketFlags(CFSocketRef s, CFOptionFlags flags);
extern void CFSocketDisableCallBacks(CFSocketRef s, CFOptionFlags callBackTypes);
extern void CFSocketEnableCallBacks(CFSocketRef s, CFOptionFlags callBackTypes);



extern CFSocketError CFSocketSendData(CFSocketRef s, CFDataRef address, CFDataRef data, CFTimeInterval timeout);
extern CFSocketError CFSocketRegisterValue(const CFSocketSignature *nameServerSignature, CFTimeInterval timeout, CFStringRef name, CFPropertyListRef value);
extern CFSocketError CFSocketCopyRegisteredValue(const CFSocketSignature *nameServerSignature, CFTimeInterval timeout, CFStringRef name, CFPropertyListRef *value, CFDataRef *nameServerAddress);

extern CFSocketError CFSocketRegisterSocketSignature(const CFSocketSignature *nameServerSignature, CFTimeInterval timeout, CFStringRef name, const CFSocketSignature *signature);
extern CFSocketError CFSocketCopyRegisteredSocketSignature(const CFSocketSignature *nameServerSignature, CFTimeInterval timeout, CFStringRef name, CFSocketSignature *signature, CFDataRef *nameServerAddress);

extern CFSocketError CFSocketUnregister(const CFSocketSignature *nameServerSignature, CFTimeInterval timeout, CFStringRef name);

extern void CFSocketSetDefaultNameRegistryPortNumber(UInt16 port);
extern UInt16 CFSocketGetDefaultNameRegistryPortNumber(void);


extern const CFStringRef kCFSocketCommandKey;
extern const CFStringRef kCFSocketNameKey;
extern const CFStringRef kCFSocketValueKey;
extern const CFStringRef kCFSocketResultKey;
extern const CFStringRef kCFSocketErrorKey;
extern const CFStringRef kCFSocketRegisterCommand;
extern const CFStringRef kCFSocketRetrieveCommand;

}

typedef void (*os_function_t)(void *_Nullable);
typedef void (*os_block_t)(void);









struct accessx_descriptor {
 unsigned int ad_name_offset;
 int ad_flags;
 int ad_pad[2];
};
extern "C" {

int getattrlistbulk(int, void *, void *, size_t, uint64_t) __attribute__((availability(ios,introduced=8.0)));
int getattrlistat(int, const char *, void *, void *, size_t, unsigned long) __attribute__((availability(ios,introduced=8.0)));
int setattrlistat(int, const char *, void *, void *, size_t, uint32_t) __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));

}
extern "C" {

int faccessat(int, const char *, int, int) __attribute__((availability(ios,introduced=8.0)));
int fchownat(int, const char *, uid_t, gid_t, int) __attribute__((availability(ios,introduced=8.0)));
int linkat(int, const char *, int, const char *, int) __attribute__((availability(ios,introduced=8.0)));
ssize_t readlinkat(int, const char *, char *, size_t) __attribute__((availability(ios,introduced=8.0)));
int symlinkat(const char *, int, const char *) __attribute__((availability(ios,introduced=8.0)));
int unlinkat(int, const char *, int) __attribute__((availability(ios,introduced=8.0)));

}
extern "C" {
void _exit(int) __attribute__((noreturn));
int access(const char *, int);
unsigned int
  alarm(unsigned int);
int chdir(const char *);
int chown(const char *, uid_t, gid_t);

int close(int) __asm("_" "close" );

int dup(int);
int dup2(int, int);
int execl(const char * __path, const char * __arg0, ...) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
int execle(const char * __path, const char * __arg0, ...) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
int execlp(const char * __file, const char * __arg0, ...) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
int execv(const char * __path, char * const * __argv) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
int execve(const char * __file, char * const * __argv, char * const * __envp) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
int execvp(const char * __file, char * const * __argv) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
pid_t fork(void) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
long fpathconf(int, int);
char *getcwd(char *, size_t);
gid_t getegid(void);
uid_t geteuid(void);
gid_t getgid(void);



int getgroups(int, gid_t []);

char *getlogin(void);
pid_t getpgrp(void);
pid_t getpid(void);
pid_t getppid(void);
uid_t getuid(void);
int isatty(int);
int link(const char *, const char *);
off_t lseek(int, off_t, int);
long pathconf(const char *, int);

int pause(void) __asm("_" "pause" );

int pipe(int [2]);

ssize_t read(int, void *, size_t) __asm("_" "read" );

int rmdir(const char *);
int setgid(gid_t);
int setpgid(pid_t, pid_t);
pid_t setsid(void);
int setuid(uid_t);

unsigned int
  sleep(unsigned int) __asm("_" "sleep" );

long sysconf(int);
pid_t tcgetpgrp(int);
int tcsetpgrp(int, pid_t);
char *ttyname(int);


int ttyname_r(int, char *, size_t) __asm("_" "ttyname_r" );




int unlink(const char *);

ssize_t write(int __fd, const void * __buf, size_t __nbyte) __asm("_" "write" );
}
extern "C" {
size_t confstr(int, char *, size_t) __asm("_" "confstr" );

int getopt(int, char * const [], const char *) __asm("_" "getopt" );

extern char *optarg;
extern int optind, opterr, optopt;
}
 extern "C" {





__attribute__((deprecated)) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))

void *brk(const void *);
int chroot(const char *) ;


char *crypt(const char *, const char *);






void encrypt(char *, int) __asm("_" "encrypt" );



int fchdir(int);
long gethostid(void);
pid_t getpgid(pid_t);
pid_t getsid(pid_t);



int getdtablesize(void) ;
int getpagesize(void) __attribute__((const)) ;
char *getpass(const char *) ;




char *getwd(char *) ;


int lchown(const char *, uid_t, gid_t) __asm("_" "lchown" );

int lockf(int, int, off_t) __asm("_" "lockf" );

int nice(int) __asm("_" "nice" );

ssize_t pread(int __fd, void * __buf, size_t __nbyte, off_t __offset) __asm("_" "pread" );

ssize_t pwrite(int __fd, const void * __buf, size_t __nbyte, off_t __offset) __asm("_" "pwrite" );






__attribute__((deprecated)) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))

void *sbrk(int);



pid_t setpgrp(void) __asm("_" "setpgrp" );




int setregid(gid_t, gid_t) __asm("_" "setregid" );

int setreuid(uid_t, uid_t) __asm("_" "setreuid" );

void swab(const void * , void * , ssize_t);
void sync(void);
int truncate(const char *, off_t);
useconds_t ualarm(useconds_t, useconds_t);
int usleep(useconds_t) __asm("_" "usleep" );
pid_t vfork(void) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));


int fsync(int) __asm("_" "fsync" );

int ftruncate(int, off_t);
int getlogin_r(char *, size_t);
}
extern "C" {
int fchown(int, uid_t, gid_t);
int gethostname(char *, size_t);
ssize_t readlink(const char * , char * , size_t);
int setegid(gid_t);
int seteuid(uid_t);
int symlink(const char *, const char *);
}








extern "C" {


int pselect(int, fd_set * , fd_set * ,
  fd_set * , const struct timespec * ,
  const sigset_t * )




  __asm("_" "pselect" )




  ;



int select(int, fd_set * , fd_set * ,
  fd_set * , struct timeval * )




  __asm("_" "select" )




  ;

}



typedef __darwin_uuid_t uuid_t;

extern "C" {
void _Exit(int) __attribute__((noreturn));
int accessx_np(const struct accessx_descriptor *, size_t, int *, uid_t);
int acct(const char *);
int add_profil(char *, size_t, unsigned long, unsigned int) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
void endusershell(void);
int execvP(const char * __file, const char * __searchpath, char * const * __argv) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
char *fflagstostr(unsigned long);
int getdomainname(char *, int);
int getgrouplist(const char *, int, int *, int *);





int gethostuuid(uuid_t, const struct timespec *) __attribute__((availability(ios,unavailable)));




mode_t getmode(const void *, mode_t);
int getpeereid(int, uid_t *, gid_t *);
int getsgroups_np(int *, uuid_t);
char *getusershell(void);
int getwgroups_np(int *, uuid_t);
int initgroups(const char *, int);
int issetugid(void);
char *mkdtemp(char *);
int mknod(const char *, mode_t, dev_t);
int mkpath_np(const char *path, mode_t omode) __attribute__((availability(ios,introduced=5.0)));
int mkpathat_np(int dfd, const char *path, mode_t omode)
  __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)))
  __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
int mkstemp(char *);
int mkstemps(char *, int);
char *mktemp(char *);
int mkostemp(char *path, int oflags)
  __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)))
  __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
int mkostemps(char *path, int slen, int oflags)
  __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)))
  __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));

int mkstemp_dprotected_np(char *path, int dpclass, int dpflags)
  __attribute__((availability(macosx,unavailable))) __attribute__((availability(ios,introduced=10.0)))
  __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
char *mkdtempat_np(int dfd, char *path)
  __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0)))
  __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
int mkstempsat_np(int dfd, char *path, int slen)
  __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0)))
  __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
int mkostempsat_np(int dfd, char *path, int slen, int oflags)
  __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0)))
  __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
int nfssvc(int, void *);
int profil(char *, size_t, unsigned long, unsigned int);

__attribute__((deprecated("Use of per-thread security contexts is error-prone and discouraged.")))
int pthread_setugid_np(uid_t, gid_t);
int pthread_getugid_np( uid_t *, gid_t *);

int reboot(int);
int revoke(const char *);

__attribute__((deprecated)) int rcmd(char **, int, const char *, const char *, const char *, int *);
__attribute__((deprecated)) int rcmd_af(char **, int, const char *, const char *, const char *, int *,
  int);
__attribute__((deprecated)) int rresvport(int *);
__attribute__((deprecated)) int rresvport_af(int *, int);
__attribute__((deprecated)) int iruserok(unsigned long, int, const char *, const char *);
__attribute__((deprecated)) int iruserok_sa(const void *, int, int, const char *, const char *);
__attribute__((deprecated)) int ruserok(const char *, int, const char *, const char *);

int setdomainname(const char *, int);
int setgroups(int, const gid_t *);
void sethostid(long);
int sethostname(const char *, int);

void setkey(const char *) __asm("_" "setkey" );



int setlogin(const char *);
void *setmode(const char *) __asm("_" "setmode" );
int setrgid(gid_t);
int setruid(uid_t);
int setsgroups_np(int, const uuid_t);
void setusershell(void);
int setwgroups_np(int, const uuid_t);
int strtofflags(char **, unsigned long *, unsigned long *);
int swapon(const char *);
int ttyslot(void);
int undelete(const char *);
int unwhiteout(const char *);
void *valloc(size_t);

__attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
__attribute__((availability(ios,deprecated=10.0,message="syscall(2) is unsupported; " "please switch to a supported interface. For SYS_kdebug_trace use kdebug_signpost().")))

__attribute__((availability(macosx,deprecated=10.12,message="syscall(2) is unsupported; " "please switch to a supported interface. For SYS_kdebug_trace use kdebug_signpost().")))

int syscall(int, ...);

extern char *suboptarg;
int getsubopt(char **, char * const *, char **);



int fgetattrlist(int,void*,void*,size_t,unsigned int) __attribute__((availability(ios,introduced=3.0)));
int fsetattrlist(int,void*,void*,size_t,unsigned int) __attribute__((availability(ios,introduced=3.0)));
int getattrlist(const char*,void*,void*,size_t,unsigned int) __asm("_" "getattrlist" );
int setattrlist(const char*,void*,void*,size_t,unsigned int) __asm("_" "setattrlist" );
int exchangedata(const char*,const char*,unsigned int) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
int getdirentriesattr(int,void*,void*,size_t,unsigned int*,unsigned int*,unsigned int*,unsigned int) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
struct fssearchblock;
struct searchstate;

int searchfs(const char *, struct fssearchblock *, unsigned long *, unsigned int, unsigned int, struct searchstate *) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
int fsctl(const char *,unsigned long,void*,unsigned int);
int ffsctl(int,unsigned long,void*,unsigned int) __attribute__((availability(ios,introduced=3.0)));




int fsync_volume_np(int, int) __attribute__((availability(ios,introduced=6.0)));
int sync_volume_np(const char *, int) __attribute__((availability(ios,introduced=6.0)));

extern int optreset;

}






struct flock {
 off_t l_start;
 off_t l_len;
 pid_t l_pid;
 short l_type;
 short l_whence;
};
struct flocktimeout {
 struct flock fl;
 struct timespec timeout;
};
struct radvisory {
       off_t ra_offset;
       int ra_count;
};



typedef struct fcodeblobs {
 void *f_cd_hash;
 size_t f_hash_size;
 void *f_cd_buffer;
 size_t f_cd_size;
 unsigned int *f_out_size;
 int f_arch;
 int __padding;
} fcodeblobs_t;
typedef struct fsignatures {
 off_t fs_file_start;
 void *fs_blob_start;
 size_t fs_blob_size;
} fsignatures_t;
typedef struct fchecklv {
 off_t lv_file_start;
 size_t lv_error_message_size;
 void *lv_error_message;
} fchecklv_t;
typedef struct fstore {
 unsigned int fst_flags;
 int fst_posmode;
 off_t fst_offset;
 off_t fst_length;
 off_t fst_bytesalloc;
} fstore_t;


typedef struct fpunchhole {
 unsigned int fp_flags;
 unsigned int reserved;
 off_t fp_offset;
 off_t fp_length;
} fpunchhole_t;


typedef struct ftrimactivefile {
 off_t fta_offset;
 off_t fta_length;
} ftrimactivefile_t;



typedef struct fbootstraptransfer {
  off_t fbt_offset;
  size_t fbt_length;
  void *fbt_buffer;
} fbootstraptransfer_t;
#pragma pack(4)

struct log2phys {
 unsigned int l2p_flags;
 off_t l2p_contigbytes;


 off_t l2p_devoffset;


};

#pragma pack()
struct _filesec;
typedef struct _filesec *filesec_t;

typedef enum {
 FILESEC_OWNER = 1,
 FILESEC_GROUP = 2,
 FILESEC_UUID = 3,
 FILESEC_MODE = 4,
 FILESEC_ACL = 5,
 FILESEC_GRPUUID = 6,


 FILESEC_ACL_RAW = 100,
 FILESEC_ACL_ALLOCSIZE = 101
} filesec_property_t;





extern "C" {
int open(const char *, int, ...) __asm("_" "open" );

int openat(int, const char *, int, ...) __asm("_" "openat" ) __attribute__((availability(ios,introduced=8.0)));

int creat(const char *, mode_t) __asm("_" "creat" );
int fcntl(int, int, ...) __asm("_" "fcntl" );


int openx_np(const char *, int, filesec_t);




int open_dprotected_np ( const char *, int, int, int, ...);
int flock(int, int);
filesec_t filesec_init(void);
filesec_t filesec_dup(filesec_t);
void filesec_free(filesec_t);
int filesec_get_property(filesec_t, filesec_property_t, void *);
int filesec_query_property(filesec_t, filesec_property_t, int *);
int filesec_set_property(filesec_t, filesec_property_t, const void *);
int filesec_unset_property(filesec_t, filesec_property_t) __attribute__((availability(ios,introduced=3.2)));



}




typedef struct objc_class *Class;


struct objc_object {
    Class _Nonnull isa __attribute__((deprecated));
};


typedef struct objc_object *id;



typedef struct objc_selector *SEL;





typedef id _Nullable (*IMP)(id _Nonnull, SEL _Nonnull, ...);
    typedef bool BOOL;
extern "C" __attribute__((visibility("default"))) const char * _Nonnull sel_getName(SEL _Nonnull sel)
    __attribute__((availability(macosx,introduced=10.0))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=1.0))) ;
extern "C" __attribute__((visibility("default"))) SEL _Nonnull sel_registerName(const char * _Nonnull str)
    __attribute__((availability(macosx,introduced=10.0))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=1.0))) ;
extern "C" __attribute__((visibility("default"))) const char * _Nonnull object_getClassName(id _Nullable obj)
    __attribute__((availability(macosx,introduced=10.0))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=1.0))) ;
extern "C" __attribute__((visibility("default"))) void * _Nullable object_getIndexedIvars(id _Nullable obj)
    __attribute__((availability(macosx,introduced=10.0))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=1.0)))
    __attribute__((unavailable("not available in automatic reference counting mode")));
extern "C" __attribute__((visibility("default"))) BOOL sel_isMapped(SEL _Nonnull sel)
    __attribute__((availability(macosx,introduced=10.0))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=1.0))) ;
extern "C" __attribute__((visibility("default"))) SEL _Nonnull sel_getUid(const char * _Nonnull str)
    __attribute__((availability(macosx,introduced=10.0))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=1.0))) ;

typedef const void* objc_objectptr_t;




extern "C" __attribute__((visibility("default"))) id _Nullable objc_retainedObject(objc_objectptr_t _Nullable obj)
    __attribute__((unavailable("use CFBridgingRelease() or a (__bridge_transfer id) cast instead")));
extern "C" __attribute__((visibility("default"))) id _Nullable objc_unretainedObject(objc_objectptr_t _Nullable obj)
    __attribute__((unavailable("use a (__bridge id) cast instead")));
extern "C" __attribute__((visibility("default"))) objc_objectptr_t _Nullable objc_unretainedPointer(id _Nullable obj)
    __attribute__((unavailable("use a __bridge cast instead")));
typedef long NSInteger;
typedef unsigned long NSUInteger;

// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSMethodSignature
#define _REWRITER_typedef_NSMethodSignature
typedef struct objc_object NSMethodSignature;
typedef struct {} _objc_exc_NSMethodSignature;
#endif

#ifndef _REWRITER_typedef_NSInvocation
#define _REWRITER_typedef_NSInvocation
typedef struct objc_object NSInvocation;
typedef struct {} _objc_exc_NSInvocation;
#endif


// @protocol NSObject

// - (BOOL)isEqual:(id)object;
// @property (readonly) NSUInteger hash;

// @property (readonly) Class superclass;
// - (Class)class __attribute__((availability(swift, unavailable, message="use 'type(of: anObject)' instead")));
// - (instancetype)self;

// - (id)performSelector:(SEL)aSelector;
// - (id)performSelector:(SEL)aSelector withObject:(id)object;
// - (id)performSelector:(SEL)aSelector withObject:(id)object1 withObject:(id)object2;

// - (BOOL)isProxy;

// - (BOOL)isKindOfClass:(Class)aClass;
// - (BOOL)isMemberOfClass:(Class)aClass;
// - (BOOL)conformsToProtocol:(Protocol *)aProtocol;

// - (BOOL)respondsToSelector:(SEL)aSelector;

// - (instancetype)retain __attribute__((unavailable("not available in automatic reference counting mode")));
// - (oneway void)release __attribute__((unavailable("not available in automatic reference counting mode")));
// - (instancetype)autorelease __attribute__((unavailable("not available in automatic reference counting mode")));
// - (NSUInteger)retainCount __attribute__((unavailable("not available in automatic reference counting mode")));

// - (struct _NSZone *)zone __attribute__((unavailable("not available in automatic reference counting mode")));

// @property (readonly, copy) NSString *description;
/* @optional */
// @property (readonly, copy) NSString *debugDescription;

/* @end */



__attribute__((availability(macosx,introduced=10.0))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=1.0)))
__attribute__((objc_root_class))
extern "C" __attribute__((visibility("default")))

#ifndef _REWRITER_typedef_NSObject
#define _REWRITER_typedef_NSObject
typedef struct objc_object NSObject;
typedef struct {} _objc_exc_NSObject;
#endif

struct NSObject_IMPL {
	__unsafe_unretained Class isa;
};


// + (void)load;

// + (void)initialize;
#if 0
- (instancetype)init

    __attribute__((objc_designated_initializer))

    ;
#endif


// + (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
// + (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((availability(swift, unavailable, message="use object initializers instead")));
// + (instancetype)alloc __attribute__((availability(swift, unavailable, message="use object initializers instead")));
// - (void)dealloc __attribute__((availability(swift, unavailable, message="use 'deinit' to define a de-initializer")));

// - (void)finalize __attribute__((deprecated("Objective-C garbage collection is no longer supported")));

// - (id)copy;
// - (id)mutableCopy;

// + (id)copyWithZone:(struct _NSZone *)zone __attribute__((unavailable("not available in automatic reference counting mode")));
// + (id)mutableCopyWithZone:(struct _NSZone *)zone __attribute__((unavailable("not available in automatic reference counting mode")));

// + (BOOL)instancesRespondToSelector:(SEL)aSelector;
// + (BOOL)conformsToProtocol:(Protocol *)protocol;
// - (IMP)methodForSelector:(SEL)aSelector;
// + (IMP)instanceMethodForSelector:(SEL)aSelector;
// - (void)doesNotRecognizeSelector:(SEL)aSelector;

// - (id)forwardingTargetForSelector:(SEL)aSelector __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=1.0))) ;
// - (void)forwardInvocation:(NSInvocation *)anInvocation __attribute__((availability(swift, unavailable, message="")));
// - (NSMethodSignature *)methodSignatureForSelector:(SEL)aSelector __attribute__((availability(swift, unavailable, message="")));

// + (NSMethodSignature *)instanceMethodSignatureForSelector:(SEL)aSelector __attribute__((availability(swift, unavailable, message="")));

// - (BOOL)allowsWeakReference __attribute__((unavailable));
// - (BOOL)retainWeakReference __attribute__((unavailable));

// + (BOOL)isSubclassOfClass:(Class)aClass;

// + (BOOL)resolveClassMethod:(SEL)sel __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=1.0))) ;
// + (BOOL)resolveInstanceMethod:(SEL)sel __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=1.0))) ;

// + (NSUInteger)hash;
// + (Class)superclass;
// + (Class)class __attribute__((availability(swift, unavailable, message="use 'aClass.self' instead")));
// + (NSString *)description;
// + (NSString *)debugDescription;

/* @end */

extern "C" {
__attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0)))
extern __attribute__((__visibility__("default"))) __attribute__((__availability__(swift, unavailable, message="Can't be used with ARC")))
void*
os_retain(void *object);
__attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0)))
extern __attribute__((__visibility__("default")))
void __attribute__((__availability__(swift, unavailable, message="Can't be used with ARC")))
os_release(void *object);





}
typedef void (*dispatch_function_t)(void *_Nullable);
struct time_value {
 integer_t seconds;
 integer_t microseconds;
};

typedef struct time_value time_value_t;




typedef int alarm_type_t;
typedef int sleep_type_t;
typedef int clock_id_t;
typedef int clock_flavor_t;
typedef int *clock_attr_t;
typedef int clock_res_t;




struct mach_timespec {
 unsigned int tv_sec;
 clock_res_t tv_nsec;
};
typedef struct mach_timespec mach_timespec_t;


#pragma clang assume_nonnull begin
extern "C" {

struct timespec;
typedef uint64_t dispatch_time_t;
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__warn_unused_result__)) __attribute__((__nothrow__))
dispatch_time_t
dispatch_time(dispatch_time_t when, int64_t delta);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__warn_unused_result__)) __attribute__((__nothrow__))
dispatch_time_t
dispatch_walltime(const struct timespec *_Nullable when, int64_t delta);

}
#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin
// @protocol OS_dispatch_object <NSObject> /* @end */
 typedef NSObject/*<OS_dispatch_object>*/ * __attribute__((objc_independent_class)) dispatch_object_t;






static __inline__ __attribute__((__always_inline__)) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
_dispatch_object_validate(dispatch_object_t object) {
 void *isa = *(void* volatile*)(__bridge void*)object;
 (void)isa;
}
typedef void (*dispatch_block_t)(void);


extern "C" {
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
__attribute__((__availability__(swift, unavailable, message="Can't be used with ARC")))
void
dispatch_retain(dispatch_object_t object);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
__attribute__((__availability__(swift, unavailable, message="Can't be used with ARC")))
void
dispatch_release(dispatch_object_t object);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__pure__)) __attribute__((__warn_unused_result__))
__attribute__((__nothrow__))
void *_Nullable
dispatch_get_context(dispatch_object_t object);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nothrow__))
void
dispatch_set_context(dispatch_object_t object, void *_Nullable context);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nothrow__))
void
dispatch_set_finalizer_f(dispatch_object_t object,
  dispatch_function_t _Nullable finalizer);
__attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_activate(dispatch_object_t object);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_suspend(dispatch_object_t object);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_resume(dispatch_object_t object);
__attribute__((__unavailable__))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nothrow__))
long
dispatch_wait(void *object, dispatch_time_t timeout);
__attribute__((__unavailable__))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_notify(void *object, dispatch_object_t queue,
  dispatch_block_t notification_block);
__attribute__((__unavailable__))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_cancel(void *object);
__attribute__((__unavailable__))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__warn_unused_result__)) __attribute__((__pure__))
__attribute__((__nothrow__))
long
dispatch_testcancel(void *object);
__attribute__((availability(macos,introduced=10.6,deprecated=10.9,message="unsupported interface"))) __attribute__((availability(ios,introduced=4.0,deprecated=6.0,message="unsupported interface")))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(2))) __attribute__((__nothrow__))
__attribute__((__format__(printf,2,3)))
void
dispatch_debug(dispatch_object_t object, const char *message, ...);

__attribute__((availability(macos,introduced=10.6,deprecated=10.9,message="unsupported interface"))) __attribute__((availability(ios,introduced=4.0,deprecated=6.0,message="unsupported interface")))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(2))) __attribute__((__nothrow__))
__attribute__((__format__(printf,2,0)))
void
dispatch_debugv(dispatch_object_t object, const char *message, va_list ap);

}
#pragma clang assume_nonnull end
typedef enum : unsigned int { QOS_CLASS_USER_INTERACTIVE __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) = 0x21, QOS_CLASS_USER_INITIATED __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) = 0x19, QOS_CLASS_DEFAULT __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) = 0x15, QOS_CLASS_UTILITY __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) = 0x11, QOS_CLASS_BACKGROUND __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) = 0x09, QOS_CLASS_UNSPECIFIED __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) = 0x00, } qos_class_t;
extern "C" {
__attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0)))
qos_class_t
qos_class_self(void);
__attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0)))
qos_class_t
qos_class_main(void);

}


#pragma clang assume_nonnull begin
// @protocol OS_dispatch_queue <OS_dispatch_object> /* @end */
 typedef NSObject/*<OS_dispatch_queue>*/ * __attribute__((objc_independent_class)) dispatch_queue_t;

extern "C" {
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_async(dispatch_queue_t queue, dispatch_block_t block);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nonnull__(3))) __attribute__((__nothrow__))
void
dispatch_async_f(dispatch_queue_t queue,
 void *_Nullable context,
 dispatch_function_t work);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_sync(dispatch_queue_t queue, __attribute__((__noescape__)) dispatch_block_t block);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nonnull__(3))) __attribute__((__nothrow__))
void
dispatch_sync_f(dispatch_queue_t queue,
 void *_Nullable context,
 dispatch_function_t work);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(3))) __attribute__((__nothrow__))
void
dispatch_apply(size_t iterations, dispatch_queue_t queue,
  __attribute__((__noescape__)) void (^block)(size_t));
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(4))) __attribute__((__nothrow__))
void
dispatch_apply_f(size_t iterations, dispatch_queue_t queue,
 void *_Nullable context,
 void (*work)(void *_Nullable, size_t));
__attribute__((availability(macos,introduced=10.6,deprecated=10.9,message="unsupported interface"))) __attribute__((availability(ios,introduced=4.0,deprecated=6.0,message="unsupported interface")))
extern __attribute__((visibility("default"))) __attribute__((__pure__)) __attribute__((__warn_unused_result__)) __attribute__((__nothrow__))
dispatch_queue_t
dispatch_get_current_queue(void);

__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) struct dispatch_queue_s _dispatch_main_q;
static __inline__ __attribute__((__always_inline__)) __attribute__((__const__)) __attribute__((__nothrow__))
dispatch_queue_t
dispatch_get_main_queue(void)
{
 return ((__bridge dispatch_queue_t)&(_dispatch_main_q));
}
typedef long dispatch_queue_priority_t;






typedef qos_class_t dispatch_qos_class_t;
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__const__)) __attribute__((__warn_unused_result__)) __attribute__((__nothrow__))
dispatch_queue_t
dispatch_get_global_queue(long identifier, unsigned long flags);







// @protocol OS_dispatch_queue_attr <OS_dispatch_object> /* @end */
 typedef NSObject/*<OS_dispatch_queue_attr>*/ * __attribute__((objc_independent_class)) dispatch_queue_attr_t;
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.3)))
extern __attribute__((visibility("default")))
struct dispatch_queue_attr_s _dispatch_queue_attr_concurrent;
__attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)))
extern __attribute__((visibility("default"))) __attribute__((__warn_unused_result__)) __attribute__((__pure__)) __attribute__((__nothrow__))
dispatch_queue_attr_t
dispatch_queue_attr_make_initially_inactive(
  dispatch_queue_attr_t _Nullable attr);
typedef enum : unsigned long { DISPATCH_AUTORELEASE_FREQUENCY_INHERIT __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) = 0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) = 1, DISPATCH_AUTORELEASE_FREQUENCY_NEVER __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) = 2, } dispatch_autorelease_frequency_t;
__attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)))
extern __attribute__((visibility("default"))) __attribute__((__warn_unused_result__)) __attribute__((__pure__)) __attribute__((__nothrow__))
dispatch_queue_attr_t
dispatch_queue_attr_make_with_autorelease_frequency(
  dispatch_queue_attr_t _Nullable attr,
  dispatch_autorelease_frequency_t frequency);
__attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0)))
extern __attribute__((visibility("default"))) __attribute__((__warn_unused_result__)) __attribute__((__pure__)) __attribute__((__nothrow__))
dispatch_queue_attr_t
dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t _Nullable attr,
  dispatch_qos_class_t qos_class, int relative_priority);
__attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)))
extern __attribute__((visibility("default"))) __attribute__((__malloc__)) __attribute__((__ns_returns_retained__)) __attribute__((__warn_unused_result__))
__attribute__((__nothrow__))
dispatch_queue_t
dispatch_queue_create_with_target(const char *_Nullable label,
 dispatch_queue_attr_t _Nullable attr, dispatch_queue_t _Nullable target)
 __asm__("_" "dispatch_queue_create_with_target" "$V2");
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__malloc__)) __attribute__((__ns_returns_retained__)) __attribute__((__warn_unused_result__))
__attribute__((__nothrow__))
dispatch_queue_t
dispatch_queue_create(const char *_Nullable label,
  dispatch_queue_attr_t _Nullable attr);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__pure__)) __attribute__((__warn_unused_result__)) __attribute__((__nothrow__))
const char *
dispatch_queue_get_label(dispatch_queue_t _Nullable queue);
__attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0)))
extern __attribute__((visibility("default"))) __attribute__((__warn_unused_result__)) __attribute__((__nonnull__(1))) __attribute__((__nothrow__))
dispatch_qos_class_t
dispatch_queue_get_qos_class(dispatch_queue_t queue,
  int *_Nullable relative_priority_ptr);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nothrow__))
void
dispatch_set_target_queue(dispatch_object_t object,
  dispatch_queue_t _Nullable queue);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nothrow__)) __attribute__((__noreturn__))
void
dispatch_main(void);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(2))) __attribute__((__nonnull__(3))) __attribute__((__nothrow__))
void
dispatch_after(dispatch_time_t when,
 dispatch_queue_t queue,
 dispatch_block_t block);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(2))) __attribute__((__nonnull__(4))) __attribute__((__nothrow__))
void
dispatch_after_f(dispatch_time_t when,
 dispatch_queue_t queue,
 void *_Nullable context,
 dispatch_function_t work);
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.3)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_barrier_async(dispatch_queue_t queue, dispatch_block_t block);
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.3)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nonnull__(3))) __attribute__((__nothrow__))
void
dispatch_barrier_async_f(dispatch_queue_t queue,
 void *_Nullable context,
 dispatch_function_t work);
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.3)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_barrier_sync(dispatch_queue_t queue,
  __attribute__((__noescape__)) dispatch_block_t block);
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.3)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nonnull__(3))) __attribute__((__nothrow__))
void
dispatch_barrier_sync_f(dispatch_queue_t queue,
 void *_Nullable context,
 dispatch_function_t work);
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nothrow__))
void
dispatch_queue_set_specific(dispatch_queue_t queue, const void *key,
 void *_Nullable context, dispatch_function_t _Nullable destructor);
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__pure__)) __attribute__((__warn_unused_result__))
__attribute__((__nothrow__))
void *_Nullable
dispatch_queue_get_specific(dispatch_queue_t queue, const void *key);
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__pure__)) __attribute__((__warn_unused_result__)) __attribute__((__nothrow__))
void *_Nullable
dispatch_get_specific(const void *key);
__attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1)))
void
dispatch_assert_queue(dispatch_queue_t queue)
 __asm__("_" "dispatch_assert_queue" "$V2");
__attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1)))
void
dispatch_assert_queue_barrier(dispatch_queue_t queue);
__attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1)))
void
dispatch_assert_queue_not(dispatch_queue_t queue)
 __asm__("_" "dispatch_assert_queue_not" "$V2");
}
#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

extern "C" {
typedef enum : unsigned long { DISPATCH_BLOCK_BARRIER __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) = 0x1, DISPATCH_BLOCK_DETACHED __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) = 0x2, DISPATCH_BLOCK_ASSIGN_CURRENT __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) = 0x4, DISPATCH_BLOCK_NO_QOS_CLASS __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) = 0x8, DISPATCH_BLOCK_INHERIT_QOS_CLASS __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) = 0x10, DISPATCH_BLOCK_ENFORCE_QOS_CLASS __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) = 0x20, } dispatch_block_flags_t;
__attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(2))) __attribute__((__ns_returns_retained__))
__attribute__((__warn_unused_result__)) __attribute__((__nothrow__))
dispatch_block_t
dispatch_block_create(dispatch_block_flags_t flags, dispatch_block_t block);
__attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(4))) __attribute__((__ns_returns_retained__))
__attribute__((__warn_unused_result__)) __attribute__((__nothrow__))
dispatch_block_t
dispatch_block_create_with_qos_class(dispatch_block_flags_t flags,
  dispatch_qos_class_t qos_class, int relative_priority,
  dispatch_block_t block);
__attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(2))) __attribute__((__nothrow__))
void
dispatch_block_perform(dispatch_block_flags_t flags,
  __attribute__((__noescape__)) dispatch_block_t block);
__attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nothrow__))
long
dispatch_block_wait(dispatch_block_t block, dispatch_time_t timeout);
__attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_block_notify(dispatch_block_t block, dispatch_queue_t queue,
  dispatch_block_t notification_block);
__attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_block_cancel(dispatch_block_t block);
__attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__warn_unused_result__)) __attribute__((__pure__))
__attribute__((__nothrow__))
long
dispatch_block_testcancel(dispatch_block_t block);

}
#pragma clang assume_nonnull end
typedef int kern_return_t;
typedef natural_t mach_msg_timeout_t;
typedef unsigned int mach_msg_bits_t;
typedef natural_t mach_msg_size_t;
typedef integer_t mach_msg_id_t;



typedef unsigned int mach_msg_priority_t;



typedef unsigned int mach_msg_type_name_t;
typedef unsigned int mach_msg_copy_options_t;
typedef unsigned int mach_msg_descriptor_type_t;






#pragma pack(4)

typedef struct
{
  natural_t pad1;
  mach_msg_size_t pad2;
  unsigned int pad3 : 24;
  mach_msg_descriptor_type_t type : 8;
} mach_msg_type_descriptor_t;

typedef struct
{
  mach_port_t name;

  mach_msg_size_t pad1;
  unsigned int pad2 : 16;
  mach_msg_type_name_t disposition : 8;
  mach_msg_descriptor_type_t type : 8;
} mach_msg_port_descriptor_t;

typedef struct
{
  uint32_t address;
  mach_msg_size_t size;
  boolean_t deallocate: 8;
  mach_msg_copy_options_t copy: 8;
  unsigned int pad1: 8;
  mach_msg_descriptor_type_t type: 8;
} mach_msg_ool_descriptor32_t;

typedef struct
{
  uint64_t address;
  boolean_t deallocate: 8;
  mach_msg_copy_options_t copy: 8;
  unsigned int pad1: 8;
  mach_msg_descriptor_type_t type: 8;
  mach_msg_size_t size;
} mach_msg_ool_descriptor64_t;

typedef struct
{
  void* address;



  boolean_t deallocate: 8;
  mach_msg_copy_options_t copy: 8;
  unsigned int pad1: 8;
  mach_msg_descriptor_type_t type: 8;

  mach_msg_size_t size;

} mach_msg_ool_descriptor_t;

typedef struct
{
  uint32_t address;
  mach_msg_size_t count;
  boolean_t deallocate: 8;
  mach_msg_copy_options_t copy: 8;
  mach_msg_type_name_t disposition : 8;
  mach_msg_descriptor_type_t type : 8;
} mach_msg_ool_ports_descriptor32_t;

typedef struct
{
  uint64_t address;
  boolean_t deallocate: 8;
  mach_msg_copy_options_t copy: 8;
  mach_msg_type_name_t disposition : 8;
  mach_msg_descriptor_type_t type : 8;
  mach_msg_size_t count;
} mach_msg_ool_ports_descriptor64_t;

typedef struct
{
  void* address;



  boolean_t deallocate: 8;
  mach_msg_copy_options_t copy: 8;
  mach_msg_type_name_t disposition : 8;
  mach_msg_descriptor_type_t type : 8;

  mach_msg_size_t count;

} mach_msg_ool_ports_descriptor_t;






typedef union
{
  mach_msg_port_descriptor_t port;
  mach_msg_ool_descriptor_t out_of_line;
  mach_msg_ool_ports_descriptor_t ool_ports;
  mach_msg_type_descriptor_t type;
} mach_msg_descriptor_t;

typedef struct
{
        mach_msg_size_t msgh_descriptor_count;
} mach_msg_body_t;




typedef struct
{
  mach_msg_bits_t msgh_bits;
  mach_msg_size_t msgh_size;
  mach_port_t msgh_remote_port;
  mach_port_t msgh_local_port;
  mach_port_name_t msgh_voucher_port;
  mach_msg_id_t msgh_id;
} mach_msg_header_t;




typedef struct
{
        mach_msg_header_t header;
        mach_msg_body_t body;
} mach_msg_base_t;

typedef unsigned int mach_msg_trailer_type_t;



typedef unsigned int mach_msg_trailer_size_t;
typedef char *mach_msg_trailer_info_t;

typedef struct
{
  mach_msg_trailer_type_t msgh_trailer_type;
  mach_msg_trailer_size_t msgh_trailer_size;
} mach_msg_trailer_t;
typedef struct
{
  mach_msg_trailer_type_t msgh_trailer_type;
  mach_msg_trailer_size_t msgh_trailer_size;
  mach_port_seqno_t msgh_seqno;
} mach_msg_seqno_trailer_t;

typedef struct
{
  unsigned int val[2];
} security_token_t;

typedef struct
{
  mach_msg_trailer_type_t msgh_trailer_type;
  mach_msg_trailer_size_t msgh_trailer_size;
  mach_port_seqno_t msgh_seqno;
  security_token_t msgh_sender;
} mach_msg_security_trailer_t;
typedef struct
{
  unsigned int val[8];
} audit_token_t;

typedef struct
{
  mach_msg_trailer_type_t msgh_trailer_type;
  mach_msg_trailer_size_t msgh_trailer_size;
  mach_port_seqno_t msgh_seqno;
  security_token_t msgh_sender;
  audit_token_t msgh_audit;
} mach_msg_audit_trailer_t;

typedef struct
{
  mach_msg_trailer_type_t msgh_trailer_type;
  mach_msg_trailer_size_t msgh_trailer_size;
  mach_port_seqno_t msgh_seqno;
  security_token_t msgh_sender;
  audit_token_t msgh_audit;
  mach_port_context_t msgh_context;
} mach_msg_context_trailer_t;



typedef struct
{
  mach_port_name_t sender;
} msg_labels_t;






typedef struct
{
  mach_msg_trailer_type_t msgh_trailer_type;
  mach_msg_trailer_size_t msgh_trailer_size;
  mach_port_seqno_t msgh_seqno;
  security_token_t msgh_sender;
  audit_token_t msgh_audit;
  mach_port_context_t msgh_context;
  int msgh_ad;
  msg_labels_t msgh_labels;
} mach_msg_mac_trailer_t;
typedef mach_msg_mac_trailer_t mach_msg_max_trailer_t;
typedef mach_msg_security_trailer_t mach_msg_format_0_trailer_t;







extern security_token_t KERNEL_SECURITY_TOKEN;


extern audit_token_t KERNEL_AUDIT_TOKEN;

typedef integer_t mach_msg_options_t;

typedef struct
{
  mach_msg_header_t header;
} mach_msg_empty_send_t;

typedef struct
{
  mach_msg_header_t header;
  mach_msg_trailer_t trailer;
} mach_msg_empty_rcv_t;

typedef union
{
  mach_msg_empty_send_t send;
  mach_msg_empty_rcv_t rcv;
} mach_msg_empty_t;

#pragma pack()
typedef natural_t mach_msg_type_size_t;
typedef natural_t mach_msg_type_number_t;
typedef integer_t mach_msg_option_t;
typedef kern_return_t mach_msg_return_t;
extern "C" {
__attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
extern mach_msg_return_t mach_msg_overwrite(
     mach_msg_header_t *msg,
     mach_msg_option_t option,
     mach_msg_size_t send_size,
     mach_msg_size_t rcv_size,
     mach_port_name_t rcv_name,
     mach_msg_timeout_t timeout,
     mach_port_name_t notify,
     mach_msg_header_t *rcv_msg,
     mach_msg_size_t rcv_limit);
__attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
extern mach_msg_return_t mach_msg(
     mach_msg_header_t *msg,
     mach_msg_option_t option,
     mach_msg_size_t send_size,
     mach_msg_size_t rcv_size,
     mach_port_name_t rcv_name,
     mach_msg_timeout_t timeout,
     mach_port_name_t notify);







__attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
extern kern_return_t mach_voucher_deallocate(
     mach_port_name_t voucher);


}






#pragma clang assume_nonnull begin
// @protocol OS_dispatch_source <OS_dispatch_object> /* @end */
 typedef NSObject/*<OS_dispatch_source>*/ * __attribute__((objc_independent_class)) dispatch_source_t;;

extern "C" {
typedef const struct dispatch_source_type_s *dispatch_source_type_t;
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) const struct dispatch_source_type_s _dispatch_source_type_data_add;
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) const struct dispatch_source_type_s _dispatch_source_type_data_or;
__attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)))
extern __attribute__((visibility("default"))) const struct dispatch_source_type_s _dispatch_source_type_data_replace;
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) const struct dispatch_source_type_s _dispatch_source_type_mach_send;
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) const struct dispatch_source_type_s _dispatch_source_type_mach_recv;
__attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0)))
extern __attribute__((visibility("default"))) const struct dispatch_source_type_s _dispatch_source_type_memorypressure;
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) const struct dispatch_source_type_s _dispatch_source_type_proc;
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) const struct dispatch_source_type_s _dispatch_source_type_read;
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) const struct dispatch_source_type_s _dispatch_source_type_signal;
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) const struct dispatch_source_type_s _dispatch_source_type_timer;
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) const struct dispatch_source_type_s _dispatch_source_type_vnode;
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) const struct dispatch_source_type_s _dispatch_source_type_write;
typedef unsigned long dispatch_source_mach_send_flags_t;
typedef unsigned long dispatch_source_memorypressure_flags_t;
typedef unsigned long dispatch_source_proc_flags_t;
typedef unsigned long dispatch_source_vnode_flags_t;
typedef unsigned long dispatch_source_timer_flags_t;
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__malloc__)) __attribute__((__ns_returns_retained__)) __attribute__((__warn_unused_result__))
__attribute__((__nothrow__))
dispatch_source_t
dispatch_source_create(dispatch_source_type_t type,
 uintptr_t handle,
 unsigned long mask,
 dispatch_queue_t _Nullable queue);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nothrow__))
void
dispatch_source_set_event_handler(dispatch_source_t source,
 dispatch_block_t _Nullable handler);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nothrow__))
void
dispatch_source_set_event_handler_f(dispatch_source_t source,
 dispatch_function_t _Nullable handler);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nothrow__))
void
dispatch_source_set_cancel_handler(dispatch_source_t source,
 dispatch_block_t _Nullable handler);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nothrow__))
void
dispatch_source_set_cancel_handler_f(dispatch_source_t source,
 dispatch_function_t _Nullable handler);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_source_cancel(dispatch_source_t source);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__warn_unused_result__)) __attribute__((__pure__))
__attribute__((__nothrow__))
long
dispatch_source_testcancel(dispatch_source_t source);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__warn_unused_result__)) __attribute__((__pure__))
__attribute__((__nothrow__))
uintptr_t
dispatch_source_get_handle(dispatch_source_t source);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__warn_unused_result__)) __attribute__((__pure__))
__attribute__((__nothrow__))
unsigned long
dispatch_source_get_mask(dispatch_source_t source);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__warn_unused_result__)) __attribute__((__pure__))
__attribute__((__nothrow__))
unsigned long
dispatch_source_get_data(dispatch_source_t source);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_source_merge_data(dispatch_source_t source, unsigned long value);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_source_set_timer(dispatch_source_t source,
 dispatch_time_t start,
 uint64_t interval,
 uint64_t leeway);
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.3)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nothrow__))
void
dispatch_source_set_registration_handler(dispatch_source_t source,
 dispatch_block_t _Nullable handler);
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.3)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nothrow__))
void
dispatch_source_set_registration_handler_f(dispatch_source_t source,
 dispatch_function_t _Nullable handler);

}
#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin






// @protocol OS_dispatch_group <OS_dispatch_object> /* @end */
 typedef NSObject/*<OS_dispatch_group>*/ * __attribute__((objc_independent_class)) dispatch_group_t;

extern "C" {
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__malloc__)) __attribute__((__ns_returns_retained__)) __attribute__((__warn_unused_result__))
__attribute__((__nothrow__))
dispatch_group_t
dispatch_group_create(void);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_group_async(dispatch_group_t group,
 dispatch_queue_t queue,
 dispatch_block_t block);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nonnull__(2))) __attribute__((__nonnull__(4)))
__attribute__((__nothrow__))
void
dispatch_group_async_f(dispatch_group_t group,
 dispatch_queue_t queue,
 void *_Nullable context,
 dispatch_function_t work);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
long
dispatch_group_wait(dispatch_group_t group, dispatch_time_t timeout);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_group_notify(dispatch_group_t group,
 dispatch_queue_t queue,
 dispatch_block_t block);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nonnull__(2))) __attribute__((__nonnull__(4)))
__attribute__((__nothrow__))
void
dispatch_group_notify_f(dispatch_group_t group,
 dispatch_queue_t queue,
 void *_Nullable context,
 dispatch_function_t work);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_group_enter(dispatch_group_t group);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_group_leave(dispatch_group_t group);

}
#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin







// @protocol OS_dispatch_semaphore <OS_dispatch_object> /* @end */
 typedef NSObject/*<OS_dispatch_semaphore>*/ * __attribute__((objc_independent_class)) dispatch_semaphore_t;

extern "C" {
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__malloc__)) __attribute__((__ns_returns_retained__)) __attribute__((__warn_unused_result__))
__attribute__((__nothrow__))
dispatch_semaphore_t
dispatch_semaphore_create(long value);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
long
dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout);
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
long
dispatch_semaphore_signal(dispatch_semaphore_t dsema);

}
#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

extern "C" {
typedef long dispatch_once_t;
__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))

void
dispatch_once(dispatch_once_t *predicate,
  __attribute__((__noescape__)) dispatch_block_t block);


static __inline__ __attribute__((__always_inline__)) __attribute__((__nonnull__)) __attribute__((__nothrow__))

void
_dispatch_once(dispatch_once_t *predicate,
  __attribute__((__noescape__)) dispatch_block_t block)
{
 if (__builtin_expect((*predicate), (~0l)) != ~0l) {
  dispatch_once(predicate, block);
 } else {
  __asm__ __volatile__("" ::: "memory");
 }
 __builtin_assume(*predicate == ~0l);
}





__attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nonnull__(3))) __attribute__((__nothrow__))

void
dispatch_once_f(dispatch_once_t *predicate, void *_Nullable context,
  dispatch_function_t function);


static __inline__ __attribute__((__always_inline__)) __attribute__((__nonnull__(1))) __attribute__((__nonnull__(3)))
__attribute__((__nothrow__))

void
_dispatch_once_f(dispatch_once_t *predicate, void *_Nullable context,
  dispatch_function_t function)
{
 if (__builtin_expect((*predicate), (~0l)) != ~0l) {
  dispatch_once_f(predicate, context, function);
 } else {
  __asm__ __volatile__("" ::: "memory");
 }
 __builtin_assume(*predicate == ~0l);
}




}
#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

extern "C" {
// @protocol OS_dispatch_data <OS_dispatch_object> /* @end */
 typedef NSObject/*<OS_dispatch_data>*/ * __attribute__((objc_independent_class)) dispatch_data_t;
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) struct dispatch_data_s _dispatch_data_empty;
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) const dispatch_block_t _dispatch_data_destructor_free;







__attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0)))
extern __attribute__((visibility("default"))) const dispatch_block_t _dispatch_data_destructor_munmap;
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__ns_returns_retained__)) __attribute__((__warn_unused_result__)) __attribute__((__nothrow__))
dispatch_data_t
dispatch_data_create(const void *buffer,
 size_t size,
 dispatch_queue_t _Nullable queue,
 dispatch_block_t _Nullable destructor);
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__pure__)) __attribute__((__nonnull__(1))) __attribute__((__nothrow__))
size_t
dispatch_data_get_size(dispatch_data_t data);
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__ns_returns_retained__))
__attribute__((__warn_unused_result__)) __attribute__((__nothrow__))
dispatch_data_t
dispatch_data_create_map(dispatch_data_t data,
 const void *_Nullable *_Nullable buffer_ptr,
 size_t *_Nullable size_ptr);
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__ns_returns_retained__))
__attribute__((__warn_unused_result__)) __attribute__((__nothrow__))
dispatch_data_t
dispatch_data_create_concat(dispatch_data_t data1, dispatch_data_t data2);
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__ns_returns_retained__))
__attribute__((__warn_unused_result__)) __attribute__((__nothrow__))
dispatch_data_t
dispatch_data_create_subrange(dispatch_data_t data,
 size_t offset,
 size_t length);
typedef bool (*dispatch_data_applier_t)(dispatch_data_t region,
 size_t offset,
 const void *buffer,
 size_t size);
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
bool
dispatch_data_apply(dispatch_data_t data,
 __attribute__((__noescape__)) dispatch_data_applier_t applier);
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nonnull__(3))) __attribute__((__ns_returns_retained__))
__attribute__((__warn_unused_result__)) __attribute__((__nothrow__))
dispatch_data_t
dispatch_data_copy_region(dispatch_data_t data,
 size_t location,
 size_t *offset_ptr);

}
#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

extern "C" {
typedef int dispatch_fd_t;
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(3))) __attribute__((__nonnull__(4))) __attribute__((__nothrow__))
void
dispatch_read(dispatch_fd_t fd,
 size_t length,
 dispatch_queue_t queue,
 void (^handler)(dispatch_data_t data, int error));
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(2))) __attribute__((__nonnull__(3))) __attribute__((__nonnull__(4)))
__attribute__((__nothrow__))
void
dispatch_write(dispatch_fd_t fd,
 dispatch_data_t data,
 dispatch_queue_t queue,
 void (^handler)(dispatch_data_t _Nullable data, int error));
// @protocol OS_dispatch_io <OS_dispatch_object> /* @end */
 typedef NSObject/*<OS_dispatch_io>*/ * __attribute__((objc_independent_class)) dispatch_io_t;
typedef unsigned long dispatch_io_type_t;
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__malloc__)) __attribute__((__ns_returns_retained__)) __attribute__((__warn_unused_result__))
__attribute__((__nothrow__))
dispatch_io_t
dispatch_io_create(dispatch_io_type_t type,
 dispatch_fd_t fd,
 dispatch_queue_t queue,
 void (^cleanup_handler)(int error));
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(2))) __attribute__((__malloc__)) __attribute__((__ns_returns_retained__))
__attribute__((__warn_unused_result__)) __attribute__((__nothrow__))
dispatch_io_t
dispatch_io_create_with_path(dispatch_io_type_t type,
 const char *path, int oflag, mode_t mode,
 dispatch_queue_t queue,
 void (^cleanup_handler)(int error));
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(2))) __attribute__((__malloc__)) __attribute__((__ns_returns_retained__))
__attribute__((__warn_unused_result__)) __attribute__((__nothrow__))
dispatch_io_t
dispatch_io_create_with_io(dispatch_io_type_t type,
 dispatch_io_t io,
 dispatch_queue_t queue,
 void (^cleanup_handler)(int error));
typedef void (*dispatch_io_handler_t)(bool done, dispatch_data_t _Nullable data,
  int error);
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nonnull__(4))) __attribute__((__nonnull__(5)))
__attribute__((__nothrow__))
void
dispatch_io_read(dispatch_io_t channel,
 off_t offset,
 size_t length,
 dispatch_queue_t queue,
 dispatch_io_handler_t io_handler);
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nonnull__(3))) __attribute__((__nonnull__(4)))
__attribute__((__nonnull__(5))) __attribute__((__nothrow__))
void
dispatch_io_write(dispatch_io_t channel,
 off_t offset,
 dispatch_data_t data,
 dispatch_queue_t queue,
 dispatch_io_handler_t io_handler);
typedef unsigned long dispatch_io_close_flags_t;
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nothrow__))
void
dispatch_io_close(dispatch_io_t channel, dispatch_io_close_flags_t flags);
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__nothrow__))
void
dispatch_io_barrier(dispatch_io_t channel, dispatch_block_t barrier);
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__)) __attribute__((__warn_unused_result__)) __attribute__((__nothrow__))
dispatch_fd_t
dispatch_io_get_descriptor(dispatch_io_t channel);
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nothrow__))
void
dispatch_io_set_high_water(dispatch_io_t channel, size_t high_water);
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nothrow__))
void
dispatch_io_set_low_water(dispatch_io_t channel, size_t low_water);
typedef unsigned long dispatch_io_interval_flags_t;
__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0)))
extern __attribute__((visibility("default"))) __attribute__((__nonnull__(1))) __attribute__((__nothrow__))
void
dispatch_io_set_interval(dispatch_io_t channel,
 uint64_t interval,
 dispatch_io_interval_flags_t flags);

}
#pragma clang assume_nonnull end


extern "C" {

typedef CFStringRef CFStreamPropertyKey __attribute__((swift_wrapper(struct)));

typedef CFIndex CFStreamStatus; enum {
    kCFStreamStatusNotOpen = 0,
    kCFStreamStatusOpening,
    kCFStreamStatusOpen,
    kCFStreamStatusReading,
    kCFStreamStatusWriting,
    kCFStreamStatusAtEnd,
    kCFStreamStatusClosed,
    kCFStreamStatusError
};

typedef CFOptionFlags CFStreamEventType; enum {
    kCFStreamEventNone = 0,
    kCFStreamEventOpenCompleted = 1,
    kCFStreamEventHasBytesAvailable = 2,
    kCFStreamEventCanAcceptBytes = 4,
    kCFStreamEventErrorOccurred = 8,
    kCFStreamEventEndEncountered = 16
};

typedef struct {
    CFIndex version;
    void *info;
    void *(*retain)(void *info);
    void (*release)(void *info);
    CFStringRef (*copyDescription)(void *info);
} CFStreamClientContext;

typedef struct __attribute__((objc_bridge_mutable(NSInputStream))) __CFReadStream * CFReadStreamRef;
typedef struct __attribute__((objc_bridge_mutable(NSOutputStream))) __CFWriteStream * CFWriteStreamRef;

typedef void (*CFReadStreamClientCallBack)(CFReadStreamRef stream, CFStreamEventType type, void *clientCallBackInfo);
typedef void (*CFWriteStreamClientCallBack)(CFWriteStreamRef stream, CFStreamEventType type, void *clientCallBackInfo);

extern
CFTypeID CFReadStreamGetTypeID(void);
extern
CFTypeID CFWriteStreamGetTypeID(void);




extern
const CFStreamPropertyKey kCFStreamPropertyDataWritten;


extern
CFReadStreamRef CFReadStreamCreateWithBytesNoCopy(CFAllocatorRef alloc, const UInt8 *bytes, CFIndex length, CFAllocatorRef bytesDeallocator);


extern
CFWriteStreamRef CFWriteStreamCreateWithBuffer(CFAllocatorRef alloc, UInt8 *buffer, CFIndex bufferCapacity);


extern
CFWriteStreamRef CFWriteStreamCreateWithAllocatedBuffers(CFAllocatorRef alloc, CFAllocatorRef bufferAllocator);


extern
CFReadStreamRef CFReadStreamCreateWithFile(CFAllocatorRef alloc, CFURLRef fileURL);
extern
CFWriteStreamRef CFWriteStreamCreateWithFile(CFAllocatorRef alloc, CFURLRef fileURL);

extern
void CFStreamCreateBoundPair(CFAllocatorRef alloc, CFReadStreamRef *readStream, CFWriteStreamRef *writeStream, CFIndex transferBufferSize);



extern
const CFStreamPropertyKey kCFStreamPropertyAppendToFile;

extern
const CFStreamPropertyKey kCFStreamPropertyFileCurrentOffset;





extern
const CFStreamPropertyKey kCFStreamPropertySocketNativeHandle;


extern
const CFStreamPropertyKey kCFStreamPropertySocketRemoteHostName;


extern
const CFStreamPropertyKey kCFStreamPropertySocketRemotePortNumber;



extern
void CFStreamCreatePairWithSocket(CFAllocatorRef alloc, CFSocketNativeHandle sock, CFReadStreamRef *readStream, CFWriteStreamRef *writeStream);
extern
void CFStreamCreatePairWithSocketToHost(CFAllocatorRef alloc, CFStringRef host, UInt32 port, CFReadStreamRef *readStream, CFWriteStreamRef *writeStream);
extern
void CFStreamCreatePairWithPeerSocketSignature(CFAllocatorRef alloc, const CFSocketSignature *signature, CFReadStreamRef *readStream, CFWriteStreamRef *writeStream);




extern
CFStreamStatus CFReadStreamGetStatus(CFReadStreamRef stream);
extern
CFStreamStatus CFWriteStreamGetStatus(CFWriteStreamRef stream);


extern
CFErrorRef CFReadStreamCopyError(CFReadStreamRef stream) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
CFErrorRef CFWriteStreamCopyError(CFWriteStreamRef stream) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






extern
Boolean CFReadStreamOpen(CFReadStreamRef stream);
extern
Boolean CFWriteStreamOpen(CFWriteStreamRef stream);




extern
void CFReadStreamClose(CFReadStreamRef stream);
extern
void CFWriteStreamClose(CFWriteStreamRef stream);



extern
Boolean CFReadStreamHasBytesAvailable(CFReadStreamRef stream);
extern
CFIndex CFReadStreamRead(CFReadStreamRef stream, UInt8 *buffer, CFIndex bufferLength);
extern
const UInt8 *CFReadStreamGetBuffer(CFReadStreamRef stream, CFIndex maxBytesToRead, CFIndex *numBytesRead);



extern
Boolean CFWriteStreamCanAcceptBytes(CFWriteStreamRef stream);






extern
CFIndex CFWriteStreamWrite(CFWriteStreamRef stream, const UInt8 *buffer, CFIndex bufferLength);
extern
CFTypeRef CFReadStreamCopyProperty(CFReadStreamRef stream, CFStreamPropertyKey propertyName);
extern
CFTypeRef CFWriteStreamCopyProperty(CFWriteStreamRef stream, CFStreamPropertyKey propertyName);



extern
Boolean CFReadStreamSetProperty(CFReadStreamRef stream, CFStreamPropertyKey propertyName, CFTypeRef propertyValue);
extern
Boolean CFWriteStreamSetProperty(CFWriteStreamRef stream, CFStreamPropertyKey propertyName, CFTypeRef propertyValue);
extern
Boolean CFReadStreamSetClient(CFReadStreamRef stream, CFOptionFlags streamEvents, CFReadStreamClientCallBack clientCB, CFStreamClientContext *clientContext);
extern
Boolean CFWriteStreamSetClient(CFWriteStreamRef stream, CFOptionFlags streamEvents, CFWriteStreamClientCallBack clientCB, CFStreamClientContext *clientContext);

extern
void CFReadStreamScheduleWithRunLoop(CFReadStreamRef stream, CFRunLoopRef runLoop, CFRunLoopMode runLoopMode);
extern
void CFWriteStreamScheduleWithRunLoop(CFWriteStreamRef stream, CFRunLoopRef runLoop, CFRunLoopMode runLoopMode);

extern
void CFReadStreamUnscheduleFromRunLoop(CFReadStreamRef stream, CFRunLoopRef runLoop, CFRunLoopMode runLoopMode);
extern
void CFWriteStreamUnscheduleFromRunLoop(CFWriteStreamRef stream, CFRunLoopRef runLoop, CFRunLoopMode runLoopMode);
extern
void CFReadStreamSetDispatchQueue(CFReadStreamRef stream, dispatch_queue_t q) __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern
void CFWriteStreamSetDispatchQueue(CFWriteStreamRef stream, dispatch_queue_t q) __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






extern
dispatch_queue_t CFReadStreamCopyDispatchQueue(CFReadStreamRef stream) __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern
dispatch_queue_t CFWriteStreamCopyDispatchQueue(CFWriteStreamRef stream) __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



typedef CFIndex CFStreamErrorDomain; enum {
    kCFStreamErrorDomainCustom = -1L,
    kCFStreamErrorDomainPOSIX = 1,
    kCFStreamErrorDomainMacOSStatus
};

typedef struct {
    CFIndex domain;
    SInt32 error;
} CFStreamError;
extern
CFStreamError CFReadStreamGetError(CFReadStreamRef stream);
extern
CFStreamError CFWriteStreamGetError(CFWriteStreamRef stream);


}


extern "C" {

typedef CFOptionFlags CFPropertyListMutabilityOptions; enum {
    kCFPropertyListImmutable = 0,
    kCFPropertyListMutableContainers = 1 << 0,
    kCFPropertyListMutableContainersAndLeaves = 1 << 1,
};
extern
CFPropertyListRef CFPropertyListCreateFromXMLData(CFAllocatorRef allocator, CFDataRef xmlData, CFOptionFlags mutabilityOption, CFStringRef *errorString) __attribute__((availability(macos,introduced=10.0,deprecated=10.10,message="Use CFPropertyListCreateWithData instead."))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,message="Use CFPropertyListCreateWithData instead."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use CFPropertyListCreateWithData instead."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use CFPropertyListCreateWithData instead.")));
extern
CFDataRef CFPropertyListCreateXMLData(CFAllocatorRef allocator, CFPropertyListRef propertyList) __attribute__((availability(macos,introduced=10.0,deprecated=10.10,message="Use CFPropertyListCreateData instead."))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,message="Use CFPropertyListCreateData instead."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use CFPropertyListCreateData instead."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use CFPropertyListCreateData instead.")));
extern
CFPropertyListRef CFPropertyListCreateDeepCopy(CFAllocatorRef allocator, CFPropertyListRef propertyList, CFOptionFlags mutabilityOption);

typedef CFIndex CFPropertyListFormat; enum {
    kCFPropertyListOpenStepFormat = 1,
    kCFPropertyListXMLFormat_v1_0 = 100,
    kCFPropertyListBinaryFormat_v1_0 = 200
};






extern
Boolean CFPropertyListIsValid(CFPropertyListRef plist, CFPropertyListFormat format);
extern
CFIndex CFPropertyListWriteToStream(CFPropertyListRef propertyList, CFWriteStreamRef stream, CFPropertyListFormat format, CFStringRef *errorString) __attribute__((availability(macos,introduced=10.2,deprecated=10.10,message="Use CFPropertyListWrite instead."))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,message="Use CFPropertyListWrite instead."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use CFPropertyListWrite instead."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use CFPropertyListWrite instead.")));
extern
CFPropertyListRef CFPropertyListCreateFromStream(CFAllocatorRef allocator, CFReadStreamRef stream, CFIndex streamLength, CFOptionFlags mutabilityOption, CFPropertyListFormat *format, CFStringRef *errorString) __attribute__((availability(macos,introduced=10.2,deprecated=10.10,message="Use CFPropertyListCreateWithStream instead."))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,message="Use CFPropertyListCreateWithStream instead."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use CFPropertyListCreateWithStream instead."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use CFPropertyListCreateWithStream instead.")));





enum {
    kCFPropertyListReadCorruptError = 3840,
    kCFPropertyListReadUnknownVersionError = 3841,
    kCFPropertyListReadStreamError = 3842,
    kCFPropertyListWriteStreamError = 3851,
} __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern
CFPropertyListRef CFPropertyListCreateWithData(CFAllocatorRef allocator, CFDataRef data, CFOptionFlags options, CFPropertyListFormat *format, CFErrorRef *error) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern
CFPropertyListRef CFPropertyListCreateWithStream(CFAllocatorRef allocator, CFReadStreamRef stream, CFIndex streamLength, CFOptionFlags options, CFPropertyListFormat *format, CFErrorRef *error) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern
CFIndex CFPropertyListWrite(CFPropertyListRef propertyList, CFWriteStreamRef stream, CFPropertyListFormat format, CFOptionFlags options, CFErrorRef *error) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern
CFDataRef CFPropertyListCreateData(CFAllocatorRef allocator, CFPropertyListRef propertyList, CFPropertyListFormat format, CFOptionFlags options, CFErrorRef *error) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



}
extern "C" {
typedef const void * (*CFSetRetainCallBack)(CFAllocatorRef allocator, const void *value);







typedef void (*CFSetReleaseCallBack)(CFAllocatorRef allocator, const void *value);







typedef CFStringRef (*CFSetCopyDescriptionCallBack)(const void *value);
typedef Boolean (*CFSetEqualCallBack)(const void *value1, const void *value2);







typedef CFHashCode (*CFSetHashCallBack)(const void *value);
typedef struct {
    CFIndex version;
    CFSetRetainCallBack retain;
    CFSetReleaseCallBack release;
    CFSetCopyDescriptionCallBack copyDescription;
    CFSetEqualCallBack equal;
    CFSetHashCallBack hash;
} CFSetCallBacks;






extern
const CFSetCallBacks kCFTypeSetCallBacks;







extern
const CFSetCallBacks kCFCopyStringSetCallBacks;
typedef void (*CFSetApplierFunction)(const void *value, void *context);





typedef const struct __attribute__((objc_bridge(NSSet))) __CFSet * CFSetRef;





typedef struct __attribute__((objc_bridge_mutable(NSMutableSet))) __CFSet * CFMutableSetRef;





extern
CFTypeID CFSetGetTypeID(void);
extern
CFSetRef CFSetCreate(CFAllocatorRef allocator, const void **values, CFIndex numValues, const CFSetCallBacks *callBacks);
extern
CFSetRef CFSetCreateCopy(CFAllocatorRef allocator, CFSetRef theSet);
extern
CFMutableSetRef CFSetCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFSetCallBacks *callBacks);
extern
CFMutableSetRef CFSetCreateMutableCopy(CFAllocatorRef allocator, CFIndex capacity, CFSetRef theSet);
extern
CFIndex CFSetGetCount(CFSetRef theSet);
extern
CFIndex CFSetGetCountOfValue(CFSetRef theSet, const void *value);
extern
Boolean CFSetContainsValue(CFSetRef theSet, const void *value);
extern
const void *CFSetGetValue(CFSetRef theSet, const void *value);
extern
Boolean CFSetGetValueIfPresent(CFSetRef theSet, const void *candidate, const void **value);
extern
void CFSetGetValues(CFSetRef theSet, const void **values);
extern
void CFSetApplyFunction(CFSetRef theSet, CFSetApplierFunction __attribute__((noescape)) applier, void *context);
extern
void CFSetAddValue(CFMutableSetRef theSet, const void *value);
extern
void CFSetReplaceValue(CFMutableSetRef theSet, const void *value);
extern
void CFSetSetValue(CFMutableSetRef theSet, const void *value);
extern
void CFSetRemoveValue(CFMutableSetRef theSet, const void *value);
extern
void CFSetRemoveAllValues(CFMutableSetRef theSet);

}

extern "C" {

typedef CFIndex CFStringEncodings; enum {

    kCFStringEncodingMacJapanese = 1,
    kCFStringEncodingMacChineseTrad = 2,
    kCFStringEncodingMacKorean = 3,
    kCFStringEncodingMacArabic = 4,
    kCFStringEncodingMacHebrew = 5,
    kCFStringEncodingMacGreek = 6,
    kCFStringEncodingMacCyrillic = 7,
    kCFStringEncodingMacDevanagari = 9,
    kCFStringEncodingMacGurmukhi = 10,
    kCFStringEncodingMacGujarati = 11,
    kCFStringEncodingMacOriya = 12,
    kCFStringEncodingMacBengali = 13,
    kCFStringEncodingMacTamil = 14,
    kCFStringEncodingMacTelugu = 15,
    kCFStringEncodingMacKannada = 16,
    kCFStringEncodingMacMalayalam = 17,
    kCFStringEncodingMacSinhalese = 18,
    kCFStringEncodingMacBurmese = 19,
    kCFStringEncodingMacKhmer = 20,
    kCFStringEncodingMacThai = 21,
    kCFStringEncodingMacLaotian = 22,
    kCFStringEncodingMacGeorgian = 23,
    kCFStringEncodingMacArmenian = 24,
    kCFStringEncodingMacChineseSimp = 25,
    kCFStringEncodingMacTibetan = 26,
    kCFStringEncodingMacMongolian = 27,
    kCFStringEncodingMacEthiopic = 28,
    kCFStringEncodingMacCentralEurRoman = 29,
    kCFStringEncodingMacVietnamese = 30,
    kCFStringEncodingMacExtArabic = 31,

    kCFStringEncodingMacSymbol = 33,
    kCFStringEncodingMacDingbats = 34,
    kCFStringEncodingMacTurkish = 35,
    kCFStringEncodingMacCroatian = 36,
    kCFStringEncodingMacIcelandic = 37,
    kCFStringEncodingMacRomanian = 38,
    kCFStringEncodingMacCeltic = 39,
    kCFStringEncodingMacGaelic = 40,

    kCFStringEncodingMacFarsi = 0x8C,

    kCFStringEncodingMacUkrainian = 0x98,

    kCFStringEncodingMacInuit = 0xEC,
    kCFStringEncodingMacVT100 = 0xFC,

    kCFStringEncodingMacHFS = 0xFF,






    kCFStringEncodingISOLatin2 = 0x0202,
    kCFStringEncodingISOLatin3 = 0x0203,
    kCFStringEncodingISOLatin4 = 0x0204,
    kCFStringEncodingISOLatinCyrillic = 0x0205,
    kCFStringEncodingISOLatinArabic = 0x0206,
    kCFStringEncodingISOLatinGreek = 0x0207,
    kCFStringEncodingISOLatinHebrew = 0x0208,
    kCFStringEncodingISOLatin5 = 0x0209,
    kCFStringEncodingISOLatin6 = 0x020A,
    kCFStringEncodingISOLatinThai = 0x020B,
    kCFStringEncodingISOLatin7 = 0x020D,
    kCFStringEncodingISOLatin8 = 0x020E,
    kCFStringEncodingISOLatin9 = 0x020F,
    kCFStringEncodingISOLatin10 = 0x0210,


    kCFStringEncodingDOSLatinUS = 0x0400,
    kCFStringEncodingDOSGreek = 0x0405,
    kCFStringEncodingDOSBalticRim = 0x0406,
    kCFStringEncodingDOSLatin1 = 0x0410,
    kCFStringEncodingDOSGreek1 = 0x0411,
    kCFStringEncodingDOSLatin2 = 0x0412,
    kCFStringEncodingDOSCyrillic = 0x0413,
    kCFStringEncodingDOSTurkish = 0x0414,
    kCFStringEncodingDOSPortuguese = 0x0415,
    kCFStringEncodingDOSIcelandic = 0x0416,
    kCFStringEncodingDOSHebrew = 0x0417,
    kCFStringEncodingDOSCanadianFrench = 0x0418,
    kCFStringEncodingDOSArabic = 0x0419,
    kCFStringEncodingDOSNordic = 0x041A,
    kCFStringEncodingDOSRussian = 0x041B,
    kCFStringEncodingDOSGreek2 = 0x041C,
    kCFStringEncodingDOSThai = 0x041D,
    kCFStringEncodingDOSJapanese = 0x0420,
    kCFStringEncodingDOSChineseSimplif = 0x0421,
    kCFStringEncodingDOSKorean = 0x0422,
    kCFStringEncodingDOSChineseTrad = 0x0423,

    kCFStringEncodingWindowsLatin2 = 0x0501,
    kCFStringEncodingWindowsCyrillic = 0x0502,
    kCFStringEncodingWindowsGreek = 0x0503,
    kCFStringEncodingWindowsLatin5 = 0x0504,
    kCFStringEncodingWindowsHebrew = 0x0505,
    kCFStringEncodingWindowsArabic = 0x0506,
    kCFStringEncodingWindowsBalticRim = 0x0507,
    kCFStringEncodingWindowsVietnamese = 0x0508,
    kCFStringEncodingWindowsKoreanJohab = 0x0510,



    kCFStringEncodingANSEL = 0x0601,
    kCFStringEncodingJIS_X0201_76 = 0x0620,
    kCFStringEncodingJIS_X0208_83 = 0x0621,
    kCFStringEncodingJIS_X0208_90 = 0x0622,
    kCFStringEncodingJIS_X0212_90 = 0x0623,
    kCFStringEncodingJIS_C6226_78 = 0x0624,
    kCFStringEncodingShiftJIS_X0213 __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 0x0628,
    kCFStringEncodingShiftJIS_X0213_MenKuTen = 0x0629,
    kCFStringEncodingGB_2312_80 = 0x0630,
    kCFStringEncodingGBK_95 = 0x0631,
    kCFStringEncodingGB_18030_2000 = 0x0632,
    kCFStringEncodingKSC_5601_87 = 0x0640,
    kCFStringEncodingKSC_5601_92_Johab = 0x0641,
    kCFStringEncodingCNS_11643_92_P1 = 0x0651,
    kCFStringEncodingCNS_11643_92_P2 = 0x0652,
    kCFStringEncodingCNS_11643_92_P3 = 0x0653,


    kCFStringEncodingISO_2022_JP = 0x0820,
    kCFStringEncodingISO_2022_JP_2 = 0x0821,
    kCFStringEncodingISO_2022_JP_1 = 0x0822,
    kCFStringEncodingISO_2022_JP_3 = 0x0823,
    kCFStringEncodingISO_2022_CN = 0x0830,
    kCFStringEncodingISO_2022_CN_EXT = 0x0831,
    kCFStringEncodingISO_2022_KR = 0x0840,


    kCFStringEncodingEUC_JP = 0x0920,
    kCFStringEncodingEUC_CN = 0x0930,
    kCFStringEncodingEUC_TW = 0x0931,
    kCFStringEncodingEUC_KR = 0x0940,


    kCFStringEncodingShiftJIS = 0x0A01,
    kCFStringEncodingKOI8_R = 0x0A02,
    kCFStringEncodingBig5 = 0x0A03,
    kCFStringEncodingMacRomanLatin1 = 0x0A04,
    kCFStringEncodingHZ_GB_2312 = 0x0A05,
    kCFStringEncodingBig5_HKSCS_1999 = 0x0A06,
    kCFStringEncodingVISCII = 0x0A07,
    kCFStringEncodingKOI8_U = 0x0A08,
    kCFStringEncodingBig5_E = 0x0A09,



    kCFStringEncodingNextStepJapanese = 0x0B02,


    kCFStringEncodingEBCDIC_US = 0x0C01,
    kCFStringEncodingEBCDIC_CP037 = 0x0C02,

    kCFStringEncodingUTF7 __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 0x04000100,
    kCFStringEncodingUTF7_IMAP __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 0x0A10,


    kCFStringEncodingShiftJIS_X0213_00 = 0x0628
};

}

extern "C" {
typedef const void * (*CFTreeRetainCallBack)(const void *info);







typedef void (*CFTreeReleaseCallBack)(const void *info);
typedef CFStringRef (*CFTreeCopyDescriptionCallBack)(const void *info);
typedef struct {
    CFIndex version;
    void * info;
    CFTreeRetainCallBack retain;
    CFTreeReleaseCallBack release;
    CFTreeCopyDescriptionCallBack copyDescription;
} CFTreeContext;
typedef void (*CFTreeApplierFunction)(const void *value, void *context);





typedef struct __attribute__((objc_bridge_mutable(id))) __CFTree * CFTreeRef;





extern
CFTypeID CFTreeGetTypeID(void);
extern
CFTreeRef CFTreeCreate(CFAllocatorRef allocator, const CFTreeContext *context);
extern
CFTreeRef CFTreeGetParent(CFTreeRef tree);
extern
CFTreeRef CFTreeGetNextSibling(CFTreeRef tree);
extern
CFTreeRef CFTreeGetFirstChild(CFTreeRef tree);
extern
void CFTreeGetContext(CFTreeRef tree, CFTreeContext *context);
extern
CFIndex CFTreeGetChildCount(CFTreeRef tree);
extern
CFTreeRef CFTreeGetChildAtIndex(CFTreeRef tree, CFIndex idx);
extern
void CFTreeGetChildren(CFTreeRef tree, CFTreeRef *children);
extern
void CFTreeApplyFunctionToChildren(CFTreeRef tree, CFTreeApplierFunction __attribute__((noescape)) applier, void *context);
extern
CFTreeRef CFTreeFindRoot(CFTreeRef tree);
extern
void CFTreeSetContext(CFTreeRef tree, const CFTreeContext *context);
extern
void CFTreePrependChild(CFTreeRef tree, CFTreeRef newChild);
extern
void CFTreeAppendChild(CFTreeRef tree, CFTreeRef newChild);
extern
void CFTreeInsertSibling(CFTreeRef tree, CFTreeRef newSibling);







extern
void CFTreeRemove(CFTreeRef tree);







extern
void CFTreeRemoveAllChildren(CFTreeRef tree);
extern
void CFTreeSortChildren(CFTreeRef tree, CFComparatorFunction comparator, void *context);

}

extern "C" {
extern
Boolean CFURLCreateDataAndPropertiesFromResource(CFAllocatorRef alloc, CFURLRef url, CFDataRef *resourceData, CFDictionaryRef *properties, CFArrayRef desiredProperties, SInt32 *errorCode) __attribute__((availability(macos,introduced=10.0,deprecated=10.9,message="For resource data, use the CFReadStream API. For file resource properties, use CFURLCopyResourcePropertiesForKeys."))) __attribute__((availability(ios,introduced=2.0,deprecated=7.0,message="For resource data, use the CFReadStream API. For file resource properties, use CFURLCopyResourcePropertiesForKeys."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="For resource data, use the CFReadStream API. For file resource properties, use CFURLCopyResourcePropertiesForKeys."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="For resource data, use the CFReadStream API. For file resource properties, use CFURLCopyResourcePropertiesForKeys.")));
extern
Boolean CFURLWriteDataAndPropertiesToResource(CFURLRef url, CFDataRef dataToWrite, CFDictionaryRef propertiesToWrite, SInt32 *errorCode) __attribute__((availability(macos,introduced=10.0,deprecated=10.9,message="For resource data, use the CFWriteStream API. For file resource properties, use CFURLSetResourcePropertiesForKeys."))) __attribute__((availability(ios,introduced=2.0,deprecated=7.0,message="For resource data, use the CFWriteStream API. For file resource properties, use CFURLSetResourcePropertiesForKeys."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="For resource data, use the CFWriteStream API. For file resource properties, use CFURLSetResourcePropertiesForKeys."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="For resource data, use the CFWriteStream API. For file resource properties, use CFURLSetResourcePropertiesForKeys.")));





extern
Boolean CFURLDestroyResource(CFURLRef url, SInt32 *errorCode) __attribute__((availability(macos,introduced=10.0,deprecated=10.9,message="Use CFURLGetFileSystemRepresentation and removefile(3) instead."))) __attribute__((availability(ios,introduced=2.0,deprecated=7.0,message="Use CFURLGetFileSystemRepresentation and removefile(3) instead."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use CFURLGetFileSystemRepresentation and removefile(3) instead."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use CFURLGetFileSystemRepresentation and removefile(3) instead.")));





extern
CFTypeRef CFURLCreatePropertyFromResource(CFAllocatorRef alloc, CFURLRef url, CFStringRef property, SInt32 *errorCode) __attribute__((availability(macos,introduced=10.0,deprecated=10.9,message="For file resource properties, use CFURLCopyResourcePropertyForKey."))) __attribute__((availability(ios,introduced=2.0,deprecated=7.0,message="For file resource properties, use CFURLCopyResourcePropertyForKey."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="For file resource properties, use CFURLCopyResourcePropertyForKey."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="For file resource properties, use CFURLCopyResourcePropertyForKey.")));



typedef CFIndex CFURLError; enum {
    kCFURLUnknownError = -10L,
    kCFURLUnknownSchemeError = -11L,
    kCFURLResourceNotFoundError = -12L,
    kCFURLResourceAccessViolationError = -13L,
    kCFURLRemoteHostUnavailableError = -14L,
    kCFURLImproperArgumentsError = -15L,
    kCFURLUnknownPropertyKeyError = -16L,
    kCFURLPropertyKeyUnavailableError = -17L,
    kCFURLTimeoutError = -18L
} __attribute__((availability(macos,introduced=10.0,deprecated=10.9,message="Use CFError codes instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=7.0,message="Use CFError codes instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use CFError codes instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use CFError codes instead")));



extern
const CFStringRef kCFURLFileExists __attribute__((availability(macos,introduced=10.0,deprecated=10.9,message="Use CFURLResourceIsReachable instead."))) __attribute__((availability(ios,introduced=2.0,deprecated=7.0,message="Use CFURLResourceIsReachable instead."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use CFURLResourceIsReachable instead."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use CFURLResourceIsReachable instead.")));
extern
const CFStringRef kCFURLFileDirectoryContents __attribute__((availability(macos,introduced=10.0,deprecated=10.9,message="Use the CFURLEnumerator API instead."))) __attribute__((availability(ios,introduced=2.0,deprecated=7.0,message="Use the CFURLEnumerator API instead."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use the CFURLEnumerator API instead."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use the CFURLEnumerator API instead.")));
extern
const CFStringRef kCFURLFileLength __attribute__((availability(macos,introduced=10.0,deprecated=10.9,message="Use CFURLCopyResourcePropertyForKey with kCFURLFileSizeKey instead."))) __attribute__((availability(ios,introduced=2.0,deprecated=7.0,message="Use CFURLCopyResourcePropertyForKey with kCFURLFileSizeKey instead."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use CFURLCopyResourcePropertyForKey with kCFURLFileSizeKey instead."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use CFURLCopyResourcePropertyForKey with kCFURLFileSizeKey instead.")));
extern
const CFStringRef kCFURLFileLastModificationTime __attribute__((availability(macos,introduced=10.0,deprecated=10.9,message="Use CFURLCopyResourcePropertyForKey with kCFURLContentModificationDateKey instead."))) __attribute__((availability(ios,introduced=2.0,deprecated=7.0,message="Use CFURLCopyResourcePropertyForKey with kCFURLContentModificationDateKey instead."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use CFURLCopyResourcePropertyForKey with kCFURLContentModificationDateKey instead."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use CFURLCopyResourcePropertyForKey with kCFURLContentModificationDateKey instead.")));
extern
const CFStringRef kCFURLFilePOSIXMode __attribute__((availability(macos,introduced=10.0,deprecated=10.9,message="Use CFURLCopyResourcePropertyForKey with kCFURLFileSecurityKey and then the CFFileSecurity API instead."))) __attribute__((availability(ios,introduced=2.0,deprecated=7.0,message="Use CFURLCopyResourcePropertyForKey with kCFURLFileSecurityKey and then the CFFileSecurity API instead."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use CFURLCopyResourcePropertyForKey with kCFURLFileSecurityKey and then the CFFileSecurity API instead."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use CFURLCopyResourcePropertyForKey with kCFURLFileSecurityKey and then the CFFileSecurity API instead.")));
extern
const CFStringRef kCFURLFileOwnerID __attribute__((availability(macos,introduced=10.0,deprecated=10.9,message="Use CFURLCopyResourcePropertyForKey with kCFURLFileSecurityKey and then the CFFileSecurity API instead."))) __attribute__((availability(ios,introduced=2.0,deprecated=7.0,message="Use CFURLCopyResourcePropertyForKey with kCFURLFileSecurityKey and then the CFFileSecurity API instead."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use CFURLCopyResourcePropertyForKey with kCFURLFileSecurityKey and then the CFFileSecurity API instead."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use CFURLCopyResourcePropertyForKey with kCFURLFileSecurityKey and then the CFFileSecurity API instead.")));
extern
const CFStringRef kCFURLHTTPStatusCode __attribute__((availability(macos,introduced=10.0,deprecated=10.9,message="Use NSHTTPURLResponse methods instead."))) __attribute__((availability(ios,introduced=2.0,deprecated=7.0,message="Use NSHTTPURLResponse methods instead."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use NSHTTPURLResponse methods instead."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use NSHTTPURLResponse methods instead.")));
extern
const CFStringRef kCFURLHTTPStatusLine __attribute__((availability(macos,introduced=10.0,deprecated=10.9,message="Use NSHTTPURLResponse methods instead."))) __attribute__((availability(ios,introduced=2.0,deprecated=7.0,message="Use NSHTTPURLResponse methods instead."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use NSHTTPURLResponse methods instead."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use NSHTTPURLResponse methods instead.")));
}
extern "C" {

typedef const struct __attribute__((objc_bridge(id))) __CFUUID * CFUUIDRef;

typedef struct {
    UInt8 byte0;
    UInt8 byte1;
    UInt8 byte2;
    UInt8 byte3;
    UInt8 byte4;
    UInt8 byte5;
    UInt8 byte6;
    UInt8 byte7;
    UInt8 byte8;
    UInt8 byte9;
    UInt8 byte10;
    UInt8 byte11;
    UInt8 byte12;
    UInt8 byte13;
    UInt8 byte14;
    UInt8 byte15;
} CFUUIDBytes;






extern
CFTypeID CFUUIDGetTypeID(void);

extern
CFUUIDRef CFUUIDCreate(CFAllocatorRef alloc);


extern
CFUUIDRef CFUUIDCreateWithBytes(CFAllocatorRef alloc, UInt8 byte0, UInt8 byte1, UInt8 byte2, UInt8 byte3, UInt8 byte4, UInt8 byte5, UInt8 byte6, UInt8 byte7, UInt8 byte8, UInt8 byte9, UInt8 byte10, UInt8 byte11, UInt8 byte12, UInt8 byte13, UInt8 byte14, UInt8 byte15);


extern
CFUUIDRef CFUUIDCreateFromString(CFAllocatorRef alloc, CFStringRef uuidStr);


extern
CFStringRef CFUUIDCreateString(CFAllocatorRef alloc, CFUUIDRef uuid);


extern
CFUUIDRef CFUUIDGetConstantUUIDWithBytes(CFAllocatorRef alloc, UInt8 byte0, UInt8 byte1, UInt8 byte2, UInt8 byte3, UInt8 byte4, UInt8 byte5, UInt8 byte6, UInt8 byte7, UInt8 byte8, UInt8 byte9, UInt8 byte10, UInt8 byte11, UInt8 byte12, UInt8 byte13, UInt8 byte14, UInt8 byte15);


extern
CFUUIDBytes CFUUIDGetUUIDBytes(CFUUIDRef uuid);

extern
CFUUIDRef CFUUIDCreateFromUUIDBytes(CFAllocatorRef alloc, CFUUIDBytes bytes);

}
extern "C" {

extern
CFURLRef CFCopyHomeDirectoryURL(void) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));

}
extern "C" {

typedef struct __attribute__((objc_bridge(id))) __CFBundle *CFBundleRef;
typedef struct __attribute__((objc_bridge(id))) __CFBundle *CFPlugInRef;


extern
const CFStringRef kCFBundleInfoDictionaryVersionKey;

extern
const CFStringRef kCFBundleExecutableKey;

extern
const CFStringRef kCFBundleIdentifierKey;

extern
const CFStringRef kCFBundleVersionKey;



extern
const CFStringRef kCFBundleDevelopmentRegionKey;

extern
const CFStringRef kCFBundleNameKey;

extern
const CFStringRef kCFBundleLocalizationsKey;




extern
CFBundleRef CFBundleGetMainBundle(void);

extern
CFBundleRef CFBundleGetBundleWithIdentifier(CFStringRef bundleID);







extern
CFArrayRef CFBundleGetAllBundles(void);





extern
CFTypeID CFBundleGetTypeID(void);

extern
CFBundleRef CFBundleCreate(CFAllocatorRef allocator, CFURLRef bundleURL);


extern
CFArrayRef CFBundleCreateBundlesFromDirectory(CFAllocatorRef allocator, CFURLRef directoryURL, CFStringRef bundleType);





extern
CFURLRef CFBundleCopyBundleURL(CFBundleRef bundle);

extern
CFTypeRef CFBundleGetValueForInfoDictionaryKey(CFBundleRef bundle, CFStringRef key);



extern
CFDictionaryRef CFBundleGetInfoDictionary(CFBundleRef bundle);



extern
CFDictionaryRef CFBundleGetLocalInfoDictionary(CFBundleRef bundle);


extern
void CFBundleGetPackageInfo(CFBundleRef bundle, UInt32 *packageType, UInt32 *packageCreator);

extern
CFStringRef CFBundleGetIdentifier(CFBundleRef bundle);

extern
UInt32 CFBundleGetVersionNumber(CFBundleRef bundle);

extern
CFStringRef CFBundleGetDevelopmentRegion(CFBundleRef bundle);

extern
CFURLRef CFBundleCopySupportFilesDirectoryURL(CFBundleRef bundle);

extern
CFURLRef CFBundleCopyResourcesDirectoryURL(CFBundleRef bundle);

extern
CFURLRef CFBundleCopyPrivateFrameworksURL(CFBundleRef bundle);

extern
CFURLRef CFBundleCopySharedFrameworksURL(CFBundleRef bundle);

extern
CFURLRef CFBundleCopySharedSupportURL(CFBundleRef bundle);

extern
CFURLRef CFBundleCopyBuiltInPlugInsURL(CFBundleRef bundle);






extern
CFDictionaryRef CFBundleCopyInfoDictionaryInDirectory(CFURLRef bundleURL);

extern
Boolean CFBundleGetPackageInfoInDirectory(CFURLRef url, UInt32 *packageType, UInt32 *packageCreator);



extern
CFURLRef CFBundleCopyResourceURL(CFBundleRef bundle, CFStringRef resourceName, CFStringRef resourceType, CFStringRef subDirName);

extern
CFArrayRef CFBundleCopyResourceURLsOfType(CFBundleRef bundle, CFStringRef resourceType, CFStringRef subDirName);

extern
CFStringRef CFBundleCopyLocalizedString(CFBundleRef bundle, CFStringRef key, CFStringRef value, CFStringRef tableName) __attribute__((format_arg(2)));
extern
CFURLRef CFBundleCopyResourceURLInDirectory(CFURLRef bundleURL, CFStringRef resourceName, CFStringRef resourceType, CFStringRef subDirName);

extern
CFArrayRef CFBundleCopyResourceURLsOfTypeInDirectory(CFURLRef bundleURL, CFStringRef resourceType, CFStringRef subDirName);






extern
CFArrayRef CFBundleCopyBundleLocalizations(CFBundleRef bundle);


extern
CFArrayRef CFBundleCopyPreferredLocalizationsFromArray(CFArrayRef locArray);






extern
CFArrayRef CFBundleCopyLocalizationsForPreferences(CFArrayRef locArray, CFArrayRef prefArray);
extern
CFURLRef CFBundleCopyResourceURLForLocalization(CFBundleRef bundle, CFStringRef resourceName, CFStringRef resourceType, CFStringRef subDirName, CFStringRef localizationName);

extern
CFArrayRef CFBundleCopyResourceURLsOfTypeForLocalization(CFBundleRef bundle, CFStringRef resourceType, CFStringRef subDirName, CFStringRef localizationName);
extern
CFDictionaryRef CFBundleCopyInfoDictionaryForURL(CFURLRef url);




extern
CFArrayRef CFBundleCopyLocalizationsForURL(CFURLRef url);





extern
CFArrayRef CFBundleCopyExecutableArchitecturesForURL(CFURLRef url) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
CFURLRef CFBundleCopyExecutableURL(CFBundleRef bundle);

enum {
    kCFBundleExecutableArchitectureI386 = 0x00000007,
    kCFBundleExecutableArchitecturePPC = 0x00000012,
    kCFBundleExecutableArchitectureX86_64 = 0x01000007,
    kCFBundleExecutableArchitecturePPC64 = 0x01000012
} __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern
CFArrayRef CFBundleCopyExecutableArchitectures(CFBundleRef bundle) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





extern
Boolean CFBundlePreflightExecutable(CFBundleRef bundle, CFErrorRef *error) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






extern
Boolean CFBundleLoadExecutableAndReturnError(CFBundleRef bundle, CFErrorRef *error) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





extern
Boolean CFBundleLoadExecutable(CFBundleRef bundle);

extern
Boolean CFBundleIsExecutableLoaded(CFBundleRef bundle);

extern
void CFBundleUnloadExecutable(CFBundleRef bundle);

extern
void *CFBundleGetFunctionPointerForName(CFBundleRef bundle, CFStringRef functionName);

extern
void CFBundleGetFunctionPointersForNames(CFBundleRef bundle, CFArrayRef functionNames, void *ftbl[]);

extern
void *CFBundleGetDataPointerForName(CFBundleRef bundle, CFStringRef symbolName);

extern
void CFBundleGetDataPointersForNames(CFBundleRef bundle, CFArrayRef symbolNames, void *stbl[]);

extern
CFURLRef CFBundleCopyAuxiliaryExecutableURL(CFBundleRef bundle, CFStringRef executableName);
extern
CFPlugInRef CFBundleGetPlugIn(CFBundleRef bundle);




typedef int CFBundleRefNum;




extern
CFBundleRefNum CFBundleOpenBundleResourceMap(CFBundleRef bundle);






extern
SInt32 CFBundleOpenBundleResourceFiles(CFBundleRef bundle, CFBundleRefNum *refNum, CFBundleRefNum *localizedRefNum);



extern
void CFBundleCloseBundleResourceMap(CFBundleRef bundle, CFBundleRefNum refNum);

}


extern "C" {

typedef struct __attribute__((objc_bridge_mutable(NSMessagePort))) __CFMessagePort * CFMessagePortRef;

enum {
    kCFMessagePortSuccess = 0,
    kCFMessagePortSendTimeout = -1,
    kCFMessagePortReceiveTimeout = -2,
    kCFMessagePortIsInvalid = -3,
    kCFMessagePortTransportError = -4,
    kCFMessagePortBecameInvalidError = -5
};

typedef struct {
    CFIndex version;
    void * info;
    const void *(*retain)(const void *info);
    void (*release)(const void *info);
    CFStringRef (*copyDescription)(const void *info);
} CFMessagePortContext;

typedef CFDataRef (*CFMessagePortCallBack)(CFMessagePortRef local, SInt32 msgid, CFDataRef data, void *info);

typedef void (*CFMessagePortInvalidationCallBack)(CFMessagePortRef ms, void *info);

extern CFTypeID CFMessagePortGetTypeID(void);

extern CFMessagePortRef CFMessagePortCreateLocal(CFAllocatorRef allocator, CFStringRef name, CFMessagePortCallBack callout, CFMessagePortContext *context, Boolean *shouldFreeInfo);
extern CFMessagePortRef CFMessagePortCreateRemote(CFAllocatorRef allocator, CFStringRef name);

extern Boolean CFMessagePortIsRemote(CFMessagePortRef ms);
extern CFStringRef CFMessagePortGetName(CFMessagePortRef ms);
extern Boolean CFMessagePortSetName(CFMessagePortRef ms, CFStringRef newName);
extern void CFMessagePortGetContext(CFMessagePortRef ms, CFMessagePortContext *context);
extern void CFMessagePortInvalidate(CFMessagePortRef ms);
extern Boolean CFMessagePortIsValid(CFMessagePortRef ms);
extern CFMessagePortInvalidationCallBack CFMessagePortGetInvalidationCallBack(CFMessagePortRef ms);
extern void CFMessagePortSetInvalidationCallBack(CFMessagePortRef ms, CFMessagePortInvalidationCallBack callout);


extern SInt32 CFMessagePortSendRequest(CFMessagePortRef remote, SInt32 msgid, CFDataRef data, CFTimeInterval sendTimeout, CFTimeInterval rcvTimeout, CFStringRef replyMode, CFDataRef *returnData);

extern CFRunLoopSourceRef CFMessagePortCreateRunLoopSource(CFAllocatorRef allocator, CFMessagePortRef local, CFIndex order);

extern void CFMessagePortSetDispatchQueue(CFMessagePortRef ms, dispatch_queue_t queue) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

}
extern "C" {



extern const CFStringRef kCFPlugInDynamicRegistrationKey;
extern const CFStringRef kCFPlugInDynamicRegisterFunctionKey;
extern const CFStringRef kCFPlugInUnloadFunctionKey;
extern const CFStringRef kCFPlugInFactoriesKey;
extern const CFStringRef kCFPlugInTypesKey;




typedef void (*CFPlugInDynamicRegisterFunction)(CFPlugInRef plugIn);
typedef void (*CFPlugInUnloadFunction)(CFPlugInRef plugIn);
typedef void *(*CFPlugInFactoryFunction)(CFAllocatorRef allocator, CFUUIDRef typeUUID);



extern CFTypeID CFPlugInGetTypeID(void);

extern CFPlugInRef CFPlugInCreate(CFAllocatorRef allocator, CFURLRef plugInURL);


extern CFBundleRef CFPlugInGetBundle(CFPlugInRef plugIn);







extern void CFPlugInSetLoadOnDemand(CFPlugInRef plugIn, Boolean flag);

extern Boolean CFPlugInIsLoadOnDemand(CFPlugInRef plugIn);






extern CFArrayRef CFPlugInFindFactoriesForPlugInType(CFUUIDRef typeUUID) __attribute__((cf_returns_retained));



extern CFArrayRef CFPlugInFindFactoriesForPlugInTypeInPlugIn(CFUUIDRef typeUUID, CFPlugInRef plugIn) __attribute__((cf_returns_retained));


extern void *CFPlugInInstanceCreate(CFAllocatorRef allocator, CFUUIDRef factoryUUID, CFUUIDRef typeUUID);





extern Boolean CFPlugInRegisterFactoryFunction(CFUUIDRef factoryUUID, CFPlugInFactoryFunction func);

extern Boolean CFPlugInRegisterFactoryFunctionByName(CFUUIDRef factoryUUID, CFPlugInRef plugIn, CFStringRef functionName);

extern Boolean CFPlugInUnregisterFactory(CFUUIDRef factoryUUID);

extern Boolean CFPlugInRegisterPlugInType(CFUUIDRef factoryUUID, CFUUIDRef typeUUID);

extern Boolean CFPlugInUnregisterPlugInType(CFUUIDRef factoryUUID, CFUUIDRef typeUUID);





extern void CFPlugInAddInstanceForFactory(CFUUIDRef factoryID);

extern void CFPlugInRemoveInstanceForFactory(CFUUIDRef factoryID);




typedef struct __attribute__((objc_bridge(id))) __CFPlugInInstance *CFPlugInInstanceRef;

typedef Boolean (*CFPlugInInstanceGetInterfaceFunction)(CFPlugInInstanceRef instance, CFStringRef interfaceName, void **ftbl);
typedef void (*CFPlugInInstanceDeallocateInstanceDataFunction)(void *instanceData);

extern Boolean CFPlugInInstanceGetInterfaceFunctionTable(CFPlugInInstanceRef instance, CFStringRef interfaceName, void **ftbl);


extern CFStringRef CFPlugInInstanceGetFactoryName(CFPlugInInstanceRef instance) __attribute__((cf_returns_retained));

extern void *CFPlugInInstanceGetInstanceData(CFPlugInInstanceRef instance);

extern CFTypeID CFPlugInInstanceGetTypeID(void);

extern CFPlugInInstanceRef CFPlugInInstanceCreateWithInstanceDataSize(CFAllocatorRef allocator, CFIndex instanceDataSize, CFPlugInInstanceDeallocateInstanceDataFunction deallocateInstanceFunction, CFStringRef factoryName, CFPlugInInstanceGetInterfaceFunction getInterfaceFunction);

}



extern "C" {

typedef struct __attribute__((objc_bridge_mutable(NSMachPort))) __CFMachPort * CFMachPortRef;

typedef struct {
    CFIndex version;
    void * info;
    const void *(*retain)(const void *info);
    void (*release)(const void *info);
    CFStringRef (*copyDescription)(const void *info);
} CFMachPortContext;

typedef void (*CFMachPortCallBack)(CFMachPortRef port, void *msg, CFIndex size, void *info);
typedef void (*CFMachPortInvalidationCallBack)(CFMachPortRef port, void *info);

extern CFTypeID CFMachPortGetTypeID(void);

extern CFMachPortRef CFMachPortCreate(CFAllocatorRef allocator, CFMachPortCallBack callout, CFMachPortContext *context, Boolean *shouldFreeInfo);
extern CFMachPortRef CFMachPortCreateWithPort(CFAllocatorRef allocator, mach_port_t portNum, CFMachPortCallBack callout, CFMachPortContext *context, Boolean *shouldFreeInfo);

extern mach_port_t CFMachPortGetPort(CFMachPortRef port);
extern void CFMachPortGetContext(CFMachPortRef port, CFMachPortContext *context);
extern void CFMachPortInvalidate(CFMachPortRef port);
extern Boolean CFMachPortIsValid(CFMachPortRef port);
extern CFMachPortInvalidationCallBack CFMachPortGetInvalidationCallBack(CFMachPortRef port);
extern void CFMachPortSetInvalidationCallBack(CFMachPortRef port, CFMachPortInvalidationCallBack callout);

extern CFRunLoopSourceRef CFMachPortCreateRunLoopSource(CFAllocatorRef allocator, CFMachPortRef port, CFIndex order);

}


extern "C" {




typedef const struct __attribute__((objc_bridge(NSAttributedString))) __CFAttributedString *CFAttributedStringRef;
typedef struct __attribute__((objc_bridge_mutable(NSMutableAttributedString))) __CFAttributedString *CFMutableAttributedStringRef;




extern CFTypeID CFAttributedStringGetTypeID(void);
extern CFAttributedStringRef CFAttributedStringCreate(CFAllocatorRef alloc, CFStringRef str, CFDictionaryRef attributes);




extern CFAttributedStringRef CFAttributedStringCreateWithSubstring(CFAllocatorRef alloc, CFAttributedStringRef aStr, CFRange range);




extern CFAttributedStringRef CFAttributedStringCreateCopy(CFAllocatorRef alloc, CFAttributedStringRef aStr);




extern CFStringRef CFAttributedStringGetString(CFAttributedStringRef aStr);




extern CFIndex CFAttributedStringGetLength(CFAttributedStringRef aStr);






extern CFDictionaryRef CFAttributedStringGetAttributes(CFAttributedStringRef aStr, CFIndex loc, CFRange *effectiveRange);




extern CFTypeRef CFAttributedStringGetAttribute(CFAttributedStringRef aStr, CFIndex loc, CFStringRef attrName, CFRange *effectiveRange);




extern CFDictionaryRef CFAttributedStringGetAttributesAndLongestEffectiveRange(CFAttributedStringRef aStr, CFIndex loc, CFRange inRange, CFRange *longestEffectiveRange);




extern CFTypeRef CFAttributedStringGetAttributeAndLongestEffectiveRange(CFAttributedStringRef aStr, CFIndex loc, CFStringRef attrName, CFRange inRange, CFRange *longestEffectiveRange);
extern CFMutableAttributedStringRef CFAttributedStringCreateMutableCopy(CFAllocatorRef alloc, CFIndex maxLength, CFAttributedStringRef aStr);




extern CFMutableAttributedStringRef CFAttributedStringCreateMutable(CFAllocatorRef alloc, CFIndex maxLength);






extern void CFAttributedStringReplaceString(CFMutableAttributedStringRef aStr, CFRange range, CFStringRef replacement);






extern CFMutableStringRef CFAttributedStringGetMutableString(CFMutableAttributedStringRef aStr);




extern void CFAttributedStringSetAttributes(CFMutableAttributedStringRef aStr, CFRange range, CFDictionaryRef replacement, Boolean clearOtherAttributes);




extern void CFAttributedStringSetAttribute(CFMutableAttributedStringRef aStr, CFRange range, CFStringRef attrName, CFTypeRef value);




extern void CFAttributedStringRemoveAttribute(CFMutableAttributedStringRef aStr, CFRange range, CFStringRef attrName);




extern void CFAttributedStringReplaceAttributedString(CFMutableAttributedStringRef aStr, CFRange range, CFAttributedStringRef replacement);




extern void CFAttributedStringBeginEditing(CFMutableAttributedStringRef aStr);




extern void CFAttributedStringEndEditing(CFMutableAttributedStringRef aStr);


}

extern "C" {


typedef const struct __attribute__((objc_bridge_mutable(id))) __CFURLEnumerator *CFURLEnumeratorRef;


extern
CFTypeID CFURLEnumeratorGetTypeID( void ) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



typedef CFOptionFlags CFURLEnumeratorOptions; enum {
    kCFURLEnumeratorDefaultBehavior = 0,
    kCFURLEnumeratorDescendRecursively = 1UL << 0,
    kCFURLEnumeratorSkipInvisibles = 1UL << 1,
    kCFURLEnumeratorGenerateFileReferenceURLs = 1UL << 2,
    kCFURLEnumeratorSkipPackageContents = 1UL << 3,
    kCFURLEnumeratorIncludeDirectoriesPreOrder = 1UL << 4,
    kCFURLEnumeratorIncludeDirectoriesPostOrder = 1UL << 5,

};







extern
CFURLEnumeratorRef CFURLEnumeratorCreateForDirectoryURL( CFAllocatorRef alloc, CFURLRef directoryURL, CFURLEnumeratorOptions option, CFArrayRef propertyKeys ) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
CFURLEnumeratorRef CFURLEnumeratorCreateForMountedVolumes( CFAllocatorRef alloc, CFURLEnumeratorOptions option, CFArrayRef propertyKeys ) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



typedef CFIndex CFURLEnumeratorResult; enum {
    kCFURLEnumeratorSuccess = 1,
    kCFURLEnumeratorEnd = 2,
    kCFURLEnumeratorError = 3,
    kCFURLEnumeratorDirectoryPostOrderSuccess = 4,
};





extern
CFURLEnumeratorResult CFURLEnumeratorGetNextURL( CFURLEnumeratorRef enumerator, CFURLRef *url, CFErrorRef *error ) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
void CFURLEnumeratorSkipDescendents( CFURLEnumeratorRef enumerator ) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));




extern
CFIndex CFURLEnumeratorGetDescendentLevel( CFURLEnumeratorRef enumerator ) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






extern
Boolean CFURLEnumeratorGetSourceDidChange( CFURLEnumeratorRef enumerator ) __attribute__((availability(macos,introduced=10.6,deprecated=10.7,message="Use File System Events API instead"))) __attribute__((availability(ios,introduced=4.0,deprecated=5.0,message="Use File System Events API instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use File System Events API instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use File System Events API instead")));


}






typedef struct {

 unsigned char g_guid[16];
} guid_t;


#pragma pack(1)
typedef struct {
 u_int8_t sid_kind;
 u_int8_t sid_authcount;
 u_int8_t sid_authority[6];

 u_int32_t sid_authorities[16];
} ntsid_t;
#pragma pack()
struct kauth_identity_extlookup {
 u_int32_t el_seqno;
 u_int32_t el_result;





 u_int32_t el_flags;
 __darwin_pid_t el_info_pid;
 u_int64_t el_extend;
 u_int32_t el_info_reserved_1;

 uid_t el_uid;
 guid_t el_uguid;
 u_int32_t el_uguid_valid;
 ntsid_t el_usid;
 u_int32_t el_usid_valid;
 gid_t el_gid;
 guid_t el_gguid;
 u_int32_t el_gguid_valid;
 ntsid_t el_gsid;
 u_int32_t el_gsid_valid;
 u_int32_t el_member_valid;
  u_int32_t el_sup_grp_cnt;
  gid_t el_sup_groups[16];
};

struct kauth_cache_sizes {
 u_int32_t kcs_group_size;
 u_int32_t kcs_id_size;
};
typedef u_int32_t kauth_ace_rights_t;


struct kauth_ace {
 guid_t ace_applicable;
 u_int32_t ace_flags;
 kauth_ace_rights_t ace_rights;






};



typedef struct kauth_ace *kauth_ace_t;




struct kauth_acl {
 u_int32_t acl_entrycount;
 u_int32_t acl_flags;

 struct kauth_ace acl_ace[1];
};
typedef struct kauth_acl *kauth_acl_t;
struct kauth_filesec {
 u_int32_t fsec_magic;

 guid_t fsec_owner;
 guid_t fsec_group;

 struct kauth_acl fsec_acl;
};
typedef struct kauth_filesec *kauth_filesec_t;
typedef enum {
 ACL_READ_DATA = (1<<1),
 ACL_LIST_DIRECTORY = (1<<1),
 ACL_WRITE_DATA = (1<<2),
 ACL_ADD_FILE = (1<<2),
 ACL_EXECUTE = (1<<3),
 ACL_SEARCH = (1<<3),
 ACL_DELETE = (1<<4),
 ACL_APPEND_DATA = (1<<5),
 ACL_ADD_SUBDIRECTORY = (1<<5),
 ACL_DELETE_CHILD = (1<<6),
 ACL_READ_ATTRIBUTES = (1<<7),
 ACL_WRITE_ATTRIBUTES = (1<<8),
 ACL_READ_EXTATTRIBUTES = (1<<9),
 ACL_WRITE_EXTATTRIBUTES = (1<<10),
 ACL_READ_SECURITY = (1<<11),
 ACL_WRITE_SECURITY = (1<<12),
 ACL_CHANGE_OWNER = (1<<13),
 ACL_SYNCHRONIZE = (1<<20),
} acl_perm_t;


typedef enum {
 ACL_UNDEFINED_TAG = 0,
 ACL_EXTENDED_ALLOW = 1,
 ACL_EXTENDED_DENY = 2
} acl_tag_t;


typedef enum {
 ACL_TYPE_EXTENDED = 0x00000100,

 ACL_TYPE_ACCESS = 0x00000000,
 ACL_TYPE_DEFAULT = 0x00000001,

 ACL_TYPE_AFS = 0x00000002,
 ACL_TYPE_CODA = 0x00000003,
 ACL_TYPE_NTFS = 0x00000004,
 ACL_TYPE_NWFS = 0x00000005
} acl_type_t;






typedef enum {
 ACL_FIRST_ENTRY = 0,
 ACL_NEXT_ENTRY = -1,
 ACL_LAST_ENTRY = -2
} acl_entry_id_t;


typedef enum {
 ACL_FLAG_DEFER_INHERIT = (1 << 0),
 ACL_FLAG_NO_INHERIT = (1<<17),
 ACL_ENTRY_INHERITED = (1<<4),
 ACL_ENTRY_FILE_INHERIT = (1<<5),
 ACL_ENTRY_DIRECTORY_INHERIT = (1<<6),
 ACL_ENTRY_LIMIT_INHERIT = (1<<7),
 ACL_ENTRY_ONLY_INHERIT = (1<<8)
} acl_flag_t;



struct _acl;
struct _acl_entry;
struct _acl_permset;
struct _acl_flagset;

typedef struct _acl *acl_t;
typedef struct _acl_entry *acl_entry_t;
typedef struct _acl_permset *acl_permset_t;
typedef struct _acl_flagset *acl_flagset_t;

typedef u_int64_t acl_permset_mask_t;

extern "C" {

extern acl_t acl_dup(acl_t acl);
extern int acl_free(void *obj_p);
extern acl_t acl_init(int count);


extern int acl_copy_entry(acl_entry_t dest_d, acl_entry_t src_d);
extern int acl_create_entry(acl_t *acl_p, acl_entry_t *entry_p);
extern int acl_create_entry_np(acl_t *acl_p, acl_entry_t *entry_p, int entry_index);
extern int acl_delete_entry(acl_t acl, acl_entry_t entry_d);
extern int acl_get_entry(acl_t acl, int entry_id, acl_entry_t *entry_p);
extern int acl_valid(acl_t acl);
extern int acl_valid_fd_np(int fd, acl_type_t type, acl_t acl);
extern int acl_valid_file_np(const char *path, acl_type_t type, acl_t acl);
extern int acl_valid_link_np(const char *path, acl_type_t type, acl_t acl);


extern int acl_add_perm(acl_permset_t permset_d, acl_perm_t perm);
extern int acl_calc_mask(acl_t *acl_p);
extern int acl_clear_perms(acl_permset_t permset_d);
extern int acl_delete_perm(acl_permset_t permset_d, acl_perm_t perm);
extern int acl_get_perm_np(acl_permset_t permset_d, acl_perm_t perm);
extern int acl_get_permset(acl_entry_t entry_d, acl_permset_t *permset_p);
extern int acl_set_permset(acl_entry_t entry_d, acl_permset_t permset_d);


extern int acl_maximal_permset_mask_np(acl_permset_mask_t * mask_p) __attribute__((availability(ios,introduced=4.3)));
extern int acl_get_permset_mask_np(acl_entry_t entry_d, acl_permset_mask_t * mask_p) __attribute__((availability(ios,introduced=4.3)));
extern int acl_set_permset_mask_np(acl_entry_t entry_d, acl_permset_mask_t mask) __attribute__((availability(ios,introduced=4.3)));


extern int acl_add_flag_np(acl_flagset_t flagset_d, acl_flag_t flag);
extern int acl_clear_flags_np(acl_flagset_t flagset_d);
extern int acl_delete_flag_np(acl_flagset_t flagset_d, acl_flag_t flag);
extern int acl_get_flag_np(acl_flagset_t flagset_d, acl_flag_t flag);
extern int acl_get_flagset_np(void *obj_p, acl_flagset_t *flagset_p);
extern int acl_set_flagset_np(void *obj_p, acl_flagset_t flagset_d);


extern void *acl_get_qualifier(acl_entry_t entry_d);
extern int acl_get_tag_type(acl_entry_t entry_d, acl_tag_t *tag_type_p);
extern int acl_set_qualifier(acl_entry_t entry_d, const void *tag_qualifier_p);
extern int acl_set_tag_type(acl_entry_t entry_d, acl_tag_t tag_type);


extern int acl_delete_def_file(const char *path_p);
extern acl_t acl_get_fd(int fd);
extern acl_t acl_get_fd_np(int fd, acl_type_t type);
extern acl_t acl_get_file(const char *path_p, acl_type_t type);
extern acl_t acl_get_link_np(const char *path_p, acl_type_t type);
extern int acl_set_fd(int fd, acl_t acl);
extern int acl_set_fd_np(int fd, acl_t acl, acl_type_t acl_type);
extern int acl_set_file(const char *path_p, acl_type_t type, acl_t acl);
extern int acl_set_link_np(const char *path_p, acl_type_t type, acl_t acl);


extern ssize_t acl_copy_ext(void *buf_p, acl_t acl, ssize_t size);
extern ssize_t acl_copy_ext_native(void *buf_p, acl_t acl, ssize_t size);
extern acl_t acl_copy_int(const void *buf_p);
extern acl_t acl_copy_int_native(const void *buf_p);
extern acl_t acl_from_text(const char *buf_p);
extern ssize_t acl_size(acl_t acl);
extern char *acl_to_text(acl_t acl, ssize_t *len_p);
}




extern "C" {





typedef struct __attribute__((objc_bridge_mutable(NSFileSecurity))) __CFFileSecurity* CFFileSecurityRef;







extern
CFTypeID CFFileSecurityGetTypeID(void) __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
CFFileSecurityRef CFFileSecurityCreate(CFAllocatorRef allocator) __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
CFFileSecurityRef CFFileSecurityCreateCopy(CFAllocatorRef allocator, CFFileSecurityRef fileSec) __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
Boolean CFFileSecurityCopyOwnerUUID(CFFileSecurityRef fileSec, CFUUIDRef *ownerUUID) __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
Boolean CFFileSecuritySetOwnerUUID(CFFileSecurityRef fileSec, CFUUIDRef ownerUUID) __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
Boolean CFFileSecurityCopyGroupUUID(CFFileSecurityRef fileSec, CFUUIDRef *groupUUID) __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
Boolean CFFileSecuritySetGroupUUID(CFFileSecurityRef fileSec, CFUUIDRef groupUUID) __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
Boolean CFFileSecurityCopyAccessControlList(CFFileSecurityRef fileSec, acl_t *accessControlList) __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
Boolean CFFileSecuritySetAccessControlList(CFFileSecurityRef fileSec, acl_t accessControlList) __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
Boolean CFFileSecurityGetOwner(CFFileSecurityRef fileSec, uid_t *owner) __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
Boolean CFFileSecuritySetOwner(CFFileSecurityRef fileSec, uid_t owner) __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
Boolean CFFileSecurityGetGroup(CFFileSecurityRef fileSec, gid_t *group) __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
Boolean CFFileSecuritySetGroup(CFFileSecurityRef fileSec, gid_t group) __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
Boolean CFFileSecurityGetMode(CFFileSecurityRef fileSec, mode_t *mode) __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
Boolean CFFileSecuritySetMode(CFFileSecurityRef fileSec, mode_t mode) __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



typedef CFOptionFlags CFFileSecurityClearOptions; enum {
    kCFFileSecurityClearOwner = 1UL << 0,
    kCFFileSecurityClearGroup = 1UL << 1,
    kCFFileSecurityClearMode = 1UL << 2,
    kCFFileSecurityClearOwnerUUID = 1UL << 3,
    kCFFileSecurityClearGroupUUID = 1UL << 4,
    kCFFileSecurityClearAccessControlList = 1UL << 5
} __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
Boolean CFFileSecurityClearProperties(CFFileSecurityRef fileSec, CFFileSecurityClearOptions clearPropertyMask) __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


}
extern "C" {
extern
CFStringRef CFStringTokenizerCopyBestStringLanguage(CFStringRef string, CFRange range) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));







typedef struct __attribute__((objc_bridge_mutable(id))) __CFStringTokenizer * CFStringTokenizerRef;




enum {






    kCFStringTokenizerUnitWord = 0,
    kCFStringTokenizerUnitSentence = 1,
    kCFStringTokenizerUnitParagraph = 2,
    kCFStringTokenizerUnitLineBreak = 3,




    kCFStringTokenizerUnitWordBoundary = 4,
    kCFStringTokenizerAttributeLatinTranscription = 1UL << 16,


    kCFStringTokenizerAttributeLanguage = 1UL << 17,
};






typedef CFOptionFlags CFStringTokenizerTokenType; enum {

    kCFStringTokenizerTokenNone = 0,


    kCFStringTokenizerTokenNormal = 1UL << 0,





    kCFStringTokenizerTokenHasSubTokensMask = 1UL << 1,






    kCFStringTokenizerTokenHasDerivedSubTokensMask = 1UL << 2,

    kCFStringTokenizerTokenHasHasNumbersMask = 1UL << 3,
    kCFStringTokenizerTokenHasNonLettersMask = 1UL << 4,
    kCFStringTokenizerTokenIsCJWordMask = 1UL << 5
};






extern
CFTypeID CFStringTokenizerGetTypeID(void) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
CFStringTokenizerRef CFStringTokenizerCreate(CFAllocatorRef alloc, CFStringRef string, CFRange range, CFOptionFlags options, CFLocaleRef locale) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
void CFStringTokenizerSetString(CFStringTokenizerRef tokenizer, CFStringRef string, CFRange range) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
CFStringTokenizerTokenType CFStringTokenizerGoToTokenAtIndex(CFStringTokenizerRef tokenizer, CFIndex index) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
CFStringTokenizerTokenType CFStringTokenizerAdvanceToNextToken(CFStringTokenizerRef tokenizer) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
CFRange CFStringTokenizerGetCurrentTokenRange(CFStringTokenizerRef tokenizer) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
CFTypeRef CFStringTokenizerCopyCurrentTokenAttribute(CFStringTokenizerRef tokenizer, CFOptionFlags attribute) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern
CFIndex CFStringTokenizerGetCurrentSubTokens(CFStringTokenizerRef tokenizer, CFRange *ranges, CFIndex maxRangeLength, CFMutableArrayRef derivedSubTokens) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

}
extern "C" {

typedef int CFFileDescriptorNativeDescriptor;

typedef struct __attribute__((objc_bridge_mutable(id))) __CFFileDescriptor * CFFileDescriptorRef;


enum {
    kCFFileDescriptorReadCallBack = 1UL << 0,
    kCFFileDescriptorWriteCallBack = 1UL << 1
};

typedef void (*CFFileDescriptorCallBack)(CFFileDescriptorRef f, CFOptionFlags callBackTypes, void *info);

typedef struct {
    CFIndex version;
    void * info;
    void * (*retain)(void *info);
    void (*release)(void *info);
    CFStringRef (*copyDescription)(void *info);
} CFFileDescriptorContext;

extern CFTypeID CFFileDescriptorGetTypeID(void) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern CFFileDescriptorRef CFFileDescriptorCreate(CFAllocatorRef allocator, CFFileDescriptorNativeDescriptor fd, Boolean closeOnInvalidate, CFFileDescriptorCallBack callout, const CFFileDescriptorContext *context) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern CFFileDescriptorNativeDescriptor CFFileDescriptorGetNativeDescriptor(CFFileDescriptorRef f) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern void CFFileDescriptorGetContext(CFFileDescriptorRef f, CFFileDescriptorContext *context) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern void CFFileDescriptorEnableCallBacks(CFFileDescriptorRef f, CFOptionFlags callBackTypes) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern void CFFileDescriptorDisableCallBacks(CFFileDescriptorRef f, CFOptionFlags callBackTypes) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern void CFFileDescriptorInvalidate(CFFileDescriptorRef f) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern Boolean CFFileDescriptorIsValid(CFFileDescriptorRef f) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern CFRunLoopSourceRef CFFileDescriptorCreateRunLoopSource(CFAllocatorRef allocator, CFFileDescriptorRef f, CFIndex order) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


}

#pragma clang assume_nonnull begin

extern "C" double NSFoundationVersionNumber;
// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_Protocol
#define _REWRITER_typedef_Protocol
typedef struct objc_object Protocol;
typedef struct {} _objc_exc_Protocol;
#endif


typedef NSString * NSExceptionName __attribute__((swift_wrapper(struct)));
typedef NSString * NSRunLoopMode __attribute__((swift_wrapper(struct)));

extern "C" NSString *NSStringFromSelector(SEL aSelector);
extern "C" SEL NSSelectorFromString(NSString *aSelectorName);

extern "C" NSString *NSStringFromClass(Class aClass);
extern "C" Class _Nullable NSClassFromString(NSString *aClassName);

extern "C" NSString *NSStringFromProtocol(Protocol *proto) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" Protocol * _Nullable NSProtocolFromString(NSString *namestr) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern "C" const char *NSGetSizeAndAlignment(const char *typePtr, NSUInteger * _Nullable sizep, NSUInteger * _Nullable alignp);

extern "C" void NSLog(NSString *format, ...) __attribute__((format(__NSString__, 1, 2))) __attribute__((not_tail_called));
extern "C" void NSLogv(NSString *format, va_list args) __attribute__((format(__NSString__, 1, 0))) __attribute__((not_tail_called));

typedef NSInteger NSComparisonResult; enum {NSOrderedAscending = -1L, NSOrderedSame, NSOrderedDescending};


typedef NSComparisonResult (*NSComparator)(id obj1, id obj2);


typedef NSUInteger NSEnumerationOptions; enum {
    NSEnumerationConcurrent = (1UL << 0),
    NSEnumerationReverse = (1UL << 1),
};

typedef NSUInteger NSSortOptions; enum {
    NSSortConcurrent = (1UL << 0),
    NSSortStable = (1UL << 4),
};


typedef NSInteger NSQualityOfService; enum {

    NSQualityOfServiceUserInteractive = 0x21,


    NSQualityOfServiceUserInitiated = 0x19,


    NSQualityOfServiceUtility = 0x11,


    NSQualityOfServiceBackground = 0x09,


    NSQualityOfServiceDefault = -1
} __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

static const NSInteger NSNotFound = 9223372036854775807L;
#pragma clang assume_nonnull end



















// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif


#pragma clang assume_nonnull begin

typedef struct _NSZone NSZone;

extern "C" NSZone *NSDefaultMallocZone(void) __attribute__((availability(swift, unavailable, message="Zone-based memory management is unavailable")));
extern "C" NSZone *NSCreateZone(NSUInteger startSize, NSUInteger granularity, BOOL canFree) __attribute__((availability(swift, unavailable, message="Zone-based memory management is unavailable")));
extern "C" void NSRecycleZone(NSZone *zone)__attribute__((availability(swift, unavailable, message="Zone-based memory management is unavailable")));

extern "C" void NSSetZoneName(NSZone * _Nullable zone, NSString *name)__attribute__((availability(swift, unavailable, message="Zone-based memory management is unavailable")));
extern "C" NSString *NSZoneName(NSZone * _Nullable zone) __attribute__((availability(swift, unavailable, message="Zone-based memory management is unavailable")));
extern "C" NSZone * _Nullable NSZoneFromPointer(void *ptr) __attribute__((availability(swift, unavailable, message="Zone-based memory management is unavailable")));

extern "C" void *NSZoneMalloc(NSZone * _Nullable zone, NSUInteger size) __attribute__((availability(swift, unavailable, message="Zone-based memory management is unavailable")));
extern "C" void *NSZoneCalloc(NSZone * _Nullable zone, NSUInteger numElems, NSUInteger byteSize) __attribute__((availability(swift, unavailable, message="Zone-based memory management is unavailable")));
extern "C" void *NSZoneRealloc(NSZone * _Nullable zone, void * _Nullable ptr, NSUInteger size) __attribute__((availability(swift, unavailable, message="Zone-based memory management is unavailable")));
extern "C" void NSZoneFree(NSZone * _Nullable zone, void *ptr) __attribute__((availability(swift, unavailable, message="Zone-based memory management is unavailable")));
static __inline__ __attribute__((always_inline)) __attribute__((ns_returns_retained)) id _Nullable NSMakeCollectable(CFTypeRef _Nullable __attribute__((cf_consumed)) cf) __attribute__((unavailable("not available in automatic reference counting mode"))) __attribute__((availability(swift, unavailable, message="Garbage Collection is not supported")));
static __inline__ __attribute__((always_inline)) __attribute__((ns_returns_retained)) id _Nullable NSMakeCollectable(CFTypeRef _Nullable __attribute__((cf_consumed)) cf) {

    return __null;



}

extern "C" NSUInteger NSPageSize(void);
extern "C" NSUInteger NSLogPageSize(void);
extern "C" NSUInteger NSRoundUpToMultipleOfPageSize(NSUInteger bytes);
extern "C" NSUInteger NSRoundDownToMultipleOfPageSize(NSUInteger bytes);
extern "C" void *NSAllocateMemoryPages(NSUInteger bytes);
extern "C" void NSDeallocateMemoryPages(void *ptr, NSUInteger bytes);
extern "C" void NSCopyMemoryPages(const void *source, void *dest, NSUInteger bytes);
extern "C" NSUInteger NSRealMemoryAvailable(void) __attribute__((availability(macos,introduced=10.0,deprecated=10.8,message="Use NSProcessInfo instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=6.0,message="Use NSProcessInfo instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use NSProcessInfo instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use NSProcessInfo instead")));
#pragma clang assume_nonnull end

// @class NSInvocation;
#ifndef _REWRITER_typedef_NSInvocation
#define _REWRITER_typedef_NSInvocation
typedef struct objc_object NSInvocation;
typedef struct {} _objc_exc_NSInvocation;
#endif

#ifndef _REWRITER_typedef_NSMethodSignature
#define _REWRITER_typedef_NSMethodSignature
typedef struct objc_object NSMethodSignature;
typedef struct {} _objc_exc_NSMethodSignature;
#endif

#ifndef _REWRITER_typedef_NSCoder
#define _REWRITER_typedef_NSCoder
typedef struct objc_object NSCoder;
typedef struct {} _objc_exc_NSCoder;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSEnumerator
#define _REWRITER_typedef_NSEnumerator
typedef struct objc_object NSEnumerator;
typedef struct {} _objc_exc_NSEnumerator;
#endif

// @class Protocol;
#ifndef _REWRITER_typedef_Protocol
#define _REWRITER_typedef_Protocol
typedef struct objc_object Protocol;
typedef struct {} _objc_exc_Protocol;
#endif


#pragma clang assume_nonnull begin



// @protocol NSCopying

// - (id)copyWithZone:(nullable NSZone *)zone;

/* @end */


// @protocol NSMutableCopying

// - (id)mutableCopyWithZone:(nullable NSZone *)zone;

/* @end */


// @protocol NSCoding

// - (void)encodeWithCoder:(NSCoder *)aCoder;
// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder;

/* @end */





// @protocol NSSecureCoding <NSCoding>
/* @required */


@property (class, readonly) BOOL supportsSecureCoding;
/* @end */




// @interface NSObject (NSCoderMethods)

// + (NSInteger)version;
// + (void)setVersion:(NSInteger)aVersion;
// @property (readonly) Class classForCoder;
// - (nullable id)replacementObjectForCoder:(NSCoder *)aCoder;
// - (nullable id)awakeAfterUsingCoder:(NSCoder *)aDecoder __attribute__((ns_consumes_self)) __attribute__((ns_returns_retained));

/* @end */

// @protocol NSDiscardableContent
/* @required */
// - (BOOL)beginContentAccess;
// - (void)endContentAccess;
// - (void)discardContentIfPossible;
// - (BOOL)isContentDiscarded;
/* @end */


// @interface NSObject (NSDiscardableContentProxy)
// @property (readonly, retain) id autoContentAccessingProxy __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
/* @end */





extern "C" id NSAllocateObject(Class aClass, NSUInteger extraBytes, NSZone * _Nullable zone) __attribute__((unavailable("not available in automatic reference counting mode")));

extern "C" void NSDeallocateObject(id object) __attribute__((unavailable("not available in automatic reference counting mode")));

extern "C" id NSCopyObject(id object, NSUInteger extraBytes, NSZone * _Nullable zone) __attribute__((unavailable("not available in automatic reference counting mode"))) __attribute__((availability(macos,introduced=10.0,deprecated=10.8,message="Not supported"))) __attribute__((availability(ios,introduced=2.0,deprecated=6.0,message="Not supported"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Not supported"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Not supported")));

extern "C" BOOL NSShouldRetainWithZone(id anObject, NSZone * _Nullable requestedZone) __attribute__((unavailable("not available in automatic reference counting mode")));

extern "C" void NSIncrementExtraRefCount(id object) __attribute__((unavailable("not available in automatic reference counting mode")));

extern "C" BOOL NSDecrementExtraRefCountWasZero(id object) __attribute__((unavailable("not available in automatic reference counting mode")));

extern "C" NSUInteger NSExtraRefCount(id object) __attribute__((unavailable("not available in automatic reference counting mode")));




static __inline__ __attribute__((always_inline)) __attribute__((cf_returns_retained)) CFTypeRef _Nullable CFBridgingRetain(id _Nullable X) {
    return (__bridge_retained CFTypeRef)X;
}

static __inline__ __attribute__((always_inline)) id _Nullable CFBridgingRelease(CFTypeRef __attribute__((cf_consumed)) _Nullable X) {
    return (__bridge_transfer id)X;
}
#pragma clang assume_nonnull end






// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif


#pragma clang assume_nonnull begin
typedef struct {
    unsigned long state;
    id __attribute__((objc_ownership(none))) _Nullable * _Nullable itemsPtr;
    unsigned long * _Nullable mutationsPtr;
    unsigned long extra[5];
} NSFastEnumerationState;

// @protocol NSFastEnumeration

// - (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(id __attribute__((objc_ownership(none))) _Nullable [_Nonnull])buffer count:(NSUInteger)len;

/* @end */



#ifndef _REWRITER_typedef_NSEnumerator
#define _REWRITER_typedef_NSEnumerator
typedef struct objc_object NSEnumerator;
typedef struct {} _objc_exc_NSEnumerator;
#endif

struct NSEnumerator_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (nullable ObjectType)nextObject;

/* @end */


// @interface NSEnumerator<ObjectType> (NSExtendedEnumerator)

// @property (readonly, copy) NSArray<ObjectType> *allObjects;

/* @end */

#pragma clang assume_nonnull end










// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif


#pragma clang assume_nonnull begin


#ifndef _REWRITER_typedef_NSValue
#define _REWRITER_typedef_NSValue
typedef struct objc_object NSValue;
typedef struct {} _objc_exc_NSValue;
#endif

struct NSValue_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (void)getValue:(void *)value size:(NSUInteger)size __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));

// @property (readonly) const char *objCType __attribute__((objc_returns_inner_pointer));

// - (instancetype)initWithBytes:(const void *)value objCType:(const char *)type __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

/* @end */


// @interface NSValue (NSValueCreation)

// + (NSValue *)valueWithBytes:(const void *)value objCType:(const char *)type;
// + (NSValue *)value:(const void *)value withObjCType:(const char *)type;

/* @end */


// @interface NSValue (NSValueExtensionMethods)

// + (NSValue *)valueWithNonretainedObject:(nullable id)anObject;
// @property (nullable, readonly) id nonretainedObjectValue;

// + (NSValue *)valueWithPointer:(nullable const void *)pointer;
// @property (nullable, readonly) void *pointerValue;

// - (BOOL)isEqualToValue:(NSValue *)value;

/* @end */



#ifndef _REWRITER_typedef_NSNumber
#define _REWRITER_typedef_NSNumber
typedef struct objc_object NSNumber;
typedef struct {} _objc_exc_NSNumber;
#endif

struct NSNumber_IMPL {
	struct NSValue_IMPL NSValue_IVARS;
};


// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));
// - (NSNumber *)initWithChar:(char)value __attribute__((objc_designated_initializer));
// - (NSNumber *)initWithUnsignedChar:(unsigned char)value __attribute__((objc_designated_initializer));
// - (NSNumber *)initWithShort:(short)value __attribute__((objc_designated_initializer));
// - (NSNumber *)initWithUnsignedShort:(unsigned short)value __attribute__((objc_designated_initializer));
// - (NSNumber *)initWithInt:(int)value __attribute__((objc_designated_initializer));
// - (NSNumber *)initWithUnsignedInt:(unsigned int)value __attribute__((objc_designated_initializer));
// - (NSNumber *)initWithLong:(long)value __attribute__((objc_designated_initializer));
// - (NSNumber *)initWithUnsignedLong:(unsigned long)value __attribute__((objc_designated_initializer));
// - (NSNumber *)initWithLongLong:(long long)value __attribute__((objc_designated_initializer));
// - (NSNumber *)initWithUnsignedLongLong:(unsigned long long)value __attribute__((objc_designated_initializer));
// - (NSNumber *)initWithFloat:(float)value __attribute__((objc_designated_initializer));
// - (NSNumber *)initWithDouble:(double)value __attribute__((objc_designated_initializer));
// - (NSNumber *)initWithBool:(BOOL)value __attribute__((objc_designated_initializer));
// - (NSNumber *)initWithInteger:(NSInteger)value __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((objc_designated_initializer));
// - (NSNumber *)initWithUnsignedInteger:(NSUInteger)value __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((objc_designated_initializer));

// @property (readonly) char charValue;
// @property (readonly) unsigned char unsignedCharValue;
// @property (readonly) short shortValue;
// @property (readonly) unsigned short unsignedShortValue;
// @property (readonly) int intValue;
// @property (readonly) unsigned int unsignedIntValue;
// @property (readonly) long longValue;
// @property (readonly) unsigned long unsignedLongValue;
// @property (readonly) long long longLongValue;
// @property (readonly) unsigned long long unsignedLongLongValue;
// @property (readonly) float floatValue;
// @property (readonly) double doubleValue;
// @property (readonly) BOOL boolValue;
// @property (readonly) NSInteger integerValue __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly) NSUInteger unsignedIntegerValue __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (readonly, copy) NSString *stringValue;

// - (NSComparisonResult)compare:(NSNumber *)otherNumber;

// - (BOOL)isEqualToNumber:(NSNumber *)number;

// - (NSString *)descriptionWithLocale:(nullable id)locale;

/* @end */


// @interface NSNumber (NSNumberCreation)

// + (NSNumber *)numberWithChar:(char)value;
// + (NSNumber *)numberWithUnsignedChar:(unsigned char)value;
// + (NSNumber *)numberWithShort:(short)value;
// + (NSNumber *)numberWithUnsignedShort:(unsigned short)value;
// + (NSNumber *)numberWithInt:(int)value;
// + (NSNumber *)numberWithUnsignedInt:(unsigned int)value;
// + (NSNumber *)numberWithLong:(long)value;
// + (NSNumber *)numberWithUnsignedLong:(unsigned long)value;
// + (NSNumber *)numberWithLongLong:(long long)value;
// + (NSNumber *)numberWithUnsignedLongLong:(unsigned long long)value;
// + (NSNumber *)numberWithFloat:(float)value;
// + (NSNumber *)numberWithDouble:(double)value;
// + (NSNumber *)numberWithBool:(BOOL)value;
// + (NSNumber *)numberWithInteger:(NSInteger)value __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (NSNumber *)numberWithUnsignedInteger:(NSUInteger)value __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */


// @interface NSValue (NSDeprecated)


// - (void)getValue:(void *)value;
/* @end */

#pragma clang assume_nonnull end


// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif


#pragma clang assume_nonnull begin

typedef struct _NSRange {
    NSUInteger location;
    NSUInteger length;
} NSRange;

typedef NSRange *NSRangePointer;

static __inline__ __attribute__((always_inline)) NSRange NSMakeRange(NSUInteger loc, NSUInteger len) {
    NSRange r;
    r.location = loc;
    r.length = len;
    return r;
}

static __inline__ __attribute__((always_inline)) NSUInteger NSMaxRange(NSRange range) {
    return (range.location + range.length);
}

static __inline__ __attribute__((always_inline)) BOOL NSLocationInRange(NSUInteger loc, NSRange range) {
    return (!(loc < range.location) && (loc - range.location) < range.length) ? ((bool)1) : ((bool)0);
}

static __inline__ __attribute__((always_inline)) BOOL NSEqualRanges(NSRange range1, NSRange range2) {
    return (range1.location == range2.location && range1.length == range2.length);
}

extern "C" NSRange NSUnionRange(NSRange range1, NSRange range2);
extern "C" NSRange NSIntersectionRange(NSRange range1, NSRange range2);
extern "C" NSString *NSStringFromRange(NSRange range);
extern "C" NSRange NSRangeFromString(NSString *aString);

// @interface NSValue (NSValueRangeExtensions)

// + (NSValue *)valueWithRange:(NSRange)range;
// @property (readonly) NSRange rangeValue;

/* @end */

#pragma clang assume_nonnull end


// @class NSData;
#ifndef _REWRITER_typedef_NSData
#define _REWRITER_typedef_NSData
typedef struct objc_object NSData;
typedef struct {} _objc_exc_NSData;
#endif

#ifndef _REWRITER_typedef_NSIndexSet
#define _REWRITER_typedef_NSIndexSet
typedef struct objc_object NSIndexSet;
typedef struct {} _objc_exc_NSIndexSet;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSURL
#define _REWRITER_typedef_NSURL
typedef struct objc_object NSURL;
typedef struct {} _objc_exc_NSURL;
#endif




#pragma clang assume_nonnull begin


#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

struct NSArray_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property (readonly) NSUInteger count;
// - (ObjectType)objectAtIndex:(NSUInteger)index;
// - (instancetype)init __attribute__((objc_designated_initializer));
// - (instancetype)initWithObjects:(const ObjectType _Nonnull [_Nullable])objects count:(NSUInteger)cnt __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

/* @end */


// @interface NSArray<ObjectType> (NSExtendedArray)

// - (NSArray<ObjectType> *)arrayByAddingObject:(ObjectType)anObject;
// - (NSArray<ObjectType> *)arrayByAddingObjectsFromArray:(NSArray<ObjectType> *)otherArray;
// - (NSString *)componentsJoinedByString:(NSString *)separator;
// - (BOOL)containsObject:(ObjectType)anObject;
// @property (readonly, copy) NSString *description;
// - (NSString *)descriptionWithLocale:(nullable id)locale;
// - (NSString *)descriptionWithLocale:(nullable id)locale indent:(NSUInteger)level;
// - (nullable ObjectType)firstObjectCommonWithArray:(NSArray<ObjectType> *)otherArray;
// - (void)getObjects:(ObjectType _Nonnull __attribute__((objc_ownership(none))) [_Nonnull])objects range:(NSRange)range __attribute__((availability(swift, unavailable, message="Use 'subarrayWithRange()' instead")));
// - (NSUInteger)indexOfObject:(ObjectType)anObject;
// - (NSUInteger)indexOfObject:(ObjectType)anObject inRange:(NSRange)range;
// - (NSUInteger)indexOfObjectIdenticalTo:(ObjectType)anObject;
// - (NSUInteger)indexOfObjectIdenticalTo:(ObjectType)anObject inRange:(NSRange)range;
// - (BOOL)isEqualToArray:(NSArray<ObjectType> *)otherArray;
// @property (nullable, nonatomic, readonly) ObjectType firstObject __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (nullable, nonatomic, readonly) ObjectType lastObject;
// - (NSEnumerator<ObjectType> *)objectEnumerator;
// - (NSEnumerator<ObjectType> *)reverseObjectEnumerator;
// @property (readonly, copy) NSData *sortedArrayHint;
// - (NSArray<ObjectType> *)sortedArrayUsingFunction:(NSInteger (__attribute__((noescape)) *)(ObjectType, ObjectType, void * _Nullable))comparator context:(nullable void *)context;
// - (NSArray<ObjectType> *)sortedArrayUsingFunction:(NSInteger (__attribute__((noescape)) *)(ObjectType, ObjectType, void * _Nullable))comparator context:(nullable void *)context hint:(nullable NSData *)hint;
// - (NSArray<ObjectType> *)sortedArrayUsingSelector:(SEL)comparator;
// - (NSArray<ObjectType> *)subarrayWithRange:(NSRange)range;

// - (BOOL)writeToURL:(NSURL *)url error:(NSError **)error __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));


// - (void)makeObjectsPerformSelector:(SEL)aSelector __attribute__((availability(swift, unavailable, message="Use enumerateObjectsUsingBlock: or a for loop instead")));
// - (void)makeObjectsPerformSelector:(SEL)aSelector withObject:(nullable id)argument __attribute__((availability(swift, unavailable, message="Use enumerateObjectsUsingBlock: or a for loop instead")));

// - (NSArray<ObjectType> *)objectsAtIndexes:(NSIndexSet *)indexes;

// - (ObjectType)objectAtIndexedSubscript:(NSUInteger)idx __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (void)enumerateObjectsUsingBlock:(void (__attribute__((noescape)) ^)(ObjectType obj, NSUInteger idx, BOOL *stop))block __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)enumerateObjectsWithOptions:(NSEnumerationOptions)opts usingBlock:(void (__attribute__((noescape)) ^)(ObjectType obj, NSUInteger idx, BOOL *stop))block __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)enumerateObjectsAtIndexes:(NSIndexSet *)s options:(NSEnumerationOptions)opts usingBlock:(void (__attribute__((noescape)) ^)(ObjectType obj, NSUInteger idx, BOOL *stop))block __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (NSUInteger)indexOfObjectPassingTest:(BOOL (__attribute__((noescape)) ^)(ObjectType obj, NSUInteger idx, BOOL *stop))predicate __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (NSUInteger)indexOfObjectWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (__attribute__((noescape)) ^)(ObjectType obj, NSUInteger idx, BOOL *stop))predicate __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (NSUInteger)indexOfObjectAtIndexes:(NSIndexSet *)s options:(NSEnumerationOptions)opts passingTest:(BOOL (__attribute__((noescape))^)(ObjectType obj, NSUInteger idx, BOOL *stop))predicate __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (NSIndexSet *)indexesOfObjectsPassingTest:(BOOL (__attribute__((noescape)) ^)(ObjectType obj, NSUInteger idx, BOOL *stop))predicate __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (NSIndexSet *)indexesOfObjectsWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (__attribute__((noescape)) ^)(ObjectType obj, NSUInteger idx, BOOL *stop))predicate __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (NSIndexSet *)indexesOfObjectsAtIndexes:(NSIndexSet *)s options:(NSEnumerationOptions)opts passingTest:(BOOL (__attribute__((noescape)) ^)(ObjectType obj, NSUInteger idx, BOOL *stop))predicate __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (NSArray<ObjectType> *)sortedArrayUsingComparator:(NSComparator __attribute__((noescape)))cmptr __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (NSArray<ObjectType> *)sortedArrayWithOptions:(NSSortOptions)opts usingComparator:(NSComparator __attribute__((noescape)))cmptr __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

typedef NSUInteger NSBinarySearchingOptions; enum {
 NSBinarySearchingFirstEqual = (1UL << 8),
 NSBinarySearchingLastEqual = (1UL << 9),
 NSBinarySearchingInsertionIndex = (1UL << 10),
};

// - (NSUInteger)indexOfObject:(ObjectType)obj inSortedRange:(NSRange)r options:(NSBinarySearchingOptions)opts usingComparator:(NSComparator __attribute__((noescape)))cmp __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */


// @interface NSArray<ObjectType> (NSArrayCreation)

// + (instancetype)array;
// + (instancetype)arrayWithObject:(ObjectType)anObject;
// + (instancetype)arrayWithObjects:(const ObjectType _Nonnull [_Nonnull])objects count:(NSUInteger)cnt;
// + (instancetype)arrayWithObjects:(ObjectType)firstObj, ... __attribute__((sentinel(0,1)));
// + (instancetype)arrayWithArray:(NSArray<ObjectType> *)array;

// - (instancetype)initWithObjects:(ObjectType)firstObj, ... __attribute__((sentinel(0,1)));
// - (instancetype)initWithArray:(NSArray<ObjectType> *)array;
// - (instancetype)initWithArray:(NSArray<ObjectType> *)array copyItems:(BOOL)flag;


// - (nullable NSArray<ObjectType> *)initWithContentsOfURL:(NSURL *)url error:(NSError **)error __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));

// + (nullable NSArray<ObjectType> *)arrayWithContentsOfURL:(NSURL *)url error:(NSError **)error __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(swift, unavailable, message="Use initializer instead")));

/* @end */


// @interface NSArray<ObjectType> (NSDeprecated)




// - (void)getObjects:(ObjectType _Nonnull __attribute__((objc_ownership(none))) [_Nonnull])objects __attribute__((availability(swift, unavailable, message="Use 'as [AnyObject]' instead"))) __attribute__((availability(macos,introduced=10.0,deprecated=10.13,message="Use -getObjects:range: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=11.0,message="Use -getObjects:range: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=4.0,message="Use -getObjects:range: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=11.0,message="Use -getObjects:range: instead")));


// + (nullable NSArray<ObjectType> *)arrayWithContentsOfFile:(NSString *)path;
// + (nullable NSArray<ObjectType> *)arrayWithContentsOfURL:(NSURL *)url;
// - (nullable NSArray<ObjectType> *)initWithContentsOfFile:(NSString *)path;
// - (nullable NSArray<ObjectType> *)initWithContentsOfURL:(NSURL *)url;
// - (BOOL)writeToFile:(NSString *)path atomically:(BOOL)useAuxiliaryFile;
// - (BOOL)writeToURL:(NSURL *)url atomically:(BOOL)atomically;

/* @end */





#ifndef _REWRITER_typedef_NSMutableArray
#define _REWRITER_typedef_NSMutableArray
typedef struct objc_object NSMutableArray;
typedef struct {} _objc_exc_NSMutableArray;
#endif

struct NSMutableArray_IMPL {
	struct NSArray_IMPL NSArray_IVARS;
};


// - (void)addObject:(ObjectType)anObject;
// - (void)insertObject:(ObjectType)anObject atIndex:(NSUInteger)index;
// - (void)removeLastObject;
// - (void)removeObjectAtIndex:(NSUInteger)index;
// - (void)replaceObjectAtIndex:(NSUInteger)index withObject:(ObjectType)anObject;
// - (instancetype)init __attribute__((objc_designated_initializer));
// - (instancetype)initWithCapacity:(NSUInteger)numItems __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

/* @end */


// @interface NSMutableArray<ObjectType> (NSExtendedMutableArray)

// - (void)addObjectsFromArray:(NSArray<ObjectType> *)otherArray;
// - (void)exchangeObjectAtIndex:(NSUInteger)idx1 withObjectAtIndex:(NSUInteger)idx2;
// - (void)removeAllObjects;
// - (void)removeObject:(ObjectType)anObject inRange:(NSRange)range;
// - (void)removeObject:(ObjectType)anObject;
// - (void)removeObjectIdenticalTo:(ObjectType)anObject inRange:(NSRange)range;
// - (void)removeObjectIdenticalTo:(ObjectType)anObject;
// - (void)removeObjectsFromIndices:(NSUInteger *)indices numIndices:(NSUInteger)cnt __attribute__((availability(macos,introduced=10.0,deprecated=10.6,message="Not supported"))) __attribute__((availability(ios,introduced=2.0,deprecated=4.0,message="Not supported"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Not supported"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Not supported")));
// - (void)removeObjectsInArray:(NSArray<ObjectType> *)otherArray;
// - (void)removeObjectsInRange:(NSRange)range;
// - (void)replaceObjectsInRange:(NSRange)range withObjectsFromArray:(NSArray<ObjectType> *)otherArray range:(NSRange)otherRange;
// - (void)replaceObjectsInRange:(NSRange)range withObjectsFromArray:(NSArray<ObjectType> *)otherArray;
// - (void)setArray:(NSArray<ObjectType> *)otherArray;
// - (void)sortUsingFunction:(NSInteger (__attribute__((noescape)) *)(ObjectType, ObjectType, void * _Nullable))compare context:(nullable void *)context;
// - (void)sortUsingSelector:(SEL)comparator;

// - (void)insertObjects:(NSArray<ObjectType> *)objects atIndexes:(NSIndexSet *)indexes;
// - (void)removeObjectsAtIndexes:(NSIndexSet *)indexes;
// - (void)replaceObjectsAtIndexes:(NSIndexSet *)indexes withObjects:(NSArray<ObjectType> *)objects;

// - (void)setObject:(ObjectType)obj atIndexedSubscript:(NSUInteger)idx __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (void)sortUsingComparator:(NSComparator __attribute__((noescape)))cmptr __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)sortWithOptions:(NSSortOptions)opts usingComparator:(NSComparator __attribute__((noescape)))cmptr __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */


// @interface NSMutableArray<ObjectType> (NSMutableArrayCreation)

// + (instancetype)arrayWithCapacity:(NSUInteger)numItems;

// + (nullable NSMutableArray<ObjectType> *)arrayWithContentsOfFile:(NSString *)path;
// + (nullable NSMutableArray<ObjectType> *)arrayWithContentsOfURL:(NSURL *)url;
// - (nullable NSMutableArray<ObjectType> *)initWithContentsOfFile:(NSString *)path;
// - (nullable NSMutableArray<ObjectType> *)initWithContentsOfURL:(NSURL *)url;

/* @end */

#pragma clang assume_nonnull end






#pragma clang assume_nonnull begin

__attribute__((unavailable("not available in automatic reference counting mode")))

#ifndef _REWRITER_typedef_NSAutoreleasePool
#define _REWRITER_typedef_NSAutoreleasePool
typedef struct objc_object NSAutoreleasePool;
typedef struct {} _objc_exc_NSAutoreleasePool;
#endif

struct NSAutoreleasePool_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_token;
	void *_reserved3;
	void *_reserved2;
	void *_reserved;
};


// + (void)addObject:(id)anObject;

// - (void)addObject:(id)anObject;

// - (void)drain;

/* @end */

#pragma clang assume_nonnull end





typedef unsigned short unichar;





#pragma clang assume_nonnull begin

// @class NSItemProvider;
#ifndef _REWRITER_typedef_NSItemProvider
#define _REWRITER_typedef_NSItemProvider
typedef struct objc_object NSItemProvider;
typedef struct {} _objc_exc_NSItemProvider;
#endif

#ifndef _REWRITER_typedef_NSProgress
#define _REWRITER_typedef_NSProgress
typedef struct objc_object NSProgress;
typedef struct {} _objc_exc_NSProgress;
#endif



typedef NSInteger NSItemProviderRepresentationVisibility; enum {
    NSItemProviderRepresentationVisibilityAll = 0,
    NSItemProviderRepresentationVisibilityTeam
    __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(macos,unavailable))) = 1,
    NSItemProviderRepresentationVisibilityGroup
    __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) = 2 ,
    NSItemProviderRepresentationVisibilityOwnProcess = 3,
} __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));



typedef NSInteger NSItemProviderFileOptions; enum {
    NSItemProviderFileOptionOpenInPlace = 1,
} __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));



__attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)))
// @protocol NSItemProviderWriting <NSObject>

@property (class, nonatomic, readonly, copy) NSArray<NSString *> *writableTypeIdentifiersForItemProvider;

/* @optional */


// @property (nonatomic, readonly, copy) NSArray<NSString *> *writableTypeIdentifiersForItemProvider;

// + (NSItemProviderRepresentationVisibility)itemProviderVisibilityForRepresentationWithTypeIdentifier:(NSString *)typeIdentifier;


// - (NSItemProviderRepresentationVisibility)itemProviderVisibilityForRepresentationWithTypeIdentifier:(NSString *)typeIdentifier;

/* @required */

#if 0
- (nullable NSProgress *)loadDataWithTypeIdentifier:(NSString *)typeIdentifier
                   forItemProviderCompletionHandler:(void (^)(NSData * _Nullable data, NSError * _Nullable error))completionHandler;
#endif


/* @end */




__attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)))
// @protocol NSItemProviderReading <NSObject>

@property (class, nonatomic, readonly, copy) NSArray<NSString *> *readableTypeIdentifiersForItemProvider;

#if 0
+ (nullable instancetype)objectWithItemProviderData:(NSData *)data
                                     typeIdentifier:(NSString *)typeIdentifier
                                              error:(NSError **)outError;
#endif


/* @end */



typedef void (*NSItemProviderCompletionHandler)(_Nullable id /*<NSSecureCoding>*/ item, NSError * _Null_unspecified error);
typedef void (*NSItemProviderLoadHandler)(_Null_unspecified NSItemProviderCompletionHandler completionHandler, _Null_unspecified Class expectedValueClass, NSDictionary * _Null_unspecified options);



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))

#ifndef _REWRITER_typedef_NSItemProvider
#define _REWRITER_typedef_NSItemProvider
typedef struct objc_object NSItemProvider;
typedef struct {} _objc_exc_NSItemProvider;
#endif

struct NSItemProvider_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};








// - (instancetype)init __attribute__((objc_designated_initializer));




#if 0
- (void)registerDataRepresentationForTypeIdentifier:(NSString *)typeIdentifier
                                         visibility:(NSItemProviderRepresentationVisibility)visibility
                                        loadHandler:(NSProgress * _Nullable (^)(void (^completionHandler)(NSData * _Nullable data, NSError * _Nullable error)))loadHandler __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
#endif





#if 0
- (void)registerFileRepresentationForTypeIdentifier:(NSString *)typeIdentifier
                                        fileOptions:(NSItemProviderFileOptions)fileOptions
                                         visibility:(NSItemProviderRepresentationVisibility)visibility
                                        loadHandler:(NSProgress * _Nullable (^)(void (^completionHandler)(NSURL * _Nullable url, BOOL coordinated, NSError * _Nullable error)))loadHandler __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
#endif







// @property (copy, readonly, atomic) NSArray<NSString *> *registeredTypeIdentifiers;

// - (NSArray<NSString *> *)registeredTypeIdentifiersWithFileOptions:(NSItemProviderFileOptions)fileOptions __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));


// - (BOOL)hasItemConformingToTypeIdentifier:(NSString *)typeIdentifier;

#if 0
- (BOOL)hasRepresentationConformingToTypeIdentifier:(NSString *)typeIdentifier
                                        fileOptions:(NSItemProviderFileOptions)fileOptions __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
#endif



#if 0
- (NSProgress *)loadDataRepresentationForTypeIdentifier:(NSString *)typeIdentifier
                                      completionHandler:(void(^)(NSData * _Nullable data, NSError * _Nullable error))completionHandler __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
#endif



#if 0
- (NSProgress *)loadFileRepresentationForTypeIdentifier:(NSString *)typeIdentifier
                                      completionHandler:(void(^)(NSURL * _Nullable url, NSError * _Nullable error))completionHandler __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
#endif




#if 0
- (NSProgress *)loadInPlaceFileRepresentationForTypeIdentifier:(NSString *)typeIdentifier
                                             completionHandler:(void (^)(NSURL * _Nullable url, BOOL isInPlace, NSError * _Nullable error))completionHandler __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
#endif






// @property (atomic, copy, nullable) NSString *suggestedName __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));






// - (instancetype)initWithObject:(id<NSItemProviderWriting>)object __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));


// - (void)registerObject:(id<NSItemProviderWriting>)object visibility:(NSItemProviderRepresentationVisibility)visibility __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));


#if 0
- (void)registerObjectOfClass:(Class<NSItemProviderWriting>)aClass
                   visibility:(NSItemProviderRepresentationVisibility)visibility
                  loadHandler:(NSProgress * _Nullable (^)(void (^completionHandler)(id<NSItemProviderWriting> _Nullable object, NSError * _Nullable error)))loadHandler __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
#endif


// - (BOOL)canLoadObjectOfClass:(Class<NSItemProviderReading>)aClass __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));


#if 0
- (NSProgress *)loadObjectOfClass:(Class<NSItemProviderReading>)aClass
                completionHandler:(void (^)(id<NSItemProviderReading> _Nullable object, NSError * _Nullable error))completionHandler __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
#endif

// - (instancetype)initWithItem:(nullable id<NSSecureCoding>)item typeIdentifier:(nullable NSString *)typeIdentifier __attribute__((objc_designated_initializer));


// - (nullable instancetype)initWithContentsOfURL:(null_unspecified NSURL *)fileURL;


// - (void)registerItemForTypeIdentifier:(NSString *)typeIdentifier loadHandler:(NSItemProviderLoadHandler)loadHandler;







// - (void)loadItemForTypeIdentifier:(NSString *)typeIdentifier options:(nullable NSDictionary *)options completionHandler:(nullable NSItemProviderCompletionHandler)completionHandler;


/* @end */




extern "C" NSString * const NSItemProviderPreferredImageSizeKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// @interface NSItemProvider(NSPreviewSupport)


// @property (nullable, copy, atomic) NSItemProviderLoadHandler previewImageHandler __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


// - (void)loadPreviewImageWithOptions:(null_unspecified NSDictionary *)options completionHandler:(null_unspecified NSItemProviderCompletionHandler)completionHandler __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */






extern "C" NSString * _Null_unspecified const NSExtensionJavaScriptPreprocessingResultsKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern "C" NSString * _Null_unspecified const NSExtensionJavaScriptFinalizeArgumentKey __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));






extern "C" NSString * const NSItemProviderErrorDomain __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


typedef NSInteger NSItemProviderErrorCode; enum {
    NSItemProviderUnknownError = -1,
    NSItemProviderItemUnavailableError = -1000,
    NSItemProviderUnexpectedValueClassError = -1100,
    NSItemProviderUnavailableCoercionError __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = -1200
} __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
#pragma clang assume_nonnull end


// @class NSData;
#ifndef _REWRITER_typedef_NSData
#define _REWRITER_typedef_NSData
typedef struct objc_object NSData;
typedef struct {} _objc_exc_NSData;
#endif

#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

#ifndef _REWRITER_typedef_NSCharacterSet
#define _REWRITER_typedef_NSCharacterSet
typedef struct objc_object NSCharacterSet;
typedef struct {} _objc_exc_NSCharacterSet;
#endif

#ifndef _REWRITER_typedef_NSURL
#define _REWRITER_typedef_NSURL
typedef struct objc_object NSURL;
typedef struct {} _objc_exc_NSURL;
#endif

#ifndef _REWRITER_typedef_NSError
#define _REWRITER_typedef_NSError
typedef struct objc_object NSError;
typedef struct {} _objc_exc_NSError;
#endif

#ifndef _REWRITER_typedef_NSLocale
#define _REWRITER_typedef_NSLocale
typedef struct objc_object NSLocale;
typedef struct {} _objc_exc_NSLocale;
#endif


#pragma clang assume_nonnull begin



typedef NSUInteger NSStringCompareOptions; enum {
    NSCaseInsensitiveSearch = 1,
    NSLiteralSearch = 2,
    NSBackwardsSearch = 4,
    NSAnchoredSearch = 8,
    NSNumericSearch = 64,
    NSDiacriticInsensitiveSearch __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 128,
    NSWidthInsensitiveSearch __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 256,
    NSForcedOrderingSearch __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 512,
    NSRegularExpressionSearch __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=3.2))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 1024
};





typedef NSUInteger NSStringEncoding;
enum {
    NSASCIIStringEncoding = 1,
    NSNEXTSTEPStringEncoding = 2,
    NSJapaneseEUCStringEncoding = 3,
    NSUTF8StringEncoding = 4,
    NSISOLatin1StringEncoding = 5,
    NSSymbolStringEncoding = 6,
    NSNonLossyASCIIStringEncoding = 7,
    NSShiftJISStringEncoding = 8,
    NSISOLatin2StringEncoding = 9,
    NSUnicodeStringEncoding = 10,
    NSWindowsCP1251StringEncoding = 11,
    NSWindowsCP1252StringEncoding = 12,
    NSWindowsCP1253StringEncoding = 13,
    NSWindowsCP1254StringEncoding = 14,
    NSWindowsCP1250StringEncoding = 15,
    NSISO2022JPStringEncoding = 21,
    NSMacOSRomanStringEncoding = 30,

    NSUTF16StringEncoding = NSUnicodeStringEncoding,

    NSUTF16BigEndianStringEncoding = 0x90000100,
    NSUTF16LittleEndianStringEncoding = 0x94000100,

    NSUTF32StringEncoding = 0x8c000100,
    NSUTF32BigEndianStringEncoding = 0x98000100,
    NSUTF32LittleEndianStringEncoding = 0x9c000100
};

typedef NSUInteger NSStringEncodingConversionOptions; enum {
    NSStringEncodingConversionAllowLossy = 1,
    NSStringEncodingConversionExternalRepresentation = 2
};



#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

struct NSString_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};






// @property (readonly) NSUInteger length;
// - (unichar)characterAtIndex:(NSUInteger)index;



// - (instancetype)init __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

/* @end */


// @interface NSString (NSStringExtensionMethods)
// - (NSString *)substringFromIndex:(NSUInteger)from;
// - (NSString *)substringToIndex:(NSUInteger)to;
// - (NSString *)substringWithRange:(NSRange)range;

// - (void)getCharacters:(unichar *)buffer range:(NSRange)range;






// - (NSComparisonResult)compare:(NSString *)string;
// - (NSComparisonResult)compare:(NSString *)string options:(NSStringCompareOptions)mask;
// - (NSComparisonResult)compare:(NSString *)string options:(NSStringCompareOptions)mask range:(NSRange)rangeOfReceiverToCompare;
// - (NSComparisonResult)compare:(NSString *)string options:(NSStringCompareOptions)mask range:(NSRange)rangeOfReceiverToCompare locale:(nullable id)locale;
// - (NSComparisonResult)caseInsensitiveCompare:(NSString *)string;
// - (NSComparisonResult)localizedCompare:(NSString *)string;
// - (NSComparisonResult)localizedCaseInsensitiveCompare:(NSString *)string;



// - (NSComparisonResult)localizedStandardCompare:(NSString *)string __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (BOOL)isEqualToString:(NSString *)aString;






// - (BOOL)hasPrefix:(NSString *)str;
// - (BOOL)hasSuffix:(NSString *)str;

// - (NSString *)commonPrefixWithString:(NSString *)str options:(NSStringCompareOptions)mask;



// - (BOOL)containsString:(NSString *)str __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (BOOL)localizedCaseInsensitiveContainsString:(NSString *)str __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (BOOL)localizedStandardContainsString:(NSString *)str __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (NSRange)localizedStandardRangeOfString:(NSString *)str __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));







// - (NSRange)rangeOfString:(NSString *)searchString;
// - (NSRange)rangeOfString:(NSString *)searchString options:(NSStringCompareOptions)mask;
// - (NSRange)rangeOfString:(NSString *)searchString options:(NSStringCompareOptions)mask range:(NSRange)rangeOfReceiverToSearch;
// - (NSRange)rangeOfString:(NSString *)searchString options:(NSStringCompareOptions)mask range:(NSRange)rangeOfReceiverToSearch locale:(nullable NSLocale *)locale __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (NSRange)rangeOfCharacterFromSet:(NSCharacterSet *)searchSet;
// - (NSRange)rangeOfCharacterFromSet:(NSCharacterSet *)searchSet options:(NSStringCompareOptions)mask;
// - (NSRange)rangeOfCharacterFromSet:(NSCharacterSet *)searchSet options:(NSStringCompareOptions)mask range:(NSRange)rangeOfReceiverToSearch;

// - (NSRange)rangeOfComposedCharacterSequenceAtIndex:(NSUInteger)index;
// - (NSRange)rangeOfComposedCharacterSequencesForRange:(NSRange)range __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (NSString *)stringByAppendingString:(NSString *)aString;
// - (NSString *)stringByAppendingFormat:(NSString *)format, ... __attribute__((format(__NSString__, 1, 2)));






// @property (readonly) double doubleValue;
// @property (readonly) float floatValue;
// @property (readonly) int intValue;
// @property (readonly) NSInteger integerValue __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly) long long longLongValue __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly) BOOL boolValue __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






// @property (readonly, copy) NSString *uppercaseString;
// @property (readonly, copy) NSString *lowercaseString;
// @property (readonly, copy) NSString *capitalizedString;



// @property (readonly, copy) NSString *localizedUppercaseString __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, copy) NSString *localizedLowercaseString __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, copy) NSString *localizedCapitalizedString __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (NSString *)uppercaseStringWithLocale:(nullable NSLocale *)locale __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (NSString *)lowercaseStringWithLocale:(nullable NSLocale *)locale __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (NSString *)capitalizedStringWithLocale:(nullable NSLocale *)locale __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));




// - (void)getLineStart:(nullable NSUInteger *)startPtr end:(nullable NSUInteger *)lineEndPtr contentsEnd:(nullable NSUInteger *)contentsEndPtr forRange:(NSRange)range;
// - (NSRange)lineRangeForRange:(NSRange)range;

// - (void)getParagraphStart:(nullable NSUInteger *)startPtr end:(nullable NSUInteger *)parEndPtr contentsEnd:(nullable NSUInteger *)contentsEndPtr forRange:(NSRange)range;
// - (NSRange)paragraphRangeForRange:(NSRange)range;

typedef NSUInteger NSStringEnumerationOptions; enum {

    NSStringEnumerationByLines = 0,
    NSStringEnumerationByParagraphs = 1,
    NSStringEnumerationByComposedCharacterSequences = 2,
    NSStringEnumerationByWords = 3,
    NSStringEnumerationBySentences = 4,

    NSStringEnumerationReverse = 1UL << 8,
    NSStringEnumerationSubstringNotRequired = 1UL << 9,
    NSStringEnumerationLocalized = 1UL << 10
};



// - (void)enumerateSubstringsInRange:(NSRange)range options:(NSStringEnumerationOptions)opts usingBlock:(void (^)(NSString * _Nullable substring, NSRange substringRange, NSRange enclosingRange, BOOL *stop))block __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)enumerateLinesUsingBlock:(void (^)(NSString *line, BOOL *stop))block __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));




// @property (nullable, readonly) const char *UTF8String __attribute__((objc_returns_inner_pointer));

// @property (readonly) NSStringEncoding fastestEncoding;
// @property (readonly) NSStringEncoding smallestEncoding;

// - (nullable NSData *)dataUsingEncoding:(NSStringEncoding)encoding allowLossyConversion:(BOOL)lossy;
// - (nullable NSData *)dataUsingEncoding:(NSStringEncoding)encoding;

// - (BOOL)canBeConvertedToEncoding:(NSStringEncoding)encoding;



// - (nullable const char *)cStringUsingEncoding:(NSStringEncoding)encoding __attribute__((objc_returns_inner_pointer));
// - (BOOL)getCString:(char *)buffer maxLength:(NSUInteger)maxBufferCount encoding:(NSStringEncoding)encoding;
// - (BOOL)getBytes:(nullable void *)buffer maxLength:(NSUInteger)maxBufferCount usedLength:(nullable NSUInteger *)usedBufferCount encoding:(NSStringEncoding)encoding options:(NSStringEncodingConversionOptions)options range:(NSRange)range remainingRange:(nullable NSRangePointer)leftover;



// - (NSUInteger)maximumLengthOfBytesUsingEncoding:(NSStringEncoding)enc;
// - (NSUInteger)lengthOfBytesUsingEncoding:(NSStringEncoding)enc;

@property (class, readonly) const NSStringEncoding *availableStringEncodings;

// + (NSString *)localizedNameOfStringEncoding:(NSStringEncoding)encoding;



@property (class, readonly) NSStringEncoding defaultCStringEncoding;



// @property (readonly, copy) NSString *decomposedStringWithCanonicalMapping;
// @property (readonly, copy) NSString *precomposedStringWithCanonicalMapping;
// @property (readonly, copy) NSString *decomposedStringWithCompatibilityMapping;
// @property (readonly, copy) NSString *precomposedStringWithCompatibilityMapping;

// - (NSArray<NSString *> *)componentsSeparatedByString:(NSString *)separator;
// - (NSArray<NSString *> *)componentsSeparatedByCharactersInSet:(NSCharacterSet *)separator __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (NSString *)stringByTrimmingCharactersInSet:(NSCharacterSet *)set;
// - (NSString *)stringByPaddingToLength:(NSUInteger)newLength withString:(NSString *)padString startingAtIndex:(NSUInteger)padIndex;



// - (NSString *)stringByFoldingWithOptions:(NSStringCompareOptions)options locale:(nullable NSLocale *)locale __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (NSString *)stringByReplacingOccurrencesOfString:(NSString *)target withString:(NSString *)replacement options:(NSStringCompareOptions)options range:(NSRange)searchRange __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (NSString *)stringByReplacingOccurrencesOfString:(NSString *)target withString:(NSString *)replacement __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (NSString *)stringByReplacingCharactersInRange:(NSRange)range withString:(NSString *)replacement __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

typedef NSString *NSStringTransform __attribute__((swift_wrapper(struct)));



// - (nullable NSString *)stringByApplyingTransform:(NSStringTransform)transform reverse:(BOOL)reverse __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern "C" NSStringTransform const NSStringTransformLatinToKatakana __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStringTransform const NSStringTransformLatinToHiragana __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStringTransform const NSStringTransformLatinToHangul __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStringTransform const NSStringTransformLatinToArabic __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStringTransform const NSStringTransformLatinToHebrew __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStringTransform const NSStringTransformLatinToThai __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStringTransform const NSStringTransformLatinToCyrillic __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStringTransform const NSStringTransformLatinToGreek __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStringTransform const NSStringTransformToLatin __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStringTransform const NSStringTransformMandarinToLatin __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStringTransform const NSStringTransformHiraganaToKatakana __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStringTransform const NSStringTransformFullwidthToHalfwidth __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStringTransform const NSStringTransformToXMLHex __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStringTransform const NSStringTransformToUnicodeName __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStringTransform const NSStringTransformStripCombiningMarks __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStringTransform const NSStringTransformStripDiacritics __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));




// - (BOOL)writeToURL:(NSURL *)url atomically:(BOOL)useAuxiliaryFile encoding:(NSStringEncoding)enc error:(NSError **)error;
// - (BOOL)writeToFile:(NSString *)path atomically:(BOOL)useAuxiliaryFile encoding:(NSStringEncoding)enc error:(NSError **)error;

// @property (readonly, copy) NSString *description;

// @property (readonly) NSUInteger hash;






// - (instancetype)initWithCharactersNoCopy:(unichar *)characters length:(NSUInteger)length freeWhenDone:(BOOL)freeBuffer;
// - (instancetype)initWithCharacters:(const unichar *)characters length:(NSUInteger)length;
// - (nullable instancetype)initWithUTF8String:(const char *)nullTerminatedCString;
// - (instancetype)initWithString:(NSString *)aString;
// - (instancetype)initWithFormat:(NSString *)format, ... __attribute__((format(__NSString__, 1, 2)));
// - (instancetype)initWithFormat:(NSString *)format arguments:(va_list)argList __attribute__((format(__NSString__, 1, 0)));
// - (instancetype)initWithFormat:(NSString *)format locale:(nullable id)locale, ... __attribute__((format(__NSString__, 1, 3)));
// - (instancetype)initWithFormat:(NSString *)format locale:(nullable id)locale arguments:(va_list)argList __attribute__((format(__NSString__, 1, 0)));
// - (nullable instancetype)initWithData:(NSData *)data encoding:(NSStringEncoding)encoding;
// - (nullable instancetype)initWithBytes:(const void *)bytes length:(NSUInteger)len encoding:(NSStringEncoding)encoding;
// - (nullable instancetype)initWithBytesNoCopy:(void *)bytes length:(NSUInteger)len encoding:(NSStringEncoding)encoding freeWhenDone:(BOOL)freeBuffer;

// + (instancetype)string;
// + (instancetype)stringWithString:(NSString *)string;
// + (instancetype)stringWithCharacters:(const unichar *)characters length:(NSUInteger)length;
// + (nullable instancetype)stringWithUTF8String:(const char *)nullTerminatedCString;
// + (instancetype)stringWithFormat:(NSString *)format, ... __attribute__((format(__NSString__, 1, 2)));
// + (instancetype)localizedStringWithFormat:(NSString *)format, ... __attribute__((format(__NSString__, 1, 2)));

// - (nullable instancetype)initWithCString:(const char *)nullTerminatedCString encoding:(NSStringEncoding)encoding;
// + (nullable instancetype)stringWithCString:(const char *)cString encoding:(NSStringEncoding)enc;



// - (nullable instancetype)initWithContentsOfURL:(NSURL *)url encoding:(NSStringEncoding)enc error:(NSError **)error;
// - (nullable instancetype)initWithContentsOfFile:(NSString *)path encoding:(NSStringEncoding)enc error:(NSError **)error;
// + (nullable instancetype)stringWithContentsOfURL:(NSURL *)url encoding:(NSStringEncoding)enc error:(NSError **)error;
// + (nullable instancetype)stringWithContentsOfFile:(NSString *)path encoding:(NSStringEncoding)enc error:(NSError **)error;



// - (nullable instancetype)initWithContentsOfURL:(NSURL *)url usedEncoding:(nullable NSStringEncoding *)enc error:(NSError **)error;
// - (nullable instancetype)initWithContentsOfFile:(NSString *)path usedEncoding:(nullable NSStringEncoding *)enc error:(NSError **)error;
// + (nullable instancetype)stringWithContentsOfURL:(NSURL *)url usedEncoding:(nullable NSStringEncoding *)enc error:(NSError **)error;
// + (nullable instancetype)stringWithContentsOfFile:(NSString *)path usedEncoding:(nullable NSStringEncoding *)enc error:(NSError **)error;

/* @end */


typedef NSString * NSStringEncodingDetectionOptionsKey __attribute__((swift_wrapper(enum)));

// @interface NSString (NSStringEncodingDetection)
#if 0
+ (NSStringEncoding)stringEncodingForData:(NSData *)data
                          encodingOptions:(nullable NSDictionary<NSStringEncodingDetectionOptionsKey, id> *)opts
                          convertedString:(NSString * _Nullable * _Nullable)string
                      usedLossyConversion:(nullable BOOL *)usedLossyConversion __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
#endif




extern "C" NSStringEncodingDetectionOptionsKey const NSStringEncodingDetectionSuggestedEncodingsKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStringEncodingDetectionOptionsKey const NSStringEncodingDetectionDisallowedEncodingsKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStringEncodingDetectionOptionsKey const NSStringEncodingDetectionUseOnlySuggestedEncodingsKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStringEncodingDetectionOptionsKey const NSStringEncodingDetectionAllowLossyKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStringEncodingDetectionOptionsKey const NSStringEncodingDetectionFromWindowsKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStringEncodingDetectionOptionsKey const NSStringEncodingDetectionLossySubstitutionKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStringEncodingDetectionOptionsKey const NSStringEncodingDetectionLikelyLanguageKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */



// @interface NSString (NSItemProvider) <NSItemProviderReading, NSItemProviderWriting>
/* @end */




#ifndef _REWRITER_typedef_NSMutableString
#define _REWRITER_typedef_NSMutableString
typedef struct objc_object NSMutableString;
typedef struct {} _objc_exc_NSMutableString;
#endif

struct NSMutableString_IMPL {
	struct NSString_IMPL NSString_IVARS;
};






// - (void)replaceCharactersInRange:(NSRange)range withString:(NSString *)aString;

/* @end */


// @interface NSMutableString (NSMutableStringExtensionMethods)



// - (void)insertString:(NSString *)aString atIndex:(NSUInteger)loc;
// - (void)deleteCharactersInRange:(NSRange)range;
// - (void)appendString:(NSString *)aString;
// - (void)appendFormat:(NSString *)format, ... __attribute__((format(__NSString__, 1, 2)));
// - (void)setString:(NSString *)aString;



// - (NSUInteger)replaceOccurrencesOfString:(NSString *)target withString:(NSString *)replacement options:(NSStringCompareOptions)options range:(NSRange)searchRange;



// - (BOOL)applyTransform:(NSStringTransform)transform reverse:(BOOL)reverse range:(NSRange)range updatedRange:(nullable NSRangePointer)resultingRange __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (NSMutableString *)initWithCapacity:(NSUInteger)capacity;
// + (NSMutableString *)stringWithCapacity:(NSUInteger)capacity;

/* @end */




extern "C" NSExceptionName const NSCharacterConversionException;
extern "C" NSExceptionName const NSParseErrorException;




// @interface NSString (NSExtendedStringPropertyListParsing)



// - (id)propertyList;
// - (nullable NSDictionary *)propertyListFromStringsFileFormat;

/* @end */


// @interface NSString (NSStringDeprecated)



// - (nullable const char *)cString __attribute__((objc_returns_inner_pointer)) __attribute__((availability(macos,introduced=10.0,deprecated=10.4,message="Use -cStringUsingEncoding: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Use -cStringUsingEncoding: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -cStringUsingEncoding: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -cStringUsingEncoding: instead")));
// - (nullable const char *)lossyCString __attribute__((objc_returns_inner_pointer)) __attribute__((availability(macos,introduced=10.0,deprecated=10.4,message="Use -cStringUsingEncoding: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Use -cStringUsingEncoding: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -cStringUsingEncoding: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -cStringUsingEncoding: instead")));
// - (NSUInteger)cStringLength __attribute__((availability(macos,introduced=10.0,deprecated=10.4,message="Use -lengthOfBytesUsingEncoding: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Use -lengthOfBytesUsingEncoding: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -lengthOfBytesUsingEncoding: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -lengthOfBytesUsingEncoding: instead")));
// - (void)getCString:(char *)bytes __attribute__((availability(macos,introduced=10.0,deprecated=10.4,message="Use -getCString:maxLength:encoding: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Use -getCString:maxLength:encoding: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -getCString:maxLength:encoding: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -getCString:maxLength:encoding: instead")));
// - (void)getCString:(char *)bytes maxLength:(NSUInteger)maxLength __attribute__((availability(macos,introduced=10.0,deprecated=10.4,message="Use -getCString:maxLength:encoding: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Use -getCString:maxLength:encoding: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -getCString:maxLength:encoding: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -getCString:maxLength:encoding: instead")));
// - (void)getCString:(char *)bytes maxLength:(NSUInteger)maxLength range:(NSRange)aRange remainingRange:(nullable NSRangePointer)leftoverRange __attribute__((availability(macos,introduced=10.0,deprecated=10.4,message="Use -getCString:maxLength:encoding: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Use -getCString:maxLength:encoding: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -getCString:maxLength:encoding: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -getCString:maxLength:encoding: instead")));

// - (BOOL)writeToFile:(NSString *)path atomically:(BOOL)useAuxiliaryFile __attribute__((availability(macos,introduced=10.0,deprecated=10.4,message="Use -writeToFile:atomically:error: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Use -writeToFile:atomically:error: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -writeToFile:atomically:error: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -writeToFile:atomically:error: instead")));
// - (BOOL)writeToURL:(NSURL *)url atomically:(BOOL)atomically __attribute__((availability(macos,introduced=10.0,deprecated=10.4,message="Use -writeToURL:atomically:error: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Use -writeToURL:atomically:error: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -writeToURL:atomically:error: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -writeToURL:atomically:error: instead")));

// - (nullable id)initWithContentsOfFile:(NSString *)path __attribute__((availability(macos,introduced=10.0,deprecated=10.4,message="Use -initWithContentsOfFile:encoding:error: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Use -initWithContentsOfFile:encoding:error: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -initWithContentsOfFile:encoding:error: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -initWithContentsOfFile:encoding:error: instead")));
// - (nullable id)initWithContentsOfURL:(NSURL *)url __attribute__((availability(macos,introduced=10.0,deprecated=10.4,message="Use -initWithContentsOfURL:encoding:error: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Use -initWithContentsOfURL:encoding:error: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -initWithContentsOfURL:encoding:error: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -initWithContentsOfURL:encoding:error: instead")));
// + (nullable id)stringWithContentsOfFile:(NSString *)path __attribute__((availability(macos,introduced=10.0,deprecated=10.4,message="Use +stringWithContentsOfFile:encoding:error: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Use +stringWithContentsOfFile:encoding:error: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use +stringWithContentsOfFile:encoding:error: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use +stringWithContentsOfFile:encoding:error: instead")));
// + (nullable id)stringWithContentsOfURL:(NSURL *)url __attribute__((availability(macos,introduced=10.0,deprecated=10.4,message="Use +stringWithContentsOfURL:encoding:error: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Use +stringWithContentsOfURL:encoding:error: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use +stringWithContentsOfURL:encoding:error: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use +stringWithContentsOfURL:encoding:error: instead")));

// - (nullable id)initWithCStringNoCopy:(char *)bytes length:(NSUInteger)length freeWhenDone:(BOOL)freeBuffer __attribute__((availability(macos,introduced=10.0,deprecated=10.4,message="Use -initWithCString:encoding: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Use -initWithCString:encoding: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -initWithCString:encoding: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -initWithCString:encoding: instead")));
// - (nullable id)initWithCString:(const char *)bytes length:(NSUInteger)length __attribute__((availability(macos,introduced=10.0,deprecated=10.4,message="Use -initWithCString:encoding: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Use -initWithCString:encoding: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -initWithCString:encoding: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -initWithCString:encoding: instead")));
// - (nullable id)initWithCString:(const char *)bytes __attribute__((availability(macos,introduced=10.0,deprecated=10.4,message="Use -initWithCString:encoding: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Use -initWithCString:encoding: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -initWithCString:encoding: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -initWithCString:encoding: instead")));
// + (nullable id)stringWithCString:(const char *)bytes length:(NSUInteger)length __attribute__((availability(macos,introduced=10.0,deprecated=10.4,message="Use +stringWithCString:encoding:"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Use +stringWithCString:encoding:"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use +stringWithCString:encoding:"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use +stringWithCString:encoding:")));
// + (nullable id)stringWithCString:(const char *)bytes __attribute__((availability(macos,introduced=10.0,deprecated=10.4,message="Use +stringWithCString:encoding: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Use +stringWithCString:encoding: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use +stringWithCString:encoding: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use +stringWithCString:encoding: instead")));



// - (void)getCharacters:(unichar *)buffer;

/* @end */


enum {
    NSProprietaryStringEncoding = 65536
};

#ifndef _REWRITER_typedef_NSSimpleCString
#define _REWRITER_typedef_NSSimpleCString
typedef struct objc_object NSSimpleCString;
typedef struct {} _objc_exc_NSSimpleCString;
#endif

struct NSSimpleCString_IMPL {
	struct NSString_IMPL NSString_IVARS;
	char *bytes;
	int numBytes;
	int _unused;
};

/* @end */



#ifndef _REWRITER_typedef_NSConstantString
#define _REWRITER_typedef_NSConstantString
typedef struct objc_object NSConstantString;
typedef struct {} _objc_exc_NSConstantString;
#endif

struct NSConstantString_IMPL {
	struct NSSimpleCString_IMPL NSSimpleCString_IVARS;
};

/* @end */

#pragma clang assume_nonnull end








// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSSet
#define _REWRITER_typedef_NSSet
typedef struct objc_object NSSet;
typedef struct {} _objc_exc_NSSet;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSURL
#define _REWRITER_typedef_NSURL
typedef struct objc_object NSURL;
typedef struct {} _objc_exc_NSURL;
#endif




#pragma clang assume_nonnull begin


#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

struct NSDictionary_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property (readonly) NSUInteger count;
// - (nullable ObjectType)objectForKey:(KeyType)aKey;
// - (NSEnumerator<KeyType> *)keyEnumerator;
// - (instancetype)init __attribute__((objc_designated_initializer));



// - (instancetype)initWithObjects:(const ObjectType _Nonnull [_Nullable])objects forKeys:(const KeyType <NSCopying> _Nonnull [_Nullable])keys count:(NSUInteger)cnt __attribute__((objc_designated_initializer));

// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

/* @end */


// @interface NSDictionary<KeyType, ObjectType> (NSExtendedDictionary)

// @property (readonly, copy) NSArray<KeyType> *allKeys;
// - (NSArray<KeyType> *)allKeysForObject:(ObjectType)anObject;
// @property (readonly, copy) NSArray<ObjectType> *allValues;
// @property (readonly, copy) NSString *description;
// @property (readonly, copy) NSString *descriptionInStringsFileFormat;
// - (NSString *)descriptionWithLocale:(nullable id)locale;
// - (NSString *)descriptionWithLocale:(nullable id)locale indent:(NSUInteger)level;
// - (BOOL)isEqualToDictionary:(NSDictionary<KeyType, ObjectType> *)otherDictionary;
// - (NSEnumerator<ObjectType> *)objectEnumerator;
// - (NSArray<ObjectType> *)objectsForKeys:(NSArray<KeyType> *)keys notFoundMarker:(ObjectType)marker;


// - (BOOL)writeToURL:(NSURL *)url error:(NSError **)error __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));


// - (NSArray<KeyType> *)keysSortedByValueUsingSelector:(SEL)comparator;

// - (void)getObjects:(ObjectType _Nonnull __attribute__((objc_ownership(none))) [_Nullable])objects andKeys:(KeyType _Nonnull __attribute__((objc_ownership(none))) [_Nullable])keys count:(NSUInteger)count __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(swift, unavailable, message="Use 'allKeys' and/or 'allValues' instead")));

// - (nullable ObjectType)objectForKeyedSubscript:(KeyType)key __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (void)enumerateKeysAndObjectsUsingBlock:(void (__attribute__((noescape)) ^)(KeyType key, ObjectType obj, BOOL *stop))block __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)enumerateKeysAndObjectsWithOptions:(NSEnumerationOptions)opts usingBlock:(void (__attribute__((noescape)) ^)(KeyType key, ObjectType obj, BOOL *stop))block __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (NSArray<KeyType> *)keysSortedByValueUsingComparator:(NSComparator __attribute__((noescape)))cmptr __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (NSArray<KeyType> *)keysSortedByValueWithOptions:(NSSortOptions)opts usingComparator:(NSComparator __attribute__((noescape)))cmptr __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (NSSet<KeyType> *)keysOfEntriesPassingTest:(BOOL (__attribute__((noescape)) ^)(KeyType key, ObjectType obj, BOOL *stop))predicate __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (NSSet<KeyType> *)keysOfEntriesWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (__attribute__((noescape)) ^)(KeyType key, ObjectType obj, BOOL *stop))predicate __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */


// @interface NSDictionary<KeyType, ObjectType> (NSDeprecated)

// - (void)getObjects:(ObjectType _Nonnull __attribute__((objc_ownership(none))) [_Nullable])objects andKeys:(KeyType _Nonnull __attribute__((objc_ownership(none))) [_Nullable])keys __attribute__((availability(swift, unavailable, message="Use 'allKeys' and/or 'allValues' instead"))) __attribute__((availability(macos,introduced=10.0,deprecated=10.13,message="Use -getObjects:andKeys:count: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=11.0,message="Use -getObjects:andKeys:count: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=4.0,message="Use -getObjects:andKeys:count: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=11.0,message="Use -getObjects:andKeys:count: instead")));


// + (nullable NSDictionary<KeyType, ObjectType> *)dictionaryWithContentsOfFile:(NSString *)path;
// + (nullable NSDictionary<KeyType, ObjectType> *)dictionaryWithContentsOfURL:(NSURL *)url;
// - (nullable NSDictionary<KeyType, ObjectType> *)initWithContentsOfFile:(NSString *)path;
// - (nullable NSDictionary<KeyType, ObjectType> *)initWithContentsOfURL:(NSURL *)url;

// - (BOOL)writeToFile:(NSString *)path atomically:(BOOL)useAuxiliaryFile;
// - (BOOL)writeToURL:(NSURL *)url atomically:(BOOL)atomically;
/* @end */


// @interface NSDictionary<KeyType, ObjectType> (NSDictionaryCreation)

// + (instancetype)dictionary;
// + (instancetype)dictionaryWithObject:(ObjectType)object forKey:(KeyType <NSCopying>)key;



// + (instancetype)dictionaryWithObjects:(const ObjectType _Nonnull [_Nullable])objects forKeys:(const KeyType <NSCopying> _Nonnull [_Nullable])keys count:(NSUInteger)cnt;


// + (instancetype)dictionaryWithObjectsAndKeys:(id)firstObject, ... __attribute__((sentinel(0,1))) __attribute__((availability(swift, unavailable, message="Use dictionary literals instead")));

// + (instancetype)dictionaryWithDictionary:(NSDictionary<KeyType, ObjectType> *)dict;
// + (instancetype)dictionaryWithObjects:(NSArray<ObjectType> *)objects forKeys:(NSArray<KeyType <NSCopying>> *)keys;

// - (instancetype)initWithObjectsAndKeys:(id)firstObject, ... __attribute__((sentinel(0,1)));
// - (instancetype)initWithDictionary:(NSDictionary<KeyType, ObjectType> *)otherDictionary;
// - (instancetype)initWithDictionary:(NSDictionary<KeyType, ObjectType> *)otherDictionary copyItems:(BOOL)flag;
// - (instancetype)initWithObjects:(NSArray<ObjectType> *)objects forKeys:(NSArray<KeyType <NSCopying>> *)keys;


// - (nullable NSDictionary<NSString *, ObjectType> *)initWithContentsOfURL:(NSURL *)url error:(NSError **)error __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));


// + (nullable NSDictionary<NSString *, ObjectType> *)dictionaryWithContentsOfURL:(NSURL *)url error:(NSError **)error __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(swift, unavailable, message="Use initializer instead")));

/* @end */





#ifndef _REWRITER_typedef_NSMutableDictionary
#define _REWRITER_typedef_NSMutableDictionary
typedef struct objc_object NSMutableDictionary;
typedef struct {} _objc_exc_NSMutableDictionary;
#endif

struct NSMutableDictionary_IMPL {
	struct NSDictionary_IMPL NSDictionary_IVARS;
};


// - (void)removeObjectForKey:(KeyType)aKey;
// - (void)setObject:(ObjectType)anObject forKey:(KeyType <NSCopying>)aKey;
// - (instancetype)init __attribute__((objc_designated_initializer));
// - (instancetype)initWithCapacity:(NSUInteger)numItems __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

/* @end */


// @interface NSMutableDictionary<KeyType, ObjectType> (NSExtendedMutableDictionary)

// - (void)addEntriesFromDictionary:(NSDictionary<KeyType, ObjectType> *)otherDictionary;
// - (void)removeAllObjects;
// - (void)removeObjectsForKeys:(NSArray<KeyType> *)keyArray;
// - (void)setDictionary:(NSDictionary<KeyType, ObjectType> *)otherDictionary;
// - (void)setObject:(nullable ObjectType)obj forKeyedSubscript:(KeyType <NSCopying>)key __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */


// @interface NSMutableDictionary<KeyType, ObjectType> (NSMutableDictionaryCreation)

// + (instancetype)dictionaryWithCapacity:(NSUInteger)numItems;

// + (nullable NSMutableDictionary<KeyType, ObjectType> *)dictionaryWithContentsOfFile:(NSString *)path;
// + (nullable NSMutableDictionary<KeyType, ObjectType> *)dictionaryWithContentsOfURL:(NSURL *)url;
// - (nullable NSMutableDictionary<KeyType, ObjectType> *)initWithContentsOfFile:(NSString *)path;
// - (nullable NSMutableDictionary<KeyType, ObjectType> *)initWithContentsOfURL:(NSURL *)url;

/* @end */


// @interface NSDictionary<KeyType, ObjectType> (NSSharedKeySetDictionary)
// + (id)sharedKeySetForKeys:(NSArray<KeyType <NSCopying>> *)keys __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */


// @interface NSMutableDictionary<KeyType, ObjectType> (NSSharedKeySetDictionary)







// + (NSMutableDictionary<KeyType, ObjectType> *)dictionaryWithSharedKeySet:(id)keyset __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */


// @interface NSDictionary<K, V> (NSGenericFastEnumeraiton) <NSFastEnumeration>
// - (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(K __attribute__((objc_ownership(none))) _Nullable [_Nonnull])buffer count:(NSUInteger)len;
/* @end */

#pragma clang assume_nonnull end







// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif




#pragma clang assume_nonnull begin


#ifndef _REWRITER_typedef_NSSet
#define _REWRITER_typedef_NSSet
typedef struct objc_object NSSet;
typedef struct {} _objc_exc_NSSet;
#endif

struct NSSet_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property (readonly) NSUInteger count;
// - (nullable ObjectType)member:(ObjectType)object;
// - (NSEnumerator<ObjectType> *)objectEnumerator;
// - (instancetype)init __attribute__((objc_designated_initializer));
// - (instancetype)initWithObjects:(const ObjectType _Nonnull [_Nullable])objects count:(NSUInteger)cnt __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

/* @end */


// @interface NSSet<ObjectType> (NSExtendedSet)

// @property (readonly, copy) NSArray<ObjectType> *allObjects;
// - (nullable ObjectType)anyObject;
// - (BOOL)containsObject:(ObjectType)anObject;
// @property (readonly, copy) NSString *description;
// - (NSString *)descriptionWithLocale:(nullable id)locale;
// - (BOOL)intersectsSet:(NSSet<ObjectType> *)otherSet;
// - (BOOL)isEqualToSet:(NSSet<ObjectType> *)otherSet;
// - (BOOL)isSubsetOfSet:(NSSet<ObjectType> *)otherSet;

// - (void)makeObjectsPerformSelector:(SEL)aSelector __attribute__((availability(swift, unavailable, message="Use enumerateObjectsUsingBlock: or a for loop instead")));
// - (void)makeObjectsPerformSelector:(SEL)aSelector withObject:(nullable id)argument __attribute__((availability(swift, unavailable, message="Use enumerateObjectsUsingBlock: or a for loop instead")));

// - (NSSet<ObjectType> *)setByAddingObject:(ObjectType)anObject __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (NSSet<ObjectType> *)setByAddingObjectsFromSet:(NSSet<ObjectType> *)other __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (NSSet<ObjectType> *)setByAddingObjectsFromArray:(NSArray<ObjectType> *)other __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (void)enumerateObjectsUsingBlock:(void (__attribute__((noescape)) ^)(ObjectType obj, BOOL *stop))block __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)enumerateObjectsWithOptions:(NSEnumerationOptions)opts usingBlock:(void (__attribute__((noescape)) ^)(ObjectType obj, BOOL *stop))block __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (NSSet<ObjectType> *)objectsPassingTest:(BOOL (__attribute__((noescape)) ^)(ObjectType obj, BOOL *stop))predicate __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (NSSet<ObjectType> *)objectsWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (__attribute__((noescape)) ^)(ObjectType obj, BOOL *stop))predicate __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */


// @interface NSSet<ObjectType> (NSSetCreation)

// + (instancetype)set;
// + (instancetype)setWithObject:(ObjectType)object;
// + (instancetype)setWithObjects:(const ObjectType _Nonnull [_Nonnull])objects count:(NSUInteger)cnt;
// + (instancetype)setWithObjects:(ObjectType)firstObj, ... __attribute__((sentinel(0,1)));
// + (instancetype)setWithSet:(NSSet<ObjectType> *)set;
// + (instancetype)setWithArray:(NSArray<ObjectType> *)array;

// - (instancetype)initWithObjects:(ObjectType)firstObj, ... __attribute__((sentinel(0,1)));
// - (instancetype)initWithSet:(NSSet<ObjectType> *)set;
// - (instancetype)initWithSet:(NSSet<ObjectType> *)set copyItems:(BOOL)flag;
// - (instancetype)initWithArray:(NSArray<ObjectType> *)array;

/* @end */





#ifndef _REWRITER_typedef_NSMutableSet
#define _REWRITER_typedef_NSMutableSet
typedef struct objc_object NSMutableSet;
typedef struct {} _objc_exc_NSMutableSet;
#endif

struct NSMutableSet_IMPL {
	struct NSSet_IMPL NSSet_IVARS;
};


// - (void)addObject:(ObjectType)object;
// - (void)removeObject:(ObjectType)object;
// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));
// - (instancetype)init __attribute__((objc_designated_initializer));
// - (instancetype)initWithCapacity:(NSUInteger)numItems __attribute__((objc_designated_initializer));

/* @end */


// @interface NSMutableSet<ObjectType> (NSExtendedMutableSet)

// - (void)addObjectsFromArray:(NSArray<ObjectType> *)array;
// - (void)intersectSet:(NSSet<ObjectType> *)otherSet;
// - (void)minusSet:(NSSet<ObjectType> *)otherSet;
// - (void)removeAllObjects;
// - (void)unionSet:(NSSet<ObjectType> *)otherSet;

// - (void)setSet:(NSSet<ObjectType> *)otherSet;

/* @end */


// @interface NSMutableSet<ObjectType> (NSMutableSetCreation)

// + (instancetype)setWithCapacity:(NSUInteger)numItems;

/* @end */





#ifndef _REWRITER_typedef_NSCountedSet
#define _REWRITER_typedef_NSCountedSet
typedef struct objc_object NSCountedSet;
typedef struct {} _objc_exc_NSCountedSet;
#endif

struct NSCountedSet_IMPL {
	struct NSMutableSet_IMPL NSMutableSet_IVARS;
	__strong id _table;
	void *_reserved;
};


// - (instancetype)initWithCapacity:(NSUInteger)numItems __attribute__((objc_designated_initializer));

// - (instancetype)initWithArray:(NSArray<ObjectType> *)array;
// - (instancetype)initWithSet:(NSSet<ObjectType> *)set;

// - (NSUInteger)countForObject:(ObjectType)object;

// - (NSEnumerator<ObjectType> *)objectEnumerator;
// - (void)addObject:(ObjectType)object;
// - (void)removeObject:(ObjectType)object;

/* @end */

#pragma clang assume_nonnull end
// @class NSDictionary;
#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

#ifndef _REWRITER_typedef_NSMutableDictionary
#define _REWRITER_typedef_NSMutableDictionary
typedef struct objc_object NSMutableDictionary;
typedef struct {} _objc_exc_NSMutableDictionary;
#endif

#ifndef _REWRITER_typedef_NSMutableSet
#define _REWRITER_typedef_NSMutableSet
typedef struct objc_object NSMutableSet;
typedef struct {} _objc_exc_NSMutableSet;
#endif

#ifndef _REWRITER_typedef_NSURL
#define _REWRITER_typedef_NSURL
typedef struct objc_object NSURL;
typedef struct {} _objc_exc_NSURL;
#endif

#ifndef _REWRITER_typedef_NSUUID
#define _REWRITER_typedef_NSUUID
typedef struct objc_object NSUUID;
typedef struct {} _objc_exc_NSUUID;
#endif

#ifndef _REWRITER_typedef_NSXPCConnection
#define _REWRITER_typedef_NSXPCConnection
typedef struct objc_object NSXPCConnection;
typedef struct {} _objc_exc_NSXPCConnection;
#endif

#ifndef _REWRITER_typedef_NSLock
#define _REWRITER_typedef_NSLock
typedef struct objc_object NSLock;
typedef struct {} _objc_exc_NSLock;
#endif


typedef NSString * NSProgressKind __attribute__((swift_wrapper(struct)));
typedef NSString * NSProgressUserInfoKey __attribute__((swift_wrapper(struct)));
typedef NSString * NSProgressFileOperationKind __attribute__((swift_wrapper(struct)));

#pragma clang assume_nonnull begin
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0)))

#ifndef _REWRITER_typedef_NSProgress
#define _REWRITER_typedef_NSProgress
typedef struct objc_object NSProgress;
typedef struct {} _objc_exc_NSProgress;
#endif

struct NSProgress_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSProgress *__weak _parent;
	int64_t _reserved4;
	__strong id _values;
	void (*_resumingHandler)();
	void (*_cancellationHandler)();
	void (*_pausingHandler)();
	void (*_prioritizationHandler)();
	uint64_t _flags;
	__strong id _userInfoProxy;
	NSString *__strong _publisherID;
	__strong id _reserved5;
	NSInteger _reserved6;
	NSInteger _reserved7;
	NSInteger _reserved8;
	NSMutableDictionary *__strong _acknowledgementHandlersByLowercaseBundleID;
	NSMutableDictionary *__strong _lastNotificationTimesByKey;
	NSMutableDictionary *__strong _userInfoLastNotificationTimesByKey;
	NSLock *__strong _lock;
	NSMutableSet *__strong _children;
};




// + (nullable NSProgress *)currentProgress;





// + (NSProgress *)progressWithTotalUnitCount:(int64_t)unitCount;



// + (NSProgress *)discreteProgressWithTotalUnitCount:(int64_t)unitCount __attribute__((availability(ios,introduced=9_0)));



// + (NSProgress *)progressWithTotalUnitCount:(int64_t)unitCount parent:(NSProgress *)parent pendingUnitCount:(int64_t)portionOfParentTotalUnitCount __attribute__((availability(ios,introduced=9_0)));



// - (instancetype)initWithParent:(nullable NSProgress *)parentProgressOrNil userInfo:(nullable NSDictionary<NSProgressUserInfoKey, id> *)userInfoOrNil __attribute__((objc_designated_initializer));





// - (void)becomeCurrentWithPendingUnitCount:(int64_t)unitCount;



// - (void)performAsCurrentWithPendingUnitCount:(int64_t)unitCount usingBlock:(void (__attribute__((noescape)) ^)(void))work __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((swift_private));



// - (void)resignCurrent;



// - (void)addChild:(NSProgress *)child withPendingUnitCount:(int64_t)inUnitCount __attribute__((availability(ios,introduced=9_0)));







// @property int64_t totalUnitCount;
// @property int64_t completedUnitCount;
// @property (null_resettable, copy) NSString *localizedDescription;
// @property (null_resettable, copy) NSString *localizedAdditionalDescription;



// @property (getter=isCancellable) BOOL cancellable;
// @property (getter=isPausable) BOOL pausable;



// @property (readonly, getter=isCancelled) BOOL cancelled;
// @property (readonly, getter=isPaused) BOOL paused;



// @property (nullable, copy) void (^cancellationHandler)(void);



// @property (nullable, copy) void (^pausingHandler)(void);



// @property (nullable, copy) void (^resumingHandler)(void) __attribute__((availability(ios,introduced=9_0)));



// - (void)setUserInfoObject:(nullable id)objectOrNil forKey:(NSProgressUserInfoKey)key;





// @property (readonly, getter=isIndeterminate) BOOL indeterminate;



// @property (readonly) double fractionCompleted;



// @property (readonly, getter=isFinished) BOOL finished;




// - (void)cancel;



// - (void)pause;



// - (void)resume __attribute__((availability(ios,introduced=9_0)));



// @property (readonly, copy) NSDictionary<NSProgressUserInfoKey, id> *userInfo;



// @property (nullable, copy) NSProgressKind kind;





// @property (nullable, copy) NSNumber *estimatedTimeRemaining __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((swift_private));





// @property (nullable, copy) NSNumber *throughput __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((swift_private));






// @property (nullable, copy) NSProgressFileOperationKind fileOperationKind __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));






// @property (nullable, copy) NSURL *fileURL __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));






// @property (nullable, copy) NSNumber *fileTotalCount __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((swift_private));






// @property (nullable, copy) NSNumber *fileCompletedCount __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((swift_private));
// - (void)publish __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));



// - (void)unpublish __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));



typedef void (*NSProgressUnpublishingHandler)(void);
typedef _Nullable NSProgressUnpublishingHandler (*NSProgressPublishingHandler)(NSProgress *progress);



// + (id)addSubscriberForFileURL:(NSURL *)url withPublishingHandler:(NSProgressPublishingHandler)publishingHandler __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));



// + (void)removeSubscriber:(id)subscriber __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));





// @property (readonly, getter=isOld) BOOL old __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

/* @end */




// @protocol NSProgressReporting <NSObject>
// @property (readonly) NSProgress *progress;
/* @end */






extern "C" NSProgressUserInfoKey const NSProgressEstimatedTimeRemainingKey __attribute__((availability(ios,introduced=7_0)));



extern "C" NSProgressUserInfoKey const NSProgressThroughputKey __attribute__((availability(ios,introduced=7_0)));





extern "C" NSProgressKind const NSProgressKindFile __attribute__((availability(ios,introduced=7_0)));



extern "C" NSProgressUserInfoKey const NSProgressFileOperationKindKey __attribute__((availability(ios,introduced=7_0)));



extern "C" NSProgressFileOperationKind const NSProgressFileOperationKindDownloading __attribute__((availability(ios,introduced=7_0)));
extern "C" NSProgressFileOperationKind const NSProgressFileOperationKindDecompressingAfterDownloading __attribute__((availability(ios,introduced=7_0)));
extern "C" NSProgressFileOperationKind const NSProgressFileOperationKindReceiving __attribute__((availability(ios,introduced=7_0)));
extern "C" NSProgressFileOperationKind const NSProgressFileOperationKindCopying __attribute__((availability(ios,introduced=7_0)));



extern "C" NSProgressUserInfoKey const NSProgressFileURLKey __attribute__((availability(ios,introduced=7_0)));



extern "C" NSProgressUserInfoKey const NSProgressFileTotalCountKey __attribute__((availability(ios,introduced=7_0)));
extern "C" NSProgressUserInfoKey const NSProgressFileCompletedCountKey __attribute__((availability(ios,introduced=7_0)));



extern "C" NSProgressUserInfoKey const NSProgressFileAnimationImageKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSProgressUserInfoKey const NSProgressFileAnimationImageOriginalRectKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));



extern "C" NSProgressUserInfoKey const NSProgressFileIconKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
#pragma clang assume_nonnull end






typedef NSString *NSNotificationName __attribute__((swift_wrapper(struct)));

// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

#ifndef _REWRITER_typedef_NSOperationQueue
#define _REWRITER_typedef_NSOperationQueue
typedef struct objc_object NSOperationQueue;
typedef struct {} _objc_exc_NSOperationQueue;
#endif


#pragma clang assume_nonnull begin




#ifndef _REWRITER_typedef_NSNotification
#define _REWRITER_typedef_NSNotification
typedef struct objc_object NSNotification;
typedef struct {} _objc_exc_NSNotification;
#endif

struct NSNotification_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property (readonly, copy) NSNotificationName name;
// @property (nullable, readonly, retain) id object;
// @property (nullable, readonly, copy) NSDictionary *userInfo;

// - (instancetype)initWithName:(NSNotificationName)name object:(nullable id)object userInfo:(nullable NSDictionary *)userInfo __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

/* @end */


// @interface NSNotification (NSNotificationCreation)

// + (instancetype)notificationWithName:(NSNotificationName)aName object:(nullable id)anObject;
// + (instancetype)notificationWithName:(NSNotificationName)aName object:(nullable id)anObject userInfo:(nullable NSDictionary *)aUserInfo;

// - (instancetype)init ;

/* @end */





#ifndef _REWRITER_typedef_NSNotificationCenter
#define _REWRITER_typedef_NSNotificationCenter
typedef struct objc_object NSNotificationCenter;
typedef struct {} _objc_exc_NSNotificationCenter;
#endif

struct NSNotificationCenter_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_impl;
	void *_callback;
	void *_pad[11];
};


@property (class, readonly, strong) NSNotificationCenter *defaultCenter;

// - (void)addObserver:(id)observer selector:(SEL)aSelector name:(nullable NSNotificationName)aName object:(nullable id)anObject;

// - (void)postNotification:(NSNotification *)notification;
// - (void)postNotificationName:(NSNotificationName)aName object:(nullable id)anObject;
// - (void)postNotificationName:(NSNotificationName)aName object:(nullable id)anObject userInfo:(nullable NSDictionary *)aUserInfo;

// - (void)removeObserver:(id)observer;
// - (void)removeObserver:(id)observer name:(nullable NSNotificationName)aName object:(nullable id)anObject;

// - (id <NSObject>)addObserverForName:(nullable NSNotificationName)name object:(nullable id)obj queue:(nullable NSOperationQueue *)queue usingBlock:(void (^)(NSNotification *note))block __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



/* @end */

#pragma clang assume_nonnull end

// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSURL
#define _REWRITER_typedef_NSURL
typedef struct objc_object NSURL;
typedef struct {} _objc_exc_NSURL;
#endif

#ifndef _REWRITER_typedef_NSError
#define _REWRITER_typedef_NSError
typedef struct objc_object NSError;
typedef struct {} _objc_exc_NSError;
#endif

#ifndef _REWRITER_typedef_NSUUID
#define _REWRITER_typedef_NSUUID
typedef struct objc_object NSUUID;
typedef struct {} _objc_exc_NSUUID;
#endif

#ifndef _REWRITER_typedef_NSLock
#define _REWRITER_typedef_NSLock
typedef struct objc_object NSLock;
typedef struct {} _objc_exc_NSLock;
#endif

#ifndef _REWRITER_typedef_NSNumber
#define _REWRITER_typedef_NSNumber
typedef struct objc_object NSNumber;
typedef struct {} _objc_exc_NSNumber;
#endif


#pragma clang assume_nonnull begin




#ifndef _REWRITER_typedef_NSBundle
#define _REWRITER_typedef_NSBundle
typedef struct objc_object NSBundle;
typedef struct {} _objc_exc_NSBundle;
#endif

struct NSBundle_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSUInteger _flags;
	__strong id _cfBundle;
	NSUInteger _reserved2;
	__unsafe_unretained Class _principalClass;
	__strong id _initialPath;
	__strong id _resolvedPath;
	__strong id _reserved3;
	__strong id _lock;
};



@property (class, readonly, strong) NSBundle *mainBundle;

// + (nullable instancetype)bundleWithPath:(NSString *)path;
// - (nullable instancetype)initWithPath:(NSString *)path __attribute__((objc_designated_initializer));

// + (nullable instancetype)bundleWithURL:(NSURL *)url __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (nullable instancetype)initWithURL:(NSURL *)url __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// + (NSBundle *)bundleForClass:(Class)aClass;
// + (nullable NSBundle *)bundleWithIdentifier:(NSString *)identifier;

@property (class, readonly, copy) NSArray<NSBundle *> *allBundles;
@property (class, readonly, copy) NSArray<NSBundle *> *allFrameworks;


// - (BOOL)load;
// @property (readonly, getter=isLoaded) BOOL loaded;
// - (BOOL)unload;

// - (BOOL)preflightAndReturnError:(NSError **)error __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (BOOL)loadAndReturnError:(NSError **)error __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


// @property (readonly, copy) NSURL *bundleURL __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (nullable, readonly, copy) NSURL *resourceURL __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (nullable, readonly, copy) NSURL *executableURL __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (nullable NSURL *)URLForAuxiliaryExecutable:(NSString *)executableName __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (nullable, readonly, copy) NSURL *privateFrameworksURL __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (nullable, readonly, copy) NSURL *sharedFrameworksURL __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (nullable, readonly, copy) NSURL *sharedSupportURL __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (nullable, readonly, copy) NSURL *builtInPlugInsURL __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (nullable, readonly, copy) NSURL *appStoreReceiptURL __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (readonly, copy) NSString *bundlePath;
// @property (nullable, readonly, copy) NSString *resourcePath;
// @property (nullable, readonly, copy) NSString *executablePath;
// - (nullable NSString *)pathForAuxiliaryExecutable:(NSString *)executableName;

// @property (nullable, readonly, copy) NSString *privateFrameworksPath;
// @property (nullable, readonly, copy) NSString *sharedFrameworksPath;
// @property (nullable, readonly, copy) NSString *sharedSupportPath;
// @property (nullable, readonly, copy) NSString *builtInPlugInsPath;



// + (nullable NSURL *)URLForResource:(nullable NSString *)name withExtension:(nullable NSString *)ext subdirectory:(nullable NSString *)subpath inBundleWithURL:(NSURL *)bundleURL __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (nullable NSArray<NSURL *> *)URLsForResourcesWithExtension:(nullable NSString *)ext subdirectory:(nullable NSString *)subpath inBundleWithURL:(NSURL *)bundleURL __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (nullable NSURL *)URLForResource:(nullable NSString *)name withExtension:(nullable NSString *)ext __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (nullable NSURL *)URLForResource:(nullable NSString *)name withExtension:(nullable NSString *)ext subdirectory:(nullable NSString *)subpath __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (nullable NSURL *)URLForResource:(nullable NSString *)name withExtension:(nullable NSString *)ext subdirectory:(nullable NSString *)subpath localization:(nullable NSString *)localizationName __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (nullable NSArray<NSURL *> *)URLsForResourcesWithExtension:(nullable NSString *)ext subdirectory:(nullable NSString *)subpath __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (nullable NSArray<NSURL *> *)URLsForResourcesWithExtension:(nullable NSString *)ext subdirectory:(nullable NSString *)subpath localization:(nullable NSString *)localizationName __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// + (nullable NSString *)pathForResource:(nullable NSString *)name ofType:(nullable NSString *)ext inDirectory:(NSString *)bundlePath;
// + (NSArray<NSString *> *)pathsForResourcesOfType:(nullable NSString *)ext inDirectory:(NSString *)bundlePath;

// - (nullable NSString *)pathForResource:(nullable NSString *)name ofType:(nullable NSString *)ext;
// - (nullable NSString *)pathForResource:(nullable NSString *)name ofType:(nullable NSString *)ext inDirectory:(nullable NSString *)subpath;
// - (nullable NSString *)pathForResource:(nullable NSString *)name ofType:(nullable NSString *)ext inDirectory:(nullable NSString *)subpath forLocalization:(nullable NSString *)localizationName;

// - (NSArray<NSString *> *)pathsForResourcesOfType:(nullable NSString *)ext inDirectory:(nullable NSString *)subpath;
// - (NSArray<NSString *> *)pathsForResourcesOfType:(nullable NSString *)ext inDirectory:(nullable NSString *)subpath forLocalization:(nullable NSString *)localizationName;


// - (NSString *)localizedStringForKey:(NSString *)key value:(nullable NSString *)value table:(nullable NSString *)tableName __attribute__ ((format_arg(1)));


// @property (nullable, readonly, copy) NSString *bundleIdentifier;
// @property (nullable, readonly, copy) NSDictionary<NSString *, id> *infoDictionary;
// @property (nullable, readonly, copy) NSDictionary<NSString *, id> *localizedInfoDictionary;
// - (nullable id)objectForInfoDictionaryKey:(NSString *)key;
// - (nullable Class)classNamed:(NSString *)className;
// @property (nullable, readonly) Class principalClass;


// @property (readonly, copy) NSArray<NSString *> *preferredLocalizations;

// @property (readonly, copy) NSArray<NSString *> *localizations;
// @property (nullable, readonly, copy) NSString *developmentLocalization;

// + (NSArray<NSString *> *)preferredLocalizationsFromArray:(NSArray<NSString *> *)localizationsArray;
// + (NSArray<NSString *> *)preferredLocalizationsFromArray:(NSArray<NSString *> *)localizationsArray forPreferences:(nullable NSArray<NSString *> *)preferencesArray;


enum {
    NSBundleExecutableArchitectureI386 = 0x00000007,
    NSBundleExecutableArchitecturePPC = 0x00000012,
    NSBundleExecutableArchitectureX86_64 = 0x01000007,
    NSBundleExecutableArchitecturePPC64 = 0x01000012
};

// @property (nullable, readonly, copy) NSArray<NSNumber *> *executableArchitectures __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */

// @interface NSString (NSBundleExtensionMethods)



// - (NSString *)variantFittingPresentationWidth:(NSInteger)width __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */


extern "C" NSNotificationName const NSBundleDidLoadNotification;
extern "C" NSString * const NSLoadedClasses;
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0)))

#ifndef _REWRITER_typedef_NSBundleResourceRequest
#define _REWRITER_typedef_NSBundleResourceRequest
typedef struct objc_object NSBundleResourceRequest;
typedef struct {} _objc_exc_NSBundleResourceRequest;
#endif

struct NSBundleResourceRequest_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)init __attribute__((unavailable));




// - (instancetype)initWithTags:(NSSet<NSString *> *)tags;
// - (instancetype)initWithTags:(NSSet<NSString *> *)tags bundle:(NSBundle *)bundle __attribute__((objc_designated_initializer));






// @property double loadingPriority;




// @property (readonly, copy) NSSet<NSString *> *tags;




// @property (readonly, strong) NSBundle *bundle;
// - (void)beginAccessingResourcesWithCompletionHandler:(void (^)(NSError * _Nullable error))completionHandler;






// - (void)conditionallyBeginAccessingResourcesWithCompletionHandler:(void (^)(BOOL resourcesAvailable))completionHandler;




// - (void)endAccessingResources;




// @property (readonly, strong) NSProgress *progress;

/* @end */


// @interface NSBundle (NSBundleResourceRequestAdditions)







// - (void)setPreservationPriority:(double)priority forTags:(NSSet<NSString *> *)tags __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));
// - (double)preservationPriorityForTag:(NSString *)tag __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));

/* @end */

extern "C" NSNotificationName const NSBundleResourceRequestLowDiskSpaceNotification __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));



extern "C" double const NSBundleResourceRequestLoadingPriorityUrgent __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));
#pragma clang assume_nonnull end







enum {
    NS_UnknownByteOrder = CFByteOrderUnknown,
    NS_LittleEndian = CFByteOrderLittleEndian,
    NS_BigEndian = CFByteOrderBigEndian
};

static __inline__ __attribute__((always_inline)) long NSHostByteOrder(void) {
    return CFByteOrderGetCurrent();
}

static __inline__ __attribute__((always_inline)) unsigned short NSSwapShort(unsigned short inv) {
    return CFSwapInt16(inv);
}

static __inline__ __attribute__((always_inline)) unsigned int NSSwapInt(unsigned int inv) {
    return CFSwapInt32(inv);
}

static __inline__ __attribute__((always_inline)) unsigned long NSSwapLong(unsigned long inv) {

    return CFSwapInt64(inv);



}

static __inline__ __attribute__((always_inline)) unsigned long long NSSwapLongLong(unsigned long long inv) {
    return CFSwapInt64(inv);
}

static __inline__ __attribute__((always_inline)) unsigned short NSSwapBigShortToHost(unsigned short x) {
    return CFSwapInt16BigToHost(x);
}

static __inline__ __attribute__((always_inline)) unsigned int NSSwapBigIntToHost(unsigned int x) {
    return CFSwapInt32BigToHost(x);
}

static __inline__ __attribute__((always_inline)) unsigned long NSSwapBigLongToHost(unsigned long x) {

    return CFSwapInt64BigToHost(x);



}

static __inline__ __attribute__((always_inline)) unsigned long long NSSwapBigLongLongToHost(unsigned long long x) {
    return CFSwapInt64BigToHost(x);
}

static __inline__ __attribute__((always_inline)) unsigned short NSSwapHostShortToBig(unsigned short x) {
    return CFSwapInt16HostToBig(x);
}

static __inline__ __attribute__((always_inline)) unsigned int NSSwapHostIntToBig(unsigned int x) {
    return CFSwapInt32HostToBig(x);
}

static __inline__ __attribute__((always_inline)) unsigned long NSSwapHostLongToBig(unsigned long x) {

    return CFSwapInt64HostToBig(x);



}

static __inline__ __attribute__((always_inline)) unsigned long long NSSwapHostLongLongToBig(unsigned long long x) {
    return CFSwapInt64HostToBig(x);
}

static __inline__ __attribute__((always_inline)) unsigned short NSSwapLittleShortToHost(unsigned short x) {
    return CFSwapInt16LittleToHost(x);
}

static __inline__ __attribute__((always_inline)) unsigned int NSSwapLittleIntToHost(unsigned int x) {
    return CFSwapInt32LittleToHost(x);
}

static __inline__ __attribute__((always_inline)) unsigned long NSSwapLittleLongToHost(unsigned long x) {

    return CFSwapInt64LittleToHost(x);



}

static __inline__ __attribute__((always_inline)) unsigned long long NSSwapLittleLongLongToHost(unsigned long long x) {
    return CFSwapInt64LittleToHost(x);
}

static __inline__ __attribute__((always_inline)) unsigned short NSSwapHostShortToLittle(unsigned short x) {
    return CFSwapInt16HostToLittle(x);
}

static __inline__ __attribute__((always_inline)) unsigned int NSSwapHostIntToLittle(unsigned int x) {
    return CFSwapInt32HostToLittle(x);
}

static __inline__ __attribute__((always_inline)) unsigned long NSSwapHostLongToLittle(unsigned long x) {

    return CFSwapInt64HostToLittle(x);



}

static __inline__ __attribute__((always_inline)) unsigned long long NSSwapHostLongLongToLittle(unsigned long long x) {
    return CFSwapInt64HostToLittle(x);
}


typedef struct {unsigned int v;} NSSwappedFloat;
typedef struct {unsigned long long v;} NSSwappedDouble;

static __inline__ __attribute__((always_inline)) NSSwappedFloat NSConvertHostFloatToSwapped(float x) {
    union fconv {
 float number;
 NSSwappedFloat sf;
    };
    return ((union fconv *)&x)->sf;
}

static __inline__ __attribute__((always_inline)) float NSConvertSwappedFloatToHost(NSSwappedFloat x) {
    union fconv {
 float number;
 NSSwappedFloat sf;
    };
    return ((union fconv *)&x)->number;
}

static __inline__ __attribute__((always_inline)) NSSwappedDouble NSConvertHostDoubleToSwapped(double x) {
    union dconv {
 double number;
 NSSwappedDouble sd;
    };
    return ((union dconv *)&x)->sd;
}

static __inline__ __attribute__((always_inline)) double NSConvertSwappedDoubleToHost(NSSwappedDouble x) {
    union dconv {
 double number;
 NSSwappedDouble sd;
    };
    return ((union dconv *)&x)->number;
}

static __inline__ __attribute__((always_inline)) NSSwappedFloat NSSwapFloat(NSSwappedFloat x) {
    x.v = NSSwapInt(x.v);
    return x;
}

static __inline__ __attribute__((always_inline)) NSSwappedDouble NSSwapDouble(NSSwappedDouble x) {
    x.v = NSSwapLongLong(x.v);
    return x;
}
static __inline__ __attribute__((always_inline)) double NSSwapBigDoubleToHost(NSSwappedDouble x) {
    return NSConvertSwappedDoubleToHost(NSSwapDouble(x));
}

static __inline__ __attribute__((always_inline)) float NSSwapBigFloatToHost(NSSwappedFloat x) {
    return NSConvertSwappedFloatToHost(NSSwapFloat(x));
}

static __inline__ __attribute__((always_inline)) NSSwappedDouble NSSwapHostDoubleToBig(double x) {
    return NSSwapDouble(NSConvertHostDoubleToSwapped(x));
}

static __inline__ __attribute__((always_inline)) NSSwappedFloat NSSwapHostFloatToBig(float x) {
    return NSSwapFloat(NSConvertHostFloatToSwapped(x));
}

static __inline__ __attribute__((always_inline)) double NSSwapLittleDoubleToHost(NSSwappedDouble x) {
    return NSConvertSwappedDoubleToHost(x);
}

static __inline__ __attribute__((always_inline)) float NSSwapLittleFloatToHost(NSSwappedFloat x) {
    return NSConvertSwappedFloatToHost(x);
}

static __inline__ __attribute__((always_inline)) NSSwappedDouble NSSwapHostDoubleToLittle(double x) {
    return NSConvertHostDoubleToSwapped(x);
}

static __inline__ __attribute__((always_inline)) NSSwappedFloat NSSwapHostFloatToLittle(float x) {
    return NSConvertHostFloatToSwapped(x);
}













// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif


#pragma clang assume_nonnull begin

extern "C" NSNotificationName const NSSystemClockDidChangeNotification __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

typedef double NSTimeInterval;




#ifndef _REWRITER_typedef_NSDate
#define _REWRITER_typedef_NSDate
typedef struct objc_object NSDate;
typedef struct {} _objc_exc_NSDate;
#endif

struct NSDate_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property (readonly) NSTimeInterval timeIntervalSinceReferenceDate;

// - (instancetype)init __attribute__((objc_designated_initializer));
// - (instancetype)initWithTimeIntervalSinceReferenceDate:(NSTimeInterval)ti __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

/* @end */


// @interface NSDate (NSExtendedDate)

// - (NSTimeInterval)timeIntervalSinceDate:(NSDate *)anotherDate;
// @property (readonly) NSTimeInterval timeIntervalSinceNow;
// @property (readonly) NSTimeInterval timeIntervalSince1970;

// - (id)addTimeInterval:(NSTimeInterval)seconds __attribute__((availability(macos,introduced=10.0,deprecated=10.6,message="Use dateByAddingTimeInterval instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=4.0,message="Use dateByAddingTimeInterval instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use dateByAddingTimeInterval instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use dateByAddingTimeInterval instead")));
// - (instancetype)dateByAddingTimeInterval:(NSTimeInterval)ti __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (NSDate *)earlierDate:(NSDate *)anotherDate;
// - (NSDate *)laterDate:(NSDate *)anotherDate;
// - (NSComparisonResult)compare:(NSDate *)other;
// - (BOOL)isEqualToDate:(NSDate *)otherDate;

// @property (readonly, copy) NSString *description;
// - (NSString *)descriptionWithLocale:(nullable id)locale;

@property (class, readonly) NSTimeInterval timeIntervalSinceReferenceDate;

/* @end */


// @interface NSDate (NSDateCreation)

// + (instancetype)date;
// + (instancetype)dateWithTimeIntervalSinceNow:(NSTimeInterval)secs;
// + (instancetype)dateWithTimeIntervalSinceReferenceDate:(NSTimeInterval)ti;
// + (instancetype)dateWithTimeIntervalSince1970:(NSTimeInterval)secs;
// + (instancetype)dateWithTimeInterval:(NSTimeInterval)secsToBeAdded sinceDate:(NSDate *)date;

@property (class, readonly, copy) NSDate *distantFuture;
@property (class, readonly, copy) NSDate *distantPast;

// - (instancetype)initWithTimeIntervalSinceNow:(NSTimeInterval)secs;
// - (instancetype)initWithTimeIntervalSince1970:(NSTimeInterval)secs;
// - (instancetype)initWithTimeInterval:(NSTimeInterval)secsToBeAdded sinceDate:(NSDate *)date;

/* @end */

#pragma clang assume_nonnull end



// @class NSDateComponents;
#ifndef _REWRITER_typedef_NSDateComponents
#define _REWRITER_typedef_NSDateComponents
typedef struct objc_object NSDateComponents;
typedef struct {} _objc_exc_NSDateComponents;
#endif

#ifndef _REWRITER_typedef_NSLocale
#define _REWRITER_typedef_NSLocale
typedef struct objc_object NSLocale;
typedef struct {} _objc_exc_NSLocale;
#endif

#ifndef _REWRITER_typedef_NSTimeZone
#define _REWRITER_typedef_NSTimeZone
typedef struct objc_object NSTimeZone;
typedef struct {} _objc_exc_NSTimeZone;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif


#pragma clang assume_nonnull begin







typedef NSString * NSCalendarIdentifier __attribute__((swift_wrapper(struct)));

extern "C" NSCalendarIdentifier const NSCalendarIdentifierGregorian __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSCalendarIdentifier const NSCalendarIdentifierBuddhist __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSCalendarIdentifier const NSCalendarIdentifierChinese __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSCalendarIdentifier const NSCalendarIdentifierCoptic __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSCalendarIdentifier const NSCalendarIdentifierEthiopicAmeteMihret __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSCalendarIdentifier const NSCalendarIdentifierEthiopicAmeteAlem __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSCalendarIdentifier const NSCalendarIdentifierHebrew __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSCalendarIdentifier const NSCalendarIdentifierISO8601 __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSCalendarIdentifier const NSCalendarIdentifierIndian __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSCalendarIdentifier const NSCalendarIdentifierIslamic __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSCalendarIdentifier const NSCalendarIdentifierIslamicCivil __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSCalendarIdentifier const NSCalendarIdentifierJapanese __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSCalendarIdentifier const NSCalendarIdentifierPersian __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSCalendarIdentifier const NSCalendarIdentifierRepublicOfChina __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern "C" NSCalendarIdentifier const NSCalendarIdentifierIslamicTabular __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern "C" NSCalendarIdentifier const NSCalendarIdentifierIslamicUmmAlQura __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


typedef NSUInteger NSCalendarUnit; enum {
        NSCalendarUnitEra = kCFCalendarUnitEra,
        NSCalendarUnitYear = kCFCalendarUnitYear,
        NSCalendarUnitMonth = kCFCalendarUnitMonth,
        NSCalendarUnitDay = kCFCalendarUnitDay,
        NSCalendarUnitHour = kCFCalendarUnitHour,
        NSCalendarUnitMinute = kCFCalendarUnitMinute,
        NSCalendarUnitSecond = kCFCalendarUnitSecond,
        NSCalendarUnitWeekday = kCFCalendarUnitWeekday,
        NSCalendarUnitWeekdayOrdinal = kCFCalendarUnitWeekdayOrdinal,
        NSCalendarUnitQuarter __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = kCFCalendarUnitQuarter,
        NSCalendarUnitWeekOfMonth __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = kCFCalendarUnitWeekOfMonth,
        NSCalendarUnitWeekOfYear __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = kCFCalendarUnitWeekOfYear,
        NSCalendarUnitYearForWeekOfYear __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = kCFCalendarUnitYearForWeekOfYear,
        NSCalendarUnitNanosecond __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = (1 << 15),
        NSCalendarUnitCalendar __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = (1 << 20),
        NSCalendarUnitTimeZone __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = (1 << 21),

 NSEraCalendarUnit __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use NSCalendarUnitEra instead"))) = NSCalendarUnitEra,
 NSYearCalendarUnit __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use NSCalendarUnitYear instead"))) = NSCalendarUnitYear,
 NSMonthCalendarUnit __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use NSCalendarUnitMonth instead"))) = NSCalendarUnitMonth,
 NSDayCalendarUnit __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use NSCalendarUnitDay instead"))) = NSCalendarUnitDay,
 NSHourCalendarUnit __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use NSCalendarUnitHour instead"))) = NSCalendarUnitHour,
 NSMinuteCalendarUnit __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use NSCalendarUnitMinute instead"))) = NSCalendarUnitMinute,
 NSSecondCalendarUnit __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use NSCalendarUnitSecond instead"))) = NSCalendarUnitSecond,
 NSWeekCalendarUnit __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use NSCalendarUnitWeekOfMonth or NSCalendarUnitWeekOfYear, depending on which you mean"))) = kCFCalendarUnitWeek,
 NSWeekdayCalendarUnit __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use NSCalendarUnitWeekday instead"))) = NSCalendarUnitWeekday,
 NSWeekdayOrdinalCalendarUnit __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use NSCalendarUnitWeekdayOrdinal instead"))) = NSCalendarUnitWeekdayOrdinal,
 NSQuarterCalendarUnit __attribute__((availability(ios,introduced=4_0,deprecated=8_0,message="" "Use NSCalendarUnitQuarter instead"))) = NSCalendarUnitQuarter,
 NSWeekOfMonthCalendarUnit __attribute__((availability(ios,introduced=5_0,deprecated=8_0,message="" "Use NSCalendarUnitWeekOfMonth instead"))) = NSCalendarUnitWeekOfMonth,
 NSWeekOfYearCalendarUnit __attribute__((availability(ios,introduced=5_0,deprecated=8_0,message="" "Use NSCalendarUnitWeekOfYear instead"))) = NSCalendarUnitWeekOfYear,
 NSYearForWeekOfYearCalendarUnit __attribute__((availability(ios,introduced=5_0,deprecated=8_0,message="" "Use NSCalendarUnitYearForWeekOfYear instead"))) = NSCalendarUnitYearForWeekOfYear,
 NSCalendarCalendarUnit __attribute__((availability(ios,introduced=4_0,deprecated=8_0,message="" "Use NSCalendarUnitCalendar instead"))) = NSCalendarUnitCalendar,
 NSTimeZoneCalendarUnit __attribute__((availability(ios,introduced=4_0,deprecated=8_0,message="" "Use NSCalendarUnitTimeZone instead"))) = NSCalendarUnitTimeZone,
};

typedef NSUInteger NSCalendarOptions; enum {
 NSCalendarWrapComponents = (1UL << 0),

 NSCalendarMatchStrictly __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = (1ULL << 1),
 NSCalendarSearchBackwards __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = (1ULL << 2),

 NSCalendarMatchPreviousTimePreservingSmallerUnits __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = (1ULL << 8),
 NSCalendarMatchNextTimePreservingSmallerUnits __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = (1ULL << 9),
 NSCalendarMatchNextTime __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = (1ULL << 10),

 NSCalendarMatchFirst __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = (1ULL << 12),
 NSCalendarMatchLast __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = (1ULL << 13)
};

enum {
 NSWrapCalendarComponents __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use NSCalendarWrapComponents instead"))) = NSCalendarWrapComponents,
};



#ifndef _REWRITER_typedef_NSCalendar
#define _REWRITER_typedef_NSCalendar
typedef struct objc_object NSCalendar;
typedef struct {} _objc_exc_NSCalendar;
#endif

struct NSCalendar_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


@property (class, readonly, copy) NSCalendar *currentCalendar;
@property (class, readonly, strong) NSCalendar *autoupdatingCurrentCalendar __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// + (nullable NSCalendar *)calendarWithIdentifier:(NSCalendarIdentifier)calendarIdentifierConstant __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (instancetype)init __attribute__((unavailable));

// - (nullable id)initWithCalendarIdentifier:(NSCalendarIdentifier)ident __attribute__((objc_designated_initializer));

// @property (readonly, copy) NSCalendarIdentifier calendarIdentifier;
// @property (nullable, copy) NSLocale *locale;
// @property (copy) NSTimeZone *timeZone;
// @property NSUInteger firstWeekday;
// @property NSUInteger minimumDaysInFirstWeek;



// @property (readonly, copy) NSArray<NSString *> *eraSymbols __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, copy) NSArray<NSString *> *longEraSymbols __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (readonly, copy) NSArray<NSString *> *monthSymbols __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, copy) NSArray<NSString *> *shortMonthSymbols __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, copy) NSArray<NSString *> *veryShortMonthSymbols __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, copy) NSArray<NSString *> *standaloneMonthSymbols __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, copy) NSArray<NSString *> *shortStandaloneMonthSymbols __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, copy) NSArray<NSString *> *veryShortStandaloneMonthSymbols __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (readonly, copy) NSArray<NSString *> *weekdaySymbols __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, copy) NSArray<NSString *> *shortWeekdaySymbols __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, copy) NSArray<NSString *> *veryShortWeekdaySymbols __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, copy) NSArray<NSString *> *standaloneWeekdaySymbols __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, copy) NSArray<NSString *> *shortStandaloneWeekdaySymbols __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, copy) NSArray<NSString *> *veryShortStandaloneWeekdaySymbols __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (readonly, copy) NSArray<NSString *> *quarterSymbols __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, copy) NSArray<NSString *> *shortQuarterSymbols __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, copy) NSArray<NSString *> *standaloneQuarterSymbols __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, copy) NSArray<NSString *> *shortStandaloneQuarterSymbols __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (readonly, copy) NSString *AMSymbol __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, copy) NSString *PMSymbol __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));




// - (NSRange)minimumRangeOfUnit:(NSCalendarUnit)unit;
// - (NSRange)maximumRangeOfUnit:(NSCalendarUnit)unit;

// - (NSRange)rangeOfUnit:(NSCalendarUnit)smaller inUnit:(NSCalendarUnit)larger forDate:(NSDate *)date;
// - (NSUInteger)ordinalityOfUnit:(NSCalendarUnit)smaller inUnit:(NSCalendarUnit)larger forDate:(NSDate *)date;

// - (BOOL)rangeOfUnit:(NSCalendarUnit)unit startDate:(NSDate * _Nullable * _Nullable)datep interval:(nullable NSTimeInterval *)tip forDate:(NSDate *)date __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (nullable NSDate *)dateFromComponents:(NSDateComponents *)comps;
// - (NSDateComponents *)components:(NSCalendarUnit)unitFlags fromDate:(NSDate *)date;

// - (nullable NSDate *)dateByAddingComponents:(NSDateComponents *)comps toDate:(NSDate *)date options:(NSCalendarOptions)opts;

// - (NSDateComponents *)components:(NSCalendarUnit)unitFlags fromDate:(NSDate *)startingDate toDate:(NSDate *)resultDate options:(NSCalendarOptions)opts;






// - (void)getEra:(out nullable NSInteger *)eraValuePointer year:(out nullable NSInteger *)yearValuePointer month:(out nullable NSInteger *)monthValuePointer day:(out nullable NSInteger *)dayValuePointer fromDate:(NSDate *)date __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






// - (void)getEra:(out nullable NSInteger *)eraValuePointer yearForWeekOfYear:(out nullable NSInteger *)yearValuePointer weekOfYear:(out nullable NSInteger *)weekValuePointer weekday:(out nullable NSInteger *)weekdayValuePointer fromDate:(NSDate *)date __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






// - (void)getHour:(out nullable NSInteger *)hourValuePointer minute:(out nullable NSInteger *)minuteValuePointer second:(out nullable NSInteger *)secondValuePointer nanosecond:(out nullable NSInteger *)nanosecondValuePointer fromDate:(NSDate *)date __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (NSInteger)component:(NSCalendarUnit)unit fromDate:(NSDate *)date __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






// - (nullable NSDate *)dateWithEra:(NSInteger)eraValue year:(NSInteger)yearValue month:(NSInteger)monthValue day:(NSInteger)dayValue hour:(NSInteger)hourValue minute:(NSInteger)minuteValue second:(NSInteger)secondValue nanosecond:(NSInteger)nanosecondValue __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






// - (nullable NSDate *)dateWithEra:(NSInteger)eraValue yearForWeekOfYear:(NSInteger)yearValue weekOfYear:(NSInteger)weekValue weekday:(NSInteger)weekdayValue hour:(NSInteger)hourValue minute:(NSInteger)minuteValue second:(NSInteger)secondValue nanosecond:(NSInteger)nanosecondValue __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));







// - (NSDate *)startOfDayForDate:(NSDate *)date __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));







// - (NSDateComponents *)componentsInTimeZone:(NSTimeZone *)timezone fromDate:(NSDate *)date __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (NSComparisonResult)compareDate:(NSDate *)date1 toDate:(NSDate *)date2 toUnitGranularity:(NSCalendarUnit)unit __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (BOOL)isDate:(NSDate *)date1 equalToDate:(NSDate *)date2 toUnitGranularity:(NSCalendarUnit)unit __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (BOOL)isDate:(NSDate *)date1 inSameDayAsDate:(NSDate *)date2 __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (BOOL)isDateInToday:(NSDate *)date __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (BOOL)isDateInYesterday:(NSDate *)date __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (BOOL)isDateInTomorrow:(NSDate *)date __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (BOOL)isDateInWeekend:(NSDate *)date __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));







// - (BOOL)rangeOfWeekendStartDate:(out NSDate * _Nullable * _Nullable)datep interval:(out nullable NSTimeInterval *)tip containingDate:(NSDate *)date __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (BOOL)nextWeekendStartDate:(out NSDate * _Nullable * _Nullable)datep interval:(out nullable NSTimeInterval *)tip options:(NSCalendarOptions)options afterDate:(NSDate *)date __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (NSDateComponents *)components:(NSCalendarUnit)unitFlags fromDateComponents:(NSDateComponents *)startingDateComp toDateComponents:(NSDateComponents *)resultDateComp options:(NSCalendarOptions)options __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






// - (nullable NSDate *)dateByAddingUnit:(NSCalendarUnit)unit value:(NSInteger)value toDate:(NSDate *)date options:(NSCalendarOptions)options __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)enumerateDatesStartingAfterDate:(NSDate *)start matchingComponents:(NSDateComponents *)comps options:(NSCalendarOptions)opts usingBlock:(void (__attribute__((noescape)) ^)(NSDate * _Nullable date, BOOL exactMatch, BOOL *stop))block __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






// - (nullable NSDate *)nextDateAfterDate:(NSDate *)date matchingComponents:(NSDateComponents *)comps options:(NSCalendarOptions)options __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));







// - (nullable NSDate *)nextDateAfterDate:(NSDate *)date matchingUnit:(NSCalendarUnit)unit value:(NSInteger)value options:(NSCalendarOptions)options __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));







// - (nullable NSDate *)nextDateAfterDate:(NSDate *)date matchingHour:(NSInteger)hourValue minute:(NSInteger)minuteValue second:(NSInteger)secondValue options:(NSCalendarOptions)options __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (nullable NSDate *)dateBySettingUnit:(NSCalendarUnit)unit value:(NSInteger)v ofDate:(NSDate *)date options:(NSCalendarOptions)opts __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));







// - (nullable NSDate *)dateBySettingHour:(NSInteger)h minute:(NSInteger)m second:(NSInteger)s ofDate:(NSDate *)date options:(NSCalendarOptions)opts __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






// - (BOOL)date:(NSDate *)date matchesComponents:(NSDateComponents *)components __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */

extern "C" NSNotificationName const NSCalendarDayChangedNotification __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
enum {
 NSDateComponentUndefined = 9223372036854775807L,

 NSUndefinedDateComponent __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use NSDateComponentUndefined instead"))) = NSDateComponentUndefined
};



#ifndef _REWRITER_typedef_NSDateComponents
#define _REWRITER_typedef_NSDateComponents
typedef struct objc_object NSDateComponents;
typedef struct {} _objc_exc_NSDateComponents;
#endif

struct NSDateComponents_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property (nullable, copy) NSCalendar *calendar __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (nullable, copy) NSTimeZone *timeZone __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property NSInteger era;
// @property NSInteger year;
// @property NSInteger month;
// @property NSInteger day;
// @property NSInteger hour;
// @property NSInteger minute;
// @property NSInteger second;
// @property NSInteger nanosecond __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property NSInteger weekday;
// @property NSInteger weekdayOrdinal;
// @property NSInteger quarter __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property NSInteger weekOfMonth __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property NSInteger weekOfYear __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property NSInteger yearForWeekOfYear __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (getter=isLeapMonth) BOOL leapMonth __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (nullable, readonly, copy) NSDate *date __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (NSInteger)week __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" "Use weekOfMonth or weekOfYear, depending on which you mean")));
// - (void)setWeek:(NSInteger)v __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" "Use setWeekOfMonth: or setWeekOfYear:, depending on which you mean")));





// - (void)setValue:(NSInteger)value forComponent:(NSCalendarUnit)unit __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






// - (NSInteger)valueForComponent:(NSCalendarUnit)unit __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (getter=isValidDate, readonly) BOOL validDate __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (BOOL)isValidDateInCalendar:(NSCalendar *)calendar __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


/* @end */

#pragma clang assume_nonnull end
// @class NSData;
#ifndef _REWRITER_typedef_NSData
#define _REWRITER_typedef_NSData
typedef struct objc_object NSData;
typedef struct {} _objc_exc_NSData;
#endif


#pragma clang assume_nonnull begin

enum {
    NSOpenStepUnicodeReservedBase = 0xF400
};


#ifndef _REWRITER_typedef_NSCharacterSet
#define _REWRITER_typedef_NSCharacterSet
typedef struct objc_object NSCharacterSet;
typedef struct {} _objc_exc_NSCharacterSet;
#endif

struct NSCharacterSet_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


@property (readonly, class, copy) NSCharacterSet *controlCharacterSet;
@property (readonly, class, copy) NSCharacterSet *whitespaceCharacterSet;
@property (readonly, class, copy) NSCharacterSet *whitespaceAndNewlineCharacterSet;
@property (readonly, class, copy) NSCharacterSet *decimalDigitCharacterSet;
@property (readonly, class, copy) NSCharacterSet *letterCharacterSet;
@property (readonly, class, copy) NSCharacterSet *lowercaseLetterCharacterSet;
@property (readonly, class, copy) NSCharacterSet *uppercaseLetterCharacterSet;
@property (readonly, class, copy) NSCharacterSet *nonBaseCharacterSet;
@property (readonly, class, copy) NSCharacterSet *alphanumericCharacterSet;
@property (readonly, class, copy) NSCharacterSet *decomposableCharacterSet;
@property (readonly, class, copy) NSCharacterSet *illegalCharacterSet;
@property (readonly, class, copy) NSCharacterSet *punctuationCharacterSet;
@property (readonly, class, copy) NSCharacterSet *capitalizedLetterCharacterSet;
@property (readonly, class, copy) NSCharacterSet *symbolCharacterSet;
@property (readonly, class, copy) NSCharacterSet *newlineCharacterSet __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// + (NSCharacterSet *)characterSetWithRange:(NSRange)aRange;
// + (NSCharacterSet *)characterSetWithCharactersInString:(NSString *)aString;
// + (NSCharacterSet *)characterSetWithBitmapRepresentation:(NSData *)data;
// + (nullable NSCharacterSet *)characterSetWithContentsOfFile:(NSString *)fName;

// - (instancetype) initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

// - (BOOL)characterIsMember:(unichar)aCharacter;
// @property (readonly, copy) NSData *bitmapRepresentation;
// @property (readonly, copy) NSCharacterSet *invertedSet;


// - (BOOL)longCharacterIsMember:(UTF32Char)theLongChar;

// - (BOOL)isSupersetOfSet:(NSCharacterSet *)theOtherSet;
// - (BOOL)hasMemberInPlane:(uint8_t)thePlane;
/* @end */



#ifndef _REWRITER_typedef_NSMutableCharacterSet
#define _REWRITER_typedef_NSMutableCharacterSet
typedef struct objc_object NSMutableCharacterSet;
typedef struct {} _objc_exc_NSMutableCharacterSet;
#endif

struct NSMutableCharacterSet_IMPL {
	struct NSCharacterSet_IMPL NSCharacterSet_IVARS;
};


// - (void)addCharactersInRange:(NSRange)aRange;
// - (void)removeCharactersInRange:(NSRange)aRange;
// - (void)addCharactersInString:(NSString *)aString;
// - (void)removeCharactersInString:(NSString *)aString;
// - (void)formUnionWithCharacterSet:(NSCharacterSet *)otherSet;
// - (void)formIntersectionWithCharacterSet:(NSCharacterSet *)otherSet;
// - (void)invert;

// + (NSMutableCharacterSet *)controlCharacterSet;
// + (NSMutableCharacterSet *)whitespaceCharacterSet;
// + (NSMutableCharacterSet *)whitespaceAndNewlineCharacterSet;
// + (NSMutableCharacterSet *)decimalDigitCharacterSet;
// + (NSMutableCharacterSet *)letterCharacterSet;
// + (NSMutableCharacterSet *)lowercaseLetterCharacterSet;
// + (NSMutableCharacterSet *)uppercaseLetterCharacterSet;
// + (NSMutableCharacterSet *)nonBaseCharacterSet;
// + (NSMutableCharacterSet *)alphanumericCharacterSet;
// + (NSMutableCharacterSet *)decomposableCharacterSet;
// + (NSMutableCharacterSet *)illegalCharacterSet;
// + (NSMutableCharacterSet *)punctuationCharacterSet;
// + (NSMutableCharacterSet *)capitalizedLetterCharacterSet;
// + (NSMutableCharacterSet *)symbolCharacterSet;
// + (NSMutableCharacterSet *)newlineCharacterSet __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// + (NSMutableCharacterSet *)characterSetWithRange:(NSRange)aRange;
// + (NSMutableCharacterSet *)characterSetWithCharactersInString:(NSString *)aString;
// + (NSMutableCharacterSet *)characterSetWithBitmapRepresentation:(NSData *)data;
// + (nullable NSMutableCharacterSet *)characterSetWithContentsOfFile:(NSString *)fName;

/* @end */

#pragma clang assume_nonnull end






// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSData
#define _REWRITER_typedef_NSData
typedef struct objc_object NSData;
typedef struct {} _objc_exc_NSData;
#endif

#ifndef _REWRITER_typedef_NSSet
#define _REWRITER_typedef_NSSet
typedef struct objc_object NSSet;
typedef struct {} _objc_exc_NSSet;
#endif


#pragma clang assume_nonnull begin




typedef NSInteger NSDecodingFailurePolicy; enum {

    NSDecodingFailurePolicyRaiseException,


    NSDecodingFailurePolicySetErrorAndReturn,
} __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


#ifndef _REWRITER_typedef_NSCoder
#define _REWRITER_typedef_NSCoder
typedef struct objc_object NSCoder;
typedef struct {} _objc_exc_NSCoder;
#endif

struct NSCoder_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (void)encodeValueOfObjCType:(const char *)type at:(const void *)addr;
// - (void)encodeDataObject:(NSData *)data;
// - (nullable NSData *)decodeDataObject;
// - (void)decodeValueOfObjCType:(const char *)type at:(void *)data size:(NSUInteger)size __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
// - (NSInteger)versionForClassName:(NSString *)className;

/* @end */


// @interface NSCoder (NSExtendedCoder)

// - (void)encodeObject:(nullable id)object;
// - (void)encodeRootObject:(id)rootObject;
// - (void)encodeBycopyObject:(nullable id)anObject;
// - (void)encodeByrefObject:(nullable id)anObject;
// - (void)encodeConditionalObject:(nullable id)object;
// - (void)encodeValuesOfObjCTypes:(const char *)types, ...;
// - (void)encodeArrayOfObjCType:(const char *)type count:(NSUInteger)count at:(const void *)array;
// - (void)encodeBytes:(nullable const void *)byteaddr length:(NSUInteger)length;

// - (nullable id)decodeObject;
// - (nullable id)decodeTopLevelObjectAndReturnError:(NSError **)error __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(swift, unavailable, message="Use 'decodeTopLevelObject() throws' instead")));
// - (void)decodeValuesOfObjCTypes:(const char *)types, ...;
// - (void)decodeArrayOfObjCType:(const char *)itemType count:(NSUInteger)count at:(void *)array;
// - (nullable void *)decodeBytesWithReturnedLength:(NSUInteger *)lengthp __attribute__((objc_returns_inner_pointer));






// - (void)setObjectZone:(nullable NSZone *)zone __attribute__((unavailable("not available in automatic reference counting mode")));
// - (nullable NSZone *)objectZone __attribute__((unavailable("not available in automatic reference counting mode")));

// @property (readonly) unsigned int systemVersion;

// @property (readonly) BOOL allowsKeyedCoding;

// - (void)encodeObject:(nullable id)object forKey:(NSString *)key;
// - (void)encodeConditionalObject:(nullable id)object forKey:(NSString *)key;
// - (void)encodeBool:(BOOL)value forKey:(NSString *)key;
// - (void)encodeInt:(int)value forKey:(NSString *)key;
// - (void)encodeInt32:(int32_t)value forKey:(NSString *)key;
// - (void)encodeInt64:(int64_t)value forKey:(NSString *)key;
// - (void)encodeFloat:(float)value forKey:(NSString *)key;
// - (void)encodeDouble:(double)value forKey:(NSString *)key;
// - (void)encodeBytes:(nullable const uint8_t *)bytes length:(NSUInteger)length forKey:(NSString *)key;

// - (BOOL)containsValueForKey:(NSString *)key;
// - (nullable id)decodeObjectForKey:(NSString *)key;
// - (nullable id)decodeTopLevelObjectForKey:(NSString *)key error:(NSError **)error __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(swift, unavailable, message="Use 'decodeObjectForKey(_:) throws' instead")));
// - (BOOL)decodeBoolForKey:(NSString *)key;
// - (int)decodeIntForKey:(NSString *)key;
// - (int32_t)decodeInt32ForKey:(NSString *)key;
// - (int64_t)decodeInt64ForKey:(NSString *)key;
// - (float)decodeFloatForKey:(NSString *)key;
// - (double)decodeDoubleForKey:(NSString *)key;
// - (nullable const uint8_t *)decodeBytesForKey:(NSString *)key returnedLength:(nullable NSUInteger *)lengthp __attribute__((objc_returns_inner_pointer));

// - (void)encodeInteger:(NSInteger)value forKey:(NSString *)key __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (NSInteger)decodeIntegerForKey:(NSString *)key __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


// @property (readonly) BOOL requiresSecureCoding __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


// - (nullable id)decodeObjectOfClass:(Class)aClass forKey:(NSString *)key __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (nullable id)decodeTopLevelObjectOfClass:(Class)aClass forKey:(NSString *)key error:(NSError **)error __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(swift, unavailable, message="Use 'decodeTopLevelObjectOfClass(_:,forKey:) throws instead")));


// - (nullable id)decodeObjectOfClasses:(nullable NSSet<Class> *)classes forKey:(NSString *)key __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((swift_private));
// - (nullable id)decodeTopLevelObjectOfClasses:(nullable NSSet<Class> *)classes forKey:(NSString *)key error:(NSError **)error __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(swift, unavailable, message="Use 'decodeObjectOfClasses(_:,forKey:) throws' instead")));


// - (nullable id)decodePropertyListForKey:(NSString *)key __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


// @property (nullable, readonly, copy) NSSet<Class> *allowedClasses __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)failWithError:(NSError *)error __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






// @property (readonly) NSDecodingFailurePolicy decodingFailurePolicy __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (nullable, readonly, copy) NSError *error __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */

// @interface NSCoder(NSDeprecated)


// - (void)decodeValueOfObjCType:(const char *)type at:(void *)data;

/* @end */

#pragma clang assume_nonnull end







// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSURL
#define _REWRITER_typedef_NSURL
typedef struct objc_object NSURL;
typedef struct {} _objc_exc_NSURL;
#endif

#ifndef _REWRITER_typedef_NSError
#define _REWRITER_typedef_NSError
typedef struct objc_object NSError;
typedef struct {} _objc_exc_NSError;
#endif


#pragma clang assume_nonnull begin



typedef NSUInteger NSDataReadingOptions; enum {
    NSDataReadingMappedIfSafe = 1UL << 0,
    NSDataReadingUncached = 1UL << 1,
    NSDataReadingMappedAlways __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 1UL << 3,


    NSDataReadingMapped = NSDataReadingMappedIfSafe,
    NSMappedRead = NSDataReadingMapped,
    NSUncachedRead = NSDataReadingUncached
};

typedef NSUInteger NSDataWritingOptions; enum {
    NSDataWritingAtomic = 1UL << 0,
    NSDataWritingWithoutOverwriting __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 1UL << 1,

    NSDataWritingFileProtectionNone __attribute__((availability(ios,introduced=4_0))) = 0x10000000,
    NSDataWritingFileProtectionComplete __attribute__((availability(ios,introduced=4_0))) = 0x20000000,
    NSDataWritingFileProtectionCompleteUnlessOpen __attribute__((availability(ios,introduced=5_0))) = 0x30000000,
    NSDataWritingFileProtectionCompleteUntilFirstUserAuthentication __attribute__((availability(ios,introduced=5_0))) = 0x40000000,
    NSDataWritingFileProtectionMask __attribute__((availability(ios,introduced=4_0))) = 0xf0000000,


    NSAtomicWrite = NSDataWritingAtomic
};




typedef NSUInteger NSDataSearchOptions; enum {
    NSDataSearchBackwards = 1UL << 0,
    NSDataSearchAnchored = 1UL << 1
} __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));




typedef NSUInteger NSDataBase64EncodingOptions; enum {

    NSDataBase64Encoding64CharacterLineLength = 1UL << 0,
    NSDataBase64Encoding76CharacterLineLength = 1UL << 1,


    NSDataBase64EncodingEndLineWithCarriageReturn = 1UL << 4,
    NSDataBase64EncodingEndLineWithLineFeed = 1UL << 5,

} __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


typedef NSUInteger NSDataBase64DecodingOptions; enum {

    NSDataBase64DecodingIgnoreUnknownCharacters = 1UL << 0
} __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





#ifndef _REWRITER_typedef_NSData
#define _REWRITER_typedef_NSData
typedef struct objc_object NSData;
typedef struct {} _objc_exc_NSData;
#endif

struct NSData_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property (readonly) NSUInteger length;





// @property (readonly) const void *bytes __attribute__((objc_returns_inner_pointer));

/* @end */


// @interface NSData (NSExtendedData)

// @property (readonly, copy) NSString *description;
// - (void)getBytes:(void *)buffer length:(NSUInteger)length;
// - (void)getBytes:(void *)buffer range:(NSRange)range;
// - (BOOL)isEqualToData:(NSData *)other;
// - (NSData *)subdataWithRange:(NSRange)range;
// - (BOOL)writeToFile:(NSString *)path atomically:(BOOL)useAuxiliaryFile;
// - (BOOL)writeToURL:(NSURL *)url atomically:(BOOL)atomically;
// - (BOOL)writeToFile:(NSString *)path options:(NSDataWritingOptions)writeOptionsMask error:(NSError **)errorPtr;
// - (BOOL)writeToURL:(NSURL *)url options:(NSDataWritingOptions)writeOptionsMask error:(NSError **)errorPtr;
// - (NSRange)rangeOfData:(NSData *)dataToFind options:(NSDataSearchOptions)mask range:(NSRange)searchRange __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));




// - (void) enumerateByteRangesUsingBlock:(void (__attribute__((noescape)) ^)(const void *bytes, NSRange byteRange, BOOL *stop))block __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */


// @interface NSData (NSDataCreation)

// + (instancetype)data;
// + (instancetype)dataWithBytes:(nullable const void *)bytes length:(NSUInteger)length;
// + (instancetype)dataWithBytesNoCopy:(void *)bytes length:(NSUInteger)length;
// + (instancetype)dataWithBytesNoCopy:(void *)bytes length:(NSUInteger)length freeWhenDone:(BOOL)b;
// + (nullable instancetype)dataWithContentsOfFile:(NSString *)path options:(NSDataReadingOptions)readOptionsMask error:(NSError **)errorPtr;
// + (nullable instancetype)dataWithContentsOfURL:(NSURL *)url options:(NSDataReadingOptions)readOptionsMask error:(NSError **)errorPtr;
// + (nullable instancetype)dataWithContentsOfFile:(NSString *)path;
// + (nullable instancetype)dataWithContentsOfURL:(NSURL *)url;
// - (instancetype)initWithBytes:(nullable const void *)bytes length:(NSUInteger)length;
// - (instancetype)initWithBytesNoCopy:(void *)bytes length:(NSUInteger)length;
// - (instancetype)initWithBytesNoCopy:(void *)bytes length:(NSUInteger)length freeWhenDone:(BOOL)b;
// - (instancetype)initWithBytesNoCopy:(void *)bytes length:(NSUInteger)length deallocator:(nullable void (^)(void *bytes, NSUInteger length))deallocator __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (nullable instancetype)initWithContentsOfFile:(NSString *)path options:(NSDataReadingOptions)readOptionsMask error:(NSError **)errorPtr;
// - (nullable instancetype)initWithContentsOfURL:(NSURL *)url options:(NSDataReadingOptions)readOptionsMask error:(NSError **)errorPtr;
// - (nullable instancetype)initWithContentsOfFile:(NSString *)path;
// - (nullable instancetype)initWithContentsOfURL:(NSURL *)url;
// - (instancetype)initWithData:(NSData *)data;
// + (instancetype)dataWithData:(NSData *)data;

/* @end */


// @interface NSData (NSDataBase64Encoding)



// - (nullable instancetype)initWithBase64EncodedString:(NSString *)base64String options:(NSDataBase64DecodingOptions)options __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (NSString *)base64EncodedStringWithOptions:(NSDataBase64EncodingOptions)options __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (nullable instancetype)initWithBase64EncodedData:(NSData *)base64Data options:(NSDataBase64DecodingOptions)options __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (NSData *)base64EncodedDataWithOptions:(NSDataBase64EncodingOptions)options __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */



// @interface NSData (NSDeprecated)

// - (void)getBytes:(void *)buffer __attribute__((availability(macos,introduced=10.0,deprecated=10.10,message="This method is unsafe because it could potentially cause buffer overruns. Use -getBytes:length: instead."))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,message="This method is unsafe because it could potentially cause buffer overruns. Use -getBytes:length: instead."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="This method is unsafe because it could potentially cause buffer overruns. Use -getBytes:length: instead."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="This method is unsafe because it could potentially cause buffer overruns. Use -getBytes:length: instead.")));
// + (nullable id)dataWithContentsOfMappedFile:(NSString *)path __attribute__((availability(macos,introduced=10.0,deprecated=10.10,message="Use +dataWithContentsOfURL:options:error: and NSDataReadingMappedIfSafe or NSDataReadingMappedAlways instead."))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,message="Use +dataWithContentsOfURL:options:error: and NSDataReadingMappedIfSafe or NSDataReadingMappedAlways instead."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use +dataWithContentsOfURL:options:error: and NSDataReadingMappedIfSafe or NSDataReadingMappedAlways instead."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use +dataWithContentsOfURL:options:error: and NSDataReadingMappedIfSafe or NSDataReadingMappedAlways instead.")));
// - (nullable id)initWithContentsOfMappedFile:(NSString *)path __attribute__((availability(macos,introduced=10.0,deprecated=10.10,message="Use -initWithContentsOfURL:options:error: and NSDataReadingMappedIfSafe or NSDataReadingMappedAlways instead."))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,message="Use -initWithContentsOfURL:options:error: and NSDataReadingMappedIfSafe or NSDataReadingMappedAlways instead."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -initWithContentsOfURL:options:error: and NSDataReadingMappedIfSafe or NSDataReadingMappedAlways instead."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -initWithContentsOfURL:options:error: and NSDataReadingMappedIfSafe or NSDataReadingMappedAlways instead.")));



// - (nullable id)initWithBase64Encoding:(NSString *)base64String __attribute__((availability(macos,introduced=10.6,deprecated=10.9,message="Use initWithBase64EncodedString instead"))) __attribute__((availability(ios,introduced=4.0,deprecated=7.0,message="Use initWithBase64EncodedString instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use initWithBase64EncodedString instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use initWithBase64EncodedString instead")));
// - (NSString *)base64Encoding __attribute__((availability(macos,introduced=10.6,deprecated=10.9,message="Use base64EncodedStringWithOptions instead"))) __attribute__((availability(ios,introduced=4.0,deprecated=7.0,message="Use base64EncodedStringWithOptions instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use base64EncodedStringWithOptions instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use base64EncodedStringWithOptions instead")));

/* @end */





#ifndef _REWRITER_typedef_NSMutableData
#define _REWRITER_typedef_NSMutableData
typedef struct objc_object NSMutableData;
typedef struct {} _objc_exc_NSMutableData;
#endif

struct NSMutableData_IMPL {
	struct NSData_IMPL NSData_IVARS;
};


// @property (readonly) void *mutableBytes __attribute__((objc_returns_inner_pointer));
// @property NSUInteger length;

/* @end */


// @interface NSMutableData (NSExtendedMutableData)

// - (void)appendBytes:(const void *)bytes length:(NSUInteger)length;
// - (void)appendData:(NSData *)other;
// - (void)increaseLengthBy:(NSUInteger)extraLength;
// - (void)replaceBytesInRange:(NSRange)range withBytes:(const void *)bytes;
// - (void)resetBytesInRange:(NSRange)range;
// - (void)setData:(NSData *)data;
// - (void)replaceBytesInRange:(NSRange)range withBytes:(nullable const void *)replacementBytes length:(NSUInteger)replacementLength;

/* @end */


// @interface NSMutableData (NSMutableDataCreation)

// + (nullable instancetype)dataWithCapacity:(NSUInteger)aNumItems;
// + (nullable instancetype)dataWithLength:(NSUInteger)length;
// - (nullable instancetype)initWithCapacity:(NSUInteger)capacity;
// - (nullable instancetype)initWithLength:(NSUInteger)length;

/* @end */




__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0)))

#ifndef _REWRITER_typedef_NSPurgeableData
#define _REWRITER_typedef_NSPurgeableData
typedef struct objc_object NSPurgeableData;
typedef struct {} _objc_exc_NSPurgeableData;
#endif

struct NSPurgeableData_IMPL {
	struct NSMutableData_IMPL NSMutableData_IVARS;
	NSUInteger _length;
	int32_t _accessCount;
	uint8_t _private[32];
	void *_reserved;
};


/* @end */

#pragma clang assume_nonnull end









#pragma clang assume_nonnull begin

__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSDateInterval
#define _REWRITER_typedef_NSDateInterval
typedef struct objc_object NSDateInterval;
typedef struct {} _objc_exc_NSDateInterval;
#endif

struct NSDateInterval_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};






// @property (readonly, copy) NSDate *startDate;
// @property (readonly, copy) NSDate *endDate;
// @property (readonly) NSTimeInterval duration;


// - (instancetype)init;

// - (instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));


// - (instancetype)initWithStartDate:(NSDate *)startDate duration:(NSTimeInterval)duration __attribute__((objc_designated_initializer));


// - (instancetype)initWithStartDate:(NSDate *)startDate endDate:(NSDate *)endDate;
// - (NSComparisonResult)compare:(NSDateInterval *)dateInterval;

// - (BOOL)isEqualToDateInterval:(NSDateInterval *)dateInterval;
// - (BOOL)intersectsDateInterval:(NSDateInterval *)dateInterval;




// - (nullable NSDateInterval *)intersectionWithDateInterval:(NSDateInterval *)dateInterval;

// - (BOOL)containsDate:(NSDate *)date;

/* @end */

#pragma clang assume_nonnull end


















#pragma clang assume_nonnull begin

typedef NSString * NSAttributedStringKey __attribute__((swift_wrapper(struct)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_2)))

#ifndef _REWRITER_typedef_NSAttributedString
#define _REWRITER_typedef_NSAttributedString
typedef struct objc_object NSAttributedString;
typedef struct {} _objc_exc_NSAttributedString;
#endif

struct NSAttributedString_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property (readonly, copy) NSString *string;
// - (NSDictionary<NSAttributedStringKey, id> *)attributesAtIndex:(NSUInteger)location effectiveRange:(nullable NSRangePointer)range;

/* @end */


// @interface NSAttributedString (NSExtendedAttributedString)

// @property (readonly) NSUInteger length;
// - (nullable id)attribute:(NSAttributedStringKey)attrName atIndex:(NSUInteger)location effectiveRange:(nullable NSRangePointer)range;
// - (NSAttributedString *)attributedSubstringFromRange:(NSRange)range;

// - (NSDictionary<NSAttributedStringKey, id> *)attributesAtIndex:(NSUInteger)location longestEffectiveRange:(nullable NSRangePointer)range inRange:(NSRange)rangeLimit;
// - (nullable id)attribute:(NSAttributedStringKey)attrName atIndex:(NSUInteger)location longestEffectiveRange:(nullable NSRangePointer)range inRange:(NSRange)rangeLimit;

// - (BOOL)isEqualToAttributedString:(NSAttributedString *)other;

// - (instancetype)initWithString:(NSString *)str;
// - (instancetype)initWithString:(NSString *)str attributes:(nullable NSDictionary<NSAttributedStringKey, id> *)attrs;
// - (instancetype)initWithAttributedString:(NSAttributedString *)attrStr;

typedef NSUInteger NSAttributedStringEnumerationOptions; enum {
  NSAttributedStringEnumerationReverse = (1UL << 1),
  NSAttributedStringEnumerationLongestEffectiveRangeNotRequired = (1UL << 20)
};

// - (void)enumerateAttributesInRange:(NSRange)enumerationRange options:(NSAttributedStringEnumerationOptions)opts usingBlock:(void (__attribute__((noescape)) ^)(NSDictionary<NSAttributedStringKey, id> *attrs, NSRange range, BOOL *stop))block __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)enumerateAttribute:(NSAttributedStringKey)attrName inRange:(NSRange)enumerationRange options:(NSAttributedStringEnumerationOptions)opts usingBlock:(void (__attribute__((noescape)) ^)(id _Nullable value, NSRange range, BOOL *stop))block __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_2)))

#ifndef _REWRITER_typedef_NSMutableAttributedString
#define _REWRITER_typedef_NSMutableAttributedString
typedef struct objc_object NSMutableAttributedString;
typedef struct {} _objc_exc_NSMutableAttributedString;
#endif

struct NSMutableAttributedString_IMPL {
	struct NSAttributedString_IMPL NSAttributedString_IVARS;
};


// - (void)replaceCharactersInRange:(NSRange)range withString:(NSString *)str;
// - (void)setAttributes:(nullable NSDictionary<NSAttributedStringKey, id> *)attrs range:(NSRange)range;

/* @end */


// @interface NSMutableAttributedString (NSExtendedMutableAttributedString)

// @property (readonly, retain) NSMutableString *mutableString;

// - (void)addAttribute:(NSAttributedStringKey)name value:(id)value range:(NSRange)range;
// - (void)addAttributes:(NSDictionary<NSAttributedStringKey, id> *)attrs range:(NSRange)range;
// - (void)removeAttribute:(NSAttributedStringKey)name range:(NSRange)range;

// - (void)replaceCharactersInRange:(NSRange)range withAttributedString:(NSAttributedString *)attrString;
// - (void)insertAttributedString:(NSAttributedString *)attrString atIndex:(NSUInteger)loc;
// - (void)appendAttributedString:(NSAttributedString *)attrString;
// - (void)deleteCharactersInRange:(NSRange)range;
// - (void)setAttributedString:(NSAttributedString *)attrString;

// - (void)beginEditing;
// - (void)endEditing;

/* @end */

#pragma clang assume_nonnull end

// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

// @class NSAttributedString;
#ifndef _REWRITER_typedef_NSAttributedString
#define _REWRITER_typedef_NSAttributedString
typedef struct objc_object NSAttributedString;
typedef struct {} _objc_exc_NSAttributedString;
#endif

// @class NSDictionary;
#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif


#pragma clang assume_nonnull begin

typedef NSInteger NSFormattingContext; enum {


    NSFormattingContextUnknown = 0,


    NSFormattingContextDynamic = 1,


    NSFormattingContextStandalone = 2,


    NSFormattingContextListItem = 3,


    NSFormattingContextBeginningOfSentence = 4,


    NSFormattingContextMiddleOfSentence = 5,

} __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






typedef NSInteger NSFormattingUnitStyle; enum {
    NSFormattingUnitStyleShort = 1,
    NSFormattingUnitStyleMedium,
    NSFormattingUnitStyleLong,
} __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


#ifndef _REWRITER_typedef_NSFormatter
#define _REWRITER_typedef_NSFormatter
typedef struct objc_object NSFormatter;
typedef struct {} _objc_exc_NSFormatter;
#endif

struct NSFormatter_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (nullable NSString *)stringForObjectValue:(nullable id)obj;

// - (nullable NSAttributedString *)attributedStringForObjectValue:(id)obj withDefaultAttributes:(nullable NSDictionary<NSAttributedStringKey, id> *)attrs;

// - (nullable NSString *)editingStringForObjectValue:(id)obj;

// - (BOOL)getObjectValue:(out id _Nullable * _Nullable)obj forString:(NSString *)string errorDescription:(out NSString * _Nullable * _Nullable)error;

// - (BOOL)isPartialStringValid:(NSString *)partialString newEditingString:(NSString * _Nullable * _Nullable)newString errorDescription:(NSString * _Nullable * _Nullable)error;


// - (BOOL)isPartialStringValid:(NSString * _Nonnull * _Nonnull)partialStringPtr proposedSelectedRange:(nullable NSRangePointer)proposedSelRangePtr originalString:(NSString *)origString originalSelectedRange:(NSRange)origSelRange errorDescription:(NSString * _Nullable * _Nullable)error;

/* @end */

#pragma clang assume_nonnull end


// @class NSLocale;
#ifndef _REWRITER_typedef_NSLocale
#define _REWRITER_typedef_NSLocale
typedef struct objc_object NSLocale;
typedef struct {} _objc_exc_NSLocale;
#endif

#ifndef _REWRITER_typedef_NSDate
#define _REWRITER_typedef_NSDate
typedef struct objc_object NSDate;
typedef struct {} _objc_exc_NSDate;
#endif

#ifndef _REWRITER_typedef_NSCalendar
#define _REWRITER_typedef_NSCalendar
typedef struct objc_object NSCalendar;
typedef struct {} _objc_exc_NSCalendar;
#endif

#ifndef _REWRITER_typedef_NSTimeZone
#define _REWRITER_typedef_NSTimeZone
typedef struct objc_object NSTimeZone;
typedef struct {} _objc_exc_NSTimeZone;
#endif

#ifndef _REWRITER_typedef_NSError
#define _REWRITER_typedef_NSError
typedef struct objc_object NSError;
typedef struct {} _objc_exc_NSError;
#endif

#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSMutableDictionary
#define _REWRITER_typedef_NSMutableDictionary
typedef struct objc_object NSMutableDictionary;
typedef struct {} _objc_exc_NSMutableDictionary;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif


#pragma clang assume_nonnull begin









#ifndef _REWRITER_typedef_NSDateFormatter
#define _REWRITER_typedef_NSDateFormatter
typedef struct objc_object NSDateFormatter;
typedef struct {} _objc_exc_NSDateFormatter;
#endif

struct NSDateFormatter_IMPL {
	struct NSFormatter_IMPL NSFormatter_IVARS;
	NSMutableDictionary *__strong _attributes;
	CFDateFormatterRef _formatter;
	NSUInteger _counter;
};


// @property NSFormattingContext formattingContext __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (BOOL)getObjectValue:(out id _Nullable * _Nullable)obj forString:(NSString *)string range:(inout nullable NSRange *)rangep error:(out NSError **)error;




// - (NSString *)stringFromDate:(NSDate *)date;
// - (nullable NSDate *)dateFromString:(NSString *)string;

typedef NSUInteger NSDateFormatterStyle; enum {
    NSDateFormatterNoStyle = kCFDateFormatterNoStyle,
    NSDateFormatterShortStyle = kCFDateFormatterShortStyle,
    NSDateFormatterMediumStyle = kCFDateFormatterMediumStyle,
    NSDateFormatterLongStyle = kCFDateFormatterLongStyle,
    NSDateFormatterFullStyle = kCFDateFormatterFullStyle
};

typedef NSUInteger NSDateFormatterBehavior; enum {
    NSDateFormatterBehaviorDefault = 0,



    NSDateFormatterBehavior10_4 = 1040,
};


// + (NSString *)localizedStringFromDate:(NSDate *)date dateStyle:(NSDateFormatterStyle)dstyle timeStyle:(NSDateFormatterStyle)tstyle __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// + (nullable NSString *)dateFormatFromTemplate:(NSString *)tmplate options:(NSUInteger)opts locale:(nullable NSLocale *)locale __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



@property (class) NSDateFormatterBehavior defaultFormatterBehavior;
// - (void) setLocalizedDateFormatFromTemplate:(NSString *)dateFormatTemplate __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (null_resettable, copy) NSString *dateFormat;
// @property NSDateFormatterStyle dateStyle;
// @property NSDateFormatterStyle timeStyle;
// @property (null_resettable, copy) NSLocale *locale;
// @property BOOL generatesCalendarDates;
// @property NSDateFormatterBehavior formatterBehavior;
// @property (null_resettable, copy) NSTimeZone *timeZone;
// @property (null_resettable, copy) NSCalendar *calendar;
// @property (getter=isLenient) BOOL lenient;
// @property (nullable, copy) NSDate *twoDigitStartDate;
// @property (nullable, copy) NSDate *defaultDate;
// @property (null_resettable, copy) NSArray<NSString *> *eraSymbols;
// @property (null_resettable, copy) NSArray<NSString *> *monthSymbols;
// @property (null_resettable, copy) NSArray<NSString *> *shortMonthSymbols;
// @property (null_resettable, copy) NSArray<NSString *> *weekdaySymbols;
// @property (null_resettable, copy) NSArray<NSString *> *shortWeekdaySymbols;
// @property (null_resettable, copy) NSString *AMSymbol;
// @property (null_resettable, copy) NSString *PMSymbol;
// @property (null_resettable, copy) NSArray<NSString *> *longEraSymbols __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (null_resettable, copy) NSArray<NSString *> *veryShortMonthSymbols __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (null_resettable, copy) NSArray<NSString *> *standaloneMonthSymbols __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (null_resettable, copy) NSArray<NSString *> *shortStandaloneMonthSymbols __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (null_resettable, copy) NSArray<NSString *> *veryShortStandaloneMonthSymbols __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (null_resettable, copy) NSArray<NSString *> *veryShortWeekdaySymbols __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (null_resettable, copy) NSArray<NSString *> *standaloneWeekdaySymbols __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (null_resettable, copy) NSArray<NSString *> *shortStandaloneWeekdaySymbols __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (null_resettable, copy) NSArray<NSString *> *veryShortStandaloneWeekdaySymbols __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (null_resettable, copy) NSArray<NSString *> *quarterSymbols __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (null_resettable, copy) NSArray<NSString *> *shortQuarterSymbols __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (null_resettable, copy) NSArray<NSString *> *standaloneQuarterSymbols __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (null_resettable, copy) NSArray<NSString *> *shortStandaloneQuarterSymbols __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (nullable, copy) NSDate *gregorianStartDate __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property BOOL doesRelativeDateFormatting __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */

#pragma clang assume_nonnull end







// @class NSLocale;
#ifndef _REWRITER_typedef_NSLocale
#define _REWRITER_typedef_NSLocale
typedef struct objc_object NSLocale;
typedef struct {} _objc_exc_NSLocale;
#endif

#ifndef _REWRITER_typedef_NSCalendar
#define _REWRITER_typedef_NSCalendar
typedef struct objc_object NSCalendar;
typedef struct {} _objc_exc_NSCalendar;
#endif

#ifndef _REWRITER_typedef_NSTimeZone
#define _REWRITER_typedef_NSTimeZone
typedef struct objc_object NSTimeZone;
typedef struct {} _objc_exc_NSTimeZone;
#endif

#ifndef _REWRITER_typedef_NSDate
#define _REWRITER_typedef_NSDate
typedef struct objc_object NSDate;
typedef struct {} _objc_exc_NSDate;
#endif


#pragma clang assume_nonnull begin

typedef NSUInteger NSDateIntervalFormatterStyle; enum {
    NSDateIntervalFormatterNoStyle = 0,
    NSDateIntervalFormatterShortStyle = 1,
    NSDateIntervalFormatterMediumStyle = 2,
    NSDateIntervalFormatterLongStyle = 3,
    NSDateIntervalFormatterFullStyle = 4
} __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));




__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))

#ifndef _REWRITER_typedef_NSDateIntervalFormatter
#define _REWRITER_typedef_NSDateIntervalFormatter
typedef struct objc_object NSDateIntervalFormatter;
typedef struct {} _objc_exc_NSDateIntervalFormatter;
#endif

struct NSDateIntervalFormatter_IMPL {
	struct NSFormatter_IMPL NSFormatter_IVARS;
	NSLocale *__strong _locale;
	NSCalendar *__strong _calendar;
	NSTimeZone *__strong _timeZone;
	NSString *__strong _dateTemplate;
	NSString *__strong _dateTemplateFromStyles;
	void *_formatter;
	NSDateIntervalFormatterStyle _dateStyle;
	NSDateIntervalFormatterStyle _timeStyle;
	BOOL _modified;
	BOOL _useTemplate;
	__strong dispatch_semaphore_t _lock;
	void *_reserved[4];
};


// @property (null_resettable, copy) NSLocale *locale;
// @property (null_resettable, copy) NSCalendar *calendar;
// @property (null_resettable, copy) NSTimeZone *timeZone;
// @property (null_resettable, copy) NSString *dateTemplate;
// @property NSDateIntervalFormatterStyle dateStyle;
// @property NSDateIntervalFormatterStyle timeStyle;
// - (NSString *)stringFromDate:(NSDate *)fromDate toDate:(NSDate *)toDate;

// - (nullable NSString *)stringFromDateInterval:(NSDateInterval *)dateInterval __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

/* @end */

#pragma clang assume_nonnull end








#pragma clang assume_nonnull begin

// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSDate
#define _REWRITER_typedef_NSDate
typedef struct objc_object NSDate;
typedef struct {} _objc_exc_NSDate;
#endif

#ifndef _REWRITER_typedef_NSTimeZone
#define _REWRITER_typedef_NSTimeZone
typedef struct objc_object NSTimeZone;
typedef struct {} _objc_exc_NSTimeZone;
#endif


typedef NSUInteger NSISO8601DateFormatOptions; enum {




    NSISO8601DateFormatWithYear __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = kCFISO8601DateFormatWithYear,
    NSISO8601DateFormatWithMonth __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = kCFISO8601DateFormatWithMonth,

    NSISO8601DateFormatWithWeekOfYear __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = kCFISO8601DateFormatWithWeekOfYear,






    NSISO8601DateFormatWithDay __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = kCFISO8601DateFormatWithDay,

    NSISO8601DateFormatWithTime __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = kCFISO8601DateFormatWithTime,
    NSISO8601DateFormatWithTimeZone __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = kCFISO8601DateFormatWithTimeZone,

    NSISO8601DateFormatWithSpaceBetweenDateAndTime __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = kCFISO8601DateFormatWithSpaceBetweenDateAndTime,
    NSISO8601DateFormatWithDashSeparatorInDate __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = kCFISO8601DateFormatWithDashSeparatorInDate,
    NSISO8601DateFormatWithColonSeparatorInTime __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = kCFISO8601DateFormatWithColonSeparatorInTime,
    NSISO8601DateFormatWithColonSeparatorInTimeZone __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = kCFISO8601DateFormatWithColonSeparatorInTimeZone,
    NSISO8601DateFormatWithFractionalSeconds __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0))) = kCFISO8601DateFormatWithFractionalSeconds,

    NSISO8601DateFormatWithFullDate __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = kCFISO8601DateFormatWithFullDate,
    NSISO8601DateFormatWithFullTime __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = kCFISO8601DateFormatWithFullTime,

    NSISO8601DateFormatWithInternetDateTime __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = kCFISO8601DateFormatWithInternetDateTime,
};

__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSISO8601DateFormatter
#define _REWRITER_typedef_NSISO8601DateFormatter
typedef struct objc_object NSISO8601DateFormatter;
typedef struct {} _objc_exc_NSISO8601DateFormatter;
#endif

struct NSISO8601DateFormatter_IMPL {
	struct NSFormatter_IMPL NSFormatter_IVARS;
	CFDateFormatterRef _formatter;
	NSTimeZone *__strong _timeZone;
	NSISO8601DateFormatOptions _formatOptions;
};



// @property (null_resettable, copy) NSTimeZone *timeZone;

// @property NSISO8601DateFormatOptions formatOptions;




// - (instancetype)init __attribute__((objc_designated_initializer));

// - (NSString *)stringFromDate:(NSDate *)date;
// - (nullable NSDate *)dateFromString:(NSString *)string;

// + (NSString *)stringFromDate:(NSDate *)date timeZone:(NSTimeZone *)timeZone formatOptions:(NSISO8601DateFormatOptions)formatOptions;

/* @end */

#pragma clang assume_nonnull end






// @class NSNumberFormatter;
#ifndef _REWRITER_typedef_NSNumberFormatter
#define _REWRITER_typedef_NSNumberFormatter
typedef struct objc_object NSNumberFormatter;
typedef struct {} _objc_exc_NSNumberFormatter;
#endif


#pragma clang assume_nonnull begin

typedef NSInteger NSMassFormatterUnit; enum {
    NSMassFormatterUnitGram = 11,
    NSMassFormatterUnitKilogram = 14,
    NSMassFormatterUnitOunce = (6 << 8) + 1,
    NSMassFormatterUnitPound = (6 << 8) + 2,
    NSMassFormatterUnitStone = (6 << 8) + 3,
} __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))

#ifndef _REWRITER_typedef_NSMassFormatter
#define _REWRITER_typedef_NSMassFormatter
typedef struct objc_object NSMassFormatter;
typedef struct {} _objc_exc_NSMassFormatter;
#endif

struct NSMassFormatter_IMPL {
	struct NSFormatter_IMPL NSFormatter_IVARS;
	void *_formatter;
	BOOL _isForPersonMassUse;
	void *_reserved[2];
};


// @property (null_resettable, copy) NSNumberFormatter *numberFormatter;
// @property NSFormattingUnitStyle unitStyle;
// @property (getter = isForPersonMassUse) BOOL forPersonMassUse;


// - (NSString *)stringFromValue:(double)value unit:(NSMassFormatterUnit)unit;


// - (NSString *)stringFromKilograms:(double)numberInKilograms;


// - (NSString *)unitStringFromValue:(double)value unit:(NSMassFormatterUnit)unit;


// - (NSString *)unitStringFromKilograms:(double)numberInKilograms usedUnit:(nullable NSMassFormatterUnit *)unitp;


// - (BOOL)getObjectValue:(out id _Nullable * _Nullable)obj forString:(NSString *)string errorDescription:(out NSString * _Nullable * _Nullable)error;
/* @end */

#pragma clang assume_nonnull end






#pragma clang assume_nonnull begin

typedef NSInteger NSLengthFormatterUnit; enum {
    NSLengthFormatterUnitMillimeter = 8,
    NSLengthFormatterUnitCentimeter = 9,
    NSLengthFormatterUnitMeter = 11,
    NSLengthFormatterUnitKilometer = 14,
    NSLengthFormatterUnitInch = (5 << 8) + 1,
    NSLengthFormatterUnitFoot = (5 << 8) + 2,
    NSLengthFormatterUnitYard = (5 << 8) + 3,
    NSLengthFormatterUnitMile = (5 << 8) + 4,
} __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))

#ifndef _REWRITER_typedef_NSLengthFormatter
#define _REWRITER_typedef_NSLengthFormatter
typedef struct objc_object NSLengthFormatter;
typedef struct {} _objc_exc_NSLengthFormatter;
#endif

struct NSLengthFormatter_IMPL {
	struct NSFormatter_IMPL NSFormatter_IVARS;
	void *_formatter;
	BOOL _isForPersonHeight;
	void *_reserved[2];
};

// @property (null_resettable, copy) NSNumberFormatter *numberFormatter;
// @property NSFormattingUnitStyle unitStyle;

// @property (getter = isForPersonHeightUse) BOOL forPersonHeightUse;


// - (NSString *)stringFromValue:(double)value unit:(NSLengthFormatterUnit)unit;


// - (NSString *)stringFromMeters:(double)numberInMeters;


// - (NSString *)unitStringFromValue:(double)value unit:(NSLengthFormatterUnit)unit;


// - (NSString *)unitStringFromMeters:(double)numberInMeters usedUnit:(nullable NSLengthFormatterUnit *)unitp;


// - (BOOL)getObjectValue:(out id _Nullable * _Nullable)obj forString:(NSString *)string errorDescription:(out NSString * _Nullable * _Nullable)error;
/* @end */

#pragma clang assume_nonnull end






#pragma clang assume_nonnull begin

typedef NSInteger NSEnergyFormatterUnit; enum {
    NSEnergyFormatterUnitJoule = 11,
    NSEnergyFormatterUnitKilojoule = 14,
    NSEnergyFormatterUnitCalorie = (7 << 8) + 1,
    NSEnergyFormatterUnitKilocalorie = (7 << 8) + 2,
} __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))

#ifndef _REWRITER_typedef_NSEnergyFormatter
#define _REWRITER_typedef_NSEnergyFormatter
typedef struct objc_object NSEnergyFormatter;
typedef struct {} _objc_exc_NSEnergyFormatter;
#endif

struct NSEnergyFormatter_IMPL {
	struct NSFormatter_IMPL NSFormatter_IVARS;
	void *_formatter;
	BOOL _isForFoodEnergyUse;
	void *_reserved[2];
};

// @property (null_resettable, copy) NSNumberFormatter *numberFormatter;
// @property NSFormattingUnitStyle unitStyle;
// @property (getter = isForFoodEnergyUse) BOOL forFoodEnergyUse;


// - (NSString *)stringFromValue:(double)value unit:(NSEnergyFormatterUnit)unit;


// - (NSString *)stringFromJoules:(double)numberInJoules;


// - (NSString *)unitStringFromValue:(double)value unit:(NSEnergyFormatterUnit)unit;


// - (NSString *)unitStringFromJoules:(double)numberInJoules usedUnit:(nullable NSEnergyFormatterUnit *)unitp;


// - (BOOL)getObjectValue:(out id _Nullable * _Nullable)obj forString:(NSString *)string errorDescription:(out NSString * _Nullable * _Nullable)error;
/* @end */

#pragma clang assume_nonnull end















#pragma clang assume_nonnull begin





__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSUnitConverter
#define _REWRITER_typedef_NSUnitConverter
typedef struct objc_object NSUnitConverter;
typedef struct {} _objc_exc_NSUnitConverter;
#endif

struct NSUnitConverter_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};

// - (double)baseUnitValueFromValue:(double)value;






// - (double)valueFromBaseUnitValue:(double)baseUnitValue;

/* @end */



__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSUnitConverterLinear
#define _REWRITER_typedef_NSUnitConverterLinear
typedef struct objc_object NSUnitConverterLinear;
typedef struct {} _objc_exc_NSUnitConverterLinear;
#endif

struct NSUnitConverterLinear_IMPL {
	struct NSUnitConverter_IMPL NSUnitConverter_IVARS;
	double _coefficient;
	double _constant;
};

// @property (readonly) double coefficient;
// @property (readonly) double constant;

// - (instancetype)initWithCoefficient:(double)coefficient;

// - (instancetype)initWithCoefficient:(double)coefficient constant:(double)constant __attribute__((objc_designated_initializer));

/* @end */







__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSUnit
#define _REWRITER_typedef_NSUnit
typedef struct objc_object NSUnit;
typedef struct {} _objc_exc_NSUnit;
#endif

struct NSUnit_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSString *__strong _symbol;
};


// @property (readonly, copy) NSString *symbol;

// - (instancetype)init __attribute__((unavailable));
// + (instancetype)new __attribute__((unavailable));

// - (instancetype)initWithSymbol:(NSString *)symbol __attribute__((objc_designated_initializer));

/* @end */





__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSDimension
#define _REWRITER_typedef_NSDimension
typedef struct objc_object NSDimension;
typedef struct {} _objc_exc_NSDimension;
#endif

struct NSDimension_IMPL {
	struct NSUnit_IMPL NSUnit_IVARS;
	NSUInteger _reserved;
	NSUnitConverter *__strong _converter;
};


// @property (readonly, copy) NSUnitConverter *converter;

// - (instancetype)initWithSymbol:(NSString *)symbol converter:(NSUnitConverter *)converter __attribute__((objc_designated_initializer));






// + (instancetype)baseUnit;

/* @end */





__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSUnitAcceleration
#define _REWRITER_typedef_NSUnitAcceleration
typedef struct objc_object NSUnitAcceleration;
typedef struct {} _objc_exc_NSUnitAcceleration;
#endif

struct NSUnitAcceleration_IMPL {
	struct NSDimension_IMPL NSDimension_IVARS;
};





@property (class, readonly, copy) NSUnitAcceleration *metersPerSecondSquared;
@property (class, readonly, copy) NSUnitAcceleration *gravity;

/* @end */


__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSUnitAngle
#define _REWRITER_typedef_NSUnitAngle
typedef struct objc_object NSUnitAngle;
typedef struct {} _objc_exc_NSUnitAngle;
#endif

struct NSUnitAngle_IMPL {
	struct NSDimension_IMPL NSDimension_IVARS;
};





@property (class, readonly, copy) NSUnitAngle *degrees;
@property (class, readonly, copy) NSUnitAngle *arcMinutes;
@property (class, readonly, copy) NSUnitAngle *arcSeconds;
@property (class, readonly, copy) NSUnitAngle *radians;
@property (class, readonly, copy) NSUnitAngle *gradians;
@property (class, readonly, copy) NSUnitAngle *revolutions;

/* @end */


__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSUnitArea
#define _REWRITER_typedef_NSUnitArea
typedef struct objc_object NSUnitArea;
typedef struct {} _objc_exc_NSUnitArea;
#endif

struct NSUnitArea_IMPL {
	struct NSDimension_IMPL NSDimension_IVARS;
};





@property (class, readonly, copy) NSUnitArea *squareMegameters;
@property (class, readonly, copy) NSUnitArea *squareKilometers;
@property (class, readonly, copy) NSUnitArea *squareMeters;
@property (class, readonly, copy) NSUnitArea *squareCentimeters;
@property (class, readonly, copy) NSUnitArea *squareMillimeters;
@property (class, readonly, copy) NSUnitArea *squareMicrometers;
@property (class, readonly, copy) NSUnitArea *squareNanometers;
@property (class, readonly, copy) NSUnitArea *squareInches;
@property (class, readonly, copy) NSUnitArea *squareFeet;
@property (class, readonly, copy) NSUnitArea *squareYards;
@property (class, readonly, copy) NSUnitArea *squareMiles;
@property (class, readonly, copy) NSUnitArea *acres;
@property (class, readonly, copy) NSUnitArea *ares;
@property (class, readonly, copy) NSUnitArea *hectares;

/* @end */


__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSUnitConcentrationMass
#define _REWRITER_typedef_NSUnitConcentrationMass
typedef struct objc_object NSUnitConcentrationMass;
typedef struct {} _objc_exc_NSUnitConcentrationMass;
#endif

struct NSUnitConcentrationMass_IMPL {
	struct NSDimension_IMPL NSDimension_IVARS;
};





@property (class, readonly, copy) NSUnitConcentrationMass *gramsPerLiter;
@property (class, readonly, copy) NSUnitConcentrationMass *milligramsPerDeciliter;

// + (NSUnitConcentrationMass *)millimolesPerLiterWithGramsPerMole:(double)gramsPerMole;

/* @end */


__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSUnitDispersion
#define _REWRITER_typedef_NSUnitDispersion
typedef struct objc_object NSUnitDispersion;
typedef struct {} _objc_exc_NSUnitDispersion;
#endif

struct NSUnitDispersion_IMPL {
	struct NSDimension_IMPL NSDimension_IVARS;
};




@property (class, readonly, copy) NSUnitDispersion *partsPerMillion;

/* @end */


__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSUnitDuration
#define _REWRITER_typedef_NSUnitDuration
typedef struct objc_object NSUnitDuration;
typedef struct {} _objc_exc_NSUnitDuration;
#endif

struct NSUnitDuration_IMPL {
	struct NSDimension_IMPL NSDimension_IVARS;
};





@property (class, readonly, copy) NSUnitDuration *seconds;
@property (class, readonly, copy) NSUnitDuration *minutes;
@property (class, readonly, copy) NSUnitDuration *hours;

/* @end */


__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSUnitElectricCharge
#define _REWRITER_typedef_NSUnitElectricCharge
typedef struct objc_object NSUnitElectricCharge;
typedef struct {} _objc_exc_NSUnitElectricCharge;
#endif

struct NSUnitElectricCharge_IMPL {
	struct NSDimension_IMPL NSDimension_IVARS;
};





@property (class, readonly, copy) NSUnitElectricCharge *coulombs;
@property (class, readonly, copy) NSUnitElectricCharge *megaampereHours;
@property (class, readonly, copy) NSUnitElectricCharge *kiloampereHours;
@property (class, readonly, copy) NSUnitElectricCharge *ampereHours;
@property (class, readonly, copy) NSUnitElectricCharge *milliampereHours;
@property (class, readonly, copy) NSUnitElectricCharge *microampereHours;

/* @end */


__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSUnitElectricCurrent
#define _REWRITER_typedef_NSUnitElectricCurrent
typedef struct objc_object NSUnitElectricCurrent;
typedef struct {} _objc_exc_NSUnitElectricCurrent;
#endif

struct NSUnitElectricCurrent_IMPL {
	struct NSDimension_IMPL NSDimension_IVARS;
};





@property (class, readonly, copy) NSUnitElectricCurrent *megaamperes;
@property (class, readonly, copy) NSUnitElectricCurrent *kiloamperes;
@property (class, readonly, copy) NSUnitElectricCurrent *amperes;
@property (class, readonly, copy) NSUnitElectricCurrent *milliamperes;
@property (class, readonly, copy) NSUnitElectricCurrent *microamperes;

/* @end */


__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSUnitElectricPotentialDifference
#define _REWRITER_typedef_NSUnitElectricPotentialDifference
typedef struct objc_object NSUnitElectricPotentialDifference;
typedef struct {} _objc_exc_NSUnitElectricPotentialDifference;
#endif

struct NSUnitElectricPotentialDifference_IMPL {
	struct NSDimension_IMPL NSDimension_IVARS;
};





@property (class, readonly, copy) NSUnitElectricPotentialDifference *megavolts;
@property (class, readonly, copy) NSUnitElectricPotentialDifference *kilovolts;
@property (class, readonly, copy) NSUnitElectricPotentialDifference *volts;
@property (class, readonly, copy) NSUnitElectricPotentialDifference *millivolts;
@property (class, readonly, copy) NSUnitElectricPotentialDifference *microvolts;

/* @end */


__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSUnitElectricResistance
#define _REWRITER_typedef_NSUnitElectricResistance
typedef struct objc_object NSUnitElectricResistance;
typedef struct {} _objc_exc_NSUnitElectricResistance;
#endif

struct NSUnitElectricResistance_IMPL {
	struct NSDimension_IMPL NSDimension_IVARS;
};





@property (class, readonly, copy) NSUnitElectricResistance *megaohms;
@property (class, readonly, copy) NSUnitElectricResistance *kiloohms;
@property (class, readonly, copy) NSUnitElectricResistance *ohms;
@property (class, readonly, copy) NSUnitElectricResistance *milliohms;
@property (class, readonly, copy) NSUnitElectricResistance *microohms;

/* @end */


__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSUnitEnergy
#define _REWRITER_typedef_NSUnitEnergy
typedef struct objc_object NSUnitEnergy;
typedef struct {} _objc_exc_NSUnitEnergy;
#endif

struct NSUnitEnergy_IMPL {
	struct NSDimension_IMPL NSDimension_IVARS;
};





@property (class, readonly, copy) NSUnitEnergy *kilojoules;
@property (class, readonly, copy) NSUnitEnergy *joules;
@property (class, readonly, copy) NSUnitEnergy *kilocalories;
@property (class, readonly, copy) NSUnitEnergy *calories;
@property (class, readonly, copy) NSUnitEnergy *kilowattHours;

/* @end */


__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSUnitFrequency
#define _REWRITER_typedef_NSUnitFrequency
typedef struct objc_object NSUnitFrequency;
typedef struct {} _objc_exc_NSUnitFrequency;
#endif

struct NSUnitFrequency_IMPL {
	struct NSDimension_IMPL NSDimension_IVARS;
};





@property (class, readonly, copy) NSUnitFrequency *terahertz;
@property (class, readonly, copy) NSUnitFrequency *gigahertz;
@property (class, readonly, copy) NSUnitFrequency *megahertz;
@property (class, readonly, copy) NSUnitFrequency *kilohertz;
@property (class, readonly, copy) NSUnitFrequency *hertz;
@property (class, readonly, copy) NSUnitFrequency *millihertz;
@property (class, readonly, copy) NSUnitFrequency *microhertz;
@property (class, readonly, copy) NSUnitFrequency *nanohertz;

/* @end */


__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSUnitFuelEfficiency
#define _REWRITER_typedef_NSUnitFuelEfficiency
typedef struct objc_object NSUnitFuelEfficiency;
typedef struct {} _objc_exc_NSUnitFuelEfficiency;
#endif

struct NSUnitFuelEfficiency_IMPL {
	struct NSDimension_IMPL NSDimension_IVARS;
};





@property (class, readonly, copy) NSUnitFuelEfficiency *litersPer100Kilometers;
@property (class, readonly, copy) NSUnitFuelEfficiency *milesPerImperialGallon;
@property (class, readonly, copy) NSUnitFuelEfficiency *milesPerGallon;

/* @end */


__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSUnitLength
#define _REWRITER_typedef_NSUnitLength
typedef struct objc_object NSUnitLength;
typedef struct {} _objc_exc_NSUnitLength;
#endif

struct NSUnitLength_IMPL {
	struct NSDimension_IMPL NSDimension_IVARS;
};





@property (class, readonly, copy) NSUnitLength *megameters;
@property (class, readonly, copy) NSUnitLength *kilometers;
@property (class, readonly, copy) NSUnitLength *hectometers;
@property (class, readonly, copy) NSUnitLength *decameters;
@property (class, readonly, copy) NSUnitLength *meters;
@property (class, readonly, copy) NSUnitLength *decimeters;
@property (class, readonly, copy) NSUnitLength *centimeters;
@property (class, readonly, copy) NSUnitLength *millimeters;
@property (class, readonly, copy) NSUnitLength *micrometers;
@property (class, readonly, copy) NSUnitLength *nanometers;
@property (class, readonly, copy) NSUnitLength *picometers;
@property (class, readonly, copy) NSUnitLength *inches;
@property (class, readonly, copy) NSUnitLength *feet;
@property (class, readonly, copy) NSUnitLength *yards;
@property (class, readonly, copy) NSUnitLength *miles;
@property (class, readonly, copy) NSUnitLength *scandinavianMiles;
@property (class, readonly, copy) NSUnitLength *lightyears;
@property (class, readonly, copy) NSUnitLength *nauticalMiles;
@property (class, readonly, copy) NSUnitLength *fathoms;
@property (class, readonly, copy) NSUnitLength *furlongs;
@property (class, readonly, copy) NSUnitLength *astronomicalUnits;
@property (class, readonly, copy) NSUnitLength *parsecs;

/* @end */


__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSUnitIlluminance
#define _REWRITER_typedef_NSUnitIlluminance
typedef struct objc_object NSUnitIlluminance;
typedef struct {} _objc_exc_NSUnitIlluminance;
#endif

struct NSUnitIlluminance_IMPL {
	struct NSDimension_IMPL NSDimension_IVARS;
};





@property (class, readonly, copy) NSUnitIlluminance *lux;

/* @end */


__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSUnitMass
#define _REWRITER_typedef_NSUnitMass
typedef struct objc_object NSUnitMass;
typedef struct {} _objc_exc_NSUnitMass;
#endif

struct NSUnitMass_IMPL {
	struct NSDimension_IMPL NSDimension_IVARS;
};





@property (class, readonly, copy) NSUnitMass *kilograms;
@property (class, readonly, copy) NSUnitMass *grams;
@property (class, readonly, copy) NSUnitMass *decigrams;
@property (class, readonly, copy) NSUnitMass *centigrams;
@property (class, readonly, copy) NSUnitMass *milligrams;
@property (class, readonly, copy) NSUnitMass *micrograms;
@property (class, readonly, copy) NSUnitMass *nanograms;
@property (class, readonly, copy) NSUnitMass *picograms;
@property (class, readonly, copy) NSUnitMass *ounces;
@property (class, readonly, copy) NSUnitMass *poundsMass;
@property (class, readonly, copy) NSUnitMass *stones;
@property (class, readonly, copy) NSUnitMass *metricTons;
@property (class, readonly, copy) NSUnitMass *shortTons;
@property (class, readonly, copy) NSUnitMass *carats;
@property (class, readonly, copy) NSUnitMass *ouncesTroy;
@property (class, readonly, copy) NSUnitMass *slugs;

/* @end */


__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSUnitPower
#define _REWRITER_typedef_NSUnitPower
typedef struct objc_object NSUnitPower;
typedef struct {} _objc_exc_NSUnitPower;
#endif

struct NSUnitPower_IMPL {
	struct NSDimension_IMPL NSDimension_IVARS;
};





@property (class, readonly, copy) NSUnitPower *terawatts;
@property (class, readonly, copy) NSUnitPower *gigawatts;
@property (class, readonly, copy) NSUnitPower *megawatts;
@property (class, readonly, copy) NSUnitPower *kilowatts;
@property (class, readonly, copy) NSUnitPower *watts;
@property (class, readonly, copy) NSUnitPower *milliwatts;
@property (class, readonly, copy) NSUnitPower *microwatts;
@property (class, readonly, copy) NSUnitPower *nanowatts;
@property (class, readonly, copy) NSUnitPower *picowatts;
@property (class, readonly, copy) NSUnitPower *femtowatts;
@property (class, readonly, copy) NSUnitPower *horsepower;

/* @end */


__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSUnitPressure
#define _REWRITER_typedef_NSUnitPressure
typedef struct objc_object NSUnitPressure;
typedef struct {} _objc_exc_NSUnitPressure;
#endif

struct NSUnitPressure_IMPL {
	struct NSDimension_IMPL NSDimension_IVARS;
};





@property (class, readonly, copy) NSUnitPressure *newtonsPerMetersSquared;
@property (class, readonly, copy) NSUnitPressure *gigapascals;
@property (class, readonly, copy) NSUnitPressure *megapascals;
@property (class, readonly, copy) NSUnitPressure *kilopascals;
@property (class, readonly, copy) NSUnitPressure *hectopascals;
@property (class, readonly, copy) NSUnitPressure *inchesOfMercury;
@property (class, readonly, copy) NSUnitPressure *bars;
@property (class, readonly, copy) NSUnitPressure *millibars;
@property (class, readonly, copy) NSUnitPressure *millimetersOfMercury;
@property (class, readonly, copy) NSUnitPressure *poundsForcePerSquareInch;

/* @end */


__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSUnitSpeed
#define _REWRITER_typedef_NSUnitSpeed
typedef struct objc_object NSUnitSpeed;
typedef struct {} _objc_exc_NSUnitSpeed;
#endif

struct NSUnitSpeed_IMPL {
	struct NSDimension_IMPL NSDimension_IVARS;
};





@property (class, readonly, copy) NSUnitSpeed *metersPerSecond;
@property (class, readonly, copy) NSUnitSpeed *kilometersPerHour;
@property (class, readonly, copy) NSUnitSpeed *milesPerHour;
@property (class, readonly, copy) NSUnitSpeed *knots;

/* @end */


__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSUnitTemperature
#define _REWRITER_typedef_NSUnitTemperature
typedef struct objc_object NSUnitTemperature;
typedef struct {} _objc_exc_NSUnitTemperature;
#endif

struct NSUnitTemperature_IMPL {
	struct NSDimension_IMPL NSDimension_IVARS;
};




@property (class, readonly, copy) NSUnitTemperature *kelvin;
@property (class, readonly, copy) NSUnitTemperature *celsius;
@property (class, readonly, copy) NSUnitTemperature *fahrenheit;


/* @end */


__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSUnitVolume
#define _REWRITER_typedef_NSUnitVolume
typedef struct objc_object NSUnitVolume;
typedef struct {} _objc_exc_NSUnitVolume;
#endif

struct NSUnitVolume_IMPL {
	struct NSDimension_IMPL NSDimension_IVARS;
};





@property (class, readonly, copy) NSUnitVolume *megaliters;
@property (class, readonly, copy) NSUnitVolume *kiloliters;
@property (class, readonly, copy) NSUnitVolume *liters;
@property (class, readonly, copy) NSUnitVolume *deciliters;
@property (class, readonly, copy) NSUnitVolume *centiliters;
@property (class, readonly, copy) NSUnitVolume *milliliters;
@property (class, readonly, copy) NSUnitVolume *cubicKilometers;
@property (class, readonly, copy) NSUnitVolume *cubicMeters;
@property (class, readonly, copy) NSUnitVolume *cubicDecimeters;
@property (class, readonly, copy) NSUnitVolume *cubicCentimeters;
@property (class, readonly, copy) NSUnitVolume *cubicMillimeters;
@property (class, readonly, copy) NSUnitVolume *cubicInches;
@property (class, readonly, copy) NSUnitVolume *cubicFeet;
@property (class, readonly, copy) NSUnitVolume *cubicYards;
@property (class, readonly, copy) NSUnitVolume *cubicMiles;
@property (class, readonly, copy) NSUnitVolume *acreFeet;
@property (class, readonly, copy) NSUnitVolume *bushels;
@property (class, readonly, copy) NSUnitVolume *teaspoons;
@property (class, readonly, copy) NSUnitVolume *tablespoons;
@property (class, readonly, copy) NSUnitVolume *fluidOunces;
@property (class, readonly, copy) NSUnitVolume *cups;
@property (class, readonly, copy) NSUnitVolume *pints;
@property (class, readonly, copy) NSUnitVolume *quarts;
@property (class, readonly, copy) NSUnitVolume *gallons;
@property (class, readonly, copy) NSUnitVolume *imperialTeaspoons;
@property (class, readonly, copy) NSUnitVolume *imperialTablespoons;
@property (class, readonly, copy) NSUnitVolume *imperialFluidOunces;
@property (class, readonly, copy) NSUnitVolume *imperialPints;
@property (class, readonly, copy) NSUnitVolume *imperialQuarts;
@property (class, readonly, copy) NSUnitVolume *imperialGallons;
@property (class, readonly, copy) NSUnitVolume *metricCups;

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0)))

#ifndef _REWRITER_typedef_NSMeasurement
#define _REWRITER_typedef_NSMeasurement
typedef struct objc_object NSMeasurement;
typedef struct {} _objc_exc_NSMeasurement;
#endif

struct NSMeasurement_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	__strong UnitType _unit;
	double _doubleValue;
};


// @property (readonly, copy) UnitType unit;
// @property (readonly) double doubleValue;

// - (instancetype)init __attribute__((unavailable));
// - (instancetype)initWithDoubleValue:(double)doubleValue unit:(UnitType)unit __attribute__((objc_designated_initializer));





// - (BOOL)canBeConvertedToUnit:(NSUnit *)unit;






// - (NSMeasurement *)measurementByConvertingToUnit:(NSUnit *)unit;






// - (NSMeasurement<UnitType> *)measurementByAddingMeasurement:(NSMeasurement<UnitType> *)measurement;
// - (NSMeasurement<UnitType> *)measurementBySubtractingMeasurement:(NSMeasurement<UnitType> *)measurement;

/* @end */

#pragma clang assume_nonnull end















// @class NSLocale;
#ifndef _REWRITER_typedef_NSLocale
#define _REWRITER_typedef_NSLocale
typedef struct objc_object NSLocale;
typedef struct {} _objc_exc_NSLocale;
#endif

#ifndef _REWRITER_typedef_NSError
#define _REWRITER_typedef_NSError
typedef struct objc_object NSError;
typedef struct {} _objc_exc_NSError;
#endif

#ifndef _REWRITER_typedef_NSMutableDictionary
#define _REWRITER_typedef_NSMutableDictionary
typedef struct objc_object NSMutableDictionary;
typedef struct {} _objc_exc_NSMutableDictionary;
#endif

#ifndef _REWRITER_typedef_NSRecursiveLock
#define _REWRITER_typedef_NSRecursiveLock
typedef struct objc_object NSRecursiveLock;
typedef struct {} _objc_exc_NSRecursiveLock;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSCache
#define _REWRITER_typedef_NSCache
typedef struct objc_object NSCache;
typedef struct {} _objc_exc_NSCache;
#endif


#pragma clang assume_nonnull begin

typedef NSUInteger NSNumberFormatterBehavior; enum {
    NSNumberFormatterBehaviorDefault = 0,



    NSNumberFormatterBehavior10_4 = 1040,
};


#ifndef _REWRITER_typedef_NSNumberFormatter
#define _REWRITER_typedef_NSNumberFormatter
typedef struct objc_object NSNumberFormatter;
typedef struct {} _objc_exc_NSNumberFormatter;
#endif

struct NSNumberFormatter_IMPL {
	struct NSFormatter_IMPL NSFormatter_IVARS;
	NSMutableDictionary *__strong _attributes;
	CFNumberFormatterRef _formatter;
	NSUInteger _counter;
	NSNumberFormatterBehavior _behavior;
	NSRecursiveLock *__strong _lock;
	unsigned long _stateBitMask;
	NSInteger _cacheGeneration;
	void *_reserved[8];
};


// @property NSFormattingContext formattingContext __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (BOOL)getObjectValue:(out id _Nullable * _Nullable)obj forString:(NSString *)string range:(inout nullable NSRange *)rangep error:(out NSError **)error;




// - (nullable NSString *)stringFromNumber:(NSNumber *)number;
// - (nullable NSNumber *)numberFromString:(NSString *)string;

typedef NSUInteger NSNumberFormatterStyle; enum {
    NSNumberFormatterNoStyle = kCFNumberFormatterNoStyle,
    NSNumberFormatterDecimalStyle = kCFNumberFormatterDecimalStyle,
    NSNumberFormatterCurrencyStyle = kCFNumberFormatterCurrencyStyle,
    NSNumberFormatterPercentStyle = kCFNumberFormatterPercentStyle,
    NSNumberFormatterScientificStyle = kCFNumberFormatterScientificStyle,
    NSNumberFormatterSpellOutStyle = kCFNumberFormatterSpellOutStyle,
    NSNumberFormatterOrdinalStyle __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = kCFNumberFormatterOrdinalStyle,
    NSNumberFormatterCurrencyISOCodeStyle __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = kCFNumberFormatterCurrencyISOCodeStyle,
    NSNumberFormatterCurrencyPluralStyle __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = kCFNumberFormatterCurrencyPluralStyle,
    NSNumberFormatterCurrencyAccountingStyle __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = kCFNumberFormatterCurrencyAccountingStyle,
};

// + (NSString *)localizedStringFromNumber:(NSNumber *)num numberStyle:(NSNumberFormatterStyle)nstyle __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// + (NSNumberFormatterBehavior)defaultFormatterBehavior;
// + (void)setDefaultFormatterBehavior:(NSNumberFormatterBehavior)behavior;

// @property NSNumberFormatterStyle numberStyle;
// @property (null_resettable, copy) NSLocale *locale;
// @property BOOL generatesDecimalNumbers;
// @property NSNumberFormatterBehavior formatterBehavior;

// @property (null_resettable, copy) NSString *negativeFormat;
// @property (nullable, copy) NSDictionary<NSString *, id> *textAttributesForNegativeValues;
// @property (null_resettable, copy) NSString *positiveFormat;
// @property (nullable, copy) NSDictionary<NSString *, id> *textAttributesForPositiveValues;
// @property BOOL allowsFloats;
// @property (null_resettable, copy) NSString *decimalSeparator;
// @property BOOL alwaysShowsDecimalSeparator;
// @property (null_resettable, copy) NSString *currencyDecimalSeparator;
// @property BOOL usesGroupingSeparator;
// @property (null_resettable, copy) NSString *groupingSeparator;

// @property (nullable, copy) NSString *zeroSymbol;
// @property (nullable, copy) NSDictionary<NSString *, id> *textAttributesForZero;
// @property (copy) NSString *nilSymbol;
// @property (nullable, copy) NSDictionary<NSString *, id> *textAttributesForNil;
// @property (null_resettable, copy) NSString *notANumberSymbol;
// @property (nullable, copy) NSDictionary<NSString *, id> *textAttributesForNotANumber;
// @property (copy) NSString *positiveInfinitySymbol;
// @property (nullable, copy) NSDictionary<NSString *, id> *textAttributesForPositiveInfinity;
// @property (copy) NSString *negativeInfinitySymbol;
// @property (nullable, copy) NSDictionary<NSString *, id> *textAttributesForNegativeInfinity;

// @property (null_resettable, copy) NSString *positivePrefix;
// @property (null_resettable, copy) NSString *positiveSuffix;
// @property (null_resettable, copy) NSString *negativePrefix;
// @property (null_resettable, copy) NSString *negativeSuffix;
// @property (null_resettable, copy) NSString *currencyCode;
// @property (null_resettable, copy) NSString *currencySymbol;
// @property (null_resettable, copy) NSString *internationalCurrencySymbol;
// @property (null_resettable, copy) NSString *percentSymbol;
// @property (null_resettable, copy) NSString *perMillSymbol;
// @property (null_resettable, copy) NSString *minusSign;
// @property (null_resettable, copy) NSString *plusSign;
// @property (null_resettable, copy) NSString *exponentSymbol;

// @property NSUInteger groupingSize;
// @property NSUInteger secondaryGroupingSize;
// @property (nullable, copy) NSNumber *multiplier;
// @property NSUInteger formatWidth;
// @property (null_resettable, copy) NSString *paddingCharacter;


typedef NSUInteger NSNumberFormatterPadPosition; enum {
    NSNumberFormatterPadBeforePrefix = kCFNumberFormatterPadBeforePrefix,
    NSNumberFormatterPadAfterPrefix = kCFNumberFormatterPadAfterPrefix,
    NSNumberFormatterPadBeforeSuffix = kCFNumberFormatterPadBeforeSuffix,
    NSNumberFormatterPadAfterSuffix = kCFNumberFormatterPadAfterSuffix
};

typedef NSUInteger NSNumberFormatterRoundingMode; enum {
    NSNumberFormatterRoundCeiling = kCFNumberFormatterRoundCeiling,
    NSNumberFormatterRoundFloor = kCFNumberFormatterRoundFloor,
    NSNumberFormatterRoundDown = kCFNumberFormatterRoundDown,
    NSNumberFormatterRoundUp = kCFNumberFormatterRoundUp,
    NSNumberFormatterRoundHalfEven = kCFNumberFormatterRoundHalfEven,
    NSNumberFormatterRoundHalfDown = kCFNumberFormatterRoundHalfDown,
    NSNumberFormatterRoundHalfUp = kCFNumberFormatterRoundHalfUp
};

// @property NSNumberFormatterPadPosition paddingPosition;
// @property NSNumberFormatterRoundingMode roundingMode;
// @property (null_resettable, copy) NSNumber *roundingIncrement;
// @property NSUInteger minimumIntegerDigits;
// @property NSUInteger maximumIntegerDigits;
// @property NSUInteger minimumFractionDigits;
// @property NSUInteger maximumFractionDigits;
// @property (nullable, copy) NSNumber *minimum;
// @property (nullable, copy) NSNumber *maximum;
// @property (null_resettable, copy) NSString *currencyGroupingSeparator __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (getter=isLenient) BOOL lenient __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property BOOL usesSignificantDigits __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property NSUInteger minimumSignificantDigits __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property NSUInteger maximumSignificantDigits __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (getter=isPartialStringValidationEnabled) BOOL partialStringValidationEnabled __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */


// @class NSDecimalNumberHandler;
#ifndef _REWRITER_typedef_NSDecimalNumberHandler
#define _REWRITER_typedef_NSDecimalNumberHandler
typedef struct objc_object NSDecimalNumberHandler;
typedef struct {} _objc_exc_NSDecimalNumberHandler;
#endif

#pragma clang assume_nonnull end









// @class NSCalendar;
#ifndef _REWRITER_typedef_NSCalendar
#define _REWRITER_typedef_NSCalendar
typedef struct objc_object NSCalendar;
typedef struct {} _objc_exc_NSCalendar;
#endif


typedef NSString * NSLocaleKey __attribute__((swift_wrapper(enum)));

// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif




#pragma clang assume_nonnull begin


#ifndef _REWRITER_typedef_NSLocale
#define _REWRITER_typedef_NSLocale
typedef struct objc_object NSLocale;
typedef struct {} _objc_exc_NSLocale;
#endif

struct NSLocale_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (nullable id)objectForKey:(NSLocaleKey)key;

// - (nullable NSString *)displayNameForKey:(NSLocaleKey)key value:(id)value;

// - (instancetype)initWithLocaleIdentifier:(NSString *)string __attribute__((objc_designated_initializer));

// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

/* @end */


// @interface NSLocale (NSExtendedLocale)

// @property (readonly, copy) NSString *localeIdentifier;
// - (NSString *)localizedStringForLocaleIdentifier:(NSString *)localeIdentifier __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

// @property (readonly, copy) NSString *languageCode __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
// - (nullable NSString *)localizedStringForLanguageCode:(NSString *)languageCode __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

// @property (nullable, readonly, copy) NSString *countryCode __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
// - (nullable NSString *)localizedStringForCountryCode:(NSString *)countryCode __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

// @property (nullable, readonly, copy) NSString *scriptCode __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
// - (nullable NSString *)localizedStringForScriptCode:(NSString *)scriptCode __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

// @property (nullable, readonly, copy) NSString *variantCode __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
// - (nullable NSString *)localizedStringForVariantCode:(NSString *)variantCode __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

// @property (readonly, copy) NSCharacterSet *exemplarCharacterSet __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

// @property (readonly, copy) NSString *calendarIdentifier __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
// - (nullable NSString *)localizedStringForCalendarIdentifier:(NSString *)calendarIdentifier __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

// @property (nullable, readonly, copy) NSString *collationIdentifier __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
// - (nullable NSString *)localizedStringForCollationIdentifier:(NSString *)collationIdentifier __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

// @property (readonly) BOOL usesMetricSystem __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

// @property (readonly, copy) NSString *decimalSeparator __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

// @property (readonly, copy) NSString *groupingSeparator __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

// @property (readonly, copy) NSString *currencySymbol __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

// @property (nullable, readonly, copy) NSString *currencyCode __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
// - (nullable NSString *)localizedStringForCurrencyCode:(NSString *)currencyCode __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

// @property (readonly, copy) NSString *collatorIdentifier __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
// - (nullable NSString *)localizedStringForCollatorIdentifier:(NSString *)collatorIdentifier __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

// @property (readonly, copy) NSString *quotationBeginDelimiter __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

// @property (readonly, copy) NSString *quotationEndDelimiter __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

// @property (readonly, copy) NSString *alternateQuotationBeginDelimiter __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

// @property (readonly, copy) NSString *alternateQuotationEndDelimiter __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

/* @end */


// @interface NSLocale (NSLocaleCreation)

@property (class, readonly, strong) NSLocale *autoupdatingCurrentLocale __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

@property (class, readonly, copy) NSLocale *currentLocale;
@property (class, readonly, copy) NSLocale *systemLocale;

// + (instancetype)localeWithLocaleIdentifier:(NSString *)ident __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (instancetype)init __attribute__((unavailable));

/* @end */


// @interface NSLocale (NSLocaleGeneralInfo)

@property (class, readonly, copy) NSArray<NSString *> *availableLocaleIdentifiers;
@property (class, readonly, copy) NSArray<NSString *> *ISOLanguageCodes;
@property (class, readonly, copy) NSArray<NSString *> *ISOCountryCodes;
@property (class, readonly, copy) NSArray<NSString *> *ISOCurrencyCodes;
@property (class, readonly, copy) NSArray<NSString *> *commonISOCurrencyCodes __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

@property (class, readonly, copy) NSArray<NSString *> *preferredLanguages __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// + (NSDictionary<NSString *, NSString *> *)componentsFromLocaleIdentifier:(NSString *)string;
// + (NSString *)localeIdentifierFromComponents:(NSDictionary<NSString *, NSString *> *)dict;

// + (NSString *)canonicalLocaleIdentifierFromString:(NSString *)string;
// + (NSString *)canonicalLanguageIdentifierFromString:(NSString *)string;

// + (nullable NSString *)localeIdentifierFromWindowsLocaleCode:(uint32_t)lcid __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (uint32_t)windowsLocaleCodeFromLocaleIdentifier:(NSString *)localeIdentifier __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

typedef NSUInteger NSLocaleLanguageDirection; enum {
    NSLocaleLanguageDirectionUnknown = kCFLocaleLanguageDirectionUnknown,
    NSLocaleLanguageDirectionLeftToRight = kCFLocaleLanguageDirectionLeftToRight,
    NSLocaleLanguageDirectionRightToLeft = kCFLocaleLanguageDirectionRightToLeft,
    NSLocaleLanguageDirectionTopToBottom = kCFLocaleLanguageDirectionTopToBottom,
    NSLocaleLanguageDirectionBottomToTop = kCFLocaleLanguageDirectionBottomToTop
};

// + (NSLocaleLanguageDirection)characterDirectionForLanguage:(NSString *)isoLangCode __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (NSLocaleLanguageDirection)lineDirectionForLanguage:(NSString *)isoLangCode __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */



extern "C" NSNotificationName const NSCurrentLocaleDidChangeNotification __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern "C" NSLocaleKey const NSLocaleIdentifier;
extern "C" NSLocaleKey const NSLocaleLanguageCode;
extern "C" NSLocaleKey const NSLocaleCountryCode;
extern "C" NSLocaleKey const NSLocaleScriptCode;
extern "C" NSLocaleKey const NSLocaleVariantCode;
extern "C" NSLocaleKey const NSLocaleExemplarCharacterSet;
extern "C" NSLocaleKey const NSLocaleCalendar;
extern "C" NSLocaleKey const NSLocaleCollationIdentifier;
extern "C" NSLocaleKey const NSLocaleUsesMetricSystem;
extern "C" NSLocaleKey const NSLocaleMeasurementSystem;
extern "C" NSLocaleKey const NSLocaleDecimalSeparator;
extern "C" NSLocaleKey const NSLocaleGroupingSeparator;
extern "C" NSLocaleKey const NSLocaleCurrencySymbol;
extern "C" NSLocaleKey const NSLocaleCurrencyCode;
extern "C" NSLocaleKey const NSLocaleCollatorIdentifier __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLocaleKey const NSLocaleQuotationBeginDelimiterKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLocaleKey const NSLocaleQuotationEndDelimiterKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLocaleKey const NSLocaleAlternateQuotationBeginDelimiterKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLocaleKey const NSLocaleAlternateQuotationEndDelimiterKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSGregorianCalendar __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use NSCalendarIdentifierGregorian instead")));
extern "C" NSString * const NSBuddhistCalendar __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use NSCalendarIdentifierBuddhist instead")));
extern "C" NSString * const NSChineseCalendar __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use NSCalendarIdentifierChinese instead")));
extern "C" NSString * const NSHebrewCalendar __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use NSCalendarIdentifierHebrew instead")));
extern "C" NSString * const NSIslamicCalendar __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use NSCalendarIdentifierIslamic instead")));
extern "C" NSString * const NSIslamicCivilCalendar __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use NSCalendarIdentifierIslamicCivil instead")));
extern "C" NSString * const NSJapaneseCalendar __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use NSCalendarIdentifierJapanese instead")));
extern "C" NSString * const NSRepublicOfChinaCalendar __attribute__((availability(ios,introduced=4_0,deprecated=8_0,message="" "Use NSCalendarIdentifierRepublicOfChina instead")));
extern "C" NSString * const NSPersianCalendar __attribute__((availability(ios,introduced=4_0,deprecated=8_0,message="" "Use NSCalendarIdentifierPersian instead")));
extern "C" NSString * const NSIndianCalendar __attribute__((availability(ios,introduced=4_0,deprecated=8_0,message="" "Use NSCalendarIdentifierIndian instead")));
extern "C" NSString * const NSISO8601Calendar __attribute__((availability(ios,introduced=4_0,deprecated=8_0,message="" "Use NSCalendarIdentifierISO8601 instead")));
#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

typedef NSUInteger NSMeasurementFormatterUnitOptions; enum {
    NSMeasurementFormatterUnitOptionsProvidedUnit = (1UL << 0),
    NSMeasurementFormatterUnitOptionsNaturalScale = (1UL << 1),
    NSMeasurementFormatterUnitOptionsTemperatureWithoutUnit = (1UL << 2),
} __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSMeasurementFormatter
#define _REWRITER_typedef_NSMeasurementFormatter
typedef struct objc_object NSMeasurementFormatter;
typedef struct {} _objc_exc_NSMeasurementFormatter;
#endif

struct NSMeasurementFormatter_IMPL {
	struct NSFormatter_IMPL NSFormatter_IVARS;
	void *_formatter;
};

// @property NSMeasurementFormatterUnitOptions unitOptions;




// @property NSFormattingUnitStyle unitStyle;




// @property (null_resettable, copy) NSLocale *locale;




// @property (null_resettable, copy) NSNumberFormatter *numberFormatter;

// - (NSString *)stringFromMeasurement:(NSMeasurement *)measurement;





// - (NSString *)stringFromUnit:(NSUnit *)unit;

/* @end */

#pragma clang assume_nonnull end








#pragma clang assume_nonnull begin
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0)))

#ifndef _REWRITER_typedef_NSPersonNameComponents
#define _REWRITER_typedef_NSPersonNameComponents
typedef struct objc_object NSPersonNameComponents;
typedef struct {} _objc_exc_NSPersonNameComponents;
#endif

struct NSPersonNameComponents_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	__strong id _private;
};





// @property (copy, nullable) NSString *namePrefix;


// @property (copy, nullable) NSString *givenName;


// @property (copy, nullable) NSString *middleName;


// @property (copy, nullable) NSString *familyName;


// @property (copy, nullable) NSString *nameSuffix;


// @property (copy, nullable) NSString *nickname;




// @property (copy, nullable) NSPersonNameComponents *phoneticRepresentation;

/* @end */

#pragma clang assume_nonnull end







#pragma clang assume_nonnull begin

typedef NSInteger NSPersonNameComponentsFormatterStyle; enum {
    NSPersonNameComponentsFormatterStyleDefault = 0,



    NSPersonNameComponentsFormatterStyleShort,


    NSPersonNameComponentsFormatterStyleMedium,


    NSPersonNameComponentsFormatterStyleLong,


    NSPersonNameComponentsFormatterStyleAbbreviated
} __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

typedef NSUInteger NSPersonNameComponentsFormatterOptions; enum {




    NSPersonNameComponentsFormatterPhonetic = (1UL << 1)
} __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0)))

#ifndef _REWRITER_typedef_NSPersonNameComponentsFormatter
#define _REWRITER_typedef_NSPersonNameComponentsFormatter
typedef struct objc_object NSPersonNameComponentsFormatter;
typedef struct {} _objc_exc_NSPersonNameComponentsFormatter;
#endif

struct NSPersonNameComponentsFormatter_IMPL {
	struct NSFormatter_IMPL NSFormatter_IVARS;
	__strong id _private;
};




// @property NSPersonNameComponentsFormatterStyle style;



// @property (getter=isPhonetic) BOOL phonetic;




#if 0
+ (NSString *)localizedStringFromPersonNameComponents:(NSPersonNameComponents *)components
                                                style:(NSPersonNameComponentsFormatterStyle)nameFormatStyle
                                              options:(NSPersonNameComponentsFormatterOptions)nameOptions;
#endif




// - (NSString *)stringFromPersonNameComponents:(NSPersonNameComponents *)components;




// - (NSAttributedString *)annotatedStringFromPersonNameComponents:(NSPersonNameComponents *)components;




// - (nullable NSPersonNameComponents *)personNameComponentsFromString:(nonnull NSString *)string __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

// - (BOOL)getObjectValue:(out id _Nullable * _Nullable)obj forString:(NSString *)string errorDescription:(out NSString * _Nullable * _Nullable)error;

/* @end */



extern "C" NSString * const NSPersonNameComponentKey __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern "C" NSString * const NSPersonNameComponentGivenName __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSPersonNameComponentFamilyName __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSPersonNameComponentMiddleName __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSPersonNameComponentPrefix __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSPersonNameComponentSuffix __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSPersonNameComponentNickname __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));




extern "C" NSString * const NSPersonNameComponentDelimiter __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
#pragma clang assume_nonnull end







// @class NSDictionary;
#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif


#pragma clang assume_nonnull begin
typedef NSUInteger NSRoundingMode; enum {
    NSRoundPlain,
    NSRoundDown,
    NSRoundUp,
    NSRoundBankers
};

typedef NSUInteger NSCalculationError; enum {
    NSCalculationNoError = 0,
    NSCalculationLossOfPrecision,
    NSCalculationUnderflow,
    NSCalculationOverflow,
    NSCalculationDivideByZero
};






typedef struct {
    signed int _exponent:8;
    unsigned int _length:4;
    unsigned int _isNegative:1;
    unsigned int _isCompact:1;
    unsigned int _reserved:18;
    unsigned short _mantissa[(8)];
} NSDecimal;

static __inline__ __attribute__((always_inline)) BOOL NSDecimalIsNotANumber(const NSDecimal *dcm)
  { return ((dcm->_length == 0) && dcm->_isNegative); }



extern "C" void NSDecimalCopy(NSDecimal *destination, const NSDecimal *source);

extern "C" void NSDecimalCompact(NSDecimal *number);

extern "C" NSComparisonResult NSDecimalCompare(const NSDecimal *leftOperand, const NSDecimal *rightOperand);


extern "C" void NSDecimalRound(NSDecimal *result, const NSDecimal *number, NSInteger scale, NSRoundingMode roundingMode);




extern "C" NSCalculationError NSDecimalNormalize(NSDecimal *number1, NSDecimal *number2, NSRoundingMode roundingMode);

extern "C" NSCalculationError NSDecimalAdd(NSDecimal *result, const NSDecimal *leftOperand, const NSDecimal *rightOperand, NSRoundingMode roundingMode);


extern "C" NSCalculationError NSDecimalSubtract(NSDecimal *result, const NSDecimal *leftOperand, const NSDecimal *rightOperand, NSRoundingMode roundingMode);


extern "C" NSCalculationError NSDecimalMultiply(NSDecimal *result, const NSDecimal *leftOperand, const NSDecimal *rightOperand, NSRoundingMode roundingMode);


extern "C" NSCalculationError NSDecimalDivide(NSDecimal *result, const NSDecimal *leftOperand, const NSDecimal *rightOperand, NSRoundingMode roundingMode);



extern "C" NSCalculationError NSDecimalPower(NSDecimal *result, const NSDecimal *number, NSUInteger power, NSRoundingMode roundingMode);

extern "C" NSCalculationError NSDecimalMultiplyByPowerOf10(NSDecimal *result, const NSDecimal *number, short power, NSRoundingMode roundingMode);

extern "C" NSString *NSDecimalString(const NSDecimal *dcm, id _Nullable locale);
#pragma clang assume_nonnull end











// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSCharacterSet
#define _REWRITER_typedef_NSCharacterSet
typedef struct objc_object NSCharacterSet;
typedef struct {} _objc_exc_NSCharacterSet;
#endif

#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif


#pragma clang assume_nonnull begin


#ifndef _REWRITER_typedef_NSScanner
#define _REWRITER_typedef_NSScanner
typedef struct objc_object NSScanner;
typedef struct {} _objc_exc_NSScanner;
#endif

struct NSScanner_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property (readonly, copy) NSString *string;
// @property NSUInteger scanLocation;
// @property (nullable, copy) NSCharacterSet *charactersToBeSkipped;
// @property BOOL caseSensitive;
// @property (nullable, retain) id locale;

// - (instancetype)initWithString:(NSString *)string __attribute__((objc_designated_initializer));

/* @end */


// @interface NSScanner (NSExtendedScanner)


// - (BOOL)scanInt:(nullable int *)result;
// - (BOOL)scanInteger:(nullable NSInteger *)result __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (BOOL)scanLongLong:(nullable long long *)result;
// - (BOOL)scanUnsignedLongLong:(nullable unsigned long long *)result __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (BOOL)scanFloat:(nullable float *)result;
// - (BOOL)scanDouble:(nullable double *)result;
// - (BOOL)scanHexInt:(nullable unsigned *)result;
// - (BOOL)scanHexLongLong:(nullable unsigned long long *)result __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (BOOL)scanHexFloat:(nullable float *)result __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (BOOL)scanHexDouble:(nullable double *)result __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (BOOL)scanString:(NSString *)string intoString:(NSString * _Nullable * _Nullable)result;
// - (BOOL)scanCharactersFromSet:(NSCharacterSet *)set intoString:(NSString * _Nullable * _Nullable)result;

// - (BOOL)scanUpToString:(NSString *)string intoString:(NSString * _Nullable * _Nullable)result;
// - (BOOL)scanUpToCharactersFromSet:(NSCharacterSet *)set intoString:(NSString * _Nullable * _Nullable)result;

// @property (getter=isAtEnd, readonly) BOOL atEnd;

// + (instancetype)scannerWithString:(NSString *)string;
// + (id)localizedScannerWithString:(NSString *)string;

/* @end */

#pragma clang assume_nonnull end


// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSNumber
#define _REWRITER_typedef_NSNumber
typedef struct objc_object NSNumber;
typedef struct {} _objc_exc_NSNumber;
#endif


#pragma clang assume_nonnull begin



extern "C" NSExceptionName const NSGenericException;
extern "C" NSExceptionName const NSRangeException;
extern "C" NSExceptionName const NSInvalidArgumentException;
extern "C" NSExceptionName const NSInternalInconsistencyException;

extern "C" NSExceptionName const NSMallocException;

extern "C" NSExceptionName const NSObjectInaccessibleException;
extern "C" NSExceptionName const NSObjectNotAvailableException;
extern "C" NSExceptionName const NSDestinationInvalidException;

extern "C" NSExceptionName const NSPortTimeoutException;
extern "C" NSExceptionName const NSInvalidSendPortException;
extern "C" NSExceptionName const NSInvalidReceivePortException;
extern "C" NSExceptionName const NSPortSendException;
extern "C" NSExceptionName const NSPortReceiveException;

extern "C" NSExceptionName const NSOldStyleException;




__attribute__((__objc_exception__))


#ifndef _REWRITER_typedef_NSException
#define _REWRITER_typedef_NSException
typedef struct objc_object NSException;
typedef struct {} _objc_exc_NSException;
#endif

struct NSException_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSString *__strong name;
	NSString *__strong reason;
	NSDictionary *__strong userInfo;
	__strong id reserved;
};


// + (NSException *)exceptionWithName:(NSExceptionName)name reason:(nullable NSString *)reason userInfo:(nullable NSDictionary *)userInfo;
// - (instancetype)initWithName:(NSExceptionName)aName reason:(nullable NSString *)aReason userInfo:(nullable NSDictionary *)aUserInfo __attribute__((objc_designated_initializer));

// @property (readonly, copy) NSExceptionName name;
// @property (nullable, readonly, copy) NSString *reason;
// @property (nullable, readonly, copy) NSDictionary *userInfo;

// @property (readonly, copy) NSArray<NSNumber *> *callStackReturnAddresses __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, copy) NSArray<NSString *> *callStackSymbols __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (void)raise;

/* @end */


// @interface NSException (NSExceptionRaisingConveniences)

// + (void)raise:(NSExceptionName)name format:(NSString *)format, ... __attribute__((format(__NSString__, 2, 3)));
// + (void)raise:(NSExceptionName)name format:(NSString *)format arguments:(va_list)argList __attribute__((format(__NSString__, 2, 0)));

/* @end */

typedef void NSUncaughtExceptionHandler(NSException *exception);

extern "C" NSUncaughtExceptionHandler * _Nullable NSGetUncaughtExceptionHandler(void);
extern "C" void NSSetUncaughtExceptionHandler(NSUncaughtExceptionHandler * _Nullable);
// @class NSAssertionHandler;
#ifndef _REWRITER_typedef_NSAssertionHandler
#define _REWRITER_typedef_NSAssertionHandler
typedef struct objc_object NSAssertionHandler;
typedef struct {} _objc_exc_NSAssertionHandler;
#endif

extern "C" NSString * const NSAssertionHandlerKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


#ifndef _REWRITER_typedef_NSAssertionHandler
#define _REWRITER_typedef_NSAssertionHandler
typedef struct objc_object NSAssertionHandler;
typedef struct {} _objc_exc_NSAssertionHandler;
#endif

struct NSAssertionHandler_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_reserved;
};


@property (class, readonly, strong) NSAssertionHandler *currentHandler;

// - (void)handleFailureInMethod:(SEL)selector object:(id)object file:(NSString *)fileName lineNumber:(NSInteger)line description:(nullable NSString *)format,... __attribute__((format(__NSString__, 5, 6)));

// - (void)handleFailureInFunction:(NSString *)functionName file:(NSString *)fileName lineNumber:(NSInteger)line description:(nullable NSString *)format,... __attribute__((format(__NSString__, 4, 5)));

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin



extern "C" NSExceptionName const NSDecimalNumberExactnessException;
extern "C" NSExceptionName const NSDecimalNumberOverflowException;
extern "C" NSExceptionName const NSDecimalNumberUnderflowException;
extern "C" NSExceptionName const NSDecimalNumberDivideByZeroException;



// @class NSDecimalNumber;
#ifndef _REWRITER_typedef_NSDecimalNumber
#define _REWRITER_typedef_NSDecimalNumber
typedef struct objc_object NSDecimalNumber;
typedef struct {} _objc_exc_NSDecimalNumber;
#endif


// @protocol NSDecimalNumberBehaviors

// - (NSRoundingMode)roundingMode;

// - (short)scale;


// - (nullable NSDecimalNumber *)exceptionDuringOperation:(SEL)operation error:(NSCalculationError)error leftOperand:(NSDecimalNumber *)leftOperand rightOperand:(nullable NSDecimalNumber *)rightOperand;


/* @end */





#ifndef _REWRITER_typedef_NSDecimalNumber
#define _REWRITER_typedef_NSDecimalNumber
typedef struct objc_object NSDecimalNumber;
typedef struct {} _objc_exc_NSDecimalNumber;
#endif

	struct NSDecimalNumber__T_1 {
	int _exponent : 8;
	unsigned int _length : 4;
	unsigned int _isNegative : 1;
	unsigned int _isCompact : 1;
	unsigned int _reserved : 1;
	unsigned int _hasExternalRefCount : 1;
	unsigned int _refs : 16;
	} ;
struct NSDecimalNumber_IMPL {
	struct NSNumber_IMPL NSNumber_IVARS;
	struct NSDecimalNumber__T_1 NSDecimalNumber__GRBF_1;
	unsigned short _mantissa[0];
};


// - (instancetype)initWithMantissa:(unsigned long long)mantissa exponent:(short)exponent isNegative:(BOOL)flag;
// - (instancetype)initWithDecimal:(NSDecimal)dcm __attribute__((objc_designated_initializer));
// - (instancetype)initWithString:(nullable NSString *)numberValue;
// - (instancetype)initWithString:(nullable NSString *)numberValue locale:(nullable id)locale;

// - (NSString *)descriptionWithLocale:(nullable id)locale;

// @property (readonly) NSDecimal decimalValue;

// + (NSDecimalNumber *)decimalNumberWithMantissa:(unsigned long long)mantissa exponent:(short)exponent isNegative:(BOOL)flag;
// + (NSDecimalNumber *)decimalNumberWithDecimal:(NSDecimal)dcm;
// + (NSDecimalNumber *)decimalNumberWithString:(nullable NSString *)numberValue;
// + (NSDecimalNumber *)decimalNumberWithString:(nullable NSString *)numberValue locale:(nullable id)locale;

@property (class, readonly, copy) NSDecimalNumber *zero;
@property (class, readonly, copy) NSDecimalNumber *one;
@property (class, readonly, copy) NSDecimalNumber *minimumDecimalNumber;
@property (class, readonly, copy) NSDecimalNumber *maximumDecimalNumber;
@property (class, readonly, copy) NSDecimalNumber *notANumber;

// - (NSDecimalNumber *)decimalNumberByAdding:(NSDecimalNumber *)decimalNumber;
// - (NSDecimalNumber *)decimalNumberByAdding:(NSDecimalNumber *)decimalNumber withBehavior:(nullable id <NSDecimalNumberBehaviors>)behavior;

// - (NSDecimalNumber *)decimalNumberBySubtracting:(NSDecimalNumber *)decimalNumber;
// - (NSDecimalNumber *)decimalNumberBySubtracting:(NSDecimalNumber *)decimalNumber withBehavior:(nullable id <NSDecimalNumberBehaviors>)behavior;

// - (NSDecimalNumber *)decimalNumberByMultiplyingBy:(NSDecimalNumber *)decimalNumber;
// - (NSDecimalNumber *)decimalNumberByMultiplyingBy:(NSDecimalNumber *)decimalNumber withBehavior:(nullable id <NSDecimalNumberBehaviors>)behavior;

// - (NSDecimalNumber *)decimalNumberByDividingBy:(NSDecimalNumber *)decimalNumber;
// - (NSDecimalNumber *)decimalNumberByDividingBy:(NSDecimalNumber *)decimalNumber withBehavior:(nullable id <NSDecimalNumberBehaviors>)behavior;

// - (NSDecimalNumber *)decimalNumberByRaisingToPower:(NSUInteger)power;
// - (NSDecimalNumber *)decimalNumberByRaisingToPower:(NSUInteger)power withBehavior:(nullable id <NSDecimalNumberBehaviors>)behavior;

// - (NSDecimalNumber *)decimalNumberByMultiplyingByPowerOf10:(short)power;
// - (NSDecimalNumber *)decimalNumberByMultiplyingByPowerOf10:(short)power withBehavior:(nullable id <NSDecimalNumberBehaviors>)behavior;


// - (NSDecimalNumber *)decimalNumberByRoundingAccordingToBehavior:(nullable id <NSDecimalNumberBehaviors>)behavior;


// - (NSComparisonResult)compare:(NSNumber *)decimalNumber;


@property (class, strong) id <NSDecimalNumberBehaviors> defaultBehavior;






// @property (readonly) const char *objCType __attribute__((objc_returns_inner_pointer));


// @property (readonly) double doubleValue;


/* @end */





#ifndef _REWRITER_typedef_NSDecimalNumberHandler
#define _REWRITER_typedef_NSDecimalNumberHandler
typedef struct objc_object NSDecimalNumberHandler;
typedef struct {} _objc_exc_NSDecimalNumberHandler;
#endif

	struct NSDecimalNumberHandler__T_1 {
	int _scale : 16;
	unsigned int _roundingMode : 3;
	unsigned int _raiseOnExactness : 1;
	unsigned int _raiseOnOverflow : 1;
	unsigned int _raiseOnUnderflow : 1;
	unsigned int _raiseOnDivideByZero : 1;
	unsigned int _unused : 9;
	} ;
struct NSDecimalNumberHandler_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	struct NSDecimalNumberHandler__T_1 NSDecimalNumberHandler__GRBF_1;
	void *_reserved2;
	void *_reserved;
};


@property (class, readonly, strong) NSDecimalNumberHandler *defaultDecimalNumberHandler;





// - (instancetype)initWithRoundingMode:(NSRoundingMode)roundingMode scale:(short)scale raiseOnExactness:(BOOL)exact raiseOnOverflow:(BOOL)overflow raiseOnUnderflow:(BOOL)underflow raiseOnDivideByZero:(BOOL)divideByZero __attribute__((objc_designated_initializer));

// + (instancetype)decimalNumberHandlerWithRoundingMode:(NSRoundingMode)roundingMode scale:(short)scale raiseOnExactness:(BOOL)exact raiseOnOverflow:(BOOL)overflow raiseOnUnderflow:(BOOL)underflow raiseOnDivideByZero:(BOOL)divideByZero;

/* @end */




// @interface NSNumber (NSDecimalNumberExtensions)

// @property (readonly) NSDecimal decimalValue;


/* @end */


// @interface NSScanner (NSDecimalNumberScanning)

// - (BOOL)scanDecimal:(nullable NSDecimal *)dcm;

/* @end */

#pragma clang assume_nonnull end








// @class NSDictionary;
#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif


typedef NSString *NSErrorDomain;

#pragma clang assume_nonnull begin


extern "C" NSErrorDomain const NSCocoaErrorDomain;


extern "C" NSErrorDomain const NSPOSIXErrorDomain;
extern "C" NSErrorDomain const NSOSStatusErrorDomain;
extern "C" NSErrorDomain const NSMachErrorDomain;

typedef NSString *NSErrorUserInfoKey;


extern "C" NSErrorUserInfoKey const NSUnderlyingErrorKey;


extern "C" NSErrorUserInfoKey const NSLocalizedDescriptionKey;
extern "C" NSErrorUserInfoKey const NSLocalizedFailureReasonErrorKey;
extern "C" NSErrorUserInfoKey const NSLocalizedRecoverySuggestionErrorKey;
extern "C" NSErrorUserInfoKey const NSLocalizedRecoveryOptionsErrorKey;
extern "C" NSErrorUserInfoKey const NSRecoveryAttempterErrorKey;
extern "C" NSErrorUserInfoKey const NSHelpAnchorErrorKey;
extern "C" NSErrorUserInfoKey const NSDebugDescriptionErrorKey __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSErrorUserInfoKey const NSLocalizedFailureErrorKey __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));


extern "C" NSErrorUserInfoKey const NSStringEncodingErrorKey ;
extern "C" NSErrorUserInfoKey const NSURLErrorKey;
extern "C" NSErrorUserInfoKey const NSFilePathErrorKey;


#ifndef _REWRITER_typedef_NSError
#define _REWRITER_typedef_NSError
typedef struct objc_object NSError;
typedef struct {} _objc_exc_NSError;
#endif

struct NSError_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_reserved;
	NSInteger _code;
	NSString *__strong _domain;
	NSDictionary *__strong _userInfo;
};




// - (instancetype)initWithDomain:(NSErrorDomain)domain code:(NSInteger)code userInfo:(nullable NSDictionary<NSErrorUserInfoKey, id> *)dict __attribute__((objc_designated_initializer));
// + (instancetype)errorWithDomain:(NSErrorDomain)domain code:(NSInteger)code userInfo:(nullable NSDictionary<NSErrorUserInfoKey, id> *)dict;



// @property (readonly, copy) NSErrorDomain domain;
// @property (readonly) NSInteger code;



// @property (readonly, copy) NSDictionary<NSErrorUserInfoKey, id> *userInfo;
// @property (readonly, copy) NSString *localizedDescription;



// @property (nullable, readonly, copy) NSString *localizedFailureReason;



// @property (nullable, readonly, copy) NSString *localizedRecoverySuggestion;



// @property (nullable, readonly, copy) NSArray<NSString *> *localizedRecoveryOptions;



// @property (nullable, readonly, strong) id recoveryAttempter;



// @property (nullable, readonly, copy) NSString *helpAnchor;
// + (void)setUserInfoValueProviderForDomain:(NSErrorDomain)errorDomain provider:(id _Nullable (^ _Nullable)(NSError *err, NSErrorUserInfoKey userInfoKey))provider __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (id _Nullable (^ _Nullable)(NSError *err, NSErrorUserInfoKey userInfoKey))userInfoValueProviderForDomain:(NSErrorDomain)errorDomain __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */



// @interface NSObject(NSErrorRecoveryAttempting)







// - (void)attemptRecoveryFromError:(NSError *)error optionIndex:(NSUInteger)recoveryOptionIndex delegate:(nullable id)delegate didRecoverSelector:(nullable SEL)didRecoverSelector contextInfo:(nullable void *)contextInfo;



// - (BOOL)attemptRecoveryFromError:(NSError *)error optionIndex:(NSUInteger)recoveryOptionIndex;

/* @end */

#pragma clang assume_nonnull end









// @class NSTimer;
#ifndef _REWRITER_typedef_NSTimer
#define _REWRITER_typedef_NSTimer
typedef struct objc_object NSTimer;
typedef struct {} _objc_exc_NSTimer;
#endif

#ifndef _REWRITER_typedef_NSPort
#define _REWRITER_typedef_NSPort
typedef struct objc_object NSPort;
typedef struct {} _objc_exc_NSPort;
#endif

#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif


#pragma clang assume_nonnull begin

extern "C" NSRunLoopMode const NSDefaultRunLoopMode;
extern "C" NSRunLoopMode const NSRunLoopCommonModes __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


#ifndef _REWRITER_typedef_NSRunLoop
#define _REWRITER_typedef_NSRunLoop
typedef struct objc_object NSRunLoop;
typedef struct {} _objc_exc_NSRunLoop;
#endif

struct NSRunLoop_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	__strong id _rl;
	__strong id _dperf;
	__strong id _perft;
	__strong id _info;
	__strong id _ports;
	void *_reserved[6];
};


@property (class, readonly, strong) NSRunLoop *currentRunLoop;
@property (class, readonly, strong) NSRunLoop *mainRunLoop __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (nullable, readonly, copy) NSRunLoopMode currentMode;

// - (CFRunLoopRef)getCFRunLoop __attribute__((cf_returns_not_retained));

// - (void)addTimer:(NSTimer *)timer forMode:(NSRunLoopMode)mode;

// - (void)addPort:(NSPort *)aPort forMode:(NSRunLoopMode)mode;
// - (void)removePort:(NSPort *)aPort forMode:(NSRunLoopMode)mode;

// - (nullable NSDate *)limitDateForMode:(NSRunLoopMode)mode;
// - (void)acceptInputForMode:(NSRunLoopMode)mode beforeDate:(NSDate *)limitDate;

/* @end */


// @interface NSRunLoop (NSRunLoopConveniences)

// - (void)run;
// - (void)runUntilDate:(NSDate *)limitDate;
// - (BOOL)runMode:(NSRunLoopMode)mode beforeDate:(NSDate *)limitDate;
// - (void)performInModes:(NSArray<NSRunLoopMode> *)modes block:(void (^)(void))block __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));



// - (void)performBlock:(void (^)(void))block __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

/* @end */




// @interface NSObject (NSDelayedPerforming)

// - (void)performSelector:(SEL)aSelector withObject:(nullable id)anArgument afterDelay:(NSTimeInterval)delay inModes:(NSArray<NSRunLoopMode> *)modes;
// - (void)performSelector:(SEL)aSelector withObject:(nullable id)anArgument afterDelay:(NSTimeInterval)delay;
// + (void)cancelPreviousPerformRequestsWithTarget:(id)aTarget selector:(SEL)aSelector object:(nullable id)anArgument;
// + (void)cancelPreviousPerformRequestsWithTarget:(id)aTarget;

/* @end */


// @interface NSRunLoop (NSOrderedPerform)

// - (void)performSelector:(SEL)aSelector target:(id)target argument:(nullable id)arg order:(NSUInteger)order modes:(NSArray<NSRunLoopMode> *)modes;
// - (void)cancelPerformSelector:(SEL)aSelector target:(id)target argument:(nullable id)arg;
// - (void)cancelPerformSelectorsWithTarget:(id)target;

/* @end */

#pragma clang assume_nonnull end

// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSData
#define _REWRITER_typedef_NSData
typedef struct objc_object NSData;
typedef struct {} _objc_exc_NSData;
#endif

#ifndef _REWRITER_typedef_NSError
#define _REWRITER_typedef_NSError
typedef struct objc_object NSError;
typedef struct {} _objc_exc_NSError;
#endif


#pragma clang assume_nonnull begin


#ifndef _REWRITER_typedef_NSFileHandle
#define _REWRITER_typedef_NSFileHandle
typedef struct objc_object NSFileHandle;
typedef struct {} _objc_exc_NSFileHandle;
#endif

struct NSFileHandle_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property (readonly, copy) NSData *availableData;

// - (NSData *)readDataToEndOfFile;
// - (NSData *)readDataOfLength:(NSUInteger)length;

// - (void)writeData:(NSData *)data;

// @property (readonly) unsigned long long offsetInFile;
// - (unsigned long long)seekToEndOfFile;
// - (void)seekToFileOffset:(unsigned long long)offset;

// - (void)truncateFileAtOffset:(unsigned long long)offset;
// - (void)synchronizeFile;
// - (void)closeFile;

// - (instancetype)initWithFileDescriptor:(int)fd closeOnDealloc:(BOOL)closeopt __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

/* @end */


// @interface NSFileHandle (NSFileHandleCreation)

@property (class, readonly, strong) NSFileHandle *fileHandleWithStandardInput;
@property (class, readonly, strong) NSFileHandle *fileHandleWithStandardOutput;
@property (class, readonly, strong) NSFileHandle *fileHandleWithStandardError;
@property (class, readonly, strong) NSFileHandle *fileHandleWithNullDevice;

// + (nullable instancetype)fileHandleForReadingAtPath:(NSString *)path;
// + (nullable instancetype)fileHandleForWritingAtPath:(NSString *)path;
// + (nullable instancetype)fileHandleForUpdatingAtPath:(NSString *)path;

// + (nullable instancetype)fileHandleForReadingFromURL:(NSURL *)url error:(NSError **)error __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (nullable instancetype)fileHandleForWritingToURL:(NSURL *)url error:(NSError **)error __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (nullable instancetype)fileHandleForUpdatingURL:(NSURL *)url error:(NSError **)error __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */


extern "C" NSExceptionName const NSFileHandleOperationException;

extern "C" NSNotificationName const NSFileHandleReadCompletionNotification;
extern "C" NSNotificationName const NSFileHandleReadToEndOfFileCompletionNotification;
extern "C" NSNotificationName const NSFileHandleConnectionAcceptedNotification;
extern "C" NSNotificationName const NSFileHandleDataAvailableNotification;

extern "C" NSString * const NSFileHandleNotificationDataItem;
extern "C" NSString * const NSFileHandleNotificationFileHandleItem;
extern "C" NSString * const NSFileHandleNotificationMonitorModes __attribute__((availability(macos,introduced=10.0,deprecated=10.7,message="Not supported"))) __attribute__((availability(ios,introduced=2.0,deprecated=5.0,message="Not supported"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Not supported"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Not supported")));

// @interface NSFileHandle (NSFileHandleAsynchronousAccess)

// - (void)readInBackgroundAndNotifyForModes:(nullable NSArray<NSRunLoopMode> *)modes;
// - (void)readInBackgroundAndNotify;

// - (void)readToEndOfFileInBackgroundAndNotifyForModes:(nullable NSArray<NSRunLoopMode> *)modes;
// - (void)readToEndOfFileInBackgroundAndNotify;

// - (void)acceptConnectionInBackgroundAndNotifyForModes:(nullable NSArray<NSRunLoopMode> *)modes;
// - (void)acceptConnectionInBackgroundAndNotify;

// - (void)waitForDataInBackgroundAndNotifyForModes:(nullable NSArray<NSRunLoopMode> *)modes;
// - (void)waitForDataInBackgroundAndNotify;


// @property (nullable, copy) void (^readabilityHandler)(NSFileHandle *) __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (nullable, copy) void (^writeabilityHandler)(NSFileHandle *) __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


/* @end */


// @interface NSFileHandle (NSFileHandlePlatformSpecific)

// - (instancetype)initWithFileDescriptor:(int)fd;

// @property (readonly) int fileDescriptor;

/* @end */



#ifndef _REWRITER_typedef_NSPipe
#define _REWRITER_typedef_NSPipe
typedef struct objc_object NSPipe;
typedef struct {} _objc_exc_NSPipe;
#endif

struct NSPipe_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property (readonly, retain) NSFileHandle *fileHandleForReading;
// @property (readonly, retain) NSFileHandle *fileHandleForWriting;

// + (NSPipe *)pipe;

/* @end */

#pragma clang assume_nonnull end














#pragma clang assume_nonnull begin

// @interface NSString (NSStringPathExtensions)

// + (NSString *)pathWithComponents:(NSArray<NSString *> *)components;
// @property (readonly, copy) NSArray<NSString *> *pathComponents;

// @property (getter=isAbsolutePath, readonly) BOOL absolutePath;

// @property (readonly, copy) NSString *lastPathComponent;
// @property (readonly, copy) NSString *stringByDeletingLastPathComponent;
// - (NSString *)stringByAppendingPathComponent:(NSString *)str;

// @property (readonly, copy) NSString *pathExtension;
// @property (readonly, copy) NSString *stringByDeletingPathExtension;
// - (nullable NSString *)stringByAppendingPathExtension:(NSString *)str;

// @property (readonly, copy) NSString *stringByAbbreviatingWithTildeInPath;
// @property (readonly, copy) NSString *stringByExpandingTildeInPath;

// @property (readonly, copy) NSString *stringByStandardizingPath;

// @property (readonly, copy) NSString *stringByResolvingSymlinksInPath;

// - (NSArray<NSString *> *)stringsByAppendingPaths:(NSArray<NSString *> *)paths;

// - (NSUInteger)completePathIntoString:(NSString * _Nullable * _Nullable)outputName caseSensitive:(BOOL)flag matchesIntoArray:(NSArray<NSString *> * _Nullable * _Nullable)outputArray filterTypes:(nullable NSArray<NSString *> *)filterTypes;

// @property (readonly) const char *fileSystemRepresentation __attribute__((objc_returns_inner_pointer));
// - (BOOL)getFileSystemRepresentation:(char *)cname maxLength:(NSUInteger)max;

/* @end */


// @interface NSArray<ObjectType> (NSArrayPathExtensions)

// - (NSArray<NSString *> *)pathsMatchingExtensions:(NSArray<NSString *> *)filterTypes;

/* @end */


extern "C" NSString *NSUserName(void);
extern "C" NSString *NSFullUserName(void);

extern "C" NSString *NSHomeDirectory(void);
extern "C" NSString * _Nullable NSHomeDirectoryForUser(NSString * _Nullable userName);

extern "C" NSString *NSTemporaryDirectory(void);

extern "C" NSString *NSOpenStepRootDirectory(void);

typedef NSUInteger NSSearchPathDirectory; enum {
    NSApplicationDirectory = 1,
    NSDemoApplicationDirectory,
    NSDeveloperApplicationDirectory,
    NSAdminApplicationDirectory,
    NSLibraryDirectory,
    NSDeveloperDirectory,
    NSUserDirectory,
    NSDocumentationDirectory,
    NSDocumentDirectory,
    NSCoreServiceDirectory,
    NSAutosavedInformationDirectory __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 11,
    NSDesktopDirectory = 12,
    NSCachesDirectory = 13,
    NSApplicationSupportDirectory = 14,
    NSDownloadsDirectory __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 15,
    NSInputMethodsDirectory __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 16,
    NSMoviesDirectory __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 17,
    NSMusicDirectory __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 18,
    NSPicturesDirectory __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 19,
    NSPrinterDescriptionDirectory __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 20,
    NSSharedPublicDirectory __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 21,
    NSPreferencePanesDirectory __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 22,
    NSApplicationScriptsDirectory __attribute__((availability(ios,introduced=NA))) = 23,
    NSItemReplacementDirectory __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 99,
    NSAllApplicationsDirectory = 100,
    NSAllLibrariesDirectory = 101,
    NSTrashDirectory __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) = 102

};

typedef NSUInteger NSSearchPathDomainMask; enum {
    NSUserDomainMask = 1,
    NSLocalDomainMask = 2,
    NSNetworkDomainMask = 4,
    NSSystemDomainMask = 8,
    NSAllDomainsMask = 0x0ffff
};

extern "C" NSArray<NSString *> *NSSearchPathForDirectoriesInDomains(NSSearchPathDirectory directory, NSSearchPathDomainMask domainMask, BOOL expandTilde);
#pragma clang assume_nonnull end


// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSNumber
#define _REWRITER_typedef_NSNumber
typedef struct objc_object NSNumber;
typedef struct {} _objc_exc_NSNumber;
#endif

#ifndef _REWRITER_typedef_NSData
#define _REWRITER_typedef_NSData
typedef struct objc_object NSData;
typedef struct {} _objc_exc_NSData;
#endif

#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif


typedef NSString * NSURLResourceKey __attribute__((swift_wrapper(struct)));

#pragma clang assume_nonnull begin



#ifndef _REWRITER_typedef_NSURL
#define _REWRITER_typedef_NSURL
typedef struct objc_object NSURL;
typedef struct {} _objc_exc_NSURL;
#endif

struct NSURL_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSString *__strong _urlString;
	NSURL *__strong _baseURL;
	void *_clients;
	void *_reserved;
};




// - (nullable instancetype)initWithScheme:(NSString *)scheme host:(nullable NSString *)host path:(NSString *)path __attribute__((availability(macos,introduced=10.0,deprecated=10.11,message="Use NSURLComponents instead, which lets you create a valid URL with any valid combination of URL components and subcomponents (not just scheme, host and path), and lets you set components and subcomponents with either percent-encoded or un-percent-encoded strings."))) __attribute__((availability(ios,introduced=2.0,deprecated=9.0,message="Use NSURLComponents instead, which lets you create a valid URL with any valid combination of URL components and subcomponents (not just scheme, host and path), and lets you set components and subcomponents with either percent-encoded or un-percent-encoded strings."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use NSURLComponents instead, which lets you create a valid URL with any valid combination of URL components and subcomponents (not just scheme, host and path), and lets you set components and subcomponents with either percent-encoded or un-percent-encoded strings."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use NSURLComponents instead, which lets you create a valid URL with any valid combination of URL components and subcomponents (not just scheme, host and path), and lets you set components and subcomponents with either percent-encoded or un-percent-encoded strings.")));



// - (instancetype)initFileURLWithPath:(NSString *)path isDirectory:(BOOL)isDir relativeToURL:(nullable NSURL *)baseURL __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((objc_designated_initializer));


// - (instancetype)initFileURLWithPath:(NSString *)path relativeToURL:(nullable NSURL *)baseURL __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((objc_designated_initializer));

// - (instancetype)initFileURLWithPath:(NSString *)path isDirectory:(BOOL)isDir __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((objc_designated_initializer));
// - (instancetype)initFileURLWithPath:(NSString *)path __attribute__((objc_designated_initializer));



// + (NSURL *)fileURLWithPath:(NSString *)path isDirectory:(BOOL) isDir relativeToURL:(nullable NSURL *)baseURL __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


// + (NSURL *)fileURLWithPath:(NSString *)path relativeToURL:(nullable NSURL *)baseURL __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// + (NSURL *)fileURLWithPath:(NSString *)path isDirectory:(BOOL)isDir __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (NSURL *)fileURLWithPath:(NSString *)path;



// - (instancetype)initFileURLWithFileSystemRepresentation:(const char *)path isDirectory:(BOOL)isDir relativeToURL:(nullable NSURL *)baseURL __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((objc_designated_initializer));



// + (NSURL *)fileURLWithFileSystemRepresentation:(const char *)path isDirectory:(BOOL) isDir relativeToURL:(nullable NSURL *)baseURL __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (nullable instancetype)initWithString:(NSString *)URLString;
// - (nullable instancetype)initWithString:(NSString *)URLString relativeToURL:(nullable NSURL *)baseURL __attribute__((objc_designated_initializer));
// + (nullable instancetype)URLWithString:(NSString *)URLString;
// + (nullable instancetype)URLWithString:(NSString *)URLString relativeToURL:(nullable NSURL *)baseURL;




// - (instancetype)initWithDataRepresentation:(NSData *)data relativeToURL:(nullable NSURL *)baseURL __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((objc_designated_initializer));


// + (NSURL *)URLWithDataRepresentation:(NSData *)data relativeToURL:(nullable NSURL *)baseURL __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (instancetype)initAbsoluteURLWithDataRepresentation:(NSData *)data relativeToURL:(nullable NSURL *)baseURL __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((objc_designated_initializer));


// + (NSURL *)absoluteURLWithDataRepresentation:(NSData *)data relativeToURL:(nullable NSURL *)baseURL __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// @property (readonly, copy) NSData *dataRepresentation __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (nullable, readonly, copy) NSString *absoluteString;
// @property (readonly, copy) NSString *relativeString;
// @property (nullable, readonly, copy) NSURL *baseURL;
// @property (nullable, readonly, copy) NSURL *absoluteURL;



// @property (nullable, readonly, copy) NSString *scheme;
// @property (nullable, readonly, copy) NSString *resourceSpecifier;



// @property (nullable, readonly, copy) NSString *host;
// @property (nullable, readonly, copy) NSNumber *port;
// @property (nullable, readonly, copy) NSString *user;
// @property (nullable, readonly, copy) NSString *password;
// @property (nullable, readonly, copy) NSString *path;
// @property (nullable, readonly, copy) NSString *fragment;
// @property (nullable, readonly, copy) NSString *parameterString;
// @property (nullable, readonly, copy) NSString *query;
// @property (nullable, readonly, copy) NSString *relativePath;



// @property (readonly) BOOL hasDirectoryPath __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (BOOL)getFileSystemRepresentation:(char *)buffer maxLength:(NSUInteger)maxBufferLength __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// @property (readonly) const char *fileSystemRepresentation __attribute__((objc_returns_inner_pointer)) __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (readonly, getter=isFileURL) BOOL fileURL;


extern "C" NSString *NSURLFileScheme;


// @property (nullable, readonly, copy) NSURL *standardizedURL;




// - (BOOL)checkResourceIsReachableAndReturnError:(NSError **)error __attribute__((swift_error(none))) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));







// - (BOOL)isFileReferenceURL __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (nullable NSURL *)fileReferenceURL __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// @property (nullable, readonly, copy) NSURL *filePathURL __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (BOOL)getResourceValue:(out id _Nullable * _Nonnull)value forKey:(NSURLResourceKey)key error:(out NSError ** _Nullable)error __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (nullable NSDictionary<NSURLResourceKey, id> *)resourceValuesForKeys:(NSArray<NSURLResourceKey> *)keys error:(NSError **)error __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (BOOL)setResourceValue:(nullable id)value forKey:(NSURLResourceKey)key error:(NSError **)error __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (BOOL)setResourceValues:(NSDictionary<NSURLResourceKey, id> *)keyedValues error:(NSError **)error __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern "C" NSURLResourceKey const NSURLKeysOfUnsetValuesKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (void)removeCachedResourceValueForKey:(NSURLResourceKey)key __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (void)removeAllCachedResourceValues __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (void)setTemporaryResourceValue:(nullable id)value forKey:(NSURLResourceKey)key __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLNameKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLLocalizedNameKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLIsRegularFileKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLIsDirectoryKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLIsSymbolicLinkKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLIsVolumeKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLIsPackageKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLIsApplicationKey __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLApplicationIsScriptableKey __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSURLResourceKey const NSURLIsSystemImmutableKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLIsUserImmutableKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLIsHiddenKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLHasHiddenExtensionKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLCreationDateKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLContentAccessDateKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLContentModificationDateKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLAttributeModificationDateKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLLinkCountKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLParentDirectoryURLKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeURLKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLTypeIdentifierKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLLocalizedTypeDescriptionKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLLabelNumberKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLLabelColorKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLLocalizedLabelKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLEffectiveIconKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLCustomIconKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLFileResourceIdentifierKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeIdentifierKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLPreferredIOBlockSizeKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLIsReadableKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLIsWritableKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLIsExecutableKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLFileSecurityKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLIsExcludedFromBackupKey __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=5.1))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLTagNamesKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSURLResourceKey const NSURLPathKey __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLCanonicalPathKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
extern "C" NSURLResourceKey const NSURLIsMountTriggerKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLGenerationIdentifierKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLDocumentIdentifierKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLAddedToDirectoryDateKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLQuarantinePropertiesKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSURLResourceKey const NSURLFileResourceTypeKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

typedef NSString * NSURLFileResourceType __attribute__((swift_wrapper(enum)));



extern "C" NSURLFileResourceType const NSURLFileResourceTypeNamedPipe __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLFileResourceType const NSURLFileResourceTypeCharacterSpecial __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLFileResourceType const NSURLFileResourceTypeDirectory __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLFileResourceType const NSURLFileResourceTypeBlockSpecial __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLFileResourceType const NSURLFileResourceTypeRegular __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLFileResourceType const NSURLFileResourceTypeSymbolicLink __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLFileResourceType const NSURLFileResourceTypeSocket __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLFileResourceType const NSURLFileResourceTypeUnknown __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern "C" NSURLResourceKey const NSURLThumbnailDictionaryKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLThumbnailKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

typedef NSString *NSURLThumbnailDictionaryItem __attribute__((swift_wrapper(struct)));


extern "C" NSURLThumbnailDictionaryItem const NSThumbnail1024x1024SizeKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern "C" NSURLResourceKey const NSURLFileSizeKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLFileAllocatedSizeKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLTotalFileSizeKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLTotalFileAllocatedSizeKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLIsAliasFileKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLFileProtectionKey __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));

typedef NSString * NSURLFileProtectionType __attribute__((swift_wrapper(enum)));


extern "C" NSURLFileProtectionType const NSURLFileProtectionNone __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));
extern "C" NSURLFileProtectionType const NSURLFileProtectionComplete __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));
extern "C" NSURLFileProtectionType const NSURLFileProtectionCompleteUnlessOpen __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));
extern "C" NSURLFileProtectionType const NSURLFileProtectionCompleteUntilFirstUserAuthentication __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));





extern "C" NSURLResourceKey const NSURLVolumeLocalizedFormatDescriptionKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeTotalCapacityKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeAvailableCapacityKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeResourceCountKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeSupportsPersistentIDsKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeSupportsSymbolicLinksKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeSupportsHardLinksKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeSupportsJournalingKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeIsJournalingKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeSupportsSparseFilesKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeSupportsZeroRunsKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeSupportsCaseSensitiveNamesKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeSupportsCasePreservedNamesKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeSupportsRootDirectoryDatesKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeSupportsVolumeSizesKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeSupportsRenamingKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeSupportsAdvisoryFileLockingKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeSupportsExtendedSecurityKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeIsBrowsableKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeMaximumFileSizeKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeIsEjectableKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeIsRemovableKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeIsInternalKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeIsAutomountedKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeIsLocalKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeIsReadOnlyKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeCreationDateKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeURLForRemountingKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeUUIDStringKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeNameKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeLocalizedNameKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLVolumeIsEncryptedKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
extern "C" NSURLResourceKey const NSURLVolumeIsRootFileSystemKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
extern "C" NSURLResourceKey const NSURLVolumeSupportsCompressionKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
extern "C" NSURLResourceKey const NSURLVolumeSupportsFileCloningKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
extern "C" NSURLResourceKey const NSURLVolumeSupportsSwapRenamingKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
extern "C" NSURLResourceKey const NSURLVolumeSupportsExclusiveRenamingKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
extern "C" NSURLResourceKey const NSURLVolumeSupportsImmutableFilesKey __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
extern "C" NSURLResourceKey const NSURLVolumeSupportsAccessPermissionsKey __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));







extern "C" NSURLResourceKey const NSURLVolumeAvailableCapacityForImportantUsageKey __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));





extern "C" NSURLResourceKey const NSURLVolumeAvailableCapacityForOpportunisticUsageKey __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));




extern "C" NSURLResourceKey const NSURLIsUbiquitousItemKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLUbiquitousItemHasUnresolvedConflictsKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLUbiquitousItemIsDownloadedKey __attribute__((availability(macos,introduced=10.7,deprecated=10.9,message="Use NSURLUbiquitousItemDownloadingStatusKey instead"))) __attribute__((availability(ios,introduced=5.0,deprecated=7.0,message="Use NSURLUbiquitousItemDownloadingStatusKey instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use NSURLUbiquitousItemDownloadingStatusKey instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use NSURLUbiquitousItemDownloadingStatusKey instead")));
extern "C" NSURLResourceKey const NSURLUbiquitousItemIsDownloadingKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLUbiquitousItemIsUploadedKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLUbiquitousItemIsUploadingKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLUbiquitousItemPercentDownloadedKey __attribute__((availability(macos,introduced=10.7,deprecated=10.8,message="Use NSMetadataUbiquitousItemPercentDownloadedKey instead"))) __attribute__((availability(ios,introduced=5.0,deprecated=6.0,message="Use NSMetadataUbiquitousItemPercentDownloadedKey instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use NSMetadataUbiquitousItemPercentDownloadedKey instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use NSMetadataUbiquitousItemPercentDownloadedKey instead")));
extern "C" NSURLResourceKey const NSURLUbiquitousItemPercentUploadedKey __attribute__((availability(macos,introduced=10.7,deprecated=10.8,message="Use NSMetadataUbiquitousItemPercentUploadedKey instead"))) __attribute__((availability(ios,introduced=5.0,deprecated=6.0,message="Use NSMetadataUbiquitousItemPercentUploadedKey instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use NSMetadataUbiquitousItemPercentUploadedKey instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use NSMetadataUbiquitousItemPercentUploadedKey instead")));
extern "C" NSURLResourceKey const NSURLUbiquitousItemDownloadingStatusKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLUbiquitousItemDownloadingErrorKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLUbiquitousItemUploadingErrorKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLUbiquitousItemDownloadRequestedKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLResourceKey const NSURLUbiquitousItemContainerDisplayNameKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern "C" NSURLResourceKey const NSURLUbiquitousItemIsSharedKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
extern "C" NSURLResourceKey const NSURLUbiquitousSharedItemCurrentUserRoleKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
extern "C" NSURLResourceKey const NSURLUbiquitousSharedItemCurrentUserPermissionsKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
extern "C" NSURLResourceKey const NSURLUbiquitousSharedItemOwnerNameComponentsKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
extern "C" NSURLResourceKey const NSURLUbiquitousSharedItemMostRecentEditorNameComponentsKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));

typedef NSString * NSURLUbiquitousItemDownloadingStatus __attribute__((swift_wrapper(enum)));


extern "C" NSURLUbiquitousItemDownloadingStatus const NSURLUbiquitousItemDownloadingStatusNotDownloaded __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLUbiquitousItemDownloadingStatus const NSURLUbiquitousItemDownloadingStatusDownloaded __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSURLUbiquitousItemDownloadingStatus const NSURLUbiquitousItemDownloadingStatusCurrent __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

typedef NSString * NSURLUbiquitousSharedItemRole __attribute__((swift_wrapper(enum)));



extern "C" NSURLUbiquitousSharedItemRole const NSURLUbiquitousSharedItemRoleOwner __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
extern "C" NSURLUbiquitousSharedItemRole const NSURLUbiquitousSharedItemRoleParticipant __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));

typedef NSString * NSURLUbiquitousSharedItemPermissions __attribute__((swift_wrapper(enum)));



extern "C" NSURLUbiquitousSharedItemPermissions const NSURLUbiquitousSharedItemPermissionsReadOnly __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
extern "C" NSURLUbiquitousSharedItemPermissions const NSURLUbiquitousSharedItemPermissionsReadWrite __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));




typedef NSUInteger NSURLBookmarkCreationOptions; enum {
    NSURLBookmarkCreationPreferFileIDResolution __attribute__((availability(macos,introduced=10.6,deprecated=10.9,message="Not supported"))) __attribute__((availability(ios,introduced=4.0,deprecated=7.0,message="Not supported"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Not supported"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Not supported"))) = ( 1UL << 8 ),
    NSURLBookmarkCreationMinimalBookmark = ( 1UL << 9 ),
    NSURLBookmarkCreationSuitableForBookmarkFile = ( 1UL << 10 ),
    NSURLBookmarkCreationWithSecurityScope __attribute__((availability(ios,introduced=NA))) = ( 1 << 11 ),
    NSURLBookmarkCreationSecurityScopeAllowOnlyReadAccess __attribute__((availability(ios,introduced=NA))) = ( 1 << 12 ),
} __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

typedef NSUInteger NSURLBookmarkResolutionOptions; enum {
    NSURLBookmarkResolutionWithoutUI = ( 1UL << 8 ),
    NSURLBookmarkResolutionWithoutMounting = ( 1UL << 9 ),
    NSURLBookmarkResolutionWithSecurityScope __attribute__((availability(ios,introduced=NA))) = ( 1 << 10 )
} __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

typedef NSUInteger NSURLBookmarkFileCreationOptions;



// - (nullable NSData *)bookmarkDataWithOptions:(NSURLBookmarkCreationOptions)options includingResourceValuesForKeys:(nullable NSArray<NSURLResourceKey> *)keys relativeToURL:(nullable NSURL *)relativeURL error:(NSError **)error __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (nullable instancetype)initByResolvingBookmarkData:(NSData *)bookmarkData options:(NSURLBookmarkResolutionOptions)options relativeToURL:(nullable NSURL *)relativeURL bookmarkDataIsStale:(BOOL * _Nullable)isStale error:(NSError **)error __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


// + (nullable instancetype)URLByResolvingBookmarkData:(NSData *)bookmarkData options:(NSURLBookmarkResolutionOptions)options relativeToURL:(nullable NSURL *)relativeURL bookmarkDataIsStale:(BOOL * _Nullable)isStale error:(NSError **)error __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// + (nullable NSDictionary<NSURLResourceKey, id> *)resourceValuesForKeys:(NSArray<NSURLResourceKey> *)keys fromBookmarkData:(NSData *)bookmarkData __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// + (BOOL)writeBookmarkData:(NSData *)bookmarkData toURL:(NSURL *)bookmarkFileURL options:(NSURLBookmarkFileCreationOptions)options error:(NSError **)error __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// + (nullable NSData *)bookmarkDataWithContentsOfURL:(NSURL *)bookmarkFileURL error:(NSError **)error __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// + (nullable instancetype)URLByResolvingAliasFileAtURL:(NSURL *)url options:(NSURLBookmarkResolutionOptions)options error:(NSError **)error __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (BOOL)startAccessingSecurityScopedResource __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (void)stopAccessingSecurityScopedResource __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */



// @interface NSURL (NSPromisedItems)
// - (BOOL)getPromisedItemResourceValue:(id _Nullable * _Nonnull)value forKey:(NSURLResourceKey)key error:(NSError **)error __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (nullable NSDictionary<NSURLResourceKey, id> *)promisedItemResourceValuesForKeys:(NSArray<NSURLResourceKey> *)keys error:(NSError **)error __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (BOOL)checkPromisedItemIsReachableAndReturnError:(NSError **)error __attribute__((swift_error(none))) __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */



// @interface NSURL (NSItemProvider) <NSItemProviderReading, NSItemProviderWriting>
/* @end */



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))


#ifndef _REWRITER_typedef_NSURLQueryItem
#define _REWRITER_typedef_NSURLQueryItem
typedef struct objc_object NSURLQueryItem;
typedef struct {} _objc_exc_NSURLQueryItem;
#endif

struct NSURLQueryItem_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSString *__strong _name;
	NSString *__strong _value;
};

// - (instancetype)initWithName:(NSString *)name value:(nullable NSString *)value __attribute__((objc_designated_initializer));
// + (instancetype)queryItemWithName:(NSString *)name value:(nullable NSString *)value;
// @property (readonly) NSString *name;
// @property (nullable, readonly) NSString *value;
/* @end */



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0)))

#ifndef _REWRITER_typedef_NSURLComponents
#define _REWRITER_typedef_NSURLComponents
typedef struct objc_object NSURLComponents;
typedef struct {} _objc_exc_NSURLComponents;
#endif

struct NSURLComponents_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



// - (instancetype)init;


// - (nullable instancetype)initWithURL:(NSURL *)url resolvingAgainstBaseURL:(BOOL)resolve;


// + (nullable instancetype)componentsWithURL:(NSURL *)url resolvingAgainstBaseURL:(BOOL)resolve;


// - (nullable instancetype)initWithString:(NSString *)URLString;


// + (nullable instancetype)componentsWithString:(NSString *)URLString;


// @property (nullable, readonly, copy) NSURL *URL;


// - (nullable NSURL *)URLRelativeToURL:(nullable NSURL *)baseURL;


// @property (nullable, readonly, copy) NSString *string __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));




// @property (nullable, copy) NSString *scheme;
// @property (nullable, copy) NSString *user;
// @property (nullable, copy) NSString *password;
// @property (nullable, copy) NSString *host;
// @property (nullable, copy) NSNumber *port;
// @property (nullable, copy) NSString *path;
// @property (nullable, copy) NSString *query;
// @property (nullable, copy) NSString *fragment;


// @property (nullable, copy) NSString *percentEncodedUser;
// @property (nullable, copy) NSString *percentEncodedPassword;
// @property (nullable, copy) NSString *percentEncodedHost;
// @property (nullable, copy) NSString *percentEncodedPath;
// @property (nullable, copy) NSString *percentEncodedQuery;
// @property (nullable, copy) NSString *percentEncodedFragment;



// @property (readonly) NSRange rangeOfScheme __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly) NSRange rangeOfUser __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly) NSRange rangeOfPassword __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly) NSRange rangeOfHost __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly) NSRange rangeOfPort __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly) NSRange rangeOfPath __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly) NSRange rangeOfQuery __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly) NSRange rangeOfFragment __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (nullable, copy) NSArray<NSURLQueryItem *> *queryItems __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));




// @property (nullable, copy) NSArray<NSURLQueryItem *> *percentEncodedQueryItems __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));

/* @end */



// @interface NSCharacterSet (NSURLUtilities)



@property (class, readonly, copy) NSCharacterSet *URLUserAllowedCharacterSet __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


@property (class, readonly, copy) NSCharacterSet *URLPasswordAllowedCharacterSet __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


@property (class, readonly, copy) NSCharacterSet *URLHostAllowedCharacterSet __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


@property (class, readonly, copy) NSCharacterSet *URLPathAllowedCharacterSet __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


@property (class, readonly, copy) NSCharacterSet *URLQueryAllowedCharacterSet __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


@property (class, readonly, copy) NSCharacterSet *URLFragmentAllowedCharacterSet __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */



// @interface NSString (NSURLUtilities)


// - (nullable NSString *)stringByAddingPercentEncodingWithAllowedCharacters:(NSCharacterSet *)allowedCharacters __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


// @property (nullable, readonly, copy) NSString *stringByRemovingPercentEncoding __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


// - (nullable NSString *)stringByAddingPercentEscapesUsingEncoding:(NSStringEncoding)enc __attribute__((availability(macos,introduced=10.0,deprecated=10.11,message="Use -stringByAddingPercentEncodingWithAllowedCharacters: instead, which always uses the recommended UTF-8 encoding, and which encodes for a specific URL component or subcomponent since each URL component or subcomponent has different rules for what characters are valid."))) __attribute__((availability(ios,introduced=2.0,deprecated=9.0,message="Use -stringByAddingPercentEncodingWithAllowedCharacters: instead, which always uses the recommended UTF-8 encoding, and which encodes for a specific URL component or subcomponent since each URL component or subcomponent has different rules for what characters are valid."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -stringByAddingPercentEncodingWithAllowedCharacters: instead, which always uses the recommended UTF-8 encoding, and which encodes for a specific URL component or subcomponent since each URL component or subcomponent has different rules for what characters are valid."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -stringByAddingPercentEncodingWithAllowedCharacters: instead, which always uses the recommended UTF-8 encoding, and which encodes for a specific URL component or subcomponent since each URL component or subcomponent has different rules for what characters are valid.")));
// - (nullable NSString *)stringByReplacingPercentEscapesUsingEncoding:(NSStringEncoding)enc __attribute__((availability(macos,introduced=10.0,deprecated=10.11,message="Use -stringByRemovingPercentEncoding instead, which always uses the recommended UTF-8 encoding."))) __attribute__((availability(ios,introduced=2.0,deprecated=9.0,message="Use -stringByRemovingPercentEncoding instead, which always uses the recommended UTF-8 encoding."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -stringByRemovingPercentEncoding instead, which always uses the recommended UTF-8 encoding."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -stringByRemovingPercentEncoding instead, which always uses the recommended UTF-8 encoding.")));

/* @end */



// @interface NSURL (NSURLPathUtilities)



// + (nullable NSURL *)fileURLWithPathComponents:(NSArray<NSString *> *)components __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (nullable, readonly, copy) NSArray<NSString *> *pathComponents __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (nullable, readonly, copy) NSString *lastPathComponent __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (nullable, readonly, copy) NSString *pathExtension __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (nullable NSURL *)URLByAppendingPathComponent:(NSString *)pathComponent __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (nullable NSURL *)URLByAppendingPathComponent:(NSString *)pathComponent isDirectory:(BOOL)isDirectory __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (nullable, readonly, copy) NSURL *URLByDeletingLastPathComponent __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (nullable NSURL *)URLByAppendingPathExtension:(NSString *)pathExtension __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (nullable, readonly, copy) NSURL *URLByDeletingPathExtension __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// @property (nullable, readonly, copy) NSURL *URLByStandardizingPath __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (nullable, readonly, copy) NSURL *URLByResolvingSymlinksInPath __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */






__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0)))

#ifndef _REWRITER_typedef_NSFileSecurity
#define _REWRITER_typedef_NSFileSecurity
typedef struct objc_object NSFileSecurity;
typedef struct {} _objc_exc_NSFileSecurity;
#endif

struct NSFileSecurity_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};

// - (nullable instancetype) initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));
/* @end */

#pragma clang assume_nonnull end



// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSData
#define _REWRITER_typedef_NSData
typedef struct objc_object NSData;
typedef struct {} _objc_exc_NSData;
#endif

#ifndef _REWRITER_typedef_NSDate
#define _REWRITER_typedef_NSDate
typedef struct objc_object NSDate;
typedef struct {} _objc_exc_NSDate;
#endif

#ifndef _REWRITER_typedef_NSDirectoryEnumerator
#define _REWRITER_typedef_NSDirectoryEnumerator
typedef struct objc_object NSDirectoryEnumerator;
typedef struct {} _objc_exc_NSDirectoryEnumerator;
#endif

#ifndef _REWRITER_typedef_NSError
#define _REWRITER_typedef_NSError
typedef struct objc_object NSError;
typedef struct {} _objc_exc_NSError;
#endif

#ifndef _REWRITER_typedef_NSNumber
#define _REWRITER_typedef_NSNumber
typedef struct objc_object NSNumber;
typedef struct {} _objc_exc_NSNumber;
#endif

#ifndef _REWRITER_typedef_NSFileProviderService
#define _REWRITER_typedef_NSFileProviderService
typedef struct objc_object NSFileProviderService;
typedef struct {} _objc_exc_NSFileProviderService;
#endif

#ifndef _REWRITER_typedef_NSXPCConnection
#define _REWRITER_typedef_NSXPCConnection
typedef struct objc_object NSXPCConnection;
typedef struct {} _objc_exc_NSXPCConnection;
#endif

#ifndef _REWRITER_typedef_NSLock
#define _REWRITER_typedef_NSLock
typedef struct objc_object NSLock;
typedef struct {} _objc_exc_NSLock;
#endif

// @protocol NSFileManagerDelegate;

typedef NSString * NSFileAttributeKey __attribute__((swift_wrapper(struct)));
typedef NSString * NSFileAttributeType __attribute__((swift_wrapper(enum)));
typedef NSString * NSFileProtectionType __attribute__((swift_wrapper(enum)));

typedef NSString * NSFileProviderServiceName __attribute__((swift_wrapper(struct)));

#pragma clang assume_nonnull begin





typedef NSUInteger NSVolumeEnumerationOptions; enum {


    NSVolumeEnumerationSkipHiddenVolumes = 1UL << 1,



    NSVolumeEnumerationProduceFileReferenceURLs = 1UL << 2
} __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

typedef NSUInteger NSDirectoryEnumerationOptions; enum {


    NSDirectoryEnumerationSkipsSubdirectoryDescendants = 1UL << 0,



    NSDirectoryEnumerationSkipsPackageDescendants = 1UL << 1,



    NSDirectoryEnumerationSkipsHiddenFiles = 1UL << 2
} __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

typedef NSUInteger NSFileManagerItemReplacementOptions; enum {


    NSFileManagerItemReplacementUsingNewMetadataOnly = 1UL << 0,



     NSFileManagerItemReplacementWithoutDeletingBackupItem = 1UL << 1
} __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

typedef NSInteger NSURLRelationship; enum {
    NSURLRelationshipContains,
    NSURLRelationshipSame,
    NSURLRelationshipOther
} __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


typedef NSUInteger NSFileManagerUnmountOptions; enum {


    NSFileManagerUnmountAllPartitionsAndEjectDisk = 1UL << 0,



    NSFileManagerUnmountWithoutUI = 1UL << 1,
} __attribute__((availability(ios,introduced=NA)));


extern "C" NSString *const NSFileManagerUnmountDissentingProcessIdentifierErrorKey __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));



extern NSNotificationName const NSUbiquityIdentityDidChangeNotification __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


#ifndef _REWRITER_typedef_NSFileManager
#define _REWRITER_typedef_NSFileManager
typedef struct objc_object NSFileManager;
typedef struct {} _objc_exc_NSFileManager;
#endif

struct NSFileManager_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};




@property (class, readonly, strong) NSFileManager *defaultManager;



// - (nullable NSArray<NSURL *> *)mountedVolumeURLsIncludingResourceValuesForKeys:(nullable NSArray<NSURLResourceKey> *)propertyKeys options:(NSVolumeEnumerationOptions)options __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (void)unmountVolumeAtURL:(NSURL *)url options:(NSFileManagerUnmountOptions)mask completionHandler:(void (^)(NSError * _Nullable errorOrNil))completionHandler __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));







// - (nullable NSArray<NSURL *> *)contentsOfDirectoryAtURL:(NSURL *)url includingPropertiesForKeys:(nullable NSArray<NSURLResourceKey> *)keys options:(NSDirectoryEnumerationOptions)mask error:(NSError **)error __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));




// - (NSArray<NSURL *> *)URLsForDirectory:(NSSearchPathDirectory)directory inDomains:(NSSearchPathDomainMask)domainMask __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (nullable NSURL *)URLForDirectory:(NSSearchPathDirectory)directory inDomain:(NSSearchPathDomainMask)domain appropriateForURL:(nullable NSURL *)url create:(BOOL)shouldCreate error:(NSError **)error __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (BOOL)getRelationship:(NSURLRelationship *)outRelationship ofDirectoryAtURL:(NSURL *)directoryURL toItemAtURL:(NSURL *)otherURL error:(NSError **)error __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (BOOL)getRelationship:(NSURLRelationship *)outRelationship ofDirectory:(NSSearchPathDirectory)directory inDomain:(NSSearchPathDomainMask)domainMask toItemAtURL:(NSURL *)url error:(NSError **)error __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (BOOL)createDirectoryAtURL:(NSURL *)url withIntermediateDirectories:(BOOL)createIntermediates attributes:(nullable NSDictionary<NSFileAttributeKey, id> *)attributes error:(NSError **)error __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (BOOL)createSymbolicLinkAtURL:(NSURL *)url withDestinationURL:(NSURL *)destURL error:(NSError **)error __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// @property (nullable, assign) id <NSFileManagerDelegate> delegate __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (BOOL)setAttributes:(NSDictionary<NSFileAttributeKey, id> *)attributes ofItemAtPath:(NSString *)path error:(NSError **)error __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (BOOL)createDirectoryAtPath:(NSString *)path withIntermediateDirectories:(BOOL)createIntermediates attributes:(nullable NSDictionary<NSFileAttributeKey, id> *)attributes error:(NSError **)error __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (nullable NSArray<NSString *> *)contentsOfDirectoryAtPath:(NSString *)path error:(NSError **)error __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (nullable NSArray<NSString *> *)subpathsOfDirectoryAtPath:(NSString *)path error:(NSError **)error __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (nullable NSDictionary<NSFileAttributeKey, id> *)attributesOfItemAtPath:(NSString *)path error:(NSError **)error __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (nullable NSDictionary<NSFileAttributeKey, id> *)attributesOfFileSystemForPath:(NSString *)path error:(NSError **)error __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (BOOL)createSymbolicLinkAtPath:(NSString *)path withDestinationPath:(NSString *)destPath error:(NSError **)error __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (nullable NSString *)destinationOfSymbolicLinkAtPath:(NSString *)path error:(NSError **)error __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (BOOL)copyItemAtPath:(NSString *)srcPath toPath:(NSString *)dstPath error:(NSError **)error __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (BOOL)moveItemAtPath:(NSString *)srcPath toPath:(NSString *)dstPath error:(NSError **)error __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (BOOL)linkItemAtPath:(NSString *)srcPath toPath:(NSString *)dstPath error:(NSError **)error __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (BOOL)removeItemAtPath:(NSString *)path error:(NSError **)error __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (BOOL)copyItemAtURL:(NSURL *)srcURL toURL:(NSURL *)dstURL error:(NSError **)error __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (BOOL)moveItemAtURL:(NSURL *)srcURL toURL:(NSURL *)dstURL error:(NSError **)error __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (BOOL)linkItemAtURL:(NSURL *)srcURL toURL:(NSURL *)dstURL error:(NSError **)error __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (BOOL)removeItemAtURL:(NSURL *)URL error:(NSError **)error __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (BOOL)trashItemAtURL:(NSURL *)url resultingItemURL:(NSURL * _Nullable * _Nullable)outResultingURL error:(NSError **)error __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));



// - (nullable NSDictionary *)fileAttributesAtPath:(NSString *)path traverseLink:(BOOL)yorn __attribute__((availability(macos,introduced=10.0,deprecated=10.5,message="Use -attributesOfItemAtPath:error: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Use -attributesOfItemAtPath:error: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -attributesOfItemAtPath:error: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -attributesOfItemAtPath:error: instead")));
// - (BOOL)changeFileAttributes:(NSDictionary *)attributes atPath:(NSString *)path __attribute__((availability(macos,introduced=10.0,deprecated=10.5,message="Use -setAttributes:ofItemAtPath:error: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Use -setAttributes:ofItemAtPath:error: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -setAttributes:ofItemAtPath:error: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -setAttributes:ofItemAtPath:error: instead")));
// - (nullable NSArray *)directoryContentsAtPath:(NSString *)path __attribute__((availability(macos,introduced=10.0,deprecated=10.5,message="Use -contentsOfDirectoryAtPath:error: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Use -contentsOfDirectoryAtPath:error: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -contentsOfDirectoryAtPath:error: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -contentsOfDirectoryAtPath:error: instead")));
// - (nullable NSDictionary *)fileSystemAttributesAtPath:(NSString *)path __attribute__((availability(macos,introduced=10.0,deprecated=10.5,message="Use -attributesOfFileSystemForPath:error: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Use -attributesOfFileSystemForPath:error: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -attributesOfFileSystemForPath:error: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -attributesOfFileSystemForPath:error: instead")));
// - (nullable NSString *)pathContentOfSymbolicLinkAtPath:(NSString *)path __attribute__((availability(macos,introduced=10.0,deprecated=10.5,message="Use -destinationOfSymbolicLinkAtPath:error:"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Use -destinationOfSymbolicLinkAtPath:error:"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -destinationOfSymbolicLinkAtPath:error:"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -destinationOfSymbolicLinkAtPath:error:")));
// - (BOOL)createSymbolicLinkAtPath:(NSString *)path pathContent:(NSString *)otherpath __attribute__((availability(macos,introduced=10.0,deprecated=10.5,message="Use -createSymbolicLinkAtPath:error: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Use -createSymbolicLinkAtPath:error: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -createSymbolicLinkAtPath:error: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -createSymbolicLinkAtPath:error: instead")));
// - (BOOL)createDirectoryAtPath:(NSString *)path attributes:(NSDictionary *)attributes __attribute__((availability(macos,introduced=10.0,deprecated=10.5,message="Use -createDirectoryAtPath:withIntermediateDirectories:attributes:error: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Use -createDirectoryAtPath:withIntermediateDirectories:attributes:error: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -createDirectoryAtPath:withIntermediateDirectories:attributes:error: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -createDirectoryAtPath:withIntermediateDirectories:attributes:error: instead")));
// @property (readonly, copy) NSString *currentDirectoryPath;
// - (BOOL)changeCurrentDirectoryPath:(NSString *)path;



// - (BOOL)fileExistsAtPath:(NSString *)path;
// - (BOOL)fileExistsAtPath:(NSString *)path isDirectory:(nullable BOOL *)isDirectory;
// - (BOOL)isReadableFileAtPath:(NSString *)path;
// - (BOOL)isWritableFileAtPath:(NSString *)path;
// - (BOOL)isExecutableFileAtPath:(NSString *)path;
// - (BOOL)isDeletableFileAtPath:(NSString *)path;



// - (BOOL)contentsEqualAtPath:(NSString *)path1 andPath:(NSString *)path2;



// - (NSString *)displayNameAtPath:(NSString *)path;



// - (nullable NSArray<NSString *> *)componentsToDisplayForPath:(NSString *)path;



// - (nullable NSDirectoryEnumerator<NSString *> *)enumeratorAtPath:(NSString *)path;





// - (nullable NSDirectoryEnumerator<NSURL *> *)enumeratorAtURL:(NSURL *)url includingPropertiesForKeys:(nullable NSArray<NSURLResourceKey> *)keys options:(NSDirectoryEnumerationOptions)mask errorHandler:(nullable BOOL (^)(NSURL *url, NSError *error))handler __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (nullable NSArray<NSString *> *)subpathsAtPath:(NSString *)path;



// - (nullable NSData *)contentsAtPath:(NSString *)path;
// - (BOOL)createFileAtPath:(NSString *)path contents:(nullable NSData *)data attributes:(nullable NSDictionary<NSFileAttributeKey, id> *)attr;



// - (const char *)fileSystemRepresentationWithPath:(NSString *)path __attribute__((objc_returns_inner_pointer));



// - (NSString *)stringWithFileSystemRepresentation:(const char *)str length:(NSUInteger)len;
// - (BOOL)replaceItemAtURL:(NSURL *)originalItemURL withItemAtURL:(NSURL *)newItemURL backupItemName:(nullable NSString *)backupItemName options:(NSFileManagerItemReplacementOptions)options resultingItemURL:(NSURL * _Nullable * _Nullable)resultingURL error:(NSError **)error __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));




// - (BOOL)setUbiquitous:(BOOL)flag itemAtURL:(NSURL *)url destinationURL:(NSURL *)destinationURL error:(NSError **)error __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (BOOL)isUbiquitousItemAtURL:(NSURL *)url __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (BOOL)startDownloadingUbiquitousItemAtURL:(NSURL *)url error:(NSError **)error __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (BOOL)evictUbiquitousItemAtURL:(NSURL *)url error:(NSError **)error __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (nullable NSURL *)URLForUbiquityContainerIdentifier:(nullable NSString *)containerIdentifier __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (nullable NSURL *)URLForPublishingUbiquitousItemAtURL:(NSURL *)url expirationDate:(NSDate * _Nullable * _Nullable)outDate error:(NSError **)error __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// @property (nullable, readonly, copy) id<NSObject,NSCopying,NSCoding> ubiquityIdentityToken __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (void)getFileProviderServicesForItemAtURL:(NSURL *)url completionHandler:(void (^)(NSDictionary <NSFileProviderServiceName, NSFileProviderService *> * _Nullable services, NSError * _Nullable error))completionHandler __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));



// - (nullable NSURL *)containerURLForSecurityApplicationGroupIdentifier:(NSString *)groupIdentifier __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


/* @end */


// @interface NSFileManager (NSUserInformation)

// @property (readonly, copy) NSURL *homeDirectoryForCurrentUser __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
// @property (readonly, copy) NSURL *temporaryDirectory __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

// - (nullable NSURL *)homeDirectoryForUser:(NSString *)userName __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

/* @end */




// @interface NSObject (NSCopyLinkMoveHandler)
// - (BOOL)fileManager:(NSFileManager *)fm shouldProceedAfterError:(NSDictionary *)errorInfo __attribute__((availability(macos,introduced=10.0,deprecated=10.5,message=" Handler API no longer supported"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message=" Handler API no longer supported"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message=" Handler API no longer supported"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message=" Handler API no longer supported")));
// - (void)fileManager:(NSFileManager *)fm willProcessPath:(NSString *)path __attribute__((availability(macos,introduced=10.0,deprecated=10.5,message="Handler API no longer supported"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Handler API no longer supported"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Handler API no longer supported"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Handler API no longer supported")));
/* @end */



// @protocol NSFileManagerDelegate <NSObject>
/* @optional */





// - (BOOL)fileManager:(NSFileManager *)fileManager shouldCopyItemAtPath:(NSString *)srcPath toPath:(NSString *)dstPath;
// - (BOOL)fileManager:(NSFileManager *)fileManager shouldCopyItemAtURL:(NSURL *)srcURL toURL:(NSURL *)dstURL __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (BOOL)fileManager:(NSFileManager *)fileManager shouldProceedAfterError:(NSError *)error copyingItemAtPath:(NSString *)srcPath toPath:(NSString *)dstPath;
// - (BOOL)fileManager:(NSFileManager *)fileManager shouldProceedAfterError:(NSError *)error copyingItemAtURL:(NSURL *)srcURL toURL:(NSURL *)dstURL __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (BOOL)fileManager:(NSFileManager *)fileManager shouldMoveItemAtPath:(NSString *)srcPath toPath:(NSString *)dstPath;
// - (BOOL)fileManager:(NSFileManager *)fileManager shouldMoveItemAtURL:(NSURL *)srcURL toURL:(NSURL *)dstURL __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (BOOL)fileManager:(NSFileManager *)fileManager shouldProceedAfterError:(NSError *)error movingItemAtPath:(NSString *)srcPath toPath:(NSString *)dstPath;
// - (BOOL)fileManager:(NSFileManager *)fileManager shouldProceedAfterError:(NSError *)error movingItemAtURL:(NSURL *)srcURL toURL:(NSURL *)dstURL __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (BOOL)fileManager:(NSFileManager *)fileManager shouldLinkItemAtPath:(NSString *)srcPath toPath:(NSString *)dstPath;
// - (BOOL)fileManager:(NSFileManager *)fileManager shouldLinkItemAtURL:(NSURL *)srcURL toURL:(NSURL *)dstURL __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (BOOL)fileManager:(NSFileManager *)fileManager shouldProceedAfterError:(NSError *)error linkingItemAtPath:(NSString *)srcPath toPath:(NSString *)dstPath;
// - (BOOL)fileManager:(NSFileManager *)fileManager shouldProceedAfterError:(NSError *)error linkingItemAtURL:(NSURL *)srcURL toURL:(NSURL *)dstURL __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (BOOL)fileManager:(NSFileManager *)fileManager shouldRemoveItemAtPath:(NSString *)path;
// - (BOOL)fileManager:(NSFileManager *)fileManager shouldRemoveItemAtURL:(NSURL *)URL __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (BOOL)fileManager:(NSFileManager *)fileManager shouldProceedAfterError:(NSError *)error removingItemAtPath:(NSString *)path;
// - (BOOL)fileManager:(NSFileManager *)fileManager shouldProceedAfterError:(NSError *)error removingItemAtURL:(NSURL *)URL __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */




#ifndef _REWRITER_typedef_NSDirectoryEnumerator
#define _REWRITER_typedef_NSDirectoryEnumerator
typedef struct objc_object NSDirectoryEnumerator;
typedef struct {} _objc_exc_NSDirectoryEnumerator;
#endif

struct NSDirectoryEnumerator_IMPL {
	struct NSEnumerator_IMPL NSEnumerator_IVARS;
};




// @property (nullable, readonly, copy) NSDictionary<NSFileAttributeKey, id> *fileAttributes;
// @property (nullable, readonly, copy) NSDictionary<NSFileAttributeKey, id> *directoryAttributes;

// - (void)skipDescendents;



// @property (readonly) NSUInteger level __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (void)skipDescendants __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */





__attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_NSFileProviderService
#define _REWRITER_typedef_NSFileProviderService
typedef struct objc_object NSFileProviderService;
typedef struct {} _objc_exc_NSFileProviderService;
#endif

struct NSFileProviderService_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	__strong NSFileProviderServiceName _name;
	__strong id _endpointCreatingProxy;
	__strong dispatch_group_t _requestFinishedGroup;
};

// - (void)getFileProviderConnectionWithCompletionHandler:(void (^)(NSXPCConnection * _Nullable connection, NSError * _Nullable error))completionHandler;
// @property (readonly, copy) NSFileProviderServiceName name;
/* @end */


extern "C" NSFileAttributeKey const NSFileType;
extern "C" NSFileAttributeType const NSFileTypeDirectory;
extern "C" NSFileAttributeType const NSFileTypeRegular;
extern "C" NSFileAttributeType const NSFileTypeSymbolicLink;
extern "C" NSFileAttributeType const NSFileTypeSocket;
extern "C" NSFileAttributeType const NSFileTypeCharacterSpecial;
extern "C" NSFileAttributeType const NSFileTypeBlockSpecial;
extern "C" NSFileAttributeType const NSFileTypeUnknown;
extern "C" NSFileAttributeKey const NSFileSize;
extern "C" NSFileAttributeKey const NSFileModificationDate;
extern "C" NSFileAttributeKey const NSFileReferenceCount;
extern "C" NSFileAttributeKey const NSFileDeviceIdentifier;
extern "C" NSFileAttributeKey const NSFileOwnerAccountName;
extern "C" NSFileAttributeKey const NSFileGroupOwnerAccountName;
extern "C" NSFileAttributeKey const NSFilePosixPermissions;
extern "C" NSFileAttributeKey const NSFileSystemNumber;
extern "C" NSFileAttributeKey const NSFileSystemFileNumber;
extern "C" NSFileAttributeKey const NSFileExtensionHidden;
extern "C" NSFileAttributeKey const NSFileHFSCreatorCode;
extern "C" NSFileAttributeKey const NSFileHFSTypeCode;
extern "C" NSFileAttributeKey const NSFileImmutable;
extern "C" NSFileAttributeKey const NSFileAppendOnly;
extern "C" NSFileAttributeKey const NSFileCreationDate;
extern "C" NSFileAttributeKey const NSFileOwnerAccountID;
extern "C" NSFileAttributeKey const NSFileGroupOwnerAccountID;
extern "C" NSFileAttributeKey const NSFileBusy;
extern "C" NSFileAttributeKey const NSFileProtectionKey __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));
extern "C" NSFileProtectionType const NSFileProtectionNone __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));
extern "C" NSFileProtectionType const NSFileProtectionComplete __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));
extern "C" NSFileProtectionType const NSFileProtectionCompleteUnlessOpen __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));
extern "C" NSFileProtectionType const NSFileProtectionCompleteUntilFirstUserAuthentication __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));

extern "C" NSFileAttributeKey const NSFileSystemSize;
extern "C" NSFileAttributeKey const NSFileSystemFreeSize;
extern "C" NSFileAttributeKey const NSFileSystemNodes;
extern "C" NSFileAttributeKey const NSFileSystemFreeNodes;

// @interface NSDictionary<KeyType, ObjectType> (NSFileAttributes)

// - (unsigned long long)fileSize;
// - (nullable NSDate *)fileModificationDate;
// - (nullable NSString *)fileType;
// - (NSUInteger)filePosixPermissions;
// - (nullable NSString *)fileOwnerAccountName;
// - (nullable NSString *)fileGroupOwnerAccountName;
// - (NSInteger)fileSystemNumber;
// - (NSUInteger)fileSystemFileNumber;
// - (BOOL)fileExtensionHidden;
// - (OSType)fileHFSCreatorCode;
// - (OSType)fileHFSTypeCode;
// - (BOOL)fileIsImmutable;
// - (BOOL)fileIsAppendOnly;
// - (nullable NSDate *)fileCreationDate;
// - (nullable NSNumber *)fileOwnerAccountID;
// - (nullable NSNumber *)fileGroupOwnerAccountID;
/* @end */

#pragma clang assume_nonnull end





#pragma clang assume_nonnull begin
typedef NSUInteger NSPointerFunctionsOptions; enum {



    NSPointerFunctionsStrongMemory __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = (0UL << 0),



    NSPointerFunctionsOpaqueMemory __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = (2UL << 0),
    NSPointerFunctionsMallocMemory __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = (3UL << 0),
    NSPointerFunctionsMachVirtualMemory __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = (4UL << 0),
    NSPointerFunctionsWeakMemory __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = (5UL << 0),



    NSPointerFunctionsObjectPersonality __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = (0UL << 8),
    NSPointerFunctionsOpaquePersonality __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = (1UL << 8),
    NSPointerFunctionsObjectPointerPersonality __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = (2UL << 8),
    NSPointerFunctionsCStringPersonality __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = (3UL << 8),
    NSPointerFunctionsStructPersonality __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = (4UL << 8),
    NSPointerFunctionsIntegerPersonality __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = (5UL << 8),

    NSPointerFunctionsCopyIn __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = (1UL << 16),
};

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0)))

#ifndef _REWRITER_typedef_NSPointerFunctions
#define _REWRITER_typedef_NSPointerFunctions
typedef struct objc_object NSPointerFunctions;
typedef struct {} _objc_exc_NSPointerFunctions;
#endif

struct NSPointerFunctions_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)initWithOptions:(NSPointerFunctionsOptions)options __attribute__((objc_designated_initializer));
// + (NSPointerFunctions *)pointerFunctionsWithOptions:(NSPointerFunctionsOptions)options;


// @property (nullable) NSUInteger (*hashFunction)(const void *item, NSUInteger (* _Nullable size)(const void *item));
// @property (nullable) BOOL (*isEqualFunction)(const void *item1, const void*item2, NSUInteger (* _Nullable size)(const void *item));
// @property (nullable) NSUInteger (*sizeFunction)(const void *item);
// @property (nullable) NSString * _Nullable (*descriptionFunction)(const void *item);


// @property (nullable) void (*relinquishFunction)(const void *item, NSUInteger (* _Nullable size)(const void *item));
// @property (nullable) void * _Nonnull (*acquireFunction)(const void *src, NSUInteger (* _Nullable size)(const void *item), BOOL shouldCopy);


// @property BOOL usesStrongWriteBarrier
    __attribute__((availability(macosx,introduced=10.5,deprecated=10.12,message="Garbage collection no longer supported"))) __attribute__((availability(ios,introduced=2.0,deprecated=10.0,message="Garbage collection no longer supported"))) __attribute__((availability(watchos,introduced=2.0,deprecated=3.0,message="Garbage collection no longer supported"))) __attribute__((availability(tvos,introduced=9.0,deprecated=10.0,message="Garbage collection no longer supported")));

// @property BOOL usesWeakReadAndWriteBarriers
    __attribute__((availability(macosx,introduced=10.5,deprecated=10.12,message="Garbage collection no longer supported"))) __attribute__((availability(ios,introduced=2.0,deprecated=10.0,message="Garbage collection no longer supported"))) __attribute__((availability(watchos,introduced=2.0,deprecated=3.0,message="Garbage collection no longer supported"))) __attribute__((availability(tvos,introduced=9.0,deprecated=10.0,message="Garbage collection no longer supported")));
/* @end */

#pragma clang assume_nonnull end






// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSSet
#define _REWRITER_typedef_NSSet
typedef struct objc_object NSSet;
typedef struct {} _objc_exc_NSSet;
#endif

#ifndef _REWRITER_typedef_NSHashTable
#define _REWRITER_typedef_NSHashTable
typedef struct objc_object NSHashTable;
typedef struct {} _objc_exc_NSHashTable;
#endif


#pragma clang assume_nonnull begin





static const NSPointerFunctionsOptions NSHashTableStrongMemory __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = NSPointerFunctionsStrongMemory;



static const NSPointerFunctionsOptions NSHashTableCopyIn __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = NSPointerFunctionsCopyIn;
static const NSPointerFunctionsOptions NSHashTableObjectPointerPersonality __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = NSPointerFunctionsObjectPointerPersonality;
static const NSPointerFunctionsOptions NSHashTableWeakMemory __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = NSPointerFunctionsWeakMemory;

typedef NSUInteger NSHashTableOptions;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0)))

#ifndef _REWRITER_typedef_NSHashTable
#define _REWRITER_typedef_NSHashTable
typedef struct objc_object NSHashTable;
typedef struct {} _objc_exc_NSHashTable;
#endif

struct NSHashTable_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)initWithOptions:(NSPointerFunctionsOptions)options capacity:(NSUInteger)initialCapacity __attribute__((objc_designated_initializer));
// - (instancetype)initWithPointerFunctions:(NSPointerFunctions *)functions capacity:(NSUInteger)initialCapacity __attribute__((objc_designated_initializer));



// + (NSHashTable<ObjectType> *)hashTableWithOptions:(NSPointerFunctionsOptions)options;





// + (NSHashTable<ObjectType> *)weakObjectsHashTable __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// @property (readonly, copy) NSPointerFunctions *pointerFunctions;

// @property (readonly) NSUInteger count;
// - (nullable ObjectType)member:(nullable ObjectType)object;
// - (NSEnumerator<ObjectType> *)objectEnumerator;

// - (void)addObject:(nullable ObjectType)object;
// - (void)removeObject:(nullable ObjectType)object;

// - (void)removeAllObjects;

// @property (readonly, copy) NSArray<ObjectType> *allObjects;

// @property (nullable, nonatomic, readonly) ObjectType anyObject;
// - (BOOL)containsObject:(nullable ObjectType)anObject;

// - (BOOL)intersectsHashTable:(NSHashTable<ObjectType> *)other;
// - (BOOL)isEqualToHashTable:(NSHashTable<ObjectType> *)other;
// - (BOOL)isSubsetOfHashTable:(NSHashTable<ObjectType> *)other;

// - (void)intersectHashTable:(NSHashTable<ObjectType> *)other;
// - (void)unionHashTable:(NSHashTable<ObjectType> *)other;
// - (void)minusHashTable:(NSHashTable<ObjectType> *)other;

// @property (readonly, copy) NSSet<ObjectType> *setRepresentation;

/* @end */

#pragma clang assume_nonnull end
// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

// @class NSDate;
#ifndef _REWRITER_typedef_NSDate
#define _REWRITER_typedef_NSDate
typedef struct objc_object NSDate;
typedef struct {} _objc_exc_NSDate;
#endif

// @class NSDictionary;
#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

// @class NSNumber;
#ifndef _REWRITER_typedef_NSNumber
#define _REWRITER_typedef_NSNumber
typedef struct objc_object NSNumber;
typedef struct {} _objc_exc_NSNumber;
#endif

// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

// @class NSURL;
#ifndef _REWRITER_typedef_NSURL
#define _REWRITER_typedef_NSURL
typedef struct objc_object NSURL;
typedef struct {} _objc_exc_NSURL;
#endif


typedef NSString * NSHTTPCookiePropertyKey __attribute__((swift_wrapper(struct)));

#pragma clang assume_nonnull begin





extern "C" NSHTTPCookiePropertyKey const NSHTTPCookieName;





extern "C" NSHTTPCookiePropertyKey const NSHTTPCookieValue;





extern "C" NSHTTPCookiePropertyKey const NSHTTPCookieOriginURL;





extern "C" NSHTTPCookiePropertyKey const NSHTTPCookieVersion;





extern "C" NSHTTPCookiePropertyKey const NSHTTPCookieDomain;





extern "C" NSHTTPCookiePropertyKey const NSHTTPCookiePath;





extern "C" NSHTTPCookiePropertyKey const NSHTTPCookieSecure;





extern "C" NSHTTPCookiePropertyKey const NSHTTPCookieExpires;





extern "C" NSHTTPCookiePropertyKey const NSHTTPCookieComment;





extern "C" NSHTTPCookiePropertyKey const NSHTTPCookieCommentURL;





extern "C" NSHTTPCookiePropertyKey const NSHTTPCookieDiscard;





extern "C" NSHTTPCookiePropertyKey const NSHTTPCookieMaximumAge;





extern "C" NSHTTPCookiePropertyKey const NSHTTPCookiePort;


// @class NSHTTPCookieInternal;
#ifndef _REWRITER_typedef_NSHTTPCookieInternal
#define _REWRITER_typedef_NSHTTPCookieInternal
typedef struct objc_object NSHTTPCookieInternal;
typedef struct {} _objc_exc_NSHTTPCookieInternal;
#endif


#ifndef _REWRITER_typedef_NSHTTPCookie
#define _REWRITER_typedef_NSHTTPCookie
typedef struct objc_object NSHTTPCookie;
typedef struct {} _objc_exc_NSHTTPCookie;
#endif

struct NSHTTPCookie_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSHTTPCookieInternal *__strong _cookiePrivate;
};

// - (nullable instancetype)initWithProperties:(NSDictionary<NSHTTPCookiePropertyKey, id> *)properties;
// + (nullable NSHTTPCookie *)cookieWithProperties:(NSDictionary<NSHTTPCookiePropertyKey, id> *)properties;
// + (NSDictionary<NSString *, NSString *> *)requestHeaderFieldsWithCookies:(NSArray<NSHTTPCookie *> *)cookies;
// + (NSArray<NSHTTPCookie *> *)cookiesWithResponseHeaderFields:(NSDictionary<NSString *, NSString *> *)headerFields forURL:(NSURL *)URL;
// @property (nullable, readonly, copy) NSDictionary<NSHTTPCookiePropertyKey, id> *properties;







// @property (readonly) NSUInteger version;





// @property (readonly, copy) NSString *name;





// @property (readonly, copy) NSString *value;
// @property (nullable, readonly, copy) NSDate *expiresDate;







// @property (readonly, getter=isSessionOnly) BOOL sessionOnly;
// @property (readonly, copy) NSString *domain;
// @property (readonly, copy) NSString *path;
// @property (readonly, getter=isSecure) BOOL secure;
// @property (readonly, getter=isHTTPOnly) BOOL HTTPOnly;
// @property (nullable, readonly, copy) NSString *comment;
// @property (nullable, readonly, copy) NSURL *commentURL;
// @property (nullable, readonly, copy) NSArray<NSNumber *> *portList;

/* @end */

#pragma clang assume_nonnull end
// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

// @class NSHTTPCookie;
#ifndef _REWRITER_typedef_NSHTTPCookie
#define _REWRITER_typedef_NSHTTPCookie
typedef struct objc_object NSHTTPCookie;
typedef struct {} _objc_exc_NSHTTPCookie;
#endif

// @class NSURL;
#ifndef _REWRITER_typedef_NSURL
#define _REWRITER_typedef_NSURL
typedef struct objc_object NSURL;
typedef struct {} _objc_exc_NSURL;
#endif

// @class NSDate;
#ifndef _REWRITER_typedef_NSDate
#define _REWRITER_typedef_NSDate
typedef struct objc_object NSDate;
typedef struct {} _objc_exc_NSDate;
#endif

// @class NSURLSessionTask;
#ifndef _REWRITER_typedef_NSURLSessionTask
#define _REWRITER_typedef_NSURLSessionTask
typedef struct objc_object NSURLSessionTask;
typedef struct {} _objc_exc_NSURLSessionTask;
#endif

// @class NSSortDescriptor;
#ifndef _REWRITER_typedef_NSSortDescriptor
#define _REWRITER_typedef_NSSortDescriptor
typedef struct objc_object NSSortDescriptor;
typedef struct {} _objc_exc_NSSortDescriptor;
#endif


#pragma clang assume_nonnull begin
typedef NSUInteger NSHTTPCookieAcceptPolicy; enum {
    NSHTTPCookieAcceptPolicyAlways,
    NSHTTPCookieAcceptPolicyNever,
    NSHTTPCookieAcceptPolicyOnlyFromMainDocumentDomain
};


// @class NSHTTPCookieStorageInternal;
#ifndef _REWRITER_typedef_NSHTTPCookieStorageInternal
#define _REWRITER_typedef_NSHTTPCookieStorageInternal
typedef struct objc_object NSHTTPCookieStorageInternal;
typedef struct {} _objc_exc_NSHTTPCookieStorageInternal;
#endif


#ifndef _REWRITER_typedef_NSHTTPCookieStorage
#define _REWRITER_typedef_NSHTTPCookieStorage
typedef struct objc_object NSHTTPCookieStorage;
typedef struct {} _objc_exc_NSHTTPCookieStorage;
#endif

struct NSHTTPCookieStorage_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSHTTPCookieStorageInternal *__strong _internal;
};

@property(class, readonly, strong) NSHTTPCookieStorage *sharedHTTPCookieStorage;
// + (NSHTTPCookieStorage *)sharedCookieStorageForGroupContainerIdentifier:(NSString *)identifier __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// @property (nullable , readonly, copy) NSArray<NSHTTPCookie *> *cookies;







// - (void)setCookie:(NSHTTPCookie *)cookie;





// - (void)deleteCookie:(NSHTTPCookie *)cookie;





// - (void)removeCookiesSinceDate:(NSDate *)date __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (nullable NSArray<NSHTTPCookie *> *)cookiesForURL:(NSURL *)URL;
// - (void)setCookies:(NSArray<NSHTTPCookie *> *)cookies forURL:(nullable NSURL *)URL mainDocumentURL:(nullable NSURL *)mainDocumentURL;





// @property NSHTTPCookieAcceptPolicy cookieAcceptPolicy;







// - (NSArray<NSHTTPCookie *> *)sortedCookiesUsingDescriptors:(NSArray<NSSortDescriptor *> *) sortOrder __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */


// @interface NSHTTPCookieStorage (NSURLSessionTaskAdditions)
// - (void)storeCookies:(NSArray<NSHTTPCookie *> *)cookies forTask:(NSURLSessionTask *)task __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)getCookiesForTask:(NSURLSessionTask *)task completionHandler:(void (^) (NSArray<NSHTTPCookie *> * _Nullable cookies))completionHandler __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
/* @end */








extern "C" NSNotificationName const NSHTTPCookieManagerAcceptPolicyChangedNotification;





extern "C" NSNotificationName const NSHTTPCookieManagerCookiesChangedNotification;
#pragma clang assume_nonnull end







#pragma clang assume_nonnull begin


#ifndef _REWRITER_typedef_NSIndexPath
#define _REWRITER_typedef_NSIndexPath
typedef struct objc_object NSIndexPath;
typedef struct {} _objc_exc_NSIndexPath;
#endif

struct NSIndexPath_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSUInteger *_indexes;
	NSUInteger _length;
	void *_reserved;
};


// + (instancetype)indexPathWithIndex:(NSUInteger)index;
// + (instancetype)indexPathWithIndexes:(const NSUInteger [_Nullable])indexes length:(NSUInteger)length;

// - (instancetype)initWithIndexes:(const NSUInteger [_Nullable])indexes length:(NSUInteger)length __attribute__((objc_designated_initializer));

// - (instancetype)initWithIndex:(NSUInteger)index;


// - (NSIndexPath *)indexPathByAddingIndex:(NSUInteger)index;
// - (NSIndexPath *)indexPathByRemovingLastIndex;

// - (NSUInteger)indexAtPosition:(NSUInteger)position;
// @property (readonly) NSUInteger length;
// - (void)getIndexes:(NSUInteger *)indexes range:(NSRange)positionRange __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


// - (NSComparisonResult)compare:(NSIndexPath *)otherObject;

/* @end */


// @interface NSIndexPath (NSDeprecated)

// - (void)getIndexes:(NSUInteger *)indexes;
/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin


#ifndef _REWRITER_typedef_NSIndexSet
#define _REWRITER_typedef_NSIndexSet
typedef struct objc_object NSIndexSet;
typedef struct {} _objc_exc_NSIndexSet;
#endif

struct NSIndexSet_IMPL {
	struct NSObject_IMPL NSObject_IVARS;

	struct  {
	NSUInteger _isEmpty : 1;
	NSUInteger _hasSingleRange : 1;
	NSUInteger _cacheValid : 1;
	NSUInteger _reservedArrayBinderController : 29;
	} _indexSetFlags;

	union  {

	struct  {
	NSRange _range;
	} _singleRange;

	struct  {
	void * _Nonnull _data;
	void * _Nonnull _reserved;
	} _multipleRanges;
	} _internal;
};


// + (instancetype)indexSet;
// + (instancetype)indexSetWithIndex:(NSUInteger)value;
// + (instancetype)indexSetWithIndexesInRange:(NSRange)range;

// - (instancetype)initWithIndexesInRange:(NSRange)range __attribute__((objc_designated_initializer));
// - (instancetype)initWithIndexSet:(NSIndexSet *)indexSet __attribute__((objc_designated_initializer));

// - (instancetype)initWithIndex:(NSUInteger)value;

// - (BOOL)isEqualToIndexSet:(NSIndexSet *)indexSet;

// @property (readonly) NSUInteger count;



// @property (readonly) NSUInteger firstIndex;
// @property (readonly) NSUInteger lastIndex;
// - (NSUInteger)indexGreaterThanIndex:(NSUInteger)value;
// - (NSUInteger)indexLessThanIndex:(NSUInteger)value;
// - (NSUInteger)indexGreaterThanOrEqualToIndex:(NSUInteger)value;
// - (NSUInteger)indexLessThanOrEqualToIndex:(NSUInteger)value;



// - (NSUInteger)getIndexes:(NSUInteger *)indexBuffer maxCount:(NSUInteger)bufferSize inIndexRange:(nullable NSRangePointer)range;

// - (NSUInteger)countOfIndexesInRange:(NSRange)range __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (BOOL)containsIndex:(NSUInteger)value;
// - (BOOL)containsIndexesInRange:(NSRange)range;
// - (BOOL)containsIndexes:(NSIndexSet *)indexSet;

// - (BOOL)intersectsIndexesInRange:(NSRange)range;

// - (void)enumerateIndexesUsingBlock:(void (__attribute__((noescape)) ^)(NSUInteger idx, BOOL *stop))block __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)enumerateIndexesWithOptions:(NSEnumerationOptions)opts usingBlock:(void (__attribute__((noescape)) ^)(NSUInteger idx, BOOL *stop))block __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)enumerateIndexesInRange:(NSRange)range options:(NSEnumerationOptions)opts usingBlock:(void (__attribute__((noescape)) ^)(NSUInteger idx, BOOL *stop))block __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (NSUInteger)indexPassingTest:(BOOL (__attribute__((noescape)) ^)(NSUInteger idx, BOOL *stop))predicate __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (NSUInteger)indexWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (__attribute__((noescape)) ^)(NSUInteger idx, BOOL *stop))predicate __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (NSUInteger)indexInRange:(NSRange)range options:(NSEnumerationOptions)opts passingTest:(BOOL (__attribute__((noescape)) ^)(NSUInteger idx, BOOL *stop))predicate __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (NSIndexSet *)indexesPassingTest:(BOOL (__attribute__((noescape)) ^)(NSUInteger idx, BOOL *stop))predicate __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (NSIndexSet *)indexesWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (__attribute__((noescape)) ^)(NSUInteger idx, BOOL *stop))predicate __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (NSIndexSet *)indexesInRange:(NSRange)range options:(NSEnumerationOptions)opts passingTest:(BOOL (__attribute__((noescape)) ^)(NSUInteger idx, BOOL *stop))predicate __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






// - (void)enumerateRangesUsingBlock:(void (__attribute__((noescape)) ^)(NSRange range, BOOL *stop))block __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)enumerateRangesWithOptions:(NSEnumerationOptions)opts usingBlock:(void (__attribute__((noescape)) ^)(NSRange range, BOOL *stop))block __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)enumerateRangesInRange:(NSRange)range options:(NSEnumerationOptions)opts usingBlock:(void (__attribute__((noescape)) ^)(NSRange range, BOOL *stop))block __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */



#ifndef _REWRITER_typedef_NSMutableIndexSet
#define _REWRITER_typedef_NSMutableIndexSet
typedef struct objc_object NSMutableIndexSet;
typedef struct {} _objc_exc_NSMutableIndexSet;
#endif

struct NSMutableIndexSet_IMPL {
	struct NSIndexSet_IMPL NSIndexSet_IVARS;
	void *_reserved;
};


// - (void)addIndexes:(NSIndexSet *)indexSet;
// - (void)removeIndexes:(NSIndexSet *)indexSet;
// - (void)removeAllIndexes;
// - (void)addIndex:(NSUInteger)value;
// - (void)removeIndex:(NSUInteger)value;
// - (void)addIndexesInRange:(NSRange)range;
// - (void)removeIndexesInRange:(NSRange)range;



// - (void)shiftIndexesStartingAtIndex:(NSUInteger)index by:(NSInteger)delta;

/* @end */

#pragma clang assume_nonnull end







// @class NSMethodSignature;
#ifndef _REWRITER_typedef_NSMethodSignature
#define _REWRITER_typedef_NSMethodSignature
typedef struct objc_object NSMethodSignature;
typedef struct {} _objc_exc_NSMethodSignature;
#endif


#pragma clang assume_nonnull begin

__attribute__((availability(swift, unavailable, message="NSInvocation and related APIs not available")))

#ifndef _REWRITER_typedef_NSInvocation
#define _REWRITER_typedef_NSInvocation
typedef struct objc_object NSInvocation;
typedef struct {} _objc_exc_NSInvocation;
#endif

struct NSInvocation_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_frame;
	void *_retdata;
	__strong id _signature;
	__strong id _container;
	uint8_t _retainedArgs;
	uint8_t _reserved[15];
};


// + (NSInvocation *)invocationWithMethodSignature:(NSMethodSignature *)sig;

// @property (readonly, retain) NSMethodSignature *methodSignature;

// - (void)retainArguments;
// @property (readonly) BOOL argumentsRetained;

// @property (nullable, assign) id target;
// @property SEL selector;

// - (void)getReturnValue:(void *)retLoc;
// - (void)setReturnValue:(void *)retLoc;

// - (void)getArgument:(void *)argumentLocation atIndex:(NSInteger)idx;
// - (void)setArgument:(void *)argumentLocation atIndex:(NSInteger)idx;

// - (void)invoke;
// - (void)invokeWithTarget:(id)target;

/* @end */

#pragma clang assume_nonnull end







// @class NSError;
#ifndef _REWRITER_typedef_NSError
#define _REWRITER_typedef_NSError
typedef struct objc_object NSError;
typedef struct {} _objc_exc_NSError;
#endif

#ifndef _REWRITER_typedef_NSOutputStream
#define _REWRITER_typedef_NSOutputStream
typedef struct objc_object NSOutputStream;
typedef struct {} _objc_exc_NSOutputStream;
#endif

#ifndef _REWRITER_typedef_NSInputStream
#define _REWRITER_typedef_NSInputStream
typedef struct objc_object NSInputStream;
typedef struct {} _objc_exc_NSInputStream;
#endif

#ifndef _REWRITER_typedef_NSData
#define _REWRITER_typedef_NSData
typedef struct objc_object NSData;
typedef struct {} _objc_exc_NSData;
#endif


#pragma clang assume_nonnull begin

typedef NSUInteger NSJSONReadingOptions; enum {
    NSJSONReadingMutableContainers = (1UL << 0),
    NSJSONReadingMutableLeaves = (1UL << 1),
    NSJSONReadingAllowFragments = (1UL << 2)
} __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

typedef NSUInteger NSJSONWritingOptions; enum {
    NSJSONWritingPrettyPrinted = (1UL << 0),



    NSJSONWritingSortedKeys __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0))) = (1UL << 1)
} __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0)))

#ifndef _REWRITER_typedef_NSJSONSerialization
#define _REWRITER_typedef_NSJSONSerialization
typedef struct objc_object NSJSONSerialization;
typedef struct {} _objc_exc_NSJSONSerialization;
#endif

struct NSJSONSerialization_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *reserved[6];
};

// + (BOOL)isValidJSONObject:(id)obj;



// + (nullable NSData *)dataWithJSONObject:(id)obj options:(NSJSONWritingOptions)opt error:(NSError **)error;




// + (nullable id)JSONObjectWithData:(NSData *)data options:(NSJSONReadingOptions)opt error:(NSError **)error;



// + (NSInteger)writeJSONObject:(id)obj toStream:(NSOutputStream *)stream options:(NSJSONWritingOptions)opt error:(NSError **)error;



// + (nullable id)JSONObjectWithStream:(NSInputStream *)stream options:(NSJSONReadingOptions)opt error:(NSError **)error;

/* @end */

#pragma clang assume_nonnull end







// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSIndexSet
#define _REWRITER_typedef_NSIndexSet
typedef struct objc_object NSIndexSet;
typedef struct {} _objc_exc_NSIndexSet;
#endif

#ifndef _REWRITER_typedef_NSSet
#define _REWRITER_typedef_NSSet
typedef struct objc_object NSSet;
typedef struct {} _objc_exc_NSSet;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif




#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0)))

#ifndef _REWRITER_typedef_NSOrderedSet
#define _REWRITER_typedef_NSOrderedSet
typedef struct objc_object NSOrderedSet;
typedef struct {} _objc_exc_NSOrderedSet;
#endif

struct NSOrderedSet_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property (readonly) NSUInteger count;
// - (ObjectType)objectAtIndex:(NSUInteger)idx;
// - (NSUInteger)indexOfObject:(ObjectType)object;
// - (instancetype)init __attribute__((objc_designated_initializer));
// - (instancetype)initWithObjects:(const ObjectType _Nonnull [_Nullable])objects count:(NSUInteger)cnt __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

/* @end */


// @interface NSOrderedSet<ObjectType> (NSExtendedOrderedSet)

// - (void)getObjects:(ObjectType _Nonnull __attribute__((objc_ownership(none))) [_Nullable])objects range:(NSRange)range __attribute__((availability(swift, unavailable, message="Use 'array' instead")));
// - (NSArray<ObjectType> *)objectsAtIndexes:(NSIndexSet *)indexes;
// @property (nullable, nonatomic, readonly) ObjectType firstObject;
// @property (nullable, nonatomic, readonly) ObjectType lastObject;

// - (BOOL)isEqualToOrderedSet:(NSOrderedSet<ObjectType> *)other;

// - (BOOL)containsObject:(ObjectType)object;
// - (BOOL)intersectsOrderedSet:(NSOrderedSet<ObjectType> *)other;
// - (BOOL)intersectsSet:(NSSet<ObjectType> *)set;

// - (BOOL)isSubsetOfOrderedSet:(NSOrderedSet<ObjectType> *)other;
// - (BOOL)isSubsetOfSet:(NSSet<ObjectType> *)set;

// - (ObjectType)objectAtIndexedSubscript:(NSUInteger)idx __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (NSEnumerator<ObjectType> *)objectEnumerator;
// - (NSEnumerator<ObjectType> *)reverseObjectEnumerator;

// @property (readonly, copy) NSOrderedSet<ObjectType> *reversedOrderedSet;







// @property (readonly, strong) NSArray<ObjectType> *array;
// @property (readonly, strong) NSSet<ObjectType> *set;

// - (void)enumerateObjectsUsingBlock:(void (__attribute__((noescape)) ^)(ObjectType obj, NSUInteger idx, BOOL *stop))block;
// - (void)enumerateObjectsWithOptions:(NSEnumerationOptions)opts usingBlock:(void (__attribute__((noescape)) ^)(ObjectType obj, NSUInteger idx, BOOL *stop))block;
// - (void)enumerateObjectsAtIndexes:(NSIndexSet *)s options:(NSEnumerationOptions)opts usingBlock:(void (__attribute__((noescape)) ^)(ObjectType obj, NSUInteger idx, BOOL *stop))block;

// - (NSUInteger)indexOfObjectPassingTest:(BOOL (__attribute__((noescape)) ^)(ObjectType obj, NSUInteger idx, BOOL *stop))predicate;
// - (NSUInteger)indexOfObjectWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (__attribute__((noescape)) ^)(ObjectType obj, NSUInteger idx, BOOL *stop))predicate;
// - (NSUInteger)indexOfObjectAtIndexes:(NSIndexSet *)s options:(NSEnumerationOptions)opts passingTest:(BOOL (__attribute__((noescape)) ^)(ObjectType obj, NSUInteger idx, BOOL *stop))predicate;

// - (NSIndexSet *)indexesOfObjectsPassingTest:(BOOL (__attribute__((noescape)) ^)(ObjectType obj, NSUInteger idx, BOOL *stop))predicate;
// - (NSIndexSet *)indexesOfObjectsWithOptions:(NSEnumerationOptions)opts passingTest:(BOOL (__attribute__((noescape)) ^)(ObjectType obj, NSUInteger idx, BOOL *stop))predicate;
// - (NSIndexSet *)indexesOfObjectsAtIndexes:(NSIndexSet *)s options:(NSEnumerationOptions)opts passingTest:(BOOL (__attribute__((noescape)) ^)(ObjectType obj, NSUInteger idx, BOOL *stop))predicate;

// - (NSUInteger)indexOfObject:(ObjectType)object inSortedRange:(NSRange)range options:(NSBinarySearchingOptions)opts usingComparator:(NSComparator __attribute__((noescape)))cmp;

// - (NSArray<ObjectType> *)sortedArrayUsingComparator:(NSComparator __attribute__((noescape)))cmptr;
// - (NSArray<ObjectType> *)sortedArrayWithOptions:(NSSortOptions)opts usingComparator:(NSComparator __attribute__((noescape)))cmptr;

// @property (readonly, copy) NSString *description;
// - (NSString *)descriptionWithLocale:(nullable id)locale;
// - (NSString *)descriptionWithLocale:(nullable id)locale indent:(NSUInteger)level;

/* @end */


// @interface NSOrderedSet<ObjectType> (NSOrderedSetCreation)

// + (instancetype)orderedSet;
// + (instancetype)orderedSetWithObject:(ObjectType)object;
// + (instancetype)orderedSetWithObjects:(const ObjectType _Nonnull [_Nonnull])objects count:(NSUInteger)cnt;
// + (instancetype)orderedSetWithObjects:(ObjectType)firstObj, ... __attribute__((sentinel(0,1)));
// + (instancetype)orderedSetWithOrderedSet:(NSOrderedSet<ObjectType> *)set;
// + (instancetype)orderedSetWithOrderedSet:(NSOrderedSet<ObjectType> *)set range:(NSRange)range copyItems:(BOOL)flag;
// + (instancetype)orderedSetWithArray:(NSArray<ObjectType> *)array;
// + (instancetype)orderedSetWithArray:(NSArray<ObjectType> *)array range:(NSRange)range copyItems:(BOOL)flag;
// + (instancetype)orderedSetWithSet:(NSSet<ObjectType> *)set;
// + (instancetype)orderedSetWithSet:(NSSet<ObjectType> *)set copyItems:(BOOL)flag;

// - (instancetype)initWithObject:(ObjectType)object;
// - (instancetype)initWithObjects:(ObjectType)firstObj, ... __attribute__((sentinel(0,1)));
// - (instancetype)initWithOrderedSet:(NSOrderedSet<ObjectType> *)set;
// - (instancetype)initWithOrderedSet:(NSOrderedSet<ObjectType> *)set copyItems:(BOOL)flag;
// - (instancetype)initWithOrderedSet:(NSOrderedSet<ObjectType> *)set range:(NSRange)range copyItems:(BOOL)flag;
// - (instancetype)initWithArray:(NSArray<ObjectType> *)array;
// - (instancetype)initWithArray:(NSArray<ObjectType> *)set copyItems:(BOOL)flag;
// - (instancetype)initWithArray:(NSArray<ObjectType> *)set range:(NSRange)range copyItems:(BOOL)flag;
// - (instancetype)initWithSet:(NSSet<ObjectType> *)set;
// - (instancetype)initWithSet:(NSSet<ObjectType> *)set copyItems:(BOOL)flag;

/* @end */




__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0)))

#ifndef _REWRITER_typedef_NSMutableOrderedSet
#define _REWRITER_typedef_NSMutableOrderedSet
typedef struct objc_object NSMutableOrderedSet;
typedef struct {} _objc_exc_NSMutableOrderedSet;
#endif

struct NSMutableOrderedSet_IMPL {
	struct NSOrderedSet_IMPL NSOrderedSet_IVARS;
};


// - (void)insertObject:(ObjectType)object atIndex:(NSUInteger)idx;
// - (void)removeObjectAtIndex:(NSUInteger)idx;
// - (void)replaceObjectAtIndex:(NSUInteger)idx withObject:(ObjectType)object;
// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));
// - (instancetype)init __attribute__((objc_designated_initializer));
// - (instancetype)initWithCapacity:(NSUInteger)numItems __attribute__((objc_designated_initializer));

/* @end */


// @interface NSMutableOrderedSet<ObjectType> (NSExtendedMutableOrderedSet)

// - (void)addObject:(ObjectType)object;
// - (void)addObjects:(const ObjectType _Nonnull [_Nullable])objects count:(NSUInteger)count;
// - (void)addObjectsFromArray:(NSArray<ObjectType> *)array;

// - (void)exchangeObjectAtIndex:(NSUInteger)idx1 withObjectAtIndex:(NSUInteger)idx2;
// - (void)moveObjectsAtIndexes:(NSIndexSet *)indexes toIndex:(NSUInteger)idx;

// - (void)insertObjects:(NSArray<ObjectType> *)objects atIndexes:(NSIndexSet *)indexes;

// - (void)setObject:(ObjectType)obj atIndex:(NSUInteger)idx;
// - (void)setObject:(ObjectType)obj atIndexedSubscript:(NSUInteger)idx __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (void)replaceObjectsInRange:(NSRange)range withObjects:(const ObjectType _Nonnull [_Nullable])objects count:(NSUInteger)count;
// - (void)replaceObjectsAtIndexes:(NSIndexSet *)indexes withObjects:(NSArray<ObjectType> *)objects;

// - (void)removeObjectsInRange:(NSRange)range;
// - (void)removeObjectsAtIndexes:(NSIndexSet *)indexes;
// - (void)removeAllObjects;

// - (void)removeObject:(ObjectType)object;
// - (void)removeObjectsInArray:(NSArray<ObjectType> *)array;

// - (void)intersectOrderedSet:(NSOrderedSet<ObjectType> *)other;
// - (void)minusOrderedSet:(NSOrderedSet<ObjectType> *)other;
// - (void)unionOrderedSet:(NSOrderedSet<ObjectType> *)other;

// - (void)intersectSet:(NSSet<ObjectType> *)other;
// - (void)minusSet:(NSSet<ObjectType> *)other;
// - (void)unionSet:(NSSet<ObjectType> *)other;


// - (void)sortUsingComparator:(NSComparator __attribute__((noescape)))cmptr;
// - (void)sortWithOptions:(NSSortOptions)opts usingComparator:(NSComparator __attribute__((noescape)))cmptr;
// - (void)sortRange:(NSRange)range options:(NSSortOptions)opts usingComparator:(NSComparator __attribute__((noescape)))cmptr;


/* @end */


// @interface NSMutableOrderedSet<ObjectType> (NSMutableOrderedSetCreation)

// + (instancetype)orderedSetWithCapacity:(NSUInteger)numItems;

/* @end */

#pragma clang assume_nonnull end



// @class NSError;
#ifndef _REWRITER_typedef_NSError
#define _REWRITER_typedef_NSError
typedef struct objc_object NSError;
typedef struct {} _objc_exc_NSError;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif


#pragma clang assume_nonnull begin







extern "C" NSExceptionName const NSUndefinedKeyException;

typedef NSString * NSKeyValueOperator __attribute__((swift_wrapper(enum)));



extern "C" NSKeyValueOperator const NSAverageKeyValueOperator;
extern "C" NSKeyValueOperator const NSCountKeyValueOperator;
extern "C" NSKeyValueOperator const NSDistinctUnionOfArraysKeyValueOperator;
extern "C" NSKeyValueOperator const NSDistinctUnionOfObjectsKeyValueOperator;
extern "C" NSKeyValueOperator const NSDistinctUnionOfSetsKeyValueOperator;
extern "C" NSKeyValueOperator const NSMaximumKeyValueOperator;
extern "C" NSKeyValueOperator const NSMinimumKeyValueOperator;
extern "C" NSKeyValueOperator const NSSumKeyValueOperator;
extern "C" NSKeyValueOperator const NSUnionOfArraysKeyValueOperator;
extern "C" NSKeyValueOperator const NSUnionOfObjectsKeyValueOperator;
extern "C" NSKeyValueOperator const NSUnionOfSetsKeyValueOperator;

// @interface NSObject(NSKeyValueCoding)



@property (class, readonly) BOOL accessInstanceVariablesDirectly;
// - (nullable id)valueForKey:(NSString *)key;
// - (void)setValue:(nullable id)value forKey:(NSString *)key;





// - (BOOL)validateValue:(inout id _Nullable * _Nonnull)ioValue forKey:(NSString *)inKey error:(out NSError **)outError;
// - (NSMutableArray *)mutableArrayValueForKey:(NSString *)key;
// - (NSMutableOrderedSet *)mutableOrderedSetValueForKey:(NSString *)key __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (NSMutableSet *)mutableSetValueForKey:(NSString *)key;



// - (nullable id)valueForKeyPath:(NSString *)keyPath;
// - (void)setValue:(nullable id)value forKeyPath:(NSString *)keyPath;
// - (BOOL)validateValue:(inout id _Nullable * _Nonnull)ioValue forKeyPath:(NSString *)inKeyPath error:(out NSError **)outError;
// - (NSMutableArray *)mutableArrayValueForKeyPath:(NSString *)keyPath;
// - (NSMutableOrderedSet *)mutableOrderedSetValueForKeyPath:(NSString *)keyPath __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (NSMutableSet *)mutableSetValueForKeyPath:(NSString *)keyPath;



// - (nullable id)valueForUndefinedKey:(NSString *)key;



// - (void)setValue:(nullable id)value forUndefinedKey:(NSString *)key;



// - (void)setNilValueForKey:(NSString *)key;



// - (NSDictionary<NSString *, id> *)dictionaryWithValuesForKeys:(NSArray<NSString *> *)keys;



// - (void)setValuesForKeysWithDictionary:(NSDictionary<NSString *, id> *)keyedValues;

/* @end */


// @interface NSArray<ObjectType>(NSKeyValueCoding)



// - (id)valueForKey:(NSString *)key;



// - (void)setValue:(nullable id)value forKey:(NSString *)key;

/* @end */


// @interface NSDictionary<KeyType, ObjectType>(NSKeyValueCoding)



// - (nullable ObjectType)valueForKey:(NSString *)key;

/* @end */


// @interface NSMutableDictionary<KeyType, ObjectType>(NSKeyValueCoding)



// - (void)setValue:(nullable ObjectType)value forKey:(NSString *)key;

/* @end */


// @interface NSOrderedSet<ObjectType>(NSKeyValueCoding)



// - (id)valueForKey:(NSString *)key __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (void)setValue:(nullable id)value forKey:(NSString *)key __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */


// @interface NSSet<ObjectType>(NSKeyValueCoding)



// - (id)valueForKey:(NSString *)key;



// - (void)setValue:(nullable id)value forKey:(NSString *)key;

/* @end */

#pragma clang assume_nonnull end
// @class NSIndexSet;
#ifndef _REWRITER_typedef_NSIndexSet
#define _REWRITER_typedef_NSIndexSet
typedef struct objc_object NSIndexSet;
typedef struct {} _objc_exc_NSIndexSet;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif


#pragma clang assume_nonnull begin



typedef NSUInteger NSKeyValueObservingOptions; enum {



    NSKeyValueObservingOptionNew = 0x01,
    NSKeyValueObservingOptionOld = 0x02,



    NSKeyValueObservingOptionInitial __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 0x04,





    NSKeyValueObservingOptionPrior __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 0x08

};



typedef NSUInteger NSKeyValueChange; enum {
    NSKeyValueChangeSetting = 1,
    NSKeyValueChangeInsertion = 2,
    NSKeyValueChangeRemoval = 3,
    NSKeyValueChangeReplacement = 4,
};



typedef NSUInteger NSKeyValueSetMutationKind; enum {
    NSKeyValueUnionSetMutation = 1,
    NSKeyValueMinusSetMutation = 2,
    NSKeyValueIntersectSetMutation = 3,
    NSKeyValueSetSetMutation = 4
};

typedef NSString * NSKeyValueChangeKey __attribute__((swift_wrapper(enum)));


extern "C" NSKeyValueChangeKey const NSKeyValueChangeKindKey;
extern "C" NSKeyValueChangeKey const NSKeyValueChangeNewKey;
extern "C" NSKeyValueChangeKey const NSKeyValueChangeOldKey;
extern "C" NSKeyValueChangeKey const NSKeyValueChangeIndexesKey;
extern "C" NSKeyValueChangeKey const NSKeyValueChangeNotificationIsPriorKey __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @interface NSObject(NSKeyValueObserving)
// - (void)observeValueForKeyPath:(nullable NSString *)keyPath ofObject:(nullable id)object change:(nullable NSDictionary<NSKeyValueChangeKey, id> *)change context:(nullable void *)context;

/* @end */


// @interface NSObject(NSKeyValueObserverRegistration)



// - (void)addObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath options:(NSKeyValueObservingOptions)options context:(nullable void *)context;
// - (void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath context:(nullable void *)context __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath;

/* @end */


// @interface NSArray<ObjectType>(NSKeyValueObserverRegistration)



// - (void)addObserver:(NSObject *)observer toObjectsAtIndexes:(NSIndexSet *)indexes forKeyPath:(NSString *)keyPath options:(NSKeyValueObservingOptions)options context:(nullable void *)context;
// - (void)removeObserver:(NSObject *)observer fromObjectsAtIndexes:(NSIndexSet *)indexes forKeyPath:(NSString *)keyPath context:(nullable void *)context __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)removeObserver:(NSObject *)observer fromObjectsAtIndexes:(NSIndexSet *)indexes forKeyPath:(NSString *)keyPath;



// - (void)addObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath options:(NSKeyValueObservingOptions)options context:(nullable void *)context;
// - (void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath context:(nullable void *)context __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath;

/* @end */


// @interface NSOrderedSet<ObjectType>(NSKeyValueObserverRegistration)



// - (void)addObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath options:(NSKeyValueObservingOptions)options context:(nullable void *)context;
// - (void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath context:(nullable void *)context __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath;

/* @end */


// @interface NSSet<ObjectType>(NSKeyValueObserverRegistration)



// - (void)addObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath options:(NSKeyValueObservingOptions)options context:(nullable void *)context;
// - (void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath context:(nullable void *)context __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)removeObserver:(NSObject *)observer forKeyPath:(NSString *)keyPath;

/* @end */


// @interface NSObject(NSKeyValueObserverNotification)







// - (void)willChangeValueForKey:(NSString *)key;
// - (void)didChangeValueForKey:(NSString *)key;







// - (void)willChange:(NSKeyValueChange)changeKind valuesAtIndexes:(NSIndexSet *)indexes forKey:(NSString *)key;
// - (void)didChange:(NSKeyValueChange)changeKind valuesAtIndexes:(NSIndexSet *)indexes forKey:(NSString *)key;
// - (void)willChangeValueForKey:(NSString *)key withSetMutation:(NSKeyValueSetMutationKind)mutationKind usingObjects:(NSSet *)objects;
// - (void)didChangeValueForKey:(NSString *)key withSetMutation:(NSKeyValueSetMutationKind)mutationKind usingObjects:(NSSet *)objects;

/* @end */


// @interface NSObject(NSKeyValueObservingCustomization)
// + (NSSet<NSString *> *)keyPathsForValuesAffectingValueForKey:(NSString *)key __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// + (BOOL)automaticallyNotifiesObserversForKey:(NSString *)key;



// @property (nullable) void *observationInfo __attribute__((objc_returns_inner_pointer));

/* @end */

#pragma clang assume_nonnull end












// @class NSData;
#ifndef _REWRITER_typedef_NSData
#define _REWRITER_typedef_NSData
typedef struct objc_object NSData;
typedef struct {} _objc_exc_NSData;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSError
#define _REWRITER_typedef_NSError
typedef struct objc_object NSError;
typedef struct {} _objc_exc_NSError;
#endif

#ifndef _REWRITER_typedef_NSInputStream
#define _REWRITER_typedef_NSInputStream
typedef struct objc_object NSInputStream;
typedef struct {} _objc_exc_NSInputStream;
#endif

#ifndef _REWRITER_typedef_NSOutputStream
#define _REWRITER_typedef_NSOutputStream
typedef struct objc_object NSOutputStream;
typedef struct {} _objc_exc_NSOutputStream;
#endif


#pragma clang assume_nonnull begin

typedef NSUInteger NSPropertyListMutabilityOptions; enum {
    NSPropertyListImmutable = kCFPropertyListImmutable,
    NSPropertyListMutableContainers = kCFPropertyListMutableContainers,
    NSPropertyListMutableContainersAndLeaves = kCFPropertyListMutableContainersAndLeaves
};

typedef NSUInteger NSPropertyListFormat; enum {
    NSPropertyListOpenStepFormat = kCFPropertyListOpenStepFormat,
    NSPropertyListXMLFormat_v1_0 = kCFPropertyListXMLFormat_v1_0,
    NSPropertyListBinaryFormat_v1_0 = kCFPropertyListBinaryFormat_v1_0
};

typedef NSPropertyListMutabilityOptions NSPropertyListReadOptions;
typedef NSUInteger NSPropertyListWriteOptions;


#ifndef _REWRITER_typedef_NSPropertyListSerialization
#define _REWRITER_typedef_NSPropertyListSerialization
typedef struct objc_object NSPropertyListSerialization;
typedef struct {} _objc_exc_NSPropertyListSerialization;
#endif

struct NSPropertyListSerialization_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *reserved[6];
};




// + (BOOL)propertyList:(id)plist isValidForFormat:(NSPropertyListFormat)format;



// + (nullable NSData *)dataWithPropertyList:(id)plist format:(NSPropertyListFormat)format options:(NSPropertyListWriteOptions)opt error:(out NSError **)error __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// + (NSInteger)writePropertyList:(id)plist toStream:(NSOutputStream *)stream format:(NSPropertyListFormat)format options:(NSPropertyListWriteOptions)opt error:(out NSError **)error __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// + (nullable id)propertyListWithData:(NSData *)data options:(NSPropertyListReadOptions)opt format:(nullable NSPropertyListFormat *)format error:(out NSError **)error __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// + (nullable id)propertyListWithStream:(NSInputStream *)stream options:(NSPropertyListReadOptions)opt format:(nullable NSPropertyListFormat *)format error:(out NSError **)error __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));




// + (nullable NSData *)dataFromPropertyList:(id)plist format:(NSPropertyListFormat)format errorDescription:(out __attribute__((objc_ownership(strong))) NSString * _Nullable * _Nullable)errorString __attribute__((availability(macos,introduced=10.0,deprecated=10.10,message="Use dataWithPropertyList:format:options:error: instead."))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,message="Use dataWithPropertyList:format:options:error: instead."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use dataWithPropertyList:format:options:error: instead."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use dataWithPropertyList:format:options:error: instead.")));



// + (nullable id)propertyListFromData:(NSData *)data mutabilityOption:(NSPropertyListMutabilityOptions)opt format:(nullable NSPropertyListFormat *)format errorDescription:(out __attribute__((objc_ownership(strong))) NSString * _Nullable * _Nullable)errorString __attribute__((availability(macos,introduced=10.0,deprecated=10.10,message="Use propertyListWithData:options:format:error: instead."))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,message="Use propertyListWithData:options:format:error: instead."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use propertyListWithData:options:format:error: instead."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use propertyListWithData:options:format:error: instead.")));

/* @end */

#pragma clang assume_nonnull end






// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSMutableData
#define _REWRITER_typedef_NSMutableData
typedef struct objc_object NSMutableData;
typedef struct {} _objc_exc_NSMutableData;
#endif

#ifndef _REWRITER_typedef_NSData
#define _REWRITER_typedef_NSData
typedef struct objc_object NSData;
typedef struct {} _objc_exc_NSData;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

// @protocol NSKeyedArchiverDelegate, NSKeyedUnarchiverDelegate;

#pragma clang assume_nonnull begin

extern "C" NSExceptionName const NSInvalidArchiveOperationException;
extern "C" NSExceptionName const NSInvalidUnarchiveOperationException;

extern "C" NSString * const NSKeyedArchiveRootObjectKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


#ifndef _REWRITER_typedef_NSKeyedArchiver
#define _REWRITER_typedef_NSKeyedArchiver
typedef struct objc_object NSKeyedArchiver;
typedef struct {} _objc_exc_NSKeyedArchiver;
#endif

struct NSKeyedArchiver_IMPL {
	struct NSCoder_IMPL NSCoder_IVARS;
	void *_stream;
	NSUInteger _flags;
	__strong id _delegate;
	__strong id _containers;
	__strong id _objects;
	__strong id _objRefMap;
	__strong id _replacementMap;
	__strong id _classNameMap;
	__strong id _conditionals;
	__strong id _classes;
	NSUInteger _genericKey;
	void *_cache;
	NSUInteger _cacheSize;
	NSUInteger _estimatedCount;
	void *_reserved2;
	__strong id _visited;
	void *_reserved0;
};



// - (instancetype)init __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

// + (NSData *)archivedDataWithRootObject:(id)rootObject;
// + (BOOL)archiveRootObject:(id)rootObject toFile:(NSString *)path;

// - (instancetype)initForWritingWithMutableData:(NSMutableData *)data;

// @property (nullable, assign) id <NSKeyedArchiverDelegate> delegate;

// @property NSPropertyListFormat outputFormat;


// @property (readonly, strong) NSData *encodedData __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

// - (void)finishEncoding;

// + (void)setClassName:(nullable NSString *)codedName forClass:(Class)cls;
// - (void)setClassName:(nullable NSString *)codedName forClass:(Class)cls;



// + (nullable NSString *)classNameForClass:(Class)cls;
// - (nullable NSString *)classNameForClass:(Class)cls;

// - (void)encodeObject:(nullable id)object forKey:(NSString *)key;
// - (void)encodeConditionalObject:(nullable id)object forKey:(NSString *)key;
// - (void)encodeBool:(BOOL)value forKey:(NSString *)key;
// - (void)encodeInt:(int)value forKey:(NSString *)key;
// - (void)encodeInt32:(int32_t)value forKey:(NSString *)key;
// - (void)encodeInt64:(int64_t)value forKey:(NSString *)key;
// - (void)encodeFloat:(float)value forKey:(NSString *)key;
// - (void)encodeDouble:(double)value forKey:(NSString *)key;
// - (void)encodeBytes:(nullable const uint8_t *)bytes length:(NSUInteger)length forKey:(NSString *)key;


// @property (readwrite) BOOL requiresSecureCoding __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */



#ifndef _REWRITER_typedef_NSKeyedUnarchiver
#define _REWRITER_typedef_NSKeyedUnarchiver
typedef struct objc_object NSKeyedUnarchiver;
typedef struct {} _objc_exc_NSKeyedUnarchiver;
#endif

struct NSKeyedUnarchiver_IMPL {
	struct NSCoder_IMPL NSCoder_IVARS;
	__strong id _delegate;
	uint32_t _flags;
	__strong id _objRefMap;
	__strong id _replacementMap;
	__strong id _nameClassMap;
	__strong id _tmpRefObjMap;
	__strong id _refObjMap;
	int32_t _genericKey;
	__strong id _data;
	void *_offsetData;
	__strong id _containers;
	__strong id _objects;
	const uint8_t *_bytes;
	uint64_t _len;
	__strong id _helper;
	void *_reserved0;
};


// + (nullable id)unarchiveObjectWithData:(NSData *)data;
// + (nullable id)unarchiveTopLevelObjectWithData:(NSData *)data error:(NSError **)error __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(swift, unavailable, message="Use 'unarchiveTopLevelObjectWithData(_:) throws' instead")));
// + (nullable id)unarchiveObjectWithFile:(NSString *)path;

// - (instancetype)initForReadingWithData:(NSData *)data;

// @property (nullable, assign) id <NSKeyedUnarchiverDelegate> delegate;

// - (void)finishDecoding;

// + (void)setClass:(nullable Class)cls forClassName:(NSString *)codedName;
// - (void)setClass:(nullable Class)cls forClassName:(NSString *)codedName;



// + (nullable Class)classForClassName:(NSString *)codedName;
// - (nullable Class)classForClassName:(NSString *)codedName;

// - (BOOL)containsValueForKey:(NSString *)key;

// - (nullable id)decodeObjectForKey:(NSString *)key;
// - (BOOL)decodeBoolForKey:(NSString *)key;
// - (int)decodeIntForKey:(NSString *)key;
// - (int32_t)decodeInt32ForKey:(NSString *)key;
// - (int64_t)decodeInt64ForKey:(NSString *)key;
// - (float)decodeFloatForKey:(NSString *)key;
// - (double)decodeDoubleForKey:(NSString *)key;
// - (nullable const uint8_t *)decodeBytesForKey:(NSString *)key returnedLength:(nullable NSUInteger *)lengthp __attribute__((objc_returns_inner_pointer));


// @property (readwrite) BOOL requiresSecureCoding __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (readwrite) NSDecodingFailurePolicy decodingFailurePolicy __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */


// @protocol NSKeyedArchiverDelegate <NSObject>
/* @optional */


// - (nullable id)archiver:(NSKeyedArchiver *)archiver willEncodeObject:(id)object;
// - (void)archiver:(NSKeyedArchiver *)archiver didEncodeObject:(nullable id)object;






// - (void)archiver:(NSKeyedArchiver *)archiver willReplaceObject:(nullable id)object withObject:(nullable id)newObject;





// - (void)archiverWillFinish:(NSKeyedArchiver *)archiver;


// - (void)archiverDidFinish:(NSKeyedArchiver *)archiver;


/* @end */


// @protocol NSKeyedUnarchiverDelegate <NSObject>
/* @optional */


// - (nullable Class)unarchiver:(NSKeyedUnarchiver *)unarchiver cannotDecodeObjectOfClassName:(NSString *)name originalClasses:(NSArray<NSString *> *)classNames;
// - (nullable id)unarchiver:(NSKeyedUnarchiver *)unarchiver didDecodeObject:(nullable id) __attribute__((ns_consumed)) object __attribute__((ns_returns_retained));







// - (void)unarchiver:(NSKeyedUnarchiver *)unarchiver willReplaceObject:(id)object withObject:(id)newObject;





// - (void)unarchiverWillFinish:(NSKeyedUnarchiver *)unarchiver;


// - (void)unarchiverDidFinish:(NSKeyedUnarchiver *)unarchiver;


/* @end */


// @interface NSObject (NSKeyedArchiverObjectSubstitution)

// @property (nullable, readonly) Class classForKeyedArchiver;
// - (nullable id)replacementObjectForKeyedArchiver:(NSKeyedArchiver *)archiver;
// + (NSArray<NSString *> *)classFallbacksForKeyedArchiver;


/* @end */


// @interface NSObject (NSKeyedUnarchiverObjectSubstitution)

// + (Class)classForKeyedUnarchiver;





/* @end */

#pragma clang assume_nonnull end







// @class NSDate;
#ifndef _REWRITER_typedef_NSDate
#define _REWRITER_typedef_NSDate
typedef struct objc_object NSDate;
typedef struct {} _objc_exc_NSDate;
#endif


#pragma clang assume_nonnull begin

// @protocol NSLocking

// - (void)lock;
// - (void)unlock;

/* @end */



#ifndef _REWRITER_typedef_NSLock
#define _REWRITER_typedef_NSLock
typedef struct objc_object NSLock;
typedef struct {} _objc_exc_NSLock;
#endif

struct NSLock_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_priv;
};


// - (BOOL)tryLock;
// - (BOOL)lockBeforeDate:(NSDate *)limit;

// @property (nullable, copy) NSString *name __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */



#ifndef _REWRITER_typedef_NSConditionLock
#define _REWRITER_typedef_NSConditionLock
typedef struct objc_object NSConditionLock;
typedef struct {} _objc_exc_NSConditionLock;
#endif

struct NSConditionLock_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_priv;
};


// - (instancetype)initWithCondition:(NSInteger)condition __attribute__((objc_designated_initializer));

// @property (readonly) NSInteger condition;
// - (void)lockWhenCondition:(NSInteger)condition;
// - (BOOL)tryLock;
// - (BOOL)tryLockWhenCondition:(NSInteger)condition;
// - (void)unlockWithCondition:(NSInteger)condition;
// - (BOOL)lockBeforeDate:(NSDate *)limit;
// - (BOOL)lockWhenCondition:(NSInteger)condition beforeDate:(NSDate *)limit;

// @property (nullable, copy) NSString *name __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */



#ifndef _REWRITER_typedef_NSRecursiveLock
#define _REWRITER_typedef_NSRecursiveLock
typedef struct objc_object NSRecursiveLock;
typedef struct {} _objc_exc_NSRecursiveLock;
#endif

struct NSRecursiveLock_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_priv;
};


// - (BOOL)tryLock;
// - (BOOL)lockBeforeDate:(NSDate *)limit;

// @property (nullable, copy) NSString *name __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */




__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0)))

#ifndef _REWRITER_typedef_NSCondition
#define _REWRITER_typedef_NSCondition
typedef struct objc_object NSCondition;
typedef struct {} _objc_exc_NSCondition;
#endif

struct NSCondition_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_priv;
};


// - (void)wait;
// - (BOOL)waitUntilDate:(NSDate *)limit;
// - (void)signal;
// - (void)broadcast;

// @property (nullable, copy) NSString *name __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */

#pragma clang assume_nonnull end
// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

#ifndef _REWRITER_typedef_NSMapTable
#define _REWRITER_typedef_NSMapTable
typedef struct objc_object NSMapTable;
typedef struct {} _objc_exc_NSMapTable;
#endif


#pragma clang assume_nonnull begin







static const NSPointerFunctionsOptions NSMapTableStrongMemory __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = NSPointerFunctionsStrongMemory;



static const NSPointerFunctionsOptions NSMapTableCopyIn __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = NSPointerFunctionsCopyIn;
static const NSPointerFunctionsOptions NSMapTableObjectPointerPersonality __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = NSPointerFunctionsObjectPointerPersonality;
static const NSPointerFunctionsOptions NSMapTableWeakMemory __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = NSPointerFunctionsWeakMemory;

typedef NSUInteger NSMapTableOptions;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0)))

#ifndef _REWRITER_typedef_NSMapTable
#define _REWRITER_typedef_NSMapTable
typedef struct objc_object NSMapTable;
typedef struct {} _objc_exc_NSMapTable;
#endif

struct NSMapTable_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)initWithKeyOptions:(NSPointerFunctionsOptions)keyOptions valueOptions:(NSPointerFunctionsOptions)valueOptions capacity:(NSUInteger)initialCapacity __attribute__((objc_designated_initializer));
// - (instancetype)initWithKeyPointerFunctions:(NSPointerFunctions *)keyFunctions valuePointerFunctions:(NSPointerFunctions *)valueFunctions capacity:(NSUInteger)initialCapacity __attribute__((objc_designated_initializer));

// + (NSMapTable<KeyType, ObjectType> *)mapTableWithKeyOptions:(NSPointerFunctionsOptions)keyOptions valueOptions:(NSPointerFunctionsOptions)valueOptions;
// + (NSMapTable<KeyType, ObjectType> *)strongToStrongObjectsMapTable __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (NSMapTable<KeyType, ObjectType> *)weakToStrongObjectsMapTable __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (NSMapTable<KeyType, ObjectType> *)strongToWeakObjectsMapTable __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (NSMapTable<KeyType, ObjectType> *)weakToWeakObjectsMapTable __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


// @property (readonly, copy) NSPointerFunctions *keyPointerFunctions;
// @property (readonly, copy) NSPointerFunctions *valuePointerFunctions;

// - (nullable ObjectType)objectForKey:(nullable KeyType)aKey;

// - (void)removeObjectForKey:(nullable KeyType)aKey;
// - (void)setObject:(nullable ObjectType)anObject forKey:(nullable KeyType)aKey;

// @property (readonly) NSUInteger count;

// - (NSEnumerator<KeyType> *)keyEnumerator;
// - (nullable NSEnumerator<ObjectType> *)objectEnumerator;

// - (void)removeAllObjects;

// - (NSDictionary<KeyType, ObjectType> *)dictionaryRepresentation;
/* @end */

#pragma clang assume_nonnull end






#pragma clang assume_nonnull begin

__attribute__((availability(swift, unavailable, message="NSInvocation and related APIs not available")))

#ifndef _REWRITER_typedef_NSMethodSignature
#define _REWRITER_typedef_NSMethodSignature
typedef struct objc_object NSMethodSignature;
typedef struct {} _objc_exc_NSMethodSignature;
#endif

struct NSMethodSignature_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_private;
	void *_reserved[5];
	unsigned long _flags;
};


// + (nullable NSMethodSignature *)signatureWithObjCTypes:(const char *)types;

// @property (readonly) NSUInteger numberOfArguments;
// - (const char *)getArgumentTypeAtIndex:(NSUInteger)idx __attribute__((objc_returns_inner_pointer));

// @property (readonly) NSUInteger frameLength;

// - (BOOL)isOneway;

// @property (readonly) const char *methodReturnType __attribute__((objc_returns_inner_pointer));
// @property (readonly) NSUInteger methodReturnLength;

/* @end */

#pragma clang assume_nonnull end








// @class NSNotification;
#ifndef _REWRITER_typedef_NSNotification
#define _REWRITER_typedef_NSNotification
typedef struct objc_object NSNotification;
typedef struct {} _objc_exc_NSNotification;
#endif

#ifndef _REWRITER_typedef_NSNotificationCenter
#define _REWRITER_typedef_NSNotificationCenter
typedef struct objc_object NSNotificationCenter;
typedef struct {} _objc_exc_NSNotificationCenter;
#endif

#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif


#pragma clang assume_nonnull begin

typedef NSUInteger NSPostingStyle; enum {
    NSPostWhenIdle = 1,
    NSPostASAP = 2,
    NSPostNow = 3
};

typedef NSUInteger NSNotificationCoalescing; enum {
    NSNotificationNoCoalescing = 0,
    NSNotificationCoalescingOnName = 1,
    NSNotificationCoalescingOnSender = 2
};


#ifndef _REWRITER_typedef_NSNotificationQueue
#define _REWRITER_typedef_NSNotificationQueue
typedef struct objc_object NSNotificationQueue;
typedef struct {} _objc_exc_NSNotificationQueue;
#endif

struct NSNotificationQueue_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	__strong id _notificationCenter;
	__strong id _asapQueue;
	__strong id _asapObs;
	__strong id _idleQueue;
	__strong id _idleObs;
};

@property (class, readonly, strong) NSNotificationQueue *defaultQueue;

// - (instancetype)initWithNotificationCenter:(NSNotificationCenter *)notificationCenter __attribute__((objc_designated_initializer));

// - (void)enqueueNotification:(NSNotification *)notification postingStyle:(NSPostingStyle)postingStyle;
// - (void)enqueueNotification:(NSNotification *)notification postingStyle:(NSPostingStyle)postingStyle coalesceMask:(NSNotificationCoalescing)coalesceMask forModes:(nullable NSArray<NSRunLoopMode> *)modes;

// - (void)dequeueNotificationsMatching:(NSNotification *)notification coalesceMask:(NSUInteger)coalesceMask;

/* @end */

#pragma clang assume_nonnull end






#pragma clang assume_nonnull begin


#ifndef _REWRITER_typedef_NSNull
#define _REWRITER_typedef_NSNull
typedef struct objc_object NSNull;
typedef struct {} _objc_exc_NSNull;
#endif

struct NSNull_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// + (NSNull *)null;

/* @end */

#pragma clang assume_nonnull end


// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSSet
#define _REWRITER_typedef_NSSet
typedef struct objc_object NSSet;
typedef struct {} _objc_exc_NSSet;
#endif


#pragma clang assume_nonnull begin








__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0)))

#ifndef _REWRITER_typedef_NSOperation
#define _REWRITER_typedef_NSOperation
typedef struct objc_object NSOperation;
typedef struct {} _objc_exc_NSOperation;
#endif

struct NSOperation_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	__strong id _private;
	int32_t _private1;
	int32_t _private1b;
};


// - (void)start;
// - (void)main;

// @property (readonly, getter=isCancelled) BOOL cancelled;
// - (void)cancel;

// @property (readonly, getter=isExecuting) BOOL executing;
// @property (readonly, getter=isFinished) BOOL finished;
// @property (readonly, getter=isConcurrent) BOOL concurrent;
// @property (readonly, getter=isAsynchronous) BOOL asynchronous __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, getter=isReady) BOOL ready;

// - (void)addDependency:(NSOperation *)op;
// - (void)removeDependency:(NSOperation *)op;

// @property (readonly, copy) NSArray<NSOperation *> *dependencies;

typedef NSInteger NSOperationQueuePriority; enum {
 NSOperationQueuePriorityVeryLow = -8L,
 NSOperationQueuePriorityLow = -4L,
 NSOperationQueuePriorityNormal = 0,
 NSOperationQueuePriorityHigh = 4,
 NSOperationQueuePriorityVeryHigh = 8
};

// @property NSOperationQueuePriority queuePriority;

// @property (nullable, copy) void (^completionBlock)(void) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (void)waitUntilFinished __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property double threadPriority __attribute__((availability(macos,introduced=10.6,deprecated=10.10,message="Not supported"))) __attribute__((availability(ios,introduced=4.0,deprecated=8.0,message="Not supported"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Not supported"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Not supported")));

// @property NSQualityOfService qualityOfService __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (nullable, copy) NSString *name __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */




__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0)))

#ifndef _REWRITER_typedef_NSBlockOperation
#define _REWRITER_typedef_NSBlockOperation
typedef struct objc_object NSBlockOperation;
typedef struct {} _objc_exc_NSBlockOperation;
#endif

struct NSBlockOperation_IMPL {
	struct NSOperation_IMPL NSOperation_IVARS;
	__strong id _private2;
	void *_reserved2;
};


// + (instancetype)blockOperationWithBlock:(void (^)(void))block;

// - (void)addExecutionBlock:(void (^)(void))block;
// @property (readonly, copy) NSArray<void (^)(void)> *executionBlocks;

/* @end */



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0)))
__attribute__((availability(swift, unavailable, message="NSInvocation and related APIs not available")))

#ifndef _REWRITER_typedef_NSInvocationOperation
#define _REWRITER_typedef_NSInvocationOperation
typedef struct objc_object NSInvocationOperation;
typedef struct {} _objc_exc_NSInvocationOperation;
#endif

struct NSInvocationOperation_IMPL {
	struct NSOperation_IMPL NSOperation_IVARS;
	__strong id _inv;
	__strong id _exception;
	void *_reserved2;
};


// - (nullable instancetype)initWithTarget:(id)target selector:(SEL)sel object:(nullable id)arg;
// - (instancetype)initWithInvocation:(NSInvocation *)inv __attribute__((objc_designated_initializer));

// @property (readonly, retain) NSInvocation *invocation;

// @property (nullable, readonly, retain) id result;

/* @end */


extern "C" NSExceptionName const NSInvocationOperationVoidResultException __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSExceptionName const NSInvocationOperationCancelledException __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

static const NSInteger NSOperationQueueDefaultMaxConcurrentOperationCount = -1;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0)))

#ifndef _REWRITER_typedef_NSOperationQueue
#define _REWRITER_typedef_NSOperationQueue
typedef struct objc_object NSOperationQueue;
typedef struct {} _objc_exc_NSOperationQueue;
#endif

struct NSOperationQueue_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	__strong id _private;
	void *_reserved;
};


// - (void)addOperation:(NSOperation *)op;
// - (void)addOperations:(NSArray<NSOperation *> *)ops waitUntilFinished:(BOOL)wait __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (void)addOperationWithBlock:(void (^)(void))block __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (readonly, copy) NSArray<__kindof NSOperation *> *operations;
// @property (readonly) NSUInteger operationCount __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property NSInteger maxConcurrentOperationCount;

// @property (getter=isSuspended) BOOL suspended;

// @property (nullable, copy) NSString *name __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property NSQualityOfService qualityOfService __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (nullable, assign ) dispatch_queue_t underlyingQueue __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (void)cancelAllOperations;

// - (void)waitUntilAllOperationsAreFinished;

@property (class, readonly, strong, nullable) NSOperationQueue *currentQueue __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
@property (class, readonly, strong) NSOperationQueue *mainQueue __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */

#pragma clang assume_nonnull end







// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif


#pragma clang assume_nonnull begin



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0)))

#ifndef _REWRITER_typedef_NSOrthography
#define _REWRITER_typedef_NSOrthography
typedef struct objc_object NSOrthography;
typedef struct {} _objc_exc_NSOrthography;
#endif

struct NSOrthography_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



// @property (readonly, copy) NSString *dominantScript;
// @property (readonly, copy) NSDictionary<NSString *, NSArray<NSString *> *> *languageMap;
// - (instancetype)initWithDominantScript:(NSString *)script languageMap:(NSDictionary<NSString *, NSArray<NSString *> *> *)map __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

/* @end */


// @interface NSOrthography (NSOrthographyExtended)


// - (nullable NSArray<NSString *> *)languagesForScript:(NSString *)script __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (nullable NSString *)dominantLanguageForScript:(NSString *)script __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


// @property (readonly, copy) NSString *dominantLanguage __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, copy) NSArray<NSString *> *allScripts __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, copy) NSArray<NSString *> *allLanguages __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// + (instancetype)defaultOrthographyForLanguage:(NSString *)language __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));

/* @end */


// @interface NSOrthography (NSOrthographyCreation)

// + (instancetype)orthographyWithDominantScript:(NSString *)script languageMap:(NSDictionary<NSString *, NSArray<NSString *> *> *)map __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0)))

#ifndef _REWRITER_typedef_NSPointerArray
#define _REWRITER_typedef_NSPointerArray
typedef struct objc_object NSPointerArray;
typedef struct {} _objc_exc_NSPointerArray;
#endif

struct NSPointerArray_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)initWithOptions:(NSPointerFunctionsOptions)options __attribute__((objc_designated_initializer));
// - (instancetype)initWithPointerFunctions:(NSPointerFunctions *)functions __attribute__((objc_designated_initializer));

// + (NSPointerArray *)pointerArrayWithOptions:(NSPointerFunctionsOptions)options;
// + (NSPointerArray *)pointerArrayWithPointerFunctions:(NSPointerFunctions *)functions;


// @property (readonly, copy) NSPointerFunctions *pointerFunctions;

// - (nullable void *)pointerAtIndex:(NSUInteger)index;


// - (void)addPointer:(nullable void *)pointer;
// - (void)removePointerAtIndex:(NSUInteger)index;
// - (void)insertPointer:(nullable void *)item atIndex:(NSUInteger)index;

// - (void)replacePointerAtIndex:(NSUInteger)index withPointer:(nullable void *)item;

// - (void)compact;



// @property NSUInteger count;

/* @end */



// @interface NSPointerArray (NSPointerArrayConveniences)







// + (NSPointerArray *)strongObjectsPointerArray __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (NSPointerArray *)weakObjectsPointerArray __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (readonly, copy) NSArray *allObjects;

/* @end */

#pragma clang assume_nonnull end









typedef int NSSocketNativeHandle;

// @class NSRunLoop;
#ifndef _REWRITER_typedef_NSRunLoop
#define _REWRITER_typedef_NSRunLoop
typedef struct objc_object NSRunLoop;
typedef struct {} _objc_exc_NSRunLoop;
#endif

#ifndef _REWRITER_typedef_NSMutableArray
#define _REWRITER_typedef_NSMutableArray
typedef struct objc_object NSMutableArray;
typedef struct {} _objc_exc_NSMutableArray;
#endif

#ifndef _REWRITER_typedef_NSDate
#define _REWRITER_typedef_NSDate
typedef struct objc_object NSDate;
typedef struct {} _objc_exc_NSDate;
#endif

// @class NSConnection;
#ifndef _REWRITER_typedef_NSConnection
#define _REWRITER_typedef_NSConnection
typedef struct objc_object NSConnection;
typedef struct {} _objc_exc_NSConnection;
#endif

#ifndef _REWRITER_typedef_NSPortMessage
#define _REWRITER_typedef_NSPortMessage
typedef struct objc_object NSPortMessage;
typedef struct {} _objc_exc_NSPortMessage;
#endif

// @class NSData;
#ifndef _REWRITER_typedef_NSData
#define _REWRITER_typedef_NSData
typedef struct objc_object NSData;
typedef struct {} _objc_exc_NSData;
#endif

// @protocol NSPortDelegate, NSMachPortDelegate;

#pragma clang assume_nonnull begin

extern "C" NSNotificationName const NSPortDidBecomeInvalidNotification;


#ifndef _REWRITER_typedef_NSPort
#define _REWRITER_typedef_NSPort
typedef struct objc_object NSPort;
typedef struct {} _objc_exc_NSPort;
#endif

struct NSPort_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};








// + (NSPort *)port;

// - (void)invalidate;
// @property (readonly, getter=isValid) BOOL valid;

// - (void)setDelegate:(nullable id <NSPortDelegate>)anObject;
// - (nullable id <NSPortDelegate>)delegate;





// - (void)scheduleInRunLoop:(NSRunLoop *)runLoop forMode:(NSRunLoopMode)mode;
// - (void)removeFromRunLoop:(NSRunLoop *)runLoop forMode:(NSRunLoopMode)mode;



// @property (readonly) NSUInteger reservedSpaceLength;
// - (BOOL)sendBeforeDate:(NSDate *)limitDate components:(nullable NSMutableArray *)components from:(nullable NSPort *) receivePort reserved:(NSUInteger)headerSpaceReserved;
// - (BOOL)sendBeforeDate:(NSDate *)limitDate msgid:(NSUInteger)msgID components:(nullable NSMutableArray *)components from:(nullable NSPort *)receivePort reserved:(NSUInteger)headerSpaceReserved;
/* @end */


// @protocol NSPortDelegate <NSObject>
/* @optional */

// - (void)handlePortMessage:(NSPortMessage *)message;



/* @end */




__attribute__((objc_arc_weak_reference_unavailable))

#ifndef _REWRITER_typedef_NSMachPort
#define _REWRITER_typedef_NSMachPort
typedef struct objc_object NSMachPort;
typedef struct {} _objc_exc_NSMachPort;
#endif

struct NSMachPort_IMPL {
	struct NSPort_IMPL NSPort_IVARS;
	__strong id _delegate;
	NSUInteger _flags;
	uint32_t _machPort;
	NSUInteger _reserved;
};


// + (NSPort *)portWithMachPort:(uint32_t)machPort;
// - (instancetype)initWithMachPort:(uint32_t)machPort __attribute__((objc_designated_initializer));

// - (void)setDelegate:(nullable id <NSMachPortDelegate>)anObject;
// - (nullable id <NSMachPortDelegate>)delegate;

typedef NSUInteger NSMachPortOptions; enum {
    NSMachPortDeallocateNone = 0,
    NSMachPortDeallocateSendRight = (1UL << 0),
    NSMachPortDeallocateReceiveRight = (1UL << 1)
} __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// + (NSPort *)portWithMachPort:(uint32_t)machPort options:(NSMachPortOptions)f __attribute__((availability(ios,introduced=2_0)));
// - (instancetype)initWithMachPort:(uint32_t)machPort options:(NSMachPortOptions)f __attribute__((availability(ios,introduced=2_0))) __attribute__((objc_designated_initializer));

// @property (readonly) uint32_t machPort;

// - (void)scheduleInRunLoop:(NSRunLoop *)runLoop forMode:(NSRunLoopMode)mode;
// - (void)removeFromRunLoop:(NSRunLoop *)runLoop forMode:(NSRunLoopMode)mode;




/* @end */


// @protocol NSMachPortDelegate <NSPortDelegate>
/* @optional */



// - (void)handleMachMessage:(void *)msg;

/* @end */






__attribute__((objc_arc_weak_reference_unavailable))

#ifndef _REWRITER_typedef_NSMessagePort
#define _REWRITER_typedef_NSMessagePort
typedef struct objc_object NSMessagePort;
typedef struct {} _objc_exc_NSMessagePort;
#endif

struct NSMessagePort_IMPL {
	struct NSPort_IMPL NSPort_IVARS;
	void *_port;
	__strong id _delegate;
};


/* @end */

#pragma clang assume_nonnull end








#pragma clang assume_nonnull begin

enum {
    NSWindowsNTOperatingSystem = 1,
    NSWindows95OperatingSystem,
    NSSolarisOperatingSystem,
    NSHPUXOperatingSystem,
    NSMACHOperatingSystem,
    NSSunOSOperatingSystem,
    NSOSF1OperatingSystem
} __attribute__((availability(macos,introduced=10.0,deprecated=10.10,message="Not supported"))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,message="Not supported"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Not supported"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Not supported")));

typedef struct {
    NSInteger majorVersion;
    NSInteger minorVersion;
    NSInteger patchVersion;
} NSOperatingSystemVersion;

// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif



#ifndef _REWRITER_typedef_NSProcessInfo
#define _REWRITER_typedef_NSProcessInfo
typedef struct objc_object NSProcessInfo;
typedef struct {} _objc_exc_NSProcessInfo;
#endif

struct NSProcessInfo_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSDictionary *__strong environment;
	NSArray *__strong arguments;
	NSString *__strong hostName;
	NSString *__strong name;
	NSInteger automaticTerminationOptOutCounter;
};


@property (class, readonly, strong) NSProcessInfo *processInfo;

// @property (readonly, copy) NSDictionary<NSString *, NSString *> *environment;
// @property (readonly, copy) NSArray<NSString *> *arguments;
// @property (readonly, copy) NSString *hostName;
// @property (copy) NSString *processName;
// @property (readonly) int processIdentifier;

// @property (readonly, copy) NSString *globallyUniqueString;

// - (NSUInteger)operatingSystem __attribute__((availability(macos,introduced=10.0,deprecated=10.10,message="-operatingSystem always returns NSMACHOperatingSystem, use -operatingSystemVersion or -isOperatingSystemAtLeastVersion: instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,message="-operatingSystem always returns NSMACHOperatingSystem, use -operatingSystemVersion or -isOperatingSystemAtLeastVersion: instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="-operatingSystem always returns NSMACHOperatingSystem, use -operatingSystemVersion or -isOperatingSystemAtLeastVersion: instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="-operatingSystem always returns NSMACHOperatingSystem, use -operatingSystemVersion or -isOperatingSystemAtLeastVersion: instead")));
// - (NSString *)operatingSystemName __attribute__((availability(macos,introduced=10.0,deprecated=10.10,message="-operatingSystemName always returns NSMACHOperatingSystem, use -operatingSystemVersionString instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,message="-operatingSystemName always returns NSMACHOperatingSystem, use -operatingSystemVersionString instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="-operatingSystemName always returns NSMACHOperatingSystem, use -operatingSystemVersionString instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="-operatingSystemName always returns NSMACHOperatingSystem, use -operatingSystemVersionString instead")));


// @property (readonly, copy) NSString *operatingSystemVersionString;

// @property (readonly) NSOperatingSystemVersion operatingSystemVersion __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (readonly) NSUInteger processorCount __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly) NSUInteger activeProcessorCount __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly) unsigned long long physicalMemory __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (BOOL) isOperatingSystemAtLeastVersion:(NSOperatingSystemVersion)version __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly) NSTimeInterval systemUptime __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






// - (void)disableSuddenTermination __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
// - (void)enableSuddenTermination __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));







// - (void)disableAutomaticTermination:(NSString *)reason __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
// - (void)enableAutomaticTermination:(NSString *)reason __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));






// @property BOOL automaticTerminationSupportEnabled __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

/* @end */

typedef uint64_t NSActivityOptions; enum {
    NSActivityIdleDisplaySleepDisabled = (1ULL << 40),


    NSActivityIdleSystemSleepDisabled = (1ULL << 20),


    NSActivitySuddenTerminationDisabled = (1ULL << 14),


    NSActivityAutomaticTerminationDisabled = (1ULL << 15),





    NSActivityUserInitiated = (0x00FFFFFFULL | NSActivityIdleSystemSleepDisabled),
    NSActivityUserInitiatedAllowingIdleSystemSleep = (NSActivityUserInitiated & ~NSActivityIdleSystemSleepDisabled),


    NSActivityBackground = 0x000000FFULL,


    NSActivityLatencyCritical = 0xFF00000000ULL,
} __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @interface NSProcessInfo (NSProcessInfoActivity)



// - (id <NSObject>)beginActivityWithOptions:(NSActivityOptions)options reason:(NSString *)reason __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));




// - (void)endActivity:(id <NSObject>)activity __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));




// - (void)performActivityWithOptions:(NSActivityOptions)options reason:(NSString *)reason usingBlock:(void (^)(void))block __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));




// - (void)performExpiringActivityWithReason:(NSString *)reason usingBlock:(void(^)(BOOL expired))block __attribute__((availability(ios,introduced=8.2))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));

/* @end */


// @interface NSProcessInfo (NSUserInformation)

// @property (readonly, copy) NSString *userName __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
// @property (readonly, copy) NSString *fullUserName __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

/* @end */



typedef NSInteger NSProcessInfoThermalState; enum {

    NSProcessInfoThermalStateNominal,


    NSProcessInfoThermalStateFair,


    NSProcessInfoThermalStateSerious,


    NSProcessInfoThermalStateCritical
} __attribute__((availability(macosx,introduced=10.10.3))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));

// @interface NSProcessInfo (NSProcessInfoThermalState)


// @property (readonly) NSProcessInfoThermalState thermalState __attribute__((availability(macosx,introduced=10.10.3))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));

/* @end */


// @interface NSProcessInfo (NSProcessInfoPowerState)


// @property (readonly, getter=isLowPowerModeEnabled) BOOL lowPowerModeEnabled __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));

/* @end */

extern "C" NSNotificationName const NSProcessInfoThermalStateDidChangeNotification __attribute__((availability(macosx,introduced=10.10.3))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
extern "C" NSNotificationName const NSProcessInfoPowerStateDidChangeNotification __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));
#pragma clang assume_nonnull end







// @class NSMethodSignature;
#ifndef _REWRITER_typedef_NSMethodSignature
#define _REWRITER_typedef_NSMethodSignature
typedef struct objc_object NSMethodSignature;
typedef struct {} _objc_exc_NSMethodSignature;
#endif

#ifndef _REWRITER_typedef_NSInvocation
#define _REWRITER_typedef_NSInvocation
typedef struct objc_object NSInvocation;
typedef struct {} _objc_exc_NSInvocation;
#endif


#pragma clang assume_nonnull begin

__attribute__((objc_root_class))

#ifndef _REWRITER_typedef_NSProxy
#define _REWRITER_typedef_NSProxy
typedef struct objc_object NSProxy;
typedef struct {} _objc_exc_NSProxy;
#endif

struct NSProxy_IMPL {
	__unsafe_unretained Class isa;
};


// + (id)alloc;
// + (id)allocWithZone:(nullable NSZone *)zone __attribute__((unavailable("not available in automatic reference counting mode")));
// + (Class)class;

// - (void)forwardInvocation:(NSInvocation *)invocation;
// - (nullable NSMethodSignature *)methodSignatureForSelector:(SEL)sel __attribute__((availability(swift, unavailable, message="NSInvocation and related APIs not available")));
// - (void)dealloc;
// - (void)finalize;
// @property (readonly, copy) NSString *description;
// @property (readonly, copy) NSString *debugDescription;
// + (BOOL)respondsToSelector:(SEL)aSelector;

// - (BOOL)allowsWeakReference __attribute__((unavailable));
// - (BOOL)retainWeakReference __attribute__((unavailable));



/* @end */

#pragma clang assume_nonnull end















// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

#ifndef _REWRITER_typedef_NSDate
#define _REWRITER_typedef_NSDate
typedef struct objc_object NSDate;
typedef struct {} _objc_exc_NSDate;
#endif

#ifndef _REWRITER_typedef_NSTimeZone
#define _REWRITER_typedef_NSTimeZone
typedef struct objc_object NSTimeZone;
typedef struct {} _objc_exc_NSTimeZone;
#endif

#ifndef _REWRITER_typedef_NSOrthography
#define _REWRITER_typedef_NSOrthography
typedef struct objc_object NSOrthography;
typedef struct {} _objc_exc_NSOrthography;
#endif

#ifndef _REWRITER_typedef_NSURL
#define _REWRITER_typedef_NSURL
typedef struct objc_object NSURL;
typedef struct {} _objc_exc_NSURL;
#endif

#ifndef _REWRITER_typedef_NSRegularExpression
#define _REWRITER_typedef_NSRegularExpression
typedef struct objc_object NSRegularExpression;
typedef struct {} _objc_exc_NSRegularExpression;
#endif


#pragma clang assume_nonnull begin



typedef uint64_t NSTextCheckingType; enum {
    NSTextCheckingTypeOrthography = 1ULL << 0,
    NSTextCheckingTypeSpelling = 1ULL << 1,
    NSTextCheckingTypeGrammar = 1ULL << 2,
    NSTextCheckingTypeDate = 1ULL << 3,
    NSTextCheckingTypeAddress = 1ULL << 4,
    NSTextCheckingTypeLink = 1ULL << 5,
    NSTextCheckingTypeQuote = 1ULL << 6,
    NSTextCheckingTypeDash = 1ULL << 7,
    NSTextCheckingTypeReplacement = 1ULL << 8,
    NSTextCheckingTypeCorrection = 1ULL << 9,
    NSTextCheckingTypeRegularExpression __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 1ULL << 10,
    NSTextCheckingTypePhoneNumber __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 1ULL << 11,
    NSTextCheckingTypeTransitInformation __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 1ULL << 12
};

typedef uint64_t NSTextCheckingTypes;
enum {
    NSTextCheckingAllSystemTypes = 0xffffffffULL,
    NSTextCheckingAllCustomTypes = 0xffffffffULL << 32,
    NSTextCheckingAllTypes = (NSTextCheckingAllSystemTypes | NSTextCheckingAllCustomTypes)
};

typedef NSString *NSTextCheckingKey __attribute__((swift_wrapper(struct)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0)))

#ifndef _REWRITER_typedef_NSTextCheckingResult
#define _REWRITER_typedef_NSTextCheckingResult
typedef struct objc_object NSTextCheckingResult;
typedef struct {} _objc_exc_NSTextCheckingResult;
#endif

struct NSTextCheckingResult_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



// @property (readonly) NSTextCheckingType resultType;
// @property (readonly) NSRange range;

/* @end */


// @interface NSTextCheckingResult (NSTextCheckingResultOptional)


// @property (nullable, readonly, copy) NSOrthography *orthography;
// @property (nullable, readonly, copy) NSArray<NSDictionary<NSString *, id> *> *grammarDetails;
// @property (nullable, readonly, copy) NSDate *date;
// @property (nullable, readonly, copy) NSTimeZone *timeZone;
// @property (readonly) NSTimeInterval duration;
// @property (nullable, readonly, copy) NSDictionary<NSTextCheckingKey, NSString *> *components __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (nullable, readonly, copy) NSURL *URL;
// @property (nullable, readonly, copy) NSString *replacementString;
// @property (nullable, readonly, copy) NSArray<NSString *> *alternativeStrings __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (nullable, readonly, copy) NSRegularExpression *regularExpression __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (nullable, readonly, copy) NSString *phoneNumber __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// @property (readonly) NSUInteger numberOfRanges __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (NSRange)rangeAtIndex:(NSUInteger)idx __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (NSRange)rangeWithName:(NSString *)name __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
// - (NSTextCheckingResult *)resultByAdjustingRangesWithOffset:(NSInteger)offset __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (nullable, readonly, copy) NSDictionary<NSTextCheckingKey, NSString *> *addressComponents;

/* @end */




extern "C" NSTextCheckingKey const NSTextCheckingNameKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSTextCheckingKey const NSTextCheckingJobTitleKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSTextCheckingKey const NSTextCheckingOrganizationKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSTextCheckingKey const NSTextCheckingStreetKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSTextCheckingKey const NSTextCheckingCityKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSTextCheckingKey const NSTextCheckingStateKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSTextCheckingKey const NSTextCheckingZIPKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSTextCheckingKey const NSTextCheckingCountryKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSTextCheckingKey const NSTextCheckingPhoneKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSTextCheckingKey const NSTextCheckingAirlineKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSTextCheckingKey const NSTextCheckingFlightKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


// @interface NSTextCheckingResult (NSTextCheckingResultCreation)


// + (NSTextCheckingResult *)orthographyCheckingResultWithRange:(NSRange)range orthography:(NSOrthography *)orthography;
// + (NSTextCheckingResult *)spellCheckingResultWithRange:(NSRange)range;
// + (NSTextCheckingResult *)grammarCheckingResultWithRange:(NSRange)range details:(NSArray<NSDictionary<NSString *, id> *> *)details;
// + (NSTextCheckingResult *)dateCheckingResultWithRange:(NSRange)range date:(NSDate *)date;
// + (NSTextCheckingResult *)dateCheckingResultWithRange:(NSRange)range date:(NSDate *)date timeZone:(NSTimeZone *)timeZone duration:(NSTimeInterval)duration;
// + (NSTextCheckingResult *)addressCheckingResultWithRange:(NSRange)range components:(NSDictionary<NSTextCheckingKey, NSString *> *)components;
// + (NSTextCheckingResult *)linkCheckingResultWithRange:(NSRange)range URL:(NSURL *)url;
// + (NSTextCheckingResult *)quoteCheckingResultWithRange:(NSRange)range replacementString:(NSString *)replacementString;
// + (NSTextCheckingResult *)dashCheckingResultWithRange:(NSRange)range replacementString:(NSString *)replacementString;
// + (NSTextCheckingResult *)replacementCheckingResultWithRange:(NSRange)range replacementString:(NSString *)replacementString;
// + (NSTextCheckingResult *)correctionCheckingResultWithRange:(NSRange)range replacementString:(NSString *)replacementString;
// + (NSTextCheckingResult *)correctionCheckingResultWithRange:(NSRange)range replacementString:(NSString *)replacementString alternativeStrings:(NSArray<NSString *> *)alternativeStrings __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (NSTextCheckingResult *)regularExpressionCheckingResultWithRanges:(NSRangePointer)ranges count:(NSUInteger)count regularExpression:(NSRegularExpression *)regularExpression __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (NSTextCheckingResult *)phoneNumberCheckingResultWithRange:(NSRange)range phoneNumber:(NSString *)phoneNumber __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (NSTextCheckingResult *)transitInformationCheckingResultWithRange:(NSRange)range components:(NSDictionary<NSTextCheckingKey, NSString *> *)components __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */

#pragma clang assume_nonnull end

// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif


#pragma clang assume_nonnull begin




typedef NSUInteger NSRegularExpressionOptions; enum {
   NSRegularExpressionCaseInsensitive = 1 << 0,
   NSRegularExpressionAllowCommentsAndWhitespace = 1 << 1,
   NSRegularExpressionIgnoreMetacharacters = 1 << 2,
   NSRegularExpressionDotMatchesLineSeparators = 1 << 3,
   NSRegularExpressionAnchorsMatchLines = 1 << 4,
   NSRegularExpressionUseUnixLineSeparators = 1 << 5,
   NSRegularExpressionUseUnicodeWordBoundaries = 1 << 6
};

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0)))

#ifndef _REWRITER_typedef_NSRegularExpression
#define _REWRITER_typedef_NSRegularExpression
typedef struct objc_object NSRegularExpression;
typedef struct {} _objc_exc_NSRegularExpression;
#endif

struct NSRegularExpression_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSString *__strong _pattern;
	NSUInteger _options;
	void *_internal;
	__strong id _reserved1;
	int32_t _checkout;
	int32_t _reserved2;
};




// + (nullable NSRegularExpression *)regularExpressionWithPattern:(NSString *)pattern options:(NSRegularExpressionOptions)options error:(NSError **)error;
// - (nullable instancetype)initWithPattern:(NSString *)pattern options:(NSRegularExpressionOptions)options error:(NSError **)error __attribute__((objc_designated_initializer));

// @property (readonly, copy) NSString *pattern;
// @property (readonly) NSRegularExpressionOptions options;
// @property (readonly) NSUInteger numberOfCaptureGroups;



// + (NSString *)escapedPatternForString:(NSString *)string;

/* @end */



typedef NSUInteger NSMatchingOptions; enum {
   NSMatchingReportProgress = 1 << 0,
   NSMatchingReportCompletion = 1 << 1,
   NSMatchingAnchored = 1 << 2,
   NSMatchingWithTransparentBounds = 1 << 3,
   NSMatchingWithoutAnchoringBounds = 1 << 4
};

typedef NSUInteger NSMatchingFlags; enum {
   NSMatchingProgress = 1 << 0,
   NSMatchingCompleted = 1 << 1,
   NSMatchingHitEnd = 1 << 2,
   NSMatchingRequiredEnd = 1 << 3,
   NSMatchingInternalError = 1 << 4
};

// @interface NSRegularExpression (NSMatching)




// - (void)enumerateMatchesInString:(NSString *)string options:(NSMatchingOptions)options range:(NSRange)range usingBlock:(void (__attribute__((noescape)) ^)(NSTextCheckingResult * _Nullable result, NSMatchingFlags flags, BOOL *stop))block;

// - (NSArray<NSTextCheckingResult *> *)matchesInString:(NSString *)string options:(NSMatchingOptions)options range:(NSRange)range;
// - (NSUInteger)numberOfMatchesInString:(NSString *)string options:(NSMatchingOptions)options range:(NSRange)range;
// - (nullable NSTextCheckingResult *)firstMatchInString:(NSString *)string options:(NSMatchingOptions)options range:(NSRange)range;
// - (NSRange)rangeOfFirstMatchInString:(NSString *)string options:(NSMatchingOptions)options range:(NSRange)range;
/* @end */



// @interface NSRegularExpression (NSReplacement)



// - (NSString *)stringByReplacingMatchesInString:(NSString *)string options:(NSMatchingOptions)options range:(NSRange)range withTemplate:(NSString *)templ;
// - (NSUInteger)replaceMatchesInString:(NSMutableString *)string options:(NSMatchingOptions)options range:(NSRange)range withTemplate:(NSString *)templ;



// - (NSString *)replacementStringForResult:(NSTextCheckingResult *)result inString:(NSString *)string offset:(NSInteger)offset template:(NSString *)templ;



// + (NSString *)escapedTemplateForString:(NSString *)string;

/* @end */


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0)))

#ifndef _REWRITER_typedef_NSDataDetector
#define _REWRITER_typedef_NSDataDetector
typedef struct objc_object NSDataDetector;
typedef struct {} _objc_exc_NSDataDetector;
#endif

struct NSDataDetector_IMPL {
	struct NSRegularExpression_IMPL NSRegularExpression_IVARS;
	NSTextCheckingTypes _types;
};




// + (nullable NSDataDetector *)dataDetectorWithTypes:(NSTextCheckingTypes)checkingTypes error:(NSError **)error;
// - (nullable instancetype)initWithTypes:(NSTextCheckingTypes)checkingTypes error:(NSError **)error __attribute__((objc_designated_initializer));

// @property (readonly) NSTextCheckingTypes checkingTypes;

/* @end */

#pragma clang assume_nonnull end



#pragma clang assume_nonnull begin


#ifndef _REWRITER_typedef_NSSortDescriptor
#define _REWRITER_typedef_NSSortDescriptor
typedef struct objc_object NSSortDescriptor;
typedef struct {} _objc_exc_NSSortDescriptor;
#endif

struct NSSortDescriptor_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSUInteger _sortDescriptorFlags;
	NSString *__strong _key;
	SEL _selector;
	__strong id _selectorOrBlock;
};


// + (instancetype)sortDescriptorWithKey:(nullable NSString *)key ascending:(BOOL)ascending __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (instancetype)sortDescriptorWithKey:(nullable NSString *)key ascending:(BOOL)ascending selector:(nullable SEL)selector __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


// - (instancetype)initWithKey:(nullable NSString *)key ascending:(BOOL)ascending;
// - (instancetype)initWithKey:(nullable NSString *)key ascending:(BOOL)ascending selector:(nullable SEL)selector;
// - (nullable instancetype)initWithCoder:(NSCoder *)coder;

// @property (nullable, readonly, copy) NSString *key;
// @property (readonly) BOOL ascending;
// @property (nullable, readonly) SEL selector;

// - (void)allowEvaluation __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// + (instancetype)sortDescriptorWithKey:(nullable NSString *)key ascending:(BOOL)ascending comparator:(NSComparator)cmptr __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (instancetype)initWithKey:(nullable NSString *)key ascending:(BOOL)ascending comparator:(NSComparator)cmptr __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (readonly) NSComparator comparator __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (NSComparisonResult)compareObject:(id)object1 toObject:(id)object2;
// @property (readonly, retain) id reversedSortDescriptor;

/* @end */


// @interface NSSet<ObjectType> (NSSortDescriptorSorting)

// - (NSArray<ObjectType> *)sortedArrayUsingDescriptors:(NSArray<NSSortDescriptor *> *)sortDescriptors __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */


// @interface NSArray<ObjectType> (NSSortDescriptorSorting)

// - (NSArray<ObjectType> *)sortedArrayUsingDescriptors:(NSArray<NSSortDescriptor *> *)sortDescriptors;

/* @end */


// @interface NSMutableArray<ObjectType> (NSSortDescriptorSorting)

// - (void)sortUsingDescriptors:(NSArray<NSSortDescriptor *> *)sortDescriptors;

/* @end */


// @interface NSOrderedSet<ObjectType> (NSKeyValueSorting)


// - (NSArray<ObjectType> *)sortedArrayUsingDescriptors:(NSArray<NSSortDescriptor *> *)sortDescriptors __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */


// @interface NSMutableOrderedSet<ObjectType> (NSKeyValueSorting)


// - (void)sortUsingDescriptors:(NSArray<NSSortDescriptor *> *)sortDescriptors __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */

#pragma clang assume_nonnull end







// @class NSData;
#ifndef _REWRITER_typedef_NSData
#define _REWRITER_typedef_NSData
typedef struct objc_object NSData;
typedef struct {} _objc_exc_NSData;
#endif

#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

#ifndef _REWRITER_typedef_NSError
#define _REWRITER_typedef_NSError
typedef struct objc_object NSError;
typedef struct {} _objc_exc_NSError;
#endif

#ifndef _REWRITER_typedef_NSHost
#define _REWRITER_typedef_NSHost
typedef struct objc_object NSHost;
typedef struct {} _objc_exc_NSHost;
#endif

#ifndef _REWRITER_typedef_NSInputStream
#define _REWRITER_typedef_NSInputStream
typedef struct objc_object NSInputStream;
typedef struct {} _objc_exc_NSInputStream;
#endif

#ifndef _REWRITER_typedef_NSOutputStream
#define _REWRITER_typedef_NSOutputStream
typedef struct objc_object NSOutputStream;
typedef struct {} _objc_exc_NSOutputStream;
#endif

#ifndef _REWRITER_typedef_NSRunLoop
#define _REWRITER_typedef_NSRunLoop
typedef struct objc_object NSRunLoop;
typedef struct {} _objc_exc_NSRunLoop;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSURL
#define _REWRITER_typedef_NSURL
typedef struct objc_object NSURL;
typedef struct {} _objc_exc_NSURL;
#endif

// @protocol NSStreamDelegate;

typedef NSString * NSStreamPropertyKey __attribute__((swift_wrapper(struct)));

#pragma clang assume_nonnull begin

typedef NSUInteger NSStreamStatus; enum {
    NSStreamStatusNotOpen = 0,
    NSStreamStatusOpening = 1,
    NSStreamStatusOpen = 2,
    NSStreamStatusReading = 3,
    NSStreamStatusWriting = 4,
    NSStreamStatusAtEnd = 5,
    NSStreamStatusClosed = 6,
    NSStreamStatusError = 7
};

typedef NSUInteger NSStreamEvent; enum {
    NSStreamEventNone = 0,
    NSStreamEventOpenCompleted = 1UL << 0,
    NSStreamEventHasBytesAvailable = 1UL << 1,
    NSStreamEventHasSpaceAvailable = 1UL << 2,
    NSStreamEventErrorOccurred = 1UL << 3,
    NSStreamEventEndEncountered = 1UL << 4
};




#ifndef _REWRITER_typedef_NSStream
#define _REWRITER_typedef_NSStream
typedef struct objc_object NSStream;
typedef struct {} _objc_exc_NSStream;
#endif

struct NSStream_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};

// - (void)open;
// - (void)close;

// @property (nullable, assign) id <NSStreamDelegate> delegate;


// - (nullable id)propertyForKey:(NSStreamPropertyKey)key;
// - (BOOL)setProperty:(nullable id)property forKey:(NSStreamPropertyKey)key;

// - (void)scheduleInRunLoop:(NSRunLoop *)aRunLoop forMode:(NSRunLoopMode)mode;
// - (void)removeFromRunLoop:(NSRunLoop *)aRunLoop forMode:(NSRunLoopMode)mode;

// @property (readonly) NSStreamStatus streamStatus;
// @property (nullable, readonly, copy) NSError *streamError;
/* @end */





#ifndef _REWRITER_typedef_NSInputStream
#define _REWRITER_typedef_NSInputStream
typedef struct objc_object NSInputStream;
typedef struct {} _objc_exc_NSInputStream;
#endif

struct NSInputStream_IMPL {
	struct NSStream_IMPL NSStream_IVARS;
};

// - (NSInteger)read:(uint8_t *)buffer maxLength:(NSUInteger)len;


// - (BOOL)getBuffer:(uint8_t * _Nullable * _Nonnull)buffer length:(NSUInteger *)len;


// @property (readonly) BOOL hasBytesAvailable;


// - (instancetype)initWithData:(NSData *)data __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithURL:(NSURL *)url __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((objc_designated_initializer));

/* @end */





#ifndef _REWRITER_typedef_NSOutputStream
#define _REWRITER_typedef_NSOutputStream
typedef struct objc_object NSOutputStream;
typedef struct {} _objc_exc_NSOutputStream;
#endif

struct NSOutputStream_IMPL {
	struct NSStream_IMPL NSStream_IVARS;
};

// - (NSInteger)write:(const uint8_t *)buffer maxLength:(NSUInteger)len;


// @property (readonly) BOOL hasSpaceAvailable;


// - (instancetype)initToMemory __attribute__((objc_designated_initializer));
// - (instancetype)initToBuffer:(uint8_t *)buffer capacity:(NSUInteger)capacity __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithURL:(NSURL *)url append:(BOOL)shouldAppend __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((objc_designated_initializer));

/* @end */



// @interface NSStream (NSSocketStreamCreationExtensions)

// + (void)getStreamsToHostWithName:(NSString *)hostname port:(NSInteger)port inputStream:(NSInputStream * _Nullable * _Nullable)inputStream outputStream:(NSOutputStream * _Nullable * _Nullable)outputStream __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,unavailable)));





/* @end */


// @interface NSStream (NSStreamBoundPairCreationExtensions)
// + (void)getBoundStreamsWithBufferSize:(NSUInteger)bufferSize inputStream:(NSInputStream * _Nullable * _Nullable)inputStream outputStream:(NSOutputStream * _Nullable * _Nullable)outputStream __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
/* @end */



// @interface NSInputStream (NSInputStreamExtensions)
// - (nullable instancetype)initWithFileAtPath:(NSString *)path;

// + (nullable instancetype)inputStreamWithData:(NSData *)data;
// + (nullable instancetype)inputStreamWithFileAtPath:(NSString *)path;
// + (nullable instancetype)inputStreamWithURL:(NSURL *)url __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
/* @end */



// @interface NSOutputStream (NSOutputStreamExtensions)
// - (nullable instancetype)initToFileAtPath:(NSString *)path append:(BOOL)shouldAppend;

// + (instancetype)outputStreamToMemory;
// + (instancetype)outputStreamToBuffer:(uint8_t *)buffer capacity:(NSUInteger)capacity;
// + (instancetype)outputStreamToFileAtPath:(NSString *)path append:(BOOL)shouldAppend;
// + (nullable instancetype)outputStreamWithURL:(NSURL *)url append:(BOOL)shouldAppend __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
/* @end */


// @protocol NSStreamDelegate <NSObject>
/* @optional */
// - (void)stream:(NSStream *)aStream handleEvent:(NSStreamEvent)eventCode;
/* @end */




extern "C" NSStreamPropertyKey const NSStreamSocketSecurityLevelKey __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

typedef NSString * NSStreamSocketSecurityLevel __attribute__((swift_wrapper(enum)));

extern "C" NSStreamSocketSecurityLevel const NSStreamSocketSecurityLevelNone __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStreamSocketSecurityLevel const NSStreamSocketSecurityLevelSSLv2 __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStreamSocketSecurityLevel const NSStreamSocketSecurityLevelSSLv3 __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStreamSocketSecurityLevel const NSStreamSocketSecurityLevelTLSv1 __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStreamSocketSecurityLevel const NSStreamSocketSecurityLevelNegotiatedSSL __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern "C" NSStreamPropertyKey const NSStreamSOCKSProxyConfigurationKey __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

typedef NSString * NSStreamSOCKSProxyConfiguration __attribute__((swift_wrapper(enum)));

extern "C" NSStreamSOCKSProxyConfiguration const NSStreamSOCKSProxyHostKey __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern "C" NSStreamSOCKSProxyConfiguration const NSStreamSOCKSProxyPortKey __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern "C" NSStreamSOCKSProxyConfiguration const NSStreamSOCKSProxyVersionKey __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern "C" NSStreamSOCKSProxyConfiguration const NSStreamSOCKSProxyUserKey __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern "C" NSStreamSOCKSProxyConfiguration const NSStreamSOCKSProxyPasswordKey __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


typedef NSString * NSStreamSOCKSProxyVersion __attribute__((swift_wrapper(enum)));

extern "C" NSStreamSOCKSProxyVersion const NSStreamSOCKSProxyVersion4 __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern "C" NSStreamSOCKSProxyVersion const NSStreamSOCKSProxyVersion5 __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern "C" NSStreamPropertyKey const NSStreamDataWrittenToMemoryStreamKey __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern "C" NSStreamPropertyKey const NSStreamFileCurrentOffsetKey __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern "C" NSErrorDomain const NSStreamSocketSSLErrorDomain __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern "C" NSErrorDomain const NSStreamSOCKSErrorDomain __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






extern "C" NSStreamPropertyKey const NSStreamNetworkServiceType __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

typedef NSString * NSStreamNetworkServiceTypeValue __attribute__((swift_wrapper(enum)));


extern "C" NSStreamNetworkServiceTypeValue const NSStreamNetworkServiceTypeVoIP __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStreamNetworkServiceTypeValue const NSStreamNetworkServiceTypeVideo __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStreamNetworkServiceTypeValue const NSStreamNetworkServiceTypeBackground __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStreamNetworkServiceTypeValue const NSStreamNetworkServiceTypeVoice __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSStreamNetworkServiceTypeValue const NSStreamNetworkServiceTypeCallSignaling __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
#pragma clang assume_nonnull end










// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSMutableDictionary
#define _REWRITER_typedef_NSMutableDictionary
typedef struct objc_object NSMutableDictionary;
typedef struct {} _objc_exc_NSMutableDictionary;
#endif

#ifndef _REWRITER_typedef_NSDate
#define _REWRITER_typedef_NSDate
typedef struct objc_object NSDate;
typedef struct {} _objc_exc_NSDate;
#endif

#ifndef _REWRITER_typedef_NSNumber
#define _REWRITER_typedef_NSNumber
typedef struct objc_object NSNumber;
typedef struct {} _objc_exc_NSNumber;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif


#pragma clang assume_nonnull begin


#ifndef _REWRITER_typedef_NSThread
#define _REWRITER_typedef_NSThread
typedef struct objc_object NSThread;
typedef struct {} _objc_exc_NSThread;
#endif

struct NSThread_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	__strong id _private;
	uint8_t _bytes[44];
};


@property (class, readonly, strong) NSThread *currentThread;

// + (void)detachNewThreadWithBlock:(void (^)(void))block __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
// + (void)detachNewThreadSelector:(SEL)selector toTarget:(id)target withObject:(nullable id)argument;

// + (BOOL)isMultiThreaded;

// @property (readonly, retain) NSMutableDictionary *threadDictionary;

// + (void)sleepUntilDate:(NSDate *)date;
// + (void)sleepForTimeInterval:(NSTimeInterval)ti;

// + (void)exit;

// + (double)threadPriority;
// + (BOOL)setThreadPriority:(double)p;

// @property double threadPriority __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property NSQualityOfService qualityOfService __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

@property (class, readonly, copy) NSArray<NSNumber *> *callStackReturnAddresses __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
@property (class, readonly, copy) NSArray<NSString *> *callStackSymbols __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (nullable, copy) NSString *name __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property NSUInteger stackSize __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (readonly) BOOL isMainThread __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
@property (class, readonly) BOOL isMainThread __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
@property (class, readonly, strong) NSThread *mainThread __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (instancetype)init __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((objc_designated_initializer));
// - (instancetype)initWithTarget:(id)target selector:(SEL)selector object:(nullable id)argument __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (instancetype)initWithBlock:(void (^)(void))block __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

// @property (readonly, getter=isExecuting) BOOL executing __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, getter=isFinished) BOOL finished __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, getter=isCancelled) BOOL cancelled __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (void)cancel __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (void)start __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (void)main __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */


extern "C" NSNotificationName const NSWillBecomeMultiThreadedNotification;
extern "C" NSNotificationName const NSDidBecomeSingleThreadedNotification;
extern "C" NSNotificationName const NSThreadWillExitNotification;

// @interface NSObject (NSThreadPerformAdditions)

// - (void)performSelectorOnMainThread:(SEL)aSelector withObject:(nullable id)arg waitUntilDone:(BOOL)wait modes:(nullable NSArray<NSString *> *)array;
// - (void)performSelectorOnMainThread:(SEL)aSelector withObject:(nullable id)arg waitUntilDone:(BOOL)wait;


// - (void)performSelector:(SEL)aSelector onThread:(NSThread *)thr withObject:(nullable id)arg waitUntilDone:(BOOL)wait modes:(nullable NSArray<NSString *> *)array __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)performSelector:(SEL)aSelector onThread:(NSThread *)thr withObject:(nullable id)arg waitUntilDone:(BOOL)wait __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (void)performSelectorInBackground:(SEL)aSelector withObject:(nullable id)arg __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */

#pragma clang assume_nonnull end








// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

#ifndef _REWRITER_typedef_NSDate
#define _REWRITER_typedef_NSDate
typedef struct objc_object NSDate;
typedef struct {} _objc_exc_NSDate;
#endif

#ifndef _REWRITER_typedef_NSData
#define _REWRITER_typedef_NSData
typedef struct objc_object NSData;
typedef struct {} _objc_exc_NSData;
#endif

#ifndef _REWRITER_typedef_NSLocale
#define _REWRITER_typedef_NSLocale
typedef struct objc_object NSLocale;
typedef struct {} _objc_exc_NSLocale;
#endif


#pragma clang assume_nonnull begin


#ifndef _REWRITER_typedef_NSTimeZone
#define _REWRITER_typedef_NSTimeZone
typedef struct objc_object NSTimeZone;
typedef struct {} _objc_exc_NSTimeZone;
#endif

struct NSTimeZone_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property (readonly, copy) NSString *name;
// @property (readonly, copy) NSData *data;

// - (NSInteger)secondsFromGMTForDate:(NSDate *)aDate;
// - (nullable NSString *)abbreviationForDate:(NSDate *)aDate;
// - (BOOL)isDaylightSavingTimeForDate:(NSDate *)aDate;
// - (NSTimeInterval)daylightSavingTimeOffsetForDate:(NSDate *)aDate __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (nullable NSDate *)nextDaylightSavingTimeTransitionAfterDate:(NSDate *)aDate __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */


// @interface NSTimeZone (NSExtendedTimeZone)

@property (class, readonly, copy) NSTimeZone *systemTimeZone;
// + (void)resetSystemTimeZone;

@property (class, copy) NSTimeZone *defaultTimeZone;

@property (class, readonly, copy) NSTimeZone *localTimeZone;

@property (class, readonly, copy) NSArray<NSString *> *knownTimeZoneNames;

@property (class, copy) NSDictionary<NSString *, NSString *> *abbreviationDictionary __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// + (NSDictionary<NSString *, NSString *> *)abbreviationDictionary;

@property (class, readonly, copy) NSString *timeZoneDataVersion __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (readonly) NSInteger secondsFromGMT;
// @property (nullable, readonly, copy) NSString *abbreviation;
// @property (readonly, getter=isDaylightSavingTime) BOOL daylightSavingTime;
// @property (readonly) NSTimeInterval daylightSavingTimeOffset __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (nullable, readonly, copy) NSDate *nextDaylightSavingTimeTransition __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (readonly, copy) NSString *description;

// - (BOOL)isEqualToTimeZone:(NSTimeZone *)aTimeZone;

typedef NSInteger NSTimeZoneNameStyle; enum {
 NSTimeZoneNameStyleStandard,
 NSTimeZoneNameStyleShortStandard,
 NSTimeZoneNameStyleDaylightSaving,
 NSTimeZoneNameStyleShortDaylightSaving,
 NSTimeZoneNameStyleGeneric,
 NSTimeZoneNameStyleShortGeneric
};

// - (nullable NSString *)localizedName:(NSTimeZoneNameStyle)style locale:(nullable NSLocale *)locale __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */


// @interface NSTimeZone (NSTimeZoneCreation)




// + (nullable instancetype)timeZoneWithName:(NSString *)tzName;
// + (nullable instancetype)timeZoneWithName:(NSString *)tzName data:(nullable NSData *)aData;

// - (nullable instancetype)initWithName:(NSString *)tzName;
// - (nullable instancetype)initWithName:(NSString *)tzName data:(nullable NSData *)aData;




// + (instancetype)timeZoneForSecondsFromGMT:(NSInteger)seconds;

// + (nullable instancetype)timeZoneWithAbbreviation:(NSString *)abbreviation;

/* @end */


extern "C" NSNotificationName const NSSystemTimeZoneDidChangeNotification __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
#pragma clang assume_nonnull end







#pragma clang assume_nonnull begin


#ifndef _REWRITER_typedef_NSTimer
#define _REWRITER_typedef_NSTimer
typedef struct objc_object NSTimer;
typedef struct {} _objc_exc_NSTimer;
#endif

struct NSTimer_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// + (NSTimer *)timerWithTimeInterval:(NSTimeInterval)ti invocation:(NSInvocation *)invocation repeats:(BOOL)yesOrNo;
// + (NSTimer *)scheduledTimerWithTimeInterval:(NSTimeInterval)ti invocation:(NSInvocation *)invocation repeats:(BOOL)yesOrNo;

// + (NSTimer *)timerWithTimeInterval:(NSTimeInterval)ti target:(id)aTarget selector:(SEL)aSelector userInfo:(nullable id)userInfo repeats:(BOOL)yesOrNo;
// + (NSTimer *)scheduledTimerWithTimeInterval:(NSTimeInterval)ti target:(id)aTarget selector:(SEL)aSelector userInfo:(nullable id)userInfo repeats:(BOOL)yesOrNo;






// + (NSTimer *)timerWithTimeInterval:(NSTimeInterval)interval repeats:(BOOL)repeats block:(void (^)(NSTimer *timer))block __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));





// + (NSTimer *)scheduledTimerWithTimeInterval:(NSTimeInterval)interval repeats:(BOOL)repeats block:(void (^)(NSTimer *timer))block __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));






// - (instancetype)initWithFireDate:(NSDate *)date interval:(NSTimeInterval)interval repeats:(BOOL)repeats block:(void (^)(NSTimer *timer))block __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

// - (instancetype)initWithFireDate:(NSDate *)date interval:(NSTimeInterval)ti target:(id)t selector:(SEL)s userInfo:(nullable id)ui repeats:(BOOL)rep __attribute__((objc_designated_initializer));

// - (void)fire;

// @property (copy) NSDate *fireDate;
// @property (readonly) NSTimeInterval timeInterval;



// @property NSTimeInterval tolerance __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (void)invalidate;
// @property (readonly, getter=isValid) BOOL valid;

// @property (nullable, readonly, retain) id userInfo;

/* @end */

#pragma clang assume_nonnull end


// @class NSURLAuthenticationChallenge;
#ifndef _REWRITER_typedef_NSURLAuthenticationChallenge
#define _REWRITER_typedef_NSURLAuthenticationChallenge
typedef struct objc_object NSURLAuthenticationChallenge;
typedef struct {} _objc_exc_NSURLAuthenticationChallenge;
#endif

// @class NSURLCredential;
#ifndef _REWRITER_typedef_NSURLCredential
#define _REWRITER_typedef_NSURLCredential
typedef struct objc_object NSURLCredential;
typedef struct {} _objc_exc_NSURLCredential;
#endif

// @class NSURLProtectionSpace;
#ifndef _REWRITER_typedef_NSURLProtectionSpace
#define _REWRITER_typedef_NSURLProtectionSpace
typedef struct objc_object NSURLProtectionSpace;
typedef struct {} _objc_exc_NSURLProtectionSpace;
#endif

// @class NSURLResponse;
#ifndef _REWRITER_typedef_NSURLResponse
#define _REWRITER_typedef_NSURLResponse
typedef struct objc_object NSURLResponse;
typedef struct {} _objc_exc_NSURLResponse;
#endif

// @class NSError;
#ifndef _REWRITER_typedef_NSError
#define _REWRITER_typedef_NSError
typedef struct objc_object NSError;
typedef struct {} _objc_exc_NSError;
#endif


#pragma clang assume_nonnull begin
// @protocol NSURLAuthenticationChallengeSender <NSObject>




// - (void)useCredential:(NSURLCredential *)credential forAuthenticationChallenge:(NSURLAuthenticationChallenge *)challenge;




// - (void)continueWithoutCredentialForAuthenticationChallenge:(NSURLAuthenticationChallenge *)challenge;




// - (void)cancelAuthenticationChallenge:(NSURLAuthenticationChallenge *)challenge;

/* @optional */



// - (void)performDefaultHandlingForAuthenticationChallenge:(NSURLAuthenticationChallenge *)challenge;




// - (void)rejectProtectionSpaceAndContinueWithChallenge:(NSURLAuthenticationChallenge *)challenge;

/* @end */


// @class NSURLAuthenticationChallengeInternal;
#ifndef _REWRITER_typedef_NSURLAuthenticationChallengeInternal
#define _REWRITER_typedef_NSURLAuthenticationChallengeInternal
typedef struct objc_object NSURLAuthenticationChallengeInternal;
typedef struct {} _objc_exc_NSURLAuthenticationChallengeInternal;
#endif


#ifndef _REWRITER_typedef_NSURLAuthenticationChallenge
#define _REWRITER_typedef_NSURLAuthenticationChallenge
typedef struct objc_object NSURLAuthenticationChallenge;
typedef struct {} _objc_exc_NSURLAuthenticationChallenge;
#endif

struct NSURLAuthenticationChallenge_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSURLAuthenticationChallengeInternal *__strong _internal;
};

// - (instancetype)initWithProtectionSpace:(NSURLProtectionSpace *)space proposedCredential:(nullable NSURLCredential *)credential previousFailureCount:(NSInteger)previousFailureCount failureResponse:(nullable NSURLResponse *)response error:(nullable NSError *)error sender:(id<NSURLAuthenticationChallengeSender>)sender;
// - (instancetype)initWithAuthenticationChallenge:(NSURLAuthenticationChallenge *)challenge sender:(id<NSURLAuthenticationChallengeSender>)sender;





// @property (readonly, copy) NSURLProtectionSpace *protectionSpace;
// @property (nullable, readonly, copy) NSURLCredential *proposedCredential;





// @property (readonly) NSInteger previousFailureCount;
// @property (nullable, readonly, copy) NSURLResponse *failureResponse;
// @property (nullable, readonly, copy) NSError *error;






// @property (nullable, readonly, retain) id<NSURLAuthenticationChallengeSender> sender;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin
typedef NSUInteger NSURLCacheStoragePolicy; enum
{
    NSURLCacheStorageAllowed,
    NSURLCacheStorageAllowedInMemoryOnly,
    NSURLCacheStorageNotAllowed,
};


// @class NSCachedURLResponseInternal;
#ifndef _REWRITER_typedef_NSCachedURLResponseInternal
#define _REWRITER_typedef_NSCachedURLResponseInternal
typedef struct objc_object NSCachedURLResponseInternal;
typedef struct {} _objc_exc_NSCachedURLResponseInternal;
#endif

// @class NSData;
#ifndef _REWRITER_typedef_NSData
#define _REWRITER_typedef_NSData
typedef struct objc_object NSData;
typedef struct {} _objc_exc_NSData;
#endif

// @class NSDictionary;
#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

// @class NSURLRequest;
#ifndef _REWRITER_typedef_NSURLRequest
#define _REWRITER_typedef_NSURLRequest
typedef struct objc_object NSURLRequest;
typedef struct {} _objc_exc_NSURLRequest;
#endif

// @class NSURLResponse;
#ifndef _REWRITER_typedef_NSURLResponse
#define _REWRITER_typedef_NSURLResponse
typedef struct objc_object NSURLResponse;
typedef struct {} _objc_exc_NSURLResponse;
#endif

// @class NSDate;
#ifndef _REWRITER_typedef_NSDate
#define _REWRITER_typedef_NSDate
typedef struct objc_object NSDate;
typedef struct {} _objc_exc_NSDate;
#endif

// @class NSURLSessionDataTask;
#ifndef _REWRITER_typedef_NSURLSessionDataTask
#define _REWRITER_typedef_NSURLSessionDataTask
typedef struct objc_object NSURLSessionDataTask;
typedef struct {} _objc_exc_NSURLSessionDataTask;
#endif


#ifndef _REWRITER_typedef_NSCachedURLResponse
#define _REWRITER_typedef_NSCachedURLResponse
typedef struct objc_object NSCachedURLResponse;
typedef struct {} _objc_exc_NSCachedURLResponse;
#endif

struct NSCachedURLResponse_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSCachedURLResponseInternal *__strong _internal;
};

// - (instancetype)initWithResponse:(NSURLResponse *)response data:(NSData *)data;
// - (instancetype)initWithResponse:(NSURLResponse *)response data:(NSData *)data userInfo:(nullable NSDictionary *)userInfo storagePolicy:(NSURLCacheStoragePolicy)storagePolicy;





// @property (readonly, copy) NSURLResponse *response;





// @property (readonly, copy) NSData *data;





// @property (nullable, readonly, copy) NSDictionary *userInfo;





// @property (readonly) NSURLCacheStoragePolicy storagePolicy;

/* @end */



// @class NSURLRequest;
#ifndef _REWRITER_typedef_NSURLRequest
#define _REWRITER_typedef_NSURLRequest
typedef struct objc_object NSURLRequest;
typedef struct {} _objc_exc_NSURLRequest;
#endif

// @class NSURLCacheInternal;
#ifndef _REWRITER_typedef_NSURLCacheInternal
#define _REWRITER_typedef_NSURLCacheInternal
typedef struct objc_object NSURLCacheInternal;
typedef struct {} _objc_exc_NSURLCacheInternal;
#endif



#ifndef _REWRITER_typedef_NSURLCache
#define _REWRITER_typedef_NSURLCache
typedef struct objc_object NSURLCache;
typedef struct {} _objc_exc_NSURLCache;
#endif

struct NSURLCache_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSURLCacheInternal *__strong _internal;
};

@property (class, strong) NSURLCache *sharedURLCache;
// - (instancetype)initWithMemoryCapacity:(NSUInteger)memoryCapacity diskCapacity:(NSUInteger)diskCapacity diskPath:(nullable NSString *)path;
// - (nullable NSCachedURLResponse *)cachedResponseForRequest:(NSURLRequest *)request;
// - (void)storeCachedResponse:(NSCachedURLResponse *)cachedResponse forRequest:(NSURLRequest *)request;
// - (void)removeCachedResponseForRequest:(NSURLRequest *)request;






// - (void)removeAllCachedResponses;





// - (void)removeCachedResponsesSinceDate:(NSDate *)date __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






// @property NSUInteger memoryCapacity;





// @property NSUInteger diskCapacity;
// @property (readonly) NSUInteger currentMemoryUsage;
// @property (readonly) NSUInteger currentDiskUsage;

/* @end */


// @interface NSURLCache (NSURLSessionTaskAdditions)
// - (void)storeCachedResponse:(NSCachedURLResponse *)cachedResponse forDataTask:(NSURLSessionDataTask *)dataTask __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)getCachedResponseForDataTask:(NSURLSessionDataTask *)dataTask completionHandler:(void (^) (NSCachedURLResponse * _Nullable cachedResponse))completionHandler __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)removeCachedResponseForDataTask:(NSURLSessionDataTask *)dataTask __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
/* @end */

#pragma clang assume_nonnull end
// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

// @class NSURL;
#ifndef _REWRITER_typedef_NSURL
#define _REWRITER_typedef_NSURL
typedef struct objc_object NSURL;
typedef struct {} _objc_exc_NSURL;
#endif

// @class NSCachedURLResponse;
#ifndef _REWRITER_typedef_NSCachedURLResponse
#define _REWRITER_typedef_NSCachedURLResponse
typedef struct objc_object NSCachedURLResponse;
typedef struct {} _objc_exc_NSCachedURLResponse;
#endif

// @class NSData;
#ifndef _REWRITER_typedef_NSData
#define _REWRITER_typedef_NSData
typedef struct objc_object NSData;
typedef struct {} _objc_exc_NSData;
#endif

// @class NSError;
#ifndef _REWRITER_typedef_NSError
#define _REWRITER_typedef_NSError
typedef struct objc_object NSError;
typedef struct {} _objc_exc_NSError;
#endif

// @class NSURLAuthenticationChallenge;
#ifndef _REWRITER_typedef_NSURLAuthenticationChallenge
#define _REWRITER_typedef_NSURLAuthenticationChallenge
typedef struct objc_object NSURLAuthenticationChallenge;
typedef struct {} _objc_exc_NSURLAuthenticationChallenge;
#endif

// @class NSURLConnectionInternal;
#ifndef _REWRITER_typedef_NSURLConnectionInternal
#define _REWRITER_typedef_NSURLConnectionInternal
typedef struct objc_object NSURLConnectionInternal;
typedef struct {} _objc_exc_NSURLConnectionInternal;
#endif

// @class NSURLRequest;
#ifndef _REWRITER_typedef_NSURLRequest
#define _REWRITER_typedef_NSURLRequest
typedef struct objc_object NSURLRequest;
typedef struct {} _objc_exc_NSURLRequest;
#endif

// @class NSURLResponse;
#ifndef _REWRITER_typedef_NSURLResponse
#define _REWRITER_typedef_NSURLResponse
typedef struct objc_object NSURLResponse;
typedef struct {} _objc_exc_NSURLResponse;
#endif

// @class NSRunLoop;
#ifndef _REWRITER_typedef_NSRunLoop
#define _REWRITER_typedef_NSRunLoop
typedef struct objc_object NSRunLoop;
typedef struct {} _objc_exc_NSRunLoop;
#endif

// @class NSInputStream;
#ifndef _REWRITER_typedef_NSInputStream
#define _REWRITER_typedef_NSInputStream
typedef struct objc_object NSInputStream;
typedef struct {} _objc_exc_NSInputStream;
#endif

// @class NSURLProtectionSpace;
#ifndef _REWRITER_typedef_NSURLProtectionSpace
#define _REWRITER_typedef_NSURLProtectionSpace
typedef struct objc_object NSURLProtectionSpace;
typedef struct {} _objc_exc_NSURLProtectionSpace;
#endif

// @class NSOperationQueue;
#ifndef _REWRITER_typedef_NSOperationQueue
#define _REWRITER_typedef_NSOperationQueue
typedef struct objc_object NSOperationQueue;
typedef struct {} _objc_exc_NSOperationQueue;
#endif


// @protocol NSURLConnectionDelegate;

#pragma clang assume_nonnull begin

#ifndef _REWRITER_typedef_NSURLConnection
#define _REWRITER_typedef_NSURLConnection
typedef struct objc_object NSURLConnection;
typedef struct {} _objc_exc_NSURLConnection;
#endif

struct NSURLConnection_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSURLConnectionInternal *__strong _internal;
};



// - (nullable instancetype)initWithRequest:(NSURLRequest *)request delegate:(nullable id)delegate startImmediately:(BOOL)startImmediately __attribute__((availability(macos,introduced=10.5,deprecated=10.11,message="Use NSURLSession (see NSURLSession.h)"))) __attribute__((availability(ios,introduced=2.0,deprecated=9.0,message="Use NSURLSession (see NSURLSession.h)"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use NSURLSession (see NSURLSession.h)"))) __attribute__((availability(watchos,unavailable)));

// - (nullable instancetype)initWithRequest:(NSURLRequest *)request delegate:(nullable id)delegate __attribute__((availability(macos,introduced=10.3,deprecated=10.11,message="Use NSURLSession (see NSURLSession.h)"))) __attribute__((availability(ios,introduced=2.0,deprecated=9.0,message="Use NSURLSession (see NSURLSession.h)"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use NSURLSession (see NSURLSession.h)"))) __attribute__((availability(watchos,unavailable)));
// + (nullable NSURLConnection*)connectionWithRequest:(NSURLRequest *)request delegate:(nullable id)delegate __attribute__((availability(macos,introduced=10.3,deprecated=10.11,message="Use NSURLSession (see NSURLSession.h)"))) __attribute__((availability(ios,introduced=2.0,deprecated=9.0,message="Use NSURLSession (see NSURLSession.h)"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use NSURLSession (see NSURLSession.h)"))) __attribute__((availability(watchos,unavailable)));

// @property (readonly, copy) NSURLRequest *originalRequest __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, copy) NSURLRequest *currentRequest __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (void)start __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)cancel;

// - (void)scheduleInRunLoop:(NSRunLoop *)aRunLoop forMode:(NSRunLoopMode)mode __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)unscheduleFromRunLoop:(NSRunLoop *)aRunLoop forMode:(NSRunLoopMode)mode __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)setDelegateQueue:(nullable NSOperationQueue*) queue __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (BOOL)canHandleRequest:(NSURLRequest *)request;

/* @end */

// @protocol NSURLConnectionDelegate <NSObject>
/* @optional */
// - (void)connection:(NSURLConnection *)connection didFailWithError:(NSError *)error;
// - (BOOL)connectionShouldUseCredentialStorage:(NSURLConnection *)connection;
// - (void)connection:(NSURLConnection *)connection willSendRequestForAuthenticationChallenge:(NSURLAuthenticationChallenge *)challenge;
// - (BOOL)connection:(NSURLConnection *)connection canAuthenticateAgainstProtectionSpace:(NSURLProtectionSpace *)protectionSpace __attribute__((availability(macos,introduced=10.6,deprecated=10.10,message="Use -connection:willSendRequestForAuthenticationChallenge: instead."))) __attribute__((availability(ios,introduced=3.0,deprecated=8.0,message="Use -connection:willSendRequestForAuthenticationChallenge: instead."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -connection:willSendRequestForAuthenticationChallenge: instead."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -connection:willSendRequestForAuthenticationChallenge: instead.")));
// - (void)connection:(NSURLConnection *)connection didReceiveAuthenticationChallenge:(NSURLAuthenticationChallenge *)challenge __attribute__((availability(macos,introduced=10.2,deprecated=10.10,message="Use -connection:willSendRequestForAuthenticationChallenge: instead."))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,message="Use -connection:willSendRequestForAuthenticationChallenge: instead."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -connection:willSendRequestForAuthenticationChallenge: instead."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -connection:willSendRequestForAuthenticationChallenge: instead.")));
// - (void)connection:(NSURLConnection *)connection didCancelAuthenticationChallenge:(NSURLAuthenticationChallenge *)challenge __attribute__((availability(macos,introduced=10.2,deprecated=10.10,message="Use -connection:willSendRequestForAuthenticationChallenge: instead."))) __attribute__((availability(ios,introduced=2.0,deprecated=8.0,message="Use -connection:willSendRequestForAuthenticationChallenge: instead."))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -connection:willSendRequestForAuthenticationChallenge: instead."))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -connection:willSendRequestForAuthenticationChallenge: instead.")));
/* @end */

// @protocol NSURLConnectionDataDelegate <NSURLConnectionDelegate>
/* @optional */
// - (nullable NSURLRequest *)connection:(NSURLConnection *)connection willSendRequest:(NSURLRequest *)request redirectResponse:(nullable NSURLResponse *)response;
// - (void)connection:(NSURLConnection *)connection didReceiveResponse:(NSURLResponse *)response;

// - (void)connection:(NSURLConnection *)connection didReceiveData:(NSData *)data;

// - (nullable NSInputStream *)connection:(NSURLConnection *)connection needNewBodyStream:(NSURLRequest *)request;
#if 0
- (void)connection:(NSURLConnection *)connection didSendBodyData:(NSInteger)bytesWritten
                                                 totalBytesWritten:(NSInteger)totalBytesWritten
                                         totalBytesExpectedToWrite:(NSInteger)totalBytesExpectedToWrite;
#endif


// - (nullable NSCachedURLResponse *)connection:(NSURLConnection *)connection willCacheResponse:(NSCachedURLResponse *)cachedResponse;

// - (void)connectionDidFinishLoading:(NSURLConnection *)connection;
/* @end */

// @protocol NSURLConnectionDownloadDelegate <NSURLConnectionDelegate>
/* @optional */
// - (void)connection:(NSURLConnection *)connection didWriteData:(long long)bytesWritten totalBytesWritten:(long long)totalBytesWritten expectedTotalBytes:(long long) expectedTotalBytes;
// - (void)connectionDidResumeDownloading:(NSURLConnection *)connection totalBytesWritten:(long long)totalBytesWritten expectedTotalBytes:(long long) expectedTotalBytes;

/* @required */
// - (void)connectionDidFinishDownloading:(NSURLConnection *)connection destinationURL:(NSURL *) destinationURL;
/* @end */

// @interface NSURLConnection (NSURLConnectionSynchronousLoading)
// + (nullable NSData *)sendSynchronousRequest:(NSURLRequest *)request returningResponse:(NSURLResponse * _Nullable * _Nullable)response error:(NSError **)error __attribute__((availability(macos,introduced=10.3,deprecated=10.11,message="Use [NSURLSession dataTaskWithRequest:completionHandler:] (see NSURLSession.h"))) __attribute__((availability(ios,introduced=2.0,deprecated=9.0,message="Use [NSURLSession dataTaskWithRequest:completionHandler:] (see NSURLSession.h"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use [NSURLSession dataTaskWithRequest:completionHandler:] (see NSURLSession.h"))) __attribute__((availability(watchos,unavailable)));

/* @end */

// @interface NSURLConnection (NSURLConnectionQueuedLoading)
#if 0
+ (void)sendAsynchronousRequest:(NSURLRequest*) request
                          queue:(NSOperationQueue*) queue
              completionHandler:(void (^)(NSURLResponse* _Nullable response, NSData* _Nullable data, NSError* _Nullable connectionError)) handler __attribute__((availability(macos,introduced=10.7,deprecated=10.11,message="Use [NSURLSession dataTaskWithRequest:completionHandler:] (see NSURLSession.h"))) __attribute__((availability(ios,introduced=5.0,deprecated=9.0,message="Use [NSURLSession dataTaskWithRequest:completionHandler:] (see NSURLSession.h"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use [NSURLSession dataTaskWithRequest:completionHandler:] (see NSURLSession.h"))) __attribute__((availability(watchos,unavailable)));
#endif


/* @end */

#pragma clang assume_nonnull end








extern "C" {

#pragma clang assume_nonnull begin
typedef struct __attribute__((objc_bridge(id))) __SecCertificate *SecCertificateRef;







typedef struct __attribute__((objc_bridge(id))) __SecIdentity *SecIdentityRef;






typedef struct __attribute__((objc_bridge(id))) __SecKey *SecKeyRef;






typedef struct __attribute__((objc_bridge(id))) __SecPolicy *SecPolicyRef;






typedef struct __attribute__((objc_bridge(id))) __SecAccessControl *SecAccessControlRef;
_Nullable
CFStringRef SecCopyErrorMessageString(OSStatus status, void * _Nullable reserved)
    __attribute__((availability(ios,introduced=11.3)));
enum
{
    errSecSuccess = 0,
    errSecUnimplemented = -4,
    errSecDiskFull = -34,
    errSecDskFull = -34,
    errSecIO = -36,
    errSecOpWr = -49,
    errSecParam = -50,
    errSecWrPerm = -61,
    errSecAllocate = -108,
    errSecUserCanceled = -128,
    errSecBadReq = -909,

    errSecInternalComponent = -2070,
    errSecCoreFoundationUnknown = -4960,

    errSecMissingEntitlement = -34018,

    errSecNotAvailable = -25291,
    errSecReadOnly = -25292,
    errSecAuthFailed = -25293,
    errSecNoSuchKeychain = -25294,
    errSecInvalidKeychain = -25295,
    errSecDuplicateKeychain = -25296,
    errSecDuplicateCallback = -25297,
    errSecInvalidCallback = -25298,
    errSecDuplicateItem = -25299,
    errSecItemNotFound = -25300,
    errSecBufferTooSmall = -25301,
    errSecDataTooLarge = -25302,
    errSecNoSuchAttr = -25303,
    errSecInvalidItemRef = -25304,
    errSecInvalidSearchRef = -25305,
    errSecNoSuchClass = -25306,
    errSecNoDefaultKeychain = -25307,
    errSecInteractionNotAllowed = -25308,
    errSecReadOnlyAttr = -25309,
    errSecWrongSecVersion = -25310,
    errSecKeySizeNotAllowed = -25311,
    errSecNoStorageModule = -25312,
    errSecNoCertificateModule = -25313,
    errSecNoPolicyModule = -25314,
    errSecInteractionRequired = -25315,
    errSecDataNotAvailable = -25316,
    errSecDataNotModifiable = -25317,
    errSecCreateChainFailed = -25318,
    errSecInvalidPrefsDomain = -25319,
    errSecInDarkWake = -25320,

    errSecACLNotSimple = -25240,
    errSecPolicyNotFound = -25241,
    errSecInvalidTrustSetting = -25242,
    errSecNoAccessForItem = -25243,
    errSecInvalidOwnerEdit = -25244,
    errSecTrustNotAvailable = -25245,
    errSecUnsupportedFormat = -25256,
    errSecUnknownFormat = -25257,
    errSecKeyIsSensitive = -25258,
    errSecMultiplePrivKeys = -25259,
    errSecPassphraseRequired = -25260,
    errSecInvalidPasswordRef = -25261,
    errSecInvalidTrustSettings = -25262,
    errSecNoTrustSettings = -25263,
    errSecPkcs12VerifyFailure = -25264,
    errSecNotSigner = -26267,

    errSecDecode = -26275,

    errSecServiceNotAvailable = -67585,
    errSecInsufficientClientID = -67586,
    errSecDeviceReset = -67587,
    errSecDeviceFailed = -67588,
    errSecAppleAddAppACLSubject = -67589,
    errSecApplePublicKeyIncomplete = -67590,
    errSecAppleSignatureMismatch = -67591,
    errSecAppleInvalidKeyStartDate = -67592,
    errSecAppleInvalidKeyEndDate = -67593,
    errSecConversionError = -67594,
    errSecAppleSSLv2Rollback = -67595,
    errSecQuotaExceeded = -67596,
    errSecFileTooBig = -67597,
    errSecInvalidDatabaseBlob = -67598,
    errSecInvalidKeyBlob = -67599,
    errSecIncompatibleDatabaseBlob = -67600,
    errSecIncompatibleKeyBlob = -67601,
    errSecHostNameMismatch = -67602,
    errSecUnknownCriticalExtensionFlag = -67603,
    errSecNoBasicConstraints = -67604,
    errSecNoBasicConstraintsCA = -67605,
    errSecInvalidAuthorityKeyID = -67606,
    errSecInvalidSubjectKeyID = -67607,
    errSecInvalidKeyUsageForPolicy = -67608,
    errSecInvalidExtendedKeyUsage = -67609,
    errSecInvalidIDLinkage = -67610,
    errSecPathLengthConstraintExceeded = -67611,
    errSecInvalidRoot = -67612,
    errSecCRLExpired = -67613,
    errSecCRLNotValidYet = -67614,
    errSecCRLNotFound = -67615,
    errSecCRLServerDown = -67616,
    errSecCRLBadURI = -67617,
    errSecUnknownCertExtension = -67618,
    errSecUnknownCRLExtension = -67619,
    errSecCRLNotTrusted = -67620,
    errSecCRLPolicyFailed = -67621,
    errSecIDPFailure = -67622,
    errSecSMIMEEmailAddressesNotFound = -67623,
    errSecSMIMEBadExtendedKeyUsage = -67624,
    errSecSMIMEBadKeyUsage = -67625,
    errSecSMIMEKeyUsageNotCritical = -67626,
    errSecSMIMENoEmailAddress = -67627,
    errSecSMIMESubjAltNameNotCritical = -67628,
    errSecSSLBadExtendedKeyUsage = -67629,
    errSecOCSPBadResponse = -67630,
    errSecOCSPBadRequest = -67631,
    errSecOCSPUnavailable = -67632,
    errSecOCSPStatusUnrecognized = -67633,
    errSecEndOfData = -67634,
    errSecIncompleteCertRevocationCheck = -67635,
    errSecNetworkFailure = -67636,
    errSecOCSPNotTrustedToAnchor = -67637,
    errSecRecordModified = -67638,
    errSecOCSPSignatureError = -67639,
    errSecOCSPNoSigner = -67640,
    errSecOCSPResponderMalformedReq = -67641,
    errSecOCSPResponderInternalError = -67642,
    errSecOCSPResponderTryLater = -67643,
    errSecOCSPResponderSignatureRequired = -67644,
    errSecOCSPResponderUnauthorized = -67645,
    errSecOCSPResponseNonceMismatch = -67646,
    errSecCodeSigningBadCertChainLength = -67647,
    errSecCodeSigningNoBasicConstraints = -67648,
    errSecCodeSigningBadPathLengthConstraint = -67649,
    errSecCodeSigningNoExtendedKeyUsage = -67650,
    errSecCodeSigningDevelopment = -67651,
    errSecResourceSignBadCertChainLength = -67652,
    errSecResourceSignBadExtKeyUsage = -67653,
    errSecTrustSettingDeny = -67654,
    errSecInvalidSubjectName = -67655,
    errSecUnknownQualifiedCertStatement = -67656,
    errSecMobileMeRequestQueued = -67657,
    errSecMobileMeRequestRedirected = -67658,
    errSecMobileMeServerError = -67659,
    errSecMobileMeServerNotAvailable = -67660,
    errSecMobileMeServerAlreadyExists = -67661,
    errSecMobileMeServerServiceErr = -67662,
    errSecMobileMeRequestAlreadyPending = -67663,
    errSecMobileMeNoRequestPending = -67664,
    errSecMobileMeCSRVerifyFailure = -67665,
    errSecMobileMeFailedConsistencyCheck = -67666,
    errSecNotInitialized = -67667,
    errSecInvalidHandleUsage = -67668,
    errSecPVCReferentNotFound = -67669,
    errSecFunctionIntegrityFail = -67670,
    errSecInternalError = -67671,
    errSecMemoryError = -67672,
    errSecInvalidData = -67673,
    errSecMDSError = -67674,
    errSecInvalidPointer = -67675,
    errSecSelfCheckFailed = -67676,
    errSecFunctionFailed = -67677,
    errSecModuleManifestVerifyFailed = -67678,
    errSecInvalidGUID = -67679,
    errSecInvalidHandle = -67680,
    errSecInvalidDBList = -67681,
    errSecInvalidPassthroughID = -67682,
    errSecInvalidNetworkAddress = -67683,
    errSecCRLAlreadySigned = -67684,
    errSecInvalidNumberOfFields = -67685,
    errSecVerificationFailure = -67686,
    errSecUnknownTag = -67687,
    errSecInvalidSignature = -67688,
    errSecInvalidName = -67689,
    errSecInvalidCertificateRef = -67690,
    errSecInvalidCertificateGroup = -67691,
    errSecTagNotFound = -67692,
    errSecInvalidQuery = -67693,
    errSecInvalidValue = -67694,
    errSecCallbackFailed = -67695,
    errSecACLDeleteFailed = -67696,
    errSecACLReplaceFailed = -67697,
    errSecACLAddFailed = -67698,
    errSecACLChangeFailed = -67699,
    errSecInvalidAccessCredentials = -67700,
    errSecInvalidRecord = -67701,
    errSecInvalidACL = -67702,
    errSecInvalidSampleValue = -67703,
    errSecIncompatibleVersion = -67704,
    errSecPrivilegeNotGranted = -67705,
    errSecInvalidScope = -67706,
    errSecPVCAlreadyConfigured = -67707,
    errSecInvalidPVC = -67708,
    errSecEMMLoadFailed = -67709,
    errSecEMMUnloadFailed = -67710,
    errSecAddinLoadFailed = -67711,
    errSecInvalidKeyRef = -67712,
    errSecInvalidKeyHierarchy = -67713,
    errSecAddinUnloadFailed = -67714,
    errSecLibraryReferenceNotFound = -67715,
    errSecInvalidAddinFunctionTable = -67716,
    errSecInvalidServiceMask = -67717,
    errSecModuleNotLoaded = -67718,
    errSecInvalidSubServiceID = -67719,
    errSecAttributeNotInContext = -67720,
    errSecModuleManagerInitializeFailed = -67721,
    errSecModuleManagerNotFound = -67722,
    errSecEventNotificationCallbackNotFound = -67723,
    errSecInputLengthError = -67724,
    errSecOutputLengthError = -67725,
    errSecPrivilegeNotSupported = -67726,
    errSecDeviceError = -67727,
    errSecAttachHandleBusy = -67728,
    errSecNotLoggedIn = -67729,
    errSecAlgorithmMismatch = -67730,
    errSecKeyUsageIncorrect = -67731,
    errSecKeyBlobTypeIncorrect = -67732,
    errSecKeyHeaderInconsistent = -67733,
    errSecUnsupportedKeyFormat = -67734,
    errSecUnsupportedKeySize = -67735,
    errSecInvalidKeyUsageMask = -67736,
    errSecUnsupportedKeyUsageMask = -67737,
    errSecInvalidKeyAttributeMask = -67738,
    errSecUnsupportedKeyAttributeMask = -67739,
    errSecInvalidKeyLabel = -67740,
    errSecUnsupportedKeyLabel = -67741,
    errSecInvalidKeyFormat = -67742,
    errSecUnsupportedVectorOfBuffers = -67743,
    errSecInvalidInputVector = -67744,
    errSecInvalidOutputVector = -67745,
    errSecInvalidContext = -67746,
    errSecInvalidAlgorithm = -67747,
    errSecInvalidAttributeKey = -67748,
    errSecMissingAttributeKey = -67749,
    errSecInvalidAttributeInitVector = -67750,
    errSecMissingAttributeInitVector = -67751,
    errSecInvalidAttributeSalt = -67752,
    errSecMissingAttributeSalt = -67753,
    errSecInvalidAttributePadding = -67754,
    errSecMissingAttributePadding = -67755,
    errSecInvalidAttributeRandom = -67756,
    errSecMissingAttributeRandom = -67757,
    errSecInvalidAttributeSeed = -67758,
    errSecMissingAttributeSeed = -67759,
    errSecInvalidAttributePassphrase = -67760,
    errSecMissingAttributePassphrase = -67761,
    errSecInvalidAttributeKeyLength = -67762,
    errSecMissingAttributeKeyLength = -67763,
    errSecInvalidAttributeBlockSize = -67764,
    errSecMissingAttributeBlockSize = -67765,
    errSecInvalidAttributeOutputSize = -67766,
    errSecMissingAttributeOutputSize = -67767,
    errSecInvalidAttributeRounds = -67768,
    errSecMissingAttributeRounds = -67769,
    errSecInvalidAlgorithmParms = -67770,
    errSecMissingAlgorithmParms = -67771,
    errSecInvalidAttributeLabel = -67772,
    errSecMissingAttributeLabel = -67773,
    errSecInvalidAttributeKeyType = -67774,
    errSecMissingAttributeKeyType = -67775,
    errSecInvalidAttributeMode = -67776,
    errSecMissingAttributeMode = -67777,
    errSecInvalidAttributeEffectiveBits = -67778,
    errSecMissingAttributeEffectiveBits = -67779,
    errSecInvalidAttributeStartDate = -67780,
    errSecMissingAttributeStartDate = -67781,
    errSecInvalidAttributeEndDate = -67782,
    errSecMissingAttributeEndDate = -67783,
    errSecInvalidAttributeVersion = -67784,
    errSecMissingAttributeVersion = -67785,
    errSecInvalidAttributePrime = -67786,
    errSecMissingAttributePrime = -67787,
    errSecInvalidAttributeBase = -67788,
    errSecMissingAttributeBase = -67789,
    errSecInvalidAttributeSubprime = -67790,
    errSecMissingAttributeSubprime = -67791,
    errSecInvalidAttributeIterationCount = -67792,
    errSecMissingAttributeIterationCount = -67793,
    errSecInvalidAttributeDLDBHandle = -67794,
    errSecMissingAttributeDLDBHandle = -67795,
    errSecInvalidAttributeAccessCredentials = -67796,
    errSecMissingAttributeAccessCredentials = -67797,
    errSecInvalidAttributePublicKeyFormat = -67798,
    errSecMissingAttributePublicKeyFormat = -67799,
    errSecInvalidAttributePrivateKeyFormat = -67800,
    errSecMissingAttributePrivateKeyFormat = -67801,
    errSecInvalidAttributeSymmetricKeyFormat = -67802,
    errSecMissingAttributeSymmetricKeyFormat = -67803,
    errSecInvalidAttributeWrappedKeyFormat = -67804,
    errSecMissingAttributeWrappedKeyFormat = -67805,
    errSecStagedOperationInProgress = -67806,
    errSecStagedOperationNotStarted = -67807,
    errSecVerifyFailed = -67808,
    errSecQuerySizeUnknown = -67809,
    errSecBlockSizeMismatch = -67810,
    errSecPublicKeyInconsistent = -67811,
    errSecDeviceVerifyFailed = -67812,
    errSecInvalidLoginName = -67813,
    errSecAlreadyLoggedIn = -67814,
    errSecInvalidDigestAlgorithm = -67815,
    errSecInvalidCRLGroup = -67816,
    errSecCertificateCannotOperate = -67817,
    errSecCertificateExpired = -67818,
    errSecCertificateNotValidYet = -67819,
    errSecCertificateRevoked = -67820,
    errSecCertificateSuspended = -67821,
    errSecInsufficientCredentials = -67822,
    errSecInvalidAction = -67823,
    errSecInvalidAuthority = -67824,
    errSecVerifyActionFailed = -67825,
    errSecInvalidCertAuthority = -67826,
    errSecInvaldCRLAuthority = -67827,
    errSecInvalidCRLEncoding = -67828,
    errSecInvalidCRLType = -67829,
    errSecInvalidCRL = -67830,
    errSecInvalidFormType = -67831,
    errSecInvalidID = -67832,
    errSecInvalidIdentifier = -67833,
    errSecInvalidIndex = -67834,
    errSecInvalidPolicyIdentifiers = -67835,
    errSecInvalidTimeString = -67836,
    errSecInvalidReason = -67837,
    errSecInvalidRequestInputs = -67838,
    errSecInvalidResponseVector = -67839,
    errSecInvalidStopOnPolicy = -67840,
    errSecInvalidTuple = -67841,
    errSecMultipleValuesUnsupported = -67842,
    errSecNotTrusted = -67843,
    errSecNoDefaultAuthority = -67844,
    errSecRejectedForm = -67845,
    errSecRequestLost = -67846,
    errSecRequestRejected = -67847,
    errSecUnsupportedAddressType = -67848,
    errSecUnsupportedService = -67849,
    errSecInvalidTupleGroup = -67850,
    errSecInvalidBaseACLs = -67851,
    errSecInvalidTupleCredendtials = -67852,
    errSecInvalidEncoding = -67853,
    errSecInvalidValidityPeriod = -67854,
    errSecInvalidRequestor = -67855,
    errSecRequestDescriptor = -67856,
    errSecInvalidBundleInfo = -67857,
    errSecInvalidCRLIndex = -67858,
    errSecNoFieldValues = -67859,
    errSecUnsupportedFieldFormat = -67860,
    errSecUnsupportedIndexInfo = -67861,
    errSecUnsupportedLocality = -67862,
    errSecUnsupportedNumAttributes = -67863,
    errSecUnsupportedNumIndexes = -67864,
    errSecUnsupportedNumRecordTypes = -67865,
    errSecFieldSpecifiedMultiple = -67866,
    errSecIncompatibleFieldFormat = -67867,
    errSecInvalidParsingModule = -67868,
    errSecDatabaseLocked = -67869,
    errSecDatastoreIsOpen = -67870,
    errSecMissingValue = -67871,
    errSecUnsupportedQueryLimits = -67872,
    errSecUnsupportedNumSelectionPreds = -67873,
    errSecUnsupportedOperator = -67874,
    errSecInvalidDBLocation = -67875,
    errSecInvalidAccessRequest = -67876,
    errSecInvalidIndexInfo = -67877,
    errSecInvalidNewOwner = -67878,
    errSecInvalidModifyMode = -67879,
    errSecMissingRequiredExtension = -67880,
    errSecExtendedKeyUsageNotCritical = -67881,
    errSecTimestampMissing = -67882,
    errSecTimestampInvalid = -67883,
    errSecTimestampNotTrusted = -67884,
    errSecTimestampServiceNotAvailable = -67885,
    errSecTimestampBadAlg = -67886,
    errSecTimestampBadRequest = -67887,
    errSecTimestampBadDataFormat = -67888,
    errSecTimestampTimeNotAvailable = -67889,
    errSecTimestampUnacceptedPolicy = -67890,
    errSecTimestampUnacceptedExtension = -67891,
    errSecTimestampAddInfoNotAvailable = -67892,
    errSecTimestampSystemFailure = -67893,
    errSecSigningTimeMissing = -67894,
    errSecTimestampRejection = -67895,
    errSecTimestampWaiting = -67896,
    errSecTimestampRevocationWarning = -67897,
    errSecTimestampRevocationNotification = -67898,
};
#pragma clang assume_nonnull end




}
extern "C" {

#pragma clang assume_nonnull begin







CFTypeID SecCertificateGetTypeID(void)
    __attribute__((availability(ios,introduced=2.0)));
_Nullable
SecCertificateRef SecCertificateCreateWithData(CFAllocatorRef _Nullable allocator, CFDataRef data)
    __attribute__((availability(ios,introduced=2.0)));
CFDataRef SecCertificateCopyData(SecCertificateRef certificate)
    __attribute__((availability(ios,introduced=2.0)));
_Nullable
CFStringRef SecCertificateCopySubjectSummary(SecCertificateRef certificate)
    __attribute__((availability(ios,introduced=2.0)));
OSStatus SecCertificateCopyCommonName(SecCertificateRef certificate, CFStringRef * _Nonnull __attribute__((cf_returns_retained)) commonName)
    __attribute__((availability(ios,introduced=10.3)));
OSStatus SecCertificateCopyEmailAddresses(SecCertificateRef certificate, CFArrayRef * _Nonnull __attribute__((cf_returns_retained)) emailAddresses)
    __attribute__((availability(ios,introduced=10.3)));







_Nullable
CFDataRef SecCertificateCopyNormalizedIssuerSequence(SecCertificateRef certificate)
    __attribute__((availability(ios,introduced=10.3)));







_Nullable
CFDataRef SecCertificateCopyNormalizedSubjectSequence(SecCertificateRef certificate)
    __attribute__((availability(ios,introduced=10.3)));
_Nullable
SecKeyRef SecCertificateCopyPublicKey(SecCertificateRef certificate)
    __attribute__((availability(ios,introduced=10.3)));
_Nullable
CFDataRef SecCertificateCopySerialNumberData(SecCertificateRef certificate, CFErrorRef *error)
    __attribute__((availability(ios,introduced=11.0)));
_Nullable
CFDataRef SecCertificateCopySerialNumber(SecCertificateRef certificate)
    __attribute__((availability(ios,introduced=10.3,deprecated=11.0,message="SecCertificateCopySerialNumber is deprecated. Use SecCertificateCopySerialNumberData instead.")));
#pragma clang assume_nonnull end
}
extern "C" {

#pragma clang assume_nonnull begin







CFTypeID SecIdentityGetTypeID(void)
     __attribute__((availability(ios,introduced=2.0)));
OSStatus SecIdentityCopyCertificate(
            SecIdentityRef identityRef,
            SecCertificateRef * _Nonnull __attribute__((cf_returns_retained)) certificateRef)
     __attribute__((availability(ios,introduced=2.0)));
OSStatus SecIdentityCopyPrivateKey(
            SecIdentityRef identityRef,
            SecKeyRef * _Nonnull __attribute__((cf_returns_retained)) privateKeyRef)
     __attribute__((availability(ios,introduced=2.0)));
#pragma clang assume_nonnull end
}
extern "C" {

#pragma clang assume_nonnull begin







CFTypeID SecAccessControlGetTypeID(void)
__attribute__((availability(ios,introduced=8.0)));
typedef CFOptionFlags SecAccessControlCreateFlags; enum {
    kSecAccessControlUserPresence = 1u << 0,
    kSecAccessControlBiometryAny __attribute__((availability(ios,introduced=11_3))) = 1u << 1,
    kSecAccessControlTouchIDAny __attribute__((availability(macos,introduced=10.12.1,deprecated=10.13.4,replacement="kSecAccessControlBiometryAny"))) __attribute__((availability(ios,introduced=9.0,deprecated=11.3,replacement="kSecAccessControlBiometryAny"))) = 1u << 1,
    kSecAccessControlBiometryCurrentSet __attribute__((availability(ios,introduced=11_3))) = 1u << 3,
    kSecAccessControlTouchIDCurrentSet __attribute__((availability(macos,introduced=10.12.1,deprecated=10.13.4,replacement="kSecAccessControlBiometryCurrentSet"))) __attribute__((availability(ios,introduced=9.0,deprecated=11.3,replacement="kSecAccessControlBiometryCurrentSet"))) = 1u << 3,
    kSecAccessControlDevicePasscode __attribute__((availability(ios,introduced=9_0))) = 1u << 4,
    kSecAccessControlOr __attribute__((availability(ios,introduced=9_0))) = 1u << 14,
    kSecAccessControlAnd __attribute__((availability(ios,introduced=9_0))) = 1u << 15,
    kSecAccessControlPrivateKeyUsage __attribute__((availability(ios,introduced=9_0))) = 1u << 30,
    kSecAccessControlApplicationPassword __attribute__((availability(ios,introduced=9_0))) = 1u << 31,
} __attribute__((availability(ios,introduced=8.0)));
_Nullable
SecAccessControlRef SecAccessControlCreateWithFlags(CFAllocatorRef _Nullable allocator, CFTypeRef protection,
                                                    SecAccessControlCreateFlags flags, CFErrorRef *error)
__attribute__((availability(ios,introduced=8.0)));
#pragma clang assume_nonnull end



}
extern "C" {

#pragma clang assume_nonnull begin
extern const CFStringRef kSecClass
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecClassInternetPassword
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecClassGenericPassword
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecClassCertificate
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecClassKey
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecClassIdentity
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrAccessible
    __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kSecAttrAccess
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=NA))) __attribute__((availability(bridgeos,introduced=NA)));
extern const CFStringRef kSecAttrAccessControl
    __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0)));
extern const CFStringRef kSecAttrAccessGroup
    __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=3.0)));
extern const CFStringRef kSecAttrSynchronizable
    __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecAttrSynchronizableAny
    __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecAttrCreationDate
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrModificationDate
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrDescription
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrComment
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrCreator
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrType
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrLabel
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrIsInvisible
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrIsNegative
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrAccount
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrService
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrGeneric
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrSecurityDomain
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrServer
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocol
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrAuthenticationType
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrPort
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrPath
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrSubject
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrIssuer
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrSerialNumber
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrSubjectKeyID
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrPublicKeyHash
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrCertificateType
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrCertificateEncoding
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrKeyClass
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrApplicationLabel
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrIsPermanent
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrIsSensitive
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrIsExtractable
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrApplicationTag
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrKeyType
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrPRF
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=NA))) __attribute__((availability(bridgeos,introduced=NA)));
extern const CFStringRef kSecAttrSalt
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=NA))) __attribute__((availability(bridgeos,introduced=NA)));
extern const CFStringRef kSecAttrRounds
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=NA))) __attribute__((availability(bridgeos,introduced=NA)));
extern const CFStringRef kSecAttrKeySizeInBits
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrEffectiveKeySize
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrCanEncrypt
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrCanDecrypt
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrCanDerive
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrCanSign
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrCanVerify
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrCanWrap
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrCanUnwrap
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrSyncViewHint
    __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kSecAttrTokenID
    __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kSecAttrPersistantReference
    __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
extern const CFStringRef kSecAttrPersistentReference
    __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
extern const CFStringRef kSecAttrAccessibleWhenUnlocked
    __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kSecAttrAccessibleAfterFirstUnlock
    __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kSecAttrAccessibleAlways
    __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kSecAttrAccessibleWhenPasscodeSetThisDeviceOnly
    __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0)));
extern const CFStringRef kSecAttrAccessibleWhenUnlockedThisDeviceOnly
    __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kSecAttrAccessibleAfterFirstUnlockThisDeviceOnly
    __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kSecAttrAccessibleAlwaysThisDeviceOnly
    __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kSecAttrProtocolFTP
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolFTPAccount
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolHTTP
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolIRC
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolNNTP
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolPOP3
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolSMTP
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolSOCKS
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolIMAP
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolLDAP
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolAppleTalk
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolAFP
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolTelnet
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolSSH
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolFTPS
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolHTTPS
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolHTTPProxy
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolHTTPSProxy
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolFTPProxy
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolSMB
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolRTSP
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolRTSPProxy
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolDAAP
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolEPPC
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolIPP
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolNNTPS
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolLDAPS
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolTelnetS
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolIMAPS
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolIRCS
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrProtocolPOP3S
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrAuthenticationTypeNTLM
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrAuthenticationTypeMSN
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrAuthenticationTypeDPA
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrAuthenticationTypeRPA
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrAuthenticationTypeHTTPBasic
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrAuthenticationTypeHTTPDigest
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrAuthenticationTypeHTMLForm
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrAuthenticationTypeDefault
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrKeyClassPublic
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrKeyClassPrivate
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrKeyClassSymmetric
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrKeyTypeRSA
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecAttrKeyTypeDSA
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=NA))) __attribute__((availability(bridgeos,introduced=NA)));
extern const CFStringRef kSecAttrKeyTypeAES
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=NA))) __attribute__((availability(bridgeos,introduced=NA)));
extern const CFStringRef kSecAttrKeyTypeDES
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=NA))) __attribute__((availability(bridgeos,introduced=NA)));
extern const CFStringRef kSecAttrKeyType3DES
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=NA))) __attribute__((availability(bridgeos,introduced=NA)));
extern const CFStringRef kSecAttrKeyTypeRC4
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=NA))) __attribute__((availability(bridgeos,introduced=NA)));
extern const CFStringRef kSecAttrKeyTypeRC2
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=NA))) __attribute__((availability(bridgeos,introduced=NA)));
extern const CFStringRef kSecAttrKeyTypeCAST
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=NA))) __attribute__((availability(bridgeos,introduced=NA)));
extern const CFStringRef kSecAttrKeyTypeECDSA
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=NA))) __attribute__((availability(bridgeos,introduced=NA)));
extern const CFStringRef kSecAttrKeyTypeEC
    __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kSecAttrKeyTypeECSECPrimeRandom
    __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)));
extern const CFStringRef kSecAttrPRFHmacAlgSHA1
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=NA))) __attribute__((availability(bridgeos,introduced=NA)));
extern const CFStringRef kSecAttrPRFHmacAlgSHA224
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=NA))) __attribute__((availability(bridgeos,introduced=NA)));
extern const CFStringRef kSecAttrPRFHmacAlgSHA256
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=NA))) __attribute__((availability(bridgeos,introduced=NA)));
extern const CFStringRef kSecAttrPRFHmacAlgSHA384
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=NA))) __attribute__((availability(bridgeos,introduced=NA)));
extern const CFStringRef kSecAttrPRFHmacAlgSHA512
      __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=NA))) __attribute__((availability(bridgeos,introduced=NA)));
extern const CFStringRef kSecMatchPolicy
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecMatchItemList
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecMatchSearchList
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecMatchIssuers
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecMatchEmailAddressIfPresent
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecMatchSubjectContains
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecMatchSubjectStartsWith
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=NA))) __attribute__((availability(bridgeos,introduced=NA)));
extern const CFStringRef kSecMatchSubjectEndsWith
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=NA))) __attribute__((availability(bridgeos,introduced=NA)));
extern const CFStringRef kSecMatchSubjectWholeString
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=NA))) __attribute__((availability(bridgeos,introduced=NA)));
extern const CFStringRef kSecMatchCaseInsensitive
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecMatchDiacriticInsensitive
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=NA))) __attribute__((availability(bridgeos,introduced=NA)));
extern const CFStringRef kSecMatchWidthInsensitive
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=NA))) __attribute__((availability(bridgeos,introduced=NA)));
extern const CFStringRef kSecMatchTrustedOnly
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecMatchValidOnDate
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecMatchLimit
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecMatchLimitOne
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecMatchLimitAll
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecReturnData
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecReturnAttributes
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecReturnRef
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecReturnPersistentRef
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecValueData
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecValueRef
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecValuePersistentRef
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecUseItemList
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecUseKeychain
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=NA))) __attribute__((availability(bridgeos,introduced=NA)));
extern const CFStringRef kSecUseOperationPrompt
    __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0)));
extern const CFStringRef kSecUseNoAuthenticationUI
    __attribute__((availability(macos,introduced=10.10,deprecated=10.11,message="Use kSecUseAuthenticationUI instead."))) __attribute__((availability(ios,introduced=8.0,deprecated=9.0,message="Use kSecUseAuthenticationUI instead.")));
extern const CFStringRef kSecUseAuthenticationUI
    __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kSecUseAuthenticationContext
    __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kSecUseAuthenticationUIAllow
    __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kSecUseAuthenticationUIFail
    __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kSecUseAuthenticationUISkip
    __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kSecAttrTokenIDSecureEnclave
    __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kSecAttrAccessGroupToken
    __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0)));
OSStatus SecItemCopyMatching(CFDictionaryRef query, CFTypeRef * _Nullable __attribute__((cf_returns_retained)) result)
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
OSStatus SecItemAdd(CFDictionaryRef attributes, CFTypeRef * _Nullable __attribute__((cf_returns_retained)) result)
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
OSStatus SecItemUpdate(CFDictionaryRef query, CFDictionaryRef attributesToUpdate)
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
OSStatus SecItemDelete(CFDictionaryRef query)
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
#pragma clang assume_nonnull end



}
extern "C" {

#pragma clang assume_nonnull begin
typedef uint32_t SecPadding; enum
{
    kSecPaddingNone = 0,
    kSecPaddingPKCS1 = 1,
    kSecPaddingOAEP = 2,




    kSecPaddingSigRaw = 0x4000,




    kSecPaddingPKCS1MD2 = 0x8000,




    kSecPaddingPKCS1MD5 = 0x8001,




    kSecPaddingPKCS1SHA1 = 0x8002,




    kSecPaddingPKCS1SHA224 = 0x8003,




    kSecPaddingPKCS1SHA256 = 0x8004,




    kSecPaddingPKCS1SHA384 = 0x8005,




    kSecPaddingPKCS1SHA512 = 0x8006,
};
extern const CFStringRef kSecPrivateKeyAttrs
    __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecPublicKeyAttrs
    __attribute__((availability(ios,introduced=2.0)));






CFTypeID SecKeyGetTypeID(void)
 __attribute__((availability(ios,introduced=2.0)));
OSStatus SecKeyGeneratePair(CFDictionaryRef parameters,
    SecKeyRef * _Nullable __attribute__((cf_returns_retained)) publicKey, SecKeyRef * _Nullable __attribute__((cf_returns_retained)) privateKey)
    __attribute__((availability(ios,introduced=2.0)));
OSStatus SecKeyRawSign(
                       SecKeyRef key,
                       SecPadding padding,
                       const uint8_t *dataToSign,
                       size_t dataToSignLen,
                       uint8_t *sig,
                       size_t *sigLen)
__attribute__((availability(ios,introduced=2.0)));
OSStatus SecKeyRawVerify(
                         SecKeyRef key,
                         SecPadding padding,
                         const uint8_t *signedData,
                         size_t signedDataLen,
                         const uint8_t *sig,
                         size_t sigLen)
__attribute__((availability(ios,introduced=2.0)));
OSStatus SecKeyEncrypt(
                       SecKeyRef key,
                       SecPadding padding,
                       const uint8_t *plainText,
                       size_t plainTextLen,
                       uint8_t *cipherText,
                       size_t *cipherTextLen)
__attribute__((availability(ios,introduced=2.0)));
OSStatus SecKeyDecrypt(
                       SecKeyRef key,
                       SecPadding padding,


                       const uint8_t *cipherText,
                       size_t cipherTextLen,
                       uint8_t *plainText,
                       size_t *plainTextLen)
__attribute__((availability(ios,introduced=2.0)));
SecKeyRef _Nullable SecKeyCreateRandomKey(CFDictionaryRef parameters, CFErrorRef *error)
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
SecKeyRef _Nullable SecKeyCreateWithData(CFDataRef keyData, CFDictionaryRef attributes, CFErrorRef *error)
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
size_t SecKeyGetBlockSize(SecKeyRef key)
    __attribute__((availability(ios,introduced=2.0)));
CFDataRef _Nullable SecKeyCopyExternalRepresentation(SecKeyRef key, CFErrorRef *error)
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
CFDictionaryRef _Nullable SecKeyCopyAttributes(SecKeyRef key)
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
SecKeyRef _Nullable SecKeyCopyPublicKey(SecKeyRef key)
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
typedef CFStringRef SecKeyAlgorithm __attribute__((swift_wrapper(enum)))
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));

extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureRaw
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));

extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureDigestPKCS1v15Raw
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));

extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureDigestPKCS1v15SHA1
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureDigestPKCS1v15SHA224
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureDigestPKCS1v15SHA256
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureDigestPKCS1v15SHA384
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureDigestPKCS1v15SHA512
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));

extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureMessagePKCS1v15SHA1
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureMessagePKCS1v15SHA224
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureMessagePKCS1v15SHA256
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureMessagePKCS1v15SHA384
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureMessagePKCS1v15SHA512
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));

extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureDigestPSSSHA1
__attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureDigestPSSSHA224
__attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureDigestPSSSHA256
__attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureDigestPSSSHA384
__attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureDigestPSSSHA512
__attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));

extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureMessagePSSSHA1
__attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureMessagePSSSHA224
__attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureMessagePSSSHA256
__attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureMessagePSSSHA384
__attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSASignatureMessagePSSSHA512
__attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));

extern const SecKeyAlgorithm kSecKeyAlgorithmECDSASignatureRFC4754
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));

extern const SecKeyAlgorithm kSecKeyAlgorithmECDSASignatureDigestX962
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDSASignatureDigestX962SHA1
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDSASignatureDigestX962SHA224
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDSASignatureDigestX962SHA256
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDSASignatureDigestX962SHA384
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDSASignatureDigestX962SHA512
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));

extern const SecKeyAlgorithm kSecKeyAlgorithmECDSASignatureMessageX962SHA1
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDSASignatureMessageX962SHA224
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDSASignatureMessageX962SHA256
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDSASignatureMessageX962SHA384
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDSASignatureMessageX962SHA512
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));

extern const SecKeyAlgorithm kSecKeyAlgorithmRSAEncryptionRaw
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSAEncryptionPKCS1
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSAEncryptionOAEPSHA1
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSAEncryptionOAEPSHA224
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSAEncryptionOAEPSHA256
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSAEncryptionOAEPSHA384
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSAEncryptionOAEPSHA512
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));

extern const SecKeyAlgorithm kSecKeyAlgorithmRSAEncryptionOAEPSHA1AESGCM
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSAEncryptionOAEPSHA224AESGCM
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSAEncryptionOAEPSHA256AESGCM
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSAEncryptionOAEPSHA384AESGCM
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmRSAEncryptionOAEPSHA512AESGCM
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));

extern const SecKeyAlgorithm kSecKeyAlgorithmECIESEncryptionStandardX963SHA1AESGCM
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECIESEncryptionStandardX963SHA224AESGCM
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECIESEncryptionStandardX963SHA256AESGCM
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECIESEncryptionStandardX963SHA384AESGCM
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECIESEncryptionStandardX963SHA512AESGCM
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));

extern const SecKeyAlgorithm kSecKeyAlgorithmECIESEncryptionCofactorX963SHA1AESGCM
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECIESEncryptionCofactorX963SHA224AESGCM
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECIESEncryptionCofactorX963SHA256AESGCM
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECIESEncryptionCofactorX963SHA384AESGCM
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECIESEncryptionCofactorX963SHA512AESGCM
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));

extern const SecKeyAlgorithm kSecKeyAlgorithmECIESEncryptionStandardVariableIVX963SHA224AESGCM
__attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECIESEncryptionStandardVariableIVX963SHA256AESGCM
__attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECIESEncryptionStandardVariableIVX963SHA384AESGCM
__attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECIESEncryptionStandardVariableIVX963SHA512AESGCM
__attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));

extern const SecKeyAlgorithm kSecKeyAlgorithmECIESEncryptionCofactorVariableIVX963SHA224AESGCM
__attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECIESEncryptionCofactorVariableIVX963SHA256AESGCM
__attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECIESEncryptionCofactorVariableIVX963SHA384AESGCM
__attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECIESEncryptionCofactorVariableIVX963SHA512AESGCM
__attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));

extern const SecKeyAlgorithm kSecKeyAlgorithmECDHKeyExchangeStandard
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDHKeyExchangeStandardX963SHA1
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDHKeyExchangeStandardX963SHA224
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDHKeyExchangeStandardX963SHA256
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDHKeyExchangeStandardX963SHA384
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDHKeyExchangeStandardX963SHA512
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));

extern const SecKeyAlgorithm kSecKeyAlgorithmECDHKeyExchangeCofactor
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDHKeyExchangeCofactorX963SHA1
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDHKeyExchangeCofactorX963SHA224
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDHKeyExchangeCofactorX963SHA256
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDHKeyExchangeCofactorX963SHA384
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyAlgorithm kSecKeyAlgorithmECDHKeyExchangeCofactorX963SHA512
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
CFDataRef _Nullable SecKeyCreateSignature(SecKeyRef key, SecKeyAlgorithm algorithm, CFDataRef dataToSign, CFErrorRef *error)
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
Boolean SecKeyVerifySignature(SecKeyRef key, SecKeyAlgorithm algorithm, CFDataRef signedData, CFDataRef signature, CFErrorRef *error)
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
CFDataRef _Nullable SecKeyCreateEncryptedData(SecKeyRef key, SecKeyAlgorithm algorithm, CFDataRef plaintext,
                                               CFErrorRef *error)
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
CFDataRef _Nullable SecKeyCreateDecryptedData(SecKeyRef key, SecKeyAlgorithm algorithm, CFDataRef ciphertext,
                                               CFErrorRef *error)
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));







typedef CFStringRef SecKeyKeyExchangeParameter __attribute__((swift_wrapper(enum)))
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyKeyExchangeParameter kSecKeyKeyExchangeParameterRequestedSize
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern const SecKeyKeyExchangeParameter kSecKeyKeyExchangeParameterSharedInfo
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
CFDataRef _Nullable SecKeyCopyKeyExchangeResult(SecKeyRef privateKey, SecKeyAlgorithm algorithm, SecKeyRef publicKey, CFDictionaryRef parameters, CFErrorRef *error)
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
typedef CFIndex SecKeyOperationType; enum {
    kSecKeyOperationTypeSign = 0,
    kSecKeyOperationTypeVerify = 1,
    kSecKeyOperationTypeEncrypt = 2,
    kSecKeyOperationTypeDecrypt = 3,
    kSecKeyOperationTypeKeyExchange = 4,
} __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
Boolean SecKeyIsAlgorithmSupported(SecKeyRef key, SecKeyOperationType operation, SecKeyAlgorithm algorithm)
__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
#pragma clang assume_nonnull end



}
extern "C" {

#pragma clang assume_nonnull begin
extern const CFStringRef kSecPolicyAppleX509Basic
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecPolicyAppleSSL
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecPolicyAppleSMIME
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecPolicyAppleEAP
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecPolicyAppleIPsec
    __attribute__((availability(ios,introduced=7.0)));




extern const CFStringRef kSecPolicyApplePKINITClient
    __attribute__((availability(ios,unavailable)));
extern const CFStringRef kSecPolicyApplePKINITServer
    __attribute__((availability(ios,unavailable)));
extern const CFStringRef kSecPolicyAppleCodeSigning
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecPolicyMacAppStoreReceipt
    __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kSecPolicyAppleIDValidation
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecPolicyAppleTimeStamping
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecPolicyAppleRevocation
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecPolicyApplePassbookSigning
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecPolicyApplePayIssuerEncryption
    __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kSecPolicyOid
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecPolicyName
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecPolicyClient
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecPolicyRevocationFlags
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecPolicyTeamIdentifier
    __attribute__((availability(ios,introduced=7.0)));







CFTypeID SecPolicyGetTypeID(void)
    __attribute__((availability(ios,introduced=2.0)));
_Nullable
CFDictionaryRef SecPolicyCopyProperties(SecPolicyRef policyRef)
    __attribute__((availability(ios,introduced=7.0)));







SecPolicyRef SecPolicyCreateBasicX509(void)
    __attribute__((availability(ios,introduced=2.0)));
SecPolicyRef SecPolicyCreateSSL(Boolean server, CFStringRef _Nullable hostname)
    __attribute__((availability(ios,introduced=2.0)));
enum {
    kSecRevocationOCSPMethod = (1 << 0),
    kSecRevocationCRLMethod = (1 << 1),
    kSecRevocationPreferCRL = (1 << 2),
    kSecRevocationRequirePositiveResponse = (1 << 3),
    kSecRevocationNetworkAccessDisabled = (1 << 4),
    kSecRevocationUseAnyAvailableMethod = (kSecRevocationOCSPMethod |
                                           kSecRevocationCRLMethod)
};
_Nullable
SecPolicyRef SecPolicyCreateRevocation(CFOptionFlags revocationFlags)
    __attribute__((availability(ios,introduced=7.0)));
_Nullable
SecPolicyRef SecPolicyCreateWithProperties(CFTypeRef policyIdentifier,
                                           CFDictionaryRef _Nullable properties)
    __attribute__((availability(ios,introduced=7.0)));
#pragma clang assume_nonnull end
}
extern "C" {

#pragma clang assume_nonnull begin






typedef const struct __SecRandom * SecRandomRef;



extern const SecRandomRef kSecRandomDefault
    __attribute__((availability(ios,introduced=2.0)));







int SecRandomCopyBytes(SecRandomRef _Nullable rnd, size_t count, void *bytes)
    __attribute__ ((warn_unused_result))
    __attribute__((availability(ios,introduced=2.0)));
#pragma clang assume_nonnull end



}
extern "C" {

#pragma clang assume_nonnull begin
extern const CFStringRef kSecImportExportPassphrase
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecImportExportKeychain
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=NA))) __attribute__((availability(bridgeos,introduced=NA)));
extern const CFStringRef kSecImportExportAccess
    __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=NA))) __attribute__((availability(bridgeos,introduced=NA)));
extern const CFStringRef kSecImportItemLabel
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecImportItemKeyID
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecImportItemTrust
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecImportItemCertChain
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
extern const CFStringRef kSecImportItemIdentity
    __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
OSStatus SecPKCS12Import(CFDataRef pkcs12_data, CFDictionaryRef options, CFArrayRef * _Nonnull __attribute__((cf_returns_retained)) items)
     __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=2.0)));
#pragma clang assume_nonnull end




}
extern "C" {

#pragma clang assume_nonnull begin
typedef uint32_t SecTrustResultType; enum {
    kSecTrustResultInvalid __attribute__((availability(ios,introduced=2_0))) = 0,
    kSecTrustResultProceed __attribute__((availability(ios,introduced=2_0))) = 1,
    kSecTrustResultConfirm __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" ))) = 2,
    kSecTrustResultDeny __attribute__((availability(ios,introduced=2_0))) = 3,
    kSecTrustResultUnspecified __attribute__((availability(ios,introduced=2_0))) = 4,
    kSecTrustResultRecoverableTrustFailure __attribute__((availability(ios,introduced=2_0))) = 5,
    kSecTrustResultFatalTrustFailure __attribute__((availability(ios,introduced=2_0))) = 6,
    kSecTrustResultOtherError __attribute__((availability(ios,introduced=2_0))) = 7
};





typedef struct __attribute__((objc_bridge(id))) __SecTrust *SecTrustRef;
extern const CFStringRef kSecPropertyTypeTitle
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecPropertyTypeError
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecTrustEvaluationDate
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecTrustExtendedValidation
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecTrustOrganizationName
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecTrustResultValue
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecTrustRevocationChecked
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecTrustRevocationValidUntilDate
    __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kSecTrustCertificateTransparency
    __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kSecTrustCertificateTransparencyWhiteList
    __attribute__((availability(ios,introduced=10.0,deprecated=11.0)));
typedef void (*SecTrustCallback)(SecTrustRef trustRef, SecTrustResultType trustResult);
CFTypeID SecTrustGetTypeID(void)
    __attribute__((availability(ios,introduced=2.0)));
OSStatus SecTrustCreateWithCertificates(CFTypeRef certificates,
    CFTypeRef _Nullable policies, SecTrustRef * _Nonnull __attribute__((cf_returns_retained)) trust)
    __attribute__((availability(ios,introduced=2.0)));
OSStatus SecTrustSetPolicies(SecTrustRef trust, CFTypeRef policies)
    __attribute__((availability(ios,introduced=6.0)));
OSStatus SecTrustCopyPolicies(SecTrustRef trust, CFArrayRef * _Nonnull __attribute__((cf_returns_retained)) policies)
    __attribute__((availability(ios,introduced=7.0)));
OSStatus SecTrustSetNetworkFetchAllowed(SecTrustRef trust,
    Boolean allowFetch)
    __attribute__((availability(ios,introduced=7.0)));
OSStatus SecTrustGetNetworkFetchAllowed(SecTrustRef trust,
    Boolean *allowFetch)
    __attribute__((availability(ios,introduced=7.0)));
OSStatus SecTrustSetAnchorCertificates(SecTrustRef trust,
    CFArrayRef anchorCertificates)
    __attribute__((availability(ios,introduced=2.0)));
OSStatus SecTrustSetAnchorCertificatesOnly(SecTrustRef trust,
    Boolean anchorCertificatesOnly)
    __attribute__((availability(ios,introduced=2.0)));
OSStatus SecTrustCopyCustomAnchorCertificates(SecTrustRef trust,
    CFArrayRef * _Nonnull __attribute__((cf_returns_retained)) anchors)
    __attribute__((availability(ios,introduced=7.0)));
OSStatus SecTrustSetVerifyDate(SecTrustRef trust, CFDateRef verifyDate)
    __attribute__((availability(ios,introduced=2.0)));
CFAbsoluteTime SecTrustGetVerifyTime(SecTrustRef trust)
    __attribute__((availability(ios,introduced=2.0)));
OSStatus SecTrustEvaluate(SecTrustRef trust, SecTrustResultType * _Nullable result)
    __attribute__((availability(ios,introduced=2.0)));
OSStatus SecTrustEvaluateAsync(SecTrustRef trust,
    dispatch_queue_t _Nullable queue, SecTrustCallback result)
    __attribute__((availability(ios,introduced=7.0)));
OSStatus SecTrustGetTrustResult(SecTrustRef trust,
    SecTrustResultType *result)
    __attribute__((availability(ios,introduced=7.0)));
_Nullable
SecKeyRef SecTrustCopyPublicKey(SecTrustRef trust)
    __attribute__((availability(ios,introduced=2.0)));
CFIndex SecTrustGetCertificateCount(SecTrustRef trust)
    __attribute__((availability(ios,introduced=2.0)));
_Nullable
SecCertificateRef SecTrustGetCertificateAtIndex(SecTrustRef trust, CFIndex ix)
    __attribute__((availability(ios,introduced=2.0)));
CFDataRef SecTrustCopyExceptions(SecTrustRef trust)
    __attribute__((availability(ios,introduced=4.0)));
bool SecTrustSetExceptions(SecTrustRef trust, CFDataRef _Nullable exceptions)
    __attribute__((availability(ios,introduced=4.0)));
_Nullable
CFArrayRef SecTrustCopyProperties(SecTrustRef trust)
    __attribute__((availability(ios,introduced=2.0)));
_Nullable
CFDictionaryRef SecTrustCopyResult(SecTrustRef trust)
    __attribute__((availability(ios,introduced=7.0)));
OSStatus SecTrustSetOCSPResponse(SecTrustRef trust, CFTypeRef _Nullable responseData)
    __attribute__((availability(ios,introduced=7.0)));
#pragma clang assume_nonnull end
}


extern "C" {

#pragma clang assume_nonnull begin
extern const CFStringRef kSecSharedPassword
    __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
void SecAddSharedWebCredential(CFStringRef fqdn, CFStringRef account, CFStringRef _Nullable password,
    void (^completionHandler)(CFErrorRef _Nullable error))
    __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
void SecRequestSharedWebCredential(CFStringRef _Nullable fqdn, CFStringRef _Nullable account,
    void (^completionHandler)(CFArrayRef _Nullable credentials, CFErrorRef _Nullable error))
    __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));






_Nullable
CFStringRef SecCreateSharedWebCredentialPassword(void)
    __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
#pragma clang assume_nonnull end






}

// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif


#pragma clang assume_nonnull begin
typedef NSUInteger NSURLCredentialPersistence; enum {
    NSURLCredentialPersistenceNone,
    NSURLCredentialPersistenceForSession,
    NSURLCredentialPersistencePermanent,
    NSURLCredentialPersistenceSynchronizable __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))
};

// @class NSURLCredentialInternal;
#ifndef _REWRITER_typedef_NSURLCredentialInternal
#define _REWRITER_typedef_NSURLCredentialInternal
typedef struct objc_object NSURLCredentialInternal;
typedef struct {} _objc_exc_NSURLCredentialInternal;
#endif








#ifndef _REWRITER_typedef_NSURLCredential
#define _REWRITER_typedef_NSURLCredential
typedef struct objc_object NSURLCredential;
typedef struct {} _objc_exc_NSURLCredential;
#endif

struct NSURLCredential_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSURLCredentialInternal *__strong _internal;
};






// @property (readonly) NSURLCredentialPersistence persistence;

/* @end */





// @interface NSURLCredential(NSInternetPassword)
// - (instancetype)initWithUser:(NSString *)user password:(NSString *)password persistence:(NSURLCredentialPersistence)persistence;
// + (NSURLCredential *)credentialWithUser:(NSString *)user password:(NSString *)password persistence:(NSURLCredentialPersistence)persistence;





// @property (nullable, readonly, copy) NSString *user;
// @property (nullable, readonly, copy) NSString *password;
// @property (readonly) BOOL hasPassword;

/* @end */





// @interface NSURLCredential(NSClientCertificate)
// - (instancetype)initWithIdentity:(SecIdentityRef)identity certificates:(nullable NSArray *)certArray persistence:(NSURLCredentialPersistence)persistence __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (NSURLCredential *)credentialWithIdentity:(SecIdentityRef)identity certificates:(nullable NSArray *)certArray persistence:(NSURLCredentialPersistence)persistence __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// @property (nullable, readonly) SecIdentityRef identity;





// @property (readonly, copy) NSArray *certificates __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */


// @interface NSURLCredential(NSServerTrust)






// - (instancetype)initWithTrust:(SecTrustRef)trust __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






// + (NSURLCredential *)credentialForTrust:(SecTrustRef)trust __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */

#pragma clang assume_nonnull end








// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

// @class NSData;
#ifndef _REWRITER_typedef_NSData
#define _REWRITER_typedef_NSData
typedef struct objc_object NSData;
typedef struct {} _objc_exc_NSData;
#endif


#pragma clang assume_nonnull begin





extern "C" NSString * const NSURLProtectionSpaceHTTP __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





extern "C" NSString * const NSURLProtectionSpaceHTTPS __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





extern "C" NSString * const NSURLProtectionSpaceFTP __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





extern "C" NSString * const NSURLProtectionSpaceHTTPProxy;





extern "C" NSString * const NSURLProtectionSpaceHTTPSProxy;





extern "C" NSString * const NSURLProtectionSpaceFTPProxy;





extern "C" NSString * const NSURLProtectionSpaceSOCKSProxy;





extern "C" NSString * const NSURLAuthenticationMethodDefault;






extern "C" NSString * const NSURLAuthenticationMethodHTTPBasic;





extern "C" NSString * const NSURLAuthenticationMethodHTTPDigest;





extern "C" NSString * const NSURLAuthenticationMethodHTMLForm;





extern "C" NSString * const NSURLAuthenticationMethodNTLM __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





extern "C" NSString * const NSURLAuthenticationMethodNegotiate __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





extern "C" NSString * const NSURLAuthenticationMethodClientCertificate __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





extern "C" NSString * const NSURLAuthenticationMethodServerTrust __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @class NSURLProtectionSpaceInternal;
#ifndef _REWRITER_typedef_NSURLProtectionSpaceInternal
#define _REWRITER_typedef_NSURLProtectionSpaceInternal
typedef struct objc_object NSURLProtectionSpaceInternal;
typedef struct {} _objc_exc_NSURLProtectionSpaceInternal;
#endif








#ifndef _REWRITER_typedef_NSURLProtectionSpace
#define _REWRITER_typedef_NSURLProtectionSpace
typedef struct objc_object NSURLProtectionSpace;
typedef struct {} _objc_exc_NSURLProtectionSpace;
#endif

struct NSURLProtectionSpace_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSURLProtectionSpaceInternal *__strong _internal;
};

// - (instancetype)initWithHost:(NSString *)host port:(NSInteger)port protocol:(nullable NSString *)protocol realm:(nullable NSString *)realm authenticationMethod:(nullable NSString *)authenticationMethod;
// - (instancetype)initWithProxyHost:(NSString *)host port:(NSInteger)port type:(nullable NSString *)type realm:(nullable NSString *)realm authenticationMethod:(nullable NSString *)authenticationMethod;
// @property (nullable, readonly, copy) NSString *realm;





// @property (readonly) BOOL receivesCredentialSecurely;





// @property (readonly) BOOL isProxy;





// @property (readonly, copy) NSString *host;





// @property (readonly) NSInteger port;





// @property (nullable, readonly, copy) NSString *proxyType;





// @property (nullable, readonly, copy) NSString *protocol;





// @property (readonly, copy) NSString *authenticationMethod;

/* @end */





// @interface NSURLProtectionSpace(NSClientCertificateSpace)





// @property (nullable, readonly, copy) NSArray<NSData *> *distinguishedNames __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */





// @interface NSURLProtectionSpace(NSServerTrustValidationSpace)





// @property (nullable, readonly) SecTrustRef serverTrust __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */

#pragma clang assume_nonnull end


// @class NSDictionary;
#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

// @class NSURLCredential;
#ifndef _REWRITER_typedef_NSURLCredential
#define _REWRITER_typedef_NSURLCredential
typedef struct objc_object NSURLCredential;
typedef struct {} _objc_exc_NSURLCredential;
#endif

// @class NSURLSessionTask;
#ifndef _REWRITER_typedef_NSURLSessionTask
#define _REWRITER_typedef_NSURLSessionTask
typedef struct objc_object NSURLSessionTask;
typedef struct {} _objc_exc_NSURLSessionTask;
#endif


// @class NSURLCredentialStorageInternal;
#ifndef _REWRITER_typedef_NSURLCredentialStorageInternal
#define _REWRITER_typedef_NSURLCredentialStorageInternal
typedef struct objc_object NSURLCredentialStorageInternal;
typedef struct {} _objc_exc_NSURLCredentialStorageInternal;
#endif


#pragma clang assume_nonnull begin







#ifndef _REWRITER_typedef_NSURLCredentialStorage
#define _REWRITER_typedef_NSURLCredentialStorage
typedef struct objc_object NSURLCredentialStorage;
typedef struct {} _objc_exc_NSURLCredentialStorage;
#endif

struct NSURLCredentialStorage_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSURLCredentialStorageInternal *__strong _internal;
};







@property (class, readonly, strong) NSURLCredentialStorage *sharedCredentialStorage;







// - (nullable NSDictionary<NSString *, NSURLCredential *> *)credentialsForProtectionSpace:(NSURLProtectionSpace *)space;







// @property (readonly, copy) NSDictionary<NSURLProtectionSpace *, NSDictionary<NSString *, NSURLCredential *> *> *allCredentials;
// - (void)setCredential:(NSURLCredential *)credential forProtectionSpace:(NSURLProtectionSpace *)space;
// - (void)removeCredential:(NSURLCredential *)credential forProtectionSpace:(NSURLProtectionSpace *)space;
// - (void)removeCredential:(NSURLCredential *)credential forProtectionSpace:(NSURLProtectionSpace *)space options:(nullable NSDictionary<NSString *, id> *)options __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






// - (nullable NSURLCredential *)defaultCredentialForProtectionSpace:(NSURLProtectionSpace *)space;
// - (void)setDefaultCredential:(NSURLCredential *)credential forProtectionSpace:(NSURLProtectionSpace *)space;

/* @end */


// @interface NSURLCredentialStorage (NSURLSessionTaskAdditions)
// - (void)getCredentialsForProtectionSpace:(NSURLProtectionSpace *)protectionSpace task:(NSURLSessionTask *)task completionHandler:(void (^) (NSDictionary<NSString *, NSURLCredential *> * _Nullable credentials))completionHandler __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)setCredential:(NSURLCredential *)credential forProtectionSpace:(NSURLProtectionSpace *)protectionSpace task:(NSURLSessionTask *)task __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)removeCredential:(NSURLCredential *)credential forProtectionSpace:(NSURLProtectionSpace *)protectionSpace options:(nullable NSDictionary<NSString *, id> *)options task:(NSURLSessionTask *)task __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)getDefaultCredentialForProtectionSpace:(NSURLProtectionSpace *)space task:(NSURLSessionTask *)task completionHandler:(void (^) (NSURLCredential * _Nullable credential))completionHandler __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)setDefaultCredential:(NSURLCredential *)credential forProtectionSpace:(NSURLProtectionSpace *)protectionSpace task:(NSURLSessionTask *)task __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
/* @end */







extern "C" NSNotificationName const NSURLCredentialStorageChangedNotification;







extern "C" NSString *const NSURLCredentialStorageRemoveSynchronizableCredentials __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
#pragma clang assume_nonnull end











extern "C" {
#pragma clang assume_nonnull begin
extern const CFStringRef kCFErrorDomainCFNetwork __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFErrorDomainWinSock __attribute__((availability(ios,introduced=2_0)));
typedef int CFNetworkErrors; enum {

  kCFHostErrorHostNotFound = 1,
  kCFHostErrorUnknown = 2,

  kCFSOCKSErrorUnknownClientVersion = 100,
  kCFSOCKSErrorUnsupportedServerVersion = 101,

  kCFSOCKS4ErrorRequestFailed = 110,
  kCFSOCKS4ErrorIdentdFailed = 111,
  kCFSOCKS4ErrorIdConflict = 112,
  kCFSOCKS4ErrorUnknownStatusCode = 113,

  kCFSOCKS5ErrorBadState = 120,
  kCFSOCKS5ErrorBadResponseAddr = 121,
  kCFSOCKS5ErrorBadCredentials = 122,
  kCFSOCKS5ErrorUnsupportedNegotiationMethod = 123,
  kCFSOCKS5ErrorNoAcceptableMethod = 124,

  kCFFTPErrorUnexpectedStatusCode = 200,

  kCFErrorHTTPAuthenticationTypeUnsupported = 300,
  kCFErrorHTTPBadCredentials = 301,
  kCFErrorHTTPConnectionLost = 302,
  kCFErrorHTTPParseFailure = 303,
  kCFErrorHTTPRedirectionLoopDetected = 304,
  kCFErrorHTTPBadURL = 305,
  kCFErrorHTTPProxyConnectionFailure = 306,
  kCFErrorHTTPBadProxyCredentials = 307,
  kCFErrorPACFileError = 308,
  kCFErrorPACFileAuth = 309,
  kCFErrorHTTPSProxyConnectionFailure = 310,
  kCFStreamErrorHTTPSProxyFailureUnexpectedResponseToCONNECTMethod = 311,


  kCFURLErrorBackgroundSessionInUseByAnotherProcess = -996,
  kCFURLErrorBackgroundSessionWasDisconnected = -997,
  kCFURLErrorUnknown = -998,
  kCFURLErrorCancelled = -999,
  kCFURLErrorBadURL = -1000,
  kCFURLErrorTimedOut = -1001,
  kCFURLErrorUnsupportedURL = -1002,
  kCFURLErrorCannotFindHost = -1003,
  kCFURLErrorCannotConnectToHost = -1004,
  kCFURLErrorNetworkConnectionLost = -1005,
  kCFURLErrorDNSLookupFailed = -1006,
  kCFURLErrorHTTPTooManyRedirects = -1007,
  kCFURLErrorResourceUnavailable = -1008,
  kCFURLErrorNotConnectedToInternet = -1009,
  kCFURLErrorRedirectToNonExistentLocation = -1010,
  kCFURLErrorBadServerResponse = -1011,
  kCFURLErrorUserCancelledAuthentication = -1012,
  kCFURLErrorUserAuthenticationRequired = -1013,
  kCFURLErrorZeroByteResource = -1014,
  kCFURLErrorCannotDecodeRawData = -1015,
  kCFURLErrorCannotDecodeContentData = -1016,
  kCFURLErrorCannotParseResponse = -1017,
  kCFURLErrorInternationalRoamingOff = -1018,
  kCFURLErrorCallIsActive = -1019,
  kCFURLErrorDataNotAllowed = -1020,
  kCFURLErrorRequestBodyStreamExhausted = -1021,
  kCFURLErrorAppTransportSecurityRequiresSecureConnection = -1022,
  kCFURLErrorFileDoesNotExist = -1100,
  kCFURLErrorFileIsDirectory = -1101,
  kCFURLErrorNoPermissionsToReadFile = -1102,
  kCFURLErrorDataLengthExceedsMaximum = -1103,
  kCFURLErrorFileOutsideSafeArea = -1104,

  kCFURLErrorSecureConnectionFailed = -1200,
  kCFURLErrorServerCertificateHasBadDate = -1201,
  kCFURLErrorServerCertificateUntrusted = -1202,
  kCFURLErrorServerCertificateHasUnknownRoot = -1203,
  kCFURLErrorServerCertificateNotYetValid = -1204,
  kCFURLErrorClientCertificateRejected = -1205,
  kCFURLErrorClientCertificateRequired = -1206,
  kCFURLErrorCannotLoadFromNetwork = -2000,

  kCFURLErrorCannotCreateFile = -3000,
  kCFURLErrorCannotOpenFile = -3001,
  kCFURLErrorCannotCloseFile = -3002,
  kCFURLErrorCannotWriteToFile = -3003,
  kCFURLErrorCannotRemoveFile = -3004,
  kCFURLErrorCannotMoveFile = -3005,
  kCFURLErrorDownloadDecodingFailedMidStream = -3006,
  kCFURLErrorDownloadDecodingFailedToComplete = -3007,


  kCFHTTPCookieCannotParseCookieFile = -4000,


  kCFNetServiceErrorUnknown = -72000L,
  kCFNetServiceErrorCollision = -72001L,
  kCFNetServiceErrorNotFound = -72002L,
  kCFNetServiceErrorInProgress = -72003L,
  kCFNetServiceErrorBadArgument = -72004L,
  kCFNetServiceErrorCancel = -72005L,
  kCFNetServiceErrorInvalid = -72006L,
  kCFNetServiceErrorTimeout = -72007L,
  kCFNetServiceErrorDNSServiceFailure = -73000L
};
extern const CFStringRef kCFURLErrorFailingURLErrorKey __attribute__((availability(ios,introduced=2_2)));
extern const CFStringRef kCFURLErrorFailingURLStringErrorKey __attribute__((availability(ios,introduced=2_2)));
extern const CFStringRef kCFGetAddrInfoFailureKey __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFSOCKSStatusCodeKey __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFSOCKSVersionKey __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFSOCKSNegotiationMethodKey __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFDNSServiceFailureKey __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFFTPStatusCodeKey __attribute__((availability(ios,introduced=2_0)));
#pragma clang assume_nonnull end


}



extern "C" {
#pragma clang assume_nonnull begin

#pragma pack(push, 2)








typedef struct __CFHost* CFHostRef;
extern const SInt32 kCFStreamErrorDomainNetDB __attribute__((availability(ios,introduced=2_0)));
extern const SInt32 kCFStreamErrorDomainSystemConfiguration __attribute__((availability(ios,introduced=2_0)));
typedef int CFHostInfoType; enum {





  kCFHostAddresses = 0,




  kCFHostNames = 1,





  kCFHostReachability = 2
};
struct CFHostClientContext {






  CFIndex version;





  void * _Nullable info;
  CFAllocatorRetainCallBack _Nullable retain;





  CFAllocatorReleaseCallBack _Nullable release;







  CFAllocatorCopyDescriptionCallBack _Nullable copyDescription;
};
typedef struct CFHostClientContext CFHostClientContext;
typedef void ( * CFHostClientCallBack)(CFHostRef theHost, CFHostInfoType typeInfo, const CFStreamError * _Nullable error, void * _Nullable info);
extern CFTypeID
CFHostGetTypeID(void) __attribute__((availability(ios,introduced=2_0)));
extern CFHostRef
CFHostCreateWithName(CFAllocatorRef _Nullable allocator, CFStringRef hostname) __attribute__((availability(ios,introduced=2_0)));
extern CFHostRef
CFHostCreateWithAddress(CFAllocatorRef _Nullable allocator, CFDataRef addr) __attribute__((availability(ios,introduced=2_0)));
extern CFHostRef
CFHostCreateCopy(CFAllocatorRef _Nullable alloc, CFHostRef host) __attribute__((availability(ios,introduced=2_0)));
extern Boolean
CFHostStartInfoResolution(CFHostRef theHost, CFHostInfoType info, CFStreamError * _Nullable error) __attribute__((availability(ios,introduced=2_0)));
extern _Nullable CFArrayRef
CFHostGetAddressing(CFHostRef theHost, Boolean * _Nullable hasBeenResolved) __attribute__((availability(ios,introduced=2_0)));
extern _Nullable CFArrayRef
CFHostGetNames(CFHostRef theHost, Boolean * _Nullable hasBeenResolved) __attribute__((availability(ios,introduced=2_0)));
extern _Nullable CFDataRef
CFHostGetReachability(CFHostRef theHost, Boolean * _Nullable hasBeenResolved) __attribute__((availability(ios,introduced=2_0)));
extern void
CFHostCancelInfoResolution(CFHostRef theHost, CFHostInfoType info) __attribute__((availability(ios,introduced=2_0)));
extern Boolean
CFHostSetClient(CFHostRef theHost, CFHostClientCallBack _Nullable clientCB, CFHostClientContext * _Nullable clientContext) __attribute__((availability(ios,introduced=2_0)));
extern void
CFHostScheduleWithRunLoop(CFHostRef theHost, CFRunLoopRef runLoop, CFStringRef runLoopMode) __attribute__((availability(ios,introduced=2_0)));
extern void
CFHostUnscheduleFromRunLoop(CFHostRef theHost, CFRunLoopRef runLoop, CFStringRef runLoopMode) __attribute__((availability(ios,introduced=2_0)));



#pragma pack(pop)
#pragma clang assume_nonnull end

}



extern "C" {
#pragma clang assume_nonnull begin

#pragma pack(push, 2)
typedef struct __CFNetService* CFNetServiceRef;
typedef struct __CFNetServiceMonitor* CFNetServiceMonitorRef;
typedef struct __CFNetServiceBrowser* CFNetServiceBrowserRef;
extern const SInt32 kCFStreamErrorDomainMach __attribute__((availability(ios,introduced=2_0)));
extern const SInt32 kCFStreamErrorDomainNetServices __attribute__((availability(ios,introduced=2_0)));
typedef int CFNetServicesError; enum {




  kCFNetServicesErrorUnknown = -72000L,






  kCFNetServicesErrorCollision = -72001L,




  kCFNetServicesErrorNotFound = -72002L,





  kCFNetServicesErrorInProgress = -72003L,




  kCFNetServicesErrorBadArgument = -72004L,




  kCFNetServicesErrorCancel = -72005L,





  kCFNetServicesErrorInvalid = -72006L,





  kCFNetServicesErrorTimeout = -72007L
};
typedef int CFNetServiceMonitorType; enum {




  kCFNetServiceMonitorTXT = 1
};
typedef CFOptionFlags CFNetServiceRegisterFlags; enum {




  kCFNetServiceFlagNoAutoRename = 1
};
typedef CFOptionFlags CFNetServiceBrowserFlags; enum {




  kCFNetServiceFlagMoreComing = 1,




  kCFNetServiceFlagIsDomain = 2,




  kCFNetServiceFlagIsDefault = 4,




  kCFNetServiceFlagIsRegistrationDomain __attribute__((availability(ios,introduced=2_0,deprecated=2_0,message="" ))) = 4,




  kCFNetServiceFlagRemove = 8
};
struct CFNetServiceClientContext {






  CFIndex version;





  void * _Nullable info;
  CFAllocatorRetainCallBack _Nullable retain;





  CFAllocatorReleaseCallBack _Nullable release;







  CFAllocatorCopyDescriptionCallBack _Nullable copyDescription;
};
typedef struct CFNetServiceClientContext CFNetServiceClientContext;
typedef void ( * CFNetServiceClientCallBack)(CFNetServiceRef theService, CFStreamError * _Nullable error, void * _Nullable info);
typedef void ( * CFNetServiceMonitorClientCallBack)(CFNetServiceMonitorRef theMonitor, CFNetServiceRef _Nullable theService, CFNetServiceMonitorType typeInfo, CFDataRef _Nullable rdata, CFStreamError * _Nullable error, void * _Nullable info);
typedef void ( * CFNetServiceBrowserClientCallBack)(CFNetServiceBrowserRef browser, CFOptionFlags flags, CFTypeRef _Nullable domainOrService, CFStreamError * _Nullable error, void * _Nullable info);
extern CFTypeID
CFNetServiceGetTypeID(void) __attribute__((availability(ios,introduced=2_0)));
extern CFTypeID
CFNetServiceMonitorGetTypeID(void) __attribute__((availability(ios,introduced=2_0)));
extern CFTypeID
CFNetServiceBrowserGetTypeID(void) __attribute__((availability(ios,introduced=2_0)));
extern CFNetServiceRef
CFNetServiceCreate(CFAllocatorRef _Nullable alloc, CFStringRef domain, CFStringRef serviceType, CFStringRef name, SInt32 port) __attribute__((availability(ios,introduced=2_0)));
extern CFNetServiceRef
CFNetServiceCreateCopy(CFAllocatorRef _Nullable alloc, CFNetServiceRef service) __attribute__((availability(ios,introduced=2_0)));
extern CFStringRef
CFNetServiceGetDomain(CFNetServiceRef theService) __attribute__((availability(ios,introduced=2_0)));
extern CFStringRef
CFNetServiceGetType(CFNetServiceRef theService) __attribute__((availability(ios,introduced=2_0)));
extern CFStringRef
CFNetServiceGetName(CFNetServiceRef theService) __attribute__((availability(ios,introduced=2_0)));
extern Boolean
CFNetServiceRegisterWithOptions(CFNetServiceRef theService, CFOptionFlags options, CFStreamError * _Nullable error) __attribute__((availability(ios,introduced=2_0)));
extern Boolean
CFNetServiceResolveWithTimeout(CFNetServiceRef theService, CFTimeInterval timeout, CFStreamError * _Nullable error) __attribute__((availability(ios,introduced=2_0)));
extern void
CFNetServiceCancel(CFNetServiceRef theService) __attribute__((availability(ios,introduced=2_0)));
extern _Nullable CFStringRef
CFNetServiceGetTargetHost(CFNetServiceRef theService) __attribute__((availability(ios,introduced=2_0)));
extern SInt32
CFNetServiceGetPortNumber(CFNetServiceRef theService) __attribute__((availability(ios,introduced=2_0)));
extern _Nullable CFArrayRef
CFNetServiceGetAddressing(CFNetServiceRef theService) __attribute__((availability(ios,introduced=2_0)));
extern _Nullable CFDataRef
CFNetServiceGetTXTData(CFNetServiceRef theService) __attribute__((availability(ios,introduced=2_0)));
extern Boolean
CFNetServiceSetTXTData(CFNetServiceRef theService, CFDataRef txtRecord) __attribute__((availability(ios,introduced=2_0)));
extern _Nullable CFDictionaryRef
CFNetServiceCreateDictionaryWithTXTData(CFAllocatorRef _Nullable alloc, CFDataRef txtRecord) __attribute__((availability(ios,introduced=2_0)));
extern _Nullable CFDataRef
CFNetServiceCreateTXTDataWithDictionary(CFAllocatorRef _Nullable alloc, CFDictionaryRef keyValuePairs) __attribute__((availability(ios,introduced=2_0)));
extern Boolean
CFNetServiceSetClient(CFNetServiceRef theService, CFNetServiceClientCallBack _Nullable clientCB, CFNetServiceClientContext * _Nullable clientContext) __attribute__((availability(ios,introduced=2_0)));
extern void
CFNetServiceScheduleWithRunLoop(CFNetServiceRef theService, CFRunLoopRef runLoop, CFStringRef runLoopMode) __attribute__((availability(ios,introduced=2_0)));
extern void
CFNetServiceUnscheduleFromRunLoop(CFNetServiceRef theService, CFRunLoopRef runLoop, CFStringRef runLoopMode) __attribute__((availability(ios,introduced=2_0)));
extern CFNetServiceMonitorRef
CFNetServiceMonitorCreate(
  CFAllocatorRef _Nullable alloc,
  CFNetServiceRef theService,
  CFNetServiceMonitorClientCallBack clientCB,
  CFNetServiceClientContext * clientContext) __attribute__((availability(ios,introduced=2_0)));
extern void
CFNetServiceMonitorInvalidate(CFNetServiceMonitorRef monitor) __attribute__((availability(ios,introduced=2_0)));
extern Boolean
CFNetServiceMonitorStart(CFNetServiceMonitorRef monitor, CFNetServiceMonitorType recordType, CFStreamError * _Nullable error) __attribute__((availability(ios,introduced=2_0)));
extern void
CFNetServiceMonitorStop(CFNetServiceMonitorRef monitor, CFStreamError * _Nullable error) __attribute__((availability(ios,introduced=2_0)));
extern void
CFNetServiceMonitorScheduleWithRunLoop(CFNetServiceMonitorRef monitor, CFRunLoopRef runLoop, CFStringRef runLoopMode) __attribute__((availability(ios,introduced=2_0)));
extern void
CFNetServiceMonitorUnscheduleFromRunLoop(CFNetServiceMonitorRef monitor, CFRunLoopRef runLoop, CFStringRef runLoopMode) __attribute__((availability(ios,introduced=2_0)));
extern CFNetServiceBrowserRef
CFNetServiceBrowserCreate(CFAllocatorRef _Nullable alloc, CFNetServiceBrowserClientCallBack clientCB, CFNetServiceClientContext *clientContext) __attribute__((availability(ios,introduced=2_0)));
extern void
CFNetServiceBrowserInvalidate(CFNetServiceBrowserRef browser) __attribute__((availability(ios,introduced=2_0)));
extern Boolean
CFNetServiceBrowserSearchForDomains(CFNetServiceBrowserRef browser, Boolean registrationDomains, CFStreamError * _Nullable error) __attribute__((availability(ios,introduced=2_0)));
extern Boolean
CFNetServiceBrowserSearchForServices(CFNetServiceBrowserRef browser, CFStringRef domain, CFStringRef serviceType, CFStreamError * _Nullable error) __attribute__((availability(ios,introduced=2_0)));
extern void
CFNetServiceBrowserStopSearch(CFNetServiceBrowserRef browser, CFStreamError * _Nullable error) __attribute__((availability(ios,introduced=2_0)));
extern void
CFNetServiceBrowserScheduleWithRunLoop(CFNetServiceBrowserRef browser, CFRunLoopRef runLoop, CFStringRef runLoopMode) __attribute__((availability(ios,introduced=2_0)));
extern void
CFNetServiceBrowserUnscheduleFromRunLoop(CFNetServiceBrowserRef browser, CFRunLoopRef runLoop, CFStringRef runLoopMode) __attribute__((availability(ios,introduced=2_0)));
extern Boolean
CFNetServiceRegister(CFNetServiceRef theService, CFStreamError * _Nullable error) __attribute__((availability(ios,introduced=NA,deprecated=NA,message="" )));
extern Boolean
CFNetServiceResolve(CFNetServiceRef theService, CFStreamError * _Nullable error) __attribute__((availability(ios,introduced=NA,deprecated=NA,message="" )));
extern _Nullable CFStringRef
CFNetServiceGetProtocolSpecificInformation(CFNetServiceRef theService) __attribute__((availability(ios,introduced=NA,deprecated=NA,message="" )));
extern void
CFNetServiceSetProtocolSpecificInformation(CFNetServiceRef theService, CFStringRef _Nullable theInfo) __attribute__((availability(ios,introduced=NA,deprecated=NA,message="" )));





#pragma pack(pop)
#pragma clang assume_nonnull end

}








extern "C" {
#pragma clang assume_nonnull begin
extern const CFStringRef kCFStreamPropertySSLContext __attribute__((availability(ios,introduced=5_0)));
extern const CFStringRef kCFStreamPropertySSLPeerTrust __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFStreamSSLValidatesCertificateChain __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFStreamPropertySSLSettings __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFStreamSSLLevel __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFStreamSSLPeerName __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFStreamSSLCertificates __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFStreamSSLIsServer __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFStreamNetworkServiceType __attribute__((availability(ios,introduced=4_0)));


extern const CFStringRef kCFStreamNetworkServiceTypeVideo __attribute__((availability(ios,introduced=5_0)));
extern const CFStringRef kCFStreamNetworkServiceTypeVoice __attribute__((availability(ios,introduced=5_0)));
extern const CFStringRef kCFStreamNetworkServiceTypeBackground __attribute__((availability(ios,introduced=5_0)));
extern const CFStringRef kCFStreamNetworkServiceTypeCallSignaling __attribute__((availability(ios,introduced=10_0)));


extern const CFStringRef kCFStreamNetworkServiceTypeVoIP __attribute__((availability(ios,introduced=4_0,deprecated=9_0,message="" "use PushKit for VoIP control purposes")));
extern const CFStringRef kCFStreamPropertyNoCellular __attribute__((availability(ios,introduced=5_0)));
extern const CFStringRef kCFStreamPropertyConnectionIsCellular __attribute__((availability(ios,introduced=6_0)));
extern const CFIndex kCFStreamErrorDomainWinSock __attribute__((availability(ios,introduced=2_0)));
extern const int kCFStreamErrorDomainSOCKS __attribute__((availability(ios,introduced=2_0)));



static __inline__ __attribute__((always_inline))
SInt32 CFSocketStreamSOCKSGetErrorSubdomain(const CFStreamError* error) {
 return ((error->error >> 16) & 0x0000FFFF);
}

static __inline__ __attribute__((always_inline))
SInt32 CFSocketStreamSOCKSGetError(const CFStreamError* error) {
 return (error->error & 0x0000FFFF);
}

enum {
  kCFStreamErrorSOCKSSubDomainNone = 0,
  kCFStreamErrorSOCKSSubDomainVersionCode = 1,
  kCFStreamErrorSOCKS4SubDomainResponse = 2,
  kCFStreamErrorSOCKS5SubDomainUserPass = 3,
  kCFStreamErrorSOCKS5SubDomainMethod = 4,
  kCFStreamErrorSOCKS5SubDomainResponse = 5
};



enum {
  kCFStreamErrorSOCKS5BadResponseAddr = 1,
  kCFStreamErrorSOCKS5BadState = 2,
  kCFStreamErrorSOCKSUnknownClientVersion = 3
};


enum {
  kCFStreamErrorSOCKS4RequestFailed = 91,
  kCFStreamErrorSOCKS4IdentdFailed = 92,
  kCFStreamErrorSOCKS4IdConflict = 93
};


enum {
  kSOCKS5NoAcceptableMethod = 0xFF
};
extern const CFStringRef kCFStreamPropertySOCKSProxy __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFStreamPropertySOCKSProxyHost __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFStreamPropertySOCKSProxyPort __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFStreamPropertySOCKSVersion __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFStreamSocketSOCKSVersion4 __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFStreamSocketSOCKSVersion5 __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFStreamPropertySOCKSUser __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFStreamPropertySOCKSPassword __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFStreamPropertyProxyLocalBypass __attribute__((availability(ios,introduced=2_0)));
extern const int kCFStreamErrorDomainSSL __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFStreamPropertySocketSecurityLevel __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFStreamSocketSecurityLevelNone __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFStreamSocketSecurityLevelSSLv2 __attribute__((availability(ios,introduced=2_0,deprecated=10_0,message="" )));
extern const CFStringRef kCFStreamSocketSecurityLevelSSLv3 __attribute__((availability(ios,introduced=2_0,deprecated=10_0,message="" )));
extern const CFStringRef kCFStreamSocketSecurityLevelTLSv1 __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFStreamSocketSecurityLevelNegotiatedSSL __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFStreamPropertyShouldCloseNativeSocket __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFStreamPropertySocketRemoteHost __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFStreamPropertySocketRemoteNetService __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFStreamPropertySocketExtendedBackgroundIdleMode __attribute__((availability(ios,introduced=9_0)));
extern void
CFStreamCreatePairWithSocketToCFHost(
  CFAllocatorRef _Nullable alloc,
  CFHostRef host,
  SInt32 port,
  CFReadStreamRef _Nullable * _Nullable readStream,
  CFWriteStreamRef _Nullable * _Nullable writeStream) __attribute__((availability(ios,introduced=2_0)));
extern void
CFStreamCreatePairWithSocketToNetService(
  CFAllocatorRef _Nullable alloc,
  CFNetServiceRef service,
  CFReadStreamRef _Nullable * _Nullable readStream,
  CFWriteStreamRef _Nullable * _Nullable writeStream) __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFStreamPropertySSLPeerCertificates __attribute__((availability(ios,introduced=2_0,deprecated=4_0,message="" )));
extern const CFStringRef kCFStreamSSLAllowsExpiredCertificates __attribute__((availability(ios,introduced=2_0,deprecated=4_0,message="" )));
extern const CFStringRef kCFStreamSSLAllowsExpiredRoots __attribute__((availability(ios,introduced=2_0,deprecated=4_0,message="" )));
extern const CFStringRef kCFStreamSSLAllowsAnyRoot __attribute__((availability(ios,introduced=2_0,deprecated=4_0,message="" )));
#pragma clang assume_nonnull end






}



extern "C" {
#pragma clang assume_nonnull begin








extern const SInt32 kCFStreamErrorDomainFTP __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFStreamPropertyFTPUserName __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
extern const CFStringRef kCFStreamPropertyFTPPassword __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
extern const CFStringRef kCFStreamPropertyFTPUsePassiveMode __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
extern const CFStringRef kCFStreamPropertyFTPResourceSize __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
extern const CFStringRef kCFStreamPropertyFTPFetchResourceInfo __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
extern const CFStringRef kCFStreamPropertyFTPFileTransferOffset __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
extern const CFStringRef kCFStreamPropertyFTPAttemptPersistentConnection __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
extern const CFStringRef kCFStreamPropertyFTPProxy __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
extern const CFStringRef kCFStreamPropertyFTPProxyHost __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
extern const CFStringRef kCFStreamPropertyFTPProxyPort __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));





extern const CFStringRef kCFStreamPropertyFTPProxyUser __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));





extern const CFStringRef kCFStreamPropertyFTPProxyPassword __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
extern const CFStringRef kCFFTPResourceMode __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
extern const CFStringRef kCFFTPResourceName __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
extern const CFStringRef kCFFTPResourceOwner __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
extern const CFStringRef kCFFTPResourceGroup __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
extern const CFStringRef kCFFTPResourceLink __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
extern const CFStringRef kCFFTPResourceSize __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
extern const CFStringRef kCFFTPResourceType __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
extern const CFStringRef kCFFTPResourceModDate __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
extern CFReadStreamRef
CFReadStreamCreateWithFTPURL(CFAllocatorRef _Nullable alloc, CFURLRef ftpURL) __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
extern CFIndex
CFFTPCreateParsedResourceListing(CFAllocatorRef _Nullable alloc, const UInt8 *buffer, CFIndex bufferLength, CFDictionaryRef _Nullable * _Nullable parsed) __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
extern CFWriteStreamRef
CFWriteStreamCreateWithFTPURL(CFAllocatorRef _Nullable alloc, CFURLRef ftpURL) __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSessionAPI for ftp requests")));
#pragma clang assume_nonnull end


}







extern "C" {
#pragma clang assume_nonnull begin








extern const CFStringRef kCFHTTPVersion1_0 __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFHTTPVersion1_1 __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFHTTPVersion2_0 __attribute__((availability(ios,introduced=8_0)));
extern const CFStringRef kCFHTTPAuthenticationSchemeBasic __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFHTTPAuthenticationSchemeDigest __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFHTTPAuthenticationSchemeNTLM __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFHTTPAuthenticationSchemeKerberos __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFHTTPAuthenticationSchemeNegotiate __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFHTTPAuthenticationSchemeNegotiate2 __attribute__((availability(ios,introduced=3_0)));
extern const CFStringRef kCFHTTPAuthenticationSchemeXMobileMeAuthToken __attribute__((availability(ios,introduced=4_3)));
extern const CFStringRef kCFHTTPAuthenticationSchemeOAuth1 __attribute__((availability(ios,introduced=7_0)));
typedef struct __CFHTTPMessage* CFHTTPMessageRef;
extern CFTypeID
CFHTTPMessageGetTypeID(void) __attribute__((availability(ios,introduced=2_0)));
extern CFHTTPMessageRef
CFHTTPMessageCreateRequest(CFAllocatorRef _Nullable alloc, CFStringRef requestMethod, CFURLRef url, CFStringRef httpVersion) __attribute__((availability(ios,introduced=2_0)));
extern CFHTTPMessageRef
CFHTTPMessageCreateResponse(
  CFAllocatorRef _Nullable alloc,
  CFIndex statusCode,
  CFStringRef _Nullable statusDescription,
  CFStringRef httpVersion) __attribute__((availability(ios,introduced=2_0)));
extern CFHTTPMessageRef
CFHTTPMessageCreateEmpty(CFAllocatorRef _Nullable alloc, Boolean isRequest) __attribute__((availability(ios,introduced=2_0)));
extern CFHTTPMessageRef
CFHTTPMessageCreateCopy(CFAllocatorRef _Nullable alloc, CFHTTPMessageRef message) __attribute__((availability(ios,introduced=2_0)));
extern Boolean
CFHTTPMessageIsRequest(CFHTTPMessageRef message) __attribute__((availability(ios,introduced=2_0)));
extern CFStringRef
CFHTTPMessageCopyVersion(CFHTTPMessageRef message) __attribute__((availability(ios,introduced=2_0)));
extern _Nullable CFDataRef
CFHTTPMessageCopyBody(CFHTTPMessageRef message) __attribute__((availability(ios,introduced=2_0)));
extern void
CFHTTPMessageSetBody(CFHTTPMessageRef message, CFDataRef bodyData) __attribute__((availability(ios,introduced=2_0)));
extern _Nullable CFStringRef
CFHTTPMessageCopyHeaderFieldValue(CFHTTPMessageRef message, CFStringRef headerField) __attribute__((availability(ios,introduced=2_0)));
extern _Nullable CFDictionaryRef
CFHTTPMessageCopyAllHeaderFields(CFHTTPMessageRef message) __attribute__((availability(ios,introduced=2_0)));
extern void
CFHTTPMessageSetHeaderFieldValue(CFHTTPMessageRef message, CFStringRef headerField, CFStringRef _Nullable value) __attribute__((availability(ios,introduced=2_0)));
extern Boolean
CFHTTPMessageAppendBytes(CFHTTPMessageRef message, const UInt8 *newBytes, CFIndex numBytes) __attribute__((availability(ios,introduced=2_0)));
extern Boolean
CFHTTPMessageIsHeaderComplete(CFHTTPMessageRef message) __attribute__((availability(ios,introduced=2_0)));
extern _Nullable CFDataRef
CFHTTPMessageCopySerializedMessage(CFHTTPMessageRef message) __attribute__((availability(ios,introduced=2_0)));
extern _Nullable CFURLRef
CFHTTPMessageCopyRequestURL(CFHTTPMessageRef request) __attribute__((availability(ios,introduced=2_0)));
extern _Nullable CFStringRef
CFHTTPMessageCopyRequestMethod(CFHTTPMessageRef request) __attribute__((availability(ios,introduced=2_0)));
extern Boolean
CFHTTPMessageAddAuthentication(
  CFHTTPMessageRef request,
  CFHTTPMessageRef _Nullable authenticationFailureResponse,
  CFStringRef username,
  CFStringRef password,
  CFStringRef _Nullable authenticationScheme,
  Boolean forProxy) __attribute__((availability(ios,introduced=2_0)));
extern CFIndex
CFHTTPMessageGetResponseStatusCode(CFHTTPMessageRef response) __attribute__((availability(ios,introduced=2_0)));
extern _Nullable CFStringRef
CFHTTPMessageCopyResponseStatusLine(CFHTTPMessageRef response) __attribute__((availability(ios,introduced=2_0)));
#pragma clang assume_nonnull end



}



extern "C" {
#pragma clang assume_nonnull begin
extern const SInt32 kCFStreamErrorDomainHTTP __attribute__((availability(ios,introduced=2_0)));







typedef int CFStreamErrorHTTP; enum {




  kCFStreamErrorHTTPParseFailure = -1,




  kCFStreamErrorHTTPRedirectionLoop = -2,




  kCFStreamErrorHTTPBadURL = -3
};
extern const CFStringRef kCFStreamPropertyHTTPResponseHeader __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSession API for http requests")));
extern const CFStringRef kCFStreamPropertyHTTPFinalURL __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSession API for http requests")));
extern const CFStringRef kCFStreamPropertyHTTPFinalRequest __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSession API for http requests")));
extern const CFStringRef kCFStreamPropertyHTTPProxy __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSession API for http requests")));
extern const CFStringRef kCFStreamPropertyHTTPProxyHost __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSession API for http requests")));
extern const CFStringRef kCFStreamPropertyHTTPProxyPort __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSession API for http requests")));
extern const CFStringRef kCFStreamPropertyHTTPSProxyHost __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSession API for http requests")));
extern const CFStringRef kCFStreamPropertyHTTPSProxyPort __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSession API for http requests")));
extern const CFStringRef kCFStreamPropertyHTTPShouldAutoredirect __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSession API for http requests")));
extern const CFStringRef kCFStreamPropertyHTTPAttemptPersistentConnection __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSession API for http requests")));
extern const CFStringRef kCFStreamPropertyHTTPRequestBytesWrittenCount __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSession API for http requests")));
extern CFReadStreamRef
CFReadStreamCreateForHTTPRequest(CFAllocatorRef _Nullable alloc, CFHTTPMessageRef request) __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSession API for http requests")));
extern CFReadStreamRef
CFReadStreamCreateForStreamedHTTPRequest(CFAllocatorRef _Nullable alloc, CFHTTPMessageRef requestHeaders, CFReadStreamRef requestBody) __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use NSURLSession API for http requests")));
extern void
CFHTTPReadStreamSetRedirectsAutomatically(CFReadStreamRef httpStream, Boolean shouldAutoRedirect) __attribute__((availability(ios,introduced=NA,deprecated=NA,message="" )));
#pragma clang assume_nonnull end







}



extern "C" {
#pragma clang assume_nonnull begin








typedef struct _CFHTTPAuthentication* CFHTTPAuthenticationRef;
typedef int CFStreamErrorHTTPAuthentication; enum {





  kCFStreamErrorHTTPAuthenticationTypeUnsupported = -1000,





  kCFStreamErrorHTTPAuthenticationBadUserName = -1001,





  kCFStreamErrorHTTPAuthenticationBadPassword = -1002
};
extern const CFStringRef kCFHTTPAuthenticationUsername __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFHTTPAuthenticationPassword __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFHTTPAuthenticationAccountDomain __attribute__((availability(ios,introduced=2_0)));
extern CFTypeID
CFHTTPAuthenticationGetTypeID(void) __attribute__((availability(ios,introduced=2_0)));
extern CFHTTPAuthenticationRef
CFHTTPAuthenticationCreateFromResponse(CFAllocatorRef _Nullable alloc, CFHTTPMessageRef response) __attribute__((availability(ios,introduced=2_0)));
extern Boolean
CFHTTPAuthenticationIsValid(CFHTTPAuthenticationRef auth, CFStreamError * _Nullable error) __attribute__((availability(ios,introduced=2_0)));
extern Boolean
CFHTTPAuthenticationAppliesToRequest(CFHTTPAuthenticationRef auth, CFHTTPMessageRef request) __attribute__((availability(ios,introduced=2_0)));
extern Boolean
CFHTTPAuthenticationRequiresOrderedRequests(CFHTTPAuthenticationRef auth) __attribute__((availability(ios,introduced=2_0)));
extern Boolean
CFHTTPMessageApplyCredentials(
  CFHTTPMessageRef request,
  CFHTTPAuthenticationRef auth,
  CFStringRef _Nullable username,
  CFStringRef _Nullable password,
  CFStreamError * _Nullable error) __attribute__((availability(ios,introduced=2_0)));
extern Boolean
CFHTTPMessageApplyCredentialDictionary(
  CFHTTPMessageRef request,
  CFHTTPAuthenticationRef auth,
  CFDictionaryRef dict,
  CFStreamError * _Nullable error) __attribute__((availability(ios,introduced=2_0)));
extern CFStringRef
CFHTTPAuthenticationCopyRealm(CFHTTPAuthenticationRef auth) __attribute__((availability(ios,introduced=2_0)));
extern CFArrayRef
CFHTTPAuthenticationCopyDomains(CFHTTPAuthenticationRef auth) __attribute__((availability(ios,introduced=2_0)));
extern CFStringRef
CFHTTPAuthenticationCopyMethod(CFHTTPAuthenticationRef auth) __attribute__((availability(ios,introduced=2_0)));
extern Boolean
CFHTTPAuthenticationRequiresUserNameAndPassword(CFHTTPAuthenticationRef auth) __attribute__((availability(ios,introduced=2_0)));
extern Boolean
CFHTTPAuthenticationRequiresAccountDomain(CFHTTPAuthenticationRef auth) __attribute__((availability(ios,introduced=2_0)));
#pragma clang assume_nonnull end



}



extern "C" {
#pragma clang assume_nonnull begin








typedef struct __CFNetDiagnostic* CFNetDiagnosticRef;







typedef int CFNetDiagnosticStatusValues; enum {




  kCFNetDiagnosticNoErr = 0,




  kCFNetDiagnosticErr = -66560L,




  kCFNetDiagnosticConnectionUp = -66559L,
  kCFNetDiagnosticConnectionIndeterminate = -66558L,




  kCFNetDiagnosticConnectionDown = -66557L

} __attribute__((availability(ios,introduced=2_0,deprecated=11_0,message="" )));
typedef CFIndex CFNetDiagnosticStatus __attribute__((availability(ios,introduced=2_0,deprecated=11_0,message="" )));
extern CFNetDiagnosticRef
CFNetDiagnosticCreateWithStreams(CFAllocatorRef _Nullable alloc, CFReadStreamRef _Nullable readStream, CFWriteStreamRef _Nullable writeStream) __attribute__((availability(ios,introduced=2_0,deprecated=11_0,message="" )));
extern CFNetDiagnosticRef
CFNetDiagnosticCreateWithURL(CFAllocatorRef alloc, CFURLRef url) __attribute__((availability(ios,introduced=2_0,deprecated=11_0,message="" )));
extern void
CFNetDiagnosticSetName(CFNetDiagnosticRef details, CFStringRef name) __attribute__((availability(ios,introduced=2_0,deprecated=11_0,message="" )));
extern CFNetDiagnosticStatus
CFNetDiagnosticDiagnoseProblemInteractively(CFNetDiagnosticRef details) __attribute__((availability(ios,introduced=2_0,deprecated=11_0,message="" )));
extern CFNetDiagnosticStatus
CFNetDiagnosticCopyNetworkStatusPassively(CFNetDiagnosticRef details, CFStringRef _Nullable * _Nullable description) __attribute__((availability(ios,introduced=2_0,deprecated=11_0,message="" )));
#pragma clang assume_nonnull end



}







extern "C" {
#pragma clang assume_nonnull begin
extern _Nullable CFDictionaryRef
CFNetworkCopySystemProxySettings(void) __attribute__((availability(ios,introduced=2_0)));
extern CFArrayRef
CFNetworkCopyProxiesForURL(CFURLRef url, CFDictionaryRef proxySettings) __attribute__((availability(ios,introduced=2_0)));
typedef void ( * CFProxyAutoConfigurationResultCallback)(void *client, CFArrayRef proxyList, CFErrorRef _Nullable error);
extern _Nullable CFArrayRef
CFNetworkCopyProxiesForAutoConfigurationScript(CFStringRef proxyAutoConfigurationScript, CFURLRef targetURL, CFErrorRef * _Nullable error) __attribute__((availability(ios,introduced=2_0)));
extern CFRunLoopSourceRef
CFNetworkExecuteProxyAutoConfigurationScript(
  CFStringRef proxyAutoConfigurationScript,
  CFURLRef targetURL,
  CFProxyAutoConfigurationResultCallback cb,
  CFStreamClientContext * clientContext) __attribute__((availability(ios,introduced=2_0)));
extern CFRunLoopSourceRef
CFNetworkExecuteProxyAutoConfigurationURL(
  CFURLRef proxyAutoConfigURL,
  CFURLRef targetURL,
  CFProxyAutoConfigurationResultCallback cb,
  CFStreamClientContext * clientContext) __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFProxyTypeKey __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFProxyHostNameKey __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFProxyPortNumberKey __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFProxyAutoConfigurationURLKey __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFProxyAutoConfigurationJavaScriptKey __attribute__((availability(ios,introduced=3_0)));
extern const CFStringRef kCFProxyUsernameKey __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFProxyPasswordKey __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFProxyTypeNone __attribute__((availability(ios,introduced=2_0)));





extern const CFStringRef kCFProxyTypeHTTP __attribute__((availability(ios,introduced=2_0)));





extern const CFStringRef kCFProxyTypeHTTPS __attribute__((availability(ios,introduced=2_0)));





extern const CFStringRef kCFProxyTypeSOCKS __attribute__((availability(ios,introduced=2_0)));





extern const CFStringRef kCFProxyTypeFTP __attribute__((availability(ios,introduced=2_0)));





extern const CFStringRef kCFProxyTypeAutoConfigurationURL __attribute__((availability(ios,introduced=2_0)));





extern const CFStringRef kCFProxyTypeAutoConfigurationJavaScript __attribute__((availability(ios,introduced=3_0)));





extern const CFStringRef kCFProxyAutoConfigurationHTTPResponseKey __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFNetworkProxiesExceptionsList __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kCFNetworkProxiesExcludeSimpleHostnames __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kCFNetworkProxiesFTPEnable __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kCFNetworkProxiesFTPPassive __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kCFNetworkProxiesFTPPort __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kCFNetworkProxiesFTPProxy __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kCFNetworkProxiesGopherEnable __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kCFNetworkProxiesGopherPort __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kCFNetworkProxiesGopherProxy __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kCFNetworkProxiesHTTPEnable __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFNetworkProxiesHTTPPort __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFNetworkProxiesHTTPProxy __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFNetworkProxiesHTTPSEnable __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kCFNetworkProxiesHTTPSPort __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kCFNetworkProxiesHTTPSProxy __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kCFNetworkProxiesRTSPEnable __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kCFNetworkProxiesRTSPPort __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kCFNetworkProxiesRTSPProxy __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kCFNetworkProxiesSOCKSEnable __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kCFNetworkProxiesSOCKSPort __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kCFNetworkProxiesSOCKSProxy __attribute__((availability(ios,introduced=NA)));
extern const CFStringRef kCFNetworkProxiesProxyAutoConfigEnable __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFNetworkProxiesProxyAutoConfigURLString __attribute__((availability(ios,introduced=2_0)));
extern const CFStringRef kCFNetworkProxiesProxyAutoConfigJavaScript __attribute__((availability(ios,introduced=3_0)));
extern const CFStringRef kCFNetworkProxiesProxyAutoDiscoveryEnable __attribute__((availability(ios,introduced=NA)));
#pragma clang assume_nonnull end


}
// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif


#pragma clang assume_nonnull begin





extern "C" NSErrorDomain const NSURLErrorDomain;





extern "C" NSString * const NSURLErrorFailingURLErrorKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






extern "C" NSString * const NSURLErrorFailingURLStringErrorKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






extern "C" NSString * const NSErrorFailingURLStringKey __attribute__((availability(macos,introduced=10.0,deprecated=10.6,message="Use NSURLErrorFailingURLStringErrorKey instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=4.0,message="Use NSURLErrorFailingURLStringErrorKey instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use NSURLErrorFailingURLStringErrorKey instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use NSURLErrorFailingURLStringErrorKey instead")));





extern "C" NSString * const NSURLErrorFailingURLPeerTrustErrorKey __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






extern "C" NSString * const NSURLErrorBackgroundTaskCancelledReasonKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






enum
{
    NSURLErrorCancelledReasonUserForceQuitApplication = 0,
    NSURLErrorCancelledReasonBackgroundUpdatesDisabled = 1,
    NSURLErrorCancelledReasonInsufficientSystemResources __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 2,

} __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





enum
{
    NSURLErrorUnknown = -1,
    NSURLErrorCancelled = -999,
    NSURLErrorBadURL = -1000,
    NSURLErrorTimedOut = -1001,
    NSURLErrorUnsupportedURL = -1002,
    NSURLErrorCannotFindHost = -1003,
    NSURLErrorCannotConnectToHost = -1004,
    NSURLErrorNetworkConnectionLost = -1005,
    NSURLErrorDNSLookupFailed = -1006,
    NSURLErrorHTTPTooManyRedirects = -1007,
    NSURLErrorResourceUnavailable = -1008,
    NSURLErrorNotConnectedToInternet = -1009,
    NSURLErrorRedirectToNonExistentLocation = -1010,
    NSURLErrorBadServerResponse = -1011,
    NSURLErrorUserCancelledAuthentication = -1012,
    NSURLErrorUserAuthenticationRequired = -1013,
    NSURLErrorZeroByteResource = -1014,
    NSURLErrorCannotDecodeRawData = -1015,
    NSURLErrorCannotDecodeContentData = -1016,
    NSURLErrorCannotParseResponse = -1017,
    NSURLErrorAppTransportSecurityRequiresSecureConnection __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = -1022,
    NSURLErrorFileDoesNotExist = -1100,
    NSURLErrorFileIsDirectory = -1101,
    NSURLErrorNoPermissionsToReadFile = -1102,
    NSURLErrorDataLengthExceedsMaximum __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = -1103,
    NSURLErrorFileOutsideSafeArea __attribute__((availability(macos,introduced=10.12.4))) __attribute__((availability(ios,introduced=10.3))) __attribute__((availability(watchos,introduced=3.2))) __attribute__((availability(tvos,introduced=10.2))) = -1104,


    NSURLErrorSecureConnectionFailed = -1200,
    NSURLErrorServerCertificateHasBadDate = -1201,
    NSURLErrorServerCertificateUntrusted = -1202,
    NSURLErrorServerCertificateHasUnknownRoot = -1203,
    NSURLErrorServerCertificateNotYetValid = -1204,
    NSURLErrorClientCertificateRejected = -1205,
    NSURLErrorClientCertificateRequired = -1206,
    NSURLErrorCannotLoadFromNetwork = -2000,


    NSURLErrorCannotCreateFile = -3000,
    NSURLErrorCannotOpenFile = -3001,
    NSURLErrorCannotCloseFile = -3002,
    NSURLErrorCannotWriteToFile = -3003,
    NSURLErrorCannotRemoveFile = -3004,
    NSURLErrorCannotMoveFile = -3005,
    NSURLErrorDownloadDecodingFailedMidStream = -3006,
    NSURLErrorDownloadDecodingFailedToComplete =-3007,

    NSURLErrorInternationalRoamingOff __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = -1018,
    NSURLErrorCallIsActive __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = -1019,
    NSURLErrorDataNotAllowed __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = -1020,
    NSURLErrorRequestBodyStreamExhausted __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = -1021,

    NSURLErrorBackgroundSessionRequiresSharedContainer __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = -995,
    NSURLErrorBackgroundSessionInUseByAnotherProcess __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = -996,
    NSURLErrorBackgroundSessionWasDisconnected __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))= -997,
};
#pragma clang assume_nonnull end

// @class NSCachedURLResponse;
#ifndef _REWRITER_typedef_NSCachedURLResponse
#define _REWRITER_typedef_NSCachedURLResponse
typedef struct objc_object NSCachedURLResponse;
typedef struct {} _objc_exc_NSCachedURLResponse;
#endif

// @class NSError;
#ifndef _REWRITER_typedef_NSError
#define _REWRITER_typedef_NSError
typedef struct objc_object NSError;
typedef struct {} _objc_exc_NSError;
#endif

// @class NSMutableURLRequest;
#ifndef _REWRITER_typedef_NSMutableURLRequest
#define _REWRITER_typedef_NSMutableURLRequest
typedef struct objc_object NSMutableURLRequest;
typedef struct {} _objc_exc_NSMutableURLRequest;
#endif

// @class NSURLAuthenticationChallenge;
#ifndef _REWRITER_typedef_NSURLAuthenticationChallenge
#define _REWRITER_typedef_NSURLAuthenticationChallenge
typedef struct objc_object NSURLAuthenticationChallenge;
typedef struct {} _objc_exc_NSURLAuthenticationChallenge;
#endif

// @class NSURLConnection;
#ifndef _REWRITER_typedef_NSURLConnection
#define _REWRITER_typedef_NSURLConnection
typedef struct objc_object NSURLConnection;
typedef struct {} _objc_exc_NSURLConnection;
#endif

// @class NSURLProtocol;
#ifndef _REWRITER_typedef_NSURLProtocol
#define _REWRITER_typedef_NSURLProtocol
typedef struct objc_object NSURLProtocol;
typedef struct {} _objc_exc_NSURLProtocol;
#endif

// @class NSURLProtocolInternal;
#ifndef _REWRITER_typedef_NSURLProtocolInternal
#define _REWRITER_typedef_NSURLProtocolInternal
typedef struct objc_object NSURLProtocolInternal;
typedef struct {} _objc_exc_NSURLProtocolInternal;
#endif

// @class NSURLRequest;
#ifndef _REWRITER_typedef_NSURLRequest
#define _REWRITER_typedef_NSURLRequest
typedef struct objc_object NSURLRequest;
typedef struct {} _objc_exc_NSURLRequest;
#endif

// @class NSURLResponse;
#ifndef _REWRITER_typedef_NSURLResponse
#define _REWRITER_typedef_NSURLResponse
typedef struct objc_object NSURLResponse;
typedef struct {} _objc_exc_NSURLResponse;
#endif

// @class NSURLSessionTask;
#ifndef _REWRITER_typedef_NSURLSessionTask
#define _REWRITER_typedef_NSURLSessionTask
typedef struct objc_object NSURLSessionTask;
typedef struct {} _objc_exc_NSURLSessionTask;
#endif


#pragma clang assume_nonnull begin
// @protocol NSURLProtocolClient <NSObject>
// - (void)URLProtocol:(NSURLProtocol *)protocol wasRedirectedToRequest:(NSURLRequest *)request redirectResponse:(NSURLResponse *)redirectResponse;
// - (void)URLProtocol:(NSURLProtocol *)protocol cachedResponseIsValid:(NSCachedURLResponse *)cachedResponse;
// - (void)URLProtocol:(NSURLProtocol *)protocol didReceiveResponse:(NSURLResponse *)response cacheStoragePolicy:(NSURLCacheStoragePolicy)policy;
// - (void)URLProtocol:(NSURLProtocol *)protocol didLoadData:(NSData *)data;







// - (void)URLProtocolDidFinishLoading:(NSURLProtocol *)protocol;
// - (void)URLProtocol:(NSURLProtocol *)protocol didFailWithError:(NSError *)error;
// - (void)URLProtocol:(NSURLProtocol *)protocol didReceiveAuthenticationChallenge:(NSURLAuthenticationChallenge *)challenge;







// - (void)URLProtocol:(NSURLProtocol *)protocol didCancelAuthenticationChallenge:(NSURLAuthenticationChallenge *)challenge;

/* @end */


#ifndef _REWRITER_typedef_NSURLProtocol
#define _REWRITER_typedef_NSURLProtocol
typedef struct objc_object NSURLProtocol;
typedef struct {} _objc_exc_NSURLProtocol;
#endif

struct NSURLProtocol_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSURLProtocolInternal *__strong _internal;
};

// - (instancetype)initWithRequest:(NSURLRequest *)request cachedResponse:(nullable NSCachedURLResponse *)cachedResponse client:(nullable id <NSURLProtocolClient>)client __attribute__((objc_designated_initializer));





// @property (nullable, readonly, retain) id <NSURLProtocolClient> client;





// @property (readonly, copy) NSURLRequest *request;





// @property (nullable, readonly, copy) NSCachedURLResponse *cachedResponse;
// + (BOOL)canInitWithRequest:(NSURLRequest *)request;
// + (NSURLRequest *)canonicalRequestForRequest:(NSURLRequest *)request;
// + (BOOL)requestIsCacheEquivalent:(NSURLRequest *)a toRequest:(NSURLRequest *)b;







// - (void)startLoading;
// - (void)stopLoading;
// + (nullable id)propertyForKey:(NSString *)key inRequest:(NSURLRequest *)request;
// + (void)setProperty:(id)value forKey:(NSString *)key inRequest:(NSMutableURLRequest *)request;
// + (void)removePropertyForKey:(NSString *)key inRequest:(NSMutableURLRequest *)request;
// + (BOOL)registerClass:(Class)protocolClass;
// + (void)unregisterClass:(Class)protocolClass;

/* @end */



// @interface NSURLProtocol (NSURLSessionTaskAdditions)
// + (BOOL)canInitWithTask:(NSURLSessionTask *)task __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (instancetype)initWithTask:(NSURLSessionTask *)task cachedResponse:(nullable NSCachedURLResponse *)cachedResponse client:(nullable id <NSURLProtocolClient>)client __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (nullable, readonly, copy) NSURLSessionTask *task __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
/* @end */

#pragma clang assume_nonnull end
// @class NSData;
#ifndef _REWRITER_typedef_NSData
#define _REWRITER_typedef_NSData
typedef struct objc_object NSData;
typedef struct {} _objc_exc_NSData;
#endif

// @class NSDictionary;
#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

// @class NSInputStream;
#ifndef _REWRITER_typedef_NSInputStream
#define _REWRITER_typedef_NSInputStream
typedef struct objc_object NSInputStream;
typedef struct {} _objc_exc_NSInputStream;
#endif

// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

// @class NSURL;
#ifndef _REWRITER_typedef_NSURL
#define _REWRITER_typedef_NSURL
typedef struct objc_object NSURL;
typedef struct {} _objc_exc_NSURL;
#endif

// @class NSURLRequestInternal;
#ifndef _REWRITER_typedef_NSURLRequestInternal
#define _REWRITER_typedef_NSURLRequestInternal
typedef struct objc_object NSURLRequestInternal;
typedef struct {} _objc_exc_NSURLRequestInternal;
#endif


#pragma clang assume_nonnull begin
typedef NSUInteger NSURLRequestCachePolicy; enum
{
    NSURLRequestUseProtocolCachePolicy = 0,

    NSURLRequestReloadIgnoringLocalCacheData = 1,
    NSURLRequestReloadIgnoringLocalAndRemoteCacheData = 4,
    NSURLRequestReloadIgnoringCacheData = NSURLRequestReloadIgnoringLocalCacheData,

    NSURLRequestReturnCacheDataElseLoad = 2,
    NSURLRequestReturnCacheDataDontLoad = 3,

    NSURLRequestReloadRevalidatingCacheData = 5,
};
typedef NSUInteger NSURLRequestNetworkServiceType; enum
{
    NSURLNetworkServiceTypeDefault = 0,
    NSURLNetworkServiceTypeVoIP = 1,
    NSURLNetworkServiceTypeVideo = 2,
    NSURLNetworkServiceTypeBackground = 3,
    NSURLNetworkServiceTypeVoice = 4,
    NSURLNetworkServiceTypeCallSignaling __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = 11,
};

#ifndef _REWRITER_typedef_NSURLRequest
#define _REWRITER_typedef_NSURLRequest
typedef struct objc_object NSURLRequest;
typedef struct {} _objc_exc_NSURLRequest;
#endif

struct NSURLRequest_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSURLRequestInternal *__strong _internal;
};

// + (instancetype)requestWithURL:(NSURL *)URL;






@property (class, readonly) BOOL supportsSecureCoding;
// + (instancetype)requestWithURL:(NSURL *)URL cachePolicy:(NSURLRequestCachePolicy)cachePolicy timeoutInterval:(NSTimeInterval)timeoutInterval;
// - (instancetype)initWithURL:(NSURL *)URL;
// - (instancetype)initWithURL:(NSURL *)URL cachePolicy:(NSURLRequestCachePolicy)cachePolicy timeoutInterval:(NSTimeInterval)timeoutInterval __attribute__((objc_designated_initializer));





// @property (nullable, readonly, copy) NSURL *URL;





// @property (readonly) NSURLRequestCachePolicy cachePolicy;
// @property (readonly) NSTimeInterval timeoutInterval;
// @property (nullable, readonly, copy) NSURL *mainDocumentURL;







// @property (readonly) NSURLRequestNetworkServiceType networkServiceType __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));







// @property (readonly) BOOL allowsCellularAccess __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */


#ifndef _REWRITER_typedef_NSMutableURLRequest
#define _REWRITER_typedef_NSMutableURLRequest
typedef struct objc_object NSMutableURLRequest;
typedef struct {} _objc_exc_NSMutableURLRequest;
#endif

struct NSMutableURLRequest_IMPL {
	struct NSURLRequest_IMPL NSURLRequest_IVARS;
};





// @property (nullable, copy) NSURL *URL;




// @property NSURLRequestCachePolicy cachePolicy;
// @property NSTimeInterval timeoutInterval;
// @property (nullable, copy) NSURL *mainDocumentURL;






// @property NSURLRequestNetworkServiceType networkServiceType __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));







// @property BOOL allowsCellularAccess __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */

// @interface NSURLRequest (NSHTTPURLRequest)





// @property (nullable, readonly, copy) NSString *HTTPMethod;







// @property (nullable, readonly, copy) NSDictionary<NSString *, NSString *> *allHTTPHeaderFields;
// - (nullable NSString *)valueForHTTPHeaderField:(NSString *)field;







// @property (nullable, readonly, copy) NSData *HTTPBody;
// @property (nullable, readonly, retain) NSInputStream *HTTPBodyStream;
// @property (readonly) BOOL HTTPShouldHandleCookies;
// @property (readonly) BOOL HTTPShouldUsePipelining __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */

// @interface NSMutableURLRequest (NSMutableHTTPURLRequest)




// @property (copy) NSString *HTTPMethod;
// @property (nullable, copy) NSDictionary<NSString *, NSString *> *allHTTPHeaderFields;
// - (void)setValue:(nullable NSString *)value forHTTPHeaderField:(NSString *)field;
// - (void)addValue:(NSString *)value forHTTPHeaderField:(NSString *)field;






// @property (nullable, copy) NSData *HTTPBody;
// @property (nullable, retain) NSInputStream *HTTPBodyStream;
// @property BOOL HTTPShouldHandleCookies;
// @property BOOL HTTPShouldUsePipelining __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */

#pragma clang assume_nonnull end
// @class NSDictionary;
#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

// @class NSURL;
#ifndef _REWRITER_typedef_NSURL
#define _REWRITER_typedef_NSURL
typedef struct objc_object NSURL;
typedef struct {} _objc_exc_NSURL;
#endif

// @class NSURLRequest;
#ifndef _REWRITER_typedef_NSURLRequest
#define _REWRITER_typedef_NSURLRequest
typedef struct objc_object NSURLRequest;
typedef struct {} _objc_exc_NSURLRequest;
#endif

// @class NSURLResponseInternal;
#ifndef _REWRITER_typedef_NSURLResponseInternal
#define _REWRITER_typedef_NSURLResponseInternal
typedef struct objc_object NSURLResponseInternal;
typedef struct {} _objc_exc_NSURLResponseInternal;
#endif


#pragma clang assume_nonnull begin

#ifndef _REWRITER_typedef_NSURLResponse
#define _REWRITER_typedef_NSURLResponse
typedef struct objc_object NSURLResponse;
typedef struct {} _objc_exc_NSURLResponse;
#endif

struct NSURLResponse_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSURLResponseInternal *__strong _internal;
};

// - (instancetype)initWithURL:(NSURL *)URL MIMEType:(nullable NSString *)MIMEType expectedContentLength:(NSInteger)length textEncodingName:(nullable NSString *)name __attribute__((objc_designated_initializer));





// @property (nullable, readonly, copy) NSURL *URL;
// @property (nullable, readonly, copy) NSString *MIMEType;
// @property (readonly) long long expectedContentLength;
// @property (nullable, readonly, copy) NSString *textEncodingName;
// @property (nullable, readonly, copy) NSString *suggestedFilename;

/* @end */




// @class NSHTTPURLResponseInternal;
#ifndef _REWRITER_typedef_NSHTTPURLResponseInternal
#define _REWRITER_typedef_NSHTTPURLResponseInternal
typedef struct objc_object NSHTTPURLResponseInternal;
typedef struct {} _objc_exc_NSHTTPURLResponseInternal;
#endif


#ifndef _REWRITER_typedef_NSHTTPURLResponse
#define _REWRITER_typedef_NSHTTPURLResponse
typedef struct objc_object NSHTTPURLResponse;
typedef struct {} _objc_exc_NSHTTPURLResponse;
#endif

struct NSHTTPURLResponse_IMPL {
	struct NSURLResponse_IMPL NSURLResponse_IVARS;
	NSHTTPURLResponseInternal *__strong _httpInternal;
};

// - (nullable instancetype)initWithURL:(NSURL *)url statusCode:(NSInteger)statusCode HTTPVersion:(nullable NSString *)HTTPVersion headerFields:(nullable NSDictionary<NSString *, NSString *> *)headerFields __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// @property (readonly) NSInteger statusCode;
// @property (readonly, copy) NSDictionary *allHeaderFields;
// + (NSString *)localizedStringForStatusCode:(NSInteger)statusCode;

/* @end */

#pragma clang assume_nonnull end







// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSData
#define _REWRITER_typedef_NSData
typedef struct objc_object NSData;
typedef struct {} _objc_exc_NSData;
#endif

#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

#ifndef _REWRITER_typedef_NSMutableDictionary
#define _REWRITER_typedef_NSMutableDictionary
typedef struct objc_object NSMutableDictionary;
typedef struct {} _objc_exc_NSMutableDictionary;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSURL
#define _REWRITER_typedef_NSURL
typedef struct objc_object NSURL;
typedef struct {} _objc_exc_NSURL;
#endif


#pragma clang assume_nonnull begin


extern "C" NSString * const NSGlobalDomain;

extern "C" NSString * const NSArgumentDomain;

extern "C" NSString * const NSRegistrationDomain;

#ifndef _REWRITER_typedef_NSUserDefaults
#define _REWRITER_typedef_NSUserDefaults
typedef struct objc_object NSUserDefaults;
typedef struct {} _objc_exc_NSUserDefaults;
#endif

struct NSUserDefaults_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	__strong id _kvo_;
	CFStringRef _identifier_;
	CFStringRef _container_;
	void *_reserved[2];
};





@property (class, readonly, strong) NSUserDefaults *standardUserDefaults;


// + (void)resetStandardUserDefaults;


// - (instancetype)init;


// - (nullable instancetype)initWithSuiteName:(nullable NSString *)suitename __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((objc_designated_initializer));


// - (nullable id)initWithUser:(NSString *)username __attribute__((availability(macos,introduced=10.0,deprecated=10.9,message="Use -init instead"))) __attribute__((availability(ios,introduced=2.0,deprecated=7.0,message="Use -init instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use -init instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use -init instead")));




// - (nullable id)objectForKey:(NSString *)defaultName;




// - (void)setObject:(nullable id)value forKey:(NSString *)defaultName;


// - (void)removeObjectForKey:(NSString *)defaultName;


// - (nullable NSString *)stringForKey:(NSString *)defaultName;


// - (nullable NSArray *)arrayForKey:(NSString *)defaultName;

// - (nullable NSDictionary<NSString *, id> *)dictionaryForKey:(NSString *)defaultName;

// - (nullable NSData *)dataForKey:(NSString *)defaultName;

// - (nullable NSArray<NSString *> *)stringArrayForKey:(NSString *)defaultName;



// - (NSInteger)integerForKey:(NSString *)defaultName;

// - (float)floatForKey:(NSString *)defaultName;

// - (double)doubleForKey:(NSString *)defaultName;




// - (BOOL)boolForKey:(NSString *)defaultName;



// - (nullable NSURL *)URLForKey:(NSString *)defaultName __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


// - (void)setInteger:(NSInteger)value forKey:(NSString *)defaultName;

// - (void)setFloat:(float)value forKey:(NSString *)defaultName;

// - (void)setDouble:(double)value forKey:(NSString *)defaultName;

// - (void)setBool:(BOOL)value forKey:(NSString *)defaultName;

// - (void)setURL:(nullable NSURL *)url forKey:(NSString *)defaultName __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






// - (void)registerDefaults:(NSDictionary<NSString *, id> *)registrationDictionary;




// - (void)addSuiteNamed:(NSString *)suiteName;



// - (void)removeSuiteNamed:(NSString *)suiteName;




// - (NSDictionary<NSString *, id> *)dictionaryRepresentation;




// @property (readonly, copy) NSArray<NSString *> *volatileDomainNames;
// - (NSDictionary<NSString *, id> *)volatileDomainForName:(NSString *)domainName;
// - (void)setVolatileDomain:(NSDictionary<NSString *, id> *)domain forName:(NSString *)domainName;
// - (void)removeVolatileDomainForName:(NSString *)domainName;


// - (NSArray *)persistentDomainNames __attribute__((availability(macos,introduced=10.0,deprecated=10.9,message="Not recommended"))) __attribute__((availability(ios,introduced=2.0,deprecated=7.0,message="Not recommended"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Not recommended"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Not recommended")));


// - (nullable NSDictionary<NSString *, id> *)persistentDomainForName:(NSString *)domainName;

// - (void)setPersistentDomain:(NSDictionary<NSString *, id> *)domain forName:(NSString *)domainName;

// - (void)removePersistentDomainForName:(NSString *)domainName;
// - (BOOL)synchronize;


// - (BOOL)objectIsForcedForKey:(NSString *)key;


// - (BOOL)objectIsForcedForKey:(NSString *)key inDomain:(NSString *)domain;

/* @end */





extern "C" NSNotificationName const NSUserDefaultsSizeLimitExceededNotification __attribute__((availability(ios,introduced=9.3))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));






extern "C" NSNotificationName const NSUbiquitousUserDefaultsNoCloudAccountNotification __attribute__((availability(ios,introduced=9.3))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));




extern "C" NSNotificationName const NSUbiquitousUserDefaultsDidChangeAccountsNotification __attribute__((availability(ios,introduced=9.3))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));




extern "C" NSNotificationName const NSUbiquitousUserDefaultsCompletedInitialSyncNotification __attribute__((availability(ios,introduced=9.3))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));




extern "C" NSNotificationName const NSUserDefaultsDidChangeNotification;
#pragma clang assume_nonnull end







// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif


#pragma clang assume_nonnull begin

typedef NSString *NSValueTransformerName __attribute__((swift_wrapper(struct)));

extern "C" NSValueTransformerName const NSNegateBooleanTransformerName __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSValueTransformerName const NSIsNilTransformerName __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSValueTransformerName const NSIsNotNilTransformerName __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSValueTransformerName const NSUnarchiveFromDataTransformerName __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSValueTransformerName const NSKeyedUnarchiveFromDataTransformerName __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_0)))

#ifndef _REWRITER_typedef_NSValueTransformer
#define _REWRITER_typedef_NSValueTransformer
typedef struct objc_object NSValueTransformer;
typedef struct {} _objc_exc_NSValueTransformer;
#endif

struct NSValueTransformer_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};




// + (void)setValueTransformer:(nullable NSValueTransformer *)transformer forName:(NSValueTransformerName)name;
// + (nullable NSValueTransformer *)valueTransformerForName:(NSValueTransformerName)name;
// + (NSArray<NSValueTransformerName> *)valueTransformerNames;


// + (Class)transformedValueClass;
// + (BOOL)allowsReverseTransformation;

// - (nullable id)transformedValue:(nullable id)value;
// - (nullable id)reverseTransformedValue:(nullable id)value;

/* @end */

#pragma clang assume_nonnull end







// @class NSData;
#ifndef _REWRITER_typedef_NSData
#define _REWRITER_typedef_NSData
typedef struct objc_object NSData;
typedef struct {} _objc_exc_NSData;
#endif

#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

#ifndef _REWRITER_typedef_NSError
#define _REWRITER_typedef_NSError
typedef struct objc_object NSError;
typedef struct {} _objc_exc_NSError;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSURL
#define _REWRITER_typedef_NSURL
typedef struct objc_object NSURL;
typedef struct {} _objc_exc_NSURL;
#endif

#ifndef _REWRITER_typedef_NSInputStream
#define _REWRITER_typedef_NSInputStream
typedef struct objc_object NSInputStream;
typedef struct {} _objc_exc_NSInputStream;
#endif

#ifndef _REWRITER_typedef_NSSet
#define _REWRITER_typedef_NSSet
typedef struct objc_object NSSet;
typedef struct {} _objc_exc_NSSet;
#endif

// @protocol NSXMLParserDelegate;

#pragma clang assume_nonnull begin

__attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))
typedef NSUInteger NSXMLParserExternalEntityResolvingPolicy; enum {
    NSXMLParserResolveExternalEntitiesNever = 0,
    NSXMLParserResolveExternalEntitiesNoNetwork,
    NSXMLParserResolveExternalEntitiesSameOriginOnly,
    NSXMLParserResolveExternalEntitiesAlways
};


#ifndef _REWRITER_typedef_NSXMLParser
#define _REWRITER_typedef_NSXMLParser
typedef struct objc_object NSXMLParser;
typedef struct {} _objc_exc_NSXMLParser;
#endif

struct NSXMLParser_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	__strong id _reserved0;
	__strong id _delegate;
	__strong id _reserved1;
	__strong id _reserved2;
	__strong id _reserved3;
};

// - (nullable instancetype)initWithContentsOfURL:(NSURL *)url;
// - (instancetype)initWithData:(NSData *)data __attribute__((objc_designated_initializer));
// - (instancetype)initWithStream:(NSInputStream *)stream __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


// @property (nullable, assign) id <NSXMLParserDelegate> delegate;

// @property BOOL shouldProcessNamespaces;
// @property BOOL shouldReportNamespacePrefixes;


// @property NSXMLParserExternalEntityResolvingPolicy externalEntityResolvingPolicy __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (nullable, copy) NSSet<NSURL *> *allowedExternalEntityURLs __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (BOOL)parse;
// - (void)abortParsing;

// @property (nullable, readonly, copy) NSError *parserError;



// @property BOOL shouldResolveExternalEntities;

/* @end */



// @interface NSXMLParser (NSXMLParserLocatorAdditions)
// @property (nullable, readonly, copy) NSString *publicID;
// @property (nullable, readonly, copy) NSString *systemID;
// @property (readonly) NSInteger lineNumber;
// @property (readonly) NSInteger columnNumber;

/* @end */

// @protocol NSXMLParserDelegate <NSObject>
/* @optional */


// - (void)parserDidStartDocument:(NSXMLParser *)parser;

// - (void)parserDidEndDocument:(NSXMLParser *)parser;



// - (void)parser:(NSXMLParser *)parser foundNotationDeclarationWithName:(NSString *)name publicID:(nullable NSString *)publicID systemID:(nullable NSString *)systemID;

// - (void)parser:(NSXMLParser *)parser foundUnparsedEntityDeclarationWithName:(NSString *)name publicID:(nullable NSString *)publicID systemID:(nullable NSString *)systemID notationName:(nullable NSString *)notationName;

// - (void)parser:(NSXMLParser *)parser foundAttributeDeclarationWithName:(NSString *)attributeName forElement:(NSString *)elementName type:(nullable NSString *)type defaultValue:(nullable NSString *)defaultValue;

// - (void)parser:(NSXMLParser *)parser foundElementDeclarationWithName:(NSString *)elementName model:(NSString *)model;

// - (void)parser:(NSXMLParser *)parser foundInternalEntityDeclarationWithName:(NSString *)name value:(nullable NSString *)value;

// - (void)parser:(NSXMLParser *)parser foundExternalEntityDeclarationWithName:(NSString *)name publicID:(nullable NSString *)publicID systemID:(nullable NSString *)systemID;

// - (void)parser:(NSXMLParser *)parser didStartElement:(NSString *)elementName namespaceURI:(nullable NSString *)namespaceURI qualifiedName:(nullable NSString *)qName attributes:(NSDictionary<NSString *, NSString *> *)attributeDict;







// - (void)parser:(NSXMLParser *)parser didEndElement:(NSString *)elementName namespaceURI:(nullable NSString *)namespaceURI qualifiedName:(nullable NSString *)qName;


// - (void)parser:(NSXMLParser *)parser didStartMappingPrefix:(NSString *)prefix toURI:(NSString *)namespaceURI;




// - (void)parser:(NSXMLParser *)parser didEndMappingPrefix:(NSString *)prefix;


// - (void)parser:(NSXMLParser *)parser foundCharacters:(NSString *)string;


// - (void)parser:(NSXMLParser *)parser foundIgnorableWhitespace:(NSString *)whitespaceString;


// - (void)parser:(NSXMLParser *)parser foundProcessingInstructionWithTarget:(NSString *)target data:(nullable NSString *)data;


// - (void)parser:(NSXMLParser *)parser foundComment:(NSString *)comment;


// - (void)parser:(NSXMLParser *)parser foundCDATA:(NSData *)CDATABlock;


// - (nullable NSData *)parser:(NSXMLParser *)parser resolveExternalEntityName:(NSString *)name systemID:(nullable NSString *)systemID;


// - (void)parser:(NSXMLParser *)parser parseErrorOccurred:(NSError *)parseError;


// - (void)parser:(NSXMLParser *)parser validationErrorOccurred:(NSError *)validationError;

/* @end */


extern "C" NSErrorDomain const NSXMLParserErrorDomain __attribute__((availability(macos,introduced=10.3))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


typedef NSInteger NSXMLParserError; enum {
    NSXMLParserInternalError = 1,
    NSXMLParserOutOfMemoryError = 2,
    NSXMLParserDocumentStartError = 3,
    NSXMLParserEmptyDocumentError = 4,
    NSXMLParserPrematureDocumentEndError = 5,
    NSXMLParserInvalidHexCharacterRefError = 6,
    NSXMLParserInvalidDecimalCharacterRefError = 7,
    NSXMLParserInvalidCharacterRefError = 8,
    NSXMLParserInvalidCharacterError = 9,
    NSXMLParserCharacterRefAtEOFError = 10,
    NSXMLParserCharacterRefInPrologError = 11,
    NSXMLParserCharacterRefInEpilogError = 12,
    NSXMLParserCharacterRefInDTDError = 13,
    NSXMLParserEntityRefAtEOFError = 14,
    NSXMLParserEntityRefInPrologError = 15,
    NSXMLParserEntityRefInEpilogError = 16,
    NSXMLParserEntityRefInDTDError = 17,
    NSXMLParserParsedEntityRefAtEOFError = 18,
    NSXMLParserParsedEntityRefInPrologError = 19,
    NSXMLParserParsedEntityRefInEpilogError = 20,
    NSXMLParserParsedEntityRefInInternalSubsetError = 21,
    NSXMLParserEntityReferenceWithoutNameError = 22,
    NSXMLParserEntityReferenceMissingSemiError = 23,
    NSXMLParserParsedEntityRefNoNameError = 24,
    NSXMLParserParsedEntityRefMissingSemiError = 25,
    NSXMLParserUndeclaredEntityError = 26,
    NSXMLParserUnparsedEntityError = 28,
    NSXMLParserEntityIsExternalError = 29,
    NSXMLParserEntityIsParameterError = 30,
    NSXMLParserUnknownEncodingError = 31,
    NSXMLParserEncodingNotSupportedError = 32,
    NSXMLParserStringNotStartedError = 33,
    NSXMLParserStringNotClosedError = 34,
    NSXMLParserNamespaceDeclarationError = 35,
    NSXMLParserEntityNotStartedError = 36,
    NSXMLParserEntityNotFinishedError = 37,
    NSXMLParserLessThanSymbolInAttributeError = 38,
    NSXMLParserAttributeNotStartedError = 39,
    NSXMLParserAttributeNotFinishedError = 40,
    NSXMLParserAttributeHasNoValueError = 41,
    NSXMLParserAttributeRedefinedError = 42,
    NSXMLParserLiteralNotStartedError = 43,
    NSXMLParserLiteralNotFinishedError = 44,
    NSXMLParserCommentNotFinishedError = 45,
    NSXMLParserProcessingInstructionNotStartedError = 46,
    NSXMLParserProcessingInstructionNotFinishedError = 47,
    NSXMLParserNotationNotStartedError = 48,
    NSXMLParserNotationNotFinishedError = 49,
    NSXMLParserAttributeListNotStartedError = 50,
    NSXMLParserAttributeListNotFinishedError = 51,
    NSXMLParserMixedContentDeclNotStartedError = 52,
    NSXMLParserMixedContentDeclNotFinishedError = 53,
    NSXMLParserElementContentDeclNotStartedError = 54,
    NSXMLParserElementContentDeclNotFinishedError = 55,
    NSXMLParserXMLDeclNotStartedError = 56,
    NSXMLParserXMLDeclNotFinishedError = 57,
    NSXMLParserConditionalSectionNotStartedError = 58,
    NSXMLParserConditionalSectionNotFinishedError = 59,
    NSXMLParserExternalSubsetNotFinishedError = 60,
    NSXMLParserDOCTYPEDeclNotFinishedError = 61,
    NSXMLParserMisplacedCDATAEndStringError = 62,
    NSXMLParserCDATANotFinishedError = 63,
    NSXMLParserMisplacedXMLDeclarationError = 64,
    NSXMLParserSpaceRequiredError = 65,
    NSXMLParserSeparatorRequiredError = 66,
    NSXMLParserNMTOKENRequiredError = 67,
    NSXMLParserNAMERequiredError = 68,
    NSXMLParserPCDATARequiredError = 69,
    NSXMLParserURIRequiredError = 70,
    NSXMLParserPublicIdentifierRequiredError = 71,
    NSXMLParserLTRequiredError = 72,
    NSXMLParserGTRequiredError = 73,
    NSXMLParserLTSlashRequiredError = 74,
    NSXMLParserEqualExpectedError = 75,
    NSXMLParserTagNameMismatchError = 76,
    NSXMLParserUnfinishedTagError = 77,
    NSXMLParserStandaloneValueError = 78,
    NSXMLParserInvalidEncodingNameError = 79,
    NSXMLParserCommentContainsDoubleHyphenError = 80,
    NSXMLParserInvalidEncodingError = 81,
    NSXMLParserExternalStandaloneEntityError = 82,
    NSXMLParserInvalidConditionalSectionError = 83,
    NSXMLParserEntityValueRequiredError = 84,
    NSXMLParserNotWellBalancedError = 85,
    NSXMLParserExtraContentError = 86,
    NSXMLParserInvalidCharacterInEntityError = 87,
    NSXMLParserParsedEntityRefInInternalError = 88,
    NSXMLParserEntityRefLoopError = 89,
    NSXMLParserEntityBoundaryError = 90,
    NSXMLParserInvalidURIError = 91,
    NSXMLParserURIFragmentError = 92,
    NSXMLParserNoDTDError = 94,
    NSXMLParserDelegateAbortedParseError = 512
};
#pragma clang assume_nonnull end





extern "C" {

typedef uid_t au_id_t;
typedef pid_t au_asid_t;
typedef u_int16_t au_event_t;
typedef u_int16_t au_emod_t;
typedef u_int32_t au_class_t;
typedef u_int64_t au_asflgs_t __attribute__ ((aligned (8)));

struct au_tid {
 dev_t port;
 u_int32_t machine;
};
typedef struct au_tid au_tid_t;

struct au_tid_addr {
 dev_t at_port;
 u_int32_t at_type;
 u_int32_t at_addr[4];
};
typedef struct au_tid_addr au_tid_addr_t;

struct au_mask {
 unsigned int am_success;
 unsigned int am_failure;
};
typedef struct au_mask au_mask_t;

struct auditinfo {
 au_id_t ai_auid;
 au_mask_t ai_mask;
 au_tid_t ai_termid;
 au_asid_t ai_asid;
};
typedef struct auditinfo auditinfo_t;

struct auditinfo_addr {
 au_id_t ai_auid;
 au_mask_t ai_mask;
 au_tid_addr_t ai_termid;
 au_asid_t ai_asid;
 au_asflgs_t ai_flags;
};
typedef struct auditinfo_addr auditinfo_addr_t;

struct auditpinfo {
 pid_t ap_pid;
 au_id_t ap_auid;
 au_mask_t ap_mask;
 au_tid_t ap_termid;
 au_asid_t ap_asid;
};
typedef struct auditpinfo auditpinfo_t;

struct auditpinfo_addr {
 pid_t ap_pid;
 au_id_t ap_auid;
 au_mask_t ap_mask;
 au_tid_addr_t ap_termid;
 au_asid_t ap_asid;
 au_asflgs_t ap_flags;
};
typedef struct auditpinfo_addr auditpinfo_addr_t;

struct au_session {
 auditinfo_addr_t *as_aia_p;
 au_mask_t as_mask;
};
typedef struct au_session au_session_t;




typedef struct au_token token_t;
struct au_qctrl {
 int aq_hiwater;


 int aq_lowater;


 int aq_bufsz;
 int aq_delay;
 int aq_minfree;
};
typedef struct au_qctrl au_qctrl_t;




struct audit_stat {
 unsigned int as_version;
 unsigned int as_numevent;
 int as_generated;
 int as_nonattrib;
 int as_kernel;
 int as_audit;
 int as_auditctl;
 int as_enqueue;
 int as_written;
 int as_wblocked;
 int as_rblocked;
 int as_dropped;
 int as_totalsize;
 unsigned int as_memused;
};
typedef struct audit_stat au_stat_t;




struct audit_fstat {
 u_int64_t af_filesz;
 u_int64_t af_currsz;
};
typedef struct audit_fstat au_fstat_t;




struct au_evclass_map {
 au_event_t ec_number;
 au_class_t ec_class;
};
typedef struct au_evclass_map au_evclass_map_t;





int audit(const void *, int);
int auditon(int, void *, int);
int auditctl(const char *);
int getauid(au_id_t *);
int setauid(const au_id_t *);
int getaudit_addr(struct auditinfo_addr *, int);
int setaudit_addr(const struct auditinfo_addr *, int);
int getaudit(struct auditinfo *)
  __attribute__((availability(ios,introduced=2.0,deprecated=6.0)));

int setaudit(const struct auditinfo *)
  __attribute__((availability(ios,introduced=2.0,deprecated=6.0)));
mach_port_name_t audit_session_self(void);
au_asid_t audit_session_join(mach_port_name_t port);
int audit_session_port(au_asid_t asid, mach_port_name_t *portname);




}






// @class NSMutableDictionary;
#ifndef _REWRITER_typedef_NSMutableDictionary
#define _REWRITER_typedef_NSMutableDictionary
typedef struct objc_object NSMutableDictionary;
typedef struct {} _objc_exc_NSMutableDictionary;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSOperationQueue
#define _REWRITER_typedef_NSOperationQueue
typedef struct objc_object NSOperationQueue;
typedef struct {} _objc_exc_NSOperationQueue;
#endif

#ifndef _REWRITER_typedef_NSSet
#define _REWRITER_typedef_NSSet
typedef struct objc_object NSSet;
typedef struct {} _objc_exc_NSSet;
#endif

#ifndef _REWRITER_typedef_NSLock
#define _REWRITER_typedef_NSLock
typedef struct objc_object NSLock;
typedef struct {} _objc_exc_NSLock;
#endif

#ifndef _REWRITER_typedef_NSError
#define _REWRITER_typedef_NSError
typedef struct objc_object NSError;
typedef struct {} _objc_exc_NSError;
#endif

// @class NSXPCConnection;
#ifndef _REWRITER_typedef_NSXPCConnection
#define _REWRITER_typedef_NSXPCConnection
typedef struct objc_object NSXPCConnection;
typedef struct {} _objc_exc_NSXPCConnection;
#endif

#ifndef _REWRITER_typedef_NSXPCListener
#define _REWRITER_typedef_NSXPCListener
typedef struct objc_object NSXPCListener;
typedef struct {} _objc_exc_NSXPCListener;
#endif

#ifndef _REWRITER_typedef_NSXPCInterface
#define _REWRITER_typedef_NSXPCInterface
typedef struct objc_object NSXPCInterface;
typedef struct {} _objc_exc_NSXPCInterface;
#endif

#ifndef _REWRITER_typedef_NSXPCListenerEndpoint
#define _REWRITER_typedef_NSXPCListenerEndpoint
typedef struct objc_object NSXPCListenerEndpoint;
typedef struct {} _objc_exc_NSXPCListenerEndpoint;
#endif

// @protocol NSXPCListenerDelegate;

#pragma clang assume_nonnull begin


// @protocol NSXPCProxyCreating


// - (id)remoteObjectProxy;


// - (id)remoteObjectProxyWithErrorHandler:(void (^)(NSError *error))handler;

/* @optional */


// - (id)synchronousRemoteObjectProxyWithErrorHandler:(void (__attribute__((noescape)) ^)(NSError *error))handler __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */





typedef NSUInteger NSXPCConnectionOptions; enum {

    NSXPCConnectionPrivileged = (1 << 12UL)
} __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0)))

#ifndef _REWRITER_typedef_NSXPCConnection
#define _REWRITER_typedef_NSXPCConnection
typedef struct objc_object NSXPCConnection;
typedef struct {} _objc_exc_NSXPCConnection;
#endif

struct NSXPCConnection_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_xconnection;
	__strong id _repliesExpected;
	__strong dispatch_queue_t _userQueue;
	uint32_t _state;
	uint32_t _state2;
	void (*_interruptionHandler)();
	void (*_invalidationHandler)();
	__strong id _exportInfo;
	__strong id _repliesRequested;
	__strong id _importInfo;
	id _otherInfo;
	__strong id _reserved1;
	__strong id _lock;
	NSXPCInterface *__strong _remoteObjectInterface;
	NSString *__strong _serviceName;
	NSXPCListenerEndpoint *__strong _endpoint;
	__strong id _eCache;
	__strong id _dCache;
};



// - (instancetype)initWithServiceName:(NSString *)serviceName __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
// @property (nullable, readonly, copy) NSString *serviceName;


// - (instancetype)initWithMachServiceName:(NSString *)name options:(NSXPCConnectionOptions)options __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));


// - (instancetype)initWithListenerEndpoint:(NSXPCListenerEndpoint *)endpoint;
// @property (readonly, retain) NSXPCListenerEndpoint *endpoint;


// @property (nullable, retain) NSXPCInterface *exportedInterface;


// @property (nullable, retain) id exportedObject;


// @property (nullable, retain) NSXPCInterface *remoteObjectInterface;


// @property (readonly, retain) id remoteObjectProxy;

// - (id)remoteObjectProxyWithErrorHandler:(void (^)(NSError *error))handler;


// - (id)synchronousRemoteObjectProxyWithErrorHandler:(void (^)(NSError *error))handler __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// @property (nullable, copy) void (^interruptionHandler)(void);




// @property (nullable, copy) void (^invalidationHandler)(void);


// - (void)resume;


// - (void)suspend;


// - (void)invalidate;


// @property (readonly) au_asid_t auditSessionIdentifier;
// @property (readonly) pid_t processIdentifier;
// @property (readonly) uid_t effectiveUserIdentifier;
// @property (readonly) gid_t effectiveGroupIdentifier;

/* @end */




__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0)))

#ifndef _REWRITER_typedef_NSXPCListener
#define _REWRITER_typedef_NSXPCListener
typedef struct objc_object NSXPCListener;
typedef struct {} _objc_exc_NSXPCListener;
#endif

struct NSXPCListener_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_xconnection;
	__strong dispatch_queue_t _userQueue;
	void *reserved0;
	id _delegate;
	NSString *__strong _serviceName;
	uint64_t _state;
	__strong id _reserved1;
	__strong id _reserved2;
};



// + (NSXPCListener *)serviceListener;


// + (NSXPCListener *)anonymousListener;


// - (instancetype)initWithMachServiceName:(NSString *)name __attribute__((objc_designated_initializer)) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));


// @property (nullable, assign) id <NSXPCListenerDelegate> delegate;


// @property (readonly, retain) NSXPCListenerEndpoint *endpoint;


// - (void)resume;


// - (void)suspend;


// - (void)invalidate;

/* @end */


// @protocol NSXPCListenerDelegate <NSObject>
/* @optional */

// - (BOOL)listener:(NSXPCListener *)listener shouldAcceptNewConnection:(NSXPCConnection *)newConnection;

/* @end */





__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0)))

#ifndef _REWRITER_typedef_NSXPCInterface
#define _REWRITER_typedef_NSXPCInterface
typedef struct objc_object NSXPCInterface;
typedef struct {} _objc_exc_NSXPCInterface;
#endif

struct NSXPCInterface_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	Protocol *__strong _protocol;
	void *_reserved2;
	__strong id _reserved1;
};



// + (NSXPCInterface *)interfaceWithProtocol:(Protocol *)protocol;


// @property (assign) Protocol *protocol;



// - (void)setClasses:(NSSet<Class> *)classes forSelector:(SEL)sel argumentIndex:(NSUInteger)arg ofReply:(BOOL)ofReply;
// - (NSSet<Class> *)classesForSelector:(SEL)sel argumentIndex:(NSUInteger)arg ofReply:(BOOL)ofReply;


// - (void)setInterface:(NSXPCInterface *)ifc forSelector:(SEL)sel argumentIndex:(NSUInteger)arg ofReply:(BOOL)ofReply;
// - (nullable NSXPCInterface *)interfaceForSelector:(SEL)sel argumentIndex:(NSUInteger)arg ofReply:(BOOL)ofReply;

/* @end */





__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0)))

#ifndef _REWRITER_typedef_NSXPCListenerEndpoint
#define _REWRITER_typedef_NSXPCListenerEndpoint
typedef struct objc_object NSXPCListenerEndpoint;
typedef struct {} _objc_exc_NSXPCListenerEndpoint;
#endif

struct NSXPCListenerEndpoint_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_internal;
};

/* @end */

#pragma clang assume_nonnull end


enum {

    NSFileNoSuchFileError = 4,
    NSFileLockingError = 255,
    NSFileReadUnknownError = 256,
    NSFileReadNoPermissionError = 257,
    NSFileReadInvalidFileNameError = 258,
    NSFileReadCorruptFileError = 259,
    NSFileReadNoSuchFileError = 260,
    NSFileReadInapplicableStringEncodingError = 261,
    NSFileReadUnsupportedSchemeError = 262,
    NSFileReadTooLargeError __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 263,
    NSFileReadUnknownStringEncodingError __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 264,
    NSFileWriteUnknownError = 512,
    NSFileWriteNoPermissionError = 513,
    NSFileWriteInvalidFileNameError = 514,
    NSFileWriteFileExistsError __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 516,
    NSFileWriteInapplicableStringEncodingError = 517,
    NSFileWriteUnsupportedSchemeError = 518,
    NSFileWriteOutOfSpaceError = 640,
    NSFileWriteVolumeReadOnlyError __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 642,


    NSFileManagerUnmountUnknownError __attribute__((availability(ios,introduced=NA))) = 768,
    NSFileManagerUnmountBusyError __attribute__((availability(ios,introduced=NA))) = 769,


    NSKeyValueValidationError = 1024,
    NSFormattingError = 2048,
    NSUserCancelledError = 3072,
    NSFeatureUnsupportedError __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 3328,


    NSExecutableNotLoadableError __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 3584,
    NSExecutableArchitectureMismatchError __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 3585,
    NSExecutableRuntimeMismatchError __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 3586,
    NSExecutableLoadError __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 3587,
    NSExecutableLinkError __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 3588,


    NSFileErrorMinimum = 0,
    NSFileErrorMaximum = 1023,

    NSValidationErrorMinimum = 1024,
    NSValidationErrorMaximum = 2047,

    NSExecutableErrorMinimum __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 3584,
    NSExecutableErrorMaximum __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 3839,

    NSFormattingErrorMinimum = 2048,
    NSFormattingErrorMaximum = 2559,

    NSPropertyListReadCorruptError __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 3840,
    NSPropertyListReadUnknownVersionError __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 3841,
    NSPropertyListReadStreamError __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 3842,
    NSPropertyListWriteStreamError __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 3851,
    NSPropertyListWriteInvalidError __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 3852,

    NSPropertyListErrorMinimum __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 3840,
    NSPropertyListErrorMaximum __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 4095,

    NSXPCConnectionInterrupted __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 4097,
    NSXPCConnectionInvalid __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 4099,
    NSXPCConnectionReplyInvalid __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 4101,

    NSXPCConnectionErrorMinimum __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 4096,
    NSXPCConnectionErrorMaximum __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 4224,

    NSUbiquitousFileUnavailableError __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 4353,
    NSUbiquitousFileNotUploadedDueToQuotaError __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 4354,
    NSUbiquitousFileUbiquityServerNotAvailable __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 4355,

    NSUbiquitousFileErrorMinimum __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 4352,
    NSUbiquitousFileErrorMaximum __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 4607,

    NSUserActivityHandoffFailedError __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 4608,
    NSUserActivityConnectionUnavailableError __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 4609,
    NSUserActivityRemoteApplicationTimedOutError __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 4610,
    NSUserActivityHandoffUserInfoTooLargeError __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 4611,

    NSUserActivityErrorMinimum __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 4608,
    NSUserActivityErrorMaximum __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 4863,

    NSCoderReadCorruptError __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 4864,
    NSCoderValueNotFoundError __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 4865,
    NSCoderInvalidValueError __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0))) = 4866,
    NSCoderErrorMinimum __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 4864,
    NSCoderErrorMaximum __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 4991,

    NSBundleErrorMinimum __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 4992,
    NSBundleErrorMaximum __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 5119,

    NSBundleOnDemandResourceOutOfSpaceError __attribute__((availability(ios,introduced=9_0))) = 4992,
    NSBundleOnDemandResourceExceededMaximumSizeError __attribute__((availability(ios,introduced=9_0))) = 4993,
    NSBundleOnDemandResourceInvalidTagError __attribute__((availability(ios,introduced=9_0))) = 4994,

    NSCloudSharingNetworkFailureError __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) = 5120,
    NSCloudSharingQuotaExceededError __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) = 5121,
    NSCloudSharingTooManyParticipantsError __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) = 5122,
    NSCloudSharingConflictError __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) = 5123,
    NSCloudSharingNoPermissionError __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) = 5124,
    NSCloudSharingOtherError __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) = 5375,

    NSCloudSharingErrorMinimum __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) = 5120,
    NSCloudSharingErrorMaximum __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) = 5375,

};










#pragma clang assume_nonnull begin

typedef NSUInteger NSByteCountFormatterUnits; enum {

    NSByteCountFormatterUseDefault = 0,

    NSByteCountFormatterUseBytes = 1UL << 0,
    NSByteCountFormatterUseKB = 1UL << 1,
    NSByteCountFormatterUseMB = 1UL << 2,
    NSByteCountFormatterUseGB = 1UL << 3,
    NSByteCountFormatterUseTB = 1UL << 4,
    NSByteCountFormatterUsePB = 1UL << 5,
    NSByteCountFormatterUseEB = 1UL << 6,
    NSByteCountFormatterUseZB = 1UL << 7,
    NSByteCountFormatterUseYBOrHigher = 0x0FFUL << 8,

    NSByteCountFormatterUseAll = 0x0FFFFUL
};

typedef NSInteger NSByteCountFormatterCountStyle; enum {

    NSByteCountFormatterCountStyleFile = 0,

    NSByteCountFormatterCountStyleMemory = 1,

    NSByteCountFormatterCountStyleDecimal = 2,
    NSByteCountFormatterCountStyleBinary = 3
};


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0)))

#ifndef _REWRITER_typedef_NSByteCountFormatter
#define _REWRITER_typedef_NSByteCountFormatter
typedef struct objc_object NSByteCountFormatter;
typedef struct {} _objc_exc_NSByteCountFormatter;
#endif

struct NSByteCountFormatter_IMPL {
	struct NSFormatter_IMPL NSFormatter_IVARS;
	unsigned int _allowedUnits;
	char _countStyle;
	BOOL _allowsNonnumericFormatting;
	BOOL _includesUnit;
	BOOL _includesCount;
	BOOL _includesActualByteCount;
	BOOL _adaptive;
	BOOL _zeroPadsFractionDigits;
	int _formattingContext;
	int _reserved[5];
};




// + (NSString *)stringFromByteCount:(long long)byteCount countStyle:(NSByteCountFormatterCountStyle)countStyle;



// - (NSString *)stringFromByteCount:(long long)byteCount;



// @property NSByteCountFormatterUnits allowedUnits;



// @property NSByteCountFormatterCountStyle countStyle;



// @property BOOL allowsNonnumericFormatting;



// @property BOOL includesUnit;
// @property BOOL includesCount;



// @property BOOL includesActualByteCount;



// @property (getter=isAdaptive) BOOL adaptive;



// @property BOOL zeroPadsFractionDigits;



// @property NSFormattingContext formattingContext __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */

#pragma clang assume_nonnull end






// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

// @protocol NSCacheDelegate;

#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0)))

#ifndef _REWRITER_typedef_NSCache
#define _REWRITER_typedef_NSCache
typedef struct objc_object NSCache;
typedef struct {} _objc_exc_NSCache;
#endif

struct NSCache_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	__strong id _delegate;
	void *_private[5];
	void *_reserved;
};


// @property (copy) NSString *name;

// @property (nullable, assign) id<NSCacheDelegate> delegate;

// - (nullable ObjectType)objectForKey:(KeyType)key;
// - (void)setObject:(ObjectType)obj forKey:(KeyType)key;
// - (void)setObject:(ObjectType)obj forKey:(KeyType)key cost:(NSUInteger)g;
// - (void)removeObjectForKey:(KeyType)key;

// - (void)removeAllObjects;

// @property NSUInteger totalCostLimit;
// @property NSUInteger countLimit;
// @property BOOL evictsObjectsWithDiscardedContent;

/* @end */


// @protocol NSCacheDelegate <NSObject>
/* @optional */
// - (void)cache:(NSCache *)cache willEvictObject:(id)obj;
/* @end */

#pragma clang assume_nonnull end




// @class NSDictionary;
#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif


#pragma clang assume_nonnull begin



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_0)))

#ifndef _REWRITER_typedef_NSPredicate
#define _REWRITER_typedef_NSPredicate
typedef struct objc_object NSPredicate;
typedef struct {} _objc_exc_NSPredicate;
#endif

	struct _predicateFlags {
	unsigned int _evaluationBlocked : 1;
	unsigned int _reservedPredicateFlags : 31;
	} ;
struct NSPredicate_IMPL {
	struct NSObject_IMPL NSObject_IVARS;

	struct _predicateFlags _predicateFlags;
	uint32_t reserved;
};



// + (NSPredicate *)predicateWithFormat:(NSString *)predicateFormat argumentArray:(nullable NSArray *)arguments;
// + (NSPredicate *)predicateWithFormat:(NSString *)predicateFormat, ...;
// + (NSPredicate *)predicateWithFormat:(NSString *)predicateFormat arguments:(va_list)argList;

// + (nullable NSPredicate *)predicateFromMetadataQueryString:(NSString *)queryString __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

// + (NSPredicate *)predicateWithValue:(BOOL)value;

// + (NSPredicate*)predicateWithBlock:(BOOL (^)(id _Nullable evaluatedObject, NSDictionary<NSString *, id> * _Nullable bindings))block __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (readonly, copy) NSString *predicateFormat;

// - (instancetype)predicateWithSubstitutionVariables:(NSDictionary<NSString *, id> *)variables;

// - (BOOL)evaluateWithObject:(nullable id)object;

// - (BOOL)evaluateWithObject:(nullable id)object substitutionVariables:(nullable NSDictionary<NSString *, id> *)bindings __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (void)allowEvaluation __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */


// @interface NSArray<ObjectType> (NSPredicateSupport)
// - (NSArray<ObjectType> *)filteredArrayUsingPredicate:(NSPredicate *)predicate;
/* @end */


// @interface NSMutableArray<ObjectType> (NSPredicateSupport)
// - (void)filterUsingPredicate:(NSPredicate *)predicate;
/* @end */



// @interface NSSet<ObjectType> (NSPredicateSupport)
// - (NSSet<ObjectType> *)filteredSetUsingPredicate:(NSPredicate *)predicate __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
/* @end */


// @interface NSMutableSet<ObjectType> (NSPredicateSupport)
// - (void)filterUsingPredicate:(NSPredicate *)predicate __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
/* @end */


// @interface NSOrderedSet<ObjectType> (NSPredicateSupport)

// - (NSOrderedSet<ObjectType> *)filteredOrderedSetUsingPredicate:(NSPredicate *)p __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */


// @interface NSMutableOrderedSet<ObjectType> (NSPredicateSupport)

// - (void)filterUsingPredicate:(NSPredicate *)p __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin


typedef NSUInteger NSComparisonPredicateOptions; enum {
    NSCaseInsensitivePredicateOption = 0x01,
    NSDiacriticInsensitivePredicateOption = 0x02,
    NSNormalizedPredicateOption __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 0x04,
};


typedef NSUInteger NSComparisonPredicateModifier; enum {
    NSDirectPredicateModifier = 0,
    NSAllPredicateModifier,
    NSAnyPredicateModifier
};



typedef NSUInteger NSPredicateOperatorType; enum {
    NSLessThanPredicateOperatorType = 0,
    NSLessThanOrEqualToPredicateOperatorType,
    NSGreaterThanPredicateOperatorType,
    NSGreaterThanOrEqualToPredicateOperatorType,
    NSEqualToPredicateOperatorType,
    NSNotEqualToPredicateOperatorType,
    NSMatchesPredicateOperatorType,
    NSLikePredicateOperatorType,
    NSBeginsWithPredicateOperatorType,
    NSEndsWithPredicateOperatorType,
    NSInPredicateOperatorType,
    NSCustomSelectorPredicateOperatorType,
    NSContainsPredicateOperatorType __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 99,
    NSBetweenPredicateOperatorType __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))
};

// @class NSPredicateOperator;
#ifndef _REWRITER_typedef_NSPredicateOperator
#define _REWRITER_typedef_NSPredicateOperator
typedef struct objc_object NSPredicateOperator;
typedef struct {} _objc_exc_NSPredicateOperator;
#endif

// @class NSExpression;
#ifndef _REWRITER_typedef_NSExpression
#define _REWRITER_typedef_NSExpression
typedef struct objc_object NSExpression;
typedef struct {} _objc_exc_NSExpression;
#endif




__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_0)))

#ifndef _REWRITER_typedef_NSComparisonPredicate
#define _REWRITER_typedef_NSComparisonPredicate
typedef struct objc_object NSComparisonPredicate;
typedef struct {} _objc_exc_NSComparisonPredicate;
#endif

struct NSComparisonPredicate_IMPL {
	struct NSPredicate_IMPL NSPredicate_IVARS;
	void *_reserved2;
	NSPredicateOperator *__strong _predicateOperator;
	NSExpression *__strong _lhs;
	NSExpression *__strong _rhs;
};


// + (NSComparisonPredicate *)predicateWithLeftExpression:(NSExpression *)lhs rightExpression:(NSExpression *)rhs modifier:(NSComparisonPredicateModifier)modifier type:(NSPredicateOperatorType)type options:(NSComparisonPredicateOptions)options;
// + (NSComparisonPredicate *)predicateWithLeftExpression:(NSExpression *)lhs rightExpression:(NSExpression *)rhs customSelector:(SEL)selector;

// - (instancetype)initWithLeftExpression:(NSExpression *)lhs rightExpression:(NSExpression *)rhs modifier:(NSComparisonPredicateModifier)modifier type:(NSPredicateOperatorType)type options:(NSComparisonPredicateOptions)options __attribute__((objc_designated_initializer));
// - (instancetype)initWithLeftExpression:(NSExpression *)lhs rightExpression:(NSExpression *)rhs customSelector:(SEL)selector __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

// @property (readonly) NSPredicateOperatorType predicateOperatorType;
// @property (readonly) NSComparisonPredicateModifier comparisonPredicateModifier;
// @property (readonly, retain) NSExpression *leftExpression;
// @property (readonly, retain) NSExpression *rightExpression;
// @property (nullable, readonly) SEL customSelector;
// @property (readonly) NSComparisonPredicateOptions options;

/* @end */

#pragma clang assume_nonnull end






// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif


#pragma clang assume_nonnull begin



typedef NSUInteger NSCompoundPredicateType; enum {
    NSNotPredicateType = 0,
    NSAndPredicateType,
    NSOrPredicateType,
};

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_0)))

#ifndef _REWRITER_typedef_NSCompoundPredicate
#define _REWRITER_typedef_NSCompoundPredicate
typedef struct objc_object NSCompoundPredicate;
typedef struct {} _objc_exc_NSCompoundPredicate;
#endif

struct NSCompoundPredicate_IMPL {
	struct NSPredicate_IMPL NSPredicate_IVARS;
	void *_reserved2;
	NSUInteger _type;
	NSArray *__strong _subpredicates;
};


// - (instancetype)initWithType:(NSCompoundPredicateType)type subpredicates:(NSArray<NSPredicate *> *)subpredicates __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

// @property (readonly) NSCompoundPredicateType compoundPredicateType;
// @property (readonly, copy) NSArray *subpredicates;


// + (NSCompoundPredicate *)andPredicateWithSubpredicates:(NSArray<NSPredicate *> *)subpredicates __attribute__((swift_name("init(andPredicateWithSubpredicates:)")));
// + (NSCompoundPredicate *)orPredicateWithSubpredicates:(NSArray<NSPredicate *> *)subpredicates __attribute__((swift_name("init(orPredicateWithSubpredicates:)")));
// + (NSCompoundPredicate *)notPredicateWithSubpredicate:(NSPredicate *)predicate __attribute__((swift_name("init(notPredicateWithSubpredicate:)")));

/* @end */

#pragma clang assume_nonnull end








#pragma clang assume_nonnull begin

__attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))
typedef NSInteger NSDateComponentsFormatterUnitsStyle; enum {
    NSDateComponentsFormatterUnitsStylePositional = 0,
    NSDateComponentsFormatterUnitsStyleAbbreviated,
    NSDateComponentsFormatterUnitsStyleShort,
    NSDateComponentsFormatterUnitsStyleFull,
    NSDateComponentsFormatterUnitsStyleSpellOut,
    NSDateComponentsFormatterUnitsStyleBrief __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))
};

__attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))
typedef NSUInteger NSDateComponentsFormatterZeroFormattingBehavior; enum {
    NSDateComponentsFormatterZeroFormattingBehaviorNone = (0),
    NSDateComponentsFormatterZeroFormattingBehaviorDefault = (1 << 0),

    NSDateComponentsFormatterZeroFormattingBehaviorDropLeading = (1 << 1),
    NSDateComponentsFormatterZeroFormattingBehaviorDropMiddle = (1 << 2),
    NSDateComponentsFormatterZeroFormattingBehaviorDropTrailing = (1 << 3),
    NSDateComponentsFormatterZeroFormattingBehaviorDropAll = (NSDateComponentsFormatterZeroFormattingBehaviorDropLeading | NSDateComponentsFormatterZeroFormattingBehaviorDropMiddle | NSDateComponentsFormatterZeroFormattingBehaviorDropTrailing),

    NSDateComponentsFormatterZeroFormattingBehaviorPad = (1 << 16),
};



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))

#ifndef _REWRITER_typedef_NSDateComponentsFormatter
#define _REWRITER_typedef_NSDateComponentsFormatter
typedef struct objc_object NSDateComponentsFormatter;
typedef struct {} _objc_exc_NSDateComponentsFormatter;
#endif

struct NSDateComponentsFormatter_IMPL {
	struct NSFormatter_IMPL NSFormatter_IVARS;
	pthread_mutex_t _lock;
	void *_fmt;
	void *_unused;
	NSString *__strong _fmtLocaleIdent;
	NSCalendar *__strong _calendar;
	NSDate *__strong _referenceDate;
	NSNumberFormatter *__strong _unitFormatter;
	NSCalendarUnit _allowedUnits;
	NSFormattingContext _formattingContext;
	NSDateComponentsFormatterUnitsStyle _unitsStyle;
	NSDateComponentsFormatterZeroFormattingBehavior _zeroFormattingBehavior;
	NSInteger _maximumUnitCount;
	BOOL _allowsFractionalUnits;
	BOOL _collapsesLargestUnit;
	BOOL _includesApproximationPhrase;
	BOOL _includesTimeRemainingPhrase;
	void *_reserved;
};




// - (nullable NSString *)stringForObjectValue:(nullable id)obj;



// - (nullable NSString *)stringFromDateComponents:(NSDateComponents *)components;







// - (nullable NSString *)stringFromDate:(NSDate *)startDate toDate:(NSDate *)endDate;



// - (nullable NSString *)stringFromTimeInterval:(NSTimeInterval)ti;


// + (nullable NSString *)localizedStringFromDateComponents:(NSDateComponents *)components unitsStyle:(NSDateComponentsFormatterUnitsStyle) unitsStyle;



// @property NSDateComponentsFormatterUnitsStyle unitsStyle;
// @property NSCalendarUnit allowedUnits;





// @property NSDateComponentsFormatterZeroFormattingBehavior zeroFormattingBehavior;



// @property (nullable, copy) NSCalendar *calendar;



// @property (nullable, copy) NSDate *referenceDate __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));



// @property BOOL allowsFractionalUnits;
// @property NSInteger maximumUnitCount;



// @property BOOL collapsesLargestUnit;



// @property BOOL includesApproximationPhrase;



// @property BOOL includesTimeRemainingPhrase;




// @property NSFormattingContext formattingContext;



// - (BOOL)getObjectValue:(out id _Nullable * _Nullable)obj forString:(NSString *)string errorDescription:(out NSString * _Nullable * _Nullable)error;

/* @end */

#pragma clang assume_nonnull end






// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

// @class NSMutableDictionary;
#ifndef _REWRITER_typedef_NSMutableDictionary
#define _REWRITER_typedef_NSMutableDictionary
typedef struct objc_object NSMutableDictionary;
typedef struct {} _objc_exc_NSMutableDictionary;
#endif

// @class NSPredicate;
#ifndef _REWRITER_typedef_NSPredicate
#define _REWRITER_typedef_NSPredicate
typedef struct objc_object NSPredicate;
typedef struct {} _objc_exc_NSPredicate;
#endif


#pragma clang assume_nonnull begin



typedef NSUInteger NSExpressionType; enum {
    NSConstantValueExpressionType = 0,
    NSEvaluatedObjectExpressionType,
    NSVariableExpressionType,
    NSKeyPathExpressionType,
    NSFunctionExpressionType,
    NSUnionSetExpressionType __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))),
    NSIntersectSetExpressionType __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))),
    NSMinusSetExpressionType __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))),
    NSSubqueryExpressionType __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 13,
    NSAggregateExpressionType __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 14,
    NSAnyKeyExpressionType __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 15,
    NSBlockExpressionType = 19,
    NSConditionalExpressionType __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 20

};

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_0)))

#ifndef _REWRITER_typedef_NSExpression
#define _REWRITER_typedef_NSExpression
typedef struct objc_object NSExpression;
typedef struct {} _objc_exc_NSExpression;
#endif

	struct _expressionFlags {
	unsigned int _evaluationBlocked : 1;
	unsigned int _reservedExpressionFlags : 31;
	} ;
struct NSExpression_IMPL {
	struct NSObject_IMPL NSObject_IVARS;

	struct _expressionFlags _expressionFlags;
	uint32_t reserved;
	NSExpressionType _expressionType;
};


// + (NSExpression *)expressionWithFormat:(NSString *)expressionFormat argumentArray:(NSArray *)arguments __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (NSExpression *)expressionWithFormat:(NSString *)expressionFormat, ... __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (NSExpression *)expressionWithFormat:(NSString *)expressionFormat arguments:(va_list)argList __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// + (NSExpression *)expressionForConstantValue:(nullable id)obj;
// + (NSExpression *)expressionForEvaluatedObject;
// + (NSExpression *)expressionForVariable:(NSString *)string;
// + (NSExpression *)expressionForKeyPath:(NSString *)keyPath;
// + (NSExpression *)expressionForFunction:(NSString *)name arguments:(NSArray *)parameters;
// + (NSExpression *)expressionForAggregate:(NSArray<NSExpression *> *)subexpressions __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (NSExpression *)expressionForUnionSet:(NSExpression *)left with:(NSExpression *)right __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (NSExpression *)expressionForIntersectSet:(NSExpression *)left with:(NSExpression *)right __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (NSExpression *)expressionForMinusSet:(NSExpression *)left with:(NSExpression *)right __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (NSExpression *)expressionForSubquery:(NSExpression *)expression usingIteratorVariable:(NSString *)variable predicate:(NSPredicate *)predicate __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (NSExpression *)expressionForFunction:(NSExpression *)target selectorName:(NSString *)name arguments:(nullable NSArray *)parameters __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (NSExpression *)expressionForAnyKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (NSExpression *)expressionForBlock:(id (^)(id _Nullable evaluatedObject, NSArray<NSExpression *> *expressions, NSMutableDictionary * _Nullable context))block arguments:(nullable NSArray<NSExpression *> *)arguments __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// + (NSExpression *)expressionForConditional:(NSPredicate *)predicate trueExpression:(NSExpression *)trueExpression falseExpression:(NSExpression *)falseExpression __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// - (instancetype)initWithExpressionType:(NSExpressionType)type __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));


// @property (readonly) NSExpressionType expressionType;
// @property (nullable, readonly, retain) id constantValue;
// @property (readonly, copy) NSString *keyPath;
// @property (readonly, copy) NSString *function;
// @property (readonly, copy) NSString *variable;
// @property (readonly, copy) NSExpression *operand;
// @property (nullable, readonly, copy) NSArray<NSExpression *> *arguments;

// @property (readonly, retain) id collection __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, copy) NSPredicate *predicate __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, copy) NSExpression *leftExpression __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, copy) NSExpression *rightExpression __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


// @property (readonly, copy) NSExpression *trueExpression __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly, copy) NSExpression *falseExpression __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (readonly, copy) id (^expressionBlock)(id _Nullable, NSArray<NSExpression *> *, NSMutableDictionary * _Nullable) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


// - (nullable id)expressionValueWithObject:(nullable id)object context:(nullable NSMutableDictionary *)context;

// - (void)allowEvaluation __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))

#ifndef _REWRITER_typedef_NSExtensionContext
#define _REWRITER_typedef_NSExtensionContext
typedef struct objc_object NSExtensionContext;
typedef struct {} _objc_exc_NSExtensionContext;
#endif

struct NSExtensionContext_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



// @property(readonly, copy, nonatomic) NSArray *inputItems;


// - (void)completeRequestReturningItems:(nullable NSArray *)items completionHandler:(void(^ _Nullable)(BOOL expired))completionHandler;


// - (void)cancelRequestWithError:(NSError *)error;


// - (void)openURL:(NSURL *)URL completionHandler:(void (^ _Nullable)(BOOL success))completionHandler;

/* @end */



extern "C" NSString * _Null_unspecified const NSExtensionItemsAndErrorsKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern "C" NSString * _Null_unspecified const NSExtensionHostWillEnterForegroundNotification __attribute__((availability(ios,introduced=8.2))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));


extern "C" NSString * _Null_unspecified const NSExtensionHostDidEnterBackgroundNotification __attribute__((availability(ios,introduced=8.2))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));


extern "C" NSString * _Null_unspecified const NSExtensionHostWillResignActiveNotification __attribute__((availability(ios,introduced=8.2))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));


extern "C" NSString * _Null_unspecified const NSExtensionHostDidBecomeActiveNotification __attribute__((availability(ios,introduced=8.2))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));
#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))

#ifndef _REWRITER_typedef_NSExtensionItem
#define _REWRITER_typedef_NSExtensionItem
typedef struct objc_object NSExtensionItem;
typedef struct {} _objc_exc_NSExtensionItem;
#endif

struct NSExtensionItem_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



// @property(nullable, copy, nonatomic) NSAttributedString *attributedTitle;


// @property(nullable, copy, nonatomic) NSAttributedString *attributedContentText;


// @property(nullable, copy, nonatomic) NSArray *attachments;


// @property(nullable, copy, nonatomic) NSDictionary *userInfo;

/* @end */



extern "C" NSString * _Null_unspecified const NSExtensionItemAttributedTitleKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * _Null_unspecified const NSExtensionItemAttributedContentTextKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * _Null_unspecified const NSExtensionItemAttachmentsKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
#pragma clang assume_nonnull end







#pragma clang assume_nonnull begin

// @class NSExtensionContext;
#ifndef _REWRITER_typedef_NSExtensionContext
#define _REWRITER_typedef_NSExtensionContext
typedef struct objc_object NSExtensionContext;
typedef struct {} _objc_exc_NSExtensionContext;
#endif



// @protocol NSExtensionRequestHandling <NSObject>

/* @required */


// - (void)beginRequestWithExtensionContext:(NSExtensionContext *)context;

/* @end */

#pragma clang assume_nonnull end
// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSError
#define _REWRITER_typedef_NSError
typedef struct objc_object NSError;
typedef struct {} _objc_exc_NSError;
#endif

#ifndef _REWRITER_typedef_NSMutableDictionary
#define _REWRITER_typedef_NSMutableDictionary
typedef struct objc_object NSMutableDictionary;
typedef struct {} _objc_exc_NSMutableDictionary;
#endif

#ifndef _REWRITER_typedef_NSOperationQueue
#define _REWRITER_typedef_NSOperationQueue
typedef struct objc_object NSOperationQueue;
typedef struct {} _objc_exc_NSOperationQueue;
#endif

#ifndef _REWRITER_typedef_NSSet
#define _REWRITER_typedef_NSSet
typedef struct objc_object NSSet;
typedef struct {} _objc_exc_NSSet;
#endif


// @protocol NSFilePresenter;

#pragma clang assume_nonnull begin

typedef NSUInteger NSFileCoordinatorReadingOptions; enum {



    NSFileCoordinatorReadingWithoutChanges = 1 << 0,



    NSFileCoordinatorReadingResolvesSymbolicLink = 1 << 1,



    NSFileCoordinatorReadingImmediatelyAvailableMetadataOnly __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 1 << 2,





    NSFileCoordinatorReadingForUploading __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 1 << 3,

};

typedef NSUInteger NSFileCoordinatorWritingOptions; enum {
    NSFileCoordinatorWritingForDeleting = 1 << 0,





    NSFileCoordinatorWritingForMoving = 1 << 1,



    NSFileCoordinatorWritingForMerging = 1 << 2,







    NSFileCoordinatorWritingForReplacing = 1 << 3,



    NSFileCoordinatorWritingContentIndependentMetadataOnly __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 1 << 4

};


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))

#ifndef _REWRITER_typedef_NSFileAccessIntent
#define _REWRITER_typedef_NSFileAccessIntent
typedef struct objc_object NSFileAccessIntent;
typedef struct {} _objc_exc_NSFileAccessIntent;
#endif

struct NSFileAccessIntent_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSURL *__strong _url;
	BOOL _isRead;
	NSInteger _options;
};

// + (instancetype)readingIntentWithURL:(NSURL *)url options:(NSFileCoordinatorReadingOptions)options;
// + (instancetype)writingIntentWithURL:(NSURL *)url options:(NSFileCoordinatorWritingOptions)options;
// @property (readonly, copy) NSURL *URL;
/* @end */



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0)))

#ifndef _REWRITER_typedef_NSFileCoordinator
#define _REWRITER_typedef_NSFileCoordinator
typedef struct objc_object NSFileCoordinator;
typedef struct {} _objc_exc_NSFileCoordinator;
#endif

struct NSFileCoordinator_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	__strong id _accessArbiter;
	__strong id _fileReactor;
	__strong id _purposeID;
	NSURL *__strong _recentFilePresenterURL;
	__strong id _accessClaimIDOrIDs;
	BOOL _isCancelled;
	NSMutableDictionary *__strong _movedItems;
};








// + (void)addFilePresenter:(id<NSFilePresenter>)filePresenter;
// + (void)removeFilePresenter:(id<NSFilePresenter>)filePresenter;
@property (class, readonly, copy) NSArray<id<NSFilePresenter>> *filePresenters;
// - (instancetype)initWithFilePresenter:(nullable id<NSFilePresenter>)filePresenterOrNil __attribute__((objc_designated_initializer));
// @property (copy) NSString *purposeIdentifier __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)coordinateAccessWithIntents:(NSArray<NSFileAccessIntent *> *)intents queue:(NSOperationQueue *)queue byAccessor:(void (^)(NSError * _Nullable error))accessor __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)coordinateReadingItemAtURL:(NSURL *)url options:(NSFileCoordinatorReadingOptions)options error:(NSError **)outError byAccessor:(void (__attribute__((noescape)) ^)(NSURL *newURL))reader;
// - (void)coordinateWritingItemAtURL:(NSURL *)url options:(NSFileCoordinatorWritingOptions)options error:(NSError **)outError byAccessor:(void (__attribute__((noescape)) ^)(NSURL *newURL))writer;
// - (void)coordinateReadingItemAtURL:(NSURL *)readingURL options:(NSFileCoordinatorReadingOptions)readingOptions writingItemAtURL:(NSURL *)writingURL options:(NSFileCoordinatorWritingOptions)writingOptions error:(NSError **)outError byAccessor:(void (__attribute__((noescape)) ^)(NSURL *newReadingURL, NSURL *newWritingURL))readerWriter;
// - (void)coordinateWritingItemAtURL:(NSURL *)url1 options:(NSFileCoordinatorWritingOptions)options1 writingItemAtURL:(NSURL *)url2 options:(NSFileCoordinatorWritingOptions)options2 error:(NSError **)outError byAccessor:(void (__attribute__((noescape)) ^)(NSURL *newURL1, NSURL *newURL2))writer;
// - (void)prepareForReadingItemsAtURLs:(NSArray<NSURL *> *)readingURLs options:(NSFileCoordinatorReadingOptions)readingOptions writingItemsAtURLs:(NSArray<NSURL *> *)writingURLs options:(NSFileCoordinatorWritingOptions)writingOptions error:(NSError **)outError byAccessor:(void (__attribute__((noescape)) ^)(void (^completionHandler)(void)))batchAccessor;
// - (void)itemAtURL:(NSURL *)oldURL willMoveToURL:(NSURL *)newURL __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)itemAtURL:(NSURL *)oldURL didMoveToURL:(NSURL *)newURL;







// - (void)itemAtURL:(NSURL *)url didChangeUbiquityAttributes:(NSSet <NSURLResourceKey> *)attributes __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));







// - (void)cancel;

/* @end */

#pragma clang assume_nonnull end
// @class NSError;
#ifndef _REWRITER_typedef_NSError
#define _REWRITER_typedef_NSError
typedef struct objc_object NSError;
typedef struct {} _objc_exc_NSError;
#endif

#ifndef _REWRITER_typedef_NSFileVersion
#define _REWRITER_typedef_NSFileVersion
typedef struct objc_object NSFileVersion;
typedef struct {} _objc_exc_NSFileVersion;
#endif

#ifndef _REWRITER_typedef_NSOperationQueue
#define _REWRITER_typedef_NSOperationQueue
typedef struct objc_object NSOperationQueue;
typedef struct {} _objc_exc_NSOperationQueue;
#endif

#ifndef _REWRITER_typedef_NSSet
#define _REWRITER_typedef_NSSet
typedef struct objc_object NSSet;
typedef struct {} _objc_exc_NSSet;
#endif


#pragma clang assume_nonnull begin







// @protocol NSFilePresenter<NSObject>

/* @required */





// @property (nullable, readonly, copy) NSURL *presentedItemURL;





// @property (readonly, retain) NSOperationQueue *presentedItemOperationQueue;

/* @optional */



// @property (nullable, readonly, copy) NSURL *primaryPresentedItemURL __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));





// - (void)relinquishPresentedItemToReader:(void (^)(void (^ _Nullable reacquirer)(void)))reader;





// - (void)relinquishPresentedItemToWriter:(void (^)(void (^ _Nullable reacquirer)(void)))writer;







// - (void)savePresentedItemChangesWithCompletionHandler:(void (^)(NSError * _Nullable errorOrNil))completionHandler;







// - (void)accommodatePresentedItemDeletionWithCompletionHandler:(void (^)(NSError * _Nullable errorOrNil))completionHandler;
// - (void)presentedItemDidMoveToURL:(NSURL *)newURL;
// - (void)presentedItemDidChange;





// - (void)presentedItemDidChangeUbiquityAttributes:(NSSet<NSURLResourceKey> *)attributes __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));







// @property (readonly, strong) NSSet<NSURLResourceKey> *observedPresentedItemUbiquityAttributes __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));





// - (void)presentedItemDidGainVersion:(NSFileVersion *)version;
// - (void)presentedItemDidLoseVersion:(NSFileVersion *)version;
// - (void)presentedItemDidResolveConflictVersion:(NSFileVersion *)version;
// - (void)accommodatePresentedSubitemDeletionAtURL:(NSURL *)url completionHandler:(void (^)(NSError * _Nullable errorOrNil))completionHandler;





// - (void)presentedSubitemDidAppearAtURL:(NSURL *)url;





// - (void)presentedSubitemAtURL:(NSURL *)oldURL didMoveToURL:(NSURL *)newURL;





// - (void)presentedSubitemDidChangeAtURL:(NSURL *)url;



// - (void)presentedSubitemAtURL:(NSURL *)url didGainVersion:(NSFileVersion *)version;
// - (void)presentedSubitemAtURL:(NSURL *)url didLoseVersion:(NSFileVersion *)version;
// - (void)presentedSubitemAtURL:(NSURL *)url didResolveConflictVersion:(NSFileVersion *)version;

/* @end */

#pragma clang assume_nonnull end








// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSDate
#define _REWRITER_typedef_NSDate
typedef struct objc_object NSDate;
typedef struct {} _objc_exc_NSDate;
#endif

#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

#ifndef _REWRITER_typedef_NSError
#define _REWRITER_typedef_NSError
typedef struct objc_object NSError;
typedef struct {} _objc_exc_NSError;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSURL
#define _REWRITER_typedef_NSURL
typedef struct objc_object NSURL;
typedef struct {} _objc_exc_NSURL;
#endif

#ifndef _REWRITER_typedef_NSPersonNameComponents
#define _REWRITER_typedef_NSPersonNameComponents
typedef struct objc_object NSPersonNameComponents;
typedef struct {} _objc_exc_NSPersonNameComponents;
#endif


#pragma clang assume_nonnull begin

typedef NSUInteger NSFileVersionAddingOptions; enum {



    NSFileVersionAddingByMoving = 1 << 0

};

typedef NSUInteger NSFileVersionReplacingOptions; enum {



    NSFileVersionReplacingByMoving = 1 << 0

};



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0)))

#ifndef _REWRITER_typedef_NSFileVersion
#define _REWRITER_typedef_NSFileVersion
typedef struct objc_object NSFileVersion;
typedef struct {} _objc_exc_NSFileVersion;
#endif

struct NSFileVersion_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSURL *__strong _fileURL;
	__strong id _addition;
	__strong id _deadVersionIdentifier;
	__strong id _nonLocalVersion;
	NSURL *__strong _contentsURL;
	BOOL _isBackup;
	NSString *__strong _localizedName;
	NSString *__strong _localizedComputerName;
	NSDate *__strong _modificationDate;
	BOOL _isResolved;
	BOOL _contentsURLIsAccessed;
	__strong id _reserved;
	NSString *__strong _name;
};




// + (nullable NSFileVersion *)currentVersionOfItemAtURL:(NSURL *)url;



// + (nullable NSArray<NSFileVersion *> *)otherVersionsOfItemAtURL:(NSURL *)url;



// + (nullable NSArray<NSFileVersion *> *)unresolvedConflictVersionsOfItemAtURL:(NSURL *)url;







// + (void)getNonlocalVersionsOfItemAtURL:(NSURL *)url completionHandler:(void (^)(NSArray<NSFileVersion *> * _Nullable nonlocalFileVersions, NSError * _Nullable error))completionHandler __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// + (nullable NSFileVersion *)versionOfItemAtURL:(NSURL *)url forPersistentIdentifier:(id)persistentIdentifier;







// + (nullable NSFileVersion *)addVersionOfItemAtURL:(NSURL *)url withContentsOfURL:(NSURL *)contentsURL options:(NSFileVersionAddingOptions)options error:(NSError **)outError __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));



// + (NSURL *)temporaryDirectoryURLForNewVersionOfItemAtURL:(NSURL *)url __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));



// @property (readonly, copy) NSURL *URL;



// @property (nullable, readonly, copy) NSString *localizedName;



// @property (nullable, readonly, copy) NSString *localizedNameOfSavingComputer;



// @property (nullable, readonly, copy) NSPersonNameComponents *originatorNameComponents __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));



// @property (nullable, readonly, copy) NSDate *modificationDate;



// @property (readonly, retain) id<NSCoding> persistentIdentifier;



// @property (readonly, getter=isConflict) BOOL conflict;







// @property (getter=isResolved) BOOL resolved;
// @property (getter=isDiscardable) BOOL discardable __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));



// @property (readonly) BOOL hasLocalContents __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// @property (readonly) BOOL hasThumbnail __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (nullable NSURL *)replaceItemAtURL:(NSURL *)url options:(NSFileVersionReplacingOptions)options error:(NSError **)error;







// - (BOOL)removeAndReturnError:(NSError **)outError;





// + (BOOL)removeOtherVersionsOfItemAtURL:(NSURL *)url error:(NSError **)outError;

/* @end */

#pragma clang assume_nonnull end







// @class NSData;
#ifndef _REWRITER_typedef_NSData
#define _REWRITER_typedef_NSData
typedef struct objc_object NSData;
typedef struct {} _objc_exc_NSData;
#endif

#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

#ifndef _REWRITER_typedef_NSError
#define _REWRITER_typedef_NSError
typedef struct objc_object NSError;
typedef struct {} _objc_exc_NSError;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSURL
#define _REWRITER_typedef_NSURL
typedef struct objc_object NSURL;
typedef struct {} _objc_exc_NSURL;
#endif


#pragma clang assume_nonnull begin

typedef NSUInteger NSFileWrapperReadingOptions; enum {



    NSFileWrapperReadingImmediate = 1 << 0,



    NSFileWrapperReadingWithoutMapping = 1 << 1

} __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

typedef NSUInteger NSFileWrapperWritingOptions; enum {



    NSFileWrapperWritingAtomic = 1 << 0,



    NSFileWrapperWritingWithNameUpdating = 1 << 1

} __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0)))

#ifndef _REWRITER_typedef_NSFileWrapper
#define _REWRITER_typedef_NSFileWrapper
typedef struct objc_object NSFileWrapper;
typedef struct {} _objc_exc_NSFileWrapper;
#endif

struct NSFileWrapper_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSDictionary *__strong _fileAttributes;
	NSString *__strong _preferredFileName;
	NSString *__strong _fileName;
	__strong id _contents;
	__strong id _icon;
	__strong id _moreVars;
};






// - (nullable instancetype)initWithURL:(NSURL *)url options:(NSFileWrapperReadingOptions)options error:(NSError **)outError __attribute__((objc_designated_initializer)) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (instancetype)initDirectoryWithFileWrappers:(NSDictionary<NSString *, NSFileWrapper *> *)childrenByPreferredName __attribute__((objc_designated_initializer));



// - (instancetype)initRegularFileWithContents:(NSData *)contents __attribute__((objc_designated_initializer));



// - (instancetype)initSymbolicLinkWithDestinationURL:(NSURL *)url __attribute__((objc_designated_initializer)) __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (nullable instancetype)initWithSerializedRepresentation:(NSData *)serializeRepresentation __attribute__((objc_designated_initializer));

// - (nullable instancetype)initWithCoder:(NSCoder *)inCoder __attribute__((objc_designated_initializer));





// @property (readonly, getter=isDirectory) BOOL directory;
// @property (readonly, getter=isRegularFile) BOOL regularFile;
// @property (readonly, getter=isSymbolicLink) BOOL symbolicLink;





// @property (nullable, copy) NSString *preferredFilename;



// @property (nullable, copy) NSString *filename;



// @property (copy) NSDictionary<NSString *, id> *fileAttributes;
// - (BOOL)matchesContentsOfURL:(NSURL *)url __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (BOOL)readFromURL:(NSURL *)url options:(NSFileWrapperReadingOptions)options error:(NSError **)outError __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (BOOL)writeToURL:(NSURL *)url options:(NSFileWrapperWritingOptions)options originalContentsURL:(nullable NSURL *)originalContentsURL error:(NSError **)outError __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// @property (nullable, readonly, copy) NSData *serializedRepresentation;







// - (NSString *)addFileWrapper:(NSFileWrapper *)child;



// - (NSString *)addRegularFileWithContents:(NSData *)data preferredFilename:(NSString *)fileName;



// - (void)removeFileWrapper:(NSFileWrapper *)child;



// @property (nullable, readonly, copy) NSDictionary<NSString *, NSFileWrapper *> *fileWrappers;



// - (nullable NSString *)keyForFileWrapper:(NSFileWrapper *)child;







// @property (nullable, readonly, copy) NSData *regularFileContents;







// @property (nullable, readonly, copy) NSURL *symbolicLinkDestinationURL __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */

#pragma clang assume_nonnull end








// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSOrthography
#define _REWRITER_typedef_NSOrthography
typedef struct objc_object NSOrthography;
typedef struct {} _objc_exc_NSOrthography;
#endif

#ifndef _REWRITER_typedef_NSValue
#define _REWRITER_typedef_NSValue
typedef struct objc_object NSValue;
typedef struct {} _objc_exc_NSValue;
#endif


#pragma clang assume_nonnull begin





typedef NSString *NSLinguisticTagScheme __attribute__((swift_wrapper(struct)));

extern "C" NSLinguisticTagScheme const NSLinguisticTagSchemeTokenType __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTagScheme const NSLinguisticTagSchemeLexicalClass __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTagScheme const NSLinguisticTagSchemeNameType __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTagScheme const NSLinguisticTagSchemeNameTypeOrLexicalClass __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTagScheme const NSLinguisticTagSchemeLemma __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTagScheme const NSLinguisticTagSchemeLanguage __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTagScheme const NSLinguisticTagSchemeScript __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

typedef NSString *NSLinguisticTag __attribute__((swift_wrapper(struct)));


extern "C" NSLinguisticTag const NSLinguisticTagWord __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagPunctuation __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagWhitespace __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagOther __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern "C" NSLinguisticTag const NSLinguisticTagNoun __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagVerb __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagAdjective __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagAdverb __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagPronoun __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagDeterminer __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagParticle __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagPreposition __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagNumber __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagConjunction __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagInterjection __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagClassifier __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagIdiom __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagOtherWord __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagSentenceTerminator __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagOpenQuote __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagCloseQuote __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagOpenParenthesis __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagCloseParenthesis __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagWordJoiner __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagDash __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagOtherPunctuation __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagParagraphBreak __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagOtherWhitespace __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern "C" NSLinguisticTag const NSLinguisticTagPersonalName __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagPlaceName __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSLinguisticTag const NSLinguisticTagOrganizationName __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






typedef NSInteger NSLinguisticTaggerUnit; enum {
    NSLinguisticTaggerUnitWord,
    NSLinguisticTaggerUnitSentence,
    NSLinguisticTaggerUnitParagraph,
    NSLinguisticTaggerUnitDocument
};


typedef NSUInteger NSLinguisticTaggerOptions; enum {
    NSLinguisticTaggerOmitWords = 1 << 0,
    NSLinguisticTaggerOmitPunctuation = 1 << 1,
    NSLinguisticTaggerOmitWhitespace = 1 << 2,
    NSLinguisticTaggerOmitOther = 1 << 3,
    NSLinguisticTaggerJoinNames = 1 << 4
};


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0)))

#ifndef _REWRITER_typedef_NSLinguisticTagger
#define _REWRITER_typedef_NSLinguisticTagger
typedef struct objc_object NSLinguisticTagger;
typedef struct {} _objc_exc_NSLinguisticTagger;
#endif

struct NSLinguisticTagger_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSArray *__strong _schemes;
	NSUInteger _options;
	NSString *__strong _string;
	__strong id _orthographyArray;
	__strong id _tokenArray;
	void *_reserved;
};




// - (instancetype)initWithTagSchemes:(NSArray<NSLinguisticTagScheme> *)tagSchemes options:(NSUInteger)opts __attribute__((objc_designated_initializer)) __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (readonly, copy) NSArray<NSLinguisticTagScheme> *tagSchemes __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (nullable, retain) NSString *string __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// + (NSArray<NSLinguisticTagScheme> *)availableTagSchemesForUnit:(NSLinguisticTaggerUnit)unit language:(NSString *)language __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));



// + (NSArray<NSLinguisticTagScheme> *)availableTagSchemesForLanguage:(NSString *)language __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (void)setOrthography:(nullable NSOrthography *)orthography range:(NSRange)range __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (nullable NSOrthography *)orthographyAtIndex:(NSUInteger)charIndex effectiveRange:(nullable NSRangePointer)effectiveRange __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (void)stringEditedInRange:(NSRange)newRange changeInLength:(NSInteger)delta __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (NSRange)tokenRangeAtIndex:(NSUInteger)charIndex unit:(NSLinguisticTaggerUnit)unit __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));



// - (NSRange)sentenceRangeForRange:(NSRange)range __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (void)enumerateTagsInRange:(NSRange)range unit:(NSLinguisticTaggerUnit)unit scheme:(NSLinguisticTagScheme)scheme options:(NSLinguisticTaggerOptions)options usingBlock:(void (__attribute__((noescape)) ^)(NSLinguisticTag _Nullable tag, NSRange tokenRange, BOOL *stop))block __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
// - (nullable NSLinguisticTag)tagAtIndex:(NSUInteger)charIndex unit:(NSLinguisticTaggerUnit)unit scheme:(NSLinguisticTagScheme)scheme tokenRange:(nullable NSRangePointer)tokenRange __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
// - (NSArray<NSLinguisticTag> *)tagsInRange:(NSRange)range unit:(NSLinguisticTaggerUnit)unit scheme:(NSLinguisticTagScheme)scheme options:(NSLinguisticTaggerOptions)options tokenRanges:(NSArray<NSValue *> * _Nullable * _Nullable)tokenRanges __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));



// - (void)enumerateTagsInRange:(NSRange)range scheme:(NSLinguisticTagScheme)tagScheme options:(NSLinguisticTaggerOptions)opts usingBlock:(void (__attribute__((noescape)) ^)(NSLinguisticTag _Nullable tag, NSRange tokenRange, NSRange sentenceRange, BOOL *stop))block __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (nullable NSLinguisticTag)tagAtIndex:(NSUInteger)charIndex scheme:(NSLinguisticTagScheme)scheme tokenRange:(nullable NSRangePointer)tokenRange sentenceRange:(nullable NSRangePointer)sentenceRange __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (NSArray<NSString *> *)tagsInRange:(NSRange)range scheme:(NSString *)tagScheme options:(NSLinguisticTaggerOptions)opts tokenRanges:(NSArray<NSValue *> * _Nullable * _Nullable)tokenRanges __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// @property (nullable, readonly, copy) NSString *dominantLanguage __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));



// + (nullable NSString *)dominantLanguageForString:(NSString *)string __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
// + (nullable NSLinguisticTag)tagForString:(NSString *)string atIndex:(NSUInteger)charIndex unit:(NSLinguisticTaggerUnit)unit scheme:(NSLinguisticTagScheme)scheme orthography:(nullable NSOrthography *)orthography tokenRange:(nullable NSRangePointer)tokenRange __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
// + (NSArray<NSLinguisticTag> *)tagsForString:(NSString *)string range:(NSRange)range unit:(NSLinguisticTaggerUnit)unit scheme:(NSLinguisticTagScheme)scheme options:(NSLinguisticTaggerOptions)options orthography:(nullable NSOrthography *)orthography tokenRanges:(NSArray<NSValue *> * _Nullable * _Nullable)tokenRanges __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
// + (void)enumerateTagsForString:(NSString *)string range:(NSRange)range unit:(NSLinguisticTaggerUnit)unit scheme:(NSLinguisticTagScheme)scheme options:(NSLinguisticTaggerOptions)options orthography:(nullable NSOrthography *)orthography usingBlock:(void (__attribute__((noescape)) ^)(NSLinguisticTag _Nullable tag, NSRange tokenRange, BOOL *stop))block __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));



// - (nullable NSArray<NSString *> *)possibleTagsAtIndex:(NSUInteger)charIndex scheme:(NSString *)tagScheme tokenRange:(nullable NSRangePointer)tokenRange sentenceRange:(nullable NSRangePointer)sentenceRange scores:(NSArray<NSValue *> * _Nullable * _Nullable)scores __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */


// @interface NSString (NSLinguisticAnalysis)



// - (NSArray<NSLinguisticTag> *)linguisticTagsInRange:(NSRange)range scheme:(NSLinguisticTagScheme)scheme options:(NSLinguisticTaggerOptions)options orthography:(nullable NSOrthography *)orthography tokenRanges:(NSArray<NSValue *> * _Nullable * _Nullable)tokenRanges __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)enumerateLinguisticTagsInRange:(NSRange)range scheme:(NSLinguisticTagScheme)scheme options:(NSLinguisticTaggerOptions)options orthography:(nullable NSOrthography *)orthography usingBlock:(void (__attribute__((noescape)) ^)(NSLinguisticTag _Nullable tag, NSRange tokenRange, NSRange sentenceRange, BOOL *stop))block __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */

#pragma clang assume_nonnull end










// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif


#pragma clang assume_nonnull begin



extern "C" NSString * const NSMetadataItemFSNameKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSMetadataItemDisplayNameKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSMetadataItemURLKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSMetadataItemPathKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSMetadataItemFSSizeKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSMetadataItemFSCreationDateKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSMetadataItemFSContentChangeDateKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSMetadataItemContentTypeKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSMetadataItemContentTypeTreeKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern "C" NSString * const NSMetadataItemIsUbiquitousKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern "C" NSString * const NSMetadataUbiquitousItemHasUnresolvedConflictsKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSMetadataUbiquitousItemIsDownloadedKey __attribute__((availability(macos,introduced=10.7,deprecated=10.9,message="Use NSMetadataUbiquitousItemDownloadingStatusKey instead"))) __attribute__((availability(ios,introduced=5.0,deprecated=7.0,message="Use NSMetadataUbiquitousItemDownloadingStatusKey instead"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Use NSMetadataUbiquitousItemDownloadingStatusKey instead"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Use NSMetadataUbiquitousItemDownloadingStatusKey instead")));
extern "C" NSString * const NSMetadataUbiquitousItemDownloadingStatusKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSMetadataUbiquitousItemDownloadingStatusNotDownloaded __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSMetadataUbiquitousItemDownloadingStatusDownloaded __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSMetadataUbiquitousItemDownloadingStatusCurrent __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSMetadataUbiquitousItemIsDownloadingKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSMetadataUbiquitousItemIsUploadedKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSMetadataUbiquitousItemIsUploadingKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSMetadataUbiquitousItemPercentDownloadedKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSMetadataUbiquitousItemPercentUploadedKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSMetadataUbiquitousItemDownloadingErrorKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSMetadataUbiquitousItemUploadingErrorKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSMetadataUbiquitousItemDownloadRequestedKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSMetadataUbiquitousItemIsExternalDocumentKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSMetadataUbiquitousItemContainerDisplayNameKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSMetadataUbiquitousItemURLInLocalContainerKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern "C" NSString * const NSMetadataUbiquitousItemIsSharedKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
extern "C" NSString * const NSMetadataUbiquitousSharedItemCurrentUserRoleKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
extern "C" NSString * const NSMetadataUbiquitousSharedItemCurrentUserPermissionsKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
extern "C" NSString * const NSMetadataUbiquitousSharedItemOwnerNameComponentsKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
extern "C" NSString * const NSMetadataUbiquitousSharedItemMostRecentEditorNameComponentsKey __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));



extern "C" NSString * const NSMetadataUbiquitousSharedItemRoleOwner __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
extern "C" NSString * const NSMetadataUbiquitousSharedItemRoleParticipant __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));



extern "C" NSString * const NSMetadataUbiquitousSharedItemPermissionsReadOnly __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
extern "C" NSString * const NSMetadataUbiquitousSharedItemPermissionsReadWrite __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));




extern "C" NSString * const NSMetadataItemAttributeChangeDateKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemKeywordsKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemTitleKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemAuthorsKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemEditorsKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemParticipantsKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemProjectsKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemDownloadedDateKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemWhereFromsKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemCommentKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemCopyrightKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemLastUsedDateKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemContentCreationDateKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemContentModificationDateKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemDateAddedKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemDurationSecondsKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemContactKeywordsKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemVersionKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern "C" NSString * const NSMetadataItemPixelHeightKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemPixelWidthKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemPixelCountKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemColorSpaceKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemBitsPerSampleKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemFlashOnOffKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemFocalLengthKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemAcquisitionMakeKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemAcquisitionModelKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemISOSpeedKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemOrientationKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemLayerNamesKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemWhiteBalanceKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemApertureKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemProfileNameKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemResolutionWidthDPIKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemResolutionHeightDPIKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemExposureModeKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemExposureTimeSecondsKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemEXIFVersionKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern "C" NSString * const NSMetadataItemCameraOwnerKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemFocalLength35mmKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemLensModelKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern "C" NSString * const NSMetadataItemEXIFGPSVersionKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemAltitudeKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemLatitudeKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemLongitudeKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemSpeedKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemTimestampKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemGPSTrackKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemImageDirectionKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemNamedLocationKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern "C" NSString * const NSMetadataItemGPSStatusKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemGPSMeasureModeKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemGPSDOPKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemGPSMapDatumKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemGPSDestLatitudeKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemGPSDestLongitudeKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemGPSDestBearingKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemGPSDestDistanceKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemGPSProcessingMethodKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemGPSAreaInformationKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemGPSDateStampKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemGPSDifferentalKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern "C" NSString * const NSMetadataItemCodecsKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemMediaTypesKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemStreamableKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemTotalBitRateKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemVideoBitRateKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemAudioBitRateKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemDeliveryTypeKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern "C" NSString * const NSMetadataItemAlbumKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemHasAlphaChannelKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemRedEyeOnOffKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemMeteringModeKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemMaxApertureKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemFNumberKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemExposureProgramKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemExposureTimeStringKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern "C" NSString * const NSMetadataItemHeadlineKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemInstructionsKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemCityKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemStateOrProvinceKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemCountryKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern "C" NSString * const NSMetadataItemTextContentKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern "C" NSString * const NSMetadataItemAudioSampleRateKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemAudioChannelCountKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemTempoKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemKeySignatureKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemTimeSignatureKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemAudioEncodingApplicationKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemComposerKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemLyricistKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemAudioTrackNumberKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemRecordingDateKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemMusicalGenreKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemIsGeneralMIDISequenceKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemRecordingYearKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern "C" NSString * const NSMetadataItemOrganizationsKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemLanguagesKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemRightsKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemPublishersKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemContributorsKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemCoverageKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemSubjectKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemThemeKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemDescriptionKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemIdentifierKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemAudiencesKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern "C" NSString * const NSMetadataItemNumberOfPagesKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemPageWidthKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemPageHeightKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemSecurityMethodKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemCreatorKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemEncodingApplicationsKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemDueDateKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemStarRatingKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemPhoneNumbersKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemEmailAddressesKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemInstantMessageAddressesKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemKindKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemRecipientsKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemFinderCommentKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemFontsKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern "C" NSString * const NSMetadataItemAppleLoopsRootKeyKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemAppleLoopsKeyFilterTypeKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemAppleLoopsLoopModeKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemAppleLoopDescriptorsKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemMusicalInstrumentCategoryKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemMusicalInstrumentNameKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern "C" NSString * const NSMetadataItemCFBundleIdentifierKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern "C" NSString * const NSMetadataItemInformationKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemDirectorKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemProducerKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemGenreKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemPerformersKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemOriginalFormatKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemOriginalSourceKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemAuthorEmailAddressesKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemRecipientEmailAddressesKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemAuthorAddressesKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemRecipientAddressesKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern "C" NSString * const NSMetadataItemIsLikelyJunkKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemExecutableArchitecturesKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemExecutablePlatformKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataItemApplicationCategoriesKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern "C" NSString * const NSMetadataItemIsApplicationManagedKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
#pragma clang assume_nonnull end





// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSURL
#define _REWRITER_typedef_NSURL
typedef struct objc_object NSURL;
typedef struct {} _objc_exc_NSURL;
#endif

#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

#ifndef _REWRITER_typedef_NSPredicate
#define _REWRITER_typedef_NSPredicate
typedef struct objc_object NSPredicate;
typedef struct {} _objc_exc_NSPredicate;
#endif

#ifndef _REWRITER_typedef_NSOperationQueue
#define _REWRITER_typedef_NSOperationQueue
typedef struct objc_object NSOperationQueue;
typedef struct {} _objc_exc_NSOperationQueue;
#endif

#ifndef _REWRITER_typedef_NSSortDescriptor
#define _REWRITER_typedef_NSSortDescriptor
typedef struct objc_object NSSortDescriptor;
typedef struct {} _objc_exc_NSSortDescriptor;
#endif

// @class NSMetadataItem;
#ifndef _REWRITER_typedef_NSMetadataItem
#define _REWRITER_typedef_NSMetadataItem
typedef struct objc_object NSMetadataItem;
typedef struct {} _objc_exc_NSMetadataItem;
#endif

#ifndef _REWRITER_typedef_NSMetadataQueryAttributeValueTuple
#define _REWRITER_typedef_NSMetadataQueryAttributeValueTuple
typedef struct objc_object NSMetadataQueryAttributeValueTuple;
typedef struct {} _objc_exc_NSMetadataQueryAttributeValueTuple;
#endif

#ifndef _REWRITER_typedef_NSMetadataQueryResultGroup
#define _REWRITER_typedef_NSMetadataQueryResultGroup
typedef struct objc_object NSMetadataQueryResultGroup;
typedef struct {} _objc_exc_NSMetadataQueryResultGroup;
#endif

// @protocol NSMetadataQueryDelegate;

#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0)))

#ifndef _REWRITER_typedef_NSMetadataQuery
#define _REWRITER_typedef_NSMetadataQuery
typedef struct objc_object NSMetadataQuery;
typedef struct {} _objc_exc_NSMetadataQuery;
#endif

struct NSMetadataQuery_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSUInteger _flags;
	NSTimeInterval _interval;
	id __strong _private[11];
	void *_reserved;
};


// @property (nullable, assign) id<NSMetadataQueryDelegate> delegate;
// @property (nullable, copy) NSPredicate *predicate;
// @property (copy) NSArray<NSSortDescriptor *> *sortDescriptors;
// @property (copy) NSArray<NSString *> *valueListAttributes;
// @property (nullable, copy) NSArray<NSString *> *groupingAttributes;
// @property NSTimeInterval notificationBatchingInterval;

// @property (copy) NSArray *searchScopes;





// @property (nullable, copy) NSArray *searchItems __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// @property (nullable, retain) NSOperationQueue *operationQueue __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


// - (BOOL)startQuery;
// - (void)stopQuery;

// @property (readonly, getter=isStarted) BOOL started;
// @property (readonly, getter=isGathering) BOOL gathering;
// @property (readonly, getter=isStopped) BOOL stopped;

// - (void)disableUpdates;
// - (void)enableUpdates;



// @property (readonly) NSUInteger resultCount;
// - (id)resultAtIndex:(NSUInteger)idx;

// - (void)enumerateResultsUsingBlock:(void (__attribute__((noescape)) ^)(id result, NSUInteger idx, BOOL *stop))block __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (void)enumerateResultsWithOptions:(NSEnumerationOptions)opts usingBlock:(void (__attribute__((noescape)) ^)(id result, NSUInteger idx, BOOL *stop))block __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (readonly, copy) NSArray *results;

// - (NSUInteger)indexOfResult:(id)result;

// @property (readonly, copy) NSDictionary<NSString *, NSArray<NSMetadataQueryAttributeValueTuple *> *> *valueLists;

// @property (readonly, copy) NSArray<NSMetadataQueryResultGroup *> *groupedResults;

// - (nullable id)valueOfAttribute:(NSString *)attrName forResultAtIndex:(NSUInteger)idx;

/* @end */


// @protocol NSMetadataQueryDelegate <NSObject>
/* @optional */

// - (id)metadataQuery:(NSMetadataQuery *)query replacementObjectForResultObject:(NSMetadataItem *)result;
// - (id)metadataQuery:(NSMetadataQuery *)query replacementValueForAttribute:(NSString *)attrName value:(id)attrValue;

/* @end */



extern "C" NSNotificationName const NSMetadataQueryDidStartGatheringNotification __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSNotificationName const NSMetadataQueryGatheringProgressNotification __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSNotificationName const NSMetadataQueryDidFinishGatheringNotification __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSNotificationName const NSMetadataQueryDidUpdateNotification __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern "C" NSString * const NSMetadataQueryUpdateAddedItemsKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSMetadataQueryUpdateChangedItemsKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSMetadataQueryUpdateRemovedItemsKey __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern "C" NSString * const NSMetadataQueryResultContentRelevanceAttribute __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern "C" NSString * const NSMetadataQueryUserHomeScope __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataQueryLocalComputerScope __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataQueryNetworkScope __attribute__((availability(macos,introduced=10.4))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

extern "C" NSString * const NSMetadataQueryIndexedLocalComputerScope __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString * const NSMetadataQueryIndexedNetworkScope __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));


extern "C" NSString * const NSMetadataQueryUbiquitousDocumentsScope __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSMetadataQueryUbiquitousDataScope __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSMetadataQueryAccessibleUbiquitousExternalDocumentsScope __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0)))

#ifndef _REWRITER_typedef_NSMetadataItem
#define _REWRITER_typedef_NSMetadataItem
typedef struct objc_object NSMetadataItem;
typedef struct {} _objc_exc_NSMetadataItem;
#endif

struct NSMetadataItem_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	__strong id _item;
	void *_reserved;
};


// - (nullable instancetype)initWithURL:(NSURL *)url __attribute__((objc_designated_initializer)) __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

// - (nullable id)valueForAttribute:(NSString *)key;
// - (nullable NSDictionary<NSString *, id> *)valuesForAttributes:(NSArray<NSString *> *)keys;

// @property (readonly, copy) NSArray<NSString *> *attributes;

/* @end */


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0)))

#ifndef _REWRITER_typedef_NSMetadataQueryAttributeValueTuple
#define _REWRITER_typedef_NSMetadataQueryAttributeValueTuple
typedef struct objc_object NSMetadataQueryAttributeValueTuple;
typedef struct {} _objc_exc_NSMetadataQueryAttributeValueTuple;
#endif

struct NSMetadataQueryAttributeValueTuple_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	__strong id _attr;
	__strong id _value;
	NSUInteger _count;
	void *_reserved;
};


// @property (readonly, copy) NSString *attribute;
// @property (nullable, readonly, retain) id value;
// @property (readonly) NSUInteger count;

/* @end */


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0)))

#ifndef _REWRITER_typedef_NSMetadataQueryResultGroup
#define _REWRITER_typedef_NSMetadataQueryResultGroup
typedef struct objc_object NSMetadataQueryResultGroup;
typedef struct {} _objc_exc_NSMetadataQueryResultGroup;
#endif

struct NSMetadataQueryResultGroup_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	id __strong _private[9];
	NSUInteger _private2[1];
	void *_reserved;
};


// @property (readonly, copy) NSString *attribute;
// @property (readonly, retain) id value;

// @property (nullable, readonly, copy) NSArray<NSMetadataQueryResultGroup *> *subgroups;

// @property (readonly) NSUInteger resultCount;
// - (id)resultAtIndex:(NSUInteger)idx;

// @property (readonly, copy) NSArray *results;

/* @end */

#pragma clang assume_nonnull end

// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSData
#define _REWRITER_typedef_NSData
typedef struct objc_object NSData;
typedef struct {} _objc_exc_NSData;
#endif

#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

#ifndef _REWRITER_typedef_NSInputStream
#define _REWRITER_typedef_NSInputStream
typedef struct objc_object NSInputStream;
typedef struct {} _objc_exc_NSInputStream;
#endif

#ifndef _REWRITER_typedef_NSNumber
#define _REWRITER_typedef_NSNumber
typedef struct objc_object NSNumber;
typedef struct {} _objc_exc_NSNumber;
#endif

#ifndef _REWRITER_typedef_NSOutputStream
#define _REWRITER_typedef_NSOutputStream
typedef struct objc_object NSOutputStream;
typedef struct {} _objc_exc_NSOutputStream;
#endif

#ifndef _REWRITER_typedef_NSRunLoop
#define _REWRITER_typedef_NSRunLoop
typedef struct objc_object NSRunLoop;
typedef struct {} _objc_exc_NSRunLoop;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

// @protocol NSNetServiceDelegate, NSNetServiceBrowserDelegate;

#pragma clang assume_nonnull begin



extern "C" NSString * const NSNetServicesErrorCode;
extern "C" NSErrorDomain const NSNetServicesErrorDomain;

typedef NSInteger NSNetServicesError; enum {



    NSNetServicesUnknownError = -72000L,



    NSNetServicesCollisionError = -72001L,



    NSNetServicesNotFoundError = -72002L,



    NSNetServicesActivityInProgress = -72003L,



    NSNetServicesBadArgumentError = -72004L,



    NSNetServicesCancelledError = -72005L,



    NSNetServicesInvalidError = -72006L,



    NSNetServicesTimeoutError = -72007L,

};


typedef NSUInteger NSNetServiceOptions; enum {




    NSNetServiceNoAutoRename = 1UL << 0,
    NSNetServiceListenForConnections __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 1UL << 1
};





__attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_NSNetService
#define _REWRITER_typedef_NSNetService
typedef struct objc_object NSNetService;
typedef struct {} _objc_exc_NSNetService;
#endif

struct NSNetService_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	__strong id _netService;
	__strong id _delegate;
	__strong id _reserved;
};




// - (instancetype)initWithDomain:(NSString *)domain type:(NSString *)type name:(NSString *)name port:(int)port __attribute__((objc_designated_initializer));





// - (instancetype)initWithDomain:(NSString *)domain type:(NSString *)type name:(NSString *)name;



// - (void)scheduleInRunLoop:(NSRunLoop *)aRunLoop forMode:(NSRunLoopMode)mode;
// - (void)removeFromRunLoop:(NSRunLoop *)aRunLoop forMode:(NSRunLoopMode)mode;



// @property (nullable, assign) id <NSNetServiceDelegate> delegate;



// @property BOOL includesPeerToPeer __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// @property (readonly, copy) NSString *name;



// @property (readonly, copy) NSString *type;



// @property (readonly, copy) NSString *domain;



// @property (nullable, readonly, copy) NSString *hostName;



// @property (nullable, readonly, copy) NSArray<NSData *> *addresses;



// @property (readonly) NSInteger port __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// - (void)publish;





// - (void)publishWithOptions:(NSNetServiceOptions)options __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));




// - (void)resolve __attribute__((availability(macos,introduced=10.2,deprecated=10.4,message="Not supported"))) __attribute__((availability(ios,introduced=2.0,deprecated=2.0,message="Not supported"))) __attribute__((availability(watchos,introduced=2.0,deprecated=2.0,message="Not supported"))) __attribute__((availability(tvos,introduced=9.0,deprecated=9.0,message="Not supported")));



// - (void)stop;



// + (NSDictionary<NSString *, NSData *> *)dictionaryFromTXTRecordData:(NSData *)txtData;



// + (NSData *)dataFromTXTRecordDictionary:(NSDictionary<NSString *, NSData *> *)txtDictionary;



// - (void)resolveWithTimeout:(NSTimeInterval)timeout;



// - (BOOL)getInputStream:(out __attribute__((objc_ownership(strong))) NSInputStream * _Nullable * _Nullable)inputStream outputStream:(out __attribute__((objc_ownership(strong))) NSOutputStream * _Nullable * _Nullable)outputStream;



// - (BOOL)setTXTRecordData:(nullable NSData *)recordData;



// - (nullable NSData *)TXTRecordData;



// - (void)startMonitoring;



// - (void)stopMonitoring;


/* @end */




__attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_NSNetServiceBrowser
#define _REWRITER_typedef_NSNetServiceBrowser
typedef struct objc_object NSNetServiceBrowser;
typedef struct {} _objc_exc_NSNetServiceBrowser;
#endif

struct NSNetServiceBrowser_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	__strong id _netServiceBrowser;
	__strong id _delegate;
	void *_reserved;
};


// - (instancetype)init;



// @property (nullable, assign) id <NSNetServiceBrowserDelegate> delegate;



// @property BOOL includesPeerToPeer __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



// - (void)scheduleInRunLoop:(NSRunLoop *)aRunLoop forMode:(NSRunLoopMode)mode;
// - (void)removeFromRunLoop:(NSRunLoop *)aRunLoop forMode:(NSRunLoopMode)mode;



// - (void)searchForBrowsableDomains;



// - (void)searchForRegistrationDomains;



// - (void)searchForServicesOfType:(NSString *)type inDomain:(NSString *)domainString;



// - (void)stop;

/* @end */




__attribute__((availability(watchos,unavailable)))
// @protocol NSNetServiceDelegate <NSObject>
/* @optional */



// - (void)netServiceWillPublish:(NSNetService *)sender;



// - (void)netServiceDidPublish:(NSNetService *)sender;



// - (void)netService:(NSNetService *)sender didNotPublish:(NSDictionary<NSString *, NSNumber *> *)errorDict;



// - (void)netServiceWillResolve:(NSNetService *)sender;



// - (void)netServiceDidResolveAddress:(NSNetService *)sender;



// - (void)netService:(NSNetService *)sender didNotResolve:(NSDictionary<NSString *, NSNumber *> *)errorDict;



// - (void)netServiceDidStop:(NSNetService *)sender;



// - (void)netService:(NSNetService *)sender didUpdateTXTRecordData:(NSData *)data;
// - (void)netService:(NSNetService *)sender didAcceptConnectionWithInputStream:(NSInputStream *)inputStream outputStream:(NSOutputStream *)outputStream __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */




__attribute__((availability(watchos,unavailable)))
// @protocol NSNetServiceBrowserDelegate <NSObject>
/* @optional */



// - (void)netServiceBrowserWillSearch:(NSNetServiceBrowser *)browser;



// - (void)netServiceBrowserDidStopSearch:(NSNetServiceBrowser *)browser;



// - (void)netServiceBrowser:(NSNetServiceBrowser *)browser didNotSearch:(NSDictionary<NSString *, NSNumber *> *)errorDict;



// - (void)netServiceBrowser:(NSNetServiceBrowser *)browser didFindDomain:(NSString *)domainString moreComing:(BOOL)moreComing;



// - (void)netServiceBrowser:(NSNetServiceBrowser *)browser didFindService:(NSNetService *)service moreComing:(BOOL)moreComing;



// - (void)netServiceBrowser:(NSNetServiceBrowser *)browser didRemoveDomain:(NSString *)domainString moreComing:(BOOL)moreComing;



// - (void)netServiceBrowser:(NSNetServiceBrowser *)browser didRemoveService:(NSNetService *)service moreComing:(BOOL)moreComing;

/* @end */

#pragma clang assume_nonnull end









// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

#ifndef _REWRITER_typedef_NSData
#define _REWRITER_typedef_NSData
typedef struct objc_object NSData;
typedef struct {} _objc_exc_NSData;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif


#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_NSUbiquitousKeyValueStore
#define _REWRITER_typedef_NSUbiquitousKeyValueStore
typedef struct objc_object NSUbiquitousKeyValueStore;
typedef struct {} _objc_exc_NSUbiquitousKeyValueStore;
#endif

struct NSUbiquitousKeyValueStore_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	__strong id _private1;
	__strong id _private2;
	__strong id _private3;
	void *_private4;
	void *_reserved[3];
	int _daemonWakeToken;
};


@property (class, readonly, strong) NSUbiquitousKeyValueStore *defaultStore;

// - (nullable id)objectForKey:(NSString *)aKey;
// - (void)setObject:(nullable id)anObject forKey:(NSString *)aKey;
// - (void)removeObjectForKey:(NSString *)aKey;

// - (nullable NSString *)stringForKey:(NSString *)aKey;
// - (nullable NSArray *)arrayForKey:(NSString *)aKey;
// - (nullable NSDictionary<NSString *, id> *)dictionaryForKey:(NSString *)aKey;
// - (nullable NSData *)dataForKey:(NSString *)aKey;
// - (long long)longLongForKey:(NSString *)aKey;
// - (double)doubleForKey:(NSString *)aKey;
// - (BOOL)boolForKey:(NSString *)aKey;

// - (void)setString:(nullable NSString *)aString forKey:(NSString *)aKey;
// - (void)setData:(nullable NSData *)aData forKey:(NSString *)aKey;
// - (void)setArray:(nullable NSArray *)anArray forKey:(NSString *)aKey;
// - (void)setDictionary:(nullable NSDictionary<NSString *, id> *)aDictionary forKey:(NSString *)aKey;
// - (void)setLongLong:(long long)value forKey:(NSString *)aKey;
// - (void)setDouble:(double)value forKey:(NSString *)aKey;
// - (void)setBool:(BOOL)value forKey:(NSString *)aKey;

// @property (readonly, copy) NSDictionary<NSString *, id> *dictionaryRepresentation;

// - (BOOL)synchronize;

/* @end */


extern "C" NSNotificationName const NSUbiquitousKeyValueStoreDidChangeExternallyNotification __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSUbiquitousKeyValueStoreChangeReasonKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSString * const NSUbiquitousKeyValueStoreChangedKeysKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

enum {
    NSUbiquitousKeyValueStoreServerChange __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))),
    NSUbiquitousKeyValueStoreInitialSyncChange __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))),
    NSUbiquitousKeyValueStoreQuotaViolationChange __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))),
    NSUbiquitousKeyValueStoreAccountChange __attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))
};
#pragma clang assume_nonnull end
// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif


#pragma clang assume_nonnull begin


static const NSUInteger NSUndoCloseGroupingRunLoopOrdering = 350000;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_0)))

#ifndef _REWRITER_typedef_NSUndoManager
#define _REWRITER_typedef_NSUndoManager
typedef struct objc_object NSUndoManager;
typedef struct {} _objc_exc_NSUndoManager;
#endif

struct NSUndoManager_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	__strong id _undoStack;
	__strong id _redoStack;
	NSArray *__strong _runLoopModes;
	uint64_t _NSUndoManagerPrivate1;
	__strong id _target;
	__strong id _proxy;
	void *_NSUndoManagerPrivate2;
	void *_NSUndoManagerPrivate3;
};




// - (void)beginUndoGrouping;
// - (void)endUndoGrouping;


// @property (readonly) NSInteger groupingLevel;




// - (void)disableUndoRegistration;
// - (void)enableUndoRegistration;
// @property (readonly, getter=isUndoRegistrationEnabled) BOOL undoRegistrationEnabled;



// @property BOOL groupsByEvent;






// @property NSUInteger levelsOfUndo;






// @property (copy) NSArray<NSRunLoopMode> *runLoopModes;



// - (void)undo;



// - (void)redo;


// - (void)undoNestedGroup;



// @property (readonly) BOOL canUndo;
// @property (readonly) BOOL canRedo;


// @property (readonly, getter=isUndoing) BOOL undoing;
// @property (readonly, getter=isRedoing) BOOL redoing;





// - (void)removeAllActions;

// - (void)removeAllActionsWithTarget:(id)target;



// - (void)registerUndoWithTarget:(id)target selector:(SEL)selector object:(nullable id)anObject;



// - (id)prepareWithInvocationTarget:(id)target;
// - (void)registerUndoWithTarget:(id)target handler:(void (^)(id target))undoHandler __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((swift_private));

// - (void)setActionIsDiscardable:(BOOL)discardable __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));



extern "C" NSString * const NSUndoManagerGroupIsDiscardableKey __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

// @property (readonly) BOOL undoActionIsDiscardable __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (readonly) BOOL redoActionIsDiscardable __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));




// @property (readonly, copy) NSString *undoActionName;
// @property (readonly, copy) NSString *redoActionName;



// - (void)setActionName:(NSString *)actionName;





// @property (readonly, copy) NSString *undoMenuItemTitle;
// @property (readonly, copy) NSString *redoMenuItemTitle;






// - (NSString *)undoMenuTitleForUndoActionName:(NSString *)actionName;
// - (NSString *)redoMenuTitleForUndoActionName:(NSString *)actionName;




/* @end */


extern "C" NSNotificationName const NSUndoManagerCheckpointNotification __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));




extern "C" NSNotificationName const NSUndoManagerWillUndoChangeNotification __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSNotificationName const NSUndoManagerWillRedoChangeNotification __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern "C" NSNotificationName const NSUndoManagerDidUndoChangeNotification __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSNotificationName const NSUndoManagerDidRedoChangeNotification __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

extern "C" NSNotificationName const NSUndoManagerDidOpenUndoGroupNotification __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" NSNotificationName const NSUndoManagerWillCloseUndoGroupNotification __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


extern "C" NSNotificationName const NSUndoManagerDidCloseUndoGroupNotification __attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
#pragma clang assume_nonnull end
typedef uint16_t SSLCipherSuite;


enum
{ SSL_NULL_WITH_NULL_NULL = 0x0000,
    SSL_RSA_WITH_NULL_MD5 = 0x0001,
    SSL_RSA_WITH_NULL_SHA = 0x0002,
    SSL_RSA_EXPORT_WITH_RC4_40_MD5 = 0x0003,
    SSL_RSA_WITH_RC4_128_MD5 = 0x0004,
    SSL_RSA_WITH_RC4_128_SHA = 0x0005,
    SSL_RSA_EXPORT_WITH_RC2_CBC_40_MD5 = 0x0006,
    SSL_RSA_WITH_IDEA_CBC_SHA = 0x0007,
    SSL_RSA_EXPORT_WITH_DES40_CBC_SHA = 0x0008,
    SSL_RSA_WITH_DES_CBC_SHA = 0x0009,
    SSL_RSA_WITH_3DES_EDE_CBC_SHA = 0x000A,
    SSL_DH_DSS_EXPORT_WITH_DES40_CBC_SHA = 0x000B,
    SSL_DH_DSS_WITH_DES_CBC_SHA = 0x000C,
    SSL_DH_DSS_WITH_3DES_EDE_CBC_SHA = 0x000D,
    SSL_DH_RSA_EXPORT_WITH_DES40_CBC_SHA = 0x000E,
    SSL_DH_RSA_WITH_DES_CBC_SHA = 0x000F,
    SSL_DH_RSA_WITH_3DES_EDE_CBC_SHA = 0x0010,
    SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA = 0x0011,
    SSL_DHE_DSS_WITH_DES_CBC_SHA = 0x0012,
    SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA = 0x0013,
    SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA = 0x0014,
    SSL_DHE_RSA_WITH_DES_CBC_SHA = 0x0015,
    SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA = 0x0016,
    SSL_DH_anon_EXPORT_WITH_RC4_40_MD5 = 0x0017,
    SSL_DH_anon_WITH_RC4_128_MD5 = 0x0018,
    SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA = 0x0019,
    SSL_DH_anon_WITH_DES_CBC_SHA = 0x001A,
    SSL_DH_anon_WITH_3DES_EDE_CBC_SHA = 0x001B,
    SSL_FORTEZZA_DMS_WITH_NULL_SHA = 0x001C,
    SSL_FORTEZZA_DMS_WITH_FORTEZZA_CBC_SHA = 0x001D,


 TLS_RSA_WITH_AES_128_CBC_SHA = 0x002F,
 TLS_DH_DSS_WITH_AES_128_CBC_SHA = 0x0030,
 TLS_DH_RSA_WITH_AES_128_CBC_SHA = 0x0031,
 TLS_DHE_DSS_WITH_AES_128_CBC_SHA = 0x0032,
 TLS_DHE_RSA_WITH_AES_128_CBC_SHA = 0x0033,
 TLS_DH_anon_WITH_AES_128_CBC_SHA = 0x0034,
 TLS_RSA_WITH_AES_256_CBC_SHA = 0x0035,
 TLS_DH_DSS_WITH_AES_256_CBC_SHA = 0x0036,
 TLS_DH_RSA_WITH_AES_256_CBC_SHA = 0x0037,
 TLS_DHE_DSS_WITH_AES_256_CBC_SHA = 0x0038,
 TLS_DHE_RSA_WITH_AES_256_CBC_SHA = 0x0039,
 TLS_DH_anon_WITH_AES_256_CBC_SHA = 0x003A,


 TLS_ECDH_ECDSA_WITH_NULL_SHA = 0xC001,
 TLS_ECDH_ECDSA_WITH_RC4_128_SHA = 0xC002,
 TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA = 0xC003,
 TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA = 0xC004,
 TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA = 0xC005,
 TLS_ECDHE_ECDSA_WITH_NULL_SHA = 0xC006,
 TLS_ECDHE_ECDSA_WITH_RC4_128_SHA = 0xC007,
 TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA = 0xC008,
 TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA = 0xC009,
 TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA = 0xC00A,
 TLS_ECDH_RSA_WITH_NULL_SHA = 0xC00B,
 TLS_ECDH_RSA_WITH_RC4_128_SHA = 0xC00C,
 TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA = 0xC00D,
 TLS_ECDH_RSA_WITH_AES_128_CBC_SHA = 0xC00E,
 TLS_ECDH_RSA_WITH_AES_256_CBC_SHA = 0xC00F,
 TLS_ECDHE_RSA_WITH_NULL_SHA = 0xC010,
 TLS_ECDHE_RSA_WITH_RC4_128_SHA = 0xC011,
 TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA = 0xC012,
 TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA = 0xC013,
 TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA = 0xC014,
 TLS_ECDH_anon_WITH_NULL_SHA = 0xC015,
 TLS_ECDH_anon_WITH_RC4_128_SHA = 0xC016,
 TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA = 0xC017,
 TLS_ECDH_anon_WITH_AES_128_CBC_SHA = 0xC018,
 TLS_ECDH_anon_WITH_AES_256_CBC_SHA = 0xC019,




    TLS_NULL_WITH_NULL_NULL = 0x0000,


    TLS_RSA_WITH_NULL_MD5 = 0x0001,
    TLS_RSA_WITH_NULL_SHA = 0x0002,
    TLS_RSA_WITH_RC4_128_MD5 = 0x0004,
    TLS_RSA_WITH_RC4_128_SHA = 0x0005,
    TLS_RSA_WITH_3DES_EDE_CBC_SHA = 0x000A,
    TLS_RSA_WITH_NULL_SHA256 = 0x003B,
    TLS_RSA_WITH_AES_128_CBC_SHA256 = 0x003C,
    TLS_RSA_WITH_AES_256_CBC_SHA256 = 0x003D,


    TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA = 0x000D,
    TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA = 0x0010,
    TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA = 0x0013,
    TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA = 0x0016,
    TLS_DH_DSS_WITH_AES_128_CBC_SHA256 = 0x003E,
    TLS_DH_RSA_WITH_AES_128_CBC_SHA256 = 0x003F,
    TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 = 0x0040,
    TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 = 0x0067,
    TLS_DH_DSS_WITH_AES_256_CBC_SHA256 = 0x0068,
    TLS_DH_RSA_WITH_AES_256_CBC_SHA256 = 0x0069,
    TLS_DHE_DSS_WITH_AES_256_CBC_SHA256 = 0x006A,
    TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 = 0x006B,


    TLS_DH_anon_WITH_RC4_128_MD5 = 0x0018,
    TLS_DH_anon_WITH_3DES_EDE_CBC_SHA = 0x001B,
    TLS_DH_anon_WITH_AES_128_CBC_SHA256 = 0x006C,
    TLS_DH_anon_WITH_AES_256_CBC_SHA256 = 0x006D,


    TLS_PSK_WITH_RC4_128_SHA = 0x008A,
    TLS_PSK_WITH_3DES_EDE_CBC_SHA = 0x008B,
    TLS_PSK_WITH_AES_128_CBC_SHA = 0x008C,
    TLS_PSK_WITH_AES_256_CBC_SHA = 0x008D,
    TLS_DHE_PSK_WITH_RC4_128_SHA = 0x008E,
    TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA = 0x008F,
    TLS_DHE_PSK_WITH_AES_128_CBC_SHA = 0x0090,
    TLS_DHE_PSK_WITH_AES_256_CBC_SHA = 0x0091,
    TLS_RSA_PSK_WITH_RC4_128_SHA = 0x0092,
    TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA = 0x0093,
    TLS_RSA_PSK_WITH_AES_128_CBC_SHA = 0x0094,
    TLS_RSA_PSK_WITH_AES_256_CBC_SHA = 0x0095,


    TLS_PSK_WITH_NULL_SHA = 0x002C,
    TLS_DHE_PSK_WITH_NULL_SHA = 0x002D,
    TLS_RSA_PSK_WITH_NULL_SHA = 0x002E,


    TLS_RSA_WITH_AES_128_GCM_SHA256 = 0x009C,
    TLS_RSA_WITH_AES_256_GCM_SHA384 = 0x009D,
    TLS_DHE_RSA_WITH_AES_128_GCM_SHA256 = 0x009E,
    TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 = 0x009F,
    TLS_DH_RSA_WITH_AES_128_GCM_SHA256 = 0x00A0,
    TLS_DH_RSA_WITH_AES_256_GCM_SHA384 = 0x00A1,
    TLS_DHE_DSS_WITH_AES_128_GCM_SHA256 = 0x00A2,
    TLS_DHE_DSS_WITH_AES_256_GCM_SHA384 = 0x00A3,
    TLS_DH_DSS_WITH_AES_128_GCM_SHA256 = 0x00A4,
    TLS_DH_DSS_WITH_AES_256_GCM_SHA384 = 0x00A5,
    TLS_DH_anon_WITH_AES_128_GCM_SHA256 = 0x00A6,
    TLS_DH_anon_WITH_AES_256_GCM_SHA384 = 0x00A7,


    TLS_PSK_WITH_AES_128_GCM_SHA256 = 0x00A8,
    TLS_PSK_WITH_AES_256_GCM_SHA384 = 0x00A9,
    TLS_DHE_PSK_WITH_AES_128_GCM_SHA256 = 0x00AA,
    TLS_DHE_PSK_WITH_AES_256_GCM_SHA384 = 0x00AB,
    TLS_RSA_PSK_WITH_AES_128_GCM_SHA256 = 0x00AC,
    TLS_RSA_PSK_WITH_AES_256_GCM_SHA384 = 0x00AD,

    TLS_PSK_WITH_AES_128_CBC_SHA256 = 0x00AE,
    TLS_PSK_WITH_AES_256_CBC_SHA384 = 0x00AF,
    TLS_PSK_WITH_NULL_SHA256 = 0x00B0,
    TLS_PSK_WITH_NULL_SHA384 = 0x00B1,

    TLS_DHE_PSK_WITH_AES_128_CBC_SHA256 = 0x00B2,
    TLS_DHE_PSK_WITH_AES_256_CBC_SHA384 = 0x00B3,
    TLS_DHE_PSK_WITH_NULL_SHA256 = 0x00B4,
    TLS_DHE_PSK_WITH_NULL_SHA384 = 0x00B5,

    TLS_RSA_PSK_WITH_AES_128_CBC_SHA256 = 0x00B6,
    TLS_RSA_PSK_WITH_AES_256_CBC_SHA384 = 0x00B7,
    TLS_RSA_PSK_WITH_NULL_SHA256 = 0x00B8,
    TLS_RSA_PSK_WITH_NULL_SHA384 = 0x00B9,




    TLS_AES_128_GCM_SHA256 = 0x1301,
    TLS_AES_256_GCM_SHA384 = 0x1302,
    TLS_CHACHA20_POLY1305_SHA256 = 0x1303,
    TLS_AES_128_CCM_SHA256 = 0x1304,
    TLS_AES_128_CCM_8_SHA256 = 0x1305,



    TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 = 0xC023,
    TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384 = 0xC024,
    TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256 = 0xC025,
    TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384 = 0xC026,
    TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 = 0xC027,
    TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384 = 0xC028,
    TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256 = 0xC029,
    TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384 = 0xC02A,



    TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 = 0xC02B,
    TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 = 0xC02C,
    TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256 = 0xC02D,
    TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384 = 0xC02E,
    TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 = 0xC02F,
    TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 = 0xC030,
    TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256 = 0xC031,
    TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384 = 0xC032,



    TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256 = 0xCCA8,
    TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256 = 0xCCA9,


    TLS_EMPTY_RENEGOTIATION_INFO_SCSV = 0x00FF,



    SSL_RSA_WITH_RC2_CBC_MD5 = 0xFF80,
    SSL_RSA_WITH_IDEA_CBC_MD5 = 0xFF81,
    SSL_RSA_WITH_DES_CBC_MD5 = 0xFF82,
    SSL_RSA_WITH_3DES_EDE_CBC_MD5 = 0xFF83,
    SSL_NO_SUCH_CIPHERSUITE = 0xFFFF
};





extern "C" {


#pragma clang assume_nonnull begin







struct SSLContext;
typedef struct __attribute__((objc_bridge(id))) SSLContext *SSLContextRef;


typedef const void * SSLConnectionRef;


typedef int SSLProtocol; enum {
    kSSLProtocolUnknown = 0,
    kSSLProtocol3 = 2,
    kTLSProtocol1 = 4,
    kTLSProtocol11 = 7,
    kTLSProtocol12 = 8,
    kDTLSProtocol1 = 9,
    kTLSProtocol13 = 10,

    kTLSProtocolMaxSupported = 999,

    kSSLProtocol2 = 1,
    kSSLProtocol3Only = 3,
    kTLSProtocol1Only = 5,
    kSSLProtocolAll = 6,
};


typedef int SSLSessionOption; enum {







 kSSLSessionOptionBreakOnServerAuth = 0,




 kSSLSessionOptionBreakOnCertRequested = 1,






    kSSLSessionOptionBreakOnClientAuth = 2,





    kSSLSessionOptionFalseStart = 3,





    kSSLSessionOptionSendOneByteRecord = 4,




    kSSLSessionOptionAllowServerIdentityChange = 5,




    kSSLSessionOptionFallback = 6,



    kSSLSessionOptionBreakOnClientHello = 7,



    kSSLSessionOptionAllowRenegotiation = 8,



    kSSLSessionOptionEnableSessionTickets = 9,
};


typedef int SSLSessionState; enum {
 kSSLIdle,
 kSSLHandshake,
 kSSLConnected,
 kSSLClosed,
 kSSLAborted
};





typedef int SSLClientCertificateState; enum {

 kSSLClientCertNone,

 kSSLClientCertRequested,






 kSSLClientCertSent,




 kSSLClientCertRejected
};
typedef OSStatus
(*SSLReadFunc) (SSLConnectionRef connection,
        void *data,


        size_t *dataLength);
typedef OSStatus
(*SSLWriteFunc) (SSLConnectionRef connection,
        const void *data,
        size_t *dataLength);
enum {
 errSSLProtocol = -9800,
 errSSLNegotiation = -9801,
 errSSLFatalAlert = -9802,
 errSSLWouldBlock = -9803,
    errSSLSessionNotFound = -9804,
    errSSLClosedGraceful = -9805,
    errSSLClosedAbort = -9806,
    errSSLXCertChainInvalid = -9807,
    errSSLBadCert = -9808,
 errSSLCrypto = -9809,
 errSSLInternal = -9810,
 errSSLModuleAttach = -9811,
    errSSLUnknownRootCert = -9812,
    errSSLNoRootCert = -9813,
 errSSLCertExpired = -9814,
 errSSLCertNotYetValid = -9815,
 errSSLClosedNoNotify = -9816,
 errSSLBufferOverflow = -9817,
 errSSLBadCipherSuite = -9818,


 errSSLPeerUnexpectedMsg = -9819,
 errSSLPeerBadRecordMac = -9820,
 errSSLPeerDecryptionFail = -9821,
 errSSLPeerRecordOverflow = -9822,
 errSSLPeerDecompressFail = -9823,
 errSSLPeerHandshakeFail = -9824,
 errSSLPeerBadCert = -9825,
 errSSLPeerUnsupportedCert = -9826,
 errSSLPeerCertRevoked = -9827,
 errSSLPeerCertExpired = -9828,
 errSSLPeerCertUnknown = -9829,
 errSSLIllegalParam = -9830,
 errSSLPeerUnknownCA = -9831,
 errSSLPeerAccessDenied = -9832,
 errSSLPeerDecodeError = -9833,
 errSSLPeerDecryptError = -9834,
 errSSLPeerExportRestriction = -9835,
 errSSLPeerProtocolVersion = -9836,
 errSSLPeerInsufficientSecurity = -9837,
 errSSLPeerInternalError = -9838,
 errSSLPeerUserCancelled = -9839,
 errSSLPeerNoRenegotiation = -9840,


 errSSLPeerAuthCompleted = -9841,
 errSSLClientCertRequested = -9842,


 errSSLHostNameMismatch = -9843,
 errSSLConnectionRefused = -9844,
 errSSLDecryptionFail = -9845,
 errSSLBadRecordMac = -9846,
 errSSLRecordOverflow = -9847,
 errSSLBadConfiguration = -9848,
 errSSLUnexpectedRecord = -9849,
    errSSLWeakPeerEphemeralDHKey = -9850,


    errSSLClientHelloReceived = -9851,


    errSSLTransportReset = -9852,
    errSSLNetworkTimeout = -9853,


    errSSLConfigurationFailed = -9854,


    errSSLUnsupportedExtension = -9855,
    errSSLUnexpectedMessage = -9856,
    errSSLDecompressFail = -9857,
    errSSLHandshakeFail = -9858,
    errSSLDecodeError = -9859,
    errSSLInappropriateFallback = -9860,
    errSSLMissingExtension = -9861,
    errSSLBadCertificateStatusResponse = -9862,
    errSSLCertificateRequired = -9863,
    errSSLUnknownPSKIdentity = -9864,
    errSSLUnrecognizedName = -9865,
};
typedef int SSLProtocolSide; enum
{
    kSSLServerSide,
    kSSLClientSide
};

typedef int SSLConnectionType; enum
{
    kSSLStreamType,
    kSSLDatagramType
};






extern const CFStringRef kSSLSessionConfig_default
__attribute__((availability(ios,introduced=5.0,deprecated=11.0)));


extern const CFStringRef kSSLSessionConfig_ATSv1
__attribute__((availability(ios,introduced=5.0)));


extern const CFStringRef kSSLSessionConfig_ATSv1_noPFS
__attribute__((availability(ios,introduced=5.0)));


extern const CFStringRef kSSLSessionConfig_standard
__attribute__((availability(ios,introduced=5.0)));


extern const CFStringRef kSSLSessionConfig_RC4_fallback
__attribute__((availability(ios,introduced=5.0,deprecated=11.0)));


extern const CFStringRef kSSLSessionConfig_TLSv1_fallback
__attribute__((availability(ios,introduced=5.0)));


extern const CFStringRef kSSLSessionConfig_TLSv1_RC4_fallback
__attribute__((availability(ios,introduced=5.0,deprecated=11.0)));


extern const CFStringRef kSSLSessionConfig_legacy
__attribute__((availability(ios,introduced=5.0)));


extern const CFStringRef kSSLSessionConfig_legacy_DHE
__attribute__((availability(ios,introduced=5.0)));


extern const CFStringRef kSSLSessionConfig_anonymous
__attribute__((availability(ios,introduced=5.0)));


extern const CFStringRef kSSLSessionConfig_3DES_fallback
__attribute__((availability(ios,introduced=5.0,deprecated=11.0)));


extern const CFStringRef kSSLSessionConfig_TLSv1_3DES_fallback
__attribute__((availability(ios,introduced=5.0,deprecated=11.0)));
CFTypeID
SSLContextGetTypeID(void)
 __attribute__((availability(ios,introduced=5.0)));




_Nullable
SSLContextRef
SSLCreateContext(CFAllocatorRef _Nullable alloc, SSLProtocolSide protocolSide, SSLConnectionType connectionType)
 __attribute__((availability(ios,introduced=5.0)));
OSStatus
SSLGetSessionState (SSLContextRef context,
        SSLSessionState *state)
 __attribute__((availability(ios,introduced=5.0)));





OSStatus
SSLSetSessionOption (SSLContextRef context,
        SSLSessionOption option,
        Boolean value)
 __attribute__((availability(ios,introduced=5.0)));




OSStatus
SSLGetSessionOption (SSLContextRef context,
        SSLSessionOption option,
        Boolean *value)
 __attribute__((availability(ios,introduced=5.0)));
OSStatus
SSLSetIOFuncs (SSLContextRef context,
        SSLReadFunc readFunc,
        SSLWriteFunc writeFunc)
 __attribute__((availability(ios,introduced=5.0)));
OSStatus
SSLSetSessionConfig(SSLContextRef context,
                    CFStringRef config)
    __attribute__((availability(ios,introduced=10.0)));
OSStatus
SSLSetProtocolVersionMin (SSLContextRef context,
                           SSLProtocol minVersion)
    __attribute__((availability(ios,introduced=5.0)));




OSStatus
SSLGetProtocolVersionMin (SSLContextRef context,
                           SSLProtocol *minVersion)
    __attribute__((availability(ios,introduced=5.0)));
OSStatus
SSLSetProtocolVersionMax (SSLContextRef context,
                           SSLProtocol maxVersion)
    __attribute__((availability(ios,introduced=5.0)));




OSStatus
SSLGetProtocolVersionMax (SSLContextRef context,
                           SSLProtocol *maxVersion)
    __attribute__((availability(ios,introduced=5.0)));
OSStatus
SSLSetCertificate (SSLContextRef context,
        CFArrayRef _Nullable certRefs)
 __attribute__((availability(ios,introduced=5.0)));
OSStatus
SSLSetConnection (SSLContextRef context,
        SSLConnectionRef _Nullable connection)
 __attribute__((availability(ios,introduced=5.0)));

OSStatus
SSLGetConnection (SSLContextRef context,
        SSLConnectionRef * _Nonnull __attribute__((cf_returns_not_retained)) connection)
 __attribute__((availability(ios,introduced=5.0)));
OSStatus
SSLSetPeerDomainName (SSLContextRef context,
        const char * _Nullable peerName,
        size_t peerNameLen)
 __attribute__((availability(ios,introduced=5.0)));




OSStatus
SSLGetPeerDomainNameLength (SSLContextRef context,
        size_t *peerNameLen)
 __attribute__((availability(ios,introduced=5.0)));




OSStatus
SSLGetPeerDomainName (SSLContextRef context,
        char *peerName,
        size_t *peerNameLen)
 __attribute__((availability(ios,introduced=5.0)));





OSStatus
SSLCopyRequestedPeerName (SSLContextRef context,
                             char *peerName,
                             size_t *peerNameLen)
    __attribute__((availability(ios,introduced=9.0)));




OSStatus
SSLCopyRequestedPeerNameLength (SSLContextRef ctx,
                                 size_t *peerNameLen)
    __attribute__((availability(ios,introduced=9.0)));







OSStatus
SSLSetDatagramHelloCookie (SSLContextRef dtlsContext,
                             const void * _Nullable cookie,
                             size_t cookieLen)
 __attribute__((availability(ios,introduced=5.0)));
OSStatus
SSLSetMaxDatagramRecordSize (SSLContextRef dtlsContext,
                             size_t maxSize)
 __attribute__((availability(ios,introduced=5.0)));





OSStatus
SSLGetMaxDatagramRecordSize (SSLContextRef dtlsContext,
                             size_t *maxSize)
 __attribute__((availability(ios,introduced=5.0)));







OSStatus
SSLGetNegotiatedProtocolVersion (SSLContextRef context,
          SSLProtocol *protocol)
 __attribute__((availability(ios,introduced=5.0)));







OSStatus
SSLGetNumberSupportedCiphers (SSLContextRef context,
         size_t *numCiphers)
 __attribute__((availability(ios,introduced=5.0)));

OSStatus
SSLGetSupportedCiphers (SSLContextRef context,
         SSLCipherSuite *ciphers,
         size_t *numCiphers)
 __attribute__((availability(ios,introduced=5.0)));







OSStatus
SSLSetEnabledCiphers (SSLContextRef context,
        const SSLCipherSuite *ciphers,
        size_t numCiphers)
 __attribute__((availability(ios,introduced=5.0)));







OSStatus
SSLGetNumberEnabledCiphers (SSLContextRef context,
        size_t *numCiphers)
 __attribute__((availability(ios,introduced=5.0)));

OSStatus
SSLGetEnabledCiphers (SSLContextRef context,
        SSLCipherSuite *ciphers,
        size_t *numCiphers)
 __attribute__((availability(ios,introduced=5.0)));





OSStatus
SSLSetSessionTicketsEnabled (SSLContextRef context,
                                 Boolean enabled)
    __attribute__((availability(ios,introduced=11.0)));
OSStatus
SSLCopyPeerTrust (SSLContextRef context,
        SecTrustRef * _Nonnull __attribute__((cf_returns_retained)) trust)
 __attribute__((availability(ios,introduced=5.0)));
OSStatus
SSLSetPeerID (SSLContextRef context,
        const void * _Nullable peerID,
        size_t peerIDLen)
 __attribute__((availability(ios,introduced=5.0)));





OSStatus
SSLGetPeerID (SSLContextRef context,
        const void * _Nullable * _Nonnull peerID,
        size_t *peerIDLen)
 __attribute__((availability(ios,introduced=5.0)));





OSStatus
SSLGetNegotiatedCipher (SSLContextRef context,
        SSLCipherSuite *cipherSuite)
 __attribute__((availability(ios,introduced=5.0)));
OSStatus
SSLSetALPNProtocols (SSLContextRef context,
                             CFArrayRef protocols)
    __attribute__((availability(ios,introduced=11.0)));
OSStatus
SSLCopyALPNProtocols (SSLContextRef context,
                             CFArrayRef _Nullable * _Nonnull protocols)
    __attribute__((availability(ios,introduced=11.0)));







OSStatus
SSLSetOCSPResponse (SSLContextRef context,
                             CFDataRef _Nonnull response)
__attribute__((availability(ios,introduced=11.0)));
OSStatus
SSLSetEncryptionCertificate (SSLContextRef context,
        CFArrayRef certRefs)
 __attribute__((availability(ios,introduced=5.0,deprecated=9.0)));







typedef int SSLAuthenticate; enum {
 kNeverAuthenticate,
 kAlwaysAuthenticate,
 kTryAuthenticate

};

OSStatus
SSLSetClientSideAuthenticate (SSLContextRef context,
         SSLAuthenticate auth)
 __attribute__((availability(ios,introduced=5.0)));





OSStatus
SSLAddDistinguishedName (SSLContextRef context,
        const void * _Nullable derDN,
        size_t derDNLen)
 __attribute__((availability(ios,introduced=5.0)));
OSStatus
SSLCopyDistinguishedNames (SSLContextRef context,
        CFArrayRef * _Nonnull __attribute__((cf_returns_retained)) names)
 __attribute__((availability(ios,introduced=5.0)));







OSStatus
SSLGetClientCertificateState (SSLContextRef context,
         SSLClientCertificateState *clientState)
 __attribute__((availability(ios,introduced=5.0)));
OSStatus
SSLHandshake (SSLContextRef context)
 __attribute__((availability(ios,introduced=5.0)));







OSStatus
SSLReHandshake (SSLContextRef context)
    __attribute__((availability(ios,introduced=10.0)));







OSStatus
SSLWrite (SSLContextRef context,
        const void * _Nullable data,
        size_t dataLength,
        size_t *processed)
 __attribute__((availability(ios,introduced=5.0)));






OSStatus
SSLRead (SSLContextRef context,
        void * data,
        size_t dataLength,
        size_t *processed)
 __attribute__((availability(ios,introduced=5.0)));






OSStatus
SSLGetBufferedReadSize (SSLContextRef context,
        size_t *bufSize)
 __attribute__((availability(ios,introduced=5.0)));







OSStatus
SSLGetDatagramWriteSize (SSLContextRef dtlsContext,
        size_t *bufSize)
 __attribute__((availability(ios,introduced=5.0)));




OSStatus
SSLClose (SSLContextRef context)
 __attribute__((availability(ios,introduced=5.0)));





OSStatus
SSLSetError (SSLContextRef context,
                             OSStatus status)
    __attribute__((availability(ios,introduced=11.0)));
#pragma clang assume_nonnull end




}

// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

// @class NSURL;
#ifndef _REWRITER_typedef_NSURL
#define _REWRITER_typedef_NSURL
typedef struct objc_object NSURL;
typedef struct {} _objc_exc_NSURL;
#endif

// @class NSError;
#ifndef _REWRITER_typedef_NSError
#define _REWRITER_typedef_NSError
typedef struct objc_object NSError;
typedef struct {} _objc_exc_NSError;
#endif

// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

// @class NSDictionary;
#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

// @class NSInputStream;
#ifndef _REWRITER_typedef_NSInputStream
#define _REWRITER_typedef_NSInputStream
typedef struct objc_object NSInputStream;
typedef struct {} _objc_exc_NSInputStream;
#endif

// @class NSOutputStream;
#ifndef _REWRITER_typedef_NSOutputStream
#define _REWRITER_typedef_NSOutputStream
typedef struct objc_object NSOutputStream;
typedef struct {} _objc_exc_NSOutputStream;
#endif

// @class NSData;
#ifndef _REWRITER_typedef_NSData
#define _REWRITER_typedef_NSData
typedef struct objc_object NSData;
typedef struct {} _objc_exc_NSData;
#endif

// @class NSOperationQueue;
#ifndef _REWRITER_typedef_NSOperationQueue
#define _REWRITER_typedef_NSOperationQueue
typedef struct objc_object NSOperationQueue;
typedef struct {} _objc_exc_NSOperationQueue;
#endif


// @class NSURLCache;
#ifndef _REWRITER_typedef_NSURLCache
#define _REWRITER_typedef_NSURLCache
typedef struct objc_object NSURLCache;
typedef struct {} _objc_exc_NSURLCache;
#endif

// @class NSURLResponse;
#ifndef _REWRITER_typedef_NSURLResponse
#define _REWRITER_typedef_NSURLResponse
typedef struct objc_object NSURLResponse;
typedef struct {} _objc_exc_NSURLResponse;
#endif

// @class NSHTTPURLResponse;
#ifndef _REWRITER_typedef_NSHTTPURLResponse
#define _REWRITER_typedef_NSHTTPURLResponse
typedef struct objc_object NSHTTPURLResponse;
typedef struct {} _objc_exc_NSHTTPURLResponse;
#endif

// @class NSHTTPCookie;
#ifndef _REWRITER_typedef_NSHTTPCookie
#define _REWRITER_typedef_NSHTTPCookie
typedef struct objc_object NSHTTPCookie;
typedef struct {} _objc_exc_NSHTTPCookie;
#endif

// @class NSCachedURLResponse;
#ifndef _REWRITER_typedef_NSCachedURLResponse
#define _REWRITER_typedef_NSCachedURLResponse
typedef struct objc_object NSCachedURLResponse;
typedef struct {} _objc_exc_NSCachedURLResponse;
#endif

// @class NSURLAuthenticationChallenge;
#ifndef _REWRITER_typedef_NSURLAuthenticationChallenge
#define _REWRITER_typedef_NSURLAuthenticationChallenge
typedef struct objc_object NSURLAuthenticationChallenge;
typedef struct {} _objc_exc_NSURLAuthenticationChallenge;
#endif

// @class NSURLProtectionSpace;
#ifndef _REWRITER_typedef_NSURLProtectionSpace
#define _REWRITER_typedef_NSURLProtectionSpace
typedef struct objc_object NSURLProtectionSpace;
typedef struct {} _objc_exc_NSURLProtectionSpace;
#endif

// @class NSURLCredential;
#ifndef _REWRITER_typedef_NSURLCredential
#define _REWRITER_typedef_NSURLCredential
typedef struct objc_object NSURLCredential;
typedef struct {} _objc_exc_NSURLCredential;
#endif

// @class NSURLCredentialStorage;
#ifndef _REWRITER_typedef_NSURLCredentialStorage
#define _REWRITER_typedef_NSURLCredentialStorage
typedef struct objc_object NSURLCredentialStorage;
typedef struct {} _objc_exc_NSURLCredentialStorage;
#endif

// @class NSURLSessionDataTask;
#ifndef _REWRITER_typedef_NSURLSessionDataTask
#define _REWRITER_typedef_NSURLSessionDataTask
typedef struct objc_object NSURLSessionDataTask;
typedef struct {} _objc_exc_NSURLSessionDataTask;
#endif

// @class NSURLSessionUploadTask;
#ifndef _REWRITER_typedef_NSURLSessionUploadTask
#define _REWRITER_typedef_NSURLSessionUploadTask
typedef struct objc_object NSURLSessionUploadTask;
typedef struct {} _objc_exc_NSURLSessionUploadTask;
#endif

// @class NSURLSessionDownloadTask;
#ifndef _REWRITER_typedef_NSURLSessionDownloadTask
#define _REWRITER_typedef_NSURLSessionDownloadTask
typedef struct objc_object NSURLSessionDownloadTask;
typedef struct {} _objc_exc_NSURLSessionDownloadTask;
#endif

// @class NSNetService;
#ifndef _REWRITER_typedef_NSNetService
#define _REWRITER_typedef_NSNetService
typedef struct objc_object NSNetService;
typedef struct {} _objc_exc_NSNetService;
#endif

// @class NSURLSession;
#ifndef _REWRITER_typedef_NSURLSession
#define _REWRITER_typedef_NSURLSession
typedef struct objc_object NSURLSession;
typedef struct {} _objc_exc_NSURLSession;
#endif

// @class NSURLSessionDataTask;
#ifndef _REWRITER_typedef_NSURLSessionDataTask
#define _REWRITER_typedef_NSURLSessionDataTask
typedef struct objc_object NSURLSessionDataTask;
typedef struct {} _objc_exc_NSURLSessionDataTask;
#endif

// @class NSURLSessionUploadTask;
#ifndef _REWRITER_typedef_NSURLSessionUploadTask
#define _REWRITER_typedef_NSURLSessionUploadTask
typedef struct objc_object NSURLSessionUploadTask;
typedef struct {} _objc_exc_NSURLSessionUploadTask;
#endif

// @class NSURLSessionDownloadTask;
#ifndef _REWRITER_typedef_NSURLSessionDownloadTask
#define _REWRITER_typedef_NSURLSessionDownloadTask
typedef struct objc_object NSURLSessionDownloadTask;
typedef struct {} _objc_exc_NSURLSessionDownloadTask;
#endif

// @class NSURLSessionStreamTask;
#ifndef _REWRITER_typedef_NSURLSessionStreamTask
#define _REWRITER_typedef_NSURLSessionStreamTask
typedef struct objc_object NSURLSessionStreamTask;
typedef struct {} _objc_exc_NSURLSessionStreamTask;
#endif

// @class NSURLSessionConfiguration;
#ifndef _REWRITER_typedef_NSURLSessionConfiguration
#define _REWRITER_typedef_NSURLSessionConfiguration
typedef struct objc_object NSURLSessionConfiguration;
typedef struct {} _objc_exc_NSURLSessionConfiguration;
#endif

// @protocol NSURLSessionDelegate;

// @class NSURLSessionTaskMetrics;
#ifndef _REWRITER_typedef_NSURLSessionTaskMetrics
#define _REWRITER_typedef_NSURLSessionTaskMetrics
typedef struct objc_object NSURLSessionTaskMetrics;
typedef struct {} _objc_exc_NSURLSessionTaskMetrics;
#endif

// @class NSDateInterval;
#ifndef _REWRITER_typedef_NSDateInterval
#define _REWRITER_typedef_NSDateInterval
typedef struct objc_object NSDateInterval;
typedef struct {} _objc_exc_NSDateInterval;
#endif


#pragma clang assume_nonnull begin
extern "C" const int64_t NSURLSessionTransferSizeUnknown __attribute__((availability(ios,introduced=7_0)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0)))

#ifndef _REWRITER_typedef_NSURLSession
#define _REWRITER_typedef_NSURLSession
typedef struct objc_object NSURLSession;
typedef struct {} _objc_exc_NSURLSession;
#endif

struct NSURLSession_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};






@property (class, readonly, strong) NSURLSession *sharedSession;
// + (NSURLSession *)sessionWithConfiguration:(NSURLSessionConfiguration *)configuration;
// + (NSURLSession *)sessionWithConfiguration:(NSURLSessionConfiguration *)configuration delegate:(nullable id <NSURLSessionDelegate>)delegate delegateQueue:(nullable NSOperationQueue *)queue;

// @property (readonly, retain) NSOperationQueue *delegateQueue;
// @property (nullable, readonly, retain) id <NSURLSessionDelegate> delegate;
// @property (readonly, copy) NSURLSessionConfiguration *configuration;





// @property (nullable, copy) NSString *sessionDescription;
// - (void)finishTasksAndInvalidate;






// - (void)invalidateAndCancel;

// - (void)resetWithCompletionHandler:(void (^)(void))completionHandler;
// - (void)flushWithCompletionHandler:(void (^)(void))completionHandler;

// - (void)getTasksWithCompletionHandler:(void (^)(NSArray<NSURLSessionDataTask *> *dataTasks, NSArray<NSURLSessionUploadTask *> *uploadTasks, NSArray<NSURLSessionDownloadTask *> *downloadTasks))completionHandler;

// - (void)getAllTasksWithCompletionHandler:(void (^)(NSArray<__kindof NSURLSessionTask *> *tasks))completionHandler __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));







// - (NSURLSessionDataTask *)dataTaskWithRequest:(NSURLRequest *)request;


// - (NSURLSessionDataTask *)dataTaskWithURL:(NSURL *)url;


// - (NSURLSessionUploadTask *)uploadTaskWithRequest:(NSURLRequest *)request fromFile:(NSURL *)fileURL;


// - (NSURLSessionUploadTask *)uploadTaskWithRequest:(NSURLRequest *)request fromData:(NSData *)bodyData;


// - (NSURLSessionUploadTask *)uploadTaskWithStreamedRequest:(NSURLRequest *)request;


// - (NSURLSessionDownloadTask *)downloadTaskWithRequest:(NSURLRequest *)request;


// - (NSURLSessionDownloadTask *)downloadTaskWithURL:(NSURL *)url;


// - (NSURLSessionDownloadTask *)downloadTaskWithResumeData:(NSData *)resumeData;



// - (NSURLSessionStreamTask *)streamTaskWithHostName:(NSString *)hostname port:(NSInteger)port __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,unavailable)));




// - (NSURLSessionStreamTask *)streamTaskWithNetService:(NSNetService *)service __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,unavailable)));

/* @end */

// @interface NSURLSession (NSURLSessionAsynchronousConvenience)
// - (NSURLSessionDataTask *)dataTaskWithRequest:(NSURLRequest *)request completionHandler:(void (^)(NSData * _Nullable data, NSURLResponse * _Nullable response, NSError * _Nullable error))completionHandler;
// - (NSURLSessionDataTask *)dataTaskWithURL:(NSURL *)url completionHandler:(void (^)(NSData * _Nullable data, NSURLResponse * _Nullable response, NSError * _Nullable error))completionHandler;




// - (NSURLSessionUploadTask *)uploadTaskWithRequest:(NSURLRequest *)request fromFile:(NSURL *)fileURL completionHandler:(void (^)(NSData * _Nullable data, NSURLResponse * _Nullable response, NSError * _Nullable error))completionHandler;
// - (NSURLSessionUploadTask *)uploadTaskWithRequest:(NSURLRequest *)request fromData:(nullable NSData *)bodyData completionHandler:(void (^)(NSData * _Nullable data, NSURLResponse * _Nullable response, NSError * _Nullable error))completionHandler;







// - (NSURLSessionDownloadTask *)downloadTaskWithRequest:(NSURLRequest *)request completionHandler:(void (^)(NSURL * _Nullable location, NSURLResponse * _Nullable response, NSError * _Nullable error))completionHandler;
// - (NSURLSessionDownloadTask *)downloadTaskWithURL:(NSURL *)url completionHandler:(void (^)(NSURL * _Nullable location, NSURLResponse * _Nullable response, NSError * _Nullable error))completionHandler;
// - (NSURLSessionDownloadTask *)downloadTaskWithResumeData:(NSData *)resumeData completionHandler:(void (^)(NSURL * _Nullable location, NSURLResponse * _Nullable response, NSError * _Nullable error))completionHandler;

/* @end */


typedef NSInteger NSURLSessionTaskState; enum {
    NSURLSessionTaskStateRunning = 0,
    NSURLSessionTaskStateSuspended = 1,
    NSURLSessionTaskStateCanceling = 2,
    NSURLSessionTaskStateCompleted = 3,
} __attribute__((availability(ios,introduced=7_0)));





__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0)))

#ifndef _REWRITER_typedef_NSURLSessionTask
#define _REWRITER_typedef_NSURLSessionTask
typedef struct objc_object NSURLSessionTask;
typedef struct {} _objc_exc_NSURLSessionTask;
#endif

struct NSURLSessionTask_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property (readonly) NSUInteger taskIdentifier;
// @property (nullable, readonly, copy) NSURLRequest *originalRequest;
// @property (nullable, readonly, copy) NSURLRequest *currentRequest;
// @property (nullable, readonly, copy) NSURLResponse *response;





// @property (readonly, strong) NSProgress *progress __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
// @property (nullable, copy) NSDate *earliestBeginDate __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));






// @property int64_t countOfBytesClientExpectsToSend __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
// @property int64_t countOfBytesClientExpectsToReceive __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
// @property (readonly) int64_t countOfBytesReceived;


// @property (readonly) int64_t countOfBytesSent;


// @property (readonly) int64_t countOfBytesExpectedToSend;


// @property (readonly) int64_t countOfBytesExpectedToReceive;





// @property (nullable, copy) NSString *taskDescription;







// - (void)cancel;




// @property (readonly) NSURLSessionTaskState state;





// @property (nullable, readonly, copy) NSError *error;
// - (void)suspend;
// - (void)resume;
// @property float priority __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));

/* @end */


extern "C" const float NSURLSessionTaskPriorityDefault __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" const float NSURLSessionTaskPriorityLow __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
extern "C" const float NSURLSessionTaskPriorityHigh __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));







#ifndef _REWRITER_typedef_NSURLSessionDataTask
#define _REWRITER_typedef_NSURLSessionDataTask
typedef struct objc_object NSURLSessionDataTask;
typedef struct {} _objc_exc_NSURLSessionDataTask;
#endif

struct NSURLSessionDataTask_IMPL {
	struct NSURLSessionTask_IMPL NSURLSessionTask_IVARS;
};

/* @end */









#ifndef _REWRITER_typedef_NSURLSessionUploadTask
#define _REWRITER_typedef_NSURLSessionUploadTask
typedef struct objc_object NSURLSessionUploadTask;
typedef struct {} _objc_exc_NSURLSessionUploadTask;
#endif

struct NSURLSessionUploadTask_IMPL {
	struct NSURLSessionDataTask_IMPL NSURLSessionDataTask_IVARS;
};

/* @end */







#ifndef _REWRITER_typedef_NSURLSessionDownloadTask
#define _REWRITER_typedef_NSURLSessionDownloadTask
typedef struct objc_object NSURLSessionDownloadTask;
typedef struct {} _objc_exc_NSURLSessionDownloadTask;
#endif

struct NSURLSessionDownloadTask_IMPL {
	struct NSURLSessionTask_IMPL NSURLSessionTask_IVARS;
};

// - (void)cancelByProducingResumeData:(void (^)(NSData * _Nullable resumeData))completionHandler;

/* @end */

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0)))

#ifndef _REWRITER_typedef_NSURLSessionStreamTask
#define _REWRITER_typedef_NSURLSessionStreamTask
typedef struct objc_object NSURLSessionStreamTask;
typedef struct {} _objc_exc_NSURLSessionStreamTask;
#endif

struct NSURLSessionStreamTask_IMPL {
	struct NSURLSessionTask_IMPL NSURLSessionTask_IVARS;
};







// - (void)readDataOfMinLength:(NSUInteger)minBytes maxLength:(NSUInteger)maxBytes timeout:(NSTimeInterval)timeout completionHandler:(void (^) (NSData * _Nullable data, BOOL atEOF, NSError * _Nullable error))completionHandler;






// - (void)writeData:(NSData *)data timeout:(NSTimeInterval)timeout completionHandler:(void (^) (NSError * _Nullable error))completionHandler;







// - (void)captureStreams;







// - (void)closeWrite;





// - (void)closeRead;






// - (void)startSecureConnection;





// - (void)stopSecureConnection;

/* @end */

typedef NSInteger NSURLSessionMultipathServiceType; enum
{
    NSURLSessionMultipathServiceTypeNone = 0,
    NSURLSessionMultipathServiceTypeHandover = 1,
    NSURLSessionMultipathServiceTypeInteractive = 2,
    NSURLSessionMultipathServiceTypeAggregate = 3
} __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((swift_name("URLSessionConfiguration.MultipathServiceType")));
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0)))

#ifndef _REWRITER_typedef_NSURLSessionConfiguration
#define _REWRITER_typedef_NSURLSessionConfiguration
typedef struct objc_object NSURLSessionConfiguration;
typedef struct {} _objc_exc_NSURLSessionConfiguration;
#endif

struct NSURLSessionConfiguration_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


@property (class, readonly, strong) NSURLSessionConfiguration *defaultSessionConfiguration;
@property (class, readonly, strong) NSURLSessionConfiguration *ephemeralSessionConfiguration;

// + (NSURLSessionConfiguration *)backgroundSessionConfigurationWithIdentifier:(NSString *)identifier __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


// @property (nullable, readonly, copy) NSString *identifier;


// @property NSURLRequestCachePolicy requestCachePolicy;


// @property NSTimeInterval timeoutIntervalForRequest;


// @property NSTimeInterval timeoutIntervalForResource;


// @property NSURLRequestNetworkServiceType networkServiceType;


// @property BOOL allowsCellularAccess;
// @property BOOL waitsForConnectivity __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));


// @property (getter=isDiscretionary) BOOL discretionary __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));





// @property (nullable, copy) NSString *sharedContainerIdentifier __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));






// @property BOOL sessionSendsLaunchEvents __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));


// @property (nullable, copy) NSDictionary *connectionProxyDictionary;


// @property SSLProtocol TLSMinimumSupportedProtocol;


// @property SSLProtocol TLSMaximumSupportedProtocol;


// @property BOOL HTTPShouldUsePipelining;


// @property BOOL HTTPShouldSetCookies;


// @property NSHTTPCookieAcceptPolicy HTTPCookieAcceptPolicy;



// @property (nullable, copy) NSDictionary *HTTPAdditionalHeaders;


// @property NSInteger HTTPMaximumConnectionsPerHost;


// @property (nullable, retain) NSHTTPCookieStorage *HTTPCookieStorage;


// @property (nullable, retain) NSURLCredentialStorage *URLCredentialStorage;


// @property (nullable, retain) NSURLCache *URLCache;




// @property BOOL shouldUseExtendedBackgroundIdleMode __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// @property (nullable, copy) NSArray<Class> *protocolClasses;


// @property NSURLSessionMultipathServiceType multipathServiceType __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

/* @end */





typedef NSInteger NSURLSessionDelayedRequestDisposition; enum {
    NSURLSessionDelayedRequestContinueLoading = 0,
    NSURLSessionDelayedRequestUseNewRequest = 1,
    NSURLSessionDelayedRequestCancel = 2,
} __attribute__((swift_name("URLSession.DelayedRequestDisposition"))) __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));

typedef NSInteger NSURLSessionAuthChallengeDisposition; enum {
    NSURLSessionAuthChallengeUseCredential = 0,
    NSURLSessionAuthChallengePerformDefaultHandling = 1,
    NSURLSessionAuthChallengeCancelAuthenticationChallenge = 2,
    NSURLSessionAuthChallengeRejectProtectionSpace = 3,
} __attribute__((availability(ios,introduced=7_0)));


typedef NSInteger NSURLSessionResponseDisposition; enum {
    NSURLSessionResponseCancel = 0,
    NSURLSessionResponseAllow = 1,
    NSURLSessionResponseBecomeDownload = 2,
    NSURLSessionResponseBecomeStream __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) = 3,
} __attribute__((availability(ios,introduced=7_0)));
// @protocol NSURLSessionDelegate <NSObject>
/* @optional */





// - (void)URLSession:(NSURLSession *)session didBecomeInvalidWithError:(nullable NSError *)error;
#if 0
- (void)URLSession:(NSURLSession *)session didReceiveChallenge:(NSURLAuthenticationChallenge *)challenge
                                             completionHandler:(void (^)(NSURLSessionAuthChallengeDisposition disposition, NSURLCredential * _Nullable credential))completionHandler;
#endif

// - (void)URLSessionDidFinishEventsForBackgroundURLSession:(NSURLSession *)session __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macos,unavailable)));

/* @end */





// @protocol NSURLSessionTaskDelegate <NSURLSessionDelegate>
/* @optional */
#if 0
- (void)URLSession:(NSURLSession *)session task:(NSURLSessionTask *)task
                        willBeginDelayedRequest:(NSURLRequest *)request
                              completionHandler:(void (^)(NSURLSessionDelayedRequestDisposition disposition, NSURLRequest * _Nullable newRequest))completionHandler
    __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
#endif

#if 0
- (void)URLSession:(NSURLSession *)session taskIsWaitingForConnectivity:(NSURLSessionTask *)task
    __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
#endif

#if 0
- (void)URLSession:(NSURLSession *)session task:(NSURLSessionTask *)task
                     willPerformHTTPRedirection:(NSHTTPURLResponse *)response
                                     newRequest:(NSURLRequest *)request
                              completionHandler:(void (^)(NSURLRequest * _Nullable))completionHandler;
#endif







#if 0
- (void)URLSession:(NSURLSession *)session task:(NSURLSessionTask *)task
                            didReceiveChallenge:(NSURLAuthenticationChallenge *)challenge
                              completionHandler:(void (^)(NSURLSessionAuthChallengeDisposition disposition, NSURLCredential * _Nullable credential))completionHandler;
#endif






#if 0
- (void)URLSession:(NSURLSession *)session task:(NSURLSessionTask *)task
                              needNewBodyStream:(void (^)(NSInputStream * _Nullable bodyStream))completionHandler;
#endif





#if 0
- (void)URLSession:(NSURLSession *)session task:(NSURLSessionTask *)task
                                didSendBodyData:(int64_t)bytesSent
                                 totalBytesSent:(int64_t)totalBytesSent
                       totalBytesExpectedToSend:(int64_t)totalBytesExpectedToSend;
#endif





// - (void)URLSession:(NSURLSession *)session task:(NSURLSessionTask *)task didFinishCollectingMetrics:(NSURLSessionTaskMetrics *)metrics __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));




#if 0
- (void)URLSession:(NSURLSession *)session task:(NSURLSessionTask *)task
                           didCompleteWithError:(nullable NSError *)error;
#endif


/* @end */






// @protocol NSURLSessionDataDelegate <NSURLSessionTaskDelegate>
/* @optional */
#if 0
- (void)URLSession:(NSURLSession *)session dataTask:(NSURLSessionDataTask *)dataTask
                                 didReceiveResponse:(NSURLResponse *)response
                                  completionHandler:(void (^)(NSURLSessionResponseDisposition disposition))completionHandler;
#endif





#if 0
- (void)URLSession:(NSURLSession *)session dataTask:(NSURLSessionDataTask *)dataTask
                              didBecomeDownloadTask:(NSURLSessionDownloadTask *)downloadTask;
#endif

#if 0
- (void)URLSession:(NSURLSession *)session dataTask:(NSURLSessionDataTask *)dataTask
                                didBecomeStreamTask:(NSURLSessionStreamTask *)streamTask;
#endif







#if 0
- (void)URLSession:(NSURLSession *)session dataTask:(NSURLSessionDataTask *)dataTask
                                     didReceiveData:(NSData *)data;
#endif








#if 0
- (void)URLSession:(NSURLSession *)session dataTask:(NSURLSessionDataTask *)dataTask
                                  willCacheResponse:(NSCachedURLResponse *)proposedResponse
                                  completionHandler:(void (^)(NSCachedURLResponse * _Nullable cachedResponse))completionHandler;
#endif


/* @end */






// @protocol NSURLSessionDownloadDelegate <NSURLSessionTaskDelegate>






#if 0
- (void)URLSession:(NSURLSession *)session downloadTask:(NSURLSessionDownloadTask *)downloadTask
                              didFinishDownloadingToURL:(NSURL *)location;
#endif


/* @optional */

#if 0
- (void)URLSession:(NSURLSession *)session downloadTask:(NSURLSessionDownloadTask *)downloadTask
                                           didWriteData:(int64_t)bytesWritten
                                      totalBytesWritten:(int64_t)totalBytesWritten
                              totalBytesExpectedToWrite:(int64_t)totalBytesExpectedToWrite;
#endif







#if 0
- (void)URLSession:(NSURLSession *)session downloadTask:(NSURLSessionDownloadTask *)downloadTask
                                      didResumeAtOffset:(int64_t)fileOffset
                                     expectedTotalBytes:(int64_t)expectedTotalBytes;
#endif


/* @end */


// @protocol NSURLSessionStreamDelegate <NSURLSessionTaskDelegate>
/* @optional */







// - (void)URLSession:(NSURLSession *)session readClosedForStreamTask:(NSURLSessionStreamTask *)streamTask;





// - (void)URLSession:(NSURLSession *)session writeClosedForStreamTask:(NSURLSessionStreamTask *)streamTask;
// - (void)URLSession:(NSURLSession *)session betterRouteDiscoveredForStreamTask:(NSURLSessionStreamTask *)streamTask;







#if 0
- (void)URLSession:(NSURLSession *)session streamTask:(NSURLSessionStreamTask *)streamTask
                                 didBecomeInputStream:(NSInputStream *)inputStream
                                         outputStream:(NSOutputStream *)outputStream;
#endif


/* @end */



extern "C" NSString * const NSURLSessionDownloadTaskResumeData __attribute__((availability(ios,introduced=7_0)));

// @interface NSURLSessionConfiguration (NSURLSessionDeprecated)
// + (NSURLSessionConfiguration *)backgroundSessionConfiguration:(NSString *)identifier __attribute__((availability(ios,introduced=7_0,deprecated=8_0,message="" "Please use backgroundSessionConfigurationWithIdentifier: instead")));
/* @end */





typedef NSInteger NSURLSessionTaskMetricsResourceFetchType; enum {
    NSURLSessionTaskMetricsResourceFetchTypeUnknown,
    NSURLSessionTaskMetricsResourceFetchTypeNetworkLoad,
    NSURLSessionTaskMetricsResourceFetchTypeServerPush,
    NSURLSessionTaskMetricsResourceFetchTypeLocalCache,
} __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));




__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSURLSessionTaskTransactionMetrics
#define _REWRITER_typedef_NSURLSessionTaskTransactionMetrics
typedef struct objc_object NSURLSessionTaskTransactionMetrics;
typedef struct {} _objc_exc_NSURLSessionTaskTransactionMetrics;
#endif

struct NSURLSessionTaskTransactionMetrics_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};





// @property (copy, readonly) NSURLRequest *request;




// @property (nullable, copy, readonly) NSURLResponse *response;
// @property (nullable, copy, readonly) NSDate *fetchStartDate;




// @property (nullable, copy, readonly) NSDate *domainLookupStartDate;




// @property (nullable, copy, readonly) NSDate *domainLookupEndDate;






// @property (nullable, copy, readonly) NSDate *connectStartDate;
// @property (nullable, copy, readonly) NSDate *secureConnectionStartDate;






// @property (nullable, copy, readonly) NSDate *secureConnectionEndDate;




// @property (nullable, copy, readonly) NSDate *connectEndDate;






// @property (nullable, copy, readonly) NSDate *requestStartDate;






// @property (nullable, copy, readonly) NSDate *requestEndDate;






// @property (nullable, copy, readonly) NSDate *responseStartDate;




// @property (nullable, copy, readonly) NSDate *responseEndDate;
// @property (nullable, copy, readonly) NSString *networkProtocolName;




// @property (assign, readonly, getter=isProxyConnection) BOOL proxyConnection;




// @property (assign, readonly, getter=isReusedConnection) BOOL reusedConnection;




// @property (assign, readonly) NSURLSessionTaskMetricsResourceFetchType resourceFetchType;


// -(instancetype)init;


/* @end */



__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)))

#ifndef _REWRITER_typedef_NSURLSessionTaskMetrics
#define _REWRITER_typedef_NSURLSessionTaskMetrics
typedef struct objc_object NSURLSessionTaskMetrics;
typedef struct {} _objc_exc_NSURLSessionTaskMetrics;
#endif

struct NSURLSessionTaskMetrics_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};





// @property (copy, readonly) NSArray<NSURLSessionTaskTransactionMetrics *> *transactionMetrics;






// @property (copy, readonly) NSDateInterval *taskInterval;




// @property (assign, readonly) NSUInteger redirectCount;

// -(instancetype)init;

/* @end */

#pragma clang assume_nonnull end








// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

#ifndef _REWRITER_typedef_NSSet
#define _REWRITER_typedef_NSSet
typedef struct objc_object NSSet;
typedef struct {} _objc_exc_NSSet;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSURL
#define _REWRITER_typedef_NSURL
typedef struct objc_object NSURL;
typedef struct {} _objc_exc_NSURL;
#endif

#ifndef _REWRITER_typedef_NSInputStream
#define _REWRITER_typedef_NSInputStream
typedef struct objc_object NSInputStream;
typedef struct {} _objc_exc_NSInputStream;
#endif

#ifndef _REWRITER_typedef_NSOutputStream
#define _REWRITER_typedef_NSOutputStream
typedef struct objc_object NSOutputStream;
typedef struct {} _objc_exc_NSOutputStream;
#endif

#ifndef _REWRITER_typedef_NSError
#define _REWRITER_typedef_NSError
typedef struct objc_object NSError;
typedef struct {} _objc_exc_NSError;
#endif

// @protocol NSUserActivityDelegate;

#pragma clang assume_nonnull begin



__attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)))

#ifndef _REWRITER_typedef_NSUserActivity
#define _REWRITER_typedef_NSUserActivity
typedef struct objc_object NSUserActivity;
typedef struct {} _objc_exc_NSUserActivity;
#endif

struct NSUserActivity_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};




// - (instancetype)initWithActivityType:(NSString *)activityType __attribute__((objc_designated_initializer));



// - (instancetype)init __attribute__((availability(macosx,introduced=10.10,deprecated=10.12,message="Use initWithActivityType: with a specific activity type string"))) __attribute__((availability(ios,introduced=8.0,deprecated=10.0,message="Use initWithActivityType: with a specific activity type string"))) __attribute__((availability(watchos,introduced=2.0,deprecated=3.0,message="Use initWithActivityType: with a specific activity type string"))) __attribute__((availability(tvos,introduced=9.0,deprecated=10.0,message="Use initWithActivityType: with a specific activity type string")));



// @property (readonly, copy) NSString *activityType;



// @property (nullable, copy) NSString *title;



// @property (nullable, copy) NSDictionary *userInfo;



// - (void)addUserInfoEntriesFromDictionary:(NSDictionary *)otherDictionary;


// @property (nullable, copy) NSSet<NSString *> *requiredUserInfoKeys __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));



// @property (assign) BOOL needsSave;



// @property (nullable, copy) NSURL *webpageURL;



// @property (nullable, copy) NSURL *referrerURL __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));


// @property (nullable, copy) NSDate *expirationDate __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));


// @property (copy) NSSet<NSString *> *keywords __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));



// @property BOOL supportsContinuationStreams;



// @property (nullable, weak) id<NSUserActivityDelegate> delegate;



// - (void)becomeCurrent;


// - (void)resignCurrent __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));



// - (void)invalidate;



// - (void)getContinuationStreamsWithCompletionHandler:(void (^)(NSInputStream * _Nullable inputStream, NSOutputStream * _Nullable outputStream, NSError * _Nullable error))completionHandler;


// @property (getter=isEligibleForHandoff) BOOL eligibleForHandoff __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));


// @property (getter=isEligibleForSearch) BOOL eligibleForSearch __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));


// @property (getter=isEligibleForPublicIndexing) BOOL eligibleForPublicIndexing __attribute__((availability(macos,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

/* @end */




extern "C" NSString * const NSUserActivityTypeBrowsingWeb;



__attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0)))
// @protocol NSUserActivityDelegate <NSObject>
/* @optional */



// - (void)userActivityWillSave:(NSUserActivity *)userActivity;



// - (void)userActivityWasContinued:(NSUserActivity *)userActivity;



// - (void)userActivity:(NSUserActivity *)userActivity didReceiveInputStream:(NSInputStream *) inputStream outputStream:(NSOutputStream *)outputStream;

/* @end */

#pragma clang assume_nonnull end






typedef __darwin_uuid_string_t uuid_string_t;





static const uuid_t UUID_NULL __attribute__ ((unused)) = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};


extern "C" {


void uuid_clear(uuid_t uu);

int uuid_compare(const uuid_t uu1, const uuid_t uu2);

void uuid_copy(uuid_t dst, const uuid_t src);

void uuid_generate(uuid_t out);
void uuid_generate_random(uuid_t out);
void uuid_generate_time(uuid_t out);

int uuid_is_null(const uuid_t uu);

int uuid_parse(const uuid_string_t in, uuid_t uu);

void uuid_unparse(const uuid_t uu, uuid_string_t out);
void uuid_unparse_lower(const uuid_t uu, uuid_string_t out);
void uuid_unparse_upper(const uuid_t uu, uuid_string_t out);


}



#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0)))

#ifndef _REWRITER_typedef_NSUUID
#define _REWRITER_typedef_NSUUID
typedef struct objc_object NSUUID;
typedef struct {} _objc_exc_NSUUID;
#endif

struct NSUUID_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



// + (instancetype)UUID;


// - (instancetype)init __attribute__((objc_designated_initializer));


// - (nullable instancetype)initWithUUIDString:(NSString *)string;


// - (instancetype)initWithUUIDBytes:(const uuid_t _Nullable)bytes;


// - (void)getUUIDBytes:(uuid_t _Nonnull)uuid;


// @property (readonly, copy) NSString *UUIDString;

/* @end */

#pragma clang assume_nonnull end





#pragma clang assume_nonnull begin

typedef double UIAccelerationValue;

// @protocol UIAccelerometerDelegate;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0,deprecated=5_0,message="" "UIAcceleration has been replaced by the CoreMotion framework"))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_UIAcceleration
#define _REWRITER_typedef_UIAcceleration
typedef struct objc_object UIAcceleration;
typedef struct {} _objc_exc_UIAcceleration;
#endif

struct UIAcceleration_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property(nonatomic,readonly) NSTimeInterval timestamp;
// @property(nonatomic,readonly) UIAccelerationValue x;
// @property(nonatomic,readonly) UIAccelerationValue y;
// @property(nonatomic,readonly) UIAccelerationValue z;

/* @end */


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0,deprecated=5_0,message="" "UIAccelerometer has been replaced by the CoreMotion framework"))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_UIAccelerometer
#define _REWRITER_typedef_UIAccelerometer
typedef struct objc_object UIAccelerometer;
typedef struct {} _objc_exc_UIAccelerometer;
#endif

struct UIAccelerometer_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// + (UIAccelerometer *)sharedAccelerometer;

// @property(nonatomic) NSTimeInterval updateInterval;
// @property(nullable,nonatomic,weak) id<UIAccelerometerDelegate> delegate;

/* @end */


 __attribute__((availability(tvos,unavailable)))
// @protocol UIAccelerometerDelegate<NSObject>
/* @optional */

// - (void)accelerometer:(UIAccelerometer *)accelerometer didAccelerate:(UIAcceleration *)acceleration __attribute__((availability(ios,introduced=2_0,deprecated=5_0,message="" ))) __attribute__((availability(tvos,unavailable)));

/* @end */

#pragma clang assume_nonnull end























typedef double CGFloat;
typedef struct __attribute__((objc_bridge(id))) __IOSurface *IOSurfaceRef __attribute__((swift_name("IOSurfaceRef")));








typedef struct CGAffineTransform CGAffineTransform;



#pragma clang assume_nonnull begin


struct
CGPoint {
    CGFloat x;
    CGFloat y;
};
typedef struct __attribute__((objc_boxable)) CGPoint CGPoint;



struct CGSize {
    CGFloat width;
    CGFloat height;
};
typedef struct __attribute__((objc_boxable)) CGSize CGSize;





struct CGVector {
    CGFloat dx;
    CGFloat dy;
};
typedef struct __attribute__((objc_boxable)) CGVector CGVector;



struct CGRect {
    CGPoint origin;
    CGSize size;
};
typedef struct __attribute__((objc_boxable)) CGRect CGRect;



typedef uint32_t CGRectEdge; enum {
    CGRectMinXEdge, CGRectMinYEdge, CGRectMaxXEdge, CGRectMaxYEdge
};



extern "C" const CGPoint CGPointZero
      __attribute__((availability(ios,introduced=2.0)));



extern "C" const CGSize CGSizeZero
    __attribute__((availability(ios,introduced=2.0)));



extern "C" const CGRect CGRectZero
    __attribute__((availability(ios,introduced=2.0)));





extern "C" const CGRect CGRectNull
    __attribute__((availability(ios,introduced=2.0)));



extern "C" const CGRect CGRectInfinite
    __attribute__((availability(ios,introduced=2.0)));



static inline CGPoint CGPointMake(CGFloat x, CGFloat y);



static inline CGSize CGSizeMake(CGFloat width, CGFloat height);



static inline CGVector CGVectorMake(CGFloat dx, CGFloat dy);



static inline CGRect CGRectMake(CGFloat x, CGFloat y, CGFloat width,
  CGFloat height);



extern "C" CGFloat CGRectGetMinX(CGRect rect)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" CGFloat CGRectGetMidX(CGRect rect)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" CGFloat CGRectGetMaxX(CGRect rect)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" CGFloat CGRectGetMinY(CGRect rect)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" CGFloat CGRectGetMidY(CGRect rect)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" CGFloat CGRectGetMaxY(CGRect rect)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" CGFloat CGRectGetWidth(CGRect rect)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" CGFloat CGRectGetHeight(CGRect rect)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" bool CGPointEqualToPoint(CGPoint point1, CGPoint point2)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" bool CGSizeEqualToSize(CGSize size1, CGSize size2)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" bool CGRectEqualToRect(CGRect rect1, CGRect rect2)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" CGRect CGRectStandardize(CGRect rect)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" bool CGRectIsEmpty(CGRect rect)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" bool CGRectIsNull(CGRect rect)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" bool CGRectIsInfinite(CGRect rect)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" CGRect CGRectInset(CGRect rect, CGFloat dx, CGFloat dy)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" CGRect CGRectIntegral(CGRect rect)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" CGRect CGRectUnion(CGRect r1, CGRect r2)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" CGRect CGRectIntersection(CGRect r1, CGRect r2)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" CGRect CGRectOffset(CGRect rect, CGFloat dx, CGFloat dy)
    __attribute__((availability(ios,introduced=2.0)));







extern "C" void CGRectDivide(CGRect rect, CGRect * slice,
    CGRect * remainder, CGFloat amount, CGRectEdge edge)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" bool CGRectContainsPoint(CGRect rect, CGPoint point)
    __attribute__((availability(ios,introduced=2.0)));





extern "C" bool CGRectContainsRect(CGRect rect1, CGRect rect2)
    __attribute__((availability(ios,introduced=2.0)));





extern "C" bool CGRectIntersectsRect(CGRect rect1, CGRect rect2)
    __attribute__((availability(ios,introduced=2.0)));





extern "C" CFDictionaryRef CGPointCreateDictionaryRepresentation(
    CGPoint point)
    __attribute__((availability(ios,introduced=2.0)));





extern "C" bool CGPointMakeWithDictionaryRepresentation(
    CFDictionaryRef _Nullable dict, CGPoint * _Nullable point)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" CFDictionaryRef CGSizeCreateDictionaryRepresentation(CGSize size)
    __attribute__((availability(ios,introduced=2.0)));





extern "C" bool CGSizeMakeWithDictionaryRepresentation(
    CFDictionaryRef _Nullable dict, CGSize * _Nullable size)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" CFDictionaryRef CGRectCreateDictionaryRepresentation(CGRect)
    __attribute__((availability(ios,introduced=2.0)));





extern "C" bool CGRectMakeWithDictionaryRepresentation(
    CFDictionaryRef _Nullable dict, CGRect * _Nullable rect)
    __attribute__((availability(ios,introduced=2.0)));



static inline CGPoint
CGPointMake(CGFloat x, CGFloat y)
{
  CGPoint p; p.x = x; p.y = y; return p;
}

static inline CGSize
CGSizeMake(CGFloat width, CGFloat height)
{
  CGSize size; size.width = width; size.height = height; return size;
}

static inline CGVector
CGVectorMake(CGFloat dx, CGFloat dy)
{
  CGVector vector; vector.dx = dx; vector.dy = dy; return vector;
}

static inline CGRect
CGRectMake(CGFloat x, CGFloat y, CGFloat width, CGFloat height)
{
  CGRect rect;
  rect.origin.x = x; rect.origin.y = y;
  rect.size.width = width; rect.size.height = height;
  return rect;
}

static inline bool
__CGPointEqualToPoint(CGPoint point1, CGPoint point2)
{
  return point1.x == point2.x && point1.y == point2.y;
}


static inline bool
__CGSizeEqualToSize(CGSize size1, CGSize size2)
{
  return size1.width == size2.width && size1.height == size2.height;
}
#pragma clang assume_nonnull end



struct CGAffineTransform {
  CGFloat a, b, c, d;
  CGFloat tx, ty;
};



extern "C" const CGAffineTransform CGAffineTransformIdentity
  __attribute__((availability(ios,introduced=2.0)));



extern "C" CGAffineTransform CGAffineTransformMake(CGFloat a, CGFloat b,
  CGFloat c, CGFloat d, CGFloat tx, CGFloat ty)
  __attribute__((availability(ios,introduced=2.0)));




extern "C" CGAffineTransform CGAffineTransformMakeTranslation(CGFloat tx,
  CGFloat ty) __attribute__((availability(ios,introduced=2.0)));




extern "C" CGAffineTransform CGAffineTransformMakeScale(CGFloat sx, CGFloat sy)
  __attribute__((availability(ios,introduced=2.0)));




extern "C" CGAffineTransform CGAffineTransformMakeRotation(CGFloat angle)
  __attribute__((availability(ios,introduced=2.0)));



extern "C" bool CGAffineTransformIsIdentity(CGAffineTransform t)
  __attribute__((availability(ios,introduced=2.0)));




extern "C" CGAffineTransform CGAffineTransformTranslate(CGAffineTransform t,
  CGFloat tx, CGFloat ty) __attribute__((availability(ios,introduced=2.0)));




extern "C" CGAffineTransform CGAffineTransformScale(CGAffineTransform t,
  CGFloat sx, CGFloat sy) __attribute__((availability(ios,introduced=2.0)));




extern "C" CGAffineTransform CGAffineTransformRotate(CGAffineTransform t,
  CGFloat angle) __attribute__((availability(ios,introduced=2.0)));




extern "C" CGAffineTransform CGAffineTransformInvert(CGAffineTransform t)
  __attribute__((availability(ios,introduced=2.0)));




extern "C" CGAffineTransform CGAffineTransformConcat(CGAffineTransform t1,
  CGAffineTransform t2) __attribute__((availability(ios,introduced=2.0)));



extern "C" bool CGAffineTransformEqualToTransform(CGAffineTransform t1,
  CGAffineTransform t2) __attribute__((availability(ios,introduced=2.0)));





extern "C" CGPoint CGPointApplyAffineTransform(CGPoint point,
  CGAffineTransform t) __attribute__((availability(ios,introduced=2.0)));





extern "C" CGSize CGSizeApplyAffineTransform(CGSize size, CGAffineTransform t)
  __attribute__((availability(ios,introduced=2.0)));
extern "C" CGRect CGRectApplyAffineTransform(CGRect rect, CGAffineTransform t)
  __attribute__((availability(ios,introduced=2.0)));



static inline CGAffineTransform
__CGAffineTransformMake(CGFloat a, CGFloat b, CGFloat c, CGFloat d,
  CGFloat tx, CGFloat ty)
{
  CGAffineTransform t;
  t.a = a; t.b = b; t.c = c; t.d = d; t.tx = tx; t.ty = ty;
  return t;
}


static inline CGPoint
__CGPointApplyAffineTransform(CGPoint point, CGAffineTransform t)
{
  CGPoint p;
  p.x = (CGFloat)((double)t.a * point.x + (double)t.c * point.y + t.tx);
  p.y = (CGFloat)((double)t.b * point.x + (double)t.d * point.y + t.ty);
  return p;
}


static inline CGSize
__CGSizeApplyAffineTransform(CGSize size, CGAffineTransform t)
{
  CGSize s;
  s.width = (CGFloat)((double)t.a * size.width + (double)t.c * size.height);
  s.height = (CGFloat)((double)t.b * size.width + (double)t.d * size.height);
  return s;
}








typedef struct __attribute__((objc_bridge(id))) CGContext *CGContextRef;




typedef struct __attribute__((objc_bridge(id))) CGColor *CGColorRef;



typedef struct __attribute__((objc_bridge(id))) CGColorSpace *CGColorSpaceRef;



typedef struct __attribute__((objc_bridge(id))) CGDataProvider *CGDataProviderRef;







#pragma clang assume_nonnull begin




typedef size_t (*CGDataProviderGetBytesCallback)(void * _Nullable info,
    void * buffer, size_t count);





typedef off_t (*CGDataProviderSkipForwardCallback)(void * _Nullable info,
    off_t count);




typedef void (*CGDataProviderRewindCallback)(void * _Nullable info);




typedef void (*CGDataProviderReleaseInfoCallback)(void * _Nullable info);
struct CGDataProviderSequentialCallbacks {
    unsigned int version;
    CGDataProviderGetBytesCallback _Nullable getBytes;
    CGDataProviderSkipForwardCallback _Nullable skipForward;
    CGDataProviderRewindCallback _Nullable rewind;
    CGDataProviderReleaseInfoCallback _Nullable releaseInfo;
};
typedef struct CGDataProviderSequentialCallbacks
    CGDataProviderSequentialCallbacks;



typedef const void * _Nullable(*CGDataProviderGetBytePointerCallback)(
    void * _Nullable info);




typedef void (*CGDataProviderReleaseBytePointerCallback)(
    void * _Nullable info, const void * pointer);




typedef size_t (*CGDataProviderGetBytesAtPositionCallback)(
    void * _Nullable info, void * buffer, off_t pos, size_t cnt);
struct CGDataProviderDirectCallbacks {
    unsigned int version;
    CGDataProviderGetBytePointerCallback _Nullable getBytePointer;
    CGDataProviderReleaseBytePointerCallback _Nullable releaseBytePointer;
    CGDataProviderGetBytesAtPositionCallback _Nullable getBytesAtPosition;
    CGDataProviderReleaseInfoCallback _Nullable releaseInfo;
};
typedef struct CGDataProviderDirectCallbacks CGDataProviderDirectCallbacks;



extern "C" CFTypeID CGDataProviderGetTypeID(void)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" CGDataProviderRef _Nullable CGDataProviderCreateSequential(
    void * _Nullable info,
    const CGDataProviderSequentialCallbacks * _Nullable callbacks)
    __attribute__((availability(ios,introduced=2.0)));





extern "C" CGDataProviderRef _Nullable CGDataProviderCreateDirect(
    void * _Nullable info, off_t size,
    const CGDataProviderDirectCallbacks * _Nullable callbacks)
    __attribute__((availability(ios,introduced=2.0)));



typedef void (*CGDataProviderReleaseDataCallback)(void * _Nullable info,
    const void * data, size_t size);





extern "C" CGDataProviderRef _Nullable CGDataProviderCreateWithData(
    void * _Nullable info, const void * _Nullable data, size_t size,
    CGDataProviderReleaseDataCallback _Nullable releaseData)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" CGDataProviderRef _Nullable CGDataProviderCreateWithCFData(
    CFDataRef _Nullable data)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" CGDataProviderRef _Nullable CGDataProviderCreateWithURL(
    CFURLRef _Nullable url)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" CGDataProviderRef _Nullable CGDataProviderCreateWithFilename(
    const char * _Nullable filename)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" CGDataProviderRef _Nullable CGDataProviderRetain(
    CGDataProviderRef _Nullable provider)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" void CGDataProviderRelease(CGDataProviderRef _Nullable provider)
    __attribute__((availability(ios,introduced=2.0)));





extern "C" CFDataRef _Nullable CGDataProviderCopyData(
    CGDataProviderRef _Nullable provider)
    __attribute__((availability(ios,introduced=2.0)));

extern "C" void* _Nullable CGDataProviderGetInfo(CGDataProviderRef _Nullable provider)
    __attribute__((availability(ios,introduced=11.0)));
#pragma clang assume_nonnull end





typedef int32_t CGColorRenderingIntent; enum {
    kCGRenderingIntentDefault,
    kCGRenderingIntentAbsoluteColorimetric,
    kCGRenderingIntentRelativeColorimetric,
    kCGRenderingIntentPerceptual,
    kCGRenderingIntentSaturation
};



typedef int32_t CGColorSpaceModel; enum {
    kCGColorSpaceModelUnknown = -1,
    kCGColorSpaceModelMonochrome,
    kCGColorSpaceModelRGB,
    kCGColorSpaceModelCMYK,
    kCGColorSpaceModelLab,
    kCGColorSpaceModelDeviceN,
    kCGColorSpaceModelIndexed,
    kCGColorSpaceModelPattern
};

#pragma clang assume_nonnull begin








extern "C" const CFStringRef kCGColorSpaceGenericGray
  __attribute__((availability(ios,introduced=9.0)));







extern "C" const CFStringRef kCGColorSpaceGenericRGB
  __attribute__((availability(ios,introduced=9.0)));



extern "C" const CFStringRef kCGColorSpaceGenericCMYK
  __attribute__((availability(ios,introduced=9.0)));

extern "C" const CFStringRef kCGColorSpaceDisplayP3
  __attribute__((availability(ios,introduced=9.3)));




extern "C" const CFStringRef kCGColorSpaceGenericRGBLinear
  __attribute__((availability(ios,introduced=9.0)));





extern "C" const CFStringRef kCGColorSpaceAdobeRGB1998
  __attribute__((availability(ios,introduced=9.0)));







extern "C" const CFStringRef kCGColorSpaceSRGB
  __attribute__((availability(ios,introduced=9.0)));



extern "C" const CFStringRef kCGColorSpaceGenericGrayGamma2_2
  __attribute__((availability(ios,introduced=9.0)));

extern "C" const CFStringRef kCGColorSpaceGenericXYZ
  __attribute__((availability(ios,introduced=9.0)));






extern "C" const CFStringRef kCGColorSpaceGenericLab
__attribute__((availability(ios,introduced=11.0)));

extern "C" const CFStringRef kCGColorSpaceACESCGLinear
__attribute__((availability(ios,introduced=9.0)));

extern "C" const CFStringRef kCGColorSpaceITUR_709
__attribute__((availability(ios,introduced=9.0)));

extern "C" const CFStringRef kCGColorSpaceITUR_2020
__attribute__((availability(ios,introduced=9.0)));

extern "C" const CFStringRef kCGColorSpaceROMMRGB
__attribute__((availability(ios,introduced=9.0)));

extern "C" const CFStringRef kCGColorSpaceDCIP3
__attribute__((availability(ios,introduced=9.0)));
extern "C" const CFStringRef kCGColorSpaceExtendedSRGB
__attribute__((availability(ios,introduced=10.0)));



extern "C" const CFStringRef kCGColorSpaceLinearSRGB
__attribute__((availability(ios,introduced=10.0)));



extern "C" const CFStringRef kCGColorSpaceExtendedLinearSRGB
__attribute__((availability(ios,introduced=10.0)));





extern "C" const CFStringRef kCGColorSpaceExtendedGray
__attribute__((availability(ios,introduced=10.0)));



extern "C" const CFStringRef kCGColorSpaceLinearGray
__attribute__((availability(ios,introduced=10.0)));



extern "C" const CFStringRef kCGColorSpaceExtendedLinearGray
__attribute__((availability(ios,introduced=10.0)));



extern "C" CGColorSpaceRef _Nullable CGColorSpaceCreateDeviceGray(void)
  __attribute__((availability(ios,introduced=2.0)));



extern "C" CGColorSpaceRef _Nullable CGColorSpaceCreateDeviceRGB(void)
  __attribute__((availability(ios,introduced=2.0)));



extern "C" CGColorSpaceRef _Nullable CGColorSpaceCreateDeviceCMYK(void)
  __attribute__((availability(ios,introduced=2.0)));
extern "C" CGColorSpaceRef _Nullable CGColorSpaceCreateCalibratedGray(const CGFloat
  whitePoint[_Nonnull 3], const CGFloat blackPoint[_Nullable 3], CGFloat gamma)
  __attribute__((availability(ios,introduced=2.0)));
extern "C" CGColorSpaceRef _Nullable CGColorSpaceCreateCalibratedRGB(const CGFloat
  whitePoint[_Nonnull 3], const CGFloat blackPoint[_Nullable 3],
  const CGFloat gamma[_Nullable 3], const CGFloat matrix[_Nullable 9])
  __attribute__((availability(ios,introduced=2.0)));
extern "C" CGColorSpaceRef _Nullable CGColorSpaceCreateLab(const CGFloat whitePoint[_Nonnull 3],
  const CGFloat blackPoint[_Nullable 3], const CGFloat range[_Nullable 4])
  __attribute__((availability(ios,introduced=2.0)));




extern "C" CGColorSpaceRef CGColorSpaceCreateWithICCData(CFTypeRef _Nullable data)
  __attribute__((availability(ios,introduced=10.0)));
extern "C" CGColorSpaceRef _Nullable CGColorSpaceCreateICCBased(size_t nComponents,
  const CGFloat * _Nullable range, CGDataProviderRef _Nullable profile,
  CGColorSpaceRef _Nullable alternate)
  __attribute__((availability(ios,introduced=2.0)));
extern "C" CGColorSpaceRef _Nullable CGColorSpaceCreateIndexed(CGColorSpaceRef _Nullable baseSpace,
  size_t lastIndex, const unsigned char * _Nullable colorTable)
  __attribute__((availability(ios,introduced=2.0)));






extern "C" CGColorSpaceRef _Nullable CGColorSpaceCreatePattern(CGColorSpaceRef _Nullable baseSpace)
  __attribute__((availability(ios,introduced=2.0)));




extern "C" CGColorSpaceRef _Nullable
  CGColorSpaceCreateWithPlatformColorSpace(const void * _Nullable ref)
  __attribute__((availability(ios,introduced=9.0)));




extern "C" CGColorSpaceRef _Nullable CGColorSpaceCreateWithName(CFStringRef _Nullable name)
  __attribute__((availability(ios,introduced=2.0)));




extern "C" CGColorSpaceRef _Nullable CGColorSpaceRetain(CGColorSpaceRef _Nullable space)
  __attribute__((availability(ios,introduced=2.0)));




extern "C" void CGColorSpaceRelease(CGColorSpaceRef _Nullable space)
  __attribute__((availability(ios,introduced=2.0)));
extern "C" CFStringRef _Nullable CGColorSpaceGetName(CGColorSpaceRef _Nullable space)
  __attribute__((availability(ios,introduced=11.0)));


extern "C" CFStringRef _Nullable CGColorSpaceCopyName(CGColorSpaceRef _Nullable space)
  __attribute__((availability(ios,introduced=10.0)));



extern "C" CFTypeID CGColorSpaceGetTypeID(void)
  __attribute__((availability(ios,introduced=2.0)));



extern "C" size_t CGColorSpaceGetNumberOfComponents(CGColorSpaceRef _Nullable space)
  __attribute__((availability(ios,introduced=2.0)));



extern "C" CGColorSpaceModel CGColorSpaceGetModel(CGColorSpaceRef _Nullable space)
  __attribute__((availability(ios,introduced=2.0)));





extern "C" CGColorSpaceRef _Nullable CGColorSpaceGetBaseColorSpace(CGColorSpaceRef _Nullable space)
  __attribute__((availability(ios,introduced=2.0)));





extern "C" size_t CGColorSpaceGetColorTableCount(CGColorSpaceRef _Nullable space)
  __attribute__((availability(ios,introduced=2.0)));
extern "C" void CGColorSpaceGetColorTable(CGColorSpaceRef _Nullable space,
  uint8_t * _Nullable table) __attribute__((availability(ios,introduced=2.0)));




extern "C" CFDataRef _Nullable CGColorSpaceCopyICCData(CGColorSpaceRef _Nullable space)
__attribute__((availability(ios,introduced=10.0)));



extern "C" bool CGColorSpaceIsWideGamutRGB(CGColorSpaceRef)
__attribute__((availability(ios,introduced=10.0)));




extern "C" bool CGColorSpaceSupportsOutput(CGColorSpaceRef space)
__attribute__((availability(ios,introduced=10.0)));




extern "C" CGColorSpaceRef _Nullable CGColorSpaceCreateWithICCProfile(CFDataRef _Nullable data)
  __attribute__((availability(ios,introduced=2.0,deprecated=11.0)));


extern "C" CFDataRef _Nullable CGColorSpaceCopyICCProfile(CGColorSpaceRef _Nullable space)
  __attribute__((availability(ios,introduced=2.0,deprecated=11.0)));
#pragma clang assume_nonnull end
typedef struct __attribute__((objc_bridge(id))) CGPattern *CGPatternRef;








#pragma clang assume_nonnull begin
typedef int32_t CGPatternTiling; enum {
    kCGPatternTilingNoDistortion,
    kCGPatternTilingConstantSpacingMinimalDistortion,
    kCGPatternTilingConstantSpacing
};
typedef void (*CGPatternDrawPatternCallback)(void * _Nullable info,
                                             CGContextRef _Nullable context);
typedef void (*CGPatternReleaseInfoCallback)(void * _Nullable info);

struct CGPatternCallbacks {
    unsigned int version;
    CGPatternDrawPatternCallback _Nullable drawPattern;
    CGPatternReleaseInfoCallback _Nullable releaseInfo;
};
typedef struct CGPatternCallbacks CGPatternCallbacks;



extern "C" CFTypeID CGPatternGetTypeID(void)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" CGPatternRef _Nullable CGPatternCreate(void * _Nullable info,
    CGRect bounds, CGAffineTransform matrix, CGFloat xStep, CGFloat yStep,
    CGPatternTiling tiling, bool isColored,
    const CGPatternCallbacks * _Nullable callbacks)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" CGPatternRef _Nullable CGPatternRetain(CGPatternRef _Nullable pattern)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" void CGPatternRelease(CGPatternRef _Nullable pattern)
    __attribute__((availability(ios,introduced=2.0)));
#pragma clang assume_nonnull end



#pragma clang assume_nonnull begin





extern "C" CGColorRef _Nullable CGColorCreate(CGColorSpaceRef _Nullable space,
  const CGFloat * _Nullable components)
  __attribute__((availability(ios,introduced=2.0)));



extern "C" CGColorRef CGColorCreateGenericGray(CGFloat gray, CGFloat alpha)
  __attribute__((availability(ios,unavailable)));



extern "C" CGColorRef CGColorCreateGenericRGB(CGFloat red, CGFloat green,
  CGFloat blue, CGFloat alpha) __attribute__((availability(ios,unavailable)));



extern "C" CGColorRef CGColorCreateGenericCMYK(CGFloat cyan, CGFloat magenta,
  CGFloat yellow, CGFloat black, CGFloat alpha)
  __attribute__((availability(ios,unavailable)));
extern "C" CGColorRef _Nullable CGColorGetConstantColor(CFStringRef _Nullable colorName)
  __attribute__((availability(ios,unavailable)));




extern "C" CGColorRef _Nullable CGColorCreateWithPattern(CGColorSpaceRef _Nullable space,
  CGPatternRef _Nullable pattern, const CGFloat * _Nullable components)
  __attribute__((availability(ios,introduced=2.0)));



extern "C" CGColorRef _Nullable CGColorCreateCopy(CGColorRef _Nullable color)
  __attribute__((availability(ios,introduced=2.0)));



extern "C" CGColorRef _Nullable CGColorCreateCopyWithAlpha(CGColorRef _Nullable color,
  CGFloat alpha) __attribute__((availability(ios,introduced=2.0)));



extern "C" CGColorRef _Nullable CGColorCreateCopyByMatchingToColorSpace(_Nullable CGColorSpaceRef,
  CGColorRenderingIntent intent, CGColorRef _Nullable color, _Nullable CFDictionaryRef options)
  __attribute__((availability(ios,introduced=9.0)));




extern "C" CGColorRef _Nullable CGColorRetain(CGColorRef _Nullable color)
  __attribute__((availability(ios,introduced=2.0)));




extern "C" void CGColorRelease(CGColorRef _Nullable color)
  __attribute__((availability(ios,introduced=2.0)));



extern "C" bool CGColorEqualToColor(CGColorRef _Nullable color1, CGColorRef _Nullable color2)
  __attribute__((availability(ios,introduced=2.0)));




extern "C" size_t CGColorGetNumberOfComponents(CGColorRef _Nullable color)
  __attribute__((availability(ios,introduced=2.0)));



extern "C" const CGFloat * _Nullable CGColorGetComponents(CGColorRef _Nullable color)
  __attribute__((availability(ios,introduced=2.0)));



extern "C" CGFloat CGColorGetAlpha(CGColorRef _Nullable color)
  __attribute__((availability(ios,introduced=2.0)));



extern "C" CGColorSpaceRef _Nullable CGColorGetColorSpace(CGColorRef _Nullable color)
  __attribute__((availability(ios,introduced=2.0)));




extern "C" CGPatternRef _Nullable CGColorGetPattern(CGColorRef _Nullable color)
  __attribute__((availability(ios,introduced=2.0)));



extern "C" CFTypeID CGColorGetTypeID(void)
  __attribute__((availability(ios,introduced=2.0)));





extern "C" const CFStringRef kCGColorWhite
  __attribute__((availability(ios,unavailable)));

extern "C" const CFStringRef kCGColorBlack
  __attribute__((availability(ios,unavailable)));

extern "C" const CFStringRef kCGColorClear
  __attribute__((availability(ios,unavailable)));
#pragma clang assume_nonnull end

typedef struct __attribute__((objc_bridge(id))) CGFont *CGFontRef;



typedef unsigned short CGFontIndex;



typedef CGFontIndex CGGlyph;






typedef int32_t CGFontPostScriptFormat; enum {
    kCGFontPostScriptFormatType1 = 1,
    kCGFontPostScriptFormatType3 = 3,
    kCGFontPostScriptFormatType42 = 42
};
#pragma clang assume_nonnull begin


static const CGFontIndex kCGFontIndexMax = ((1 << 16) - 2);


static const CGFontIndex kCGFontIndexInvalid = ((1 << 16) - 1);


static const CGFontIndex kCGGlyphMax = kCGFontIndexMax;



extern "C" CFTypeID CGFontGetTypeID(void)
    __attribute__((availability(ios,introduced=2.0)));





extern "C" CGFontRef _Nullable CGFontCreateWithPlatformFont(
    void * _Nullable platformFontReference)
    __attribute__((availability(ios,unavailable)));





extern "C" CGFontRef _Nullable CGFontCreateWithDataProvider(
    CGDataProviderRef _Nullable provider)
    __attribute__((availability(ios,introduced=2.0)));





extern "C" CGFontRef _Nullable CGFontCreateWithFontName(
    CFStringRef _Nullable name)
    __attribute__((availability(ios,introduced=2.0)));
extern "C" CGFontRef _Nullable CGFontCreateCopyWithVariations(
    CGFontRef _Nullable font, CFDictionaryRef _Nullable variations)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" CGFontRef _Nullable CGFontRetain(CGFontRef _Nullable font)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" void CGFontRelease(CGFontRef _Nullable font)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" size_t CGFontGetNumberOfGlyphs(CGFontRef _Nullable font)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" int CGFontGetUnitsPerEm(CGFontRef _Nullable font)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" CFStringRef _Nullable CGFontCopyPostScriptName(CGFontRef _Nullable font)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" CFStringRef _Nullable CGFontCopyFullName(CGFontRef _Nullable font)
    __attribute__((availability(ios,introduced=2.0)));





extern "C" int CGFontGetAscent(CGFontRef _Nullable font)
    __attribute__((availability(ios,introduced=2.0)));





extern "C" int CGFontGetDescent(CGFontRef _Nullable font)
    __attribute__((availability(ios,introduced=2.0)));





extern "C" int CGFontGetLeading(CGFontRef _Nullable font)
    __attribute__((availability(ios,introduced=2.0)));





extern "C" int CGFontGetCapHeight(CGFontRef _Nullable font)
    __attribute__((availability(ios,introduced=2.0)));





extern "C" int CGFontGetXHeight(CGFontRef _Nullable font)
    __attribute__((availability(ios,introduced=2.0)));





extern "C" CGRect CGFontGetFontBBox(CGFontRef _Nullable font)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" CGFloat CGFontGetItalicAngle(CGFontRef _Nullable font)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" CGFloat CGFontGetStemV(CGFontRef _Nullable font)
    __attribute__((availability(ios,introduced=2.0)));






extern "C" CFArrayRef _Nullable CGFontCopyVariationAxes(CGFontRef _Nullable font)
    __attribute__((availability(ios,introduced=2.0)));
extern "C" CFDictionaryRef _Nullable CGFontCopyVariations(CGFontRef _Nullable font)
    __attribute__((availability(ios,introduced=2.0)));






extern "C" bool CGFontGetGlyphAdvances(CGFontRef _Nullable font,
    const CGGlyph * glyphs, size_t count, int * advances)
    __attribute__((availability(ios,introduced=2.0)));







extern "C" bool CGFontGetGlyphBBoxes(CGFontRef _Nullable font,
    const CGGlyph * glyphs, size_t count, CGRect * bboxes)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" CGGlyph CGFontGetGlyphWithGlyphName(
    CGFontRef _Nullable font, CFStringRef _Nullable name)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" CFStringRef _Nullable CGFontCopyGlyphNameForGlyph(
    CGFontRef _Nullable font, CGGlyph glyph)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" bool CGFontCanCreatePostScriptSubset(CGFontRef _Nullable font,
    CGFontPostScriptFormat format)
    __attribute__((availability(ios,introduced=2.0)));






extern "C" CFDataRef _Nullable CGFontCreatePostScriptSubset(
    CGFontRef _Nullable font, CFStringRef _Nullable subsetName,
    CGFontPostScriptFormat format, const CGGlyph * _Nullable glyphs,
    size_t count, const CGGlyph encoding[_Nonnull 256])
    __attribute__((availability(ios,introduced=2.0)));




extern "C" CFDataRef _Nullable CGFontCreatePostScriptEncoding(
    CGFontRef _Nullable font, const CGGlyph encoding[_Nonnull 256])
    __attribute__((availability(ios,introduced=2.0)));





extern "C" CFArrayRef _Nullable CGFontCopyTableTags(CGFontRef _Nullable font)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" CFDataRef _Nullable CGFontCopyTableForTag(
    CGFontRef _Nullable font, uint32_t tag)
    __attribute__((availability(ios,introduced=2.0)));







extern "C" const CFStringRef kCGFontVariationAxisName
    __attribute__((availability(ios,introduced=2.0)));





extern "C" const CFStringRef kCGFontVariationAxisMinValue
    __attribute__((availability(ios,introduced=2.0)));





extern "C" const CFStringRef kCGFontVariationAxisMaxValue
    __attribute__((availability(ios,introduced=2.0)));





extern "C" const CFStringRef kCGFontVariationAxisDefaultValue
    __attribute__((availability(ios,introduced=2.0)));



typedef int32_t CGGlyphDeprecatedEnum; enum {
  CGGlyphMin __attribute__((deprecated)),
  CGGlyphMax __attribute__((deprecated))
};
#pragma clang assume_nonnull end
typedef struct __attribute__((objc_bridge(id))) CGGradient *CGGradientRef;

typedef uint32_t CGGradientDrawingOptions; enum {
  kCGGradientDrawsBeforeStartLocation = (1 << 0),
  kCGGradientDrawsAfterEndLocation = (1 << 1)
};







#pragma clang assume_nonnull begin
extern "C" CFTypeID CGGradientGetTypeID(void)
    __attribute__((availability(ios,introduced=2.0)));
extern "C" CGGradientRef _Nullable CGGradientCreateWithColorComponents(
    CGColorSpaceRef _Nullable space, const CGFloat * _Nullable components,
    const CGFloat * _Nullable locations, size_t count)
    __attribute__((availability(ios,introduced=2.0)));
extern "C" CGGradientRef _Nullable CGGradientCreateWithColors(
    CGColorSpaceRef _Nullable space, CFArrayRef _Nullable colors,
    const CGFloat * _Nullable locations)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" CGGradientRef _Nullable CGGradientRetain(
    CGGradientRef _Nullable gradient)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" void CGGradientRelease(CGGradientRef _Nullable gradient)
    __attribute__((availability(ios,introduced=2.0)));
#pragma clang assume_nonnull end
typedef struct __attribute__((objc_bridge(id))) CGImage *CGImageRef;







#pragma clang assume_nonnull begin

typedef uint32_t CGImageAlphaInfo; enum {
    kCGImageAlphaNone,
    kCGImageAlphaPremultipliedLast,
    kCGImageAlphaPremultipliedFirst,
    kCGImageAlphaLast,
    kCGImageAlphaFirst,
    kCGImageAlphaNoneSkipLast,
    kCGImageAlphaNoneSkipFirst,
    kCGImageAlphaOnly
};

typedef uint32_t CGImageByteOrderInfo; enum {
    kCGImageByteOrderMask = 0x7000,
    kCGImageByteOrderDefault = (0 << 12),
    kCGImageByteOrder16Little = (1 << 12),
    kCGImageByteOrder32Little = (2 << 12),
    kCGImageByteOrder16Big = (3 << 12),
    kCGImageByteOrder32Big = (4 << 12)
} __attribute__((availability(ios,introduced=2.0)));

typedef uint32_t CGBitmapInfo; enum {
    kCGBitmapAlphaInfoMask = 0x1F,

    kCGBitmapFloatInfoMask = 0xF00,
    kCGBitmapFloatComponents = (1 << 8),

    kCGBitmapByteOrderMask = kCGImageByteOrderMask,
    kCGBitmapByteOrderDefault = kCGImageByteOrderDefault,
    kCGBitmapByteOrder16Little = kCGImageByteOrder16Little,
    kCGBitmapByteOrder32Little = kCGImageByteOrder32Little,
    kCGBitmapByteOrder16Big = kCGImageByteOrder16Big,
    kCGBitmapByteOrder32Big = kCGImageByteOrder32Big
} __attribute__((availability(ios,introduced=2.0)));
extern "C" CFTypeID CGImageGetTypeID(void)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" CGImageRef _Nullable CGImageCreate(size_t width, size_t height,
    size_t bitsPerComponent, size_t bitsPerPixel, size_t bytesPerRow,
    CGColorSpaceRef _Nullable space, CGBitmapInfo bitmapInfo,
    CGDataProviderRef _Nullable provider,
    const CGFloat * _Nullable decode, bool shouldInterpolate,
    CGColorRenderingIntent intent)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" CGImageRef _Nullable CGImageMaskCreate(size_t width, size_t height,
    size_t bitsPerComponent, size_t bitsPerPixel, size_t bytesPerRow,
    CGDataProviderRef _Nullable provider, const CGFloat * _Nullable decode,
    bool shouldInterpolate)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" CGImageRef _Nullable CGImageCreateCopy(CGImageRef _Nullable image)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" CGImageRef _Nullable CGImageCreateWithJPEGDataProvider(
    CGDataProviderRef _Nullable source, const CGFloat * _Nullable decode,
    bool shouldInterpolate,
    CGColorRenderingIntent intent)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" CGImageRef _Nullable CGImageCreateWithPNGDataProvider(
    CGDataProviderRef _Nullable source, const CGFloat * _Nullable decode,
    bool shouldInterpolate,
    CGColorRenderingIntent intent)
    __attribute__((availability(ios,introduced=2.0)));
extern "C" CGImageRef _Nullable CGImageCreateWithImageInRect(
    CGImageRef _Nullable image, CGRect rect)
    __attribute__((availability(ios,introduced=2.0)));
extern "C" CGImageRef _Nullable CGImageCreateWithMask(
    CGImageRef _Nullable image, CGImageRef _Nullable mask)
    __attribute__((availability(ios,introduced=2.0)));
extern "C" CGImageRef _Nullable CGImageCreateWithMaskingColors(
    CGImageRef _Nullable image, const CGFloat * _Nullable components)
    __attribute__((availability(ios,introduced=2.0)));






extern "C" CGImageRef _Nullable CGImageCreateCopyWithColorSpace(
    CGImageRef _Nullable image, CGColorSpaceRef _Nullable space)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" CGImageRef _Nullable CGImageRetain(CGImageRef _Nullable image)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" void CGImageRelease(CGImageRef _Nullable image)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" bool CGImageIsMask(CGImageRef _Nullable image)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" size_t CGImageGetWidth(CGImageRef _Nullable image)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" size_t CGImageGetHeight(CGImageRef _Nullable image)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" size_t CGImageGetBitsPerComponent(CGImageRef _Nullable image)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" size_t CGImageGetBitsPerPixel(CGImageRef _Nullable image)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" size_t CGImageGetBytesPerRow(CGImageRef _Nullable image)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" CGColorSpaceRef _Nullable CGImageGetColorSpace(CGImageRef _Nullable image)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" CGImageAlphaInfo CGImageGetAlphaInfo(CGImageRef _Nullable image)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" CGDataProviderRef _Nullable CGImageGetDataProvider(CGImageRef _Nullable image)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" const CGFloat * _Nullable CGImageGetDecode(CGImageRef _Nullable image)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" bool CGImageGetShouldInterpolate(CGImageRef _Nullable image)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" CGColorRenderingIntent CGImageGetRenderingIntent(_Nullable CGImageRef image)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" CGBitmapInfo CGImageGetBitmapInfo(CGImageRef _Nullable image)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" CFStringRef _Nullable CGImageGetUTType(_Nullable CGImageRef image)
    __attribute__((availability(ios,introduced=9.0)));
#pragma clang assume_nonnull end
typedef struct __attribute__((objc_bridge(id))) CGPath *CGMutablePathRef;
typedef const struct __attribute__((objc_bridge(id))) CGPath *CGPathRef;







#pragma clang assume_nonnull begin



typedef int32_t CGLineJoin; enum {
    kCGLineJoinMiter,
    kCGLineJoinRound,
    kCGLineJoinBevel
};



typedef int32_t CGLineCap; enum {
    kCGLineCapButt,
    kCGLineCapRound,
    kCGLineCapSquare
};



extern "C" CFTypeID CGPathGetTypeID(void)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" CGMutablePathRef CGPathCreateMutable(void)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" CGPathRef _Nullable CGPathCreateCopy(CGPathRef _Nullable path)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" CGPathRef _Nullable CGPathCreateCopyByTransformingPath(
    CGPathRef _Nullable path, const CGAffineTransform * _Nullable transform)
    __attribute__((availability(ios,introduced=5.0)));



extern "C" CGMutablePathRef _Nullable CGPathCreateMutableCopy(
    CGPathRef _Nullable path)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" CGMutablePathRef _Nullable CGPathCreateMutableCopyByTransformingPath(
    CGPathRef _Nullable path, const CGAffineTransform * _Nullable transform)
    __attribute__((availability(ios,introduced=5.0)));
extern "C" CGPathRef CGPathCreateWithRect(CGRect rect,
    const CGAffineTransform * _Nullable transform)
    __attribute__((availability(ios,introduced=4.0)));
extern "C" CGPathRef CGPathCreateWithEllipseInRect(CGRect rect,
    const CGAffineTransform * _Nullable transform)
    __attribute__((availability(ios,introduced=5.0)));
extern "C" CGPathRef CGPathCreateWithRoundedRect(CGRect rect,
    CGFloat cornerWidth, CGFloat cornerHeight,
    const CGAffineTransform * _Nullable transform)
    __attribute__((availability(ios,introduced=7.0)));
extern "C" void CGPathAddRoundedRect(CGMutablePathRef _Nullable path,
    const CGAffineTransform * _Nullable transform, CGRect rect,
    CGFloat cornerWidth, CGFloat cornerHeight)
    __attribute__((availability(ios,introduced=7.0)));







extern "C" CGPathRef _Nullable CGPathCreateCopyByDashingPath(
    CGPathRef _Nullable path, const CGAffineTransform * _Nullable transform,
    CGFloat phase, const CGFloat * _Nullable lengths, size_t count)
    __attribute__((availability(ios,introduced=5.0)));







extern "C" CGPathRef _Nullable CGPathCreateCopyByStrokingPath(
    CGPathRef _Nullable path, const CGAffineTransform * _Nullable transform,
    CGFloat lineWidth, CGLineCap lineCap,
    CGLineJoin lineJoin, CGFloat miterLimit)
    __attribute__((availability(ios,introduced=5.0)));




extern "C" CGPathRef _Nullable CGPathRetain(CGPathRef _Nullable path)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" void CGPathRelease(CGPathRef _Nullable path)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" bool CGPathEqualToPath(CGPathRef _Nullable path1,
    CGPathRef _Nullable path2)
    __attribute__((availability(ios,introduced=2.0)));






extern "C" void CGPathMoveToPoint(CGMutablePathRef _Nullable path,
    const CGAffineTransform * _Nullable m, CGFloat x, CGFloat y)
    __attribute__((availability(ios,introduced=2.0)));





extern "C" void CGPathAddLineToPoint(CGMutablePathRef _Nullable path,
    const CGAffineTransform * _Nullable m, CGFloat x, CGFloat y)
    __attribute__((availability(ios,introduced=2.0)));





extern "C" void CGPathAddQuadCurveToPoint(CGMutablePathRef _Nullable path,
    const CGAffineTransform *_Nullable m, CGFloat cpx, CGFloat cpy,
    CGFloat x, CGFloat y)
    __attribute__((availability(ios,introduced=2.0)));






extern "C" void CGPathAddCurveToPoint(CGMutablePathRef _Nullable path,
    const CGAffineTransform * _Nullable m, CGFloat cp1x, CGFloat cp1y,
    CGFloat cp2x, CGFloat cp2y, CGFloat x, CGFloat y)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" void CGPathCloseSubpath(CGMutablePathRef _Nullable path)
    __attribute__((availability(ios,introduced=2.0)));






extern "C" void CGPathAddRect(CGMutablePathRef _Nullable path,
    const CGAffineTransform * _Nullable m, CGRect rect)
    __attribute__((availability(ios,introduced=2.0)));





extern "C" void CGPathAddRects(CGMutablePathRef _Nullable path,
    const CGAffineTransform * _Nullable m, const CGRect * _Nullable rects,
    size_t count)
    __attribute__((availability(ios,introduced=2.0)));





extern "C" void CGPathAddLines(CGMutablePathRef _Nullable path,
    const CGAffineTransform * _Nullable m, const CGPoint * _Nullable points,
    size_t count)
    __attribute__((availability(ios,introduced=2.0)));
extern "C" void CGPathAddEllipseInRect(CGMutablePathRef _Nullable path,
    const CGAffineTransform * _Nullable m, CGRect rect)
    __attribute__((availability(ios,introduced=2.0)));
extern "C" void CGPathAddRelativeArc(CGMutablePathRef _Nullable path,
    const CGAffineTransform * _Nullable matrix, CGFloat x, CGFloat y,
    CGFloat radius, CGFloat startAngle, CGFloat delta)
    __attribute__((availability(ios,introduced=5.0)));
extern "C" void CGPathAddArc(CGMutablePathRef _Nullable path,
    const CGAffineTransform * _Nullable m,
    CGFloat x, CGFloat y, CGFloat radius, CGFloat startAngle, CGFloat endAngle,
    bool clockwise)
    __attribute__((availability(ios,introduced=2.0)));
extern "C" void CGPathAddArcToPoint(CGMutablePathRef _Nullable path,
    const CGAffineTransform * _Nullable m, CGFloat x1, CGFloat y1,
    CGFloat x2, CGFloat y2, CGFloat radius)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" void CGPathAddPath(CGMutablePathRef _Nullable path1,
    const CGAffineTransform * _Nullable m, CGPathRef _Nullable path2)
    __attribute__((availability(ios,introduced=2.0)));





extern "C" bool CGPathIsEmpty(CGPathRef _Nullable path)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" bool CGPathIsRect(CGPathRef _Nullable path, CGRect * _Nullable rect)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" CGPoint CGPathGetCurrentPoint(CGPathRef _Nullable path)
    __attribute__((availability(ios,introduced=2.0)));






extern "C" CGRect CGPathGetBoundingBox(CGPathRef _Nullable path)
    __attribute__((availability(ios,introduced=2.0)));






extern "C" CGRect CGPathGetPathBoundingBox(CGPathRef _Nullable path)
    __attribute__((availability(ios,introduced=4.0)));
extern "C" bool CGPathContainsPoint(CGPathRef _Nullable path,
    const CGAffineTransform * _Nullable m, CGPoint point, bool eoFill)
    __attribute__((availability(ios,introduced=2.0)));



typedef int32_t CGPathElementType; enum {
  kCGPathElementMoveToPoint,
  kCGPathElementAddLineToPoint,
  kCGPathElementAddQuadCurveToPoint,
  kCGPathElementAddCurveToPoint,
  kCGPathElementCloseSubpath
};



struct CGPathElement {
  CGPathElementType type;
  CGPoint * points;
};
typedef struct CGPathElement CGPathElement;



typedef void (*CGPathApplierFunction)(void * _Nullable info,
  const CGPathElement * element);




extern "C" void CGPathApply(CGPathRef _Nullable path, void * _Nullable info,
    CGPathApplierFunction _Nullable function)
    __attribute__((availability(ios,introduced=2.0)));

typedef void (*CGPathApplyBlock)(const CGPathElement * element);

extern "C" void CGPathApplyWithBlock(CGPathRef path, CGPathApplyBlock __attribute__((noescape)) block)
    __attribute__((availability(ios,introduced=11.0)));
#pragma clang assume_nonnull end

typedef struct __attribute__((objc_bridge(id))) CGPDFDocument *CGPDFDocumentRef;




typedef struct __attribute__((objc_bridge(id))) CGPDFPage *CGPDFPageRef;



typedef struct CGPDFDictionary *CGPDFDictionaryRef;


typedef struct CGPDFArray *CGPDFArrayRef;


#pragma clang assume_nonnull begin



typedef unsigned char CGPDFBoolean;



typedef long int CGPDFInteger;



typedef CGFloat CGPDFReal;



typedef struct CGPDFObject *CGPDFObjectRef;



typedef int32_t CGPDFObjectType; enum {
  kCGPDFObjectTypeNull = 1,
  kCGPDFObjectTypeBoolean,
  kCGPDFObjectTypeInteger,
  kCGPDFObjectTypeReal,
  kCGPDFObjectTypeName,
  kCGPDFObjectTypeString,
  kCGPDFObjectTypeArray,
  kCGPDFObjectTypeDictionary,
  kCGPDFObjectTypeStream
};



extern "C" CGPDFObjectType CGPDFObjectGetType(CGPDFObjectRef _Nullable object)
    __attribute__((availability(ios,introduced=2.0)));
extern "C" bool CGPDFObjectGetValue(CGPDFObjectRef _Nullable object,
    CGPDFObjectType type, void * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));
#pragma clang assume_nonnull end







typedef struct CGPDFStream *CGPDFStreamRef;





typedef int32_t CGPDFDataFormat; enum {
    CGPDFDataFormatRaw, CGPDFDataFormatJPEGEncoded, CGPDFDataFormatJPEG2000
};







#pragma clang assume_nonnull begin



extern "C" CGPDFDictionaryRef _Nullable CGPDFStreamGetDictionary(
    CGPDFStreamRef _Nullable stream)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" CFDataRef _Nullable CGPDFStreamCopyData(
    CGPDFStreamRef _Nullable stream,
    CGPDFDataFormat * _Nullable format)
    __attribute__((availability(ios,introduced=2.0)));
#pragma clang assume_nonnull end
typedef struct CGPDFString *CGPDFStringRef;







#pragma clang assume_nonnull begin



extern "C" size_t CGPDFStringGetLength(CGPDFStringRef _Nullable string)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" const unsigned char * _Nullable CGPDFStringGetBytePtr(
    CGPDFStringRef _Nullable string)
    __attribute__((availability(ios,introduced=2.0)));





extern "C" CFStringRef _Nullable CGPDFStringCopyTextString(
    CGPDFStringRef _Nullable string)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" CFDateRef _Nullable CGPDFStringCopyDate(
    CGPDFStringRef _Nullable string)
    __attribute__((availability(ios,introduced=2.0)));
#pragma clang assume_nonnull end



#pragma clang assume_nonnull begin



extern "C" size_t CGPDFArrayGetCount(CGPDFArrayRef _Nullable array)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" bool CGPDFArrayGetObject(CGPDFArrayRef _Nullable array, size_t index,
    CGPDFObjectRef _Nullable * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" bool CGPDFArrayGetNull(CGPDFArrayRef _Nullable array, size_t index)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" bool CGPDFArrayGetBoolean(CGPDFArrayRef _Nullable array,
    size_t index, CGPDFBoolean * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" bool CGPDFArrayGetInteger(CGPDFArrayRef _Nullable array,
    size_t index, CGPDFInteger * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));





extern "C" bool CGPDFArrayGetNumber(CGPDFArrayRef _Nullable array,
    size_t index, CGPDFReal * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" bool CGPDFArrayGetName(CGPDFArrayRef _Nullable array,
    size_t index, const char * _Nullable * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" bool CGPDFArrayGetString(CGPDFArrayRef _Nullable array,
    size_t index, CGPDFStringRef _Nullable * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" bool CGPDFArrayGetArray(CGPDFArrayRef _Nullable array,
    size_t index, CGPDFArrayRef _Nullable * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" bool CGPDFArrayGetDictionary(CGPDFArrayRef _Nullable array,
    size_t index, CGPDFDictionaryRef _Nullable * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" bool CGPDFArrayGetStream(CGPDFArrayRef _Nullable array,
    size_t index, CGPDFStreamRef _Nullable * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));
#pragma clang assume_nonnull end






#pragma clang assume_nonnull begin



extern "C" size_t CGPDFDictionaryGetCount(CGPDFDictionaryRef _Nullable dict)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" bool CGPDFDictionaryGetObject(CGPDFDictionaryRef _Nullable dict,
    const char * key, CGPDFObjectRef _Nullable * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));





extern "C" bool CGPDFDictionaryGetBoolean(CGPDFDictionaryRef _Nullable dict,
    const char * key, CGPDFBoolean * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));





extern "C" bool CGPDFDictionaryGetInteger(CGPDFDictionaryRef _Nullable dict,
    const char * key, CGPDFInteger * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));





extern "C" bool CGPDFDictionaryGetNumber(CGPDFDictionaryRef _Nullable dict,
    const char * key, CGPDFReal * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" bool CGPDFDictionaryGetName(CGPDFDictionaryRef _Nullable dict,
    const char * key, const char * _Nullable * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" bool CGPDFDictionaryGetString(CGPDFDictionaryRef _Nullable dict,
    const char * key, CGPDFStringRef _Nullable * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" bool CGPDFDictionaryGetArray(CGPDFDictionaryRef _Nullable dict,
    const char * key, CGPDFArrayRef _Nullable * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));





extern "C" bool CGPDFDictionaryGetDictionary(CGPDFDictionaryRef _Nullable dict,
    const char * key, CGPDFDictionaryRef _Nullable * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" bool CGPDFDictionaryGetStream(CGPDFDictionaryRef _Nullable dict,
    const char * key, CGPDFStreamRef _Nullable * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));





typedef void (*CGPDFDictionaryApplierFunction)(const char * key,
    CGPDFObjectRef value, void * _Nullable info);





extern "C" void CGPDFDictionaryApplyFunction(CGPDFDictionaryRef _Nullable dict,
    CGPDFDictionaryApplierFunction _Nullable function, void * _Nullable info)
    __attribute__((availability(ios,introduced=2.0)));
#pragma clang assume_nonnull end



#pragma clang assume_nonnull begin

typedef int32_t CGPDFBox; enum {
  kCGPDFMediaBox = 0,
  kCGPDFCropBox = 1,
  kCGPDFBleedBox = 2,
  kCGPDFTrimBox = 3,
  kCGPDFArtBox = 4
};




extern "C" CGPDFPageRef _Nullable CGPDFPageRetain(CGPDFPageRef _Nullable page)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" void CGPDFPageRelease(CGPDFPageRef _Nullable page)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" CGPDFDocumentRef _Nullable CGPDFPageGetDocument(
    CGPDFPageRef _Nullable page)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" size_t CGPDFPageGetPageNumber(CGPDFPageRef _Nullable page)
    __attribute__((availability(ios,introduced=2.0)));






extern "C" CGRect CGPDFPageGetBoxRect(CGPDFPageRef _Nullable page, CGPDFBox box)
    __attribute__((availability(ios,introduced=2.0)));





extern "C" int CGPDFPageGetRotationAngle(CGPDFPageRef _Nullable page)
    __attribute__((availability(ios,introduced=2.0)));
extern "C" CGAffineTransform CGPDFPageGetDrawingTransform(
    CGPDFPageRef _Nullable page, CGPDFBox box, CGRect rect, int rotate,
    bool preserveAspectRatio)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" CGPDFDictionaryRef _Nullable CGPDFPageGetDictionary(
    CGPDFPageRef _Nullable page)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" CFTypeID CGPDFPageGetTypeID(void)
    __attribute__((availability(ios,introduced=2.0)));
#pragma clang assume_nonnull end




#pragma clang assume_nonnull begin
typedef uint32_t CGPDFAccessPermissions; enum {
    kCGPDFAllowsLowQualityPrinting = (1 << 0),
    kCGPDFAllowsHighQualityPrinting = (1 << 1),
    kCGPDFAllowsDocumentChanges = (1 << 2),
    kCGPDFAllowsDocumentAssembly = (1 << 3),
    kCGPDFAllowsContentCopying = (1 << 4),
    kCGPDFAllowsContentAccessibility = (1 << 5),
    kCGPDFAllowsCommenting = (1 << 6),
    kCGPDFAllowsFormFieldEntry = (1 << 7)
};
extern "C" const CFStringRef kCGPDFOutlineTitle
    __attribute__((availability(ios,introduced=11.0)));



extern "C" const CFStringRef kCGPDFOutlineChildren
    __attribute__((availability(ios,introduced=11.0)));



extern "C" const CFStringRef kCGPDFOutlineDestination
    __attribute__((availability(ios,introduced=11.0)));



extern "C" const CFStringRef kCGPDFOutlineDestinationRect
    __attribute__((availability(ios,introduced=11.0)));



extern "C" CGPDFDocumentRef _Nullable CGPDFDocumentCreateWithProvider(
    CGDataProviderRef _Nullable provider)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" CGPDFDocumentRef _Nullable CGPDFDocumentCreateWithURL(
    CFURLRef _Nullable url)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" CGPDFDocumentRef _Nullable CGPDFDocumentRetain(
    CGPDFDocumentRef _Nullable document)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" void CGPDFDocumentRelease(CGPDFDocumentRef _Nullable document)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" void CGPDFDocumentGetVersion(CGPDFDocumentRef _Nullable document,
  int * majorVersion, int * minorVersion)
    __attribute__((availability(ios,introduced=2.0)));






extern "C" bool CGPDFDocumentIsEncrypted(CGPDFDocumentRef _Nullable document)
    __attribute__((availability(ios,introduced=2.0)));





extern "C" bool CGPDFDocumentUnlockWithPassword(
    CGPDFDocumentRef _Nullable document, const char * password)
    __attribute__((availability(ios,introduced=2.0)));





extern "C" bool CGPDFDocumentIsUnlocked(CGPDFDocumentRef _Nullable document)
    __attribute__((availability(ios,introduced=2.0)));






extern "C" bool CGPDFDocumentAllowsPrinting(CGPDFDocumentRef _Nullable document)
    __attribute__((availability(ios,introduced=2.0)));






extern "C" bool CGPDFDocumentAllowsCopying(CGPDFDocumentRef _Nullable document)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" size_t CGPDFDocumentGetNumberOfPages(
    CGPDFDocumentRef _Nullable document)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" CGPDFPageRef _Nullable CGPDFDocumentGetPage(
    CGPDFDocumentRef _Nullable document, size_t pageNumber)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" CGPDFDictionaryRef _Nullable CGPDFDocumentGetCatalog(
    CGPDFDocumentRef _Nullable document)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" CGPDFDictionaryRef _Nullable CGPDFDocumentGetInfo(
    CGPDFDocumentRef _Nullable document)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" CGPDFArrayRef _Nullable CGPDFDocumentGetID(
    CGPDFDocumentRef _Nullable document)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" CFTypeID CGPDFDocumentGetTypeID(void)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" _Nullable CFDictionaryRef CGPDFDocumentGetOutline(CGPDFDocumentRef document)
    __attribute__((availability(ios,introduced=11.0)));



extern "C" CGPDFAccessPermissions CGPDFDocumentGetAccessPermissions(CGPDFDocumentRef document)
    __attribute__((availability(ios,introduced=11.0)));






extern "C" CGRect CGPDFDocumentGetMediaBox(CGPDFDocumentRef _Nullable document,
    int page)
    __attribute__((availability(ios,unavailable)));






extern "C" CGRect CGPDFDocumentGetCropBox(CGPDFDocumentRef _Nullable document,
    int page)
    __attribute__((availability(ios,unavailable)));





extern "C" CGRect CGPDFDocumentGetBleedBox(CGPDFDocumentRef _Nullable document,
    int page)
    __attribute__((availability(ios,unavailable)));





extern "C" CGRect CGPDFDocumentGetTrimBox(CGPDFDocumentRef _Nullable document,
    int page)
    __attribute__((availability(ios,unavailable)));





extern "C" CGRect CGPDFDocumentGetArtBox(CGPDFDocumentRef _Nullable document,
    int page)
    __attribute__((availability(ios,unavailable)));





extern "C" int CGPDFDocumentGetRotationAngle(CGPDFDocumentRef _Nullable document,
    int page)
    __attribute__((availability(ios,unavailable)));
#pragma clang assume_nonnull end
typedef struct __attribute__((objc_bridge(id))) CGShading *CGShadingRef;




typedef struct __attribute__((objc_bridge(id))) CGFunction *CGFunctionRef;








#pragma clang assume_nonnull begin





typedef void (*CGFunctionEvaluateCallback)(void * _Nullable info,
  const CGFloat * in, CGFloat * out);




typedef void (*CGFunctionReleaseInfoCallback)(void * _Nullable info);
struct CGFunctionCallbacks {
    unsigned int version;
    CGFunctionEvaluateCallback _Nullable evaluate;
    CGFunctionReleaseInfoCallback _Nullable releaseInfo;
};
typedef struct CGFunctionCallbacks CGFunctionCallbacks;



extern "C" CFTypeID CGFunctionGetTypeID(void)
    __attribute__((availability(ios,introduced=2.0)));
extern "C" CGFunctionRef _Nullable CGFunctionCreate(void * _Nullable info,
    size_t domainDimension, const CGFloat *_Nullable domain,
    size_t rangeDimension, const CGFloat * _Nullable range,
    const CGFunctionCallbacks * _Nullable callbacks)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" CGFunctionRef _Nullable CGFunctionRetain(
    CGFunctionRef _Nullable function)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" void CGFunctionRelease(CGFunctionRef _Nullable function)
    __attribute__((availability(ios,introduced=2.0)));
#pragma clang assume_nonnull end





#pragma clang assume_nonnull begin



extern "C" CFTypeID CGShadingGetTypeID(void)
    __attribute__((availability(ios,introduced=2.0)));
extern "C" CGShadingRef _Nullable CGShadingCreateAxial(
    CGColorSpaceRef _Nullable space, CGPoint start, CGPoint end,
    CGFunctionRef _Nullable function, bool extendStart, bool extendEnd)
    __attribute__((availability(ios,introduced=2.0)));
extern "C" CGShadingRef _Nullable CGShadingCreateRadial(
    CGColorSpaceRef _Nullable space,
    CGPoint start, CGFloat startRadius, CGPoint end, CGFloat endRadius,
    CGFunctionRef _Nullable function, bool extendStart, bool extendEnd)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" CGShadingRef _Nullable CGShadingRetain(CGShadingRef _Nullable shading)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" void CGShadingRelease(CGShadingRef _Nullable shading)
    __attribute__((availability(ios,introduced=2.0)));
#pragma clang assume_nonnull end



#pragma clang assume_nonnull begin



typedef int32_t CGPathDrawingMode; enum {
  kCGPathFill,
  kCGPathEOFill,
  kCGPathStroke,
  kCGPathFillStroke,
  kCGPathEOFillStroke
};



typedef int32_t CGTextDrawingMode; enum {
  kCGTextFill,
  kCGTextStroke,
  kCGTextFillStroke,
  kCGTextInvisible,
  kCGTextFillClip,
  kCGTextStrokeClip,
  kCGTextFillStrokeClip,
  kCGTextClip
};



typedef int32_t CGTextEncoding; enum {
  kCGEncodingFontSpecific,
  kCGEncodingMacRoman
} __attribute__((availability(ios,introduced=2.0,deprecated=7.0)));



typedef int32_t CGInterpolationQuality; enum {
  kCGInterpolationDefault = 0,
  kCGInterpolationNone = 1,
  kCGInterpolationLow = 2,
  kCGInterpolationMedium = 4,
  kCGInterpolationHigh = 3
};
typedef int32_t CGBlendMode; enum {

    kCGBlendModeNormal,
    kCGBlendModeMultiply,
    kCGBlendModeScreen,
    kCGBlendModeOverlay,
    kCGBlendModeDarken,
    kCGBlendModeLighten,
    kCGBlendModeColorDodge,
    kCGBlendModeColorBurn,
    kCGBlendModeSoftLight,
    kCGBlendModeHardLight,
    kCGBlendModeDifference,
    kCGBlendModeExclusion,
    kCGBlendModeHue,
    kCGBlendModeSaturation,
    kCGBlendModeColor,
    kCGBlendModeLuminosity,
    kCGBlendModeClear,
    kCGBlendModeCopy,
    kCGBlendModeSourceIn,
    kCGBlendModeSourceOut,
    kCGBlendModeSourceAtop,
    kCGBlendModeDestinationOver,
    kCGBlendModeDestinationIn,
    kCGBlendModeDestinationOut,
    kCGBlendModeDestinationAtop,
    kCGBlendModeXOR,
    kCGBlendModePlusDarker,
    kCGBlendModePlusLighter
};



extern "C" CFTypeID CGContextGetTypeID(void)
    __attribute__((availability(ios,introduced=2.0)));







extern "C" void CGContextSaveGState(CGContextRef _Nullable c)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" void CGContextRestoreGState(CGContextRef _Nullable c)
    __attribute__((availability(ios,introduced=2.0)));






extern "C" void CGContextScaleCTM(CGContextRef _Nullable c,
    CGFloat sx, CGFloat sy)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" void CGContextTranslateCTM(CGContextRef _Nullable c,
    CGFloat tx, CGFloat ty)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" void CGContextRotateCTM(CGContextRef _Nullable c, CGFloat angle)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" void CGContextConcatCTM(CGContextRef _Nullable c,
    CGAffineTransform transform)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" CGAffineTransform CGContextGetCTM(CGContextRef _Nullable c)
    __attribute__((availability(ios,introduced=2.0)));





extern "C" void CGContextSetLineWidth(CGContextRef _Nullable c, CGFloat width)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" void CGContextSetLineCap(CGContextRef _Nullable c, CGLineCap cap)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" void CGContextSetLineJoin(CGContextRef _Nullable c, CGLineJoin join)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" void CGContextSetMiterLimit(CGContextRef _Nullable c, CGFloat limit)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" void CGContextSetLineDash(CGContextRef _Nullable c, CGFloat phase,
    const CGFloat * _Nullable lengths, size_t count)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" void CGContextSetFlatness(CGContextRef _Nullable c, CGFloat flatness)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" void CGContextSetAlpha(CGContextRef _Nullable c, CGFloat alpha)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" void CGContextSetBlendMode(CGContextRef _Nullable c, CGBlendMode mode)
    __attribute__((availability(ios,introduced=2.0)));
extern "C" void CGContextBeginPath(CGContextRef _Nullable c)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" void CGContextMoveToPoint(CGContextRef _Nullable c,
    CGFloat x, CGFloat y)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" void CGContextAddLineToPoint(CGContextRef _Nullable c,
    CGFloat x, CGFloat y)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" void CGContextAddCurveToPoint(CGContextRef _Nullable c, CGFloat cp1x,
    CGFloat cp1y, CGFloat cp2x, CGFloat cp2y, CGFloat x, CGFloat y)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" void CGContextAddQuadCurveToPoint(CGContextRef _Nullable c,
    CGFloat cpx, CGFloat cpy, CGFloat x, CGFloat y)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" void CGContextClosePath(CGContextRef _Nullable c)
    __attribute__((availability(ios,introduced=2.0)));





extern "C" void CGContextAddRect(CGContextRef _Nullable c, CGRect rect)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" void CGContextAddRects(CGContextRef _Nullable c,
    const CGRect * _Nullable rects, size_t count)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" void CGContextAddLines(CGContextRef _Nullable c,
    const CGPoint * _Nullable points, size_t count)
    __attribute__((availability(ios,introduced=2.0)));





extern "C" void CGContextAddEllipseInRect(CGContextRef _Nullable c, CGRect rect)
    __attribute__((availability(ios,introduced=2.0)));
extern "C" void CGContextAddArc(CGContextRef _Nullable c, CGFloat x, CGFloat y,
    CGFloat radius, CGFloat startAngle, CGFloat endAngle, int clockwise)
    __attribute__((availability(ios,introduced=2.0)));






extern "C" void CGContextAddArcToPoint(CGContextRef _Nullable c,
    CGFloat x1, CGFloat y1, CGFloat x2, CGFloat y2, CGFloat radius)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" void CGContextAddPath(CGContextRef _Nullable c,
    CGPathRef _Nullable path)
    __attribute__((availability(ios,introduced=2.0)));
extern "C" void CGContextReplacePathWithStrokedPath(CGContextRef _Nullable c)
    __attribute__((availability(ios,introduced=2.0)));






extern "C" bool CGContextIsPathEmpty(CGContextRef _Nullable c)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" CGPoint CGContextGetPathCurrentPoint(CGContextRef _Nullable c)
    __attribute__((availability(ios,introduced=2.0)));





extern "C" CGRect CGContextGetPathBoundingBox(CGContextRef _Nullable c)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" CGPathRef _Nullable CGContextCopyPath(CGContextRef _Nullable c)
    __attribute__((availability(ios,introduced=2.0)));






extern "C" bool CGContextPathContainsPoint(CGContextRef _Nullable c,
    CGPoint point, CGPathDrawingMode mode)
    __attribute__((availability(ios,introduced=2.0)));





extern "C" void CGContextDrawPath(CGContextRef _Nullable c,
    CGPathDrawingMode mode)
    __attribute__((availability(ios,introduced=2.0)));






extern "C" void CGContextFillPath(CGContextRef _Nullable c)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" void CGContextEOFillPath(CGContextRef _Nullable c)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" void CGContextStrokePath(CGContextRef _Nullable c)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" void CGContextFillRect(CGContextRef _Nullable c, CGRect rect)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" void CGContextFillRects(CGContextRef _Nullable c,
    const CGRect * _Nullable rects, size_t count)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" void CGContextStrokeRect(CGContextRef _Nullable c, CGRect rect)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" void CGContextStrokeRectWithWidth(CGContextRef _Nullable c,
    CGRect rect, CGFloat width)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" void CGContextClearRect(CGContextRef _Nullable c, CGRect rect)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" void CGContextFillEllipseInRect(CGContextRef _Nullable c,
    CGRect rect)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" void CGContextStrokeEllipseInRect(CGContextRef _Nullable c,
    CGRect rect)
    __attribute__((availability(ios,introduced=2.0)));
extern "C" void CGContextStrokeLineSegments(CGContextRef _Nullable c,
    const CGPoint * _Nullable points, size_t count)
    __attribute__((availability(ios,introduced=2.0)));







extern "C" void CGContextClip(CGContextRef _Nullable c)
    __attribute__((availability(ios,introduced=2.0)));





extern "C" void CGContextEOClip(CGContextRef _Nullable c)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" void CGContextResetClip(CGContextRef c);
extern "C" void CGContextClipToMask(CGContextRef _Nullable c, CGRect rect,
    CGImageRef _Nullable mask)
    __attribute__((availability(ios,introduced=2.0)));





extern "C" CGRect CGContextGetClipBoundingBox(CGContextRef _Nullable c)
    __attribute__((availability(ios,introduced=2.0)));






extern "C" void CGContextClipToRect(CGContextRef _Nullable c, CGRect rect)
    __attribute__((availability(ios,introduced=2.0)));





extern "C" void CGContextClipToRects(CGContextRef _Nullable c,
    const CGRect * rects, size_t count)
    __attribute__((availability(ios,introduced=2.0)));





extern "C" void CGContextSetFillColorWithColor(CGContextRef _Nullable c,
    CGColorRef _Nullable color)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" void CGContextSetStrokeColorWithColor(CGContextRef _Nullable c,
    CGColorRef _Nullable color)
    __attribute__((availability(ios,introduced=2.0)));







extern "C" void CGContextSetFillColorSpace(CGContextRef _Nullable c,
    CGColorSpaceRef _Nullable space)
    __attribute__((availability(ios,introduced=2.0)));





extern "C" void CGContextSetStrokeColorSpace(CGContextRef _Nullable c,
    CGColorSpaceRef _Nullable space)
    __attribute__((availability(ios,introduced=2.0)));
extern "C" void CGContextSetFillColor(CGContextRef _Nullable c,
    const CGFloat * _Nullable components)
    __attribute__((availability(ios,introduced=2.0)));







extern "C" void CGContextSetStrokeColor(CGContextRef _Nullable c,
    const CGFloat * _Nullable components)
    __attribute__((availability(ios,introduced=2.0)));
extern "C" void CGContextSetFillPattern(CGContextRef _Nullable c,
    CGPatternRef _Nullable pattern, const CGFloat * _Nullable components)
    __attribute__((availability(ios,introduced=2.0)));
extern "C" void CGContextSetStrokePattern(CGContextRef _Nullable c,
    CGPatternRef _Nullable pattern, const CGFloat * _Nullable components)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" void CGContextSetPatternPhase(CGContextRef _Nullable c, CGSize phase)
    __attribute__((availability(ios,introduced=2.0)));






extern "C" void CGContextSetGrayFillColor(CGContextRef _Nullable c,
    CGFloat gray, CGFloat alpha)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" void CGContextSetGrayStrokeColor(CGContextRef _Nullable c,
    CGFloat gray, CGFloat alpha)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" void CGContextSetRGBFillColor(CGContextRef _Nullable c, CGFloat red,
    CGFloat green, CGFloat blue, CGFloat alpha)
    __attribute__((availability(ios,introduced=2.0)));





extern "C" void CGContextSetRGBStrokeColor(CGContextRef _Nullable c,
    CGFloat red, CGFloat green, CGFloat blue, CGFloat alpha)
    __attribute__((availability(ios,introduced=2.0)));





extern "C" void CGContextSetCMYKFillColor(CGContextRef _Nullable c,
    CGFloat cyan, CGFloat magenta, CGFloat yellow, CGFloat black, CGFloat alpha)
    __attribute__((availability(ios,introduced=2.0)));





extern "C" void CGContextSetCMYKStrokeColor(CGContextRef _Nullable c,
    CGFloat cyan, CGFloat magenta, CGFloat yellow, CGFloat black, CGFloat alpha)
    __attribute__((availability(ios,introduced=2.0)));






extern "C" void CGContextSetRenderingIntent(CGContextRef _Nullable c,
    CGColorRenderingIntent intent)
    __attribute__((availability(ios,introduced=2.0)));






extern "C" void CGContextDrawImage(CGContextRef _Nullable c, CGRect rect,
    CGImageRef _Nullable image)
    __attribute__((availability(ios,introduced=2.0)));
extern "C" void CGContextDrawTiledImage(CGContextRef _Nullable c, CGRect rect,
    CGImageRef _Nullable image)
    __attribute__((availability(ios,introduced=2.0)));







extern "C" CGInterpolationQuality
    CGContextGetInterpolationQuality(CGContextRef _Nullable c)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" void CGContextSetInterpolationQuality(CGContextRef _Nullable c,
    CGInterpolationQuality quality)
    __attribute__((availability(ios,introduced=2.0)));
extern "C" void CGContextSetShadowWithColor(CGContextRef _Nullable c,
    CGSize offset, CGFloat blur, CGColorRef _Nullable color)
    __attribute__((availability(ios,introduced=2.0)));






extern "C" void CGContextSetShadow(CGContextRef _Nullable c, CGSize offset,
    CGFloat blur)
    __attribute__((availability(ios,introduced=2.0)));
extern "C" void CGContextDrawLinearGradient(CGContextRef _Nullable c,
    CGGradientRef _Nullable gradient, CGPoint startPoint, CGPoint endPoint,
    CGGradientDrawingOptions options)
    __attribute__((availability(ios,introduced=2.0)));
extern "C" void CGContextDrawRadialGradient(CGContextRef _Nullable c,
    CGGradientRef _Nullable gradient, CGPoint startCenter, CGFloat startRadius,
    CGPoint endCenter, CGFloat endRadius, CGGradientDrawingOptions options)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" void CGContextDrawShading(CGContextRef _Nullable c,
    _Nullable CGShadingRef shading)
    __attribute__((availability(ios,introduced=2.0)));







extern "C" void CGContextSetCharacterSpacing(CGContextRef _Nullable c,
    CGFloat spacing)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" void CGContextSetTextPosition(CGContextRef _Nullable c,
    CGFloat x, CGFloat y)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" CGPoint CGContextGetTextPosition(CGContextRef _Nullable c)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" void CGContextSetTextMatrix(CGContextRef _Nullable c,
    CGAffineTransform t)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" CGAffineTransform CGContextGetTextMatrix(CGContextRef _Nullable c)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" void CGContextSetTextDrawingMode(CGContextRef _Nullable c,
    CGTextDrawingMode mode)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" void CGContextSetFont(CGContextRef _Nullable c,
    CGFontRef _Nullable font)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" void CGContextSetFontSize(CGContextRef _Nullable c, CGFloat size)
    __attribute__((availability(ios,introduced=2.0)));





extern "C" void CGContextShowGlyphsAtPositions(CGContextRef _Nullable c,
    const CGGlyph * _Nullable glyphs, const CGPoint * _Nullable Lpositions,
    size_t count)
    __attribute__((availability(ios,introduced=2.0)));





extern "C" void CGContextDrawPDFPage(CGContextRef _Nullable c,
    CGPDFPageRef _Nullable page)
    __attribute__((availability(ios,introduced=2.0)));





extern "C" void CGContextBeginPage(CGContextRef _Nullable c,
    const CGRect * _Nullable mediaBox)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" void CGContextEndPage(CGContextRef _Nullable c)
    __attribute__((availability(ios,introduced=2.0)));





extern "C" CGContextRef _Nullable CGContextRetain(CGContextRef _Nullable c)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" void CGContextRelease(CGContextRef _Nullable c)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" void CGContextFlush(CGContextRef _Nullable c)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" void CGContextSynchronize(CGContextRef _Nullable c)
    __attribute__((availability(ios,introduced=2.0)));






extern "C" void CGContextSetShouldAntialias(CGContextRef _Nullable c,
    bool shouldAntialias)
    __attribute__((availability(ios,introduced=2.0)));






extern "C" void CGContextSetAllowsAntialiasing(CGContextRef _Nullable c,
    bool allowsAntialiasing)
    __attribute__((availability(ios,introduced=2.0)));
extern "C" void CGContextSetShouldSmoothFonts(CGContextRef _Nullable c,
    bool shouldSmoothFonts)
    __attribute__((availability(ios,introduced=2.0)));







extern "C" void CGContextSetAllowsFontSmoothing(CGContextRef _Nullable c,
    bool allowsFontSmoothing)
    __attribute__((availability(ios,introduced=2.0)));






extern "C" void CGContextSetShouldSubpixelPositionFonts(
    CGContextRef _Nullable c, bool shouldSubpixelPositionFonts)
    __attribute__((availability(ios,introduced=2.0)));
extern "C" void CGContextSetAllowsFontSubpixelPositioning(
    CGContextRef _Nullable c, bool allowsFontSubpixelPositioning)
    __attribute__((availability(ios,introduced=2.0)));






extern "C" void CGContextSetShouldSubpixelQuantizeFonts(
    CGContextRef _Nullable c, bool shouldSubpixelQuantizeFonts)
    __attribute__((availability(ios,introduced=2.0)));
extern "C" void CGContextSetAllowsFontSubpixelQuantization(
    CGContextRef _Nullable c, bool allowsFontSubpixelQuantization)
    __attribute__((availability(ios,introduced=2.0)));
extern "C" void CGContextBeginTransparencyLayer(CGContextRef _Nullable c,
    CFDictionaryRef _Nullable auxiliaryInfo)
    __attribute__((availability(ios,introduced=2.0)));





extern "C" void CGContextBeginTransparencyLayerWithRect(
    CGContextRef _Nullable c, CGRect rect, CFDictionaryRef _Nullable auxInfo)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" void CGContextEndTransparencyLayer(CGContextRef _Nullable c)
    __attribute__((availability(ios,introduced=2.0)));






extern "C" CGAffineTransform
    CGContextGetUserSpaceToDeviceSpaceTransform(CGContextRef _Nullable c)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" CGPoint CGContextConvertPointToDeviceSpace(CGContextRef _Nullable c,
    CGPoint point)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" CGPoint CGContextConvertPointToUserSpace(CGContextRef _Nullable c,
    CGPoint point)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" CGSize CGContextConvertSizeToDeviceSpace(CGContextRef _Nullable c,
    CGSize size)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" CGSize CGContextConvertSizeToUserSpace(CGContextRef _Nullable c,
    CGSize size)
    __attribute__((availability(ios,introduced=2.0)));






extern "C" CGRect CGContextConvertRectToDeviceSpace(CGContextRef _Nullable c,
    CGRect rect)
    __attribute__((availability(ios,introduced=2.0)));






extern "C" CGRect CGContextConvertRectToUserSpace(CGContextRef _Nullable c,
    CGRect rect)
    __attribute__((availability(ios,introduced=2.0)));





extern "C" void CGContextSelectFont(CGContextRef _Nullable c,
    const char * _Nullable name, CGFloat size, CGTextEncoding textEncoding)
    __attribute__((availability(ios,introduced=2.0,deprecated=7.0)));




extern "C" void CGContextShowText(CGContextRef _Nullable c,
    const char * _Nullable string, size_t length)
    __attribute__((availability(ios,introduced=2.0,deprecated=7.0)));




extern "C" void CGContextShowTextAtPoint(CGContextRef _Nullable c,
    CGFloat x, CGFloat y, const char * _Nullable string, size_t length)
    __attribute__((availability(ios,introduced=2.0,deprecated=7.0)));




extern "C" void CGContextShowGlyphs(CGContextRef _Nullable c,
    const CGGlyph * _Nullable g, size_t count)
    __attribute__((availability(ios,introduced=2.0,deprecated=7.0)));




extern "C" void CGContextShowGlyphsAtPoint(CGContextRef _Nullable c, CGFloat x,
    CGFloat y, const CGGlyph * _Nullable glyphs, size_t count)
    __attribute__((availability(ios,introduced=2.0,deprecated=7.0)));




extern "C" void CGContextShowGlyphsWithAdvances(CGContextRef _Nullable c,
    const CGGlyph * _Nullable glyphs, const CGSize * _Nullable advances,
    size_t count)
    __attribute__((availability(ios,introduced=2.0,deprecated=7.0)));




extern "C" void CGContextDrawPDFDocument(CGContextRef _Nullable c, CGRect rect,
    CGPDFDocumentRef _Nullable document, int page)
    __attribute__((availability(ios,unavailable)));
#pragma clang assume_nonnull end






#pragma clang assume_nonnull begin




typedef void (*CGBitmapContextReleaseDataCallback)(void * _Nullable releaseInfo,
    void * _Nullable data);
extern "C" CGContextRef _Nullable CGBitmapContextCreateWithData(
    void * _Nullable data, size_t width, size_t height, size_t bitsPerComponent,
    size_t bytesPerRow, CGColorSpaceRef _Nullable space, uint32_t bitmapInfo,
    CGBitmapContextReleaseDataCallback _Nullable releaseCallback,
    void * _Nullable releaseInfo)
    __attribute__((availability(ios,introduced=4.0)));
extern "C" CGContextRef _Nullable CGBitmapContextCreate(void * _Nullable data,
    size_t width, size_t height, size_t bitsPerComponent, size_t bytesPerRow,
    CGColorSpaceRef _Nullable space, uint32_t bitmapInfo)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" void * _Nullable CGBitmapContextGetData(CGContextRef _Nullable context)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" size_t CGBitmapContextGetWidth(CGContextRef _Nullable context)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" size_t CGBitmapContextGetHeight(CGContextRef _Nullable context)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" size_t CGBitmapContextGetBitsPerComponent(CGContextRef _Nullable context)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" size_t CGBitmapContextGetBitsPerPixel(CGContextRef _Nullable context)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" size_t CGBitmapContextGetBytesPerRow(CGContextRef _Nullable context)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" CGColorSpaceRef _Nullable CGBitmapContextGetColorSpace(
    CGContextRef _Nullable context)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" CGImageAlphaInfo CGBitmapContextGetAlphaInfo(
    CGContextRef _Nullable context)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" CGBitmapInfo CGBitmapContextGetBitmapInfo(
    CGContextRef _Nullable context)
    __attribute__((availability(ios,introduced=2.0)));
extern "C" CGImageRef _Nullable CGBitmapContextCreateImage(
    CGContextRef _Nullable context)
    __attribute__((availability(ios,introduced=2.0)));
#pragma clang assume_nonnull end

typedef const struct __attribute__((objc_bridge(id))) CGColorConversionInfo* CGColorConversionInfoRef;



#pragma clang assume_nonnull begin

extern "C" CFTypeID CGColorConversionInfoGetTypeID(void);

typedef uint32_t CGColorConversionInfoTransformType; enum {
  kCGColorConversionTransformFromSpace = 0,
  kCGColorConversionTransformToSpace,
  kCGColorConversionTransformApplySpace
};






extern "C" CGColorConversionInfoRef _Nullable CGColorConversionInfoCreate(_Nullable CGColorSpaceRef src, _Nullable CGColorSpaceRef dst)
    __attribute__((availability(ios,introduced=10.0)));







extern "C" CGColorConversionInfoRef _Nullable CGColorConversionInfoCreateFromList
  (CFDictionaryRef _Nullable options, _Nullable CGColorSpaceRef, CGColorConversionInfoTransformType, CGColorRenderingIntent, ...)
  __attribute__((availability(ios,introduced=10.0)));

extern "C" CGColorConversionInfoRef _Nullable CGColorConversionInfoCreateFromListWithArguments
  (CFDictionaryRef _Nullable options, _Nullable CGColorSpaceRef, CGColorConversionInfoTransformType, CGColorRenderingIntent, va_list)
  __attribute__((availability(ios,introduced=11.0)));


extern "C" const CFStringRef kCGColorConversionBlackPointCompensation __attribute__((availability(ios,introduced=10.0)));

extern "C" const CFStringRef kCGColorConversionTRCSize __attribute__((availability(ios,introduced=11.0)));
#pragma clang assume_nonnull end


typedef struct __attribute__((objc_bridge(id))) CGDataConsumer *CGDataConsumerRef;






#pragma clang assume_nonnull begin




typedef size_t (*CGDataConsumerPutBytesCallback)(void * _Nullable info,
    const void * buffer, size_t count);




typedef void (*CGDataConsumerReleaseInfoCallback)(void * _Nullable info);







struct CGDataConsumerCallbacks {
    CGDataConsumerPutBytesCallback _Nullable putBytes;
    CGDataConsumerReleaseInfoCallback _Nullable releaseConsumer;
};
typedef struct CGDataConsumerCallbacks CGDataConsumerCallbacks;



extern "C" CFTypeID CGDataConsumerGetTypeID(void)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" CGDataConsumerRef _Nullable CGDataConsumerCreate(
    void * _Nullable info, const CGDataConsumerCallbacks * _Nullable cbks)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" CGDataConsumerRef _Nullable CGDataConsumerCreateWithURL(
    CFURLRef _Nullable url)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" CGDataConsumerRef _Nullable CGDataConsumerCreateWithCFData(
    CFMutableDataRef _Nullable data)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" CGDataConsumerRef _Nullable CGDataConsumerRetain(
    CGDataConsumerRef _Nullable consumer)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" void CGDataConsumerRelease(_Nullable CGDataConsumerRef consumer)
    __attribute__((availability(ios,introduced=2.0)));
#pragma clang assume_nonnull end

typedef int32_t CGError; enum {
  kCGErrorSuccess = 0,
  kCGErrorFailure = 1000,
  kCGErrorIllegalArgument = 1001,
  kCGErrorInvalidConnection = 1002,
  kCGErrorInvalidContext = 1003,
  kCGErrorCannotComplete = 1004,
  kCGErrorNotImplemented = 1006,
  kCGErrorRangeCheck = 1007,
  kCGErrorTypeCheck = 1008,
  kCGErrorInvalidOperation = 1010,
  kCGErrorNoneAvailable = 1011,
};





typedef struct __attribute__((objc_bridge(id))) CGLayer *CGLayerRef;






#pragma clang assume_nonnull begin






extern "C" CGLayerRef _Nullable CGLayerCreateWithContext(
    CGContextRef _Nullable context,
    CGSize size, CFDictionaryRef _Nullable auxiliaryInfo)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" CGLayerRef _Nullable CGLayerRetain(CGLayerRef _Nullable layer)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" void CGLayerRelease(CGLayerRef _Nullable layer)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" CGSize CGLayerGetSize(CGLayerRef _Nullable layer)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" CGContextRef _Nullable CGLayerGetContext(CGLayerRef _Nullable layer)
    __attribute__((availability(ios,introduced=2.0)));





extern "C" void CGContextDrawLayerInRect(CGContextRef _Nullable context,
    CGRect rect, CGLayerRef _Nullable layer)
    __attribute__((availability(ios,introduced=2.0)));





extern "C" void CGContextDrawLayerAtPoint(CGContextRef _Nullable context,
    CGPoint point, CGLayerRef _Nullable layer)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" CFTypeID CGLayerGetTypeID(void)
    __attribute__((availability(ios,introduced=2.0)));
#pragma clang assume_nonnull end








typedef struct CGPDFContentStream *CGPDFContentStreamRef;





#pragma clang assume_nonnull begin



extern "C" CGPDFContentStreamRef CGPDFContentStreamCreateWithPage(
  CGPDFPageRef page) __attribute__((availability(ios,introduced=2.0)));



extern "C" CGPDFContentStreamRef CGPDFContentStreamCreateWithStream(
  CGPDFStreamRef stream, CGPDFDictionaryRef streamResources,
  CGPDFContentStreamRef _Nullable parent)
  __attribute__((availability(ios,introduced=2.0)));



extern "C" CGPDFContentStreamRef CGPDFContentStreamRetain(
  CGPDFContentStreamRef cs) __attribute__((availability(ios,introduced=2.0)));



extern "C" void CGPDFContentStreamRelease(CGPDFContentStreamRef cs)
  __attribute__((availability(ios,introduced=2.0)));




extern "C" CFArrayRef _Nullable CGPDFContentStreamGetStreams(CGPDFContentStreamRef cs)
  __attribute__((availability(ios,introduced=2.0)));




extern "C" CGPDFObjectRef _Nullable CGPDFContentStreamGetResource(
  CGPDFContentStreamRef cs, const char *category, const char *name)
  __attribute__((availability(ios,introduced=2.0)));
#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin
extern "C" CGContextRef _Nullable CGPDFContextCreate(CGDataConsumerRef _Nullable consumer,
  const CGRect *_Nullable mediaBox, CFDictionaryRef _Nullable auxiliaryInfo)
  __attribute__((availability(ios,introduced=2.0)));





extern "C" CGContextRef _Nullable CGPDFContextCreateWithURL(CFURLRef _Nullable url,
  const CGRect * _Nullable mediaBox, CFDictionaryRef _Nullable auxiliaryInfo)
  __attribute__((availability(ios,introduced=2.0)));






extern "C" void CGPDFContextClose(CGContextRef _Nullable context)
  __attribute__((availability(ios,introduced=2.0)));



extern "C" void CGPDFContextBeginPage(CGContextRef _Nullable context,
  CFDictionaryRef _Nullable pageInfo)
  __attribute__((availability(ios,introduced=2.0)));



extern "C" void CGPDFContextEndPage(CGContextRef _Nullable context)
  __attribute__((availability(ios,introduced=2.0)));
extern "C" void CGPDFContextAddDocumentMetadata(CGContextRef _Nullable context,
  CFDataRef _Nullable metadata) __attribute__((availability(ios,introduced=4.0)));




extern "C" void CGPDFContextSetURLForRect(CGContextRef _Nullable context, CFURLRef url,
  CGRect rect) __attribute__((availability(ios,introduced=2.0)));




extern "C" void CGPDFContextAddDestinationAtPoint(CGContextRef _Nullable context,
  CFStringRef name, CGPoint point)
  __attribute__((availability(ios,introduced=2.0)));




extern "C" void CGPDFContextSetDestinationForRect(CGContextRef _Nullable context,
  CFStringRef name, CGRect rect)
  __attribute__((availability(ios,introduced=2.0)));







extern "C" const CFStringRef kCGPDFContextMediaBox
  __attribute__((availability(ios,introduced=2.0)));





extern "C" const CFStringRef kCGPDFContextCropBox
  __attribute__((availability(ios,introduced=2.0)));





extern "C" const CFStringRef kCGPDFContextBleedBox
  __attribute__((availability(ios,introduced=2.0)));





extern "C" const CFStringRef kCGPDFContextTrimBox
  __attribute__((availability(ios,introduced=2.0)));





extern "C" const CFStringRef kCGPDFContextArtBox
  __attribute__((availability(ios,introduced=2.0)));






extern "C" const CFStringRef kCGPDFContextTitle
  __attribute__((availability(ios,introduced=2.0)));




extern "C" const CFStringRef kCGPDFContextAuthor
  __attribute__((availability(ios,introduced=2.0)));




extern "C" const CFStringRef kCGPDFContextSubject
  __attribute__((availability(ios,introduced=2.0)));
extern "C" const CFStringRef kCGPDFContextKeywords
  __attribute__((availability(ios,introduced=2.0)));





extern "C" const CFStringRef kCGPDFContextCreator
  __attribute__((availability(ios,introduced=2.0)));
extern "C" const CFStringRef kCGPDFContextOwnerPassword
  __attribute__((availability(ios,introduced=2.0)));
extern "C" const CFStringRef kCGPDFContextUserPassword
  __attribute__((availability(ios,introduced=2.0)));
extern "C" const CFStringRef kCGPDFContextEncryptionKeyLength
  __attribute__((availability(ios,introduced=2.0)));





extern "C" const CFStringRef kCGPDFContextAllowsPrinting
  __attribute__((availability(ios,introduced=2.0)));





extern "C" const CFStringRef kCGPDFContextAllowsCopying
  __attribute__((availability(ios,introduced=2.0)));
extern "C" const CFStringRef kCGPDFContextOutputIntent
  __attribute__((availability(ios,unavailable)));







extern "C" const CFStringRef kCGPDFXOutputIntentSubtype
  __attribute__((availability(ios,unavailable)));







extern "C" const CFStringRef kCGPDFXOutputConditionIdentifier
  __attribute__((availability(ios,unavailable)));






extern "C" const CFStringRef kCGPDFXOutputCondition
  __attribute__((availability(ios,unavailable)));







extern "C" const CFStringRef kCGPDFXRegistryName
  __attribute__((availability(ios,unavailable)));







extern "C" const CFStringRef kCGPDFXInfo
  __attribute__((availability(ios,unavailable)));
extern "C" const CFStringRef kCGPDFXDestinationOutputProfile
  __attribute__((availability(ios,unavailable)));
extern "C" const CFStringRef kCGPDFContextOutputIntents
  __attribute__((availability(ios,unavailable)));




extern "C" const CFStringRef kCGPDFContextAccessPermissions
  __attribute__((availability(ios,introduced=11.0)));



extern "C" void CGPDFContextSetOutline(CGContextRef context, _Nullable CFDictionaryRef outline)
  __attribute__((availability(ios,introduced=11.0)));
#pragma clang assume_nonnull end



typedef struct CGPDFOperatorTable *CGPDFOperatorTableRef;


typedef struct CGPDFScanner *CGPDFScannerRef;






#pragma clang assume_nonnull begin



extern "C" CGPDFScannerRef CGPDFScannerCreate(
    CGPDFContentStreamRef cs,
    CGPDFOperatorTableRef _Nullable table, void * _Nullable info)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" CGPDFScannerRef _Nullable CGPDFScannerRetain(
    CGPDFScannerRef _Nullable scanner)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" void CGPDFScannerRelease(CGPDFScannerRef _Nullable scanner)
    __attribute__((availability(ios,introduced=2.0)));





extern "C" bool CGPDFScannerScan(CGPDFScannerRef _Nullable scanner)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" CGPDFContentStreamRef CGPDFScannerGetContentStream(
    CGPDFScannerRef scanner)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" bool CGPDFScannerPopObject(CGPDFScannerRef scanner,
    CGPDFObjectRef _Nullable * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" bool CGPDFScannerPopBoolean(CGPDFScannerRef scanner,
    CGPDFBoolean * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" bool CGPDFScannerPopInteger(CGPDFScannerRef scanner,
    CGPDFInteger * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" bool CGPDFScannerPopNumber(CGPDFScannerRef scanner,
    CGPDFReal * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" bool CGPDFScannerPopName(CGPDFScannerRef scanner,
    const char * _Nullable * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" bool CGPDFScannerPopString(CGPDFScannerRef scanner,
    CGPDFStringRef _Nullable * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" bool CGPDFScannerPopArray(CGPDFScannerRef scanner,
    CGPDFArrayRef _Nullable * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));





extern "C" bool CGPDFScannerPopDictionary(CGPDFScannerRef scanner,
    CGPDFDictionaryRef _Nullable * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));




extern "C" bool CGPDFScannerPopStream(CGPDFScannerRef scanner,
    CGPDFStreamRef _Nullable * _Nullable value)
    __attribute__((availability(ios,introduced=2.0)));
#pragma clang assume_nonnull end



#pragma clang assume_nonnull begin

typedef void (*CGPDFOperatorCallback)(CGPDFScannerRef scanner,
                                      void * _Nullable info);



extern "C" CGPDFOperatorTableRef _Nullable CGPDFOperatorTableCreate(void)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" CGPDFOperatorTableRef _Nullable CGPDFOperatorTableRetain(
    CGPDFOperatorTableRef _Nullable table)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" void CGPDFOperatorTableRelease(
    CGPDFOperatorTableRef _Nullable table)
    __attribute__((availability(ios,introduced=2.0)));



extern "C" void CGPDFOperatorTableSetCallback(
    CGPDFOperatorTableRef _Nullable table,
    const char * _Nullable name, CGPDFOperatorCallback _Nullable callback)
    __attribute__((availability(ios,introduced=2.0)));
#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin

typedef NSUInteger UIRectCorner; enum {
    UIRectCornerTopLeft = 1 << 0,
    UIRectCornerTopRight = 1 << 1,
    UIRectCornerBottomLeft = 1 << 2,
    UIRectCornerBottomRight = 1 << 3,
    UIRectCornerAllCorners = ~0UL
};

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_2))) 
#ifndef _REWRITER_typedef_UIBezierPath
#define _REWRITER_typedef_UIBezierPath
typedef struct objc_object UIBezierPath;
typedef struct {} _objc_exc_UIBezierPath;
#endif

struct UIBezierPath_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// + (instancetype)bezierPath;
// + (instancetype)bezierPathWithRect:(CGRect)rect;
// + (instancetype)bezierPathWithOvalInRect:(CGRect)rect;
// + (instancetype)bezierPathWithRoundedRect:(CGRect)rect cornerRadius:(CGFloat)cornerRadius;
// + (instancetype)bezierPathWithRoundedRect:(CGRect)rect byRoundingCorners:(UIRectCorner)corners cornerRadii:(CGSize)cornerRadii;
// + (instancetype)bezierPathWithArcCenter:(CGPoint)center radius:(CGFloat)radius startAngle:(CGFloat)startAngle endAngle:(CGFloat)endAngle clockwise:(BOOL)clockwise;
// + (instancetype)bezierPathWithCGPath:(CGPathRef)CGPath;

// - (instancetype)init __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));



// @property(nonatomic) CGPathRef CGPath;
// - (CGPathRef)CGPath __attribute__((objc_returns_inner_pointer)) __attribute__((cf_returns_not_retained));



// - (void)moveToPoint:(CGPoint)point;
// - (void)addLineToPoint:(CGPoint)point;
// - (void)addCurveToPoint:(CGPoint)endPoint controlPoint1:(CGPoint)controlPoint1 controlPoint2:(CGPoint)controlPoint2;
// - (void)addQuadCurveToPoint:(CGPoint)endPoint controlPoint:(CGPoint)controlPoint;
// - (void)addArcWithCenter:(CGPoint)center radius:(CGFloat)radius startAngle:(CGFloat)startAngle endAngle:(CGFloat)endAngle clockwise:(BOOL)clockwise __attribute__((availability(ios,introduced=4_0)));
// - (void)closePath;

// - (void)removeAllPoints;



// - (void)appendPath:(UIBezierPath *)bezierPath;



// - (UIBezierPath *)bezierPathByReversingPath __attribute__((availability(ios,introduced=6_0)));



// - (void)applyTransform:(CGAffineTransform)transform;



// @property(readonly,getter=isEmpty) BOOL empty;
// @property(nonatomic,readonly) CGRect bounds;
// @property(nonatomic,readonly) CGPoint currentPoint;
// - (BOOL)containsPoint:(CGPoint)point;



// @property(nonatomic) CGFloat lineWidth;
// @property(nonatomic) CGLineCap lineCapStyle;
// @property(nonatomic) CGLineJoin lineJoinStyle;
// @property(nonatomic) CGFloat miterLimit;
// @property(nonatomic) CGFloat flatness;
// @property(nonatomic) BOOL usesEvenOddFillRule;

// - (void)setLineDash:(nullable const CGFloat *)pattern count:(NSInteger)count phase:(CGFloat)phase;
// - (void)getLineDash:(nullable CGFloat *)pattern count:(nullable NSInteger *)count phase:(nullable CGFloat *)phase;



// - (void)fill;
// - (void)stroke;


// - (void)fillWithBlendMode:(CGBlendMode)blendMode alpha:(CGFloat)alpha;
// - (void)strokeWithBlendMode:(CGBlendMode)blendMode alpha:(CGFloat)alpha;

// - (void)addClip;

/* @end */

#pragma clang assume_nonnull end

























extern "C" {




extern __attribute__((visibility("default"))) CFTimeInterval CACurrentMediaTime (void)
    __attribute__((availability(ios,introduced=2.0)));

}
struct CATransform3D
{
  CGFloat m11, m12, m13, m14;
  CGFloat m21, m22, m23, m24;
  CGFloat m31, m32, m33, m34;
  CGFloat m41, m42, m43, m44;
};

typedef struct CATransform3D CATransform3D;

extern "C" {



extern __attribute__((visibility("default"))) const CATransform3D CATransform3DIdentity
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));



extern __attribute__((visibility("default"))) bool CATransform3DIsIdentity (CATransform3D t)
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));



extern __attribute__((visibility("default"))) bool CATransform3DEqualToTransform (CATransform3D a,
    CATransform3D b)
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));




extern __attribute__((visibility("default"))) CATransform3D CATransform3DMakeTranslation (CGFloat tx,
    CGFloat ty, CGFloat tz)
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));




extern __attribute__((visibility("default"))) CATransform3D CATransform3DMakeScale (CGFloat sx, CGFloat sy,
    CGFloat sz)
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));





extern __attribute__((visibility("default"))) CATransform3D CATransform3DMakeRotation (CGFloat angle, CGFloat x,
    CGFloat y, CGFloat z)
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));




extern __attribute__((visibility("default"))) CATransform3D CATransform3DTranslate (CATransform3D t, CGFloat tx,
    CGFloat ty, CGFloat tz)
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));




extern __attribute__((visibility("default"))) CATransform3D CATransform3DScale (CATransform3D t, CGFloat sx,
    CGFloat sy, CGFloat sz)
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));





extern __attribute__((visibility("default"))) CATransform3D CATransform3DRotate (CATransform3D t, CGFloat angle,
    CGFloat x, CGFloat y, CGFloat z)
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));



extern __attribute__((visibility("default"))) CATransform3D CATransform3DConcat (CATransform3D a, CATransform3D b)
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));




extern __attribute__((visibility("default"))) CATransform3D CATransform3DInvert (CATransform3D t)
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));



extern __attribute__((visibility("default"))) CATransform3D CATransform3DMakeAffineTransform (CGAffineTransform m)
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));



extern __attribute__((visibility("default"))) bool CATransform3DIsAffine (CATransform3D t)
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));





extern __attribute__((visibility("default"))) CGAffineTransform CATransform3DGetAffineTransform (CATransform3D t)
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));

}





#pragma clang assume_nonnull begin

// @interface NSValue (CATransform3DAdditions)

// + (NSValue *)valueWithCATransform3D:(CATransform3D)t;

// @property(readonly) CATransform3D CATransform3DValue;

/* @end */

#pragma clang assume_nonnull end













// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif


#pragma clang assume_nonnull begin

// @protocol CAMediaTiming




// @property CFTimeInterval beginTime;



// @property CFTimeInterval duration;





// @property float speed;






// @property CFTimeInterval timeOffset;



// @property float repeatCount;



// @property CFTimeInterval repeatDuration;




// @property BOOL autoreverses;







// @property(copy) NSString *fillMode;

/* @end */




extern __attribute__((visibility("default"))) NSString * const kCAFillModeForwards
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAFillModeBackwards
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAFillModeBoth
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAFillModeRemoved
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
#pragma clang assume_nonnull end






// @class NSEnumerator;
#ifndef _REWRITER_typedef_NSEnumerator
#define _REWRITER_typedef_NSEnumerator
typedef struct objc_object NSEnumerator;
typedef struct {} _objc_exc_NSEnumerator;
#endif

#ifndef _REWRITER_typedef_CAAnimation
#define _REWRITER_typedef_CAAnimation
typedef struct objc_object CAAnimation;
typedef struct {} _objc_exc_CAAnimation;
#endif

#ifndef _REWRITER_typedef_CALayerArray
#define _REWRITER_typedef_CALayerArray
typedef struct objc_object CALayerArray;
typedef struct {} _objc_exc_CALayerArray;
#endif

// @protocol CAAction, CALayerDelegate;

#pragma clang assume_nonnull begin



typedef unsigned int CAEdgeAntialiasingMask; enum
{
  kCALayerLeftEdge = 1U << 0,
  kCALayerRightEdge = 1U << 1,
  kCALayerBottomEdge = 1U << 2,
  kCALayerTopEdge = 1U << 3,
};



typedef NSUInteger CACornerMask; enum
{
  kCALayerMinXMinYCorner = 1U << 0,
  kCALayerMaxXMinYCorner = 1U << 1,
  kCALayerMinXMaxYCorner = 1U << 2,
  kCALayerMaxXMaxYCorner = 1U << 3,
};



__attribute__((visibility("default"))) __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)))

#ifndef _REWRITER_typedef_CALayer
#define _REWRITER_typedef_CALayer
typedef struct objc_object CALayer;
typedef struct {} _objc_exc_CALayer;
#endif

	struct _CALayerIvars {
	int32_t refcount;
	uint32_t magic;
	void * _Nonnull layer;
	} ;
struct CALayer_IMPL {
	struct NSObject_IMPL NSObject_IVARS;

	struct _CALayerIvars _attr;
};




// + (instancetype)layer;



// - (instancetype)init;







// - (instancetype)initWithLayer:(id)layer;
// - (nullable instancetype)presentationLayer;







// - (instancetype)modelLayer;
// + (nullable id)defaultValueForKey:(NSString *)key;
// + (BOOL)needsDisplayForKey:(NSString *)key;






// - (BOOL)shouldArchiveValueForKey:(NSString *)key;





// @property CGRect bounds;




// @property CGPoint position;




// @property CGFloat zPosition;






// @property CGPoint anchorPoint;




// @property CGFloat anchorPointZ;




// @property CATransform3D transform;




// - (CGAffineTransform)affineTransform;
// - (void)setAffineTransform:(CGAffineTransform)m;






// @property CGRect frame;




// @property(getter=isHidden) BOOL hidden;




// @property(getter=isDoubleSided) BOOL doubleSided;







// @property(getter=isGeometryFlipped) BOOL geometryFlipped;
// - (BOOL)contentsAreFlipped;




// @property(nullable, readonly) CALayer *superlayer;




// - (void)removeFromSuperlayer;







// @property(nullable, copy) NSArray<CALayer *> *sublayers;




// - (void)addSublayer:(CALayer *)layer;





// - (void)insertSublayer:(CALayer *)layer atIndex:(unsigned)idx;





// - (void)insertSublayer:(CALayer *)layer below:(nullable CALayer *)sibling;
// - (void)insertSublayer:(CALayer *)layer above:(nullable CALayer *)sibling;





// - (void)replaceSublayer:(CALayer *)layer with:(CALayer *)layer2;






// @property CATransform3D sublayerTransform;
// @property(nullable, strong) CALayer *mask;







// @property BOOL masksToBounds;



// - (CGPoint)convertPoint:(CGPoint)p fromLayer:(nullable CALayer *)l;
// - (CGPoint)convertPoint:(CGPoint)p toLayer:(nullable CALayer *)l;
// - (CGRect)convertRect:(CGRect)r fromLayer:(nullable CALayer *)l;
// - (CGRect)convertRect:(CGRect)r toLayer:(nullable CALayer *)l;

// - (CFTimeInterval)convertTime:(CFTimeInterval)t fromLayer:(nullable CALayer *)l;
// - (CFTimeInterval)convertTime:(CFTimeInterval)t toLayer:(nullable CALayer *)l;
// - (nullable CALayer *)hitTest:(CGPoint)p;



// - (BOOL)containsPoint:(CGPoint)p;
// @property(nullable, strong) id contents;
// @property CGRect contentsRect;
// @property(copy) NSString *contentsGravity;
// @property CGFloat contentsScale
  __attribute__((availability(macosx,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
// @property CGRect contentsCenter;





// @property(copy) NSString *contentsFormat
  __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));







// @property(copy) NSString *minificationFilter;
// @property(copy) NSString *magnificationFilter;





// @property float minificationFilterBias;





// @property(getter=isOpaque) BOOL opaque;





// - (void)display;





// - (void)setNeedsDisplay;
// - (void)setNeedsDisplayInRect:(CGRect)r;



// - (BOOL)needsDisplay;



// - (void)displayIfNeeded;




// @property BOOL needsDisplayOnBoundsChange;
// @property BOOL drawsAsynchronously
  __attribute__((availability(macosx,introduced=10.8))) __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));






// - (void)drawInContext:(CGContextRef)ctx;
// - (void)renderInContext:(CGContextRef)ctx;
// @property CAEdgeAntialiasingMask edgeAntialiasingMask;
// @property BOOL allowsEdgeAntialiasing;




// @property(nullable) CGColorRef backgroundColor;





// @property CGFloat cornerRadius;




// @property CACornerMask maskedCorners
  __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));






// @property CGFloat borderWidth;




// @property(nullable) CGColorRef borderColor;





// @property float opacity;
// @property BOOL allowsGroupOpacity;
// @property(nullable, strong) id compositingFilter;




// @property(nullable, copy) NSArray *filters;




// @property(nullable, copy) NSArray *backgroundFilters;
// @property BOOL shouldRasterize;





// @property CGFloat rasterizationScale;






// @property(nullable) CGColorRef shadowColor;




// @property float shadowOpacity;



// @property CGSize shadowOffset;



// @property CGFloat shadowRadius;
// @property(nullable) CGPathRef shadowPath;
// - (CGSize)preferredFrameSize;
// - (void)setNeedsLayout;



// - (BOOL)needsLayout;




// - (void)layoutIfNeeded;







// - (void)layoutSublayers;
// + (nullable id<CAAction>)defaultActionForKey:(NSString *)event;
// - (nullable id<CAAction>)actionForKey:(NSString *)event;




// @property(nullable, copy) NSDictionary<NSString *, id<CAAction>> *actions;
// - (void)addAnimation:(CAAnimation *)anim forKey:(nullable NSString *)key;



// - (void)removeAllAnimations;



// - (void)removeAnimationForKey:(NSString *)key;





// - (nullable NSArray<NSString *> *)animationKeys;





// - (nullable CAAnimation *)animationForKey:(NSString *)key;






// @property(nullable, copy) NSString *name;





// @property(nullable, weak) id <CALayerDelegate> delegate;
// @property(nullable, copy) NSDictionary *style;

/* @end */




// @protocol CAAction






#if 0
- (void)runActionForKey:(NSString *)event object:(id)anObject
    arguments:(nullable NSDictionary *)dict;
#endif


/* @end */




// @interface NSNull (CAActionAdditions) <CAAction>

/* @end */




// @protocol CALayerDelegate <NSObject>
/* @optional */





// - (void)displayLayer:(CALayer *)layer;



// - (void)drawLayer:(CALayer *)layer inContext:(CGContextRef)ctx;






#if 0
- (void)layerWillDraw:(CALayer *)layer
  __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
#endif






// - (void)layoutSublayersOfLayer:(CALayer *)layer;
// - (nullable id<CAAction>)actionForLayer:(CALayer *)layer forKey:(NSString *)event;

/* @end */




extern __attribute__((visibility("default"))) NSString * const kCAGravityCenter
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAGravityTop
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAGravityBottom
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAGravityLeft
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAGravityRight
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAGravityTopLeft
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAGravityTopRight
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAGravityBottomLeft
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAGravityBottomRight
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAGravityResize
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAGravityResizeAspect
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAGravityResizeAspectFill
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));



extern __attribute__((visibility("default"))) NSString * const kCAContentsFormatRGBA8Uint
  __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern __attribute__((visibility("default"))) NSString * const kCAContentsFormatRGBA16Float
  __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));
extern __attribute__((visibility("default"))) NSString * const kCAContentsFormatGray8Uint
  __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));



extern __attribute__((visibility("default"))) NSString * const kCAFilterNearest
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAFilterLinear
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));





extern __attribute__((visibility("default"))) NSString * const kCAFilterTrilinear
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));



extern __attribute__((visibility("default"))) NSString * const kCAOnOrderIn
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAOnOrderOut
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));



extern __attribute__((visibility("default"))) NSString * const kCATransition
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
#pragma clang assume_nonnull end


// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_CAMediaTimingFunction
#define _REWRITER_typedef_CAMediaTimingFunction
typedef struct objc_object CAMediaTimingFunction;
typedef struct {} _objc_exc_CAMediaTimingFunction;
#endif

#ifndef _REWRITER_typedef_CAValueFunction
#define _REWRITER_typedef_CAValueFunction
typedef struct objc_object CAValueFunction;
typedef struct {} _objc_exc_CAValueFunction;
#endif

// @protocol CAAnimationDelegate;

#pragma clang assume_nonnull begin



__attribute__((visibility("default"))) __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)))

#ifndef _REWRITER_typedef_CAAnimation
#define _REWRITER_typedef_CAAnimation
typedef struct objc_object CAAnimation;
typedef struct {} _objc_exc_CAAnimation;
#endif

struct CAAnimation_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_attr;
	uint32_t _flags;
};




// + (instancetype)animation;




// + (nullable id)defaultValueForKey:(NSString *)key;
// - (BOOL)shouldArchiveValueForKey:(NSString *)key;




// @property(nullable, strong) CAMediaTimingFunction *timingFunction;





// @property(nullable, strong) id <CAAnimationDelegate> delegate;




// @property(getter=isRemovedOnCompletion) BOOL removedOnCompletion;

/* @end */




// @protocol CAAnimationDelegate <NSObject>
/* @optional */



// - (void)animationDidStart:(CAAnimation *)anim;






// - (void)animationDidStop:(CAAnimation *)anim finished:(BOOL)flag;

/* @end */





__attribute__((visibility("default"))) __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)))

#ifndef _REWRITER_typedef_CAPropertyAnimation
#define _REWRITER_typedef_CAPropertyAnimation
typedef struct objc_object CAPropertyAnimation;
typedef struct {} _objc_exc_CAPropertyAnimation;
#endif

struct CAPropertyAnimation_IMPL {
	struct CAAnimation_IMPL CAAnimation_IVARS;
};





// + (instancetype)animationWithKeyPath:(nullable NSString *)path;



// @property(nullable, copy) NSString *keyPath;







// @property(getter=isAdditive) BOOL additive;







// @property(getter=isCumulative) BOOL cumulative;





// @property(nullable, strong) CAValueFunction *valueFunction;

/* @end */





__attribute__((visibility("default"))) __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)))

#ifndef _REWRITER_typedef_CABasicAnimation
#define _REWRITER_typedef_CABasicAnimation
typedef struct objc_object CABasicAnimation;
typedef struct {} _objc_exc_CABasicAnimation;
#endif

struct CABasicAnimation_IMPL {
	struct CAPropertyAnimation_IMPL CAPropertyAnimation_IVARS;
};

// @property(nullable, strong) id fromValue;
// @property(nullable, strong) id toValue;
// @property(nullable, strong) id byValue;

/* @end */





__attribute__((visibility("default"))) __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)))

#ifndef _REWRITER_typedef_CAKeyframeAnimation
#define _REWRITER_typedef_CAKeyframeAnimation
typedef struct objc_object CAKeyframeAnimation;
typedef struct {} _objc_exc_CAKeyframeAnimation;
#endif

struct CAKeyframeAnimation_IMPL {
	struct CAPropertyAnimation_IMPL CAPropertyAnimation_IVARS;
};





// @property(nullable, copy) NSArray *values;
// @property(nullable) CGPathRef path;







// @property(nullable, copy) NSArray<NSNumber *> *keyTimes;






// @property(nullable, copy) NSArray<CAMediaTimingFunction *> *timingFunctions;






// @property(copy) NSString *calculationMode;
// @property(nullable, copy) NSArray<NSNumber *> *tensionValues;
// @property(nullable, copy) NSArray<NSNumber *> *continuityValues;
// @property(nullable, copy) NSArray<NSNumber *> *biasValues;







// @property(nullable, copy) NSString *rotationMode;

/* @end */




extern __attribute__((visibility("default"))) NSString * const kCAAnimationLinear
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAAnimationDiscrete
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAAnimationPaced
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAAnimationCubic
    __attribute__((availability(macosx,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAAnimationCubicPaced
    __attribute__((availability(macosx,introduced=10.7))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));



extern __attribute__((visibility("default"))) NSString * const kCAAnimationRotateAuto
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAAnimationRotateAutoReverse
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));



__attribute__((visibility("default"))) __attribute__((availability(macosx,introduced=10.11))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)))

#ifndef _REWRITER_typedef_CASpringAnimation
#define _REWRITER_typedef_CASpringAnimation
typedef struct objc_object CASpringAnimation;
typedef struct {} _objc_exc_CASpringAnimation;
#endif

struct CASpringAnimation_IMPL {
	struct CABasicAnimation_IMPL CABasicAnimation_IVARS;
};





// @property CGFloat mass;




// @property CGFloat stiffness;




// @property CGFloat damping;







// @property CGFloat initialVelocity;





// @property(readonly) CFTimeInterval settlingDuration;

/* @end */




__attribute__((visibility("default"))) __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)))

#ifndef _REWRITER_typedef_CATransition
#define _REWRITER_typedef_CATransition
typedef struct objc_object CATransition;
typedef struct {} _objc_exc_CATransition;
#endif

struct CATransition_IMPL {
	struct CAAnimation_IMPL CAAnimation_IVARS;
};





// @property(copy) NSString *type;






// @property(nullable, copy) NSString *subtype;






// @property float startProgress;
// @property float endProgress;

/* @end */




extern __attribute__((visibility("default"))) NSString * const kCATransitionFade
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCATransitionMoveIn
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCATransitionPush
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCATransitionReveal
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));



extern __attribute__((visibility("default"))) NSString * const kCATransitionFromRight
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCATransitionFromLeft
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCATransitionFromTop
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCATransitionFromBottom
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));




__attribute__((visibility("default"))) __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)))

#ifndef _REWRITER_typedef_CAAnimationGroup
#define _REWRITER_typedef_CAAnimationGroup
typedef struct objc_object CAAnimationGroup;
typedef struct {} _objc_exc_CAAnimationGroup;
#endif

struct CAAnimationGroup_IMPL {
	struct CAAnimation_IMPL CAAnimation_IVARS;
};






// @property(nullable, copy) NSArray<CAAnimation *> *animations;

/* @end */

#pragma clang assume_nonnull end








// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSRunLoop
#define _REWRITER_typedef_NSRunLoop
typedef struct objc_object NSRunLoop;
typedef struct {} _objc_exc_NSRunLoop;
#endif


#pragma clang assume_nonnull begin



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3.1))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)))

#ifndef _REWRITER_typedef_CADisplayLink
#define _REWRITER_typedef_CADisplayLink
typedef struct objc_object CADisplayLink;
typedef struct {} _objc_exc_CADisplayLink;
#endif

struct CADisplayLink_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_impl;
};






// + (CADisplayLink *)displayLinkWithTarget:(id)target selector:(SEL)sel;






// - (void)addToRunLoop:(NSRunLoop *)runloop forMode:(NSRunLoopMode)mode;





// - (void)removeFromRunLoop:(NSRunLoop *)runloop forMode:(NSRunLoopMode)mode;




// - (void)invalidate;






// @property(readonly, nonatomic) CFTimeInterval timestamp;
// @property(readonly, nonatomic) CFTimeInterval duration;



// @property(readonly, nonatomic) CFTimeInterval targetTimestamp __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));




// @property(getter=isPaused, nonatomic) BOOL paused;
// @property(nonatomic) NSInteger frameInterval
  __attribute__((availability(ios,introduced=3.1))) __attribute__((availability(ios,deprecated=10.0,message="use preferredFramesPerSecond"))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(tvos,deprecated=10.0,message="use preferredFramesPerSecond"))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(watchos,deprecated=3.0,message="use preferredFramesPerSecond")));







// @property(nonatomic) NSInteger preferredFramesPerSecond __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));

/* @end */

#pragma clang assume_nonnull end













typedef NSUInteger EAGLRenderingAPI; enum
{
 kEAGLRenderingAPIOpenGLES1 = 1,
 kEAGLRenderingAPIOpenGLES2 = 2,
 kEAGLRenderingAPIOpenGLES3 = 3,
};

#pragma clang assume_nonnull begin





extern "C" __attribute__((visibility ("default"))) void EAGLGetVersion(unsigned int* major, unsigned int* minor);





__attribute__((visibility("default")))

#ifndef _REWRITER_typedef_EAGLSharegroup
#define _REWRITER_typedef_EAGLSharegroup
typedef struct objc_object EAGLSharegroup;
typedef struct {} _objc_exc_EAGLSharegroup;
#endif

struct EAGLSharegroup_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	struct _EAGLSharegroupPrivate *_private;
};


// @property (nullable, copy, nonatomic) NSString* debugLabel __attribute__((availability(ios,introduced=6_0)));

/* @end */






__attribute__((visibility("default")))

#ifndef _REWRITER_typedef_EAGLContext
#define _REWRITER_typedef_EAGLContext
typedef struct objc_object EAGLContext;
typedef struct {} _objc_exc_EAGLContext;
#endif

struct EAGLContext_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	struct _EAGLContextPrivate *_private;
};


// - (nullable instancetype) init __attribute__((unavailable));
// - (nullable instancetype) initWithAPI:(EAGLRenderingAPI) api;
// - (nullable instancetype) initWithAPI:(EAGLRenderingAPI) api sharegroup:(EAGLSharegroup*) sharegroup __attribute__((objc_designated_initializer));

// + (BOOL) setCurrentContext:(nullable EAGLContext*) context;
// + (nullable EAGLContext*) currentContext;

// @property (readonly) EAGLRenderingAPI API;
// @property (nonnull, readonly) EAGLSharegroup* sharegroup;

// @property (nullable, copy, nonatomic) NSString* debugLabel __attribute__((availability(ios,introduced=6_0)));
// @property (getter=isMultiThreaded, nonatomic) BOOL multiThreaded __attribute__((availability(ios,introduced=7_1)));
/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin
extern "C" __attribute__((visibility ("default"))) NSString * const kEAGLDrawablePropertyRetainedBacking;
extern "C" __attribute__((visibility ("default"))) NSString * const kEAGLDrawablePropertyColorFormat;




extern "C" __attribute__((visibility ("default"))) NSString * const kEAGLColorFormatRGBA8;
extern "C" __attribute__((visibility ("default"))) NSString * const kEAGLColorFormatRGB565;
extern "C" __attribute__((visibility ("default"))) NSString * const kEAGLColorFormatSRGBA8 __attribute__((availability(ios,introduced=7_0)));




// @protocol EAGLDrawable


// @property(nullable, copy) NSDictionary<NSString*, id>* drawableProperties;

/* @end */



// @interface EAGLContext (EAGLContextDrawableAdditions)


// - (BOOL)renderbufferStorage:(NSUInteger)target fromDrawable:(nullable id<EAGLDrawable>)drawable;


// - (BOOL)presentRenderbuffer:(NSUInteger)target;


// - (BOOL)presentRenderbuffer:(NSUInteger)target atTime:(CFTimeInterval)presentationTime;


// - (BOOL)presentRenderbuffer:(NSUInteger)target afterMinimumDuration:(CFTimeInterval)duration;

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin






__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)))

#ifndef _REWRITER_typedef_CAEAGLLayer
#define _REWRITER_typedef_CAEAGLLayer
typedef struct objc_object CAEAGLLayer;
typedef struct {} _objc_exc_CAEAGLLayer;
#endif

struct CAEAGLLayer_IMPL {
	struct CALayer_IMPL CALayer_IVARS;
	struct _CAEAGLNativeWindow *_win;
};







// @property BOOL presentsWithTransaction __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));




/* @end */

#pragma clang assume_nonnull end
















#pragma clang assume_nonnull begin
typedef NSUInteger MTLPixelFormat; enum
{
    MTLPixelFormatInvalid = 0,



    MTLPixelFormatA8Unorm = 1,

    MTLPixelFormatR8Unorm = 10,
    MTLPixelFormatR8Unorm_sRGB __attribute__((availability(ios,introduced=8_0))) = 11,

    MTLPixelFormatR8Snorm = 12,
    MTLPixelFormatR8Uint = 13,
    MTLPixelFormatR8Sint = 14,



    MTLPixelFormatR16Unorm = 20,
    MTLPixelFormatR16Snorm = 22,
    MTLPixelFormatR16Uint = 23,
    MTLPixelFormatR16Sint = 24,
    MTLPixelFormatR16Float = 25,

    MTLPixelFormatRG8Unorm = 30,
    MTLPixelFormatRG8Unorm_sRGB __attribute__((availability(ios,introduced=8_0))) = 31,
    MTLPixelFormatRG8Snorm = 32,
    MTLPixelFormatRG8Uint = 33,
    MTLPixelFormatRG8Sint = 34,



    MTLPixelFormatB5G6R5Unorm __attribute__((availability(ios,introduced=8_0))) = 40,
    MTLPixelFormatA1BGR5Unorm __attribute__((availability(ios,introduced=8_0))) = 41,
    MTLPixelFormatABGR4Unorm __attribute__((availability(ios,introduced=8_0))) = 42,
    MTLPixelFormatBGR5A1Unorm __attribute__((availability(ios,introduced=8_0))) = 43,



    MTLPixelFormatR32Uint = 53,
    MTLPixelFormatR32Sint = 54,
    MTLPixelFormatR32Float = 55,

    MTLPixelFormatRG16Unorm = 60,
    MTLPixelFormatRG16Snorm = 62,
    MTLPixelFormatRG16Uint = 63,
    MTLPixelFormatRG16Sint = 64,
    MTLPixelFormatRG16Float = 65,

    MTLPixelFormatRGBA8Unorm = 70,
    MTLPixelFormatRGBA8Unorm_sRGB = 71,
    MTLPixelFormatRGBA8Snorm = 72,
    MTLPixelFormatRGBA8Uint = 73,
    MTLPixelFormatRGBA8Sint = 74,

    MTLPixelFormatBGRA8Unorm = 80,
    MTLPixelFormatBGRA8Unorm_sRGB = 81,



    MTLPixelFormatRGB10A2Unorm = 90,
    MTLPixelFormatRGB10A2Uint = 91,

    MTLPixelFormatRG11B10Float = 92,
    MTLPixelFormatRGB9E5Float = 93,

    MTLPixelFormatBGR10A2Unorm __attribute__((availability(ios,introduced=11_0))) = 94,

    MTLPixelFormatBGR10_XR __attribute__((availability(ios,introduced=10_0))) = 554,
    MTLPixelFormatBGR10_XR_sRGB __attribute__((availability(ios,introduced=10_0))) = 555,



    MTLPixelFormatRG32Uint = 103,
    MTLPixelFormatRG32Sint = 104,
    MTLPixelFormatRG32Float = 105,

    MTLPixelFormatRGBA16Unorm = 110,
    MTLPixelFormatRGBA16Snorm = 112,
    MTLPixelFormatRGBA16Uint = 113,
    MTLPixelFormatRGBA16Sint = 114,
    MTLPixelFormatRGBA16Float = 115,

    MTLPixelFormatBGRA10_XR __attribute__((availability(ios,introduced=10_0))) = 552,
    MTLPixelFormatBGRA10_XR_sRGB __attribute__((availability(ios,introduced=10_0))) = 553,



    MTLPixelFormatRGBA32Uint = 123,
    MTLPixelFormatRGBA32Sint = 124,
    MTLPixelFormatRGBA32Float = 125,




    MTLPixelFormatBC1_RGBA __attribute__((availability(ios,unavailable))) = 130,
    MTLPixelFormatBC1_RGBA_sRGB __attribute__((availability(ios,unavailable))) = 131,
    MTLPixelFormatBC2_RGBA __attribute__((availability(ios,unavailable))) = 132,
    MTLPixelFormatBC2_RGBA_sRGB __attribute__((availability(ios,unavailable))) = 133,
    MTLPixelFormatBC3_RGBA __attribute__((availability(ios,unavailable))) = 134,
    MTLPixelFormatBC3_RGBA_sRGB __attribute__((availability(ios,unavailable))) = 135,


    MTLPixelFormatBC4_RUnorm __attribute__((availability(ios,unavailable))) = 140,
    MTLPixelFormatBC4_RSnorm __attribute__((availability(ios,unavailable))) = 141,
    MTLPixelFormatBC5_RGUnorm __attribute__((availability(ios,unavailable))) = 142,
    MTLPixelFormatBC5_RGSnorm __attribute__((availability(ios,unavailable))) = 143,


    MTLPixelFormatBC6H_RGBFloat __attribute__((availability(ios,unavailable))) = 150,
    MTLPixelFormatBC6H_RGBUfloat __attribute__((availability(ios,unavailable))) = 151,
    MTLPixelFormatBC7_RGBAUnorm __attribute__((availability(ios,unavailable))) = 152,
    MTLPixelFormatBC7_RGBAUnorm_sRGB __attribute__((availability(ios,unavailable))) = 153,


    MTLPixelFormatPVRTC_RGB_2BPP __attribute__((availability(ios,introduced=8_0))) = 160,
    MTLPixelFormatPVRTC_RGB_2BPP_sRGB __attribute__((availability(ios,introduced=8_0))) = 161,
    MTLPixelFormatPVRTC_RGB_4BPP __attribute__((availability(ios,introduced=8_0))) = 162,
    MTLPixelFormatPVRTC_RGB_4BPP_sRGB __attribute__((availability(ios,introduced=8_0))) = 163,
    MTLPixelFormatPVRTC_RGBA_2BPP __attribute__((availability(ios,introduced=8_0))) = 164,
    MTLPixelFormatPVRTC_RGBA_2BPP_sRGB __attribute__((availability(ios,introduced=8_0))) = 165,
    MTLPixelFormatPVRTC_RGBA_4BPP __attribute__((availability(ios,introduced=8_0))) = 166,
    MTLPixelFormatPVRTC_RGBA_4BPP_sRGB __attribute__((availability(ios,introduced=8_0))) = 167,


    MTLPixelFormatEAC_R11Unorm __attribute__((availability(ios,introduced=8_0))) = 170,
    MTLPixelFormatEAC_R11Snorm __attribute__((availability(ios,introduced=8_0))) = 172,
    MTLPixelFormatEAC_RG11Unorm __attribute__((availability(ios,introduced=8_0))) = 174,
    MTLPixelFormatEAC_RG11Snorm __attribute__((availability(ios,introduced=8_0))) = 176,
    MTLPixelFormatEAC_RGBA8 __attribute__((availability(ios,introduced=8_0))) = 178,
    MTLPixelFormatEAC_RGBA8_sRGB __attribute__((availability(ios,introduced=8_0))) = 179,

    MTLPixelFormatETC2_RGB8 __attribute__((availability(ios,introduced=8_0))) = 180,
    MTLPixelFormatETC2_RGB8_sRGB __attribute__((availability(ios,introduced=8_0))) = 181,
    MTLPixelFormatETC2_RGB8A1 __attribute__((availability(ios,introduced=8_0))) = 182,
    MTLPixelFormatETC2_RGB8A1_sRGB __attribute__((availability(ios,introduced=8_0))) = 183,


    MTLPixelFormatASTC_4x4_sRGB __attribute__((availability(ios,introduced=8_0))) = 186,
    MTLPixelFormatASTC_5x4_sRGB __attribute__((availability(ios,introduced=8_0))) = 187,
    MTLPixelFormatASTC_5x5_sRGB __attribute__((availability(ios,introduced=8_0))) = 188,
    MTLPixelFormatASTC_6x5_sRGB __attribute__((availability(ios,introduced=8_0))) = 189,
    MTLPixelFormatASTC_6x6_sRGB __attribute__((availability(ios,introduced=8_0))) = 190,
    MTLPixelFormatASTC_8x5_sRGB __attribute__((availability(ios,introduced=8_0))) = 192,
    MTLPixelFormatASTC_8x6_sRGB __attribute__((availability(ios,introduced=8_0))) = 193,
    MTLPixelFormatASTC_8x8_sRGB __attribute__((availability(ios,introduced=8_0))) = 194,
    MTLPixelFormatASTC_10x5_sRGB __attribute__((availability(ios,introduced=8_0))) = 195,
    MTLPixelFormatASTC_10x6_sRGB __attribute__((availability(ios,introduced=8_0))) = 196,
    MTLPixelFormatASTC_10x8_sRGB __attribute__((availability(ios,introduced=8_0))) = 197,
    MTLPixelFormatASTC_10x10_sRGB __attribute__((availability(ios,introduced=8_0))) = 198,
    MTLPixelFormatASTC_12x10_sRGB __attribute__((availability(ios,introduced=8_0))) = 199,
    MTLPixelFormatASTC_12x12_sRGB __attribute__((availability(ios,introduced=8_0))) = 200,

    MTLPixelFormatASTC_4x4_LDR __attribute__((availability(ios,introduced=8_0))) = 204,
    MTLPixelFormatASTC_5x4_LDR __attribute__((availability(ios,introduced=8_0))) = 205,
    MTLPixelFormatASTC_5x5_LDR __attribute__((availability(ios,introduced=8_0))) = 206,
    MTLPixelFormatASTC_6x5_LDR __attribute__((availability(ios,introduced=8_0))) = 207,
    MTLPixelFormatASTC_6x6_LDR __attribute__((availability(ios,introduced=8_0))) = 208,
    MTLPixelFormatASTC_8x5_LDR __attribute__((availability(ios,introduced=8_0))) = 210,
    MTLPixelFormatASTC_8x6_LDR __attribute__((availability(ios,introduced=8_0))) = 211,
    MTLPixelFormatASTC_8x8_LDR __attribute__((availability(ios,introduced=8_0))) = 212,
    MTLPixelFormatASTC_10x5_LDR __attribute__((availability(ios,introduced=8_0))) = 213,
    MTLPixelFormatASTC_10x6_LDR __attribute__((availability(ios,introduced=8_0))) = 214,
    MTLPixelFormatASTC_10x8_LDR __attribute__((availability(ios,introduced=8_0))) = 215,
    MTLPixelFormatASTC_10x10_LDR __attribute__((availability(ios,introduced=8_0))) = 216,
    MTLPixelFormatASTC_12x10_LDR __attribute__((availability(ios,introduced=8_0))) = 217,
    MTLPixelFormatASTC_12x12_LDR __attribute__((availability(ios,introduced=8_0))) = 218,






    MTLPixelFormatGBGR422 = 240,






    MTLPixelFormatBGRG422 = 241,



    MTLPixelFormatDepth16Unorm __attribute__((availability(ios,unavailable))) = 250,
    MTLPixelFormatDepth32Float = 252,



    MTLPixelFormatStencil8 = 253,



    MTLPixelFormatDepth24Unorm_Stencil8 __attribute__((availability(ios,unavailable))) = 255,
    MTLPixelFormatDepth32Float_Stencil8 __attribute__((availability(ios,introduced=9_0))) = 260,

    MTLPixelFormatX32_Stencil8 __attribute__((availability(ios,introduced=10_0))) = 261,
    MTLPixelFormatX24_Stencil8 __attribute__((availability(ios,unavailable))) = 262,

} __attribute__((availability(ios,introduced=8_0)));
#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin
// @protocol MTLDrawable;






typedef void (*MTLDrawablePresentedHandler)(id/*<MTLDrawable>*/);





__attribute__((availability(ios,introduced=8_0)))
// @protocol MTLDrawable <NSObject>


// - (void)present;


// - (void)presentAtTime:(CFTimeInterval)presentationTime;






// - (void)presentAfterMinimumDuration:(CFTimeInterval)duration __attribute__((availability(ios,introduced=10_3)));





// - (void)addPresentedHandler:(MTLDrawablePresentedHandler)block __attribute__((availability(ios,introduced=10_3)));






// @property(nonatomic, readonly) CFTimeInterval presentedTime __attribute__((availability(ios,introduced=10_3)));






// @property (nonatomic, readonly) NSUInteger drawableID __attribute__((availability(ios,introduced=10_3)));

/* @end */

#pragma clang assume_nonnull end

// @protocol MTLDevice;
// @protocol MTLTexture;
// @protocol MTLDrawable;

// @class CAMetalLayer;
#ifndef _REWRITER_typedef_CAMetalLayer
#define _REWRITER_typedef_CAMetalLayer
typedef struct objc_object CAMetalLayer;
typedef struct {} _objc_exc_CAMetalLayer;
#endif


#pragma clang assume_nonnull begin
// @protocol CAMetalDrawable <MTLDrawable>




// @property(readonly) id <MTLTexture> texture;



// @property(readonly) CAMetalLayer *layer;

/* @end */





__attribute__((visibility("default"))) __attribute__((availability(macosx,introduced=10.11))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)))

#ifndef _REWRITER_typedef_CAMetalLayer
#define _REWRITER_typedef_CAMetalLayer
typedef struct objc_object CAMetalLayer;
typedef struct {} _objc_exc_CAMetalLayer;
#endif

struct CAMetalLayer_IMPL {
	struct CALayer_IMPL CALayer_IVARS;
	struct _CAMetalLayerPrivate *_priv;
};








// @property(nullable, retain) id <MTLDevice> device;





// @property MTLPixelFormat pixelFormat;
// @property BOOL framebufferOnly;





// @property CGSize drawableSize;
// - (nullable id <CAMetalDrawable>)nextDrawable;




// @property NSUInteger maximumDrawableCount __attribute__((availability(macosx,introduced=10.13.2))) __attribute__((availability(ios,introduced=11.2))) __attribute__((availability(tvos,introduced=11.2))) __attribute__((availability(watchos,introduced=4.2)));






// @property BOOL presentsWithTransaction;
// @property BOOL allowsNextDrawableTimeout __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));

/* @end */

#pragma clang assume_nonnull end







#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)))

#ifndef _REWRITER_typedef_CAEmitterCell
#define _REWRITER_typedef_CAEmitterCell
typedef struct objc_object CAEmitterCell;
typedef struct {} _objc_exc_CAEmitterCell;
#endif

struct CAEmitterCell_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_attr[2];
	void *_state;
	uint32_t _flags;
};


// + (instancetype)emitterCell;




// + (nullable id)defaultValueForKey:(NSString *)key;
// - (BOOL)shouldArchiveValueForKey:(NSString *)key;



// @property(nullable, copy) NSString *name;



// @property(getter=isEnabled) BOOL enabled;




// @property float birthRate;





// @property float lifetime;
// @property float lifetimeRange;
// @property CGFloat emissionLatitude;
// @property CGFloat emissionLongitude;





// @property CGFloat emissionRange;




// @property CGFloat velocity;
// @property CGFloat velocityRange;




// @property CGFloat xAcceleration;
// @property CGFloat yAcceleration;
// @property CGFloat zAcceleration;





// @property CGFloat scale;
// @property CGFloat scaleRange;
// @property CGFloat scaleSpeed;




// @property CGFloat spin;
// @property CGFloat spinRange;





// @property(nullable) CGColorRef color;

// @property float redRange;
// @property float greenRange;
// @property float blueRange;
// @property float alphaRange;





// @property float redSpeed;
// @property float greenSpeed;
// @property float blueSpeed;
// @property float alphaSpeed;




// @property(nullable, strong) id contents;





// @property CGRect contentsRect;




// @property CGFloat contentsScale;




// @property(copy) NSString *minificationFilter;
// @property(copy) NSString *magnificationFilter;
// @property float minificationFilterBias;







// @property(nullable, copy) NSArray<CAEmitterCell *> *emitterCells;



// @property(nullable, copy) NSDictionary *style;

/* @end */

#pragma clang assume_nonnull end
// @class CAEmitterCell;
#ifndef _REWRITER_typedef_CAEmitterCell
#define _REWRITER_typedef_CAEmitterCell
typedef struct objc_object CAEmitterCell;
typedef struct {} _objc_exc_CAEmitterCell;
#endif


#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)))

#ifndef _REWRITER_typedef_CAEmitterLayer
#define _REWRITER_typedef_CAEmitterLayer
typedef struct objc_object CAEmitterLayer;
typedef struct {} _objc_exc_CAEmitterLayer;
#endif

struct CAEmitterLayer_IMPL {
	struct CALayer_IMPL CALayer_IVARS;
};





// @property(nullable, copy) NSArray<CAEmitterCell *> *emitterCells;





// @property float birthRate;




// @property float lifetime;



// @property CGPoint emitterPosition;
// @property CGFloat emitterZPosition;





// @property CGSize emitterSize;
// @property CGFloat emitterDepth;





// @property(copy) NSString *emitterShape;





// @property(copy) NSString *emitterMode;







// @property(copy) NSString *renderMode;







// @property BOOL preservesDepth;




// @property float velocity;



// @property float scale;



// @property float spin;






// @property unsigned int seed;

/* @end */




extern __attribute__((visibility("default"))) NSString * const kCAEmitterLayerPoint
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAEmitterLayerLine
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAEmitterLayerRectangle
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAEmitterLayerCuboid
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAEmitterLayerCircle
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAEmitterLayerSphere
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));



extern __attribute__((visibility("default"))) NSString * const kCAEmitterLayerPoints
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAEmitterLayerOutline
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAEmitterLayerSurface
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAEmitterLayerVolume
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));



extern __attribute__((visibility("default"))) NSString * const kCAEmitterLayerUnordered
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAEmitterLayerOldestFirst
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAEmitterLayerOldestLast
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAEmitterLayerBackToFront
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAEmitterLayerAdditive
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)))

#ifndef _REWRITER_typedef_CAGradientLayer
#define _REWRITER_typedef_CAGradientLayer
typedef struct objc_object CAGradientLayer;
typedef struct {} _objc_exc_CAGradientLayer;
#endif

struct CAGradientLayer_IMPL {
	struct CALayer_IMPL CALayer_IVARS;
};





// @property(nullable, copy) NSArray *colors;
// @property(nullable, copy) NSArray<NSNumber *> *locations;
// @property CGPoint startPoint;
// @property CGPoint endPoint;




// @property(copy) NSString *type;

/* @end */




extern __attribute__((visibility("default"))) NSString * const kCAGradientLayerAxial
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
#pragma clang assume_nonnull end










// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif


#pragma clang assume_nonnull begin







__attribute__((visibility("default"))) __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)))

#ifndef _REWRITER_typedef_CAMediaTimingFunction
#define _REWRITER_typedef_CAMediaTimingFunction
typedef struct objc_object CAMediaTimingFunction;
typedef struct {} _objc_exc_CAMediaTimingFunction;
#endif

struct CAMediaTimingFunction_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	struct CAMediaTimingFunctionPrivate *_priv;
};







// + (instancetype)functionWithName:(NSString *)name;






// + (instancetype)functionWithControlPoints:(float)c1x :(float)c1y :(float)c2x :(float)c2y;

// - (instancetype)initWithControlPoints:(float)c1x :(float)c1y :(float)c2x :(float)c2y;



// - (void)getControlPointAtIndex:(size_t)idx values:(float[_Nonnull 2])ptr;

/* @end */




extern __attribute__((visibility("default"))) NSString * const kCAMediaTimingFunctionLinear
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAMediaTimingFunctionEaseIn
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAMediaTimingFunctionEaseOut
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAMediaTimingFunctionEaseInEaseOut
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAMediaTimingFunctionDefault
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
#pragma clang assume_nonnull end







#pragma clang assume_nonnull begin
__attribute__((visibility("default"))) __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)))

#ifndef _REWRITER_typedef_CAReplicatorLayer
#define _REWRITER_typedef_CAReplicatorLayer
typedef struct objc_object CAReplicatorLayer;
typedef struct {} _objc_exc_CAReplicatorLayer;
#endif

struct CAReplicatorLayer_IMPL {
	struct CALayer_IMPL CALayer_IVARS;
};





// @property NSInteger instanceCount;






// @property BOOL preservesDepth;




// @property CFTimeInterval instanceDelay;






// @property CATransform3D instanceTransform;




// @property(nullable) CGColorRef instanceColor;





// @property float instanceRedOffset;
// @property float instanceGreenOffset;
// @property float instanceBlueOffset;
// @property float instanceAlphaOffset;

/* @end */

#pragma clang assume_nonnull end







#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)))

#ifndef _REWRITER_typedef_CAScrollLayer
#define _REWRITER_typedef_CAScrollLayer
typedef struct objc_object CAScrollLayer;
typedef struct {} _objc_exc_CAScrollLayer;
#endif

struct CAScrollLayer_IMPL {
	struct CALayer_IMPL CALayer_IVARS;
};




// - (void)scrollToPoint:(CGPoint)p;



// - (void)scrollToRect:(CGRect)r;




// @property(copy) NSString *scrollMode;

/* @end */


// @interface CALayer (CALayerScrolling)






// - (void)scrollPoint:(CGPoint)p;

// - (void)scrollRectToVisible:(CGRect)r;





// @property(readonly) CGRect visibleRect;

/* @end */




extern __attribute__((visibility("default"))) NSString * const kCAScrollNone
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAScrollVertically
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAScrollHorizontally
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAScrollBoth
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
#pragma clang assume_nonnull end







#pragma clang assume_nonnull begin
__attribute__((visibility("default"))) __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)))

#ifndef _REWRITER_typedef_CAShapeLayer
#define _REWRITER_typedef_CAShapeLayer
typedef struct objc_object CAShapeLayer;
typedef struct {} _objc_exc_CAShapeLayer;
#endif

struct CAShapeLayer_IMPL {
	struct CALayer_IMPL CALayer_IVARS;
};

// @property(nullable) CGPathRef path;




// @property(nullable) CGColorRef fillColor;




// @property(copy) NSString *fillRule;




// @property(nullable) CGColorRef strokeColor;
// @property CGFloat strokeStart;
// @property CGFloat strokeEnd;




// @property CGFloat lineWidth;




// @property CGFloat miterLimit;




// @property(copy) NSString *lineCap;




// @property(copy) NSString *lineJoin;




// @property CGFloat lineDashPhase;




// @property(nullable, copy) NSArray<NSNumber *> *lineDashPattern;

/* @end */




extern __attribute__((visibility("default"))) NSString *const kCAFillRuleNonZero
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString *const kCAFillRuleEvenOdd
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));



extern __attribute__((visibility("default"))) NSString *const kCALineJoinMiter
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString *const kCALineJoinRound
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString *const kCALineJoinBevel
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));



extern __attribute__((visibility("default"))) NSString *const kCALineCapButt
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString *const kCALineCapRound
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString *const kCALineCapSquare
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)))

#ifndef _REWRITER_typedef_CATextLayer
#define _REWRITER_typedef_CATextLayer
typedef struct objc_object CATextLayer;
typedef struct {} _objc_exc_CATextLayer;
#endif

struct CATextLayer_IMPL {
	struct CALayer_IMPL CALayer_IVARS;
	struct CATextLayerPrivate *_state;
};





// @property(nullable, copy) id string;





// @property(nullable) CFTypeRef font;




// @property CGFloat fontSize;





// @property(nullable) CGColorRef foregroundColor;




// @property(getter=isWrapped) BOOL wrapped;





// @property(copy) NSString *truncationMode;





// @property(copy) NSString *alignmentMode;




// @property BOOL allowsFontSubpixelQuantization;

/* @end */




extern __attribute__((visibility("default"))) NSString * const kCATruncationNone
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=3.2))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCATruncationStart
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=3.2))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCATruncationEnd
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=3.2))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCATruncationMiddle
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=3.2))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));



extern __attribute__((visibility("default"))) NSString * const kCAAlignmentNatural
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=3.2))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAAlignmentLeft
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=3.2))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAAlignmentRight
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=3.2))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAAlignmentCenter
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=3.2))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAAlignmentJustified
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=3.2))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)))

#ifndef _REWRITER_typedef_CATiledLayer
#define _REWRITER_typedef_CATiledLayer
typedef struct objc_object CATiledLayer;
typedef struct {} _objc_exc_CATiledLayer;
#endif

struct CATiledLayer_IMPL {
	struct CALayer_IMPL CALayer_IVARS;
};






// + (CFTimeInterval)fadeDuration;







// @property size_t levelsOfDetail;







// @property size_t levelsOfDetailBias;






// @property CGSize tileSize;

/* @end */

#pragma clang assume_nonnull end
// @class CAMediaTimingFunction;
#ifndef _REWRITER_typedef_CAMediaTimingFunction
#define _REWRITER_typedef_CAMediaTimingFunction
typedef struct objc_object CAMediaTimingFunction;
typedef struct {} _objc_exc_CAMediaTimingFunction;
#endif


#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)))

#ifndef _REWRITER_typedef_CATransaction
#define _REWRITER_typedef_CATransaction
typedef struct objc_object CATransaction;
typedef struct {} _objc_exc_CATransaction;
#endif

struct CATransaction_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};




// + (void)begin;




// + (void)commit;




// + (void)flush;






// + (void)lock;
// + (void)unlock;





// + (CFTimeInterval)animationDuration;
// + (void)setAnimationDuration:(CFTimeInterval)dur;






// + (nullable CAMediaTimingFunction *)animationTimingFunction;
// + (void)setAnimationTimingFunction:(nullable CAMediaTimingFunction *)function;






// + (BOOL)disableActions;
// + (void)setDisableActions:(BOOL)flag;
// + (nullable void (^)(void))completionBlock;
// + (void)setCompletionBlock:(nullable void (^)(void))block;
// + (nullable id)valueForKey:(NSString *)key;
// + (void)setValue:(nullable id)anObject forKey:(NSString *)key;

/* @end */




extern __attribute__((visibility("default"))) NSString * const kCATransactionAnimationDuration
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCATransactionDisableActions
    __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCATransactionAnimationTimingFunction
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCATransactionCompletionBlock
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
#pragma clang assume_nonnull end








#pragma clang assume_nonnull begin
__attribute__((visibility("default"))) __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)))

#ifndef _REWRITER_typedef_CATransformLayer
#define _REWRITER_typedef_CATransformLayer
typedef struct objc_object CATransformLayer;
typedef struct {} _objc_exc_CATransformLayer;
#endif

struct CATransformLayer_IMPL {
	struct CALayer_IMPL CALayer_IVARS;
};

/* @end */

#pragma clang assume_nonnull end








#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)))

#ifndef _REWRITER_typedef_CAValueFunction
#define _REWRITER_typedef_CAValueFunction
typedef struct objc_object CAValueFunction;
typedef struct {} _objc_exc_CAValueFunction;
#endif

struct CAValueFunction_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSString *__strong _string;
	void *_impl;
};


// + (nullable instancetype)functionWithName:(NSString *)name;

// @property(readonly) NSString *name;

/* @end */








extern __attribute__((visibility("default"))) NSString * const kCAValueFunctionRotateX
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAValueFunctionRotateY
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAValueFunctionRotateZ
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));




extern __attribute__((visibility("default"))) NSString * const kCAValueFunctionScale
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));





extern __attribute__((visibility("default"))) NSString * const kCAValueFunctionScaleX
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAValueFunctionScaleY
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAValueFunctionScaleZ
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));




extern __attribute__((visibility("default"))) NSString * const kCAValueFunctionTranslate
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));





extern __attribute__((visibility("default"))) NSString * const kCAValueFunctionTranslateX
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAValueFunctionTranslateY
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
extern __attribute__((visibility("default"))) NSString * const kCAValueFunctionTranslateZ
    __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0)));
#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIWindow;
#ifndef _REWRITER_typedef_UIWindow
#define _REWRITER_typedef_UIWindow
typedef struct objc_object UIWindow;
typedef struct {} _objc_exc_UIWindow;
#endif

#ifndef _REWRITER_typedef_UIView
#define _REWRITER_typedef_UIView
typedef struct objc_object UIView;
typedef struct {} _objc_exc_UIView;
#endif

#ifndef _REWRITER_typedef_UIGestureRecognizer
#define _REWRITER_typedef_UIGestureRecognizer
typedef struct objc_object UIGestureRecognizer;
typedef struct {} _objc_exc_UIGestureRecognizer;
#endif

#ifndef _REWRITER_typedef_UITouch
#define _REWRITER_typedef_UITouch
typedef struct objc_object UITouch;
typedef struct {} _objc_exc_UITouch;
#endif


typedef NSInteger UIEventType; enum {
    UIEventTypeTouches,
    UIEventTypeMotion,
    UIEventTypeRemoteControl,
    UIEventTypePresses __attribute__((availability(ios,introduced=9_0))),
};

typedef NSInteger UIEventSubtype; enum {

    UIEventSubtypeNone = 0,


    UIEventSubtypeMotionShake = 1,


    UIEventSubtypeRemoteControlPlay = 100,
    UIEventSubtypeRemoteControlPause = 101,
    UIEventSubtypeRemoteControlStop = 102,
    UIEventSubtypeRemoteControlTogglePlayPause = 103,
    UIEventSubtypeRemoteControlNextTrack = 104,
    UIEventSubtypeRemoteControlPreviousTrack = 105,
    UIEventSubtypeRemoteControlBeginSeekingBackward = 106,
    UIEventSubtypeRemoteControlEndSeekingBackward = 107,
    UIEventSubtypeRemoteControlBeginSeekingForward = 108,
    UIEventSubtypeRemoteControlEndSeekingForward = 109,
};


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) 
#ifndef _REWRITER_typedef_UIEvent
#define _REWRITER_typedef_UIEvent
typedef struct objc_object UIEvent;
typedef struct {} _objc_exc_UIEvent;
#endif

struct UIEvent_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property(nonatomic,readonly) UIEventType type __attribute__((availability(ios,introduced=3_0)));
// @property(nonatomic,readonly) UIEventSubtype subtype __attribute__((availability(ios,introduced=3_0)));

// @property(nonatomic,readonly) NSTimeInterval timestamp;


// @property(nonatomic, readonly, nullable) NSSet <UITouch *> *allTouches;



// - (nullable NSSet <UITouch *> *)touchesForWindow:(UIWindow *)window;
// - (nullable NSSet <UITouch *> *)touchesForView:(UIView *)view;
// - (nullable NSSet <UITouch *> *)touchesForGestureRecognizer:(UIGestureRecognizer *)gesture __attribute__((availability(ios,introduced=3_2)));


// - (nullable NSArray <UITouch *> *)coalescedTouchesForTouch:(UITouch *)touch __attribute__((availability(ios,introduced=9_0)));


// - (nullable NSArray <UITouch *> *)predictedTouchesForTouch:(UITouch *)touch __attribute__((availability(ios,introduced=9_0)));

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIPasteConfiguration;
#ifndef _REWRITER_typedef_UIPasteConfiguration
#define _REWRITER_typedef_UIPasteConfiguration
typedef struct objc_object UIPasteConfiguration;
typedef struct {} _objc_exc_UIPasteConfiguration;
#endif


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))
// @protocol UIPasteConfigurationSupporting <NSObject>

// @property (nonatomic, copy, nullable) UIPasteConfiguration *pasteConfiguration;

/* @optional */
// - (void)pasteItemProviders:(NSArray<NSItemProvider *> *)itemProviders;
// - (BOOL)canPasteItemProviders:(NSArray<NSItemProvider *> *)itemProviders;

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

// @class UIPress;
#ifndef _REWRITER_typedef_UIPress
#define _REWRITER_typedef_UIPress
typedef struct objc_object UIPress;
typedef struct {} _objc_exc_UIPress;
#endif

// @class UIPressesEvent;
#ifndef _REWRITER_typedef_UIPressesEvent
#define _REWRITER_typedef_UIPressesEvent
typedef struct objc_object UIPressesEvent;
typedef struct {} _objc_exc_UIPressesEvent;
#endif


// @protocol UIResponderStandardEditActions <NSObject>
/* @optional */
// - (void)cut:(nullable id)sender __attribute__((availability(ios,introduced=3_0)));
// - (void)copy:(nullable id)sender __attribute__((availability(ios,introduced=3_0)));
// - (void)paste:(nullable id)sender __attribute__((availability(ios,introduced=3_0)));
// - (void)select:(nullable id)sender __attribute__((availability(ios,introduced=3_0)));
// - (void)selectAll:(nullable id)sender __attribute__((availability(ios,introduced=3_0)));
// - (void)delete:(nullable id)sender __attribute__((availability(ios,introduced=3_2)));
// - (void)makeTextWritingDirectionLeftToRight:(nullable id)sender __attribute__((availability(ios,introduced=5_0)));
// - (void)makeTextWritingDirectionRightToLeft:(nullable id)sender __attribute__((availability(ios,introduced=5_0)));
// - (void)toggleBoldface:(nullable id)sender __attribute__((availability(ios,introduced=6_0)));
// - (void)toggleItalics:(nullable id)sender __attribute__((availability(ios,introduced=6_0)));
// - (void)toggleUnderline:(nullable id)sender __attribute__((availability(ios,introduced=6_0)));

// - (void)increaseSize:(nullable id)sender __attribute__((availability(ios,introduced=7_0)));
// - (void)decreaseSize:(nullable id)sender __attribute__((availability(ios,introduced=7_0)));

/* @end */


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) 
#ifndef _REWRITER_typedef_UIResponder
#define _REWRITER_typedef_UIResponder
typedef struct objc_object UIResponder;
typedef struct {} _objc_exc_UIResponder;
#endif

struct UIResponder_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



// @property(nonatomic, readonly, nullable) UIResponder *nextResponder;





// @property(nonatomic, readonly) BOOL canBecomeFirstResponder;



// - (BOOL)becomeFirstResponder;


// @property(nonatomic, readonly) BOOL canResignFirstResponder;



// - (BOOL)resignFirstResponder;


// @property(nonatomic, readonly) BOOL isFirstResponder;
// - (void)touchesBegan:(NSSet<UITouch *> *)touches withEvent:(nullable UIEvent *)event;
// - (void)touchesMoved:(NSSet<UITouch *> *)touches withEvent:(nullable UIEvent *)event;
// - (void)touchesEnded:(NSSet<UITouch *> *)touches withEvent:(nullable UIEvent *)event;
// - (void)touchesCancelled:(NSSet<UITouch *> *)touches withEvent:(nullable UIEvent *)event;
// - (void)touchesEstimatedPropertiesUpdated:(NSSet<UITouch *> *)touches __attribute__((availability(ios,introduced=9_1)));
// - (void)pressesBegan:(NSSet<UIPress *> *)presses withEvent:(nullable UIPressesEvent *)event __attribute__((availability(ios,introduced=9_0)));
// - (void)pressesChanged:(NSSet<UIPress *> *)presses withEvent:(nullable UIPressesEvent *)event __attribute__((availability(ios,introduced=9_0)));
// - (void)pressesEnded:(NSSet<UIPress *> *)presses withEvent:(nullable UIPressesEvent *)event __attribute__((availability(ios,introduced=9_0)));
// - (void)pressesCancelled:(NSSet<UIPress *> *)presses withEvent:(nullable UIPressesEvent *)event __attribute__((availability(ios,introduced=9_0)));

// - (void)motionBegan:(UIEventSubtype)motion withEvent:(nullable UIEvent *)event __attribute__((availability(ios,introduced=3_0)));
// - (void)motionEnded:(UIEventSubtype)motion withEvent:(nullable UIEvent *)event __attribute__((availability(ios,introduced=3_0)));
// - (void)motionCancelled:(UIEventSubtype)motion withEvent:(nullable UIEvent *)event __attribute__((availability(ios,introduced=3_0)));

// - (void)remoteControlReceivedWithEvent:(nullable UIEvent *)event __attribute__((availability(ios,introduced=4_0)));

// - (BOOL)canPerformAction:(SEL)action withSender:(nullable id)sender __attribute__((availability(ios,introduced=3_0)));

// - (nullable id)targetForAction:(SEL)action withSender:(nullable id)sender __attribute__((availability(ios,introduced=7_0)));

// @property(nullable, nonatomic,readonly) NSUndoManager *undoManager __attribute__((availability(ios,introduced=3_0)));

/* @end */


typedef NSInteger UIKeyModifierFlags; enum {
    UIKeyModifierAlphaShift = 1 << 16,
    UIKeyModifierShift = 1 << 17,
    UIKeyModifierControl = 1 << 18,
    UIKeyModifierAlternate = 1 << 19,
    UIKeyModifierCommand = 1 << 20,
    UIKeyModifierNumericPad = 1 << 21,
} __attribute__((availability(ios,introduced=7_0)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0))) 
#ifndef _REWRITER_typedef_UIKeyCommand
#define _REWRITER_typedef_UIKeyCommand
typedef struct objc_object UIKeyCommand;
typedef struct {} _objc_exc_UIKeyCommand;
#endif

struct UIKeyCommand_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)init __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

// @property (nullable,nonatomic,readonly) NSString *input;
// @property (nonatomic,readonly) UIKeyModifierFlags modifierFlags;
// @property (nullable,nonatomic,copy) NSString *discoverabilityTitle __attribute__((availability(ios,introduced=9_0)));




// + (UIKeyCommand *)keyCommandWithInput:(NSString *)input modifierFlags:(UIKeyModifierFlags)modifierFlags action:(SEL)action;


// + (UIKeyCommand *)keyCommandWithInput:(NSString *)input modifierFlags:(UIKeyModifierFlags)modifierFlags action:(SEL)action discoverabilityTitle:(NSString *)discoverabilityTitle __attribute__((availability(ios,introduced=9_0)));

/* @end */


// @interface UIResponder (UIResponderKeyCommands)
// @property (nullable,nonatomic,readonly) NSArray<UIKeyCommand *> *keyCommands __attribute__((availability(ios,introduced=7_0)));
/* @end */


// @class UIInputViewController;
#ifndef _REWRITER_typedef_UIInputViewController
#define _REWRITER_typedef_UIInputViewController
typedef struct objc_object UIInputViewController;
typedef struct {} _objc_exc_UIInputViewController;
#endif

// @class UITextInputMode;
#ifndef _REWRITER_typedef_UITextInputMode
#define _REWRITER_typedef_UITextInputMode
typedef struct objc_object UITextInputMode;
typedef struct {} _objc_exc_UITextInputMode;
#endif

// @class UITextInputAssistantItem;
#ifndef _REWRITER_typedef_UITextInputAssistantItem
#define _REWRITER_typedef_UITextInputAssistantItem
typedef struct objc_object UITextInputAssistantItem;
typedef struct {} _objc_exc_UITextInputAssistantItem;
#endif


// @interface UIResponder (UIResponderInputViewAdditions)


// @property (nullable, nonatomic, readonly, strong) __kindof UIView *inputView __attribute__((availability(ios,introduced=3_2)));
// @property (nullable, nonatomic, readonly, strong) __kindof UIView *inputAccessoryView __attribute__((availability(ios,introduced=3_2)));





// @property (nonnull, nonatomic, readonly, strong) UITextInputAssistantItem *inputAssistantItem __attribute__((availability(ios,introduced=9_0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));



// @property (nullable, nonatomic, readonly, strong) UIInputViewController *inputViewController __attribute__((availability(ios,introduced=8_0)));
// @property (nullable, nonatomic, readonly, strong) UIInputViewController *inputAccessoryViewController __attribute__((availability(ios,introduced=8_0)));




// @property (nullable, nonatomic, readonly, strong) UITextInputMode *textInputMode __attribute__((availability(ios,introduced=7_0)));



// @property (nullable, nonatomic, readonly, strong) NSString *textInputContextIdentifier __attribute__((availability(ios,introduced=7_0)));

// + (void)clearTextInputContextIdentifier:(NSString *)identifier __attribute__((availability(ios,introduced=7_0)));


// - (void)reloadInputViews __attribute__((availability(ios,introduced=3_2)));

/* @end */



extern "C" __attribute__((visibility ("default"))) NSString *const UIKeyInputUpArrow __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIKeyInputDownArrow __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIKeyInputLeftArrow __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIKeyInputRightArrow __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIKeyInputEscape __attribute__((availability(ios,introduced=7_0)));

// @interface UIResponder (ActivityContinuation)
// @property (nullable, nonatomic, strong) NSUserActivity *userActivity __attribute__((availability(ios,introduced=8_0)));
// - (void)updateUserActivityState:(NSUserActivity *)activity __attribute__((availability(ios,introduced=8_0)));
// - (void)restoreUserActivityState:(NSUserActivity *)activity __attribute__((availability(ios,introduced=8_0)));
/* @end */



// @interface UIResponder (UIPasteConfigurationSupporting) <UIPasteConfigurationSupporting>
/* @end */

#pragma clang assume_nonnull end











#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0)))

#ifndef _REWRITER_typedef_CIVector
#define _REWRITER_typedef_CIVector
typedef struct objc_object CIVector;
typedef struct {} _objc_exc_CIVector;
#endif

struct CIVector_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	size_t _count;

	union  {
	CGFloat vec[4];
	CGFloat * _Nonnull ptr;
	} _u;
};




// + (instancetype)vectorWithValues:(const CGFloat *)values count:(size_t)count;

// + (instancetype)vectorWithX:(CGFloat)x;
// + (instancetype)vectorWithX:(CGFloat)x Y:(CGFloat)y;
// + (instancetype)vectorWithX:(CGFloat)x Y:(CGFloat)y Z:(CGFloat)z;
// + (instancetype)vectorWithX:(CGFloat)x Y:(CGFloat)y Z:(CGFloat)z W:(CGFloat)w;


// + (instancetype)vectorWithCGPoint:(CGPoint)p __attribute__((availability(ios,introduced=5_0)));


// + (instancetype)vectorWithCGRect:(CGRect)r __attribute__((availability(ios,introduced=5_0)));


// + (instancetype)vectorWithCGAffineTransform:(CGAffineTransform)t __attribute__((availability(ios,introduced=5_0)));

// + (instancetype)vectorWithString:(NSString *)representation;



// - (instancetype)initWithValues:(const CGFloat *)values count:(size_t)count __attribute__((objc_designated_initializer));

// - (instancetype)initWithX:(CGFloat)x;
// - (instancetype)initWithX:(CGFloat)x Y:(CGFloat)y;
// - (instancetype)initWithX:(CGFloat)x Y:(CGFloat)y Z:(CGFloat)z;
// - (instancetype)initWithX:(CGFloat)x Y:(CGFloat)y Z:(CGFloat)z W:(CGFloat)w;
// - (instancetype)initWithCGPoint:(CGPoint)p __attribute__((availability(ios,introduced=5_0)));
// - (instancetype)initWithCGRect:(CGRect)r __attribute__((availability(ios,introduced=5_0)));
// - (instancetype)initWithCGAffineTransform:(CGAffineTransform)r __attribute__((availability(ios,introduced=5_0)));

// - (instancetype)initWithString:(NSString *)representation;




// - (CGFloat)valueAtIndex:(size_t)index;


// @property (readonly) size_t count;



// @property (readonly) CGFloat X;
// @property (readonly) CGFloat Y;
// @property (readonly) CGFloat Z;
// @property (readonly) CGFloat W;
// @property (readonly) CGPoint CGPointValue __attribute__((availability(ios,introduced=5_0)));
// @property (readonly) CGRect CGRectValue __attribute__((availability(ios,introduced=5_0)));
// @property (readonly) CGAffineTransform CGAffineTransformValue __attribute__((availability(ios,introduced=5_0)));





// @property (readonly) NSString *stringRepresentation;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0)))

#ifndef _REWRITER_typedef_CIColor
#define _REWRITER_typedef_CIColor
typedef struct objc_object CIColor;
typedef struct {} _objc_exc_CIColor;
#endif

struct CIColor_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_priv;
	void *_pad[3];
};



// + (instancetype)colorWithCGColor:(CGColorRef)c;




// + (instancetype)colorWithRed:(CGFloat)r green:(CGFloat)g blue:(CGFloat)b alpha:(CGFloat)a;
// + (instancetype)colorWithRed:(CGFloat)r green:(CGFloat)g blue:(CGFloat)b;



// + (nullable instancetype)colorWithRed:(CGFloat)r green:(CGFloat)g blue:(CGFloat)b alpha:(CGFloat)a colorSpace:(CGColorSpaceRef)colorSpace __attribute__((availability(ios,introduced=10_0)));
// + (nullable instancetype)colorWithRed:(CGFloat)r green:(CGFloat)g blue:(CGFloat)b colorSpace:(CGColorSpaceRef)colorSpace __attribute__((availability(ios,introduced=10_0)));



// + (instancetype)colorWithString:(NSString *)representation;



// - (instancetype)initWithCGColor:(CGColorRef)c __attribute__((objc_designated_initializer));




// - (instancetype)initWithRed:(CGFloat)r green:(CGFloat)g blue:(CGFloat)b alpha:(CGFloat)a;
// - (instancetype)initWithRed:(CGFloat)r green:(CGFloat)g blue:(CGFloat)b __attribute__((availability(ios,introduced=9_0)));



// - (nullable instancetype)initWithRed:(CGFloat)r green:(CGFloat)g blue:(CGFloat)b alpha:(CGFloat)a colorSpace:(CGColorSpaceRef)colorSpace __attribute__((availability(ios,introduced=10_0)));
// - (nullable instancetype)initWithRed:(CGFloat)r green:(CGFloat)g blue:(CGFloat)b colorSpace:(CGColorSpaceRef)colorSpace __attribute__((availability(ios,introduced=10_0)));


// @property (readonly) size_t numberOfComponents;


// @property (readonly) const CGFloat *components __attribute__((objc_returns_inner_pointer));


// @property (readonly) CGFloat alpha;


// @property (readonly) CGColorSpaceRef colorSpace __attribute__((cf_returns_not_retained));


// @property (readonly) CGFloat red;
// @property (readonly) CGFloat green;
// @property (readonly) CGFloat blue;





// @property (readonly) NSString *stringRepresentation;


@property (class, strong, readonly) CIColor *blackColor __attribute__((swift_name("black"))) __attribute__((availability(ios,introduced=10_0)));
@property (class, strong, readonly) CIColor *whiteColor __attribute__((swift_name("white"))) __attribute__((availability(ios,introduced=10_0)));
@property (class, strong, readonly) CIColor *grayColor __attribute__((swift_name("gray"))) __attribute__((availability(ios,introduced=10_0)));
@property (class, strong, readonly) CIColor *redColor __attribute__((swift_name("red"))) __attribute__((availability(ios,introduced=10_0)));
@property (class, strong, readonly) CIColor *greenColor __attribute__((swift_name("green"))) __attribute__((availability(ios,introduced=10_0)));
@property (class, strong, readonly) CIColor *blueColor __attribute__((swift_name("blue"))) __attribute__((availability(ios,introduced=10_0)));
@property (class, strong, readonly) CIColor *cyanColor __attribute__((swift_name("cyan"))) __attribute__((availability(ios,introduced=10_0)));
@property (class, strong, readonly) CIColor *magentaColor __attribute__((swift_name("magenta"))) __attribute__((availability(ios,introduced=10_0)));
@property (class, strong, readonly) CIColor *yellowColor __attribute__((swift_name("yellow"))) __attribute__((availability(ios,introduced=10_0)));
@property (class, strong, readonly) CIColor *clearColor __attribute__((swift_name("clear"))) __attribute__((availability(ios,introduced=10_0)));

/* @end */

#pragma clang assume_nonnull end
extern "C" {
typedef uint64_t CVOptionFlags;
struct CVSMPTETime
{
    SInt16 subframes;
    SInt16 subframeDivisor;
    UInt32 counter;
    UInt32 type;
    UInt32 flags;
    SInt16 hours;
    SInt16 minutes;
    SInt16 seconds;
    SInt16 frames;
};
typedef struct CVSMPTETime CVSMPTETime;
typedef uint32_t CVSMPTETimeType; enum
{
    kCVSMPTETimeType24 = 0,
    kCVSMPTETimeType25 = 1,
    kCVSMPTETimeType30Drop = 2,
    kCVSMPTETimeType30 = 3,
    kCVSMPTETimeType2997 = 4,
    kCVSMPTETimeType2997Drop = 5,
    kCVSMPTETimeType60 = 6,
    kCVSMPTETimeType5994 = 7
};
typedef uint32_t CVSMPTETimeFlags; enum
{
    kCVSMPTETimeValid = (1L << 0),
    kCVSMPTETimeRunning = (1L << 1)
};


typedef int32_t CVTimeFlags; enum {
    kCVTimeIsIndefinite = 1 << 0
};

typedef struct
{
    int64_t timeValue;
    int32_t timeScale;
    int32_t flags;
} CVTime;
typedef struct
{
    uint32_t version;
    int32_t videoTimeScale;
    int64_t videoTime;
    uint64_t hostTime;
    double rateScalar;
    int64_t videoRefreshPeriod;
    CVSMPTETime smpteTime;
    uint64_t flags;
    uint64_t reserved;
} CVTimeStamp;


typedef uint64_t CVTimeStampFlags; enum
{
    kCVTimeStampVideoTimeValid = (1L << 0),
    kCVTimeStampHostTimeValid = (1L << 1),
    kCVTimeStampSMPTETimeValid = (1L << 2),
    kCVTimeStampVideoRefreshPeriodValid = (1L << 3),
    kCVTimeStampRateScalarValid = (1L << 4),


    kCVTimeStampTopField = (1L << 16),
    kCVTimeStampBottomField = (1L << 17),


    kCVTimeStampVideoHostTimeValid = (kCVTimeStampVideoTimeValid | kCVTimeStampHostTimeValid),
    kCVTimeStampIsInterlaced = (kCVTimeStampTopField | kCVTimeStampBottomField)
};

__attribute__((visibility("default"))) extern const CVTime kCVZeroTime;
__attribute__((visibility("default"))) extern const CVTime kCVIndefiniteTime;


}


extern "C" {
typedef int32_t CVReturn;



enum _CVReturn

{
    kCVReturnSuccess = 0,

    kCVReturnFirst = -6660,

    kCVReturnError = kCVReturnFirst,
    kCVReturnInvalidArgument = -6661,
    kCVReturnAllocationFailed = -6662,
 kCVReturnUnsupported = -6663,


    kCVReturnInvalidDisplay = -6670,
    kCVReturnDisplayLinkAlreadyRunning = -6671,
    kCVReturnDisplayLinkNotRunning = -6672,
    kCVReturnDisplayLinkCallbacksNotSet = -6673,


    kCVReturnInvalidPixelFormat = -6680,
    kCVReturnInvalidSize = -6681,
    kCVReturnInvalidPixelBufferAttributes = -6682,
    kCVReturnPixelBufferNotOpenGLCompatible = -6683,
    kCVReturnPixelBufferNotMetalCompatible = -6684,


    kCVReturnWouldExceedAllocationThreshold = -6689,
    kCVReturnPoolAllocationFailed = -6690,
    kCVReturnInvalidPoolAttributes = -6691,
    kCVReturnRetry = -6692,

    kCVReturnLast = -6699

};


}











extern "C" {






__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVBufferPropagatedAttachmentsKey __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVBufferNonPropagatedAttachmentsKey __attribute__((availability(ios,introduced=4.0)));



__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVBufferMovieTimeKey __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVBufferTimeValueKey __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVBufferTimeScaleKey __attribute__((availability(ios,introduced=4.0)));




typedef uint32_t CVAttachmentMode; enum
{
 kCVAttachmentMode_ShouldNotPropagate = 0,
 kCVAttachmentMode_ShouldPropagate = 1
};






typedef struct __attribute__((objc_bridge(id))) __CVBuffer *CVBufferRef;
__attribute__((visibility("default"))) extern CVBufferRef _Nullable CVBufferRetain( CVBufferRef _Nullable buffer ) __attribute__((availability(ios,introduced=4.0)));






__attribute__((visibility("default"))) extern void CVBufferRelease( __attribute__((cf_consumed)) CVBufferRef _Nullable buffer ) __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern void CVBufferSetAttachment( CVBufferRef _Nonnull buffer, CFStringRef _Nonnull key, CFTypeRef _Nonnull value, CVAttachmentMode attachmentMode ) __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern CFTypeRef _Nullable CVBufferGetAttachment( CVBufferRef _Nonnull buffer, CFStringRef _Nonnull key, CVAttachmentMode * _Nullable attachmentMode ) __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern void CVBufferRemoveAttachment( CVBufferRef _Nonnull buffer, CFStringRef _Nonnull key ) __attribute__((availability(ios,introduced=4.0)));







__attribute__((visibility("default"))) extern void CVBufferRemoveAllAttachments( CVBufferRef _Nonnull buffer ) __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern CFDictionaryRef __attribute__((cf_returns_not_retained)) _Nullable CVBufferGetAttachments( CVBufferRef _Nonnull buffer, CVAttachmentMode attachmentMode ) __attribute__((availability(ios,introduced=4.0)));







__attribute__((visibility("default"))) extern void CVBufferSetAttachments( CVBufferRef _Nonnull buffer, CFDictionaryRef _Nonnull theAttachments, CVAttachmentMode attachmentMode ) __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern void CVBufferPropagateAttachments( CVBufferRef _Nonnull sourceBuffer, CVBufferRef _Nonnull destinationBuffer ) __attribute__((availability(ios,introduced=4.0)));


}
extern "C" {




__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferCGColorSpaceKey __attribute__((availability(ios,introduced=4.0)));

__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferCleanApertureKey __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferCleanApertureWidthKey __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferCleanApertureHeightKey __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferCleanApertureHorizontalOffsetKey __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferCleanApertureVerticalOffsetKey __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferPreferredCleanApertureKey __attribute__((availability(ios,introduced=4.0)));

__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferFieldCountKey __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferFieldDetailKey __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferFieldDetailTemporalTopFirst __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferFieldDetailTemporalBottomFirst __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferFieldDetailSpatialFirstLineEarly __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferFieldDetailSpatialFirstLineLate __attribute__((availability(ios,introduced=4.0)));

__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferPixelAspectRatioKey __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferPixelAspectRatioHorizontalSpacingKey __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferPixelAspectRatioVerticalSpacingKey __attribute__((availability(ios,introduced=4.0)));

__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferDisplayDimensionsKey __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferDisplayWidthKey __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferDisplayHeightKey __attribute__((availability(ios,introduced=4.0)));

__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferGammaLevelKey __attribute__((availability(ios,introduced=4.0)));

__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferICCProfileKey __attribute__((availability(ios,introduced=4.0)));

__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferYCbCrMatrixKey __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferYCbCrMatrix_ITU_R_709_2 __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferYCbCrMatrix_ITU_R_601_4 __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferYCbCrMatrix_SMPTE_240M_1995 __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferYCbCrMatrix_DCI_P3 __attribute__((availability(ios,introduced=9.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferYCbCrMatrix_P3_D65 __attribute__((availability(ios,introduced=9.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferYCbCrMatrix_ITU_R_2020 __attribute__((availability(ios,introduced=9.0)));

__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferColorPrimariesKey __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferColorPrimaries_ITU_R_709_2 __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferColorPrimaries_EBU_3213 __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferColorPrimaries_SMPTE_C __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferColorPrimaries_P22 __attribute__((availability(ios,introduced=6.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferColorPrimaries_DCI_P3 __attribute__((availability(ios,introduced=9.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferColorPrimaries_P3_D65 __attribute__((availability(ios,introduced=9.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferColorPrimaries_ITU_R_2020 __attribute__((availability(ios,introduced=9.0)));

__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferTransferFunctionKey __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferTransferFunction_ITU_R_709_2 __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferTransferFunction_SMPTE_240M_1995 __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferTransferFunction_UseGamma __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferTransferFunction_EBU_3213 __attribute__((availability(ios,unavailable)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferTransferFunction_SMPTE_C __attribute__((availability(ios,unavailable)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferTransferFunction_sRGB __attribute__((availability(ios,introduced=11.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferTransferFunction_ITU_R_2020 __attribute__((availability(ios,introduced=9.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferTransferFunction_SMPTE_ST_428_1 __attribute__((availability(ios,introduced=10.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferTransferFunction_SMPTE_ST_2084_PQ __attribute__((availability(ios,introduced=11.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferTransferFunction_ITU_R_2100_HLG __attribute__((availability(ios,introduced=11.0)));


__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferChromaLocationTopFieldKey __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferChromaLocationBottomFieldKey __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferChromaLocation_Left __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferChromaLocation_Center __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferChromaLocation_TopLeft __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferChromaLocation_Top __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferChromaLocation_BottomLeft __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferChromaLocation_Bottom __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferChromaLocation_DV420 __attribute__((availability(ios,introduced=4.0)));



__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferChromaSubsamplingKey __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferChromaSubsampling_420 __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferChromaSubsampling_422 __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferChromaSubsampling_411 __attribute__((availability(ios,introduced=4.0)));


__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferAlphaChannelIsOpaque __attribute__((availability(ios,introduced=8.0)));


__attribute__((visibility("default"))) extern int CVYCbCrMatrixGetIntegerCodePointForString( _Nullable CFStringRef yCbCrMatrixString ) __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));

__attribute__((visibility("default"))) extern int CVColorPrimariesGetIntegerCodePointForString( _Nullable CFStringRef colorPrimariesString ) __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));

__attribute__((visibility("default"))) extern int CVTransferFunctionGetIntegerCodePointForString( _Nullable CFStringRef transferFunctionString ) __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));


__attribute__((visibility("default"))) extern _Nullable CFStringRef CVYCbCrMatrixGetStringForIntegerCodePoint( int yCbCrMatrixCodePoint ) __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));

__attribute__((visibility("default"))) extern _Nullable CFStringRef CVColorPrimariesGetStringForIntegerCodePoint( int colorPrimariesCodePoint ) __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));

__attribute__((visibility("default"))) extern _Nullable CFStringRef CVTransferFunctionGetStringForIntegerCodePoint( int transferFunctionCodePoint ) __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
typedef CVBufferRef CVImageBufferRef;
__attribute__((visibility("default"))) extern CGSize CVImageBufferGetEncodedSize( CVImageBufferRef _Nonnull imageBuffer ) __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern CGSize CVImageBufferGetDisplaySize( CVImageBufferRef _Nonnull imageBuffer ) __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern CGRect CVImageBufferGetCleanRect( CVImageBufferRef _Nonnull imageBuffer ) __attribute__((availability(ios,introduced=4.0)));







__attribute__((visibility("default"))) extern Boolean CVImageBufferIsFlipped( CVImageBufferRef _Nonnull imageBuffer ) __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern CGColorSpaceRef _Nullable CVImageBufferCreateColorSpaceFromAttachments( CFDictionaryRef _Nonnull attachments ) __attribute__((availability(ios,introduced=10.0)));


__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferMasteringDisplayColorVolumeKey __attribute__((availability(ios,introduced=11.0)));


__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVImageBufferContentLightLevelInfoKey __attribute__((availability(ios,introduced=11.0)));


}



extern "C" {
enum

{
  kCVPixelFormatType_1Monochrome = 0x00000001,
  kCVPixelFormatType_2Indexed = 0x00000002,
  kCVPixelFormatType_4Indexed = 0x00000004,
  kCVPixelFormatType_8Indexed = 0x00000008,
  kCVPixelFormatType_1IndexedGray_WhiteIsZero = 0x00000021,
  kCVPixelFormatType_2IndexedGray_WhiteIsZero = 0x00000022,
  kCVPixelFormatType_4IndexedGray_WhiteIsZero = 0x00000024,
  kCVPixelFormatType_8IndexedGray_WhiteIsZero = 0x00000028,
  kCVPixelFormatType_16BE555 = 0x00000010,
  kCVPixelFormatType_16LE555 = 'L555',
  kCVPixelFormatType_16LE5551 = '5551',
  kCVPixelFormatType_16BE565 = 'B565',
  kCVPixelFormatType_16LE565 = 'L565',
  kCVPixelFormatType_24RGB = 0x00000018,
  kCVPixelFormatType_24BGR = '24BG',
  kCVPixelFormatType_32ARGB = 0x00000020,
  kCVPixelFormatType_32BGRA = 'BGRA',
  kCVPixelFormatType_32ABGR = 'ABGR',
  kCVPixelFormatType_32RGBA = 'RGBA',
  kCVPixelFormatType_64ARGB = 'b64a',
  kCVPixelFormatType_48RGB = 'b48r',
  kCVPixelFormatType_32AlphaGray = 'b32a',
  kCVPixelFormatType_16Gray = 'b16g',
  kCVPixelFormatType_30RGB = 'R10k',
  kCVPixelFormatType_422YpCbCr8 = '2vuy',
  kCVPixelFormatType_4444YpCbCrA8 = 'v408',
  kCVPixelFormatType_4444YpCbCrA8R = 'r408',
  kCVPixelFormatType_4444AYpCbCr8 = 'y408',
  kCVPixelFormatType_4444AYpCbCr16 = 'y416',
  kCVPixelFormatType_444YpCbCr8 = 'v308',
  kCVPixelFormatType_422YpCbCr16 = 'v216',
  kCVPixelFormatType_422YpCbCr10 = 'v210',
  kCVPixelFormatType_444YpCbCr10 = 'v410',
  kCVPixelFormatType_420YpCbCr8Planar = 'y420',
  kCVPixelFormatType_420YpCbCr8PlanarFullRange = 'f420',
  kCVPixelFormatType_422YpCbCr_4A_8BiPlanar = 'a2vy',
  kCVPixelFormatType_420YpCbCr8BiPlanarVideoRange = '420v',
  kCVPixelFormatType_420YpCbCr8BiPlanarFullRange = '420f',
  kCVPixelFormatType_422YpCbCr8_yuvs = 'yuvs',
  kCVPixelFormatType_422YpCbCr8FullRange = 'yuvf',
  kCVPixelFormatType_OneComponent8 = 'L008',
  kCVPixelFormatType_TwoComponent8 = '2C08',
  kCVPixelFormatType_30RGBLEPackedWideGamut = 'w30r',
  kCVPixelFormatType_ARGB2101010LEPacked = 'l10r',
  kCVPixelFormatType_OneComponent16Half = 'L00h',
  kCVPixelFormatType_OneComponent32Float = 'L00f',
  kCVPixelFormatType_TwoComponent16Half = '2C0h',
  kCVPixelFormatType_TwoComponent32Float = '2C0f',
  kCVPixelFormatType_64RGBAHalf = 'RGhA',
  kCVPixelFormatType_128RGBAFloat = 'RGfA',
  kCVPixelFormatType_14Bayer_GRBG = 'grb4',
  kCVPixelFormatType_14Bayer_RGGB = 'rgg4',
  kCVPixelFormatType_14Bayer_BGGR = 'bgg4',
  kCVPixelFormatType_14Bayer_GBRG = 'gbr4',
  kCVPixelFormatType_DisparityFloat16 = 'hdis',
  kCVPixelFormatType_DisparityFloat32 = 'fdis',
  kCVPixelFormatType_DepthFloat16 = 'hdep',
  kCVPixelFormatType_DepthFloat32 = 'fdep',
  kCVPixelFormatType_420YpCbCr10BiPlanarVideoRange = 'x420',
  kCVPixelFormatType_422YpCbCr10BiPlanarVideoRange = 'x422',
  kCVPixelFormatType_444YpCbCr10BiPlanarVideoRange = 'x444',
  kCVPixelFormatType_420YpCbCr10BiPlanarFullRange = 'xf20',
  kCVPixelFormatType_422YpCbCr10BiPlanarFullRange = 'xf22',
  kCVPixelFormatType_444YpCbCr10BiPlanarFullRange = 'xf44',
};
typedef CVOptionFlags CVPixelBufferLockFlags; enum
{
 kCVPixelBufferLock_ReadOnly = 0x00000001,
};






struct CVPlanarComponentInfo {
  int32_t offset;
  uint32_t rowBytes;
};
typedef struct CVPlanarComponentInfo CVPlanarComponentInfo;
struct CVPlanarPixelBufferInfo {
  CVPlanarComponentInfo componentInfo[1];
};
typedef struct CVPlanarPixelBufferInfo CVPlanarPixelBufferInfo;
struct CVPlanarPixelBufferInfo_YCbCrPlanar {
  CVPlanarComponentInfo componentInfoY;
  CVPlanarComponentInfo componentInfoCb;
  CVPlanarComponentInfo componentInfoCr;
};
typedef struct CVPlanarPixelBufferInfo_YCbCrPlanar CVPlanarPixelBufferInfo_YCbCrPlanar;
struct CVPlanarPixelBufferInfo_YCbCrBiPlanar {
  CVPlanarComponentInfo componentInfoY;
  CVPlanarComponentInfo componentInfoCbCr;
};
typedef struct CVPlanarPixelBufferInfo_YCbCrBiPlanar CVPlanarPixelBufferInfo_YCbCrBiPlanar;


__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelBufferPixelFormatTypeKey __attribute__((availability(macosx,introduced=10.4))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelBufferMemoryAllocatorKey __attribute__((availability(macosx,introduced=10.4))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelBufferWidthKey __attribute__((availability(macosx,introduced=10.4))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelBufferHeightKey __attribute__((availability(macosx,introduced=10.4))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelBufferExtendedPixelsLeftKey __attribute__((availability(macosx,introduced=10.4))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelBufferExtendedPixelsTopKey __attribute__((availability(macosx,introduced=10.4))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelBufferExtendedPixelsRightKey __attribute__((availability(macosx,introduced=10.4))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelBufferExtendedPixelsBottomKey __attribute__((availability(macosx,introduced=10.4))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelBufferBytesPerRowAlignmentKey __attribute__((availability(macosx,introduced=10.4))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelBufferCGBitmapContextCompatibilityKey __attribute__((availability(macosx,introduced=10.4))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelBufferCGImageCompatibilityKey __attribute__((availability(macosx,introduced=10.4))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=4.0)));
 __attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelBufferOpenGLCompatibilityKey __attribute__((availability(macosx,introduced=10.4))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelBufferPlaneAlignmentKey __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelBufferIOSurfacePropertiesKey __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelBufferOpenGLESCompatibilityKey __attribute__((availability(ios,introduced=6.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macosx,unavailable))) __attribute__((availability(watchos,unavailable)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelBufferMetalCompatibilityKey __attribute__((availability(macosx,introduced=10.11))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelBufferOpenGLTextureCacheCompatibilityKey __attribute__((availability(macosx,introduced=10.11))) __attribute__((availability(ios,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelBufferOpenGLESTextureCacheCompatibilityKey __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macosx,unavailable))) __attribute__((availability(watchos,unavailable)));






typedef CVImageBufferRef CVPixelBufferRef;

__attribute__((visibility("default"))) extern CFTypeID CVPixelBufferGetTypeID(void) __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern CVPixelBufferRef _Nullable CVPixelBufferRetain( CVPixelBufferRef _Nullable texture ) __attribute__((availability(ios,introduced=4.0)));







__attribute__((visibility("default"))) extern void CVPixelBufferRelease( __attribute__((cf_consumed)) CVPixelBufferRef _Nullable texture ) __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern CVReturn CVPixelBufferCreateResolvedAttributesDictionary(
    CFAllocatorRef _Nullable allocator,
    CFArrayRef _Nullable attributes,
    __attribute__((cf_returns_retained)) CFDictionaryRef _Nullable * _Nonnull resolvedDictionaryOut) __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern CVReturn CVPixelBufferCreate(
    CFAllocatorRef _Nullable allocator,
    size_t width,
    size_t height,
    OSType pixelFormatType,
    CFDictionaryRef _Nullable pixelBufferAttributes,
    __attribute__((cf_returns_retained)) CVPixelBufferRef _Nullable * _Nonnull pixelBufferOut) __attribute__((availability(ios,introduced=4.0)));

typedef void (*CVPixelBufferReleaseBytesCallback)( void * _Nullable releaseRefCon, const void * _Nullable baseAddress );
__attribute__((visibility("default"))) extern CVReturn CVPixelBufferCreateWithBytes(
    CFAllocatorRef _Nullable allocator,
    size_t width,
    size_t height,
    OSType pixelFormatType,
    void * _Nonnull baseAddress,
    size_t bytesPerRow,
    CVPixelBufferReleaseBytesCallback _Nullable releaseCallback,
    void * _Nullable releaseRefCon,
    CFDictionaryRef _Nullable pixelBufferAttributes,
    __attribute__((cf_returns_retained)) CVPixelBufferRef _Nullable * _Nonnull pixelBufferOut) __attribute__((availability(ios,introduced=4.0)));

typedef void (*CVPixelBufferReleasePlanarBytesCallback)( void * _Nullable releaseRefCon, const void * _Nullable dataPtr, size_t dataSize, size_t numberOfPlanes, const void * _Nullable planeAddresses[] );
__attribute__((visibility("default"))) extern CVReturn CVPixelBufferCreateWithPlanarBytes(
    CFAllocatorRef _Nullable allocator,
    size_t width,
    size_t height,
    OSType pixelFormatType,
    void * _Nullable dataPtr,
    size_t dataSize,
    size_t numberOfPlanes,
    void * _Nullable planeBaseAddress[],
    size_t planeWidth[],
    size_t planeHeight[],
    size_t planeBytesPerRow[],
    CVPixelBufferReleasePlanarBytesCallback _Nullable releaseCallback,
    void * _Nullable releaseRefCon,
    CFDictionaryRef _Nullable pixelBufferAttributes,
    __attribute__((cf_returns_retained)) CVPixelBufferRef _Nullable * _Nonnull pixelBufferOut) __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern CVReturn CVPixelBufferLockBaseAddress( CVPixelBufferRef _Nonnull pixelBuffer, CVPixelBufferLockFlags lockFlags ) __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern CVReturn CVPixelBufferUnlockBaseAddress( CVPixelBufferRef _Nonnull pixelBuffer, CVPixelBufferLockFlags unlockFlags ) __attribute__((availability(ios,introduced=4.0)));







__attribute__((visibility("default"))) extern size_t CVPixelBufferGetWidth( CVPixelBufferRef _Nonnull pixelBuffer ) __attribute__((availability(ios,introduced=4.0)));







__attribute__((visibility("default"))) extern size_t CVPixelBufferGetHeight( CVPixelBufferRef _Nonnull pixelBuffer ) __attribute__((availability(ios,introduced=4.0)));







__attribute__((visibility("default"))) extern OSType CVPixelBufferGetPixelFormatType( CVPixelBufferRef _Nonnull pixelBuffer ) __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern void * _Nullable CVPixelBufferGetBaseAddress( CVPixelBufferRef _Nonnull pixelBuffer ) __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern size_t CVPixelBufferGetBytesPerRow( CVPixelBufferRef _Nonnull pixelBuffer ) __attribute__((availability(ios,introduced=4.0)));







__attribute__((visibility("default"))) extern size_t CVPixelBufferGetDataSize( CVPixelBufferRef _Nonnull pixelBuffer ) __attribute__((availability(ios,introduced=4.0)));







__attribute__((visibility("default"))) extern Boolean CVPixelBufferIsPlanar( CVPixelBufferRef _Nonnull pixelBuffer ) __attribute__((availability(ios,introduced=4.0)));







__attribute__((visibility("default"))) extern size_t CVPixelBufferGetPlaneCount( CVPixelBufferRef _Nonnull pixelBuffer ) __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern size_t CVPixelBufferGetWidthOfPlane( CVPixelBufferRef _Nonnull pixelBuffer, size_t planeIndex ) __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern size_t CVPixelBufferGetHeightOfPlane( CVPixelBufferRef _Nonnull pixelBuffer, size_t planeIndex ) __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern void * _Nullable CVPixelBufferGetBaseAddressOfPlane( CVPixelBufferRef _Nonnull pixelBuffer, size_t planeIndex ) __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern size_t CVPixelBufferGetBytesPerRowOfPlane( CVPixelBufferRef _Nonnull pixelBuffer, size_t planeIndex ) __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern void CVPixelBufferGetExtendedPixels(
        CVPixelBufferRef _Nonnull pixelBuffer,
        size_t * _Nullable extraColumnsOnLeft,
        size_t * _Nullable extraColumnsOnRight,
        size_t * _Nullable extraRowsOnTop,
        size_t * _Nullable extraRowsOnBottom ) __attribute__((availability(ios,introduced=4.0)));






__attribute__((visibility("default"))) extern CVReturn CVPixelBufferFillExtendedPixels( CVPixelBufferRef _Nonnull pixelBuffer ) __attribute__((availability(ios,introduced=4.0)));



}









typedef uint32_t IOSurfaceID;

typedef uint32_t IOSurfaceLockOptions; enum
{



 kIOSurfaceLockReadOnly = 0x00000001,




 kIOSurfaceLockAvoidSync = 0x00000002,
};

typedef uint32_t IOSurfacePurgeabilityState; enum
{
 kIOSurfacePurgeableNonVolatile = 0,
 kIOSurfacePurgeableVolatile = 1,
 kIOSurfacePurgeableEmpty = 2,
 kIOSurfacePurgeableKeepCurrent = 3,
};







enum {
    kIOSurfaceDefaultCache = 0,
    kIOSurfaceInhibitCache = 1,
    kIOSurfaceWriteThruCache = 2,
    kIOSurfaceCopybackCache = 3,
    kIOSurfaceWriteCombineCache = 4,
    kIOSurfaceCopybackInnerCache = 5
};


enum {
    kIOSurfaceMapCacheShift = 8,
    kIOSurfaceMapDefaultCache = kIOSurfaceDefaultCache << kIOSurfaceMapCacheShift,
    kIOSurfaceMapInhibitCache = kIOSurfaceInhibitCache << kIOSurfaceMapCacheShift,
    kIOSurfaceMapWriteThruCache = kIOSurfaceWriteThruCache << kIOSurfaceMapCacheShift,
    kIOSurfaceMapCopybackCache = kIOSurfaceCopybackCache << kIOSurfaceMapCacheShift,
    kIOSurfaceMapWriteCombineCache = kIOSurfaceWriteCombineCache << kIOSurfaceMapCacheShift,
    kIOSurfaceMapCopybackInnerCache = kIOSurfaceCopybackInnerCache << kIOSurfaceMapCacheShift,
};

typedef struct __attribute__((objc_bridge(id))) __IOSurface *IOSurfaceRef __attribute__((swift_name("IOSurfaceRef")));

extern "C" {


#pragma clang assume_nonnull begin






extern const CFStringRef kIOSurfaceAllocSize __attribute__((availability(ios,introduced=3.0)));


extern const CFStringRef kIOSurfaceWidth __attribute__((availability(ios,introduced=3.0)));


extern const CFStringRef kIOSurfaceHeight __attribute__((availability(ios,introduced=3.0)));




extern const CFStringRef kIOSurfaceBytesPerRow __attribute__((availability(ios,introduced=3.0)));




extern const CFStringRef kIOSurfaceBytesPerElement __attribute__((availability(ios,introduced=3.0)));


extern const CFStringRef kIOSurfaceElementWidth __attribute__((availability(ios,introduced=3.0)));


extern const CFStringRef kIOSurfaceElementHeight __attribute__((availability(ios,introduced=3.0)));


extern const CFStringRef kIOSurfaceOffset __attribute__((availability(ios,introduced=3.0)));




extern const CFStringRef kIOSurfacePlaneInfo __attribute__((availability(ios,introduced=3.0)));


extern const CFStringRef kIOSurfacePlaneWidth __attribute__((availability(ios,introduced=3.0)));


extern const CFStringRef kIOSurfacePlaneHeight __attribute__((availability(ios,introduced=3.0)));




extern const CFStringRef kIOSurfacePlaneBytesPerRow __attribute__((availability(ios,introduced=3.0)));



extern const CFStringRef kIOSurfacePlaneOffset __attribute__((availability(ios,introduced=3.0)));


extern const CFStringRef kIOSurfacePlaneSize __attribute__((availability(ios,introduced=3.0)));




extern const CFStringRef kIOSurfacePlaneBase __attribute__((availability(ios,introduced=3.0)));



extern const CFStringRef kIOSurfacePlaneBitsPerElement __attribute__((availability(ios,introduced=11.0)));


extern const CFStringRef kIOSurfacePlaneBytesPerElement __attribute__((availability(ios,introduced=3.0)));


extern const CFStringRef kIOSurfacePlaneElementWidth __attribute__((availability(ios,introduced=3.0)));


extern const CFStringRef kIOSurfacePlaneElementHeight __attribute__((availability(ios,introduced=3.0)));




extern const CFStringRef kIOSurfaceCacheMode __attribute__((availability(ios,introduced=3.0)));


extern const CFStringRef kIOSurfaceIsGlobal __attribute__((availability(ios,introduced=3.0,deprecated=9.0)));


extern const CFStringRef kIOSurfacePixelFormat __attribute__((availability(ios,introduced=3.0)));


extern const CFStringRef kIOSurfacePixelSizeCastingAllowed __attribute__((availability(ios,introduced=10.0)));


extern const CFStringRef kIOSurfacePlaneComponentBitDepths __attribute__((availability(ios,introduced=11.0)));


extern const CFStringRef kIOSurfacePlaneComponentBitOffsets __attribute__((availability(ios,introduced=11.0)));

typedef int32_t IOSurfaceComponentName; enum {
 kIOSurfaceComponentNameUnknown = 0,
 kIOSurfaceComponentNameAlpha = 1,
 kIOSurfaceComponentNameRed = 2,
 kIOSurfaceComponentNameGreen = 3,
 kIOSurfaceComponentNameBlue = 4,
 kIOSurfaceComponentNameLuma = 5,
 kIOSurfaceComponentNameChromaRed = 6,
 kIOSurfaceComponentNameChromaBlue = 7,
};



extern const CFStringRef kIOSurfacePlaneComponentNames __attribute__((availability(ios,introduced=11.0)));

typedef int32_t IOSurfaceComponentType; enum {
 kIOSurfaceComponentTypeUnknown = 0,
 kIOSurfaceComponentTypeUnsignedInteger = 1,
 kIOSurfaceComponentTypeSignedInteger = 2,
 kIOSurfaceComponentTypeFloat = 3,
};


extern const CFStringRef kIOSurfacePlaneComponentTypes __attribute__((availability(ios,introduced=11.0)));

typedef int32_t IOSurfaceComponentRange; enum {
 kIOSurfaceComponentRangeUnknown = 0,
 kIOSurfaceComponentRangeFullRange = 1,
 kIOSurfaceComponentRangeVideoRange = 2,
 kIOSurfaceComponentRangeWideRange = 3,
};


extern const CFStringRef kIOSurfacePlaneComponentRanges __attribute__((availability(ios,introduced=11.0)));

typedef int32_t IOSurfaceSubsampling; enum {
 kIOSurfaceSubsamplingUnknown = 0,
 kIOSurfaceSubsamplingNone = 1,
 kIOSurfaceSubsampling422 = 2,
 kIOSurfaceSubsampling420 = 3,
 kIOSurfaceSubsampling411 = 4,
};


extern const CFStringRef kIOSurfaceSubsampling __attribute__((availability(ios,introduced=11.0)));

CFTypeID IOSurfaceGetTypeID(void)
 __attribute__((availability(ios,introduced=3.0)));


IOSurfaceRef _Nullable IOSurfaceCreate(CFDictionaryRef properties)
 __attribute__((availability(ios,introduced=3.0)));






IOSurfaceRef _Nullable IOSurfaceLookup(IOSurfaceID csid) __attribute__((cf_returns_retained))
 __attribute__((availability(ios,introduced=3.0)));


IOSurfaceID IOSurfaceGetID(IOSurfaceRef buffer)
 __attribute__((availability(ios,introduced=3.0)));
kern_return_t IOSurfaceLock(IOSurfaceRef buffer, IOSurfaceLockOptions options, uint32_t * _Nullable seed)
 __attribute__((availability(ios,introduced=3.0)));
kern_return_t IOSurfaceUnlock(IOSurfaceRef buffer, IOSurfaceLockOptions options, uint32_t * _Nullable seed)
 __attribute__((availability(ios,introduced=3.0)));


size_t IOSurfaceGetAllocSize(IOSurfaceRef buffer)
 __attribute__((availability(ios,introduced=3.0)));

size_t IOSurfaceGetWidth(IOSurfaceRef buffer)
 __attribute__((availability(ios,introduced=3.0)));

size_t IOSurfaceGetHeight(IOSurfaceRef buffer)
 __attribute__((availability(ios,introduced=3.0)));

size_t IOSurfaceGetBytesPerElement(IOSurfaceRef buffer)
 __attribute__((availability(ios,introduced=3.0)));

size_t IOSurfaceGetBytesPerRow(IOSurfaceRef buffer)
 __attribute__((availability(ios,introduced=3.0)));

void *IOSurfaceGetBaseAddress(IOSurfaceRef buffer)
 __attribute__((availability(ios,introduced=3.0)));

size_t IOSurfaceGetElementWidth(IOSurfaceRef buffer)
 __attribute__((availability(ios,introduced=3.0)));

size_t IOSurfaceGetElementHeight(IOSurfaceRef buffer)
 __attribute__((availability(ios,introduced=3.0)));

OSType IOSurfaceGetPixelFormat(IOSurfaceRef buffer)
 __attribute__((availability(ios,introduced=3.0)));



uint32_t IOSurfaceGetSeed(IOSurfaceRef buffer)
 __attribute__((availability(ios,introduced=3.0)));


size_t IOSurfaceGetPlaneCount(IOSurfaceRef buffer)
 __attribute__((availability(ios,introduced=3.0)));
size_t IOSurfaceGetWidthOfPlane(IOSurfaceRef buffer, size_t planeIndex)
 __attribute__((availability(ios,introduced=3.0)));

size_t IOSurfaceGetHeightOfPlane(IOSurfaceRef buffer, size_t planeIndex)
 __attribute__((availability(ios,introduced=3.0)));

size_t IOSurfaceGetBytesPerElementOfPlane(IOSurfaceRef buffer, size_t planeIndex)
 __attribute__((availability(ios,introduced=3.0)));

size_t IOSurfaceGetBytesPerRowOfPlane(IOSurfaceRef buffer, size_t planeIndex)
 __attribute__((availability(ios,introduced=3.0)));

void *IOSurfaceGetBaseAddressOfPlane(IOSurfaceRef buffer, size_t planeIndex)
 __attribute__((availability(ios,introduced=3.0)));

size_t IOSurfaceGetElementWidthOfPlane(IOSurfaceRef buffer, size_t planeIndex)
 __attribute__((availability(ios,introduced=3.0)));

size_t IOSurfaceGetElementHeightOfPlane(IOSurfaceRef buffer, size_t planeIndex)
 __attribute__((availability(ios,introduced=3.0)));




size_t IOSurfaceGetNumberOfComponentsOfPlane(IOSurfaceRef buffer, size_t planeIndex)
__attribute__((availability(ios,introduced=11.0)));

IOSurfaceComponentName IOSurfaceGetNameOfComponentOfPlane(IOSurfaceRef buffer, size_t planeIndex, size_t componentIndex)
__attribute__((availability(ios,introduced=11.0)));

IOSurfaceComponentType IOSurfaceGetTypeOfComponentOfPlane(IOSurfaceRef buffer, size_t planeIndex, size_t componentIndex)
__attribute__((availability(ios,introduced=11.0)));

IOSurfaceComponentRange IOSurfaceGetRangeOfComponentOfPlane(IOSurfaceRef buffer, size_t planeIndex, size_t componentIndex)
__attribute__((availability(ios,introduced=11.0)));

size_t IOSurfaceGetBitDepthOfComponentOfPlane(IOSurfaceRef buffer, size_t planeIndex, size_t componentIndex)
__attribute__((availability(ios,introduced=11.0)));

size_t IOSurfaceGetBitOffsetOfComponentOfPlane(IOSurfaceRef buffer, size_t planeIndex, size_t componentIndex)
__attribute__((availability(ios,introduced=11.0)));

IOSurfaceSubsampling IOSurfaceGetSubsampling(IOSurfaceRef buffer)
__attribute__((availability(ios,introduced=11.0)));




void IOSurfaceSetValue(IOSurfaceRef buffer, CFStringRef key, CFTypeRef value)
 __attribute__((availability(ios,introduced=3.0)));

CFTypeRef _Nullable IOSurfaceCopyValue(IOSurfaceRef buffer, CFStringRef key)
 __attribute__((availability(ios,introduced=3.0)));

void IOSurfaceRemoveValue(IOSurfaceRef buffer, CFStringRef key)
 __attribute__((availability(ios,introduced=3.0)));



void IOSurfaceSetValues(IOSurfaceRef buffer, CFDictionaryRef keysAndValues)
 __attribute__((availability(ios,introduced=3.0)));

CFDictionaryRef _Nullable IOSurfaceCopyAllValues(IOSurfaceRef buffer)
 __attribute__((availability(ios,introduced=3.0)));

void IOSurfaceRemoveAllValues(IOSurfaceRef buffer)
 __attribute__((availability(ios,introduced=3.0)));






mach_port_t IOSurfaceCreateMachPort(IOSurfaceRef buffer)
 __attribute__((availability(ios,introduced=3.0)));



IOSurfaceRef _Nullable IOSurfaceLookupFromMachPort(mach_port_t port) __attribute__((cf_returns_retained))
 __attribute__((availability(ios,introduced=3.0)));
size_t IOSurfaceGetPropertyMaximum(CFStringRef property)
 __attribute__((availability(ios,introduced=3.0)));
size_t IOSurfaceGetPropertyAlignment(CFStringRef property)
 __attribute__((availability(ios,introduced=3.0)));



size_t IOSurfaceAlignProperty(CFStringRef property, size_t value)
 __attribute__((availability(ios,introduced=3.0)));
void IOSurfaceIncrementUseCount(IOSurfaceRef buffer)
 __attribute__((availability(ios,introduced=3.0)));


void IOSurfaceDecrementUseCount(IOSurfaceRef buffer)
 __attribute__((availability(ios,introduced=3.0)));


int32_t IOSurfaceGetUseCount(IOSurfaceRef buffer)
 __attribute__((availability(ios,introduced=3.0)));


Boolean IOSurfaceIsInUse(IOSurfaceRef buffer)
 __attribute__((availability(ios,introduced=3.0)));


Boolean IOSurfaceAllowsPixelSizeCasting(IOSurfaceRef buffer)
 __attribute__((availability(ios,introduced=10.0)));
kern_return_t IOSurfaceSetPurgeable(IOSurfaceRef buffer, uint32_t newState, uint32_t * _Nullable oldState)
 __attribute__((availability(ios,introduced=10.0)));

}
#pragma clang assume_nonnull end
extern "C" {



 __attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelBufferIOSurfaceOpenGLTextureCompatibilityKey __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));

 __attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelBufferIOSurfaceOpenGLFBOCompatibilityKey __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));

__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelBufferIOSurfaceCoreAnimationCompatibilityKey __attribute__((availability(ios,introduced=4.0)));


__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelBufferIOSurfaceOpenGLESTextureCompatibilityKey __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macosx,unavailable))) __attribute__((availability(watchos,unavailable)));

__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelBufferIOSurfaceOpenGLESFBOCompatibilityKey __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macosx,unavailable))) __attribute__((availability(watchos,unavailable)));
__attribute__((visibility("default"))) extern IOSurfaceRef _Nullable CVPixelBufferGetIOSurface(CVPixelBufferRef _Nullable pixelBuffer) __attribute__((availability(macosx,introduced=10.6))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=4.0)));
__attribute__((visibility("default"))) extern CVReturn CVPixelBufferCreateWithIOSurface(
  CFAllocatorRef _Nullable allocator,
  IOSurfaceRef _Nonnull surface,
  CFDictionaryRef _Nullable pixelBufferAttributes,
  CVPixelBufferRef _Nullable * _Nonnull pixelBufferOut) __attribute__((availability(ios,introduced=4.0)));





}
extern "C" {


typedef struct __attribute__((objc_bridge(id))) __CVPixelBufferPool *CVPixelBufferPoolRef;




__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelBufferPoolMinimumBufferCountKey __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelBufferPoolMaximumBufferAgeKey __attribute__((availability(ios,introduced=4.0)));


__attribute__((visibility("default"))) extern CFTypeID CVPixelBufferPoolGetTypeID(void) __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern CVPixelBufferPoolRef _Nullable CVPixelBufferPoolRetain( CVPixelBufferPoolRef _Nullable pixelBufferPool ) __attribute__((availability(ios,introduced=4.0)));







__attribute__((visibility("default"))) extern void CVPixelBufferPoolRelease( __attribute__((cf_consumed)) CVPixelBufferPoolRef _Nullable pixelBufferPool ) __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern CVReturn CVPixelBufferPoolCreate(
    CFAllocatorRef _Nullable allocator,
    CFDictionaryRef _Nullable poolAttributes,
    CFDictionaryRef _Nullable pixelBufferAttributes,
    __attribute__((cf_returns_retained)) CVPixelBufferPoolRef _Nullable * _Nonnull poolOut ) __attribute__((availability(ios,introduced=4.0)));







__attribute__((visibility("default"))) extern CFDictionaryRef __attribute__((cf_returns_not_retained)) _Nullable CVPixelBufferPoolGetAttributes( CVPixelBufferPoolRef _Nonnull pool ) __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern CFDictionaryRef __attribute__((cf_returns_not_retained)) _Nullable CVPixelBufferPoolGetPixelBufferAttributes( CVPixelBufferPoolRef _Nonnull pool ) __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern CVReturn CVPixelBufferPoolCreatePixelBuffer(
    CFAllocatorRef _Nullable allocator,
    CVPixelBufferPoolRef _Nonnull pixelBufferPool,
    __attribute__((cf_returns_retained)) CVPixelBufferRef _Nullable * _Nonnull pixelBufferOut ) __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern CVReturn CVPixelBufferPoolCreatePixelBufferWithAuxAttributes(
    CFAllocatorRef _Nullable allocator,
    CVPixelBufferPoolRef _Nonnull pixelBufferPool,
    CFDictionaryRef _Nullable auxAttributes,
    __attribute__((cf_returns_retained)) CVPixelBufferRef _Nullable * _Nonnull pixelBufferOut ) __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelBufferPoolAllocationThresholdKey __attribute__((availability(ios,introduced=4.0)));





__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelBufferPoolFreeBufferNotification __attribute__((availability(ios,introduced=4.0)));
typedef CVOptionFlags CVPixelBufferPoolFlushFlags; enum
{
 kCVPixelBufferPoolFlushExcessBuffers = 1,
};
__attribute__((visibility("default"))) extern void CVPixelBufferPoolFlush( CVPixelBufferPoolRef _Nonnull pool, CVPixelBufferPoolFlushFlags options );



}








typedef uint32_t GLbitfield;
typedef uint8_t GLboolean;
typedef int8_t GLbyte;
typedef float GLclampf;
typedef uint32_t GLenum;
typedef float GLfloat;
typedef int32_t GLint;
typedef int16_t GLshort;
typedef int32_t GLsizei;
typedef uint8_t GLubyte;
typedef uint32_t GLuint;
typedef uint16_t GLushort;
typedef void GLvoid;


typedef char GLchar;

typedef int32_t GLclampx;
typedef int32_t GLfixed;

typedef uint16_t GLhalf;


typedef int64_t GLint64;
typedef struct __GLsync *GLsync;
typedef uint64_t GLuint64;

typedef intptr_t GLintptr;
typedef intptr_t GLsizeiptr;



extern "C" {
typedef CVImageBufferRef CVOpenGLESTextureRef;

__attribute__((visibility("default"))) extern CFTypeID CVOpenGLESTextureGetTypeID(void) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macosx,unavailable))) __attribute__((availability(watchos,unavailable)));
__attribute__((visibility("default"))) extern GLenum CVOpenGLESTextureGetTarget( CVOpenGLESTextureRef _Nonnull image ) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macosx,unavailable))) __attribute__((availability(watchos,unavailable)));







__attribute__((visibility("default"))) extern GLuint CVOpenGLESTextureGetName( CVOpenGLESTextureRef _Nonnull image ) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macosx,unavailable))) __attribute__((availability(watchos,unavailable)));







__attribute__((visibility("default"))) extern Boolean CVOpenGLESTextureIsFlipped( CVOpenGLESTextureRef _Nonnull image ) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macosx,unavailable))) __attribute__((availability(watchos,unavailable)));
__attribute__((visibility("default"))) extern void CVOpenGLESTextureGetCleanTexCoords( CVOpenGLESTextureRef _Nonnull image,
                                                   GLfloat lowerLeft[_Nonnull 2],
                                                   GLfloat lowerRight[_Nonnull 2],
                                                   GLfloat upperRight[_Nonnull 2],
                                                   GLfloat upperLeft[_Nonnull 2] ) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macosx,unavailable))) __attribute__((availability(watchos,unavailable)));


}
extern "C" {







typedef struct __attribute__((objc_bridge(id))) __CVOpenGLESTextureCache *CVOpenGLESTextureCacheRef;






// @class EAGLContext;
#ifndef _REWRITER_typedef_EAGLContext
#define _REWRITER_typedef_EAGLContext
typedef struct objc_object EAGLContext;
typedef struct {} _objc_exc_EAGLContext;
#endif

typedef EAGLContext *CVEAGLContext;
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVOpenGLESTextureCacheMaximumTextureAgeKey __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macosx,unavailable))) __attribute__((availability(watchos,unavailable)));




__attribute__((visibility("default"))) extern CFTypeID CVOpenGLESTextureCacheGetTypeID(void) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macosx,unavailable))) __attribute__((availability(watchos,unavailable)));
__attribute__((visibility("default"))) extern CVReturn CVOpenGLESTextureCacheCreate(
    CFAllocatorRef _Nullable allocator,
    CFDictionaryRef _Nullable cacheAttributes,
    CVEAGLContext _Nonnull eaglContext,
    CFDictionaryRef _Nullable textureAttributes,
    __attribute__((cf_returns_retained)) CVOpenGLESTextureCacheRef _Nullable * _Nonnull cacheOut) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macosx,unavailable))) __attribute__((availability(watchos,unavailable)));
__attribute__((visibility("default"))) extern CVReturn CVOpenGLESTextureCacheCreateTextureFromImage(
    CFAllocatorRef _Nullable allocator,
    CVOpenGLESTextureCacheRef _Nonnull textureCache,
    CVImageBufferRef _Nonnull sourceImage,
    CFDictionaryRef _Nullable textureAttributes,
    GLenum target,
    GLint internalFormat,
    GLsizei width,
    GLsizei height,
    GLenum format,
    GLenum type,
    size_t planeIndex,
    __attribute__((cf_returns_retained)) CVOpenGLESTextureRef _Nullable * _Nonnull textureOut ) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macosx,unavailable))) __attribute__((availability(watchos,unavailable)));
__attribute__((visibility("default"))) extern void CVOpenGLESTextureCacheFlush( CVOpenGLESTextureCacheRef _Nonnull textureCache, CVOptionFlags options ) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macosx,unavailable))) __attribute__((availability(watchos,unavailable)));


}


extern "C" {





__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatName __attribute__((availability(ios,introduced=4.0)));


__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatConstant __attribute__((availability(ios,introduced=4.0)));


__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatCodecType __attribute__((availability(ios,introduced=4.0)));


__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatFourCC __attribute__((availability(ios,introduced=4.0)));



__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatContainsAlpha __attribute__((availability(ios,introduced=4.3)));


__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatContainsYCbCr __attribute__((availability(ios,introduced=8.0)));


__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatContainsRGB __attribute__((availability(ios,introduced=8.0)));

__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatComponentRange __attribute__((availability(ios,introduced=9.0)));

__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatComponentRange_VideoRange __attribute__((availability(ios,introduced=9.0)));

__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatComponentRange_FullRange __attribute__((availability(ios,introduced=9.0)));

__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatComponentRange_WideRange __attribute__((availability(ios,introduced=9.0)));




__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatPlanes __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatBlockWidth __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatBlockHeight __attribute__((availability(ios,introduced=4.0)));



__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatBitsPerBlock __attribute__((availability(ios,introduced=4.0)));




__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatBlockHorizontalAlignment __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatBlockVerticalAlignment __attribute__((availability(ios,introduced=4.0)));




__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatBlackBlock __attribute__((availability(ios,introduced=4.0)));


__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatHorizontalSubsampling __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatVerticalSubsampling __attribute__((availability(ios,introduced=4.0)));



__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatOpenGLFormat __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatOpenGLType __attribute__((availability(ios,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatOpenGLInternalFormat __attribute__((availability(ios,introduced=4.0)));


__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatCGBitmapInfo __attribute__((availability(ios,introduced=4.0)));


__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatQDCompatibility __attribute__((availability(macosx,introduced=10.4))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatCGBitmapContextCompatibility __attribute__((availability(macosx,introduced=10.4))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatCGImageCompatibility __attribute__((availability(macosx,introduced=10.4))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatOpenGLCompatibility __attribute__((availability(macosx,introduced=10.4))) __attribute__((availability(ios,introduced=4.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,introduced=4.0)));
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatOpenGLESCompatibility __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(macosx,unavailable))) __attribute__((availability(watchos,unavailable)));



typedef Boolean (*CVFillExtendedPixelsCallBack)(CVPixelBufferRef _Nonnull pixelBuffer, void * _Nullable refCon);
typedef struct {
    CFIndex version;
    CVFillExtendedPixelsCallBack _Nullable fillCallBack;
    void * _Nullable refCon;
} CVFillExtendedPixelsCallBackData;


__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVPixelFormatFillExtendedPixelsCallback __attribute__((availability(ios,introduced=4.0)));


__attribute__((visibility("default"))) extern CFDictionaryRef __attribute__((cf_returns_retained)) _Nullable CVPixelFormatDescriptionCreateWithPixelFormatType(CFAllocatorRef _Nullable allocator, OSType pixelFormat) __attribute__((availability(ios,introduced=4.0)));


__attribute__((visibility("default"))) extern CFArrayRef __attribute__((cf_returns_retained)) _Nullable CVPixelFormatDescriptionArrayCreateWithAllPixelFormatTypes(CFAllocatorRef _Nullable allocator) __attribute__((availability(ios,introduced=4.0)));


__attribute__((visibility("default"))) extern void CVPixelFormatDescriptionRegisterDescriptionWithPixelFormatType(CFDictionaryRef _Nonnull description, OSType pixelFormat) __attribute__((availability(ios,introduced=4.0)));
}



extern "C" {





// @protocol MTLTexture;
typedef CVImageBufferRef CVMetalTextureRef;

__attribute__((visibility("default"))) extern CFTypeID CVMetalTextureGetTypeID(void) __attribute__((availability(macosx,introduced=10.11))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,unavailable)));







__attribute__((visibility("default"))) extern id /*<MTLTexture>*/ _Nullable CVMetalTextureGetTexture( CVMetalTextureRef _Nonnull image ) __attribute__((availability(macosx,introduced=10.11))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,unavailable)));







__attribute__((visibility("default"))) extern Boolean CVMetalTextureIsFlipped( CVMetalTextureRef _Nonnull image ) __attribute__((availability(macosx,introduced=10.11))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,unavailable)));
__attribute__((visibility("default"))) extern void CVMetalTextureGetCleanTexCoords( CVMetalTextureRef _Nonnull image,
                                                   float lowerLeft[2],
                                                   float lowerRight[2],
                                                   float upperRight[2],
                                                   float upperLeft[2] ) __attribute__((availability(macosx,introduced=10.11))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,unavailable)));





__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVMetalTextureUsage __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,unavailable)));




}
extern "C" {
__attribute__((visibility("default"))) extern const CFStringRef _Nonnull kCVMetalTextureCacheMaximumTextureAgeKey __attribute__((availability(macosx,introduced=10.11))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,unavailable)));
// @protocol MTLDevice;






typedef struct __attribute__((objc_bridge(id))) __CVMetalTextureCache *CVMetalTextureCacheRef;

__attribute__((visibility("default"))) extern CFTypeID CVMetalTextureCacheGetTypeID(void) __attribute__((availability(macosx,introduced=10.11))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,unavailable)));
__attribute__((visibility("default"))) extern CVReturn CVMetalTextureCacheCreate(
     CFAllocatorRef _Nullable allocator,
     CFDictionaryRef _Nullable cacheAttributes,
     id /*<MTLDevice>*/ _Nonnull metalDevice,
     CFDictionaryRef _Nullable textureAttributes,
     __attribute__((cf_returns_retained)) CVMetalTextureCacheRef _Nullable * _Nonnull cacheOut ) __attribute__((availability(macosx,introduced=10.11))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,unavailable)));
__attribute__((visibility("default"))) extern CVReturn CVMetalTextureCacheCreateTextureFromImage(
            CFAllocatorRef _Nullable allocator,
            CVMetalTextureCacheRef _Nonnull textureCache,
            CVImageBufferRef _Nonnull sourceImage,
            CFDictionaryRef _Nullable textureAttributes,
               MTLPixelFormat pixelFormat,
               size_t width,
               size_t height,
               size_t planeIndex,
            __attribute__((cf_returns_retained)) CVMetalTextureRef _Nullable * _Nonnull textureOut ) __attribute__((availability(macosx,introduced=10.11))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,unavailable)));
__attribute__((visibility("default"))) extern void CVMetalTextureCacheFlush(CVMetalTextureCacheRef _Nonnull textureCache, CVOptionFlags options) __attribute__((availability(macosx,introduced=10.11))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(tvos,introduced=9.0))) __attribute__((availability(watchos,unavailable)));




}

typedef struct __attribute__((objc_bridge(id))) CGImageSource * CGImageSourceRef;


typedef const struct __attribute__((objc_bridge(id))) CGImageMetadata *CGImageMetadataRef;







extern "C" CFTypeID CGImageMetadataGetTypeID(void);







typedef struct __attribute__((objc_bridge(id))) CGImageMetadata *CGMutableImageMetadataRef;





extern "C" CGMutableImageMetadataRef _Nonnull CGImageMetadataCreateMutable(void) __attribute__((availability(ios,introduced=7.0)));
extern "C" CGMutableImageMetadataRef _Nullable CGImageMetadataCreateMutableCopy(CGImageMetadataRef _Nonnull metadata) __attribute__((availability(ios,introduced=7.0)));
typedef struct __attribute__((objc_bridge(id))) CGImageMetadataTag *CGImageMetadataTagRef;







extern "C" CFTypeID CGImageMetadataTagGetTypeID(void) __attribute__((availability(ios,introduced=7.0)));






#pragma clang assume_nonnull begin
extern "C" const CFStringRef kCGImageMetadataNamespaceExif __attribute__((availability(ios,introduced=7.0)));
extern "C" const CFStringRef kCGImageMetadataNamespaceExifAux __attribute__((availability(ios,introduced=7.0)));
extern "C" const CFStringRef kCGImageMetadataNamespaceExifEX __attribute__((availability(ios,introduced=7.0)));
extern "C" const CFStringRef kCGImageMetadataNamespaceDublinCore __attribute__((availability(ios,introduced=7.0)));
extern "C" const CFStringRef kCGImageMetadataNamespaceIPTCCore __attribute__((availability(ios,introduced=7.0)));
extern "C" const CFStringRef kCGImageMetadataNamespaceIPTCExtension __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImageMetadataNamespacePhotoshop __attribute__((availability(ios,introduced=7.0)));
extern "C" const CFStringRef kCGImageMetadataNamespaceTIFF __attribute__((availability(ios,introduced=7.0)));
extern "C" const CFStringRef kCGImageMetadataNamespaceXMPBasic __attribute__((availability(ios,introduced=7.0)));
extern "C" const CFStringRef kCGImageMetadataNamespaceXMPRights __attribute__((availability(ios,introduced=7.0)));
extern "C" const CFStringRef kCGImageMetadataPrefixExif __attribute__((availability(ios,introduced=7.0)));
extern "C" const CFStringRef kCGImageMetadataPrefixExifAux __attribute__((availability(ios,introduced=7.0)));
extern "C" const CFStringRef kCGImageMetadataPrefixExifEX __attribute__((availability(ios,introduced=7.0)));
extern "C" const CFStringRef kCGImageMetadataPrefixDublinCore __attribute__((availability(ios,introduced=7.0)));
extern "C" const CFStringRef kCGImageMetadataPrefixIPTCCore __attribute__((availability(ios,introduced=7.0)));
extern "C" const CFStringRef kCGImageMetadataPrefixIPTCExtension __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImageMetadataPrefixPhotoshop __attribute__((availability(ios,introduced=7.0)));
extern "C" const CFStringRef kCGImageMetadataPrefixTIFF __attribute__((availability(ios,introduced=7.0)));
extern "C" const CFStringRef kCGImageMetadataPrefixXMPBasic __attribute__((availability(ios,introduced=7.0)));
extern "C" const CFStringRef kCGImageMetadataPrefixXMPRights __attribute__((availability(ios,introduced=7.0)));
#pragma clang assume_nonnull end
typedef int32_t CGImageMetadataType; enum {
    kCGImageMetadataTypeInvalid = -1,
    kCGImageMetadataTypeDefault = 0,
    kCGImageMetadataTypeString = 1,
    kCGImageMetadataTypeArrayUnordered = 2,
    kCGImageMetadataTypeArrayOrdered = 3,
    kCGImageMetadataTypeAlternateArray = 4,
    kCGImageMetadataTypeAlternateText = 5,
    kCGImageMetadataTypeStructure = 6
};
extern "C" CGImageMetadataTagRef _Nullable CGImageMetadataTagCreate (CFStringRef _Nonnull xmlns, CFStringRef _Nullable prefix, CFStringRef _Nonnull name, CGImageMetadataType type, CFTypeRef _Nonnull value) __attribute__((availability(ios,introduced=7.0)));
extern "C" CFStringRef _Nullable CGImageMetadataTagCopyNamespace(CGImageMetadataTagRef _Nonnull tag) __attribute__((availability(ios,introduced=7.0)));





extern "C" CFStringRef _Nullable CGImageMetadataTagCopyPrefix(CGImageMetadataTagRef _Nonnull tag) __attribute__((availability(ios,introduced=7.0)));





extern "C" CFStringRef _Nullable CGImageMetadataTagCopyName(CGImageMetadataTagRef _Nonnull tag) __attribute__((availability(ios,introduced=7.0)));
extern "C" CFTypeRef _Nullable CGImageMetadataTagCopyValue(CGImageMetadataTagRef _Nonnull tag) __attribute__((availability(ios,introduced=7.0)));







extern "C" CGImageMetadataType CGImageMetadataTagGetType(CGImageMetadataTagRef _Nonnull tag) __attribute__((availability(ios,introduced=7.0)));
extern "C" CFArrayRef _Nullable CGImageMetadataTagCopyQualifiers(CGImageMetadataTagRef _Nonnull tag) __attribute__((availability(ios,introduced=7.0)));
extern "C" CFArrayRef _Nullable CGImageMetadataCopyTags(CGImageMetadataRef _Nonnull metadata) __attribute__((availability(ios,introduced=7.0)));
extern "C" CGImageMetadataTagRef _Nullable CGImageMetadataCopyTagWithPath(CGImageMetadataRef _Nonnull metadata, CGImageMetadataTagRef _Nullable parent, CFStringRef _Nonnull path) __attribute__((availability(ios,introduced=7.0)));
extern "C" CFStringRef _Nullable CGImageMetadataCopyStringValueWithPath(CGImageMetadataRef _Nonnull metadata, CGImageMetadataTagRef _Nullable parent, CFStringRef _Nonnull path) __attribute__((availability(ios,introduced=7.0)));
extern "C" bool CGImageMetadataRegisterNamespaceForPrefix(CGMutableImageMetadataRef _Nonnull metadata, CFStringRef _Nonnull xmlns, CFStringRef _Nonnull prefix, _Nullable CFErrorRef * _Nullable err) __attribute__((availability(ios,introduced=7.0)));
extern "C" bool CGImageMetadataSetTagWithPath(CGMutableImageMetadataRef _Nonnull metadata, CGImageMetadataTagRef _Nullable parent, CFStringRef _Nonnull path, CGImageMetadataTagRef _Nonnull tag) __attribute__((availability(ios,introduced=7.0)));
extern "C" bool CGImageMetadataSetValueWithPath(CGMutableImageMetadataRef _Nonnull metadata, CGImageMetadataTagRef _Nullable parent, CFStringRef _Nonnull path, CFTypeRef _Nonnull value) __attribute__((availability(ios,introduced=7.0)));
extern "C" bool CGImageMetadataRemoveTagWithPath(CGMutableImageMetadataRef _Nonnull metadata, CGImageMetadataTagRef _Nullable parent, CFStringRef _Nonnull path) __attribute__((availability(ios,introduced=7.0)));
typedef bool(*CGImageMetadataTagBlock)(CFStringRef _Nonnull path, CGImageMetadataTagRef _Nonnull tag);
extern "C" void CGImageMetadataEnumerateTagsUsingBlock(CGImageMetadataRef _Nonnull metadata, CFStringRef _Nullable rootPath, CFDictionaryRef _Nullable options, CGImageMetadataTagBlock _Nonnull block) __attribute__((availability(ios,introduced=7.0)));






extern "C" const CFStringRef _Nonnull kCGImageMetadataEnumerateRecursively __attribute__((availability(ios,introduced=7.0)));
extern "C" CGImageMetadataTagRef _Nullable CGImageMetadataCopyTagMatchingImageProperty(CGImageMetadataRef _Nonnull metadata, CFStringRef _Nonnull dictionaryName, CFStringRef _Nonnull propertyName) __attribute__((availability(ios,introduced=7.0)));
extern "C" bool CGImageMetadataSetValueMatchingImageProperty(CGMutableImageMetadataRef _Nonnull metadata, CFStringRef _Nonnull dictionaryName, CFStringRef _Nonnull propertyName, CFTypeRef _Nonnull value) __attribute__((availability(ios,introduced=7.0)));
extern "C" CFDataRef _Nullable CGImageMetadataCreateXMPData (CGImageMetadataRef _Nonnull metadata, CFDictionaryRef _Nullable options) __attribute__((availability(ios,introduced=7.0)));
extern "C" CGImageMetadataRef _Nullable CGImageMetadataCreateFromXMPData (CFDataRef _Nonnull data) __attribute__((availability(ios,introduced=7.0)));






extern "C" const CFStringRef _Nonnull kCFErrorDomainCGImageMetadata;





typedef int32_t CGImageMetadataErrors; enum {
    kCGImageMetadataErrorUnknown = 0,
    kCGImageMetadataErrorUnsupportedFormat = 1,
    kCGImageMetadataErrorBadArgument = 2,
    kCGImageMetadataErrorConflictingArguments = 3,
    kCGImageMetadataErrorPrefixConflict = 4,
};



typedef int32_t CGImageSourceStatus; enum {
    kCGImageStatusUnexpectedEOF = -5,
    kCGImageStatusInvalidData = -4,
    kCGImageStatusUnknownType = -3,
    kCGImageStatusReadingHeader = -2,
    kCGImageStatusIncomplete = -1,
    kCGImageStatusComplete = 0
};

#pragma clang assume_nonnull begin








extern "C" const CFStringRef kCGImageSourceTypeIdentifierHint __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImageSourceShouldCache __attribute__((availability(ios,introduced=4.0)));





extern "C" const CFStringRef kCGImageSourceShouldCacheImmediately __attribute__((availability(ios,introduced=7.0)));







extern "C" const CFStringRef kCGImageSourceShouldAllowFloat __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImageSourceCreateThumbnailFromImageIfAbsent __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImageSourceCreateThumbnailFromImageAlways __attribute__((availability(ios,introduced=4.0)));






extern "C" const CFStringRef kCGImageSourceThumbnailMaxPixelSize __attribute__((availability(ios,introduced=4.0)));






extern "C" const CFStringRef kCGImageSourceCreateThumbnailWithTransform __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImageSourceSubsampleFactor __attribute__((availability(ios,introduced=9.0)));
#pragma clang assume_nonnull end





extern "C" CFTypeID CGImageSourceGetTypeID (void) __attribute__((availability(ios,introduced=4.0)));



extern "C" CFArrayRef _Nonnull CGImageSourceCopyTypeIdentifiers(void) __attribute__((availability(ios,introduced=4.0)));





extern "C" CGImageSourceRef _Nullable CGImageSourceCreateWithDataProvider(CGDataProviderRef _Nonnull provider, CFDictionaryRef _Nullable options) __attribute__((availability(ios,introduced=4.0)));





extern "C" CGImageSourceRef _Nullable CGImageSourceCreateWithData(CFDataRef _Nonnull data, CFDictionaryRef _Nullable options) __attribute__((availability(ios,introduced=4.0)));





extern "C" CGImageSourceRef _Nullable CGImageSourceCreateWithURL(CFURLRef _Nonnull url, CFDictionaryRef _Nullable options) __attribute__((availability(ios,introduced=4.0)));






extern "C" CFStringRef _Nullable CGImageSourceGetType(CGImageSourceRef _Nonnull isrc) __attribute__((availability(ios,introduced=4.0)));




extern "C" size_t CGImageSourceGetCount(CGImageSourceRef _Nonnull isrc) __attribute__((availability(ios,introduced=4.0)));





extern "C" CFDictionaryRef _Nullable CGImageSourceCopyProperties(CGImageSourceRef _Nonnull isrc, CFDictionaryRef _Nullable options) __attribute__((availability(ios,introduced=4.0)));






extern "C" CFDictionaryRef _Nullable CGImageSourceCopyPropertiesAtIndex(CGImageSourceRef _Nonnull isrc, size_t index, CFDictionaryRef _Nullable options) __attribute__((availability(ios,introduced=4.0)));





extern "C" CGImageMetadataRef _Nullable CGImageSourceCopyMetadataAtIndex (CGImageSourceRef _Nonnull isrc, size_t index, CFDictionaryRef _Nullable options) __attribute__((availability(ios,introduced=7.0)));





extern "C" CGImageRef _Nullable CGImageSourceCreateImageAtIndex(CGImageSourceRef _Nonnull isrc, size_t index, CFDictionaryRef _Nullable options) __attribute__((availability(ios,introduced=4.0)));




extern "C" void CGImageSourceRemoveCacheAtIndex(CGImageSourceRef _Nonnull isrc, size_t index) __attribute__((availability(ios,introduced=7.0)));






extern "C" CGImageRef _Nullable CGImageSourceCreateThumbnailAtIndex(CGImageSourceRef _Nonnull isrc, size_t index, CFDictionaryRef _Nullable options) __attribute__((availability(ios,introduced=4.0)));







extern "C" CGImageSourceRef _Nonnull CGImageSourceCreateIncremental(CFDictionaryRef _Nullable options) __attribute__((availability(ios,introduced=4.0)));






extern "C" void CGImageSourceUpdateData(CGImageSourceRef _Nonnull isrc, CFDataRef _Nonnull data, bool final) __attribute__((availability(ios,introduced=4.0)));






extern "C" void CGImageSourceUpdateDataProvider(CGImageSourceRef _Nonnull isrc, CGDataProviderRef _Nonnull provider, bool final) __attribute__((availability(ios,introduced=4.0)));





extern "C" CGImageSourceStatus CGImageSourceGetStatus(CGImageSourceRef _Nonnull isrc) __attribute__((availability(ios,introduced=4.0)));






extern "C" CGImageSourceStatus CGImageSourceGetStatusAtIndex(CGImageSourceRef _Nonnull isrc, size_t index) __attribute__((availability(ios,introduced=4.0)));
extern "C" CFDictionaryRef _Nullable CGImageSourceCopyAuxiliaryDataInfoAtIndex(CGImageSourceRef _Nonnull isrc, size_t index, CFStringRef _Nonnull auxiliaryImageDataType ) __attribute__((availability(ios,introduced=11.0)));

typedef struct __attribute__((objc_bridge(id))) CGImageDestination * CGImageDestinationRef;
#pragma clang assume_nonnull begin








extern "C" const CFStringRef kCGImageDestinationLossyCompressionQuality __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImageDestinationBackgroundColor __attribute__((availability(ios,introduced=4.0)));




extern "C" const CFStringRef kCGImageDestinationImageMaxPixelSize __attribute__((availability(ios,introduced=8.0)));




extern "C" const CFStringRef kCGImageDestinationEmbedThumbnail __attribute__((availability(ios,introduced=8.0)));






extern "C" const CFStringRef kCGImageDestinationOptimizeColorForSharing __attribute__((availability(ios,introduced=9.3)));
#pragma clang assume_nonnull end





extern "C" CFTypeID CGImageDestinationGetTypeID(void) __attribute__((availability(ios,introduced=4.0)));



extern "C" CFArrayRef _Nonnull CGImageDestinationCopyTypeIdentifiers(void) __attribute__((availability(ios,introduced=4.0)));
extern "C" CGImageDestinationRef _Nullable CGImageDestinationCreateWithDataConsumer(CGDataConsumerRef _Nonnull consumer, CFStringRef _Nonnull type, size_t count, CFDictionaryRef _Nullable options) __attribute__((availability(ios,introduced=4.0)));







extern "C" CGImageDestinationRef _Nullable CGImageDestinationCreateWithData(CFMutableDataRef _Nonnull data, CFStringRef _Nonnull type, size_t count, CFDictionaryRef _Nullable options) __attribute__((availability(ios,introduced=4.0)));
extern "C" CGImageDestinationRef _Nullable CGImageDestinationCreateWithURL(CFURLRef _Nonnull url, CFStringRef _Nonnull type, size_t count, CFDictionaryRef _Nullable options) __attribute__((availability(ios,introduced=4.0)));




extern "C" void CGImageDestinationSetProperties(CGImageDestinationRef _Nonnull idst, CFDictionaryRef _Nullable properties) __attribute__((availability(ios,introduced=4.0)));






extern "C" void CGImageDestinationAddImage(CGImageDestinationRef _Nonnull idst, CGImageRef _Nonnull image, CFDictionaryRef _Nullable properties) __attribute__((availability(ios,introduced=4.0)));
extern "C" void CGImageDestinationAddImageFromSource(CGImageDestinationRef _Nonnull idst, CGImageSourceRef _Nonnull isrc, size_t index, CFDictionaryRef _Nullable properties) __attribute__((availability(ios,introduced=4.0)));







extern "C" bool CGImageDestinationFinalize(CGImageDestinationRef _Nonnull idst) __attribute__((availability(ios,introduced=4.0)));






extern "C" void CGImageDestinationAddImageAndMetadata(CGImageDestinationRef _Nonnull idst, CGImageRef _Nonnull image, CGImageMetadataRef _Nullable metadata, CFDictionaryRef _Nullable options) __attribute__((availability(ios,introduced=7.0)));






#pragma clang assume_nonnull begin






extern "C" const CFStringRef kCGImageDestinationMetadata __attribute__((availability(ios,introduced=7.0)));
extern "C" const CFStringRef kCGImageDestinationMergeMetadata __attribute__((availability(ios,introduced=7.0)));






extern "C" const CFStringRef kCGImageMetadataShouldExcludeXMP __attribute__((availability(ios,introduced=7.0)));







extern "C" const CFStringRef kCGImageMetadataShouldExcludeGPS __attribute__((availability(ios,introduced=8.0)));







extern "C" const CFStringRef kCGImageDestinationDateTime __attribute__((availability(ios,introduced=7.0)));





extern "C" const CFStringRef kCGImageDestinationOrientation __attribute__((availability(ios,introduced=7.0)));
#pragma clang assume_nonnull end
extern "C" bool CGImageDestinationCopyImageSource(CGImageDestinationRef _Nonnull idst, CGImageSourceRef _Nonnull isrc, CFDictionaryRef _Nullable options, _Nullable CFErrorRef * _Nullable err) __attribute__((availability(ios,introduced=7.0)));
extern "C" void CGImageDestinationAddAuxiliaryDataInfo(CGImageDestinationRef _Nonnull idst, CFStringRef _Nonnull auxiliaryImageDataType, CFDictionaryRef _Nonnull auxiliaryDataInfoDictionary ) __attribute__((availability(ios,introduced=11.0)));

#pragma clang assume_nonnull begin





extern "C" const CFStringRef kCGImagePropertyTIFFDictionary __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyGIFDictionary __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyJFIFDictionary __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifDictionary __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyPNGDictionary __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCDictionary __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyGPSDictionary __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyRawDictionary __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyCIFFDictionary __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyMakerCanonDictionary __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyMakerNikonDictionary __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyMakerMinoltaDictionary __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyMakerFujiDictionary __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyMakerOlympusDictionary __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyMakerPentaxDictionary __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImageProperty8BIMDictionary __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyDNGDictionary __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifAuxDictionary __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyOpenEXRDictionary __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyMakerAppleDictionary __attribute__((availability(ios,introduced=7.0)));
extern "C" const CFStringRef kCGImagePropertyFileContentsDictionary __attribute__((availability(ios,introduced=11.0)));
extern "C" const CFStringRef kCGImagePropertyFileSize __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyPixelHeight __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyPixelWidth __attribute__((availability(ios,introduced=4.0)));




extern "C" const CFStringRef kCGImagePropertyDPIHeight __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyDPIWidth __attribute__((availability(ios,introduced=4.0)));




extern "C" const CFStringRef kCGImagePropertyDepth __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyOrientation __attribute__((availability(ios,introduced=4.0)));




extern "C" const CFStringRef kCGImagePropertyIsFloat __attribute__((availability(ios,introduced=4.0)));




extern "C" const CFStringRef kCGImagePropertyIsIndexed __attribute__((availability(ios,introduced=4.0)));




extern "C" const CFStringRef kCGImagePropertyHasAlpha __attribute__((availability(ios,introduced=4.0)));




extern "C" const CFStringRef kCGImagePropertyColorModel __attribute__((availability(ios,introduced=4.0)));




extern "C" const CFStringRef kCGImagePropertyProfileName __attribute__((availability(ios,introduced=4.0)));




extern "C" const CFStringRef kCGImagePropertyColorModelRGB __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyColorModelGray __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyColorModelCMYK __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyColorModelLab __attribute__((availability(ios,introduced=4.0)));




extern "C" const CFStringRef kCGImagePropertyTIFFCompression __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyTIFFPhotometricInterpretation __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyTIFFDocumentName __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyTIFFImageDescription __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyTIFFMake __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyTIFFModel __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyTIFFOrientation __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyTIFFXResolution __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyTIFFYResolution __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyTIFFResolutionUnit __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyTIFFSoftware __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyTIFFTransferFunction __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyTIFFDateTime __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyTIFFArtist __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyTIFFHostComputer __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyTIFFCopyright __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyTIFFWhitePoint __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyTIFFPrimaryChromaticities __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyTIFFTileWidth __attribute__((availability(ios,introduced=9.0)));
extern "C" const CFStringRef kCGImagePropertyTIFFTileLength __attribute__((availability(ios,introduced=9.0)));



extern "C" const CFStringRef kCGImagePropertyJFIFVersion __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyJFIFXDensity __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyJFIFYDensity __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyJFIFDensityUnit __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyJFIFIsProgressive __attribute__((availability(ios,introduced=4.0)));




extern "C" const CFStringRef kCGImagePropertyExifExposureTime __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifFNumber __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifExposureProgram __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifSpectralSensitivity __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifISOSpeedRatings __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifOECF __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifSensitivityType __attribute__((availability(ios,introduced=7.0)));
extern "C" const CFStringRef kCGImagePropertyExifStandardOutputSensitivity __attribute__((availability(ios,introduced=7.0)));
extern "C" const CFStringRef kCGImagePropertyExifRecommendedExposureIndex __attribute__((availability(ios,introduced=7.0)));
extern "C" const CFStringRef kCGImagePropertyExifISOSpeed __attribute__((availability(ios,introduced=7.0)));
extern "C" const CFStringRef kCGImagePropertyExifISOSpeedLatitudeyyy __attribute__((availability(ios,introduced=7.0)));
extern "C" const CFStringRef kCGImagePropertyExifISOSpeedLatitudezzz __attribute__((availability(ios,introduced=7.0)));
extern "C" const CFStringRef kCGImagePropertyExifVersion __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifDateTimeOriginal __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifDateTimeDigitized __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifComponentsConfiguration __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifCompressedBitsPerPixel __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifShutterSpeedValue __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifApertureValue __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifBrightnessValue __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifExposureBiasValue __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifMaxApertureValue __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifSubjectDistance __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifMeteringMode __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifLightSource __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifFlash __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifFocalLength __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifSubjectArea __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifMakerNote __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifUserComment __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifSubsecTime __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifSubsecTimeOriginal __attribute__((availability(ios,introduced=10.0)));
extern "C" const CFStringRef kCGImagePropertyExifSubsecTimeDigitized __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifFlashPixVersion __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifColorSpace __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifPixelXDimension __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifPixelYDimension __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifRelatedSoundFile __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifFlashEnergy __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifSpatialFrequencyResponse __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifFocalPlaneXResolution __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifFocalPlaneYResolution __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifFocalPlaneResolutionUnit __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifSubjectLocation __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifExposureIndex __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifSensingMethod __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifFileSource __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifSceneType __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifCFAPattern __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifCustomRendered __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifExposureMode __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifWhiteBalance __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifDigitalZoomRatio __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifFocalLenIn35mmFilm __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifSceneCaptureType __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifGainControl __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifContrast __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifSaturation __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifSharpness __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifDeviceSettingDescription __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifSubjectDistRange __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifImageUniqueID __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifCameraOwnerName __attribute__((availability(ios,introduced=5.0)));
extern "C" const CFStringRef kCGImagePropertyExifBodySerialNumber __attribute__((availability(ios,introduced=5.0)));
extern "C" const CFStringRef kCGImagePropertyExifLensSpecification __attribute__((availability(ios,introduced=5.0)));
extern "C" const CFStringRef kCGImagePropertyExifLensMake __attribute__((availability(ios,introduced=5.0)));
extern "C" const CFStringRef kCGImagePropertyExifLensModel __attribute__((availability(ios,introduced=5.0)));
extern "C" const CFStringRef kCGImagePropertyExifLensSerialNumber __attribute__((availability(ios,introduced=5.0)));
extern "C" const CFStringRef kCGImagePropertyExifGamma __attribute__((availability(ios,introduced=4.0)));


extern "C" const CFStringRef kCGImagePropertyExifSubsecTimeOrginal __attribute__((availability(ios,introduced=4.0)));


extern "C" const CFStringRef kCGImagePropertyExifAuxLensInfo __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifAuxLensModel __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifAuxSerialNumber __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifAuxLensID __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifAuxLensSerialNumber __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifAuxImageNumber __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifAuxFlashCompensation __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifAuxOwnerName __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyExifAuxFirmware __attribute__((availability(ios,introduced=4.0)));



extern "C" const CFStringRef kCGImagePropertyGIFLoopCount __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyGIFDelayTime __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyGIFImageColorMap __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyGIFHasGlobalColorMap __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyGIFUnclampedDelayTime __attribute__((availability(ios,introduced=4.0)));



extern "C" const CFStringRef kCGImagePropertyPNGGamma __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyPNGInterlaceType __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyPNGXPixelsPerMeter __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyPNGYPixelsPerMeter __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyPNGsRGBIntent __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyPNGChromaticities __attribute__((availability(ios,introduced=4.0)));

extern "C" const CFStringRef kCGImagePropertyPNGAuthor __attribute__((availability(ios,introduced=5.0)));
extern "C" const CFStringRef kCGImagePropertyPNGCopyright __attribute__((availability(ios,introduced=5.0)));
extern "C" const CFStringRef kCGImagePropertyPNGCreationTime __attribute__((availability(ios,introduced=5.0)));
extern "C" const CFStringRef kCGImagePropertyPNGDescription __attribute__((availability(ios,introduced=5.0)));
extern "C" const CFStringRef kCGImagePropertyPNGModificationTime __attribute__((availability(ios,introduced=5.0)));
extern "C" const CFStringRef kCGImagePropertyPNGSoftware __attribute__((availability(ios,introduced=5.0)));
extern "C" const CFStringRef kCGImagePropertyPNGTitle __attribute__((availability(ios,introduced=5.0)));

extern "C" const CFStringRef kCGImagePropertyAPNGLoopCount __attribute__((availability(ios,introduced=8.0)));
extern "C" const CFStringRef kCGImagePropertyAPNGDelayTime __attribute__((availability(ios,introduced=8.0)));
extern "C" const CFStringRef kCGImagePropertyAPNGUnclampedDelayTime __attribute__((availability(ios,introduced=8.0)));



extern "C" const CFStringRef kCGImagePropertyGPSVersion __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyGPSLatitudeRef __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyGPSLatitude __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyGPSLongitudeRef __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyGPSLongitude __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyGPSAltitudeRef __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyGPSAltitude __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyGPSTimeStamp __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyGPSSatellites __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyGPSStatus __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyGPSMeasureMode __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyGPSDOP __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyGPSSpeedRef __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyGPSSpeed __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyGPSTrackRef __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyGPSTrack __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyGPSImgDirectionRef __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyGPSImgDirection __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyGPSMapDatum __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyGPSDestLatitudeRef __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyGPSDestLatitude __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyGPSDestLongitudeRef __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyGPSDestLongitude __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyGPSDestBearingRef __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyGPSDestBearing __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyGPSDestDistanceRef __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyGPSDestDistance __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyGPSProcessingMethod __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyGPSAreaInformation __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyGPSDateStamp __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyGPSDifferental __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyGPSHPositioningError __attribute__((availability(ios,introduced=8.0)));



extern "C" const CFStringRef kCGImagePropertyIPTCObjectTypeReference __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCObjectAttributeReference __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCObjectName __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCEditStatus __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCEditorialUpdate __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCUrgency __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCSubjectReference __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCCategory __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCSupplementalCategory __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCFixtureIdentifier __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCKeywords __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCContentLocationCode __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCContentLocationName __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCReleaseDate __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCReleaseTime __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCExpirationDate __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCExpirationTime __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCSpecialInstructions __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCActionAdvised __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCReferenceService __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCReferenceDate __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCReferenceNumber __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCDateCreated __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCTimeCreated __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCDigitalCreationDate __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCDigitalCreationTime __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCOriginatingProgram __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCProgramVersion __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCObjectCycle __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCByline __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCBylineTitle __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCCity __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCSubLocation __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCProvinceState __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCCountryPrimaryLocationCode __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCCountryPrimaryLocationName __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCOriginalTransmissionReference __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCHeadline __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCCredit __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCSource __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCCopyrightNotice __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCContact __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCCaptionAbstract __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCWriterEditor __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCImageType __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCImageOrientation __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCLanguageIdentifier __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCStarRating __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCCreatorContactInfo __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCRightsUsageTerms __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCScene __attribute__((availability(ios,introduced=4.0)));

extern "C" const CFStringRef kCGImagePropertyIPTCExtAboutCvTerm __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtAboutCvTermCvId __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtAboutCvTermId __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtAboutCvTermName __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtAboutCvTermRefinedAbout __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtAddlModelInfo __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtArtworkOrObject __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtArtworkCircaDateCreated __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtArtworkContentDescription __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtArtworkContributionDescription __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtArtworkCopyrightNotice __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtArtworkCreator __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtArtworkCreatorID __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtArtworkCopyrightOwnerID __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtArtworkCopyrightOwnerName __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtArtworkLicensorID __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtArtworkLicensorName __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtArtworkDateCreated __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtArtworkPhysicalDescription __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtArtworkSource __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtArtworkSourceInventoryNo __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtArtworkSourceInvURL __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtArtworkStylePeriod __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtArtworkTitle __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtAudioBitrate __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtAudioBitrateMode __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtAudioChannelCount __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtCircaDateCreated __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtContainerFormat __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtContainerFormatIdentifier __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtContainerFormatName __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtContributor __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtContributorIdentifier __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtContributorName __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtContributorRole __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtCopyrightYear __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtCreator __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtCreatorIdentifier __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtCreatorName __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtCreatorRole __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtControlledVocabularyTerm __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtDataOnScreen __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtDataOnScreenRegion __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtDataOnScreenRegionD __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtDataOnScreenRegionH __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtDataOnScreenRegionText __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtDataOnScreenRegionUnit __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtDataOnScreenRegionW __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtDataOnScreenRegionX __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtDataOnScreenRegionY __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtDigitalImageGUID __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtDigitalSourceFileType __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtDigitalSourceType __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtDopesheet __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtDopesheetLink __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtDopesheetLinkLink __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtDopesheetLinkLinkQualifier __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtEmbdEncRightsExpr __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtEmbeddedEncodedRightsExpr __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtEmbeddedEncodedRightsExprType __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtEmbeddedEncodedRightsExprLangID __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtEpisode __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtEpisodeIdentifier __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtEpisodeName __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtEpisodeNumber __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtEvent __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtShownEvent __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtShownEventIdentifier __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtShownEventName __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtExternalMetadataLink __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtFeedIdentifier __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtGenre __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtGenreCvId __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtGenreCvTermId __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtGenreCvTermName __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtGenreCvTermRefinedAbout __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtHeadline __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtIPTCLastEdited __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtLinkedEncRightsExpr __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtLinkedEncodedRightsExpr __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtLinkedEncodedRightsExprType __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtLinkedEncodedRightsExprLangID __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtLocationCreated __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtLocationCity __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtLocationCountryCode __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtLocationCountryName __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtLocationGPSAltitude __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtLocationGPSLatitude __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtLocationGPSLongitude __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtLocationIdentifier __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtLocationLocationId __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtLocationLocationName __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtLocationProvinceState __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtLocationSublocation __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtLocationWorldRegion __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtLocationShown __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtMaxAvailHeight __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtMaxAvailWidth __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtModelAge __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtOrganisationInImageCode __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtOrganisationInImageName __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtPersonHeard __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtPersonHeardIdentifier __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtPersonHeardName __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtPersonInImage __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtPersonInImageWDetails __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtPersonInImageCharacteristic __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtPersonInImageCvTermCvId __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtPersonInImageCvTermId __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtPersonInImageCvTermName __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtPersonInImageCvTermRefinedAbout __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtPersonInImageDescription __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtPersonInImageId __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtPersonInImageName __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtProductInImage __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtProductInImageDescription __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtProductInImageGTIN __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtProductInImageName __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtPublicationEvent __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtPublicationEventDate __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtPublicationEventIdentifier __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtPublicationEventName __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtRating __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtRatingRatingRegion __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtRatingRegionCity __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtRatingRegionCountryCode __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtRatingRegionCountryName __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtRatingRegionGPSAltitude __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtRatingRegionGPSLatitude __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtRatingRegionGPSLongitude __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtRatingRegionIdentifier __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtRatingRegionLocationId __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtRatingRegionLocationName __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtRatingRegionProvinceState __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtRatingRegionSublocation __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtRatingRegionWorldRegion __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtRatingScaleMaxValue __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtRatingScaleMinValue __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtRatingSourceLink __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtRatingValue __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtRatingValueLogoLink __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtRegistryID __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtRegistryEntryRole __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtRegistryItemID __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtRegistryOrganisationID __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtReleaseReady __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtSeason __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtSeasonIdentifier __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtSeasonName __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtSeasonNumber __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtSeries __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtSeriesIdentifier __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtSeriesName __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtStorylineIdentifier __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtStreamReady __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtStylePeriod __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtSupplyChainSource __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtSupplyChainSourceIdentifier __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtSupplyChainSourceName __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtTemporalCoverage __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtTemporalCoverageFrom __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtTemporalCoverageTo __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtTranscript __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtTranscriptLink __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtTranscriptLinkLink __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtTranscriptLinkLinkQualifier __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtVideoBitrate __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtVideoBitrateMode __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtVideoDisplayAspectRatio __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtVideoEncodingProfile __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtVideoShotType __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtVideoShotTypeIdentifier __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtVideoShotTypeName __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtVideoStreamsCount __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtVisualColor __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtWorkflowTag __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtWorkflowTagCvId __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtWorkflowTagCvTermId __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtWorkflowTagCvTermName __attribute__((availability(ios,introduced=11.3)));
extern "C" const CFStringRef kCGImagePropertyIPTCExtWorkflowTagCvTermRefinedAbout __attribute__((availability(ios,introduced=11.3)));




extern "C" const CFStringRef kCGImagePropertyIPTCContactInfoCity __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCContactInfoCountry __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCContactInfoAddress __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCContactInfoPostalCode __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCContactInfoStateProvince __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCContactInfoEmails __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCContactInfoPhones __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyIPTCContactInfoWebURLs __attribute__((availability(ios,introduced=4.0)));



extern "C" const CFStringRef kCGImageProperty8BIMLayerNames __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImageProperty8BIMVersion __attribute__((availability(ios,introduced=8.0)));



extern "C" const CFStringRef kCGImagePropertyDNGVersion __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyDNGBackwardVersion __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyDNGUniqueCameraModel __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyDNGLocalizedCameraModel __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyDNGCameraSerialNumber __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyDNGLensInfo __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyDNGBlackLevel __attribute__((availability(ios,introduced=10.0)));
extern "C" const CFStringRef kCGImagePropertyDNGWhiteLevel __attribute__((availability(ios,introduced=10.0)));
extern "C" const CFStringRef kCGImagePropertyDNGCalibrationIlluminant1 __attribute__((availability(ios,introduced=10.0)));
extern "C" const CFStringRef kCGImagePropertyDNGCalibrationIlluminant2 __attribute__((availability(ios,introduced=10.0)));
extern "C" const CFStringRef kCGImagePropertyDNGColorMatrix1 __attribute__((availability(ios,introduced=10.0)));
extern "C" const CFStringRef kCGImagePropertyDNGColorMatrix2 __attribute__((availability(ios,introduced=10.0)));
extern "C" const CFStringRef kCGImagePropertyDNGCameraCalibration1 __attribute__((availability(ios,introduced=10.0)));
extern "C" const CFStringRef kCGImagePropertyDNGCameraCalibration2 __attribute__((availability(ios,introduced=10.0)));
extern "C" const CFStringRef kCGImagePropertyDNGAsShotNeutral __attribute__((availability(ios,introduced=10.0)));
extern "C" const CFStringRef kCGImagePropertyDNGAsShotWhiteXY __attribute__((availability(ios,introduced=10.0)));
extern "C" const CFStringRef kCGImagePropertyDNGBaselineExposure __attribute__((availability(ios,introduced=10.0)));
extern "C" const CFStringRef kCGImagePropertyDNGBaselineNoise __attribute__((availability(ios,introduced=10.0)));
extern "C" const CFStringRef kCGImagePropertyDNGBaselineSharpness __attribute__((availability(ios,introduced=10.0)));
extern "C" const CFStringRef kCGImagePropertyDNGPrivateData __attribute__((availability(ios,introduced=10.0)));
extern "C" const CFStringRef kCGImagePropertyDNGCameraCalibrationSignature __attribute__((availability(ios,introduced=10.0)));
extern "C" const CFStringRef kCGImagePropertyDNGProfileCalibrationSignature __attribute__((availability(ios,introduced=10.0)));
extern "C" const CFStringRef kCGImagePropertyDNGNoiseProfile __attribute__((availability(ios,introduced=10.0)));
extern "C" const CFStringRef kCGImagePropertyDNGWarpRectilinear __attribute__((availability(ios,introduced=10.0)));
extern "C" const CFStringRef kCGImagePropertyDNGWarpFisheye __attribute__((availability(ios,introduced=10.0)));
extern "C" const CFStringRef kCGImagePropertyDNGFixVignetteRadial __attribute__((availability(ios,introduced=10.0)));




extern "C" const CFStringRef kCGImagePropertyCIFFDescription __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyCIFFFirmware __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyCIFFOwnerName __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyCIFFImageName __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyCIFFImageFileName __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyCIFFReleaseMethod __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyCIFFReleaseTiming __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyCIFFRecordID __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyCIFFSelfTimingTime __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyCIFFCameraSerialNumber __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyCIFFImageSerialNumber __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyCIFFContinuousDrive __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyCIFFFocusMode __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyCIFFMeteringMode __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyCIFFShootingMode __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyCIFFLensModel __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyCIFFLensMaxMM __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyCIFFLensMinMM __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyCIFFWhiteBalanceIndex __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyCIFFFlashExposureComp __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyCIFFMeasuredEV __attribute__((availability(ios,introduced=4.0)));




extern "C" const CFStringRef kCGImagePropertyMakerNikonISOSetting __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyMakerNikonColorMode __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyMakerNikonQuality __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyMakerNikonWhiteBalanceMode __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyMakerNikonSharpenMode __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyMakerNikonFocusMode __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyMakerNikonFlashSetting __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyMakerNikonISOSelection __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyMakerNikonFlashExposureComp __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyMakerNikonImageAdjustment __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyMakerNikonLensAdapter __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyMakerNikonLensType __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyMakerNikonLensInfo __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyMakerNikonFocusDistance __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyMakerNikonDigitalZoom __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyMakerNikonShootingMode __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyMakerNikonCameraSerialNumber __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyMakerNikonShutterCount __attribute__((availability(ios,introduced=4.0)));



extern "C" const CFStringRef kCGImagePropertyMakerCanonOwnerName __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyMakerCanonCameraSerialNumber __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyMakerCanonImageSerialNumber __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyMakerCanonFlashExposureComp __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyMakerCanonContinuousDrive __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyMakerCanonLensModel __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyMakerCanonFirmware __attribute__((availability(ios,introduced=4.0)));
extern "C" const CFStringRef kCGImagePropertyMakerCanonAspectRatioInfo __attribute__((availability(ios,introduced=4.0)));



extern "C" const CFStringRef kCGImagePropertyOpenEXRAspectRatio __attribute__((availability(ios,introduced=11.3)));



typedef uint32_t CGImagePropertyOrientation; enum {
    kCGImagePropertyOrientationUp = 1,
    kCGImagePropertyOrientationUpMirrored,
    kCGImagePropertyOrientationDown,
    kCGImagePropertyOrientationDownMirrored,
    kCGImagePropertyOrientationLeftMirrored,
    kCGImagePropertyOrientationRight,
    kCGImagePropertyOrientationRightMirrored,
    kCGImagePropertyOrientationLeft
};
extern "C" const CFStringRef kCGImagePropertyPNGCompressionFilter __attribute__((availability(ios,introduced=9.0)));
extern "C" const CFStringRef kCGImageAuxiliaryDataTypeDepth __attribute__((availability(ios,introduced=11.0)));
extern "C" const CFStringRef kCGImageAuxiliaryDataTypeDisparity __attribute__((availability(ios,introduced=11.0)));
extern "C" const CFStringRef kCGImageAuxiliaryDataInfoData __attribute__((availability(ios,introduced=11.0)));
extern "C" const CFStringRef kCGImageAuxiliaryDataInfoDataDescription __attribute__((availability(ios,introduced=11.0)));
extern "C" const CFStringRef kCGImageAuxiliaryDataInfoMetadata __attribute__((availability(ios,introduced=11.0)));


extern "C" const CFStringRef kCGImagePropertyImageCount __attribute__((availability(ios,introduced=11.0)));
extern "C" const CFStringRef kCGImagePropertyWidth __attribute__((availability(ios,introduced=11.0)));
extern "C" const CFStringRef kCGImagePropertyHeight __attribute__((availability(ios,introduced=11.0)));
extern "C" const CFStringRef kCGImagePropertyBytesPerRow __attribute__((availability(ios,introduced=11.0)));
extern "C" const CFStringRef kCGImagePropertyNamedColorSpace __attribute__((availability(ios,introduced=11.0)));
extern "C" const CFStringRef kCGImagePropertyPixelFormat __attribute__((availability(ios,introduced=11.0)));
extern "C" const CFStringRef kCGImagePropertyImages __attribute__((availability(ios,introduced=11.0)));
extern "C" const CFStringRef kCGImagePropertyThumbnailImages __attribute__((availability(ios,introduced=11.0)));
extern "C" const CFStringRef kCGImagePropertyAuxiliaryData __attribute__((availability(ios,introduced=11.0)));
extern "C" const CFStringRef kCGImagePropertyAuxiliaryDataType __attribute__((availability(ios,introduced=11.0)));
#pragma clang assume_nonnull end







#pragma clang assume_nonnull begin

// @class CIContext;
#ifndef _REWRITER_typedef_CIContext
#define _REWRITER_typedef_CIContext
typedef struct objc_object CIContext;
typedef struct {} _objc_exc_CIContext;
#endif

#ifndef _REWRITER_typedef_CIFilterShape
#define _REWRITER_typedef_CIFilterShape
typedef struct objc_object CIFilterShape;
typedef struct {} _objc_exc_CIFilterShape;
#endif

#ifndef _REWRITER_typedef_CIColor
#define _REWRITER_typedef_CIColor
typedef struct objc_object CIColor;
typedef struct {} _objc_exc_CIColor;
#endif

#ifndef _REWRITER_typedef_CIFilter
#define _REWRITER_typedef_CIFilter
typedef struct objc_object CIFilter;
typedef struct {} _objc_exc_CIFilter;
#endif

// @class AVDepthData;
#ifndef _REWRITER_typedef_AVDepthData
#define _REWRITER_typedef_AVDepthData
typedef struct objc_object AVDepthData;
typedef struct {} _objc_exc_AVDepthData;
#endif


// @protocol MTLTexture;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0)))

#ifndef _REWRITER_typedef_CIImage
#define _REWRITER_typedef_CIImage
typedef struct objc_object CIImage;
typedef struct {} _objc_exc_CIImage;
#endif

struct CIImage_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_priv;
};




typedef int CIFormat;

extern "C" __attribute__((visibility("default"))) CIFormat kCIFormatARGB8 __attribute__((availability(ios,introduced=6_0)));
extern "C" __attribute__((visibility("default"))) CIFormat kCIFormatBGRA8;
extern "C" __attribute__((visibility("default"))) CIFormat kCIFormatRGBA8;
extern "C" __attribute__((visibility("default"))) CIFormat kCIFormatABGR8 __attribute__((availability(ios,introduced=9_0)));

extern "C" __attribute__((visibility("default"))) CIFormat kCIFormatRGBAh __attribute__((availability(ios,introduced=6_0)));
extern "C" __attribute__((visibility("default"))) CIFormat kCIFormatRGBA16 __attribute__((availability(ios,introduced=10_0)));
extern "C" __attribute__((visibility("default"))) CIFormat kCIFormatRGBAf __attribute__((availability(ios,introduced=7_0)));

extern "C" __attribute__((visibility("default"))) CIFormat kCIFormatA8 __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility("default"))) CIFormat kCIFormatA16 __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility("default"))) CIFormat kCIFormatAh __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility("default"))) CIFormat kCIFormatAf __attribute__((availability(ios,introduced=9_0)));

extern "C" __attribute__((visibility("default"))) CIFormat kCIFormatR8 __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility("default"))) CIFormat kCIFormatR16 __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility("default"))) CIFormat kCIFormatRh __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility("default"))) CIFormat kCIFormatRf __attribute__((availability(ios,introduced=9_0)));

extern "C" __attribute__((visibility("default"))) CIFormat kCIFormatRG8 __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility("default"))) CIFormat kCIFormatRG16 __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility("default"))) CIFormat kCIFormatRGh __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility("default"))) CIFormat kCIFormatRGf __attribute__((availability(ios,introduced=9_0)));

extern "C" __attribute__((visibility("default"))) CIFormat kCIFormatL8 __attribute__((availability(ios,introduced=10_0)));
extern "C" __attribute__((visibility("default"))) CIFormat kCIFormatL16 __attribute__((availability(ios,introduced=10_0)));
extern "C" __attribute__((visibility("default"))) CIFormat kCIFormatLh __attribute__((availability(ios,introduced=10_0)));
extern "C" __attribute__((visibility("default"))) CIFormat kCIFormatLf __attribute__((availability(ios,introduced=10_0)));

extern "C" __attribute__((visibility("default"))) CIFormat kCIFormatLA8 __attribute__((availability(ios,introduced=10_0)));
extern "C" __attribute__((visibility("default"))) CIFormat kCIFormatLA16 __attribute__((availability(ios,introduced=10_0)));
extern "C" __attribute__((visibility("default"))) CIFormat kCIFormatLAh __attribute__((availability(ios,introduced=10_0)));
extern "C" __attribute__((visibility("default"))) CIFormat kCIFormatLAf __attribute__((availability(ios,introduced=10_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIImageColorSpace;



extern "C" __attribute__((visibility("default"))) NSString * const kCIImageNearestSampling __attribute__((availability(ios,introduced=11_0)));







extern "C" __attribute__((visibility("default"))) NSString * const kCIImageProperties __attribute__((availability(ios,introduced=5_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIImageApplyOrientationProperty __attribute__((availability(ios,introduced=11_0)));


extern "C" __attribute__((visibility("default"))) NSString * const kCIImageTextureTarget __attribute__((availability(ios,unavailable)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIImageTextureFormat __attribute__((availability(ios,unavailable)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIImageAuxiliaryDepth __attribute__((availability(ios,introduced=11_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIImageAuxiliaryDisparity __attribute__((availability(ios,introduced=11_0)));



// + (CIImage *)imageWithCGImage:(CGImageRef)image;
#if 0
+ (CIImage *)imageWithCGImage:(CGImageRef)image
                      options:(nullable NSDictionary<NSString *,id> *)options;
#endif



// + (CIImage *)imageWithCGLayer:(CGLayerRef)layer __attribute__((availability(ios,unavailable)));
#if 0
+ (CIImage *)imageWithCGLayer:(CGLayerRef)layer
                      options:(nullable NSDictionary<NSString *,id> *)options __attribute__((availability(ios,unavailable)));
#endif






#if 0
+ (CIImage *)imageWithBitmapData:(NSData *)data
                     bytesPerRow:(size_t)bytesPerRow
                            size:(CGSize)size
                          format:(CIFormat)format
                      colorSpace:(nullable CGColorSpaceRef)colorSpace;
#endif







#if 0
+ (CIImage *)imageWithTexture:(unsigned int)name
                         size:(CGSize)size
                      flipped:(BOOL)flipped
                   colorSpace:(nullable CGColorSpaceRef)colorSpace __attribute__((availability(ios,introduced=6_0)));
#endif







#if 0
+ (CIImage *)imageWithTexture:(unsigned int)name
                         size:(CGSize)size
                      flipped:(BOOL)flipped
                      options:(nullable NSDictionary<NSString *,id> *)options __attribute__((availability(ios,unavailable)));
#endif






#if 0
+ (nullable CIImage *)imageWithMTLTexture:(id<MTLTexture>)texture
                                  options:(nullable NSDictionary<NSString *,id> *)options __attribute__((availability(ios,introduced=9_0)));
#endif






// + (nullable CIImage *)imageWithContentsOfURL:(NSURL *)url;
#if 0
+ (nullable CIImage *)imageWithContentsOfURL:(NSURL *)url
                                     options:(nullable NSDictionary<NSString *,id> *)options;
#endif


// + (nullable CIImage *)imageWithData:(NSData *)data;
#if 0
+ (nullable CIImage *)imageWithData:(NSData *)data
                            options:(nullable NSDictionary<NSString *,id> *)options;
#endif



// + (CIImage *)imageWithCVImageBuffer:(CVImageBufferRef)imageBuffer __attribute__((availability(ios,introduced=9_0)));
#if 0
+ (CIImage *)imageWithCVImageBuffer:(CVImageBufferRef)imageBuffer
                            options:(nullable NSDictionary<NSString *,id> *)options __attribute__((availability(ios,introduced=9_0)));
#endif



// + (CIImage *)imageWithCVPixelBuffer:(CVPixelBufferRef)pixelBuffer __attribute__((availability(ios,introduced=5_0)));
#if 0
+ (CIImage *)imageWithCVPixelBuffer:(CVPixelBufferRef)pixelBuffer
                            options:(nullable NSDictionary<NSString *,id> *)options __attribute__((availability(ios,introduced=5_0)));
#endif




// + (CIImage *)imageWithIOSurface:(IOSurfaceRef)surface __attribute__((availability(ios,introduced=5_0)));
#if 0
+ (CIImage *)imageWithIOSurface:(IOSurfaceRef)surface
                        options:(nullable NSDictionary<NSString *,id> *)options __attribute__((availability(ios,introduced=5_0)));
#endif





// + (CIImage *)imageWithColor:(CIColor *)color;


// + (CIImage *)emptyImage;



// - (instancetype)initWithCGImage:(CGImageRef)image;
#if 0
- (instancetype)initWithCGImage:(CGImageRef)image
                        options:(nullable NSDictionary<NSString *,id> *)options;
#endif


#if 0
- (instancetype)initWithCGLayer:(CGLayerRef)layer
    __attribute__((availability(ios,unavailable)));
#endif

#if 0
- (instancetype)initWithCGLayer:(CGLayerRef)layer
                        options:(nullable NSDictionary<NSString *,id> *)options
    __attribute__((availability(ios,unavailable)));
#endif


// - (nullable instancetype)initWithData:(NSData *)data;
#if 0
- (nullable instancetype)initWithData:(NSData *)data
                              options:(nullable NSDictionary<NSString *,id> *)options;
#endif


#if 0
- (instancetype)initWithBitmapData:(NSData *)data
                       bytesPerRow:(size_t)bytesPerRow
                              size:(CGSize)size
                            format:(CIFormat)format
                        colorSpace:(nullable CGColorSpaceRef)colorSpace;
#endif


#if 0
- (instancetype)initWithTexture:(unsigned int)name
                           size:(CGSize)size
                        flipped:(BOOL)flipped
                     colorSpace:(nullable CGColorSpaceRef)colorSpace __attribute__((availability(ios,introduced=6_0)));
#endif


#if 0
- (instancetype)initWithTexture:(unsigned int)name
                           size:(CGSize)size
                        flipped:(BOOL)flipped
                        options:(nullable NSDictionary<NSString *,id> *)options __attribute__((availability(ios,unavailable)));
#endif




#if 0
- (nullable instancetype)initWithMTLTexture:(id<MTLTexture>)texture
                                    options:(nullable NSDictionary<NSString *,id> *)options __attribute__((availability(ios,introduced=9_0)));
#endif






// - (nullable instancetype)initWithContentsOfURL:(NSURL *)url;
#if 0
- (nullable instancetype)initWithContentsOfURL:(NSURL *)url
                                       options:(nullable NSDictionary<NSString *,id> *)options;
#endif



// - (instancetype)initWithIOSurface:(IOSurfaceRef)surface __attribute__((availability(ios,introduced=5_0)));

#if 0
- (instancetype)initWithIOSurface:(IOSurfaceRef)surface
                          options:(nullable NSDictionary<NSString *,id> *)options __attribute__((availability(ios,introduced=5_0)));
#endif

// - (instancetype)initWithCVImageBuffer:(CVImageBufferRef)imageBuffer __attribute__((availability(ios,introduced=9_0)));
#if 0
- (instancetype)initWithCVImageBuffer:(CVImageBufferRef)imageBuffer
                              options:(nullable NSDictionary<NSString *,id> *)options __attribute__((availability(ios,introduced=9_0)));
#endif


// - (instancetype)initWithCVPixelBuffer:(CVPixelBufferRef)pixelBuffer __attribute__((availability(ios,introduced=5_0)));
#if 0
- (instancetype)initWithCVPixelBuffer:(CVPixelBufferRef)pixelBuffer
                              options:(nullable NSDictionary<NSString *,id> *)options __attribute__((availability(ios,introduced=5_0)));
#endif


// - (instancetype)initWithColor:(CIColor *)color;



// - (CIImage *)imageByApplyingTransform:(CGAffineTransform)matrix;




// - (CIImage *)imageByApplyingOrientation:(int)orientation __attribute__((availability(ios,introduced=8_0)));




// - (CGAffineTransform)imageTransformForOrientation:(int)orientation __attribute__((availability(ios,introduced=8_0)));


// - (CIImage *)imageByApplyingCGOrientation:(CGImagePropertyOrientation)orientation __attribute__((availability(ios,introduced=11_0)));


// - (CGAffineTransform)imageTransformForCGOrientation:(CGImagePropertyOrientation)orientation __attribute__((availability(ios,introduced=11_0)));



// - (CIImage *)imageByCompositingOverImage:(CIImage *)dest __attribute__((availability(ios,introduced=8_0)));


// - (CIImage *)imageByCroppingToRect:(CGRect)rect;


// - (CIImage *)imageByClampingToExtent __attribute__((availability(ios,introduced=8_0)));



// - (CIImage *)imageByClampingToRect:(CGRect)rect __attribute__((availability(ios,introduced=10_0)));





#if 0
- (CIImage *)imageByApplyingFilter:(NSString *)filterName
               withInputParameters:(nullable NSDictionary<NSString *,id> *)params __attribute__((availability(ios,introduced=8_0)));
#endif






// - (CIImage *)imageByApplyingFilter:(NSString *)filterName __attribute__((availability(ios,introduced=11_0)));




#if 0
- (nullable CIImage *)imageByColorMatchingColorSpaceToWorkingSpace:(CGColorSpaceRef)colorSpace __attribute__((availability(ios,introduced=10_0)))
  __attribute__((swift_name("matchedToWorkingSpace(from:)")));
#endif




#if 0
- (nullable CIImage *)imageByColorMatchingWorkingSpaceToColorSpace:(CGColorSpaceRef)colorSpace __attribute__((availability(ios,introduced=10_0)))
  __attribute__((swift_name("matchedFromWorkingSpace(to:)")));
#endif



// - (CIImage *)imageByPremultiplyingAlpha __attribute__((availability(ios,introduced=10_0)));


// - (CIImage *)imageByUnpremultiplyingAlpha __attribute__((availability(ios,introduced=10_0)));


// - (CIImage *)imageBySettingAlphaOneInExtent:(CGRect)extent __attribute__((availability(ios,introduced=10_0)));


// - (CIImage *)imageByApplyingGaussianBlurWithSigma:(double)sigma __attribute__((availability(ios,introduced=10_0)));


// - (CIImage *)imageBySettingProperties:(NSDictionary*)properties __attribute__((availability(ios,introduced=10_0)));


#if 0
- (CIImage *)imageBySamplingLinear __attribute__((availability(ios,introduced=11_0)))
  __attribute__((swift_name("samplingLinear()")));
#endif



#if 0
- (CIImage *)imageBySamplingNearest __attribute__((availability(ios,introduced=11_0)))
  __attribute__((swift_name("samplingNearest()")));
#endif



// @property (nonatomic, readonly) CGRect extent;




// @property (atomic, readonly) NSDictionary<NSString *,id> *properties __attribute__((availability(ios,introduced=5_0)));


// @property (atomic, readonly) CIFilterShape *definition __attribute__((availability(ios,unavailable)));



// @property (atomic, readonly, nullable) NSURL *url __attribute__((availability(ios,introduced=9_0)));



// @property (atomic, readonly, nullable) CGColorSpaceRef colorSpace __attribute__((availability(ios,introduced=9_0))) __attribute__((cf_returns_not_retained));




// @property (nonatomic, readonly, nullable) CVPixelBufferRef pixelBuffer __attribute__((availability(ios,introduced=10_0)));



// @property (nonatomic, readonly, nullable) CGImageRef CGImage __attribute__((availability(ios,introduced=10_0)));



// @property (nonatomic, readonly, nullable) AVDepthData *depthData __attribute__((availability(ios,introduced=11_0)));



#if 0
- (CGRect)regionOfInterestForImage:(CIImage *)image
                            inRect:(CGRect)rect __attribute__((availability(ios,introduced=6_0)));
#endif


/* @end */



// @interface CIImage (AutoAdjustment)
extern "C" __attribute__((visibility("default"))) NSString * const kCIImageAutoAdjustEnhance __attribute__((availability(ios,introduced=5_0)));




extern "C" __attribute__((visibility("default"))) NSString * const kCIImageAutoAdjustRedEye __attribute__((availability(ios,introduced=5_0)));





extern "C" __attribute__((visibility("default"))) NSString * const kCIImageAutoAdjustFeatures __attribute__((availability(ios,introduced=5_0)));




extern "C" __attribute__((visibility("default"))) NSString * const kCIImageAutoAdjustCrop __attribute__((availability(ios,introduced=8_0)));




extern "C" __attribute__((visibility("default"))) NSString * const kCIImageAutoAdjustLevel __attribute__((availability(ios,introduced=8_0)));
// - (NSArray<CIFilter *> *)autoAdjustmentFilters __attribute__((availability(ios,introduced=5_0)));
#if 0
- (NSArray<CIFilter *> *)autoAdjustmentFiltersWithOptions:(nullable NSDictionary<NSString *,id> *)options
    __attribute__((availability(ios,introduced=5_0)));
#endif


/* @end */

#pragma clang assume_nonnull end
// @class CIFilter;
#ifndef _REWRITER_typedef_CIFilter
#define _REWRITER_typedef_CIFilter
typedef struct objc_object CIFilter;
typedef struct {} _objc_exc_CIFilter;
#endif


// @protocol MTLDevice, MTLTexture, MTLCommandBuffer;

#pragma clang assume_nonnull begin


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0)))

#ifndef _REWRITER_typedef_CIContext
#define _REWRITER_typedef_CIContext
typedef struct objc_object CIContext;
typedef struct {} _objc_exc_CIContext;
#endif

struct CIContext_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_priv;
};






extern "C" __attribute__((visibility("default"))) NSString * const kCIContextOutputColorSpace;



extern "C" __attribute__((visibility("default"))) NSString * const kCIContextWorkingColorSpace;






extern "C" __attribute__((visibility("default"))) NSString * const kCIContextWorkingFormat __attribute__((availability(ios,introduced=8_0)));





extern "C" __attribute__((visibility("default"))) NSString * const kCIContextHighQualityDownsample __attribute__((availability(ios,introduced=9_0)));



extern "C" __attribute__((visibility("default"))) NSString * const kCIContextOutputPremultiplied __attribute__((availability(ios,introduced=7_0)));




extern "C" __attribute__((visibility("default"))) NSString * const kCIContextCacheIntermediates __attribute__((availability(ios,introduced=10_0)));



extern "C" __attribute__((visibility("default"))) NSString * const kCIContextUseSoftwareRenderer;



extern "C" __attribute__((visibility("default"))) NSString * const kCIContextPriorityRequestLow __attribute__((availability(ios,introduced=8_0)));
#if 0
+ (CIContext *)contextWithCGContext:(CGContextRef)cgctx
                            options:(nullable NSDictionary<NSString*,id> *)options
    __attribute__((availability(ios,introduced=9_0)));
#endif

#if 0
+ (CIContext *)contextWithOptions:(nullable NSDictionary<NSString*,id> *)options
    __attribute__((availability(ios,introduced=5_0)));
#endif


// + (CIContext *)context __attribute__((availability(ios,introduced=5_0)));

#if 0
- (instancetype)initWithOptions:(nullable NSDictionary<NSString*,id> *)options
__attribute__((availability(ios,introduced=5_0)));
#endif


// - (instancetype)init __attribute__((availability(ios,introduced=5_0)));
#if 0
+ (CIContext *)contextWithEAGLContext:(EAGLContext *)eaglContext
    __attribute__((availability(ios,introduced=5_0)));
#endif


#if 0
+ (CIContext *)contextWithEAGLContext:(EAGLContext *)eaglContext
                              options:(nullable NSDictionary<NSString*,id> *)options
    __attribute__((availability(ios,introduced=5_0)));
#endif

// + (CIContext *)contextWithMTLDevice:(id<MTLDevice>)device __attribute__((availability(ios,introduced=9_0)));

#if 0
+ (CIContext *)contextWithMTLDevice:(id<MTLDevice>)device
                            options:(nullable NSDictionary<NSString*,id> *)options
    __attribute__((availability(ios,introduced=9_0)));
#endif








// @property (nullable, nonatomic, readonly) CGColorSpaceRef workingColorSpace __attribute__((availability(ios,introduced=9_0)));





// @property (nonatomic, readonly) CIFormat workingFormat __attribute__((availability(ios,introduced=9_0)));






#if 0
- (void)drawImage:(CIImage *)image
          atPoint:(CGPoint)atPoint
         fromRect:(CGRect)fromRect __attribute__((availability(ios,introduced=5_0,deprecated=6_0,message="" )));
#endif




#if 0
- (void)drawImage:(CIImage *)image
           inRect:(CGRect)inRect
         fromRect:(CGRect)fromRect;
#endif







#if 0
- (nullable CGImageRef)createCGImage:(CIImage *)image
                            fromRect:(CGRect)fromRect
__attribute__((cf_returns_retained));
#endif

#if 0
- (nullable CGImageRef)createCGImage:(CIImage *)image
                            fromRect:(CGRect)fromRect
                              format:(CIFormat)format
                          colorSpace:(nullable CGColorSpaceRef)colorSpace
__attribute__((cf_returns_retained));
#endif

#if 0
- (nullable CGImageRef)createCGImage:(CIImage *)image
                            fromRect:(CGRect)fromRect
                              format:(CIFormat)format
                          colorSpace:(nullable CGColorSpaceRef)colorSpace
                            deferred:(BOOL)deferred
__attribute__((cf_returns_retained)) __attribute__((availability(ios,introduced=10_0)));
#endif

#if 0
- (nullable CGLayerRef)createCGLayerWithSize:(CGSize)size
                                        info:(nullable CFDictionaryRef)info
__attribute__((cf_returns_retained)) __attribute__((availability(ios,unavailable)));
#endif

#if 0
- (void)render:(CIImage *)image
   toBitmap:(void *)data
   rowBytes:(ptrdiff_t)rowBytes
  bounds:(CGRect)bounds
  format:(CIFormat)format
 colorSpace:(nullable CGColorSpaceRef)colorSpace;
#endif

#if 0
- (void)render:(CIImage *)image
   toIOSurface:(IOSurfaceRef)surface
  bounds:(CGRect)bounds
 colorSpace:(nullable CGColorSpaceRef)colorSpace __attribute__((availability(ios,introduced=5_0)));
#endif

#if 0
- (void)render:(CIImage *)image
toCVPixelBuffer:(CVPixelBufferRef)buffer __attribute__((availability(ios,introduced=5_0)));
#endif

#if 0
- (void)render:(CIImage *)image
toCVPixelBuffer:(CVPixelBufferRef)buffer
        bounds:(CGRect)bounds
    colorSpace:(nullable CGColorSpaceRef)colorSpace __attribute__((availability(ios,introduced=5_0)));
#endif





#if 0
- (void)render:(CIImage *)image
  toMTLTexture:(id<MTLTexture>)texture
 commandBuffer:(nullable id<MTLCommandBuffer>)commandBuffer
        bounds:(CGRect)bounds
    colorSpace:(CGColorSpaceRef)colorSpace __attribute__((availability(ios,introduced=9_0)));
#endif

// - (void)reclaimResources __attribute__((availability(ios,unavailable)));



// - (void)clearCaches __attribute__((availability(ios,introduced=10_0)));



// - (CGSize)inputImageMaximumSize __attribute__((availability(ios,introduced=5_0)));



// - (CGSize)outputImageMaximumSize __attribute__((availability(ios,introduced=5_0)));

/* @end */



// @interface CIContext (OfflineGPUSupport)




// +(unsigned int)offlineGPUCount __attribute__((availability(ios,unavailable)));
/* @end */


// @interface CIContext (ImageRepresentation)

extern "C" __attribute__((visibility("default"))) NSString * const kCIImageRepresentationAVDepthData __attribute__((availability(ios,introduced=11_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIImageRepresentationDepthImage __attribute__((availability(ios,introduced=11_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIImageRepresentationDisparityImage __attribute__((availability(ios,introduced=11_0)));





#if 0
- (nullable NSData*) TIFFRepresentationOfImage:(CIImage*)image
                                        format:(CIFormat)format
                                    colorSpace:(CGColorSpaceRef)colorSpace
                                       options:(NSDictionary*)options __attribute__((availability(ios,introduced=10_0)));
#endif







#if 0
- (nullable NSData*) JPEGRepresentationOfImage:(CIImage*)image
                                    colorSpace:(CGColorSpaceRef)colorSpace
                                       options:(NSDictionary*)options __attribute__((availability(ios,introduced=10_0)));
#endif








#if 0
- (nullable NSData*) HEIFRepresentationOfImage:(CIImage*)image
                                        format:(CIFormat)format
                                    colorSpace:(CGColorSpaceRef)colorSpace
                                       options:(NSDictionary*)options __attribute__((availability(ios,introduced=11_0)));
#endif






#if 0
- (nullable NSData*) PNGRepresentationOfImage:(CIImage*)image
                                       format:(CIFormat)format
                                   colorSpace:(CGColorSpaceRef)colorSpace
                                      options:(NSDictionary*)options __attribute__((availability(ios,introduced=11_0)));
#endif






#if 0
- (BOOL) writeTIFFRepresentationOfImage:(CIImage*)image
                                  toURL:(NSURL*)url
                                 format:(CIFormat)format
                             colorSpace:(CGColorSpaceRef)colorSpace
                                options:(NSDictionary*)options
                                  error:(NSError **)errorPtr __attribute__((availability(ios,introduced=10_0)));
#endif






#if 0
- (BOOL) writePNGRepresentationOfImage:(CIImage*)image
                                 toURL:(NSURL*)url
                                format:(CIFormat)format
                            colorSpace:(CGColorSpaceRef)colorSpace
                               options:(NSDictionary*)options
                                 error:(NSError **)errorPtr __attribute__((availability(ios,introduced=11_0)));
#endif







#if 0
- (BOOL) writeJPEGRepresentationOfImage:(CIImage*)image
                                  toURL:(NSURL*)url
                             colorSpace:(CGColorSpaceRef)colorSpace
                                options:(NSDictionary*)options
                                  error:(NSError **)errorPtr __attribute__((availability(ios,introduced=10_0)));
#endif








#if 0
- (BOOL) writeHEIFRepresentationOfImage:(CIImage*)image
                                  toURL:(NSURL*)url
                                 format:(CIFormat)format
                             colorSpace:(CGColorSpaceRef)colorSpace
                                options:(NSDictionary*)options
                                  error:(NSError **)errorPtr __attribute__((availability(ios,introduced=11_0)));
#endif



/* @end */

#pragma clang assume_nonnull end






// @class NSString;
#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

// @class CIFilter;
#ifndef _REWRITER_typedef_CIFilter
#define _REWRITER_typedef_CIFilter
typedef struct objc_object CIFilter;
typedef struct {} _objc_exc_CIFilter;
#endif




#pragma clang assume_nonnull begin

// @protocol CIFilterConstructor
// - (nullable CIFilter *)filterWithName:(NSString *)name;
/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin




extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeFilterName;


extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeFilterDisplayName;


extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeDescription __attribute__((availability(ios,introduced=9_0)));


extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeFilterAvailable_Mac __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeFilterAvailable_iOS __attribute__((availability(ios,introduced=9_0)));


extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeReferenceDocumentation __attribute__((availability(ios,introduced=9_0)));


extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeFilterCategories;


extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeClass;


extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeType;


extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeMin;


extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeMax;


extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeSliderMin;


extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeSliderMax;


extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeDefault;


extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeIdentity;


extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeName;


extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeDisplayName;




extern "C" __attribute__((visibility("default"))) NSString * const kCIUIParameterSet __attribute__((availability(ios,introduced=9_0)));


extern "C" __attribute__((visibility("default"))) NSString * const kCIUISetBasic __attribute__((availability(ios,introduced=9_0)));


extern "C" __attribute__((visibility("default"))) NSString * const kCIUISetIntermediate __attribute__((availability(ios,introduced=9_0)));


extern "C" __attribute__((visibility("default"))) NSString * const kCIUISetAdvanced __attribute__((availability(ios,introduced=9_0)));


extern "C" __attribute__((visibility("default"))) NSString * const kCIUISetDevelopment __attribute__((availability(ios,introduced=9_0)));



extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeTypeTime;
extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeTypeScalar;
extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeTypeDistance;
extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeTypeAngle;
extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeTypeBoolean;


extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeTypeInteger __attribute__((availability(ios,introduced=5_0)));


extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeTypeCount __attribute__((availability(ios,introduced=5_0)));


extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeTypePosition;
extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeTypeOffset;


extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeTypePosition3;


extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeTypeRectangle;


extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeTypeOpaqueColor __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeTypeColor __attribute__((availability(ios,introduced=5_0)));


extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeTypeGradient __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeTypeImage __attribute__((availability(ios,introduced=5_0)));


extern "C" __attribute__((visibility("default"))) NSString * const kCIAttributeTypeTransform __attribute__((availability(ios,introduced=5_0)));



extern "C" __attribute__((visibility("default"))) NSString * const kCICategoryDistortionEffect;
extern "C" __attribute__((visibility("default"))) NSString * const kCICategoryGeometryAdjustment;
extern "C" __attribute__((visibility("default"))) NSString * const kCICategoryCompositeOperation;
extern "C" __attribute__((visibility("default"))) NSString * const kCICategoryHalftoneEffect;
extern "C" __attribute__((visibility("default"))) NSString * const kCICategoryColorAdjustment;
extern "C" __attribute__((visibility("default"))) NSString * const kCICategoryColorEffect;
extern "C" __attribute__((visibility("default"))) NSString * const kCICategoryTransition;
extern "C" __attribute__((visibility("default"))) NSString * const kCICategoryTileEffect;
extern "C" __attribute__((visibility("default"))) NSString * const kCICategoryGenerator;
extern "C" __attribute__((visibility("default"))) NSString * const kCICategoryReduction __attribute__((availability(ios,introduced=5_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCICategoryGradient;
extern "C" __attribute__((visibility("default"))) NSString * const kCICategoryStylize;
extern "C" __attribute__((visibility("default"))) NSString * const kCICategorySharpen;
extern "C" __attribute__((visibility("default"))) NSString * const kCICategoryBlur;
extern "C" __attribute__((visibility("default"))) NSString * const kCICategoryVideo;
extern "C" __attribute__((visibility("default"))) NSString * const kCICategoryStillImage;
extern "C" __attribute__((visibility("default"))) NSString * const kCICategoryInterlaced;
extern "C" __attribute__((visibility("default"))) NSString * const kCICategoryNonSquarePixels;
extern "C" __attribute__((visibility("default"))) NSString * const kCICategoryHighDynamicRange;
extern "C" __attribute__((visibility("default"))) NSString * const kCICategoryBuiltIn;
extern "C" __attribute__((visibility("default"))) NSString * const kCICategoryFilterGenerator __attribute__((availability(ios,introduced=9_0)));




extern "C" __attribute__((visibility("default"))) NSString * const kCIApplyOptionExtent __attribute__((availability(ios,unavailable)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIApplyOptionDefinition __attribute__((availability(ios,unavailable)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIApplyOptionUserInfo __attribute__((availability(ios,unavailable)));




extern "C" __attribute__((visibility("default"))) NSString * const kCIApplyOptionColorSpace __attribute__((availability(ios,unavailable)));




extern "C" __attribute__((visibility("default"))) NSString * const kCIOutputImageKey __attribute__((availability(ios,introduced=5_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputBackgroundImageKey __attribute__((availability(ios,introduced=5_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputImageKey __attribute__((availability(ios,introduced=5_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputDepthImageKey __attribute__((availability(ios,introduced=11_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputDisparityImageKey __attribute__((availability(ios,introduced=11_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputTimeKey __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputTransformKey __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputScaleKey __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputAspectRatioKey __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputCenterKey __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputRadiusKey __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputAngleKey __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputRefractionKey __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputWidthKey __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputSharpnessKey __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputIntensityKey __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputEVKey __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputSaturationKey __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputColorKey __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputBrightnessKey __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputContrastKey __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputBiasKey __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputWeightsKey __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputGradientImageKey __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputMaskImageKey __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputShadingImageKey __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputTargetImageKey __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputExtentKey __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility("default"))) NSString * const kCIInputVersionKey __attribute__((availability(ios,introduced=6_0)));


// @class CIKernel;
#ifndef _REWRITER_typedef_CIKernel
#define _REWRITER_typedef_CIKernel
typedef struct objc_object CIKernel;
typedef struct {} _objc_exc_CIKernel;
#endif

#ifndef _REWRITER_typedef_CIImage
#define _REWRITER_typedef_CIImage
typedef struct objc_object CIImage;
typedef struct {} _objc_exc_CIImage;
#endif

// @protocol CIFilterConstructor;





__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0)))

#ifndef _REWRITER_typedef_CIFilter
#define _REWRITER_typedef_CIFilter
typedef struct objc_object CIFilter;
typedef struct {} _objc_exc_CIFilter;
#endif

struct CIFilter_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_priv[8];
};


// @property (readonly, nonatomic, nullable) CIImage *outputImage __attribute__((availability(ios,introduced=5_0)));






// @property (nonatomic, copy) NSString *name;
// - (NSString *)name __attribute__((availability(ios,introduced=5_0)));
// - (void)setName:(NSString *)aString __attribute__((availability(ios,introduced=10_0)));




// @property (getter=isEnabled) BOOL enabled __attribute__((availability(ios,unavailable)));



// @property (nonatomic, readonly) NSArray<NSString *> *inputKeys;


// @property (nonatomic, readonly) NSArray<NSString *> *outputKeys;


// - (void)setDefaults;


// @property (nonatomic, readonly) NSDictionary<NSString *,id> *attributes;
#if 0
- (nullable CIImage *)apply:(CIKernel *)k
      arguments:(nullable NSArray *)args
           options:(nullable NSDictionary<NSString *,id> *)dict __attribute__((availability(ios,unavailable)));
#endif



// - (nullable CIImage *)apply:(CIKernel *)k, ... __attribute__((sentinel(0,1))) __attribute__((availability(ios,unavailable))) __attribute__((availability(swift, unavailable, message="")));

/* @end */





// @interface CIFilter (CIFilterRegistry)




// + (nullable CIFilter *) filterWithName:(NSString *) name;





#if 0
+ (nullable CIFilter *)filterWithName:(NSString *)name
                        keysAndValues:key0, ... __attribute__((sentinel(0,1))) __attribute__((availability(swift, unavailable, message="")));
#endif






#if 0
+ (nullable CIFilter *)filterWithName:(NSString *)name
                  withInputParameters:(nullable NSDictionary<NSString *,id> *)params __attribute__((availability(ios,introduced=8_0)));
#endif



// + (NSArray<NSString *> *)filterNamesInCategory:(nullable NSString *)category;


// + (NSArray<NSString *> *)filterNamesInCategories:(nullable NSArray<NSString *> *)categories;
#if 0
+ (void)registerFilterName:(NSString *)name
               constructor:(id<CIFilterConstructor>)anObject
           classAttributes:(NSDictionary<NSString *,id> *)attributes __attribute__((availability(ios,introduced=9_0)));
#endif



// + (nullable NSString *)localizedNameForFilterName:(NSString *)filterName __attribute__((availability(ios,introduced=9_0)));


// + (NSString *)localizedNameForCategory:(NSString *)category __attribute__((availability(ios,introduced=9_0)));


// + (nullable NSString *)localizedDescriptionForFilterName:(NSString *)filterName __attribute__((availability(ios,introduced=9_0)));




// + (nullable NSURL *)localizedReferenceDocumentationForFilterName:(NSString *)filterName __attribute__((availability(ios,introduced=9_0)));

/* @end */




// @interface CIFilter (CIFilterXMPSerialization)
#if 0
+ (nullable NSData*)serializedXMPFromFilters:(NSArray<CIFilter *> *)filters
                            inputImageExtent:(CGRect)extent
    __attribute__((availability(ios,introduced=6_0)));
#endif

#if 0
+ (NSArray<CIFilter *> *)filterArrayFromSerializedXMP:(NSData *)xmpData
                                     inputImageExtent:(CGRect)extent
                                                error:(NSError **)outError
    __attribute__((availability(ios,introduced=6_0)));
#endif


/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin
typedef CGRect (*CIKernelROICallback)(int index, CGRect destRect);


// @class CIImage;
#ifndef _REWRITER_typedef_CIImage
#define _REWRITER_typedef_CIImage
typedef struct objc_object CIImage;
typedef struct {} _objc_exc_CIImage;
#endif

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))

#ifndef _REWRITER_typedef_CIKernel
#define _REWRITER_typedef_CIKernel
typedef struct objc_object CIKernel;
typedef struct {} _objc_exc_CIKernel;
#endif

struct CIKernel_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_priv;
};

// + (nullable NSArray<CIKernel *> *)kernelsWithString:(NSString *)string __attribute__((availability(ios,introduced=8_0)));






// + (nullable instancetype)kernelWithString:(NSString *)string __attribute__((availability(ios,introduced=8_0)));







#if 0
+ (nullable instancetype)kernelWithFunctionName:(NSString *)name
                           fromMetalLibraryData:(NSData *)data
                                          error:(NSError **)error __attribute__((availability(ios,introduced=11_0)));
#endif


#if 0
+ (nullable instancetype)kernelWithFunctionName:(NSString *)name
                           fromMetalLibraryData:(NSData *)data
                              outputPixelFormat:(CIFormat)format
                                          error:(NSError **)error __attribute__((availability(ios,introduced=11_0)));
#endif



// @property (atomic, readonly) NSString *name __attribute__((availability(ios,introduced=8_0)));
// - (void)setROISelector:(SEL)method __attribute__((availability(ios,introduced=9_0)));
#if 0
- (nullable CIImage *)applyWithExtent:(CGRect)extent
                          roiCallback:(CIKernelROICallback)callback
                            arguments:(nullable NSArray<id> *)args __attribute__((availability(ios,introduced=8_0)));
#endif

/* @end */

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))

#ifndef _REWRITER_typedef_CIColorKernel
#define _REWRITER_typedef_CIColorKernel
typedef struct objc_object CIColorKernel;
typedef struct {} _objc_exc_CIColorKernel;
#endif

struct CIColorKernel_IMPL {
	struct CIKernel_IMPL CIKernel_IVARS;
};







// + (nullable instancetype)kernelWithString:(NSString *)string;
#if 0
- (nullable CIImage *)applyWithExtent:(CGRect)extent
                            arguments:(nullable NSArray<id> *)args;
#endif

/* @end */

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))

#ifndef _REWRITER_typedef_CIWarpKernel
#define _REWRITER_typedef_CIWarpKernel
typedef struct objc_object CIWarpKernel;
typedef struct {} _objc_exc_CIWarpKernel;
#endif

struct CIWarpKernel_IMPL {
	struct CIKernel_IMPL CIKernel_IVARS;
};







// + (nullable instancetype)kernelWithString:(NSString *)string;
#if 0
- (nullable CIImage *)applyWithExtent:(CGRect)extent
                          roiCallback:(CIKernelROICallback)callback
                           inputImage:(CIImage*)image
                            arguments:(nullable NSArray<id> *)args;
#endif

/* @end */

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=11_0)))

#ifndef _REWRITER_typedef_CIBlendKernel
#define _REWRITER_typedef_CIBlendKernel
typedef struct objc_object CIBlendKernel;
typedef struct {} _objc_exc_CIBlendKernel;
#endif

struct CIBlendKernel_IMPL {
	struct CIColorKernel_IMPL CIColorKernel_IVARS;
};



// + (nullable instancetype)kernelWithString:(NSString *)string;
#if 0
- (nullable CIImage *)applyWithForeground:(CIImage*)foreground
                               background:(CIImage*)background;
#endif


/* @end */


// @interface CIBlendKernel (BuiltIn)





@property (class, strong, readonly) CIBlendKernel *componentAdd;
@property (class, strong, readonly) CIBlendKernel *componentMultiply;
@property (class, strong, readonly) CIBlendKernel *componentMin;
@property (class, strong, readonly) CIBlendKernel *componentMax;




@property (class, strong, readonly) CIBlendKernel *clear;
@property (class, strong, readonly) CIBlendKernel *source;
@property (class, strong, readonly) CIBlendKernel *destination;
@property (class, strong, readonly) CIBlendKernel *sourceOver;
@property (class, strong, readonly) CIBlendKernel *destinationOver;
@property (class, strong, readonly) CIBlendKernel *sourceIn;
@property (class, strong, readonly) CIBlendKernel *destinationIn;
@property (class, strong, readonly) CIBlendKernel *sourceOut;
@property (class, strong, readonly) CIBlendKernel *destinationOut;
@property (class, strong, readonly) CIBlendKernel *sourceAtop;
@property (class, strong, readonly) CIBlendKernel *destinationAtop;
@property (class, strong, readonly) CIBlendKernel *exclusiveOr;






@property (class, strong, readonly) CIBlendKernel *multiply;
@property (class, strong, readonly) CIBlendKernel *screen;
@property (class, strong, readonly) CIBlendKernel *overlay;
@property (class, strong, readonly) CIBlendKernel *darken;
@property (class, strong, readonly) CIBlendKernel *lighten;
@property (class, strong, readonly) CIBlendKernel *colorDodge;
@property (class, strong, readonly) CIBlendKernel *colorBurn;
@property (class, strong, readonly) CIBlendKernel *hardLight;
@property (class, strong, readonly) CIBlendKernel *softLight;
@property (class, strong, readonly) CIBlendKernel *difference;
@property (class, strong, readonly) CIBlendKernel *exclusion;


@property (class, strong, readonly) CIBlendKernel *hue;
@property (class, strong, readonly) CIBlendKernel *saturation;
@property (class, strong, readonly) CIBlendKernel *color;
@property (class, strong, readonly) CIBlendKernel *luminosity;


@property (class, strong, readonly) CIBlendKernel *subtract;
@property (class, strong, readonly) CIBlendKernel *divide;
@property (class, strong, readonly) CIBlendKernel *linearBurn;
@property (class, strong, readonly) CIBlendKernel *linearDodge;
@property (class, strong, readonly) CIBlendKernel *vividLight;
@property (class, strong, readonly) CIBlendKernel *linearLight;
@property (class, strong, readonly) CIBlendKernel *pinLight;
@property (class, strong, readonly) CIBlendKernel *hardMix;
@property (class, strong, readonly) CIBlendKernel *darkerColor;
@property (class, strong, readonly) CIBlendKernel *lighterColor;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class CIImage;
#ifndef _REWRITER_typedef_CIImage
#define _REWRITER_typedef_CIImage
typedef struct objc_object CIImage;
typedef struct {} _objc_exc_CIImage;
#endif

// @class CIContext;
#ifndef _REWRITER_typedef_CIContext
#define _REWRITER_typedef_CIContext
typedef struct objc_object CIContext;
typedef struct {} _objc_exc_CIContext;
#endif

// @class CIFeature;
#ifndef _REWRITER_typedef_CIFeature
#define _REWRITER_typedef_CIFeature
typedef struct objc_object CIFeature;
typedef struct {} _objc_exc_CIFeature;
#endif






__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0)))

#ifndef _REWRITER_typedef_CIDetector
#define _REWRITER_typedef_CIDetector
typedef struct objc_object CIDetector;
typedef struct {} _objc_exc_CIDetector;
#endif

struct CIDetector_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};

#if 0
+ (nullable CIDetector *)detectorOfType:(NSString*)type
                                context:(nullable CIContext *)context
                                options:(nullable NSDictionary<NSString *,id> *)options
    __attribute__((availability(ios,introduced=5_0)));
#endif

#if 0
- (NSArray<CIFeature *> *)featuresInImage:(CIImage *)image
    __attribute__((availability(ios,introduced=5_0)));
#endif





#if 0
- (NSArray<CIFeature *> *)featuresInImage:(CIImage *)image
                                  options:(nullable NSDictionary<NSString *,id> *)options
    __attribute__((availability(ios,introduced=5_0)));
#endif


/* @end */






extern "C" __attribute__((visibility("default"))) NSString* const CIDetectorTypeFace __attribute__((availability(ios,introduced=5_0)));


extern "C" __attribute__((visibility("default"))) NSString* const CIDetectorTypeRectangle __attribute__((availability(ios,introduced=8_0)));


extern "C" __attribute__((visibility("default"))) NSString* const CIDetectorTypeQRCode __attribute__((availability(ios,introduced=8_0)));



extern "C" __attribute__((visibility("default"))) NSString* const CIDetectorTypeText __attribute__((availability(ios,introduced=9_0)));





extern "C" __attribute__((visibility("default"))) NSString* const CIDetectorAccuracy __attribute__((availability(ios,introduced=5_0)));





extern "C" __attribute__((visibility("default"))) NSString* const CIDetectorAccuracyLow __attribute__((availability(ios,introduced=5_0)));
extern "C" __attribute__((visibility("default"))) NSString* const CIDetectorAccuracyHigh __attribute__((availability(ios,introduced=5_0)));


extern "C" __attribute__((visibility("default"))) NSString* const CIDetectorTracking __attribute__((availability(ios,introduced=6_0)));
extern "C" __attribute__((visibility("default"))) NSString* const CIDetectorMinFeatureSize __attribute__((availability(ios,introduced=6_0)));





extern "C" __attribute__((visibility("default"))) NSString* const CIDetectorMaxFeatureCount __attribute__((availability(ios,introduced=10_0)));


extern "C" __attribute__((visibility("default"))) NSString* const CIDetectorNumberOfAngles __attribute__((availability(ios,introduced=9_0)));







extern "C" __attribute__((visibility("default"))) NSString *const CIDetectorImageOrientation __attribute__((availability(ios,introduced=5_0)));


extern "C" __attribute__((visibility("default"))) NSString *const CIDetectorEyeBlink __attribute__((availability(ios,introduced=7_0)));



extern "C" __attribute__((visibility("default"))) NSString *const CIDetectorSmile __attribute__((availability(ios,introduced=7_0)));


extern "C" __attribute__((visibility("default"))) NSString* const CIDetectorFocalLength __attribute__((availability(ios,introduced=8_0)));


extern "C" __attribute__((visibility("default"))) NSString* const CIDetectorAspectRatio __attribute__((availability(ios,introduced=8_0)));



extern "C" __attribute__((visibility("default"))) NSString* const CIDetectorReturnSubFeatures __attribute__((availability(ios,introduced=9.0)));
#pragma clang assume_nonnull end








#pragma clang assume_nonnull begin


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0)))

#ifndef _REWRITER_typedef_CIFeature
#define _REWRITER_typedef_CIFeature
typedef struct objc_object CIFeature;
typedef struct {} _objc_exc_CIFeature;
#endif

struct CIFeature_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



// @property (readonly, retain) NSString *type;

// @property (readonly, assign) CGRect bounds;

/* @end */



extern "C" __attribute__((visibility("default"))) NSString* const CIFeatureTypeFace;

extern "C" __attribute__((visibility("default"))) NSString* const CIFeatureTypeRectangle;

extern "C" __attribute__((visibility("default"))) NSString* const CIFeatureTypeQRCode;

extern "C" __attribute__((visibility("default"))) NSString* const CIFeatureTypeText;




__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0)))

#ifndef _REWRITER_typedef_CIFaceFeature
#define _REWRITER_typedef_CIFaceFeature
typedef struct objc_object CIFaceFeature;
typedef struct {} _objc_exc_CIFaceFeature;
#endif

struct CIFaceFeature_IMPL {
	struct CIFeature_IMPL CIFeature_IVARS;
	CGRect bounds;
	BOOL hasLeftEyePosition;
	CGPoint leftEyePosition;
	BOOL hasRightEyePosition;
	CGPoint rightEyePosition;
	BOOL hasMouthPosition;
	CGPoint mouthPosition;
	BOOL hasTrackingID;
	int trackingID;
	BOOL hasTrackingFrameCount;
	int trackingFrameCount;
	BOOL hasFaceAngle;
	float faceAngle;
	BOOL hasSmile;
	BOOL leftEyeClosed;
	BOOL rightEyeClosed;
};








// @property (readonly, assign) CGRect bounds;
// @property (readonly, assign) BOOL hasLeftEyePosition;
// @property (readonly, assign) CGPoint leftEyePosition;
// @property (readonly, assign) BOOL hasRightEyePosition;
// @property (readonly, assign) CGPoint rightEyePosition;
// @property (readonly, assign) BOOL hasMouthPosition;
// @property (readonly, assign) CGPoint mouthPosition;

// @property (readonly, assign) BOOL hasTrackingID;
// @property (readonly, assign) int trackingID;
// @property (readonly, assign) BOOL hasTrackingFrameCount;
// @property (readonly, assign) int trackingFrameCount;

// @property (readonly, assign) BOOL hasFaceAngle;
// @property (readonly, assign) float faceAngle;

// @property (readonly, assign) BOOL hasSmile;
// @property (readonly, assign) BOOL leftEyeClosed;
// @property (readonly, assign) BOOL rightEyeClosed;

/* @end */





__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))

#ifndef _REWRITER_typedef_CIRectangleFeature
#define _REWRITER_typedef_CIRectangleFeature
typedef struct objc_object CIRectangleFeature;
typedef struct {} _objc_exc_CIRectangleFeature;
#endif

struct CIRectangleFeature_IMPL {
	struct CIFeature_IMPL CIFeature_IVARS;
	CGRect bounds;
	CGPoint topLeft;
	CGPoint topRight;
	CGPoint bottomLeft;
	CGPoint bottomRight;
};


// @property (readonly) CGRect bounds;
// @property (readonly) CGPoint topLeft;
// @property (readonly) CGPoint topRight;
// @property (readonly) CGPoint bottomLeft;
// @property (readonly) CGPoint bottomRight;

/* @end */





// @class CIQRCodeDescriptor;
#ifndef _REWRITER_typedef_CIQRCodeDescriptor
#define _REWRITER_typedef_CIQRCodeDescriptor
typedef struct objc_object CIQRCodeDescriptor;
typedef struct {} _objc_exc_CIQRCodeDescriptor;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))

#ifndef _REWRITER_typedef_CIQRCodeFeature
#define _REWRITER_typedef_CIQRCodeFeature
typedef struct objc_object CIQRCodeFeature;
typedef struct {} _objc_exc_CIQRCodeFeature;
#endif

struct CIQRCodeFeature_IMPL {
	struct CIFeature_IMPL CIFeature_IVARS;
	CGRect bounds;
	CGPoint topLeft;
	CGPoint topRight;
	CGPoint bottomLeft;
	CGPoint bottomRight;
	CIQRCodeDescriptor *__strong symbolDescriptor;
};


// @property (readonly) CGRect bounds;
// @property (readonly) CGPoint topLeft;
// @property (readonly) CGPoint topRight;
// @property (readonly) CGPoint bottomLeft;
// @property (readonly) CGPoint bottomRight;


// @property (nullable, readonly) NSString* messageString;




// @property (nullable, readonly) CIQRCodeDescriptor *symbolDescriptor __attribute__((availability(ios,introduced=11_0)));

/* @end */






__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0)))

#ifndef _REWRITER_typedef_CITextFeature
#define _REWRITER_typedef_CITextFeature
typedef struct objc_object CITextFeature;
typedef struct {} _objc_exc_CITextFeature;
#endif

struct CITextFeature_IMPL {
	struct CIFeature_IMPL CIFeature_IVARS;
};


// @property (readonly) CGRect bounds;
// @property (readonly) CGPoint topLeft;
// @property (readonly) CGPoint topRight;
// @property (readonly) CGPoint bottomLeft;
// @property (readonly) CGPoint bottomRight;

// @property (nullable, readonly) NSArray *subFeatures;





/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @interface CIImage (CIImageProvider)






#if 0
+ (CIImage *)imageWithImageProvider:(id)p
          size:(size_t)width
                                   :(size_t)height
        format:(CIFormat)f
       colorSpace:(nullable CGColorSpaceRef)cs
                            options:(nullable NSDictionary<NSString *,id> *)options
    __attribute__((availability(ios,introduced=9_0)));
#endif


#if 0
- (instancetype)initWithImageProvider:(id)p
                                 size:(size_t)width
                                     :(size_t)height
                               format:(CIFormat)f
                           colorSpace:(nullable CGColorSpaceRef)cs
                              options:(nullable NSDictionary<NSString *,id> *)options
    __attribute__((availability(ios,introduced=9_0)));
#endif


/* @end */



// @interface NSObject (CIImageProvider)
#if 0
- (void)provideImageData:(void *)data
    bytesPerRow:(size_t)rowbytes
      origin:(size_t)x
                        :(size_t)y
     size:(size_t)width
                        :(size_t)height
    userInfo:(nullable id)info;
#endif


/* @end */

extern "C" __attribute__((visibility("default"))) NSString * const kCIImageProviderTileSize __attribute__((availability(ios,introduced=9_0)));




extern "C" __attribute__((visibility("default"))) NSString * const kCIImageProviderUserInfo __attribute__((availability(ios,introduced=9_0)));
#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @protocol MTLTexture, MTLCommandBuffer;

// @protocol CIImageProcessorInput;
// @protocol CIImageProcessorOutput;






__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0)))

#ifndef _REWRITER_typedef_CIImageProcessorKernel
#define _REWRITER_typedef_CIImageProcessorKernel
typedef struct objc_object CIImageProcessorKernel;
typedef struct {} _objc_exc_CIImageProcessorKernel;
#endif

struct CIImageProcessorKernel_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};

#if 0
+ (BOOL)processWithInputs:(nullable NSArray<id<CIImageProcessorInput>> *)inputs
                arguments:(nullable NSDictionary<NSString*,id> *)arguments
                   output:(id <CIImageProcessorOutput>)output
                    error:(NSError **)error;
#endif

#if 0
+ (CGRect)roiForInput:(int)input
            arguments:(nullable NSDictionary<NSString*,id> *)arguments
           outputRect:(CGRect)outputRect;
#endif

// + (CIFormat)formatForInputAtIndex:(int)input;
@property (class, readonly) CIFormat outputFormat;
@property (class, readonly) bool outputIsOpaque __attribute__((availability(ios,introduced=11_0)));
@property (class, readonly) bool synchronizeInputs;
#if 0
+ (nullable CIImage *)applyWithExtent:(CGRect)extent
                               inputs:(nullable NSArray<CIImage*> *)inputs
                            arguments:(nullable NSDictionary<NSString*,id> *)args
                                error:(NSError **)error;
#endif

/* @end */



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0)))
// @protocol CIImageProcessorInput



// @property (nonatomic, readonly) CGRect region;



// @property (nonatomic, readonly) size_t bytesPerRow;


// @property (nonatomic, readonly) CIFormat format;



// @property (readonly, nonatomic) const void *baseAddress __attribute__((objc_returns_inner_pointer));




// @property (nonatomic, readonly) IOSurfaceRef surface;




// @property (nonatomic, readonly, nullable) CVPixelBufferRef pixelBuffer;




// @property (nonatomic, readonly, nullable) id<MTLTexture> metalTexture;

/* @end */



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0)))
// @protocol CIImageProcessorOutput


// @property (nonatomic, readonly) CGRect region;



// @property (nonatomic, readonly) size_t bytesPerRow;


// @property (nonatomic, readonly) CIFormat format;


// @property (readonly, nonatomic) void *baseAddress __attribute__((objc_returns_inner_pointer));



// @property (nonatomic, readonly) IOSurfaceRef surface;



// @property (nonatomic, readonly, nullable) CVPixelBufferRef pixelBuffer;



// @property (nonatomic, readonly, nullable) id<MTLTexture> metalTexture;


// @property (nonatomic, readonly, nullable) id<MTLCommandBuffer> metalCommandBuffer;

/* @end */

#pragma clang assume_nonnull end








#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0)))

#ifndef _REWRITER_typedef_CIImageAccumulator
#define _REWRITER_typedef_CIImageAccumulator
typedef struct objc_object CIImageAccumulator;
typedef struct {} _objc_exc_CIImageAccumulator;
#endif

struct CIImageAccumulator_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_state;
};

#if 0
+ (nullable instancetype)imageAccumulatorWithExtent:(CGRect)extent
                                             format:(CIFormat)format;
#endif


#if 0
+ (nullable instancetype)imageAccumulatorWithExtent:(CGRect)extent
                                             format:(CIFormat)format
                                         colorSpace:(CGColorSpaceRef)colorSpace
__attribute__((availability(ios,introduced=9_0)));
#endif


#if 0
- (nullable instancetype)initWithExtent:(CGRect)extent
                                 format:(CIFormat)format;
#endif


#if 0
- (nullable instancetype)initWithExtent:(CGRect)extent
                                 format:(CIFormat)format
                             colorSpace:(CGColorSpaceRef)colorSpace
__attribute__((availability(ios,introduced=9_0)));
#endif

// @property (readonly) CGRect extent;


// @property (readonly) CIFormat format;




// - (CIImage *)image;


// - (void)setImage:(CIImage *)image;




// - (void)setImage:(CIImage *)image dirtyRect:(CGRect)dirtyRect;


// - (void)clear;

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0)))

#ifndef _REWRITER_typedef_CIFilterShape
#define _REWRITER_typedef_CIFilterShape
typedef struct objc_object CIFilterShape;
typedef struct {} _objc_exc_CIFilterShape;
#endif

struct CIFilterShape_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	uint32_t _pad;
	void *_priv;
};



// + (instancetype)shapeWithRect:(CGRect)r;



// - (instancetype)initWithRect:(CGRect)r;
// - (CIFilterShape *)transformBy:(CGAffineTransform)m interior:(BOOL)flag;


// - (CIFilterShape *)insetByX:(int)dx Y:(int)dy;


// - (CIFilterShape *)unionWith:(CIFilterShape *)s2;



// - (CIFilterShape *)unionWithRect:(CGRect)r;


// - (CIFilterShape *)intersectWith:(CIFilterShape *)s2;



// - (CIFilterShape *)intersectWithRect:(CGRect)r;



// @property (readonly) CGRect extent;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class CIFilterShape;
#ifndef _REWRITER_typedef_CIFilterShape
#define _REWRITER_typedef_CIFilterShape
typedef struct objc_object CIFilterShape;
typedef struct {} _objc_exc_CIFilterShape;
#endif

#ifndef _REWRITER_typedef_CIImage
#define _REWRITER_typedef_CIImage
typedef struct objc_object CIImage;
typedef struct {} _objc_exc_CIImage;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0)))

#ifndef _REWRITER_typedef_CISampler
#define _REWRITER_typedef_CISampler
typedef struct objc_object CISampler;
typedef struct {} _objc_exc_CISampler;
#endif

struct CISampler_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_priv;
};



// + (instancetype)samplerWithImage:(CIImage *)im;
// + (instancetype)samplerWithImage:(CIImage *)im keysAndValues:key0, ... __attribute__((sentinel(0,1)));
// + (instancetype)samplerWithImage:(CIImage *)im options:(nullable NSDictionary *)dict;



// - (instancetype)initWithImage:(CIImage *)im;
// - (instancetype)initWithImage:(CIImage *)im keysAndValues:key0, ...;
// - (instancetype)initWithImage:(CIImage *)im options:(nullable NSDictionary *)dict __attribute__((objc_designated_initializer));






// @property (readonly) CIFilterShape * definition;




// @property (readonly) CGRect extent;

/* @end */





extern "C" __attribute__((visibility("default"))) NSString *const kCISamplerAffineMatrix __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility("default"))) NSString *const kCISamplerWrapMode __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility("default"))) NSString *const kCISamplerFilterMode __attribute__((availability(ios,introduced=9_0)));

extern "C" __attribute__((visibility("default"))) NSString *const kCISamplerWrapBlack __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility("default"))) NSString *const kCISamplerWrapClamp __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility("default"))) NSString *const kCISamplerFilterNearest __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility("default"))) NSString *const kCISamplerFilterLinear __attribute__((availability(ios,introduced=9_0)));




extern "C" __attribute__((visibility("default"))) NSString *const kCISamplerColorSpace __attribute__((availability(ios,introduced=9_0)));
#pragma clang assume_nonnull end
// @class NSURL;
#ifndef _REWRITER_typedef_NSURL
#define _REWRITER_typedef_NSURL
typedef struct objc_object NSURL;
typedef struct {} _objc_exc_NSURL;
#endif

// @class NSDictionary;
#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

// @class NSData;
#ifndef _REWRITER_typedef_NSData
#define _REWRITER_typedef_NSData
typedef struct objc_object NSData;
typedef struct {} _objc_exc_NSData;
#endif




// @interface CIFilter (CIRAWFilter)


// + (CIFilter *)filterWithImageURL:(NSURL *)url options:(NSDictionary *)options __attribute__((availability(ios,introduced=10_0)));




// + (CIFilter *)filterWithImageData:(NSData *)data options:(NSDictionary *)options __attribute__((availability(ios,introduced=10_0)));






// + (CIFilter *)filterWithCVPixelBuffer:(CVPixelBufferRef)pixelBuffer properties:(NSDictionary *)properties options:(NSDictionary *)options __attribute__((availability(ios,introduced=10_0)));



extern "C" __attribute__((visibility("default"))) NSString *const kCIInputAllowDraftModeKey __attribute__((availability(ios,introduced=10_0)));


extern "C" __attribute__((visibility("default"))) NSString *const kCIInputDecoderVersionKey __attribute__((availability(ios,introduced=10_0)));


extern "C" __attribute__((visibility("default"))) NSString *const kCISupportedDecoderVersionsKey __attribute__((availability(ios,introduced=10_0)));
extern "C" __attribute__((visibility("default"))) NSString *const kCIInputBaselineExposureKey __attribute__((availability(ios,introduced=10_0)));



extern "C" __attribute__((visibility("default"))) NSString *const kCIInputBoostKey __attribute__((availability(ios,introduced=10_0)));



extern "C" __attribute__((visibility("default"))) NSString *const kCIInputBoostShadowAmountKey __attribute__((availability(ios,introduced=10_0)));



extern "C" __attribute__((visibility("default"))) NSString *const kCIInputDisableGamutMapKey __attribute__((availability(ios,introduced=10_0)));


extern "C" __attribute__((visibility("default"))) NSString *const kCIInputNeutralChromaticityXKey __attribute__((availability(ios,introduced=10_0)));


extern "C" __attribute__((visibility("default"))) NSString *const kCIInputNeutralChromaticityYKey __attribute__((availability(ios,introduced=10_0)));


extern "C" __attribute__((visibility("default"))) NSString *const kCIInputNeutralTemperatureKey __attribute__((availability(ios,introduced=10_0)));


extern "C" __attribute__((visibility("default"))) NSString *const kCIInputNeutralTintKey __attribute__((availability(ios,introduced=10_0)));



extern "C" __attribute__((visibility("default"))) NSString *const kCIInputNeutralLocationKey __attribute__((availability(ios,introduced=10_0)));


extern "C" __attribute__((visibility("default"))) NSString *const kCIInputScaleFactorKey __attribute__((availability(ios,introduced=10_0)));





extern "C" __attribute__((visibility("default"))) NSString *const kCIInputIgnoreImageOrientationKey __attribute__((availability(ios,introduced=10_0)));




extern "C" __attribute__((visibility("default"))) NSString *const kCIInputImageOrientationKey __attribute__((availability(ios,introduced=10_0)));




extern "C" __attribute__((visibility("default"))) NSString *const kCIInputEnableSharpeningKey __attribute__((availability(ios,introduced=10_0)));


extern "C" __attribute__((visibility("default"))) NSString *const kCIInputEnableChromaticNoiseTrackingKey __attribute__((availability(ios,introduced=10_0)));


extern "C" __attribute__((visibility("default"))) NSString *const kCIInputNoiseReductionAmountKey __attribute__((availability(ios,introduced=10_0)));


extern "C" __attribute__((visibility("default"))) NSString *const kCIInputMoireAmountKey __attribute__((availability(ios,introduced=11_0)));


extern "C" __attribute__((visibility("default"))) NSString *const kCIInputEnableVendorLensCorrectionKey __attribute__((availability(ios,introduced=10_0)));


extern "C" __attribute__((visibility("default"))) NSString *const kCIInputLuminanceNoiseReductionAmountKey __attribute__((availability(ios,introduced=10_0)));


extern "C" __attribute__((visibility("default"))) NSString *const kCIInputColorNoiseReductionAmountKey __attribute__((availability(ios,introduced=10_0)));


extern "C" __attribute__((visibility("default"))) NSString *const kCIInputNoiseReductionSharpnessAmountKey __attribute__((availability(ios,introduced=10_0)));


extern "C" __attribute__((visibility("default"))) NSString *const kCIInputNoiseReductionContrastAmountKey __attribute__((availability(ios,introduced=10_0)));


extern "C" __attribute__((visibility("default"))) NSString *const kCIInputNoiseReductionDetailAmountKey __attribute__((availability(ios,introduced=10_0)));




extern "C" __attribute__((visibility("default"))) NSString *const kCIInputLinearSpaceFilter __attribute__((availability(ios,introduced=10_0)));



extern "C" __attribute__((visibility("default"))) NSString *const kCIOutputNativeSizeKey __attribute__((availability(ios,introduced=10_0)));




extern "C" __attribute__((visibility("default"))) NSString *const kCIActiveKeys __attribute__((availability(ios,introduced=10_0)));

/* @end */

#pragma clang assume_nonnull begin





typedef NSString *IOSurfacePropertyKey __attribute__((swift_wrapper(enum)));






extern IOSurfacePropertyKey IOSurfacePropertyAllocSizeKey __attribute__((availability(ios,introduced=10.0)));


extern IOSurfacePropertyKey IOSurfacePropertyKeyWidth __attribute__((availability(ios,introduced=10.0)));


extern IOSurfacePropertyKey IOSurfacePropertyKeyHeight __attribute__((availability(ios,introduced=10.0)));




extern IOSurfacePropertyKey IOSurfacePropertyKeyBytesPerRow __attribute__((availability(ios,introduced=10.0)));




extern IOSurfacePropertyKey IOSurfacePropertyKeyBytesPerElement __attribute__((availability(ios,introduced=10.0)));


extern IOSurfacePropertyKey IOSurfacePropertyKeyElementWidth __attribute__((availability(ios,introduced=10.0)));


extern IOSurfacePropertyKey IOSurfacePropertyKeyElementHeight __attribute__((availability(ios,introduced=10.0)));


extern IOSurfacePropertyKey IOSurfacePropertyKeyOffset __attribute__((availability(ios,introduced=10.0)));




extern IOSurfacePropertyKey IOSurfacePropertyKeyPlaneInfo __attribute__((availability(ios,introduced=10.0)));


extern IOSurfacePropertyKey IOSurfacePropertyKeyPlaneWidth __attribute__((availability(ios,introduced=10.0)));


extern IOSurfacePropertyKey IOSurfacePropertyKeyPlaneHeight __attribute__((availability(ios,introduced=10.0)));




extern IOSurfacePropertyKey IOSurfacePropertyKeyPlaneBytesPerRow __attribute__((availability(ios,introduced=10.0)));



extern IOSurfacePropertyKey IOSurfacePropertyKeyPlaneOffset __attribute__((availability(ios,introduced=10.0)));


extern IOSurfacePropertyKey IOSurfacePropertyKeyPlaneSize __attribute__((availability(ios,introduced=10.0)));




extern IOSurfacePropertyKey IOSurfacePropertyKeyPlaneBase __attribute__((availability(ios,introduced=10.0)));


extern IOSurfacePropertyKey IOSurfacePropertyKeyPlaneBytesPerElement __attribute__((availability(ios,introduced=10.0)));


extern IOSurfacePropertyKey IOSurfacePropertyKeyPlaneElementWidth __attribute__((availability(ios,introduced=10.0)));


extern IOSurfacePropertyKey IOSurfacePropertyKeyPlaneElementHeight __attribute__((availability(ios,introduced=10.0)));




extern IOSurfacePropertyKey IOSurfacePropertyKeyCacheMode __attribute__((availability(ios,introduced=10.0)));


extern IOSurfacePropertyKey IOSurfacePropertyKeyPixelFormat __attribute__((availability(ios,introduced=10.0)));


extern IOSurfacePropertyKey IOSurfacePropertyKeyPixelSizeCastingAllowed __attribute__((availability(ios,introduced=10.0)));


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0)))

#ifndef _REWRITER_typedef_IOSurface
#define _REWRITER_typedef_IOSurface
typedef struct objc_object IOSurface;
typedef struct {} _objc_exc_IOSurface;
#endif

struct IOSurface_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_impl;
};



// - (nullable instancetype)initWithProperties:(NSDictionary <IOSurfacePropertyKey, id> *)properties;
// - (kern_return_t)lockWithOptions:(IOSurfaceLockOptions)options seed:(nullable uint32_t *)seed;
// - (kern_return_t)unlockWithOptions:(IOSurfaceLockOptions)options seed:(nullable uint32_t *)seed;


// @property (readonly) NSInteger allocationSize;

// @property (readonly) NSInteger width;
// @property (readonly) NSInteger height;
// @property (readonly) void *baseAddress __attribute__((objc_returns_inner_pointer));
// @property (readonly) OSType pixelFormat;

// @property (readonly) NSInteger bytesPerRow;
// @property (readonly) NSInteger bytesPerElement;
// @property (readonly) NSInteger elementWidth;
// @property (readonly) NSInteger elementHeight;



// @property (readonly) uint32_t seed;


// @property (readonly) NSUInteger planeCount;




// - (NSInteger)widthOfPlaneAtIndex:(NSUInteger)planeIndex;
// - (NSInteger)heightOfPlaneAtIndex:(NSUInteger)planeIndex;
// - (NSInteger)bytesPerRowOfPlaneAtIndex:(NSUInteger)planeIndex;
// - (NSInteger)bytesPerElementOfPlaneAtIndex:(NSUInteger)planeIndex;
// - (NSInteger)elementWidthOfPlaneAtIndex:(NSUInteger)planeIndex;
// - (NSInteger)elementHeightOfPlaneAtIndex:(NSUInteger)planeIndex;
// - (void *)baseAddressOfPlaneAtIndex:(NSUInteger)planeIndex __attribute__((objc_returns_inner_pointer));




// - (void)setAttachment:(id)anObject forKey:(NSString *)key;
// - (nullable id)attachmentForKey:(NSString *)key;
// - (void)removeAttachmentForKey:(NSString *)key;
// - (void)setAllAttachments:(NSDictionary<NSString *, id> *)dict;
// - (nullable NSDictionary<NSString *, id> *)allAttachments;
// - (void)removeAllAttachments;
// @property (readonly, getter = isInUse) BOOL inUse;
// - (void)incrementUseCount;
// - (void)decrementUseCount;




// @property (readonly ) int32_t localUseCount;




// @property (readonly) BOOL allowsPixelSizeCasting;


#if 0
- (kern_return_t)setPurgeable:(IOSurfacePurgeabilityState)newState oldState:(IOSurfacePurgeabilityState * _Nullable)oldState
 __attribute__((availability(ios,introduced=11.0)));
#endif


/* @end */

#pragma clang assume_nonnull end



// @protocol MTLTexture, MTLCommandBuffer;

#pragma clang assume_nonnull begin







__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=11_0)))

#ifndef _REWRITER_typedef_CIRenderDestination
#define _REWRITER_typedef_CIRenderDestination
typedef struct objc_object CIRenderDestination;
typedef struct {} _objc_exc_CIRenderDestination;
#endif

struct CIRenderDestination_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_priv;
};

// - (instancetype) initWithPixelBuffer:(CVPixelBufferRef)pixelBuffer;
// - (instancetype) initWithIOSurface:(IOSurface*)surface;
#if 0
- (instancetype) initWithMTLTexture:(id<MTLTexture>)texture
                      commandBuffer:(nullable id<MTLCommandBuffer>)commandBuffer;
#endif

#if 0
- (instancetype) initWithWidth:(NSUInteger)width
                        height:(NSUInteger)height
                   pixelFormat:(MTLPixelFormat)pixelFormat
                 commandBuffer:(nullable id<MTLCommandBuffer>)commandBuffer
            mtlTextureProvider:(id<MTLTexture> (^)(void))block;
#endif

#if 0
- (instancetype) initWithGLTexture:(unsigned int)texture
                      target:(unsigned int)target
                             width:(NSUInteger)width
                            height:(NSUInteger)height;
#endif

#if 0
- (instancetype) initWithBitmapData:(void *)data
                              width:(NSUInteger)width
                             height:(NSUInteger)height
                        bytesPerRow:(NSUInteger)bytesPerRow
                             format:(CIFormat)format;
#endif





// @property (readonly) NSUInteger width;
// @property (readonly) NSUInteger height;


typedef NSUInteger CIRenderDestinationAlphaMode; enum {
    CIRenderDestinationAlphaNone = 0,
    CIRenderDestinationAlphaPremultiplied = 1,
    CIRenderDestinationAlphaUnpremultiplied = 2
};




// @property CIRenderDestinationAlphaMode alphaMode;
// @property (getter=isFlipped) BOOL flipped;



// @property (getter=isDithered) BOOL dithered;




// @property (getter=isClamped) BOOL clamped;






// @property (nullable, nonatomic) CGColorSpaceRef colorSpace;



// @property (nullable, nonatomic, retain) CIBlendKernel* blendKernel;




// @property BOOL blendsInDestinationColorSpace;

/* @end */





__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=11_0)))

#ifndef _REWRITER_typedef_CIRenderInfo
#define _REWRITER_typedef_CIRenderInfo
typedef struct objc_object CIRenderInfo;
typedef struct {} _objc_exc_CIRenderInfo;
#endif

struct CIRenderInfo_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_priv;
};



// @property (readonly) NSTimeInterval kernelExecutionTime;




// @property (readonly) NSInteger passCount;


// @property (readonly) NSInteger pixelsProcessed;

/* @end */





__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=11_0)))

#ifndef _REWRITER_typedef_CIRenderTask
#define _REWRITER_typedef_CIRenderTask
typedef struct objc_object CIRenderTask;
typedef struct {} _objc_exc_CIRenderTask;
#endif

struct CIRenderTask_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_priv;
};


// - (nullable CIRenderInfo*) waitUntilCompletedAndReturnError:(NSError**)error;

/* @end */



// @interface CIContext (CIRenderDestination)
#if 0
- (nullable CIRenderTask*) startTaskToRender:(CIImage*)image
                                    fromRect:(CGRect)fromRect
                               toDestination:(CIRenderDestination*)destination
                                     atPoint:(CGPoint)atPoint
                                       error:(NSError**)error __attribute__((availability(ios,introduced=11_0)));
#endif





#if 0
- (nullable CIRenderTask*) startTaskToRender:(CIImage*)image
                               toDestination:(CIRenderDestination*)destination
                                       error:(NSError**)error __attribute__((availability(ios,introduced=11_0)));
#endif

#if 0
- (BOOL) prepareRender:(CIImage*)image
              fromRect:(CGRect)fromRect
         toDestination:(CIRenderDestination*)destination
               atPoint:(CGPoint)atPoint
                 error:(NSError**)error __attribute__((availability(ios,introduced=11_0)));
#endif





#if 0
- (nullable CIRenderTask*) startTaskToClear:(CIRenderDestination*)destination
                                      error:(NSError**)error __attribute__((availability(ios,introduced=11_0)));
#endif


/* @end */

#pragma clang assume_nonnull end








#pragma clang assume_nonnull begin
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=11_0)))

#ifndef _REWRITER_typedef_CIBarcodeDescriptor
#define _REWRITER_typedef_CIBarcodeDescriptor
typedef struct objc_object CIBarcodeDescriptor;
typedef struct {} _objc_exc_CIBarcodeDescriptor;
#endif

struct CIBarcodeDescriptor_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};

/* @end */

typedef NSInteger CIQRCodeErrorCorrectionLevel; enum
{
    CIQRCodeErrorCorrectionLevelL __attribute__((swift_name("levelL"))) = 'L',
    CIQRCodeErrorCorrectionLevelM __attribute__((swift_name("levelM"))) = 'M',
    CIQRCodeErrorCorrectionLevelQ __attribute__((swift_name("levelQ"))) = 'Q',
    CIQRCodeErrorCorrectionLevelH __attribute__((swift_name("levelH"))) = 'H',

} __attribute__((swift_name("CIQRCodeDescriptor.ErrorCorrectionLevel")));






__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=11_0)))

#ifndef _REWRITER_typedef_CIQRCodeDescriptor
#define _REWRITER_typedef_CIQRCodeDescriptor
typedef struct objc_object CIQRCodeDescriptor;
typedef struct {} _objc_exc_CIQRCodeDescriptor;
#endif

struct CIQRCodeDescriptor_IMPL {
	struct CIBarcodeDescriptor_IMPL CIBarcodeDescriptor_IVARS;
	NSData *__strong errorCorrectedPayload;
	NSInteger symbolVersion;
	uint8_t maskPattern;
	CIQRCodeErrorCorrectionLevel errorCorrectionLevel;
};

// @property (readonly) NSData *errorCorrectedPayload;
// @property (readonly) NSInteger symbolVersion;
// @property (readonly) uint8_t maskPattern;
// @property (readonly) CIQRCodeErrorCorrectionLevel errorCorrectionLevel;


#if 0
- (nullable instancetype)initWithPayload:(NSData *)errorCorrectedPayload
                           symbolVersion:(NSInteger)symbolVersion
                             maskPattern:(uint8_t)maskPattern
                    errorCorrectionLevel:(CIQRCodeErrorCorrectionLevel)errorCorrectionLevel;
#endif



#if 0
+ (nullable instancetype)descriptorWithPayload:(NSData *)errorCorrectedPayload
                                 symbolVersion:(NSInteger)symbolVersion
                                   maskPattern:(uint8_t)maskPattern
                          errorCorrectionLevel:(CIQRCodeErrorCorrectionLevel)errorCorrectionLevel;
#endif


/* @end */

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=11_0)))

#ifndef _REWRITER_typedef_CIAztecCodeDescriptor
#define _REWRITER_typedef_CIAztecCodeDescriptor
typedef struct objc_object CIAztecCodeDescriptor;
typedef struct {} _objc_exc_CIAztecCodeDescriptor;
#endif

struct CIAztecCodeDescriptor_IMPL {
	struct CIBarcodeDescriptor_IMPL CIBarcodeDescriptor_IVARS;
	NSData *__strong errorCorrectedPayload;
	BOOL isCompact;
	NSInteger layerCount;
	NSInteger dataCodewordCount;
};

// @property (readonly) NSData *errorCorrectedPayload;
// @property (readonly) BOOL isCompact;
// @property (readonly) NSInteger layerCount;
// @property (readonly) NSInteger dataCodewordCount;


#if 0
- (nullable instancetype)initWithPayload:(NSData *)errorCorrectedPayload
                               isCompact:(BOOL)isCompact
                              layerCount:(NSInteger)layerCount
                       dataCodewordCount:(NSInteger)dataCodewordCount;
#endif



#if 0
+ (nullable instancetype)descriptorWithPayload:(NSData *)errorCorrectedPayload
                                     isCompact:(BOOL)isCompact
                                    layerCount:(NSInteger)layerCount
                             dataCodewordCount:(NSInteger)dataCodewordCount;
#endif


/* @end */

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=11_0)))

#ifndef _REWRITER_typedef_CIPDF417CodeDescriptor
#define _REWRITER_typedef_CIPDF417CodeDescriptor
typedef struct objc_object CIPDF417CodeDescriptor;
typedef struct {} _objc_exc_CIPDF417CodeDescriptor;
#endif

struct CIPDF417CodeDescriptor_IMPL {
	struct CIBarcodeDescriptor_IMPL CIBarcodeDescriptor_IVARS;
	NSData *__strong errorCorrectedPayload;
	BOOL isCompact;
	NSInteger rowCount;
	NSInteger columnCount;
};

// @property(readonly) NSData *errorCorrectedPayload;
// @property (readonly) BOOL isCompact;
// @property (readonly) NSInteger rowCount;
// @property (readonly) NSInteger columnCount;


#if 0
- (nullable instancetype)initWithPayload:(NSData *)errorCorrectedPayload
                               isCompact:(BOOL)isCompact
                                rowCount:(NSInteger)rowCount
                             columnCount:(NSInteger)columnCount;
#endif



#if 0
+ (nullable instancetype)descriptorWithPayload:(NSData *)errorCorrectedPayload
                                     isCompact:(BOOL)isCompact
                                      rowCount:(NSInteger)rowCount
                                   columnCount:(NSInteger)columnCount;
#endif


/* @end */

typedef NSInteger CIDataMatrixCodeECCVersion; enum
{
    CIDataMatrixCodeECCVersion000 __attribute__((swift_name("v000"))) = 0,
    CIDataMatrixCodeECCVersion050 __attribute__((swift_name("v050"))) = 50,
    CIDataMatrixCodeECCVersion080 __attribute__((swift_name("v080"))) = 80,
    CIDataMatrixCodeECCVersion100 __attribute__((swift_name("v100"))) = 100,
    CIDataMatrixCodeECCVersion140 __attribute__((swift_name("v140"))) = 140,
    CIDataMatrixCodeECCVersion200 __attribute__((swift_name("v200"))) = 200,

} __attribute__((swift_name("CIDataMatrixCodeDescriptor.ECCVersion")));







__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=11_0)))

#ifndef _REWRITER_typedef_CIDataMatrixCodeDescriptor
#define _REWRITER_typedef_CIDataMatrixCodeDescriptor
typedef struct objc_object CIDataMatrixCodeDescriptor;
typedef struct {} _objc_exc_CIDataMatrixCodeDescriptor;
#endif

struct CIDataMatrixCodeDescriptor_IMPL {
	struct CIBarcodeDescriptor_IMPL CIBarcodeDescriptor_IVARS;
	NSData *__strong errorCorrectedPayload;
	NSInteger rowCount;
	NSInteger columnCount;
	CIDataMatrixCodeECCVersion eccVersion;
};

// @property (readonly) NSData *errorCorrectedPayload;
// @property (readonly) NSInteger rowCount;
// @property (readonly) NSInteger columnCount;
// @property (readonly) CIDataMatrixCodeECCVersion eccVersion;


#if 0
- (nullable instancetype)initWithPayload:(NSData *)errorCorrectedPayload
                                rowCount:(NSInteger)rowCount
                             columnCount:(NSInteger)columnCount
                              eccVersion:(CIDataMatrixCodeECCVersion)eccVersion;
#endif



#if 0
+ (nullable instancetype)descriptorWithPayload:(NSData *)errorCorrectedPayload
                                      rowCount:(NSInteger)rowCount
                                   columnCount:(NSInteger)columnCount
                                    eccVersion:(CIDataMatrixCodeECCVersion)eccVersion;
#endif


/* @end */

// @class NSUserActivity;
#ifndef _REWRITER_typedef_NSUserActivity
#define _REWRITER_typedef_NSUserActivity
typedef struct objc_object NSUserActivity;
typedef struct {} _objc_exc_NSUserActivity;
#endif


// @interface NSUserActivity (CIBarcodeDescriptor)




// @property (nonatomic, nullable, readonly, copy) CIBarcodeDescriptor *detectedBarcodeDescriptor __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3))) __attribute__((availability(tvos,introduced=11.3)));

/* @end */

#pragma clang assume_nonnull end




#pragma clang assume_nonnull begin

// @class UIImage;
#ifndef _REWRITER_typedef_UIImage
#define _REWRITER_typedef_UIImage
typedef struct objc_object UIImage;
typedef struct {} _objc_exc_UIImage;
#endif

// @class UITraitCollection;
#ifndef _REWRITER_typedef_UITraitCollection
#define _REWRITER_typedef_UITraitCollection
typedef struct objc_object UITraitCollection;
typedef struct {} _objc_exc_UITraitCollection;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) 
#ifndef _REWRITER_typedef_UIColor
#define _REWRITER_typedef_UIColor
typedef struct objc_object UIColor;
typedef struct {} _objc_exc_UIColor;
#endif

struct UIColor_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



// + (UIColor *)colorWithWhite:(CGFloat)white alpha:(CGFloat)alpha;
// + (UIColor *)colorWithHue:(CGFloat)hue saturation:(CGFloat)saturation brightness:(CGFloat)brightness alpha:(CGFloat)alpha;
// + (UIColor *)colorWithRed:(CGFloat)red green:(CGFloat)green blue:(CGFloat)blue alpha:(CGFloat)alpha;
// + (UIColor *)colorWithDisplayP3Red:(CGFloat)displayP3Red green:(CGFloat)green blue:(CGFloat)blue alpha:(CGFloat)alpha __attribute__((availability(ios,introduced=10_0)));
// + (UIColor *)colorWithCGColor:(CGColorRef)cgColor;
// + (UIColor *)colorWithPatternImage:(UIImage *)image;

// + (UIColor *)colorWithCIColor:(CIColor *)ciColor __attribute__((availability(ios,introduced=5_0)));



// - (UIColor *)initWithWhite:(CGFloat)white alpha:(CGFloat)alpha;
// - (UIColor *)initWithHue:(CGFloat)hue saturation:(CGFloat)saturation brightness:(CGFloat)brightness alpha:(CGFloat)alpha;
// - (UIColor *)initWithRed:(CGFloat)red green:(CGFloat)green blue:(CGFloat)blue alpha:(CGFloat)alpha;
// - (UIColor *)initWithDisplayP3Red:(CGFloat)displayP3Red green:(CGFloat)green blue:(CGFloat)blue alpha:(CGFloat)alpha __attribute__((availability(ios,introduced=10_0)));
// - (UIColor *)initWithCGColor:(CGColorRef)cgColor;
// - (UIColor *)initWithPatternImage:(UIImage*)image;

// - (UIColor *)initWithCIColor:(CIColor *)ciColor __attribute__((availability(ios,introduced=5_0)));





@property(class, nonatomic, readonly) UIColor *blackColor;
@property(class, nonatomic, readonly) UIColor *darkGrayColor;
@property(class, nonatomic, readonly) UIColor *lightGrayColor;
@property(class, nonatomic, readonly) UIColor *whiteColor;
@property(class, nonatomic, readonly) UIColor *grayColor;
@property(class, nonatomic, readonly) UIColor *redColor;
@property(class, nonatomic, readonly) UIColor *greenColor;
@property(class, nonatomic, readonly) UIColor *blueColor;
@property(class, nonatomic, readonly) UIColor *cyanColor;
@property(class, nonatomic, readonly) UIColor *yellowColor;
@property(class, nonatomic, readonly) UIColor *magentaColor;
@property(class, nonatomic, readonly) UIColor *orangeColor;
@property(class, nonatomic, readonly) UIColor *purpleColor;
@property(class, nonatomic, readonly) UIColor *brownColor;
@property(class, nonatomic, readonly) UIColor *clearColor;
// - (void)set;


// - (void)setFill;
// - (void)setStroke;



// - (BOOL)getWhite:(nullable CGFloat *)white alpha:(nullable CGFloat *)alpha __attribute__((availability(ios,introduced=5_0)));
// - (BOOL)getHue:(nullable CGFloat *)hue saturation:(nullable CGFloat *)saturation brightness:(nullable CGFloat *)brightness alpha:(nullable CGFloat *)alpha __attribute__((availability(ios,introduced=5_0)));
// - (BOOL)getRed:(nullable CGFloat *)red green:(nullable CGFloat *)green blue:(nullable CGFloat *)blue alpha:(nullable CGFloat *)alpha __attribute__((availability(ios,introduced=5_0)));


// - (UIColor *)colorWithAlphaComponent:(CGFloat)alpha;


// @property(nonatomic,readonly) CGColorRef CGColor;
// - (CGColorRef)CGColor __attribute__((objc_returns_inner_pointer)) __attribute__((cf_returns_not_retained));

// @property(nonatomic,readonly) CIColor *CIColor __attribute__((availability(ios,introduced=5_0)));


/* @end */



// @interface UIColor (UINSItemProvider) <NSItemProviderReading, NSItemProviderWriting>

/* @end */




// @interface CIColor(UIKitAdditions)

// - (instancetype)initWithColor:(UIColor *)color __attribute__((availability(ios,introduced=5_0)));

/* @end */



// @interface UIColor (UIColorNamedColors)
// + (nullable UIColor *)colorNamed:(NSString *)name __attribute__((availability(ios,introduced=11_0)));
// + (nullable UIColor *)colorNamed:(NSString *)name inBundle:(nullable NSBundle *)bundle compatibleWithTraitCollection:(nullable UITraitCollection *)traitCollection __attribute__((availability(ios,introduced=11_0)));
/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

typedef uint32_t UIFontDescriptorSymbolicTraits; enum {




    UIFontDescriptorTraitItalic = 1u << 0,
    UIFontDescriptorTraitBold = 1u << 1,
    UIFontDescriptorTraitExpanded = 1u << 5,
    UIFontDescriptorTraitCondensed = 1u << 6,
    UIFontDescriptorTraitMonoSpace = 1u << 10,
    UIFontDescriptorTraitVertical = 1u << 11,
    UIFontDescriptorTraitUIOptimized = 1u << 12,
    UIFontDescriptorTraitTightLeading = 1u << 15,
    UIFontDescriptorTraitLooseLeading = 1u << 16,




    UIFontDescriptorClassMask = 0xF0000000,

    UIFontDescriptorClassUnknown = 0u << 28,
    UIFontDescriptorClassOldStyleSerifs = 1u << 28,
    UIFontDescriptorClassTransitionalSerifs = 2u << 28,
    UIFontDescriptorClassModernSerifs = 3u << 28,
    UIFontDescriptorClassClarendonSerifs = 4u << 28,
    UIFontDescriptorClassSlabSerifs = 5u << 28,
    UIFontDescriptorClassFreeformSerifs = 7u << 28,
    UIFontDescriptorClassSansSerif = 8u << 28,
    UIFontDescriptorClassOrnamentals = 9u << 28,
    UIFontDescriptorClassScripts = 10u << 28,
    UIFontDescriptorClassSymbolic = 12u << 28
} __attribute__((availability(ios,introduced=7_0)));

typedef NSUInteger UIFontDescriptorClass;



typedef NSString * UIFontTextStyle;

typedef NSString * UIFontDescriptorAttributeName __attribute__((swift_wrapper(struct)));
typedef NSString * UIFontDescriptorTraitKey __attribute__((swift_wrapper(enum)));
typedef NSString * UIFontDescriptorFeatureKey __attribute__((swift_wrapper(struct)));
typedef CGFloat UIFontWeight __attribute__((swift_wrapper(struct)));

// @class NSMutableDictionary;
#ifndef _REWRITER_typedef_NSMutableDictionary
#define _REWRITER_typedef_NSMutableDictionary
typedef struct objc_object NSMutableDictionary;
typedef struct {} _objc_exc_NSMutableDictionary;
#endif

#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSSet
#define _REWRITER_typedef_NSSet
typedef struct objc_object NSSet;
typedef struct {} _objc_exc_NSSet;
#endif

#ifndef _REWRITER_typedef_UITraitCollection
#define _REWRITER_typedef_UITraitCollection
typedef struct objc_object UITraitCollection;
typedef struct {} _objc_exc_UITraitCollection;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0))) 
#ifndef _REWRITER_typedef_UIFontDescriptor
#define _REWRITER_typedef_UIFontDescriptor
typedef struct objc_object UIFontDescriptor;
typedef struct {} _objc_exc_UIFontDescriptor;
#endif

struct UIFontDescriptor_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)init;
// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));


// @property(nonatomic, readonly) NSString *postscriptName;
// @property(nonatomic, readonly) CGFloat pointSize;
// @property(nonatomic, readonly) CGAffineTransform matrix;
// @property(nonatomic, readonly) UIFontDescriptorSymbolicTraits symbolicTraits;

// - (nullable id)objectForKey:(UIFontDescriptorAttributeName)anAttribute;


// @property(nonatomic, readonly) NSDictionary<UIFontDescriptorAttributeName, id> *fontAttributes;






// - (NSArray<UIFontDescriptor *> *)matchingFontDescriptorsWithMandatoryKeys:(nullable NSSet<UIFontDescriptorAttributeName> *)mandatoryKeys;


// + (UIFontDescriptor *)fontDescriptorWithFontAttributes:(NSDictionary<UIFontDescriptorAttributeName, id> *)attributes;
// + (UIFontDescriptor *)fontDescriptorWithName:(NSString *)fontName size:(CGFloat)size;
// + (UIFontDescriptor *)fontDescriptorWithName:(NSString *)fontName matrix:(CGAffineTransform)matrix;


// + (UIFontDescriptor *)preferredFontDescriptorWithTextStyle:(UIFontTextStyle)style;

// + (UIFontDescriptor *)preferredFontDescriptorWithTextStyle:(UIFontTextStyle)style compatibleWithTraitCollection:(nullable UITraitCollection *)traitCollection __attribute__((availability(ios,introduced=10_0))) __attribute__((availability(watchos,unavailable)));

// - (instancetype)initWithFontAttributes:(NSDictionary<UIFontDescriptorAttributeName, id> *)attributes __attribute__((objc_designated_initializer));

// - (UIFontDescriptor *)fontDescriptorByAddingAttributes:(NSDictionary<UIFontDescriptorAttributeName, id> *)attributes;
// - (UIFontDescriptor *)fontDescriptorWithSize:(CGFloat)newPointSize;
// - (UIFontDescriptor *)fontDescriptorWithMatrix:(CGAffineTransform)matrix;
// - (UIFontDescriptor *)fontDescriptorWithFace:(NSString *)newFace;
// - (UIFontDescriptor *)fontDescriptorWithFamily:(NSString *)newFamily;

// - (nullable UIFontDescriptor *)fontDescriptorWithSymbolicTraits:(UIFontDescriptorSymbolicTraits)symbolicTraits;


/* @end */




extern "C" __attribute__((visibility ("default"))) UIFontDescriptorAttributeName const UIFontDescriptorFamilyAttribute __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility ("default"))) UIFontDescriptorAttributeName const UIFontDescriptorNameAttribute __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility ("default"))) UIFontDescriptorAttributeName const UIFontDescriptorFaceAttribute __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility ("default"))) UIFontDescriptorAttributeName const UIFontDescriptorSizeAttribute __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility ("default"))) UIFontDescriptorAttributeName const UIFontDescriptorVisibleNameAttribute __attribute__((availability(ios,introduced=7_0)));

extern "C" __attribute__((visibility ("default"))) UIFontDescriptorAttributeName const UIFontDescriptorMatrixAttribute __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility ("default"))) UIFontDescriptorAttributeName const UIFontDescriptorCharacterSetAttribute __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility ("default"))) UIFontDescriptorAttributeName const UIFontDescriptorCascadeListAttribute __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility ("default"))) UIFontDescriptorAttributeName const UIFontDescriptorTraitsAttribute __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility ("default"))) UIFontDescriptorAttributeName const UIFontDescriptorFixedAdvanceAttribute __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility ("default"))) UIFontDescriptorAttributeName const UIFontDescriptorFeatureSettingsAttribute __attribute__((availability(ios,introduced=7_0)));


extern "C" __attribute__((visibility ("default"))) UIFontDescriptorAttributeName const UIFontDescriptorTextStyleAttribute __attribute__((availability(ios,introduced=7_0)));



extern "C" __attribute__((visibility ("default"))) UIFontDescriptorAttributeName const UIFontSymbolicTrait __attribute__((availability(ios,introduced=7_0)));


extern "C" __attribute__((visibility ("default"))) UIFontDescriptorTraitKey const UIFontWeightTrait __attribute__((availability(ios,introduced=7_0)));


extern "C" __attribute__((visibility ("default"))) UIFontDescriptorTraitKey const UIFontWidthTrait __attribute__((availability(ios,introduced=7_0)));


extern "C" __attribute__((visibility ("default"))) UIFontDescriptorTraitKey const UIFontSlantTrait __attribute__((availability(ios,introduced=7_0)));



extern "C" __attribute__((visibility ("default"))) const UIFontWeight UIFontWeightUltraLight __attribute__((availability(ios,introduced=8_2)));
extern "C" __attribute__((visibility ("default"))) const UIFontWeight UIFontWeightThin __attribute__((availability(ios,introduced=8_2)));
extern "C" __attribute__((visibility ("default"))) const UIFontWeight UIFontWeightLight __attribute__((availability(ios,introduced=8_2)));
extern "C" __attribute__((visibility ("default"))) const UIFontWeight UIFontWeightRegular __attribute__((availability(ios,introduced=8_2)));
extern "C" __attribute__((visibility ("default"))) const UIFontWeight UIFontWeightMedium __attribute__((availability(ios,introduced=8_2)));
extern "C" __attribute__((visibility ("default"))) const UIFontWeight UIFontWeightSemibold __attribute__((availability(ios,introduced=8_2)));
extern "C" __attribute__((visibility ("default"))) const UIFontWeight UIFontWeightBold __attribute__((availability(ios,introduced=8_2)));
extern "C" __attribute__((visibility ("default"))) const UIFontWeight UIFontWeightHeavy __attribute__((availability(ios,introduced=8_2)));
extern "C" __attribute__((visibility ("default"))) const UIFontWeight UIFontWeightBlack __attribute__((availability(ios,introduced=8_2)));



extern "C" __attribute__((visibility ("default"))) UIFontDescriptorFeatureKey const UIFontFeatureTypeIdentifierKey __attribute__((availability(ios,introduced=7_0)));


extern "C" __attribute__((visibility ("default"))) UIFontDescriptorFeatureKey const UIFontFeatureSelectorIdentifierKey __attribute__((availability(ios,introduced=7_0)));


extern "C" __attribute__((visibility ("default"))) UIFontTextStyle const UIFontTextStyleLargeTitle __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) UIFontTextStyle const UIFontTextStyleTitle1 __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility ("default"))) UIFontTextStyle const UIFontTextStyleTitle2 __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility ("default"))) UIFontTextStyle const UIFontTextStyleTitle3 __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility ("default"))) UIFontTextStyle const UIFontTextStyleHeadline __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility ("default"))) UIFontTextStyle const UIFontTextStyleSubheadline __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility ("default"))) UIFontTextStyle const UIFontTextStyleBody __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility ("default"))) UIFontTextStyle const UIFontTextStyleCallout __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility ("default"))) UIFontTextStyle const UIFontTextStyleFootnote __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility ("default"))) UIFontTextStyle const UIFontTextStyleCaption1 __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility ("default"))) UIFontTextStyle const UIFontTextStyleCaption2 __attribute__((availability(ios,introduced=7_0)));
#pragma clang assume_nonnull end

// @class UITraitCollection;
#ifndef _REWRITER_typedef_UITraitCollection
#define _REWRITER_typedef_UITraitCollection
typedef struct objc_object UITraitCollection;
typedef struct {} _objc_exc_UITraitCollection;
#endif


#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) 
#ifndef _REWRITER_typedef_UIFont
#define _REWRITER_typedef_UIFont
typedef struct objc_object UIFont;
typedef struct {} _objc_exc_UIFont;
#endif

struct UIFont_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



// + (UIFont *)preferredFontForTextStyle:(UIFontTextStyle)style __attribute__((availability(ios,introduced=7_0)));

// + (UIFont *)preferredFontForTextStyle:(UIFontTextStyle)style compatibleWithTraitCollection:(nullable UITraitCollection *)traitCollection __attribute__((availability(ios,introduced=10_0))) __attribute__((availability(watchos,unavailable)));


// + (nullable UIFont *)fontWithName:(NSString *)fontName size:(CGFloat)fontSize;



@property(class, nonatomic, readonly) NSArray<NSString *> *familyNames;





// + (NSArray<NSString *> *)fontNamesForFamilyName:(NSString *)familyName;





// + (UIFont *)systemFontOfSize:(CGFloat)fontSize;
// + (UIFont *)boldSystemFontOfSize:(CGFloat)fontSize;
// + (UIFont *)italicSystemFontOfSize:(CGFloat)fontSize;




// + (UIFont *)systemFontOfSize:(CGFloat)fontSize weight:(UIFontWeight)weight __attribute__((availability(ios,introduced=8_2)));
// + (UIFont *)monospacedDigitSystemFontOfSize:(CGFloat)fontSize weight:(UIFontWeight)weight __attribute__((availability(ios,introduced=9_0)));



// @property(nonatomic,readonly,strong) NSString *familyName;
// @property(nonatomic,readonly,strong) NSString *fontName;
// @property(nonatomic,readonly) CGFloat pointSize;
// @property(nonatomic,readonly) CGFloat ascender;
// @property(nonatomic,readonly) CGFloat descender;
// @property(nonatomic,readonly) CGFloat capHeight;
// @property(nonatomic,readonly) CGFloat xHeight;
// @property(nonatomic,readonly) CGFloat lineHeight __attribute__((availability(ios,introduced=4_0)));
// @property(nonatomic,readonly) CGFloat leading;


// - (UIFont *)fontWithSize:(CGFloat)fontSize;


// + (UIFont *)fontWithDescriptor:(UIFontDescriptor *)descriptor size:(CGFloat)pointSize __attribute__((availability(ios,introduced=7_0)));



// @property(nonatomic, readonly) UIFontDescriptor *fontDescriptor __attribute__((availability(ios,introduced=7_0)));




/* @end */

#pragma clang assume_nonnull end



#pragma clang assume_nonnull begin

typedef NSInteger UIBarStyle; enum {
    UIBarStyleDefault = 0,
    UIBarStyleBlack = 1,

    UIBarStyleBlackOpaque = 1,
    UIBarStyleBlackTranslucent = 2,
} __attribute__((availability(tvos,unavailable)));

typedef NSInteger UIUserInterfaceSizeClass; enum {
    UIUserInterfaceSizeClassUnspecified = 0,
    UIUserInterfaceSizeClassCompact = 1,
    UIUserInterfaceSizeClassRegular = 2,
} __attribute__((availability(ios,introduced=8_0)));

typedef NSInteger UIUserInterfaceStyle; enum {
    UIUserInterfaceStyleUnspecified,
    UIUserInterfaceStyleLight,
    UIUserInterfaceStyleDark,
} __attribute__((availability(tvos,introduced=10_0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable)));

typedef NSInteger UIUserInterfaceLayoutDirection; enum {
    UIUserInterfaceLayoutDirectionLeftToRight,
    UIUserInterfaceLayoutDirectionRightToLeft,
} __attribute__((availability(ios,introduced=5_0)));


typedef NSInteger UITraitEnvironmentLayoutDirection; enum {
    UITraitEnvironmentLayoutDirectionUnspecified = -1,
    UITraitEnvironmentLayoutDirectionLeftToRight = UIUserInterfaceLayoutDirectionLeftToRight,
    UITraitEnvironmentLayoutDirectionRightToLeft = UIUserInterfaceLayoutDirectionRightToLeft,
} __attribute__((availability(ios,introduced=10_0)));

typedef NSInteger UIDisplayGamut; enum {
    UIDisplayGamutUnspecified = -1,
    UIDisplayGamutSRGB,
    UIDisplayGamutP3
} __attribute__((availability(ios,introduced=10_0)));




// @interface UIColor (UIColorSystemColors)

@property(class, nonatomic, readonly) UIColor *lightTextColor __attribute__((availability(tvos,unavailable)));
@property(class, nonatomic, readonly) UIColor *darkTextColor __attribute__((availability(tvos,unavailable)));

@property(class, nonatomic, readonly) UIColor *groupTableViewBackgroundColor __attribute__((availability(tvos,unavailable)));

@property(class, nonatomic, readonly) UIColor *viewFlipsideBackgroundColor __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" ))) __attribute__((availability(tvos,unavailable)));
@property(class, nonatomic, readonly) UIColor *scrollViewTexturedBackgroundColor __attribute__((availability(ios,introduced=3_2,deprecated=7_0,message="" ))) __attribute__((availability(tvos,unavailable)));
@property(class, nonatomic, readonly) UIColor *underPageBackgroundColor __attribute__((availability(ios,introduced=5_0,deprecated=7_0,message="" ))) __attribute__((availability(tvos,unavailable)));
/* @end */




// @interface UIFont (UIFontSystemFonts)

@property(class, nonatomic, readonly) CGFloat labelFontSize __attribute__((availability(tvos,unavailable)));
@property(class, nonatomic, readonly) CGFloat buttonFontSize __attribute__((availability(tvos,unavailable)));
@property(class, nonatomic, readonly) CGFloat smallSystemFontSize __attribute__((availability(tvos,unavailable)));
@property(class, nonatomic, readonly) CGFloat systemFontSize __attribute__((availability(tvos,unavailable)));






/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

// @class UITraitCollection;
#ifndef _REWRITER_typedef_UITraitCollection
#define _REWRITER_typedef_UITraitCollection
typedef struct objc_object UITraitCollection;
typedef struct {} _objc_exc_UITraitCollection;
#endif

// @protocol UIAppearanceContainer <NSObject> /* @end */


// @protocol UIAppearance <NSObject>






// + (instancetype)appearance;
// + (instancetype)appearanceWhenContainedIn:(nullable Class <UIAppearanceContainer>)ContainerClass, ... __attribute__((sentinel(0,1))) __attribute__((availability(ios,introduced=5_0,deprecated=9_0,message="" "Use +appearanceWhenContainedInInstancesOfClasses: instead"))) __attribute__((availability(tvos,unavailable)));
// + (instancetype)appearanceWhenContainedInInstancesOfClasses:(NSArray<Class <UIAppearanceContainer>> *)containerTypes __attribute__((availability(ios,introduced=9_0)));

// + (instancetype)appearanceForTraitCollection:(UITraitCollection *)trait __attribute__((availability(ios,introduced=8_0)));
// + (instancetype)appearanceForTraitCollection:(UITraitCollection *)trait whenContainedIn:(nullable Class <UIAppearanceContainer>)ContainerClass, ... __attribute__((sentinel(0,1))) __attribute__((availability(ios,introduced=8_0,deprecated=9_0,message="" "Use +appearanceForTraitCollection:whenContainedInInstancesOfClasses: instead"))) __attribute__((availability(tvos,unavailable)));
// + (instancetype)appearanceForTraitCollection:(UITraitCollection *)trait whenContainedInInstancesOfClasses:(NSArray<Class <UIAppearanceContainer>> *)containerTypes __attribute__((availability(ios,introduced=9_0)));

/* @end */

#pragma clang assume_nonnull end








#pragma clang assume_nonnull begin

typedef struct UIEdgeInsets {
    CGFloat top, left, bottom, right;
} UIEdgeInsets;



typedef struct NSDirectionalEdgeInsets {
    CGFloat top, leading, bottom, trailing;
} NSDirectionalEdgeInsets __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));

typedef struct UIOffset {
    CGFloat horizontal, vertical;
} UIOffset;

typedef NSUInteger UIRectEdge; enum {
    UIRectEdgeNone = 0,
    UIRectEdgeTop = 1 << 0,
    UIRectEdgeLeft = 1 << 1,
    UIRectEdgeBottom = 1 << 2,
    UIRectEdgeRight = 1 << 3,
    UIRectEdgeAll = UIRectEdgeTop | UIRectEdgeLeft | UIRectEdgeBottom | UIRectEdgeRight
} __attribute__((availability(ios,introduced=7_0)));

static inline UIEdgeInsets UIEdgeInsetsMake(CGFloat top, CGFloat left, CGFloat bottom, CGFloat right) {
    UIEdgeInsets insets = {top, left, bottom, right};
    return insets;
}

static inline NSDirectionalEdgeInsets NSDirectionalEdgeInsetsMake(CGFloat top, CGFloat leading, CGFloat bottom, CGFloat trailing) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)))
{
    NSDirectionalEdgeInsets insets = {top, leading, bottom, trailing};
    return insets;
}

static inline CGRect UIEdgeInsetsInsetRect(CGRect rect, UIEdgeInsets insets) {
    rect.origin.x += insets.left;
    rect.origin.y += insets.top;
    rect.size.width -= (insets.left + insets.right);
    rect.size.height -= (insets.top + insets.bottom);
    return rect;
}

static inline UIOffset UIOffsetMake(CGFloat horizontal, CGFloat vertical) {
    UIOffset offset = {horizontal, vertical};
    return offset;
}

static inline BOOL UIEdgeInsetsEqualToEdgeInsets(UIEdgeInsets insets1, UIEdgeInsets insets2) {
    return insets1.left == insets2.left && insets1.top == insets2.top && insets1.right == insets2.right && insets1.bottom == insets2.bottom;
}

static inline BOOL NSDirectionalEdgeInsetsEqualToDirectionalEdgeInsets(NSDirectionalEdgeInsets insets1, NSDirectionalEdgeInsets insets2) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)))
{
    return insets1.leading == insets2.leading && insets1.top == insets2.top && insets1.trailing == insets2.trailing && insets1.bottom == insets2.bottom;
}

static inline BOOL UIOffsetEqualToOffset(UIOffset offset1, UIOffset offset2) {
    return offset1.horizontal == offset2.horizontal && offset1.vertical == offset2.vertical;
}


extern "C" __attribute__((visibility ("default"))) const UIEdgeInsets UIEdgeInsetsZero __attribute__((availability(swift, unavailable, message="Use UIEdgeInsets.zero instead")));
extern "C" __attribute__((visibility ("default"))) const NSDirectionalEdgeInsets NSDirectionalEdgeInsetsZero __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
extern "C" __attribute__((visibility ("default"))) const UIOffset UIOffsetZero __attribute__((availability(swift, unavailable, message="Use UIOffset.zero instead")));






extern "C" __attribute__((visibility ("default"))) NSString *NSStringFromCGPoint(CGPoint point);
extern "C" __attribute__((visibility ("default"))) NSString *NSStringFromCGVector(CGVector vector);
extern "C" __attribute__((visibility ("default"))) NSString *NSStringFromCGSize(CGSize size);
extern "C" __attribute__((visibility ("default"))) NSString *NSStringFromCGRect(CGRect rect);
extern "C" __attribute__((visibility ("default"))) NSString *NSStringFromCGAffineTransform(CGAffineTransform transform);
extern "C" __attribute__((visibility ("default"))) NSString *NSStringFromUIEdgeInsets(UIEdgeInsets insets);
extern "C" __attribute__((visibility ("default"))) NSString *NSStringFromDirectionalEdgeInsets(NSDirectionalEdgeInsets insets) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
extern "C" __attribute__((visibility ("default"))) NSString *NSStringFromUIOffset(UIOffset offset);

extern "C" __attribute__((visibility ("default"))) CGPoint CGPointFromString(NSString *string);
extern "C" __attribute__((visibility ("default"))) CGVector CGVectorFromString(NSString *string);
extern "C" __attribute__((visibility ("default"))) CGSize CGSizeFromString(NSString *string);
extern "C" __attribute__((visibility ("default"))) CGRect CGRectFromString(NSString *string);
extern "C" __attribute__((visibility ("default"))) CGAffineTransform CGAffineTransformFromString(NSString *string);
extern "C" __attribute__((visibility ("default"))) UIEdgeInsets UIEdgeInsetsFromString(NSString *string);
extern "C" __attribute__((visibility ("default"))) NSDirectionalEdgeInsets NSDirectionalEdgeInsetsFromString(NSString *string) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
extern "C" __attribute__((visibility ("default"))) UIOffset UIOffsetFromString(NSString *string);

// @interface NSValue (NSValueUIGeometryExtensions)

// + (NSValue *)valueWithCGPoint:(CGPoint)point;
// + (NSValue *)valueWithCGVector:(CGVector)vector;
// + (NSValue *)valueWithCGSize:(CGSize)size;
// + (NSValue *)valueWithCGRect:(CGRect)rect;
// + (NSValue *)valueWithCGAffineTransform:(CGAffineTransform)transform;
// + (NSValue *)valueWithUIEdgeInsets:(UIEdgeInsets)insets;
// + (NSValue *)valueWithDirectionalEdgeInsets:(NSDirectionalEdgeInsets)insets __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
// + (NSValue *)valueWithUIOffset:(UIOffset)insets __attribute__((availability(ios,introduced=5_0)));


// @property(nonatomic, readonly) CGPoint CGPointValue;
// @property(nonatomic, readonly) CGVector CGVectorValue;
// @property(nonatomic, readonly) CGSize CGSizeValue;
// @property(nonatomic, readonly) CGRect CGRectValue;
// @property(nonatomic, readonly) CGAffineTransform CGAffineTransformValue;
// @property(nonatomic, readonly) UIEdgeInsets UIEdgeInsetsValue;
// @property(nonatomic, readonly) NSDirectionalEdgeInsets directionalEdgeInsetsValue __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
// @property(nonatomic, readonly) UIOffset UIOffsetValue __attribute__((availability(ios,introduced=5_0)));
/* @end */


// @interface NSCoder (UIGeometryKeyedCoding)

// - (void)encodeCGPoint:(CGPoint)point forKey:(NSString *)key;
// - (void)encodeCGVector:(CGVector)vector forKey:(NSString *)key;
// - (void)encodeCGSize:(CGSize)size forKey:(NSString *)key;
// - (void)encodeCGRect:(CGRect)rect forKey:(NSString *)key;
// - (void)encodeCGAffineTransform:(CGAffineTransform)transform forKey:(NSString *)key;
// - (void)encodeUIEdgeInsets:(UIEdgeInsets)insets forKey:(NSString *)key;
// - (void)encodeDirectionalEdgeInsets:(NSDirectionalEdgeInsets)insets forKey:(NSString *)key __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
// - (void)encodeUIOffset:(UIOffset)offset forKey:(NSString *)key __attribute__((availability(ios,introduced=5_0)));

// - (CGPoint)decodeCGPointForKey:(NSString *)key;
// - (CGVector)decodeCGVectorForKey:(NSString *)key;
// - (CGSize)decodeCGSizeForKey:(NSString *)key;
// - (CGRect)decodeCGRectForKey:(NSString *)key;
// - (CGAffineTransform)decodeCGAffineTransformForKey:(NSString *)key;
// - (UIEdgeInsets)decodeUIEdgeInsetsForKey:(NSString *)key;
// - (NSDirectionalEdgeInsets)decodeDirectionalEdgeInsetsForKey:(NSString *)key __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));
// - (UIOffset)decodeUIOffsetForKey:(NSString *)key __attribute__((availability(ios,introduced=5_0)));

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

// @class UIDynamicAnimator;
#ifndef _REWRITER_typedef_UIDynamicAnimator
#define _REWRITER_typedef_UIDynamicAnimator
typedef struct objc_object UIDynamicAnimator;
typedef struct {} _objc_exc_UIDynamicAnimator;
#endif

// @class UIBezierPath;
#ifndef _REWRITER_typedef_UIBezierPath
#define _REWRITER_typedef_UIBezierPath
typedef struct objc_object UIBezierPath;
typedef struct {} _objc_exc_UIBezierPath;
#endif


typedef NSUInteger UIDynamicItemCollisionBoundsType; enum {
    UIDynamicItemCollisionBoundsTypeRectangle,
    UIDynamicItemCollisionBoundsTypeEllipse,
    UIDynamicItemCollisionBoundsTypePath
} __attribute__((availability(ios,introduced=9_0)));

// @protocol UIDynamicItem <NSObject>

// @property (nonatomic, readwrite) CGPoint center;
// @property (nonatomic, readonly) CGRect bounds;
// @property (nonatomic, readwrite) CGAffineTransform transform;

/* @optional */




// @property (nonatomic, readonly) UIDynamicItemCollisionBoundsType collisionBoundsType __attribute__((availability(ios,introduced=9_0)));





// @property (nonatomic, readonly) UIBezierPath *collisionBoundingPath __attribute__((availability(ios,introduced=9_0)));

/* @end */


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0))) 
#ifndef _REWRITER_typedef_UIDynamicItemGroup
#define _REWRITER_typedef_UIDynamicItemGroup
typedef struct objc_object UIDynamicItemGroup;
typedef struct {} _objc_exc_UIDynamicItemGroup;
#endif

struct UIDynamicItemGroup_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)initWithItems:(NSArray<id <UIDynamicItem>> *)items;

// @property (nonatomic, readonly, copy) NSArray<id <UIDynamicItem>> *items;

/* @end */


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0))) 
#ifndef _REWRITER_typedef_UIDynamicBehavior
#define _REWRITER_typedef_UIDynamicBehavior
typedef struct objc_object UIDynamicBehavior;
typedef struct {} _objc_exc_UIDynamicBehavior;
#endif

struct UIDynamicBehavior_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (void)addChildBehavior:(UIDynamicBehavior *)behavior;
// - (void)removeChildBehavior:(UIDynamicBehavior *)behavior;

// @property (nonatomic, readonly, copy) NSArray<__kindof UIDynamicBehavior *> *childBehaviors;


// @property (nullable, nonatomic,copy) void (^action)(void);

// - (void)willMoveToAnimator:(nullable UIDynamicAnimator *)dynamicAnimator;

// @property (nullable, nonatomic, readonly) UIDynamicAnimator *dynamicAnimator;


/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSDictionary
#define _REWRITER_typedef_NSDictionary
typedef struct objc_object NSDictionary;
typedef struct {} _objc_exc_NSDictionary;
#endif

#ifndef _REWRITER_typedef_NSLayoutAnchor
#define _REWRITER_typedef_NSLayoutAnchor
typedef struct objc_object NSLayoutAnchor;
typedef struct {} _objc_exc_NSLayoutAnchor;
#endif



typedef NSInteger NSLayoutRelation; enum {
    NSLayoutRelationLessThanOrEqual = -1,
    NSLayoutRelationEqual = 0,
    NSLayoutRelationGreaterThanOrEqual = 1,
};

typedef NSInteger NSLayoutAttribute; enum {
    NSLayoutAttributeLeft = 1,
    NSLayoutAttributeRight,
    NSLayoutAttributeTop,
    NSLayoutAttributeBottom,
    NSLayoutAttributeLeading,
    NSLayoutAttributeTrailing,
    NSLayoutAttributeWidth,
    NSLayoutAttributeHeight,
    NSLayoutAttributeCenterX,
    NSLayoutAttributeCenterY,
    NSLayoutAttributeLastBaseline,
    NSLayoutAttributeBaseline __attribute__((availability(swift, unavailable, message="Use 'lastBaseline' instead"))) = NSLayoutAttributeLastBaseline,
    NSLayoutAttributeFirstBaseline __attribute__((availability(ios,introduced=8_0))),


    NSLayoutAttributeLeftMargin __attribute__((availability(ios,introduced=8_0))),
    NSLayoutAttributeRightMargin __attribute__((availability(ios,introduced=8_0))),
    NSLayoutAttributeTopMargin __attribute__((availability(ios,introduced=8_0))),
    NSLayoutAttributeBottomMargin __attribute__((availability(ios,introduced=8_0))),
    NSLayoutAttributeLeadingMargin __attribute__((availability(ios,introduced=8_0))),
    NSLayoutAttributeTrailingMargin __attribute__((availability(ios,introduced=8_0))),
    NSLayoutAttributeCenterXWithinMargins __attribute__((availability(ios,introduced=8_0))),
    NSLayoutAttributeCenterYWithinMargins __attribute__((availability(ios,introduced=8_0))),

    NSLayoutAttributeNotAnAttribute = 0
};

typedef NSUInteger NSLayoutFormatOptions; enum {
    NSLayoutFormatAlignAllLeft = (1 << NSLayoutAttributeLeft),
    NSLayoutFormatAlignAllRight = (1 << NSLayoutAttributeRight),
    NSLayoutFormatAlignAllTop = (1 << NSLayoutAttributeTop),
    NSLayoutFormatAlignAllBottom = (1 << NSLayoutAttributeBottom),
    NSLayoutFormatAlignAllLeading = (1 << NSLayoutAttributeLeading),
    NSLayoutFormatAlignAllTrailing = (1 << NSLayoutAttributeTrailing),
    NSLayoutFormatAlignAllCenterX = (1 << NSLayoutAttributeCenterX),
    NSLayoutFormatAlignAllCenterY = (1 << NSLayoutAttributeCenterY),
    NSLayoutFormatAlignAllLastBaseline = (1 << NSLayoutAttributeLastBaseline),
    NSLayoutFormatAlignAllBaseline __attribute__((availability(swift, unavailable, message="Use 'alignAllLastBaseline' instead"))) = NSLayoutFormatAlignAllLastBaseline,
    NSLayoutFormatAlignAllFirstBaseline __attribute__((availability(ios,introduced=8_0))) = (1 << NSLayoutAttributeFirstBaseline),

    NSLayoutFormatAlignmentMask = 0xFFFF,



    NSLayoutFormatDirectionLeadingToTrailing = 0 << 16,
    NSLayoutFormatDirectionLeftToRight = 1 << 16,
    NSLayoutFormatDirectionRightToLeft = 2 << 16,

    NSLayoutFormatDirectionMask = 0x3 << 16,



    NSLayoutFormatSpacingEdgeToEdge __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) = 0 << 19,
    NSLayoutFormatSpacingBaselineToBaseline __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) = 1 << 19,

    NSLayoutFormatSpacingMask __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) = 0x1 << 19,
};

typedef float UILayoutPriority __attribute__((swift_wrapper(struct)));
static const UILayoutPriority UILayoutPriorityRequired __attribute__((availability(ios,introduced=6_0))) = 1000;
static const UILayoutPriority UILayoutPriorityDefaultHigh __attribute__((availability(ios,introduced=6_0))) = 750;
static const UILayoutPriority UILayoutPriorityDefaultLow __attribute__((availability(ios,introduced=6_0))) = 250;
static const UILayoutPriority UILayoutPriorityFittingSizeLevel __attribute__((availability(ios,introduced=6_0))) = 50;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0)))

#ifndef _REWRITER_typedef_NSLayoutConstraint
#define _REWRITER_typedef_NSLayoutConstraint
typedef struct objc_object NSLayoutConstraint;
typedef struct {} _objc_exc_NSLayoutConstraint;
#endif

struct NSLayoutConstraint_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};




// + (NSArray<__kindof NSLayoutConstraint *> *)constraintsWithVisualFormat:(NSString *)format options:(NSLayoutFormatOptions)opts metrics:(nullable NSDictionary<NSString *,id> *)metrics views:(NSDictionary<NSString *, id> *)views;





extern "C" __attribute__((visibility ("default"))) NSDictionary *_NSDictionaryOfVariableBindings(NSString *commaSeparatedKeysString, _Nullable id firstValue, ...) __attribute__((availability(ios,introduced=6_0)));





// +(instancetype)constraintWithItem:(id)view1 attribute:(NSLayoutAttribute)attr1 relatedBy:(NSLayoutRelation)relation toItem:(nullable id)view2 attribute:(NSLayoutAttribute)attr2 multiplier:(CGFloat)multiplier constant:(CGFloat)c;





// @property UILayoutPriority priority;




// @property BOOL shouldBeArchived;





// @property (nullable, readonly, assign) id firstItem;
// @property (readonly) NSLayoutAttribute firstAttribute;
// @property (nullable, readonly, assign) id secondItem;
// @property (readonly) NSLayoutAttribute secondAttribute;




// @property (readonly, copy) NSLayoutAnchor *firstAnchor __attribute__((availability(ios,introduced=10_0)));
// @property (readonly, copy, nullable) NSLayoutAnchor *secondAnchor __attribute__((availability(ios,introduced=10_0)));
// @property (readonly) NSLayoutRelation relation;
// @property (readonly) CGFloat multiplier;



// @property CGFloat constant;


// @property (getter=isActive) BOOL active __attribute__((availability(ios,introduced=8_0)));


// + (void)activateConstraints:(NSArray<NSLayoutConstraint *> *)constraints __attribute__((availability(ios,introduced=8_0)));


// + (void)deactivateConstraints:(NSArray<NSLayoutConstraint *> *)constraints __attribute__((availability(ios,introduced=8_0)));
/* @end */


// @interface NSLayoutConstraint (NSIdentifier)



// @property (nullable, copy) NSString *identifier __attribute__((availability(ios,introduced=7_0)));

/* @end */








// @class NSLayoutYAxisAnchor;
#ifndef _REWRITER_typedef_NSLayoutYAxisAnchor
#define _REWRITER_typedef_NSLayoutYAxisAnchor
typedef struct objc_object NSLayoutYAxisAnchor;
typedef struct {} _objc_exc_NSLayoutYAxisAnchor;
#endif

#ifndef _REWRITER_typedef_NSLayoutDimension
#define _REWRITER_typedef_NSLayoutDimension
typedef struct objc_object NSLayoutDimension;
typedef struct {} _objc_exc_NSLayoutDimension;
#endif

// @protocol UILayoutSupport <NSObject>
// @property(nonatomic,readonly) CGFloat length;



// @property(readonly, strong) NSLayoutYAxisAnchor *topAnchor __attribute__((availability(ios,introduced=9_0)));
// @property(readonly, strong) NSLayoutYAxisAnchor *bottomAnchor __attribute__((availability(ios,introduced=9_0)));
// @property(readonly, strong) NSLayoutDimension *heightAnchor __attribute__((availability(ios,introduced=9_0)));
/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

typedef NSInteger UIDeviceOrientation; enum {
    UIDeviceOrientationUnknown,
    UIDeviceOrientationPortrait,
    UIDeviceOrientationPortraitUpsideDown,
    UIDeviceOrientationLandscapeLeft,
    UIDeviceOrientationLandscapeRight,
    UIDeviceOrientationFaceUp,
    UIDeviceOrientationFaceDown
} __attribute__((availability(tvos,unavailable)));

typedef NSInteger UIDeviceBatteryState; enum {
    UIDeviceBatteryStateUnknown,
    UIDeviceBatteryStateUnplugged,
    UIDeviceBatteryStateCharging,
    UIDeviceBatteryStateFull,
} __attribute__((availability(tvos,unavailable)));

typedef NSInteger UIUserInterfaceIdiom; enum {
    UIUserInterfaceIdiomUnspecified = -1,
    UIUserInterfaceIdiomPhone __attribute__((availability(ios,introduced=3_2))),
    UIUserInterfaceIdiomPad __attribute__((availability(ios,introduced=3_2))),
    UIUserInterfaceIdiomTV __attribute__((availability(ios,introduced=9_0))),
    UIUserInterfaceIdiomCarPlay __attribute__((availability(ios,introduced=9_0))),
};

static inline BOOL UIDeviceOrientationIsPortrait(UIDeviceOrientation orientation) __attribute__((availability(tvos,unavailable))) {
    return ((orientation) == UIDeviceOrientationPortrait || (orientation) == UIDeviceOrientationPortraitUpsideDown);
}

static inline BOOL UIDeviceOrientationIsLandscape(UIDeviceOrientation orientation) __attribute__((availability(tvos,unavailable))) {
    return ((orientation) == UIDeviceOrientationLandscapeLeft || (orientation) == UIDeviceOrientationLandscapeRight);
}

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) 
#ifndef _REWRITER_typedef_UIDevice
#define _REWRITER_typedef_UIDevice
typedef struct objc_object UIDevice;
typedef struct {} _objc_exc_UIDevice;
#endif

struct UIDevice_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



@property(class, nonatomic, readonly) UIDevice *currentDevice;




// @property(nonatomic,readonly,strong) NSString *name;
// @property(nonatomic,readonly,strong) NSString *model;
// @property(nonatomic,readonly,strong) NSString *localizedModel;
// @property(nonatomic,readonly,strong) NSString *systemName;
// @property(nonatomic,readonly,strong) NSString *systemVersion;
// @property(nonatomic,readonly) UIDeviceOrientation orientation __attribute__((availability(tvos,unavailable)));

// @property(nullable, nonatomic,readonly,strong) NSUUID *identifierForVendor __attribute__((availability(ios,introduced=6_0)));

// @property(nonatomic,readonly,getter=isGeneratingDeviceOrientationNotifications) BOOL generatesDeviceOrientationNotifications __attribute__((availability(tvos,unavailable)));
// - (void)beginGeneratingDeviceOrientationNotifications __attribute__((availability(tvos,unavailable)));
// - (void)endGeneratingDeviceOrientationNotifications __attribute__((availability(tvos,unavailable)));

// @property(nonatomic,getter=isBatteryMonitoringEnabled) BOOL batteryMonitoringEnabled __attribute__((availability(ios,introduced=3_0))) __attribute__((availability(tvos,unavailable)));
// @property(nonatomic,readonly) UIDeviceBatteryState batteryState __attribute__((availability(ios,introduced=3_0))) __attribute__((availability(tvos,unavailable)));
// @property(nonatomic,readonly) float batteryLevel __attribute__((availability(ios,introduced=3_0))) __attribute__((availability(tvos,unavailable)));

// @property(nonatomic,getter=isProximityMonitoringEnabled) BOOL proximityMonitoringEnabled __attribute__((availability(ios,introduced=3_0)));
// @property(nonatomic,readonly) BOOL proximityState __attribute__((availability(ios,introduced=3_0)));

// @property(nonatomic,readonly,getter=isMultitaskingSupported) BOOL multitaskingSupported __attribute__((availability(ios,introduced=4_0)));

// @property(nonatomic,readonly) UIUserInterfaceIdiom userInterfaceIdiom __attribute__((availability(ios,introduced=3_2)));

// - (void)playInputClick __attribute__((availability(ios,introduced=4_2)));

/* @end */


// @protocol UIInputViewAudioFeedback <NSObject>
/* @optional */

// @property (nonatomic, readonly) BOOL enableInputClicksWhenVisible;

/* @end */




static inline UIUserInterfaceIdiom UI_USER_INTERFACE_IDIOM() {
    return (((BOOL (*)(id, SEL, SEL))(void *)objc_msgSend)((id)((UIDevice * _Nonnull (*)(id, SEL))(void *)objc_msgSend)((id)objc_getClass("UIDevice"), sel_registerName("currentDevice")), sel_registerName("respondsToSelector:"), sel_registerName("userInterfaceIdiom")) ?
            ((UIUserInterfaceIdiom (*)(id, SEL))(void *)objc_msgSend)((id)((UIDevice * _Nonnull (*)(id, SEL))(void *)objc_msgSend)((id)objc_getClass("UIDevice"), sel_registerName("currentDevice")), sel_registerName("userInterfaceIdiom")) :
            UIUserInterfaceIdiomPhone);
}

extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIDeviceOrientationDidChangeNotification __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIDeviceBatteryStateDidChangeNotification __attribute__((availability(ios,introduced=3_0))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIDeviceBatteryLevelDidChangeNotification __attribute__((availability(ios,introduced=3_0))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIDeviceProximityStateDidChangeNotification __attribute__((availability(ios,introduced=3_0)));
#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

// @class UIWindow;
#ifndef _REWRITER_typedef_UIWindow
#define _REWRITER_typedef_UIWindow
typedef struct objc_object UIWindow;
typedef struct {} _objc_exc_UIWindow;
#endif

#ifndef _REWRITER_typedef_UIView
#define _REWRITER_typedef_UIView
typedef struct objc_object UIView;
typedef struct {} _objc_exc_UIView;
#endif

#ifndef _REWRITER_typedef_UIGestureRecognizer
#define _REWRITER_typedef_UIGestureRecognizer
typedef struct objc_object UIGestureRecognizer;
typedef struct {} _objc_exc_UIGestureRecognizer;
#endif


typedef NSInteger UITouchPhase; enum {
    UITouchPhaseBegan,
    UITouchPhaseMoved,
    UITouchPhaseStationary,
    UITouchPhaseEnded,
    UITouchPhaseCancelled,
};

typedef NSInteger UIForceTouchCapability; enum {
    UIForceTouchCapabilityUnknown = 0,
    UIForceTouchCapabilityUnavailable = 1,
    UIForceTouchCapabilityAvailable = 2
};

typedef NSInteger UITouchType; enum {
    UITouchTypeDirect,
    UITouchTypeIndirect,
    UITouchTypeStylus __attribute__((availability(ios,introduced=9_1))),
} __attribute__((availability(ios,introduced=9_0)));

typedef NSInteger UITouchProperties; enum {
    UITouchPropertyForce = (1UL << 0),
    UITouchPropertyAzimuth = (1UL << 1),
    UITouchPropertyAltitude = (1UL << 2),
    UITouchPropertyLocation = (1UL << 3),
} __attribute__((availability(ios,introduced=9_1)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) 
#ifndef _REWRITER_typedef_UITouch
#define _REWRITER_typedef_UITouch
typedef struct objc_object UITouch;
typedef struct {} _objc_exc_UITouch;
#endif

struct UITouch_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property(nonatomic,readonly) NSTimeInterval timestamp;
// @property(nonatomic,readonly) UITouchPhase phase;
// @property(nonatomic,readonly) NSUInteger tapCount;
// @property(nonatomic,readonly) UITouchType type __attribute__((availability(ios,introduced=9_0)));



// @property(nonatomic,readonly) CGFloat majorRadius __attribute__((availability(ios,introduced=8_0)));
// @property(nonatomic,readonly) CGFloat majorRadiusTolerance __attribute__((availability(ios,introduced=8_0)));

// @property(nullable,nonatomic,readonly,strong) UIWindow *window;
// @property(nullable,nonatomic,readonly,strong) UIView *view;
// @property(nullable,nonatomic,readonly,copy) NSArray <UIGestureRecognizer *> *gestureRecognizers __attribute__((availability(ios,introduced=3_2)));

// - (CGPoint)locationInView:(nullable UIView *)view;
// - (CGPoint)previousLocationInView:(nullable UIView *)view;



// - (CGPoint)preciseLocationInView:(nullable UIView *)view __attribute__((availability(ios,introduced=9_1)));
// - (CGPoint)precisePreviousLocationInView:(nullable UIView *)view __attribute__((availability(ios,introduced=9_1)));


// @property(nonatomic,readonly) CGFloat force __attribute__((availability(ios,introduced=9_0)));

// @property(nonatomic,readonly) CGFloat maximumPossibleForce __attribute__((availability(ios,introduced=9_0)));



// - (CGFloat)azimuthAngleInView:(nullable UIView *)view __attribute__((availability(ios,introduced=9_1)));


// - (CGVector)azimuthUnitVectorInView:(nullable UIView *)view __attribute__((availability(ios,introduced=9_1)));




// @property(nonatomic,readonly) CGFloat altitudeAngle __attribute__((availability(ios,introduced=9_1)));



// @property(nonatomic,readonly) NSNumber * _Nullable estimationUpdateIndex __attribute__((availability(ios,introduced=9_1)));


// @property(nonatomic,readonly) UITouchProperties estimatedProperties __attribute__((availability(ios,introduced=9_1)));



// @property(nonatomic,readonly) UITouchProperties estimatedPropertiesExpectingUpdates __attribute__((availability(ios,introduced=9_1)));


/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

typedef NSString * UIContentSizeCategory __attribute__((swift_wrapper(enum))) __attribute__((availability(ios,introduced=7_0)));



extern "C" __attribute__((visibility ("default"))) UIContentSizeCategory const UIContentSizeCategoryUnspecified __attribute__((availability(ios,introduced=10_0)));
extern "C" __attribute__((visibility ("default"))) UIContentSizeCategory const UIContentSizeCategoryExtraSmall __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility ("default"))) UIContentSizeCategory const UIContentSizeCategorySmall __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility ("default"))) UIContentSizeCategory const UIContentSizeCategoryMedium __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility ("default"))) UIContentSizeCategory const UIContentSizeCategoryLarge __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility ("default"))) UIContentSizeCategory const UIContentSizeCategoryExtraLarge __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility ("default"))) UIContentSizeCategory const UIContentSizeCategoryExtraExtraLarge __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility ("default"))) UIContentSizeCategory const UIContentSizeCategoryExtraExtraExtraLarge __attribute__((availability(ios,introduced=7_0)));


extern "C" __attribute__((visibility ("default"))) UIContentSizeCategory const UIContentSizeCategoryAccessibilityMedium __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility ("default"))) UIContentSizeCategory const UIContentSizeCategoryAccessibilityLarge __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility ("default"))) UIContentSizeCategory const UIContentSizeCategoryAccessibilityExtraLarge __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility ("default"))) UIContentSizeCategory const UIContentSizeCategoryAccessibilityExtraExtraLarge __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility ("default"))) UIContentSizeCategory const UIContentSizeCategoryAccessibilityExtraExtraExtraLarge __attribute__((availability(ios,introduced=7_0)));


extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIContentSizeCategoryDidChangeNotification __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIContentSizeCategoryNewValueKey __attribute__((availability(ios,introduced=7_0)));

extern "C" __attribute__((visibility ("default"))) BOOL UIContentSizeCategoryIsAccessibilityCategory(UIContentSizeCategory category) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((swift_private));
extern "C" __attribute__((visibility ("default"))) NSComparisonResult UIContentSizeCategoryCompareToCategory(UIContentSizeCategory lhs, UIContentSizeCategory rhs) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((swift_private));
#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) 
#ifndef _REWRITER_typedef_UITraitCollection
#define _REWRITER_typedef_UITraitCollection
typedef struct objc_object UITraitCollection;
typedef struct {} _objc_exc_UITraitCollection;
#endif

struct UITraitCollection_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)init __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

// - (BOOL)containsTraitsInCollection:(nullable UITraitCollection *)trait;



// + (UITraitCollection *)traitCollectionWithTraitsFromCollections:(NSArray<UITraitCollection *> *)traitCollections;


// + (UITraitCollection *)traitCollectionWithUserInterfaceIdiom:(UIUserInterfaceIdiom)idiom;
// @property (nonatomic, readonly) UIUserInterfaceIdiom userInterfaceIdiom;

// + (UITraitCollection *)traitCollectionWithUserInterfaceStyle:(UIUserInterfaceStyle)userInterfaceStyle __attribute__((availability(tvos,introduced=10_0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(ios,unavailable)));
// @property (nonatomic, readonly) UIUserInterfaceStyle userInterfaceStyle __attribute__((availability(tvos,introduced=10_0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(ios,unavailable)));

// + (UITraitCollection *)traitCollectionWithLayoutDirection:(UITraitEnvironmentLayoutDirection)layoutDirection __attribute__((availability(ios,introduced=10_0)));
// @property (nonatomic, readonly) UITraitEnvironmentLayoutDirection layoutDirection __attribute__((availability(ios,introduced=10_0)));

// + (UITraitCollection *)traitCollectionWithDisplayScale:(CGFloat)scale;
// @property (nonatomic, readonly) CGFloat displayScale;

// + (UITraitCollection *)traitCollectionWithHorizontalSizeClass:(UIUserInterfaceSizeClass)horizontalSizeClass;
// @property (nonatomic, readonly) UIUserInterfaceSizeClass horizontalSizeClass;

// + (UITraitCollection *)traitCollectionWithVerticalSizeClass:(UIUserInterfaceSizeClass)verticalSizeClass;
// @property (nonatomic, readonly) UIUserInterfaceSizeClass verticalSizeClass;

// + (UITraitCollection *)traitCollectionWithForceTouchCapability:(UIForceTouchCapability)capability __attribute__((availability(ios,introduced=9_0)));
// @property (nonatomic, readonly) UIForceTouchCapability forceTouchCapability __attribute__((availability(ios,introduced=9_0)));

// + (UITraitCollection *)traitCollectionWithPreferredContentSizeCategory:(UIContentSizeCategory)preferredContentSizeCategory __attribute__((availability(ios,introduced=10_0)));
// @property (nonatomic, copy, readonly) UIContentSizeCategory preferredContentSizeCategory __attribute__((availability(ios,introduced=10_0)));

// + (UITraitCollection *)traitCollectionWithDisplayGamut:(UIDisplayGamut)displayGamut __attribute__((availability(ios,introduced=10_0)));
// @property (nonatomic, readonly) UIDisplayGamut displayGamut __attribute__((availability(ios,introduced=10_0)));

/* @end */



// @protocol UITraitEnvironment <NSObject>
// @property (nonatomic, readonly) UITraitCollection *traitCollection __attribute__((availability(ios,introduced=8_0)));


// - (void)traitCollectionDidChange:(nullable UITraitCollection *)previousTraitCollection __attribute__((availability(ios,introduced=8_0)));
/* @end */

#pragma clang assume_nonnull end















// @class NSLayoutXAxisAnchor;
#ifndef _REWRITER_typedef_NSLayoutXAxisAnchor
#define _REWRITER_typedef_NSLayoutXAxisAnchor
typedef struct objc_object NSLayoutXAxisAnchor;
typedef struct {} _objc_exc_NSLayoutXAxisAnchor;
#endif

#ifndef _REWRITER_typedef_NSLayoutYAxisAnchor
#define _REWRITER_typedef_NSLayoutYAxisAnchor
typedef struct objc_object NSLayoutYAxisAnchor;
typedef struct {} _objc_exc_NSLayoutYAxisAnchor;
#endif

#ifndef _REWRITER_typedef_NSLayoutDimension
#define _REWRITER_typedef_NSLayoutDimension
typedef struct objc_object NSLayoutDimension;
typedef struct {} _objc_exc_NSLayoutDimension;
#endif


#pragma clang assume_nonnull begin
// @class UIView;
#ifndef _REWRITER_typedef_UIView
#define _REWRITER_typedef_UIView
typedef struct objc_object UIView;
typedef struct {} _objc_exc_UIView;
#endif







__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0)))

#ifndef _REWRITER_typedef_UILayoutGuide
#define _REWRITER_typedef_UILayoutGuide
typedef struct objc_object UILayoutGuide;
typedef struct {} _objc_exc_UILayoutGuide;
#endif

struct UILayoutGuide_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};





// @property(nonatomic,readonly) CGRect layoutFrame;






// @property(nonatomic,weak,nullable) UIView *owningView;




// @property(nonatomic,copy) NSString *identifier;




// @property(nonatomic,readonly,strong) NSLayoutXAxisAnchor *leadingAnchor;
// @property(nonatomic,readonly,strong) NSLayoutXAxisAnchor *trailingAnchor;
// @property(nonatomic,readonly,strong) NSLayoutXAxisAnchor *leftAnchor;
// @property(nonatomic,readonly,strong) NSLayoutXAxisAnchor *rightAnchor;
// @property(nonatomic,readonly,strong) NSLayoutYAxisAnchor *topAnchor;
// @property(nonatomic,readonly,strong) NSLayoutYAxisAnchor *bottomAnchor;
// @property(nonatomic,readonly,strong) NSLayoutDimension *widthAnchor;
// @property(nonatomic,readonly,strong) NSLayoutDimension *heightAnchor;
// @property(nonatomic,readonly,strong) NSLayoutXAxisAnchor *centerXAnchor;
// @property(nonatomic,readonly,strong) NSLayoutYAxisAnchor *centerYAnchor;

/* @end */

#pragma clang assume_nonnull end

// @protocol UIFocusEnvironment;

#pragma clang assume_nonnull begin


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0))) 
#ifndef _REWRITER_typedef_UIFocusGuide
#define _REWRITER_typedef_UIFocusGuide
typedef struct objc_object UIFocusGuide;
typedef struct {} _objc_exc_UIFocusGuide;
#endif

struct UIFocusGuide_IMPL {
	struct UILayoutGuide_IMPL UILayoutGuide_IVARS;
};



// @property (nonatomic, getter=isEnabled) BOOL enabled;



// @property (nonatomic, copy, null_resettable) NSArray<id<UIFocusEnvironment>> *preferredFocusEnvironments __attribute__((availability(ios,introduced=10_0)));


// @property (nonatomic, weak, nullable) UIView *preferredFocusedView __attribute__((availability(ios,introduced=9_0,deprecated=10_0,message="" "Use -preferredFocusEnvironments instead.")));

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=11_0))) // @protocol UIFocusAnimationContext <NSObject>


// @property (nonatomic, readonly) NSTimeInterval duration;

/* @end */



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0))) 
#ifndef _REWRITER_typedef_UIFocusAnimationCoordinator
#define _REWRITER_typedef_UIFocusAnimationCoordinator
typedef struct objc_object UIFocusAnimationCoordinator;
typedef struct {} _objc_exc_UIFocusAnimationCoordinator;
#endif

struct UIFocusAnimationCoordinator_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};

// - (void)addCoordinatedAnimations:(nullable void (^)(void))animations completion:(nullable void (^)(void))completion;
// - (void)addCoordinatedFocusingAnimations:(void (^ _Nullable)(id<UIFocusAnimationContext> animationContext))animations completion:(void (^ _Nullable)(void))completion __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));
// - (void)addCoordinatedUnfocusingAnimations:(void (^ _Nullable)(id<UIFocusAnimationContext> animationContext))animations completion:(void (^ _Nullable)(void))completion __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));

/* @end */

#pragma clang assume_nonnull end


// @class UIView;
#ifndef _REWRITER_typedef_UIView
#define _REWRITER_typedef_UIView
typedef struct objc_object UIView;
typedef struct {} _objc_exc_UIView;
#endif

#ifndef _REWRITER_typedef_UIFocusUpdateContext
#define _REWRITER_typedef_UIFocusUpdateContext
typedef struct objc_object UIFocusUpdateContext;
typedef struct {} _objc_exc_UIFocusUpdateContext;
#endif


typedef NSUInteger UIFocusHeading; enum {
    UIFocusHeadingNone = 0,
    UIFocusHeadingUp = 1 << 0,
    UIFocusHeadingDown = 1 << 1,
    UIFocusHeadingLeft = 1 << 2,
    UIFocusHeadingRight = 1 << 3,
    UIFocusHeadingNext = 1 << 4,
    UIFocusHeadingPrevious = 1 << 5,
} __attribute__((availability(ios,introduced=9_0)));




typedef NSString * UIFocusSoundIdentifier;



#pragma clang assume_nonnull begin


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0))) // @protocol UIFocusEnvironment <NSObject>




// @property (nonatomic, copy, readonly) NSArray<id<UIFocusEnvironment>> *preferredFocusEnvironments;


// - (void)setNeedsFocusUpdate;


// - (void)updateFocusIfNeeded;


// - (BOOL)shouldUpdateFocusInContext:(UIFocusUpdateContext *)context;


// - (void)didUpdateFocusInContext:(UIFocusUpdateContext *)context withAnimationCoordinator:(UIFocusAnimationCoordinator *)coordinator;

/* @optional */





// - (nullable UIFocusSoundIdentifier)soundIdentifierForFocusUpdateInContext:(UIFocusUpdateContext *)context __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable)));

// @property (nonatomic, weak, readonly, nullable) UIView *preferredFocusedView __attribute__((availability(ios,introduced=9_0,deprecated=10_0,message="" "Use -preferredFocusEnvironments instead.")));

/* @end */





__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0))) // @protocol UIFocusItem <UIFocusEnvironment>




// @property(nonatomic, readonly) BOOL canBecomeFocused;




/* @end */




__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0))) 
#ifndef _REWRITER_typedef_UIFocusUpdateContext
#define _REWRITER_typedef_UIFocusUpdateContext
typedef struct objc_object UIFocusUpdateContext;
typedef struct {} _objc_exc_UIFocusUpdateContext;
#endif

struct UIFocusUpdateContext_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



// @property (nonatomic, weak, readonly, nullable) id<UIFocusItem> previouslyFocusedItem __attribute__((availability(ios,introduced=10_0)));


// @property (nonatomic, weak, readonly, nullable) id<UIFocusItem> nextFocusedItem __attribute__((availability(ios,introduced=10_0)));




// @property (nonatomic, weak, readonly, nullable) UIView *previouslyFocusedView;




// @property (nonatomic, weak, readonly, nullable) UIView *nextFocusedView;


// @property (nonatomic, assign, readonly) UIFocusHeading focusHeading;

/* @end */



extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIFocusDidUpdateNotification __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIFocusMovementDidFailNotification __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));

extern "C" __attribute__((visibility ("default"))) NSString * const UIFocusUpdateContextKey __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));
extern "C" __attribute__((visibility ("default"))) NSString * const UIFocusUpdateAnimationCoordinatorKey __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));


extern "C" __attribute__((visibility ("default"))) UIFocusSoundIdentifier const UIFocusSoundIdentifierNone __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable)));


extern "C" __attribute__((visibility ("default"))) UIFocusSoundIdentifier const UIFocusSoundIdentifierDefault __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable)));
#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

typedef NSInteger UIViewAnimationCurve; enum {
    UIViewAnimationCurveEaseInOut,
    UIViewAnimationCurveEaseIn,
    UIViewAnimationCurveEaseOut,
    UIViewAnimationCurveLinear,
};

typedef NSInteger UIViewContentMode; enum {
    UIViewContentModeScaleToFill,
    UIViewContentModeScaleAspectFit,
    UIViewContentModeScaleAspectFill,
    UIViewContentModeRedraw,
    UIViewContentModeCenter,
    UIViewContentModeTop,
    UIViewContentModeBottom,
    UIViewContentModeLeft,
    UIViewContentModeRight,
    UIViewContentModeTopLeft,
    UIViewContentModeTopRight,
    UIViewContentModeBottomLeft,
    UIViewContentModeBottomRight,
};

typedef NSInteger UIViewAnimationTransition; enum {
    UIViewAnimationTransitionNone,
    UIViewAnimationTransitionFlipFromLeft,
    UIViewAnimationTransitionFlipFromRight,
    UIViewAnimationTransitionCurlUp,
    UIViewAnimationTransitionCurlDown,
};

typedef NSUInteger UIViewAutoresizing; enum {
    UIViewAutoresizingNone = 0,
    UIViewAutoresizingFlexibleLeftMargin = 1 << 0,
    UIViewAutoresizingFlexibleWidth = 1 << 1,
    UIViewAutoresizingFlexibleRightMargin = 1 << 2,
    UIViewAutoresizingFlexibleTopMargin = 1 << 3,
    UIViewAutoresizingFlexibleHeight = 1 << 4,
    UIViewAutoresizingFlexibleBottomMargin = 1 << 5
};

typedef NSUInteger UIViewAnimationOptions; enum {
    UIViewAnimationOptionLayoutSubviews = 1 << 0,
    UIViewAnimationOptionAllowUserInteraction = 1 << 1,
    UIViewAnimationOptionBeginFromCurrentState = 1 << 2,
    UIViewAnimationOptionRepeat = 1 << 3,
    UIViewAnimationOptionAutoreverse = 1 << 4,
    UIViewAnimationOptionOverrideInheritedDuration = 1 << 5,
    UIViewAnimationOptionOverrideInheritedCurve = 1 << 6,
    UIViewAnimationOptionAllowAnimatedContent = 1 << 7,
    UIViewAnimationOptionShowHideTransitionViews = 1 << 8,
    UIViewAnimationOptionOverrideInheritedOptions = 1 << 9,

    UIViewAnimationOptionCurveEaseInOut = 0 << 16,
    UIViewAnimationOptionCurveEaseIn = 1 << 16,
    UIViewAnimationOptionCurveEaseOut = 2 << 16,
    UIViewAnimationOptionCurveLinear = 3 << 16,

    UIViewAnimationOptionTransitionNone = 0 << 20,
    UIViewAnimationOptionTransitionFlipFromLeft = 1 << 20,
    UIViewAnimationOptionTransitionFlipFromRight = 2 << 20,
    UIViewAnimationOptionTransitionCurlUp = 3 << 20,
    UIViewAnimationOptionTransitionCurlDown = 4 << 20,
    UIViewAnimationOptionTransitionCrossDissolve = 5 << 20,
    UIViewAnimationOptionTransitionFlipFromTop = 6 << 20,
    UIViewAnimationOptionTransitionFlipFromBottom = 7 << 20,

    UIViewAnimationOptionPreferredFramesPerSecondDefault = 0 << 24,
    UIViewAnimationOptionPreferredFramesPerSecond60 = 3 << 24,
    UIViewAnimationOptionPreferredFramesPerSecond30 = 7 << 24,

} __attribute__((availability(ios,introduced=4_0)));

typedef NSUInteger UIViewKeyframeAnimationOptions; enum {
    UIViewKeyframeAnimationOptionLayoutSubviews = UIViewAnimationOptionLayoutSubviews,
    UIViewKeyframeAnimationOptionAllowUserInteraction = UIViewAnimationOptionAllowUserInteraction,
    UIViewKeyframeAnimationOptionBeginFromCurrentState = UIViewAnimationOptionBeginFromCurrentState,
    UIViewKeyframeAnimationOptionRepeat = UIViewAnimationOptionRepeat,
    UIViewKeyframeAnimationOptionAutoreverse = UIViewAnimationOptionAutoreverse,
    UIViewKeyframeAnimationOptionOverrideInheritedDuration = UIViewAnimationOptionOverrideInheritedDuration,
    UIViewKeyframeAnimationOptionOverrideInheritedOptions = UIViewAnimationOptionOverrideInheritedOptions,

    UIViewKeyframeAnimationOptionCalculationModeLinear = 0 << 10,
    UIViewKeyframeAnimationOptionCalculationModeDiscrete = 1 << 10,
    UIViewKeyframeAnimationOptionCalculationModePaced = 2 << 10,
    UIViewKeyframeAnimationOptionCalculationModeCubic = 3 << 10,
    UIViewKeyframeAnimationOptionCalculationModeCubicPaced = 4 << 10
} __attribute__((availability(ios,introduced=7_0)));

typedef NSUInteger UISystemAnimation; enum {
    UISystemAnimationDelete,
} __attribute__((availability(ios,introduced=7_0)));

typedef NSInteger UIViewTintAdjustmentMode; enum {
    UIViewTintAdjustmentModeAutomatic,

    UIViewTintAdjustmentModeNormal,
    UIViewTintAdjustmentModeDimmed,
} __attribute__((availability(ios,introduced=7_0)));

typedef NSInteger UISemanticContentAttribute; enum {
    UISemanticContentAttributeUnspecified = 0,
    UISemanticContentAttributePlayback,
    UISemanticContentAttributeSpatial,
    UISemanticContentAttributeForceLeftToRight,
    UISemanticContentAttributeForceRightToLeft
} __attribute__((availability(ios,introduced=9_0)));

// @protocol UICoordinateSpace <NSObject>

// - (CGPoint)convertPoint:(CGPoint)point toCoordinateSpace:(id <UICoordinateSpace>)coordinateSpace __attribute__((availability(ios,introduced=8_0)));
// - (CGPoint)convertPoint:(CGPoint)point fromCoordinateSpace:(id <UICoordinateSpace>)coordinateSpace __attribute__((availability(ios,introduced=8_0)));
// - (CGRect)convertRect:(CGRect)rect toCoordinateSpace:(id <UICoordinateSpace>)coordinateSpace __attribute__((availability(ios,introduced=8_0)));
// - (CGRect)convertRect:(CGRect)rect fromCoordinateSpace:(id <UICoordinateSpace>)coordinateSpace __attribute__((availability(ios,introduced=8_0)));

// @property (readonly, nonatomic) CGRect bounds __attribute__((availability(ios,introduced=8_0)));

/* @end */


// @class UIBezierPath;
#ifndef _REWRITER_typedef_UIBezierPath
#define _REWRITER_typedef_UIBezierPath
typedef struct objc_object UIBezierPath;
typedef struct {} _objc_exc_UIBezierPath;
#endif

#ifndef _REWRITER_typedef_UIEvent
#define _REWRITER_typedef_UIEvent
typedef struct objc_object UIEvent;
typedef struct {} _objc_exc_UIEvent;
#endif

#ifndef _REWRITER_typedef_UIWindow
#define _REWRITER_typedef_UIWindow
typedef struct objc_object UIWindow;
typedef struct {} _objc_exc_UIWindow;
#endif

#ifndef _REWRITER_typedef_UIViewController
#define _REWRITER_typedef_UIViewController
typedef struct objc_object UIViewController;
typedef struct {} _objc_exc_UIViewController;
#endif

#ifndef _REWRITER_typedef_UIColor
#define _REWRITER_typedef_UIColor
typedef struct objc_object UIColor;
typedef struct {} _objc_exc_UIColor;
#endif

#ifndef _REWRITER_typedef_UIGestureRecognizer
#define _REWRITER_typedef_UIGestureRecognizer
typedef struct objc_object UIGestureRecognizer;
typedef struct {} _objc_exc_UIGestureRecognizer;
#endif

#ifndef _REWRITER_typedef_UIMotionEffect
#define _REWRITER_typedef_UIMotionEffect
typedef struct objc_object UIMotionEffect;
typedef struct {} _objc_exc_UIMotionEffect;
#endif

#ifndef _REWRITER_typedef_CALayer
#define _REWRITER_typedef_CALayer
typedef struct objc_object CALayer;
typedef struct {} _objc_exc_CALayer;
#endif

#ifndef _REWRITER_typedef_UILayoutGuide
#define _REWRITER_typedef_UILayoutGuide
typedef struct objc_object UILayoutGuide;
typedef struct {} _objc_exc_UILayoutGuide;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) 
#ifndef _REWRITER_typedef_UIView
#define _REWRITER_typedef_UIView
typedef struct objc_object UIView;
typedef struct {} _objc_exc_UIView;
#endif

struct UIView_IMPL {
	struct UIResponder_IMPL UIResponder_IVARS;
};



@property(class, nonatomic, readonly) Class layerClass;




// - (instancetype)initWithFrame:(CGRect)frame __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

// @property(nonatomic,getter=isUserInteractionEnabled) BOOL userInteractionEnabled;
// @property(nonatomic) NSInteger tag;
// @property(nonatomic,readonly,strong) CALayer *layer;


// @property(nonatomic,readonly) BOOL canBecomeFocused __attribute__((availability(ios,introduced=9_0)));



// @property (readonly, nonatomic, getter=isFocused) BOOL focused __attribute__((availability(ios,introduced=9_0)));

// @property (nonatomic) UISemanticContentAttribute semanticContentAttribute __attribute__((availability(ios,introduced=9_0)));


// + (UIUserInterfaceLayoutDirection)userInterfaceLayoutDirectionForSemanticContentAttribute:(UISemanticContentAttribute)attribute __attribute__((availability(ios,introduced=9_0)));


// + (UIUserInterfaceLayoutDirection)userInterfaceLayoutDirectionForSemanticContentAttribute:(UISemanticContentAttribute)semanticContentAttribute relativeToLayoutDirection:(UIUserInterfaceLayoutDirection)layoutDirection __attribute__((availability(ios,introduced=10_0)));


// @property (readonly, nonatomic) UIUserInterfaceLayoutDirection effectiveUserInterfaceLayoutDirection __attribute__((availability(ios,introduced=10_0)));

/* @end */


// @interface UIView(UIViewGeometry)


// @property(nonatomic) CGRect frame;


// @property(nonatomic) CGRect bounds;
// @property(nonatomic) CGPoint center;
// @property(nonatomic) CGAffineTransform transform;
// @property(nonatomic) CGFloat contentScaleFactor __attribute__((availability(ios,introduced=4_0)));

// @property(nonatomic,getter=isMultipleTouchEnabled) BOOL multipleTouchEnabled __attribute__((availability(tvos,unavailable)));
// @property(nonatomic,getter=isExclusiveTouch) BOOL exclusiveTouch __attribute__((availability(tvos,unavailable)));

// - (nullable UIView *)hitTest:(CGPoint)point withEvent:(nullable UIEvent *)event;
// - (BOOL)pointInside:(CGPoint)point withEvent:(nullable UIEvent *)event;

// - (CGPoint)convertPoint:(CGPoint)point toView:(nullable UIView *)view;
// - (CGPoint)convertPoint:(CGPoint)point fromView:(nullable UIView *)view;
// - (CGRect)convertRect:(CGRect)rect toView:(nullable UIView *)view;
// - (CGRect)convertRect:(CGRect)rect fromView:(nullable UIView *)view;

// @property(nonatomic) BOOL autoresizesSubviews;
// @property(nonatomic) UIViewAutoresizing autoresizingMask;

// - (CGSize)sizeThatFits:(CGSize)size;
// - (void)sizeToFit;

/* @end */


// @interface UIView(UIViewHierarchy)

// @property(nullable, nonatomic,readonly) UIView *superview;
// @property(nonatomic,readonly,copy) NSArray<__kindof UIView *> *subviews;
// @property(nullable, nonatomic,readonly) UIWindow *window;

// - (void)removeFromSuperview;
// - (void)insertSubview:(UIView *)view atIndex:(NSInteger)index;
// - (void)exchangeSubviewAtIndex:(NSInteger)index1 withSubviewAtIndex:(NSInteger)index2;

// - (void)addSubview:(UIView *)view;
// - (void)insertSubview:(UIView *)view belowSubview:(UIView *)siblingSubview;
// - (void)insertSubview:(UIView *)view aboveSubview:(UIView *)siblingSubview;

// - (void)bringSubviewToFront:(UIView *)view;
// - (void)sendSubviewToBack:(UIView *)view;

// - (void)didAddSubview:(UIView *)subview;
// - (void)willRemoveSubview:(UIView *)subview;

// - (void)willMoveToSuperview:(nullable UIView *)newSuperview;
// - (void)didMoveToSuperview;
// - (void)willMoveToWindow:(nullable UIWindow *)newWindow;
// - (void)didMoveToWindow;

// - (BOOL)isDescendantOfView:(UIView *)view;
// - (nullable __kindof UIView *)viewWithTag:(NSInteger)tag;


// - (void)setNeedsLayout;
// - (void)layoutIfNeeded;

// - (void)layoutSubviews;
// @property (nonatomic) UIEdgeInsets layoutMargins __attribute__((availability(ios,introduced=8_0)));




// @property (nonatomic) NSDirectionalEdgeInsets directionalLayoutMargins __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));

// @property (nonatomic) BOOL preservesSuperviewLayoutMargins __attribute__((availability(ios,introduced=8_0)));
// @property (nonatomic) BOOL insetsLayoutMarginsFromSafeArea __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));

// - (void)layoutMarginsDidChange __attribute__((availability(ios,introduced=8_0)));

// @property (nonatomic,readonly) UIEdgeInsets safeAreaInsets __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));
// - (void)safeAreaInsetsDidChange __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));



// @property(readonly,strong) UILayoutGuide *layoutMarginsGuide __attribute__((availability(ios,introduced=9_0)));


// @property (nonatomic, readonly, strong) UILayoutGuide *readableContentGuide __attribute__((availability(ios,introduced=9_0)));




// @property(nonatomic,readonly,strong) UILayoutGuide *safeAreaLayoutGuide __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));
/* @end */


// @interface UIView(UIViewRendering)

// - (void)drawRect:(CGRect)rect;

// - (void)setNeedsDisplay;
// - (void)setNeedsDisplayInRect:(CGRect)rect;

// @property(nonatomic) BOOL clipsToBounds;
// @property(nullable, nonatomic,copy) UIColor *backgroundColor __attribute__((annotate("ui_appearance_selector")));
// @property(nonatomic) CGFloat alpha;
// @property(nonatomic,getter=isOpaque) BOOL opaque;
// @property(nonatomic) BOOL clearsContextBeforeDrawing;
// @property(nonatomic,getter=isHidden) BOOL hidden;
// @property(nonatomic) UIViewContentMode contentMode;
// @property(nonatomic) CGRect contentStretch __attribute__((availability(ios,introduced=3_0,deprecated=6_0,message="" ))) __attribute__((availability(tvos,unavailable)));

// @property(nullable, nonatomic,strong) UIView *maskView __attribute__((availability(ios,introduced=8_0)));







// @property(null_resettable, nonatomic, strong) UIColor *tintColor __attribute__((availability(ios,introduced=7_0)));







// @property(nonatomic) UIViewTintAdjustmentMode tintAdjustmentMode __attribute__((availability(ios,introduced=7_0)));




// - (void)tintColorDidChange __attribute__((availability(ios,introduced=7_0)));

/* @end */


// @interface UIView(UIViewAnimation)

// + (void)beginAnimations:(nullable NSString *)animationID context:(nullable void *)context;
// + (void)commitAnimations;


// + (void)setAnimationDelegate:(nullable id)delegate;
// + (void)setAnimationWillStartSelector:(nullable SEL)selector;
// + (void)setAnimationDidStopSelector:(nullable SEL)selector;
// + (void)setAnimationDuration:(NSTimeInterval)duration;
// + (void)setAnimationDelay:(NSTimeInterval)delay;
// + (void)setAnimationStartDate:(NSDate *)startDate;
// + (void)setAnimationCurve:(UIViewAnimationCurve)curve;
// + (void)setAnimationRepeatCount:(float)repeatCount;
// + (void)setAnimationRepeatAutoreverses:(BOOL)repeatAutoreverses;
// + (void)setAnimationBeginsFromCurrentState:(BOOL)fromCurrentState;

// + (void)setAnimationTransition:(UIViewAnimationTransition)transition forView:(UIView *)view cache:(BOOL)cache;

// + (void)setAnimationsEnabled:(BOOL)enabled;

@property(class, nonatomic, readonly) BOOL areAnimationsEnabled;



// + (void)performWithoutAnimation:(void (__attribute__((noescape)) ^)(void))actionsWithoutAnimation __attribute__((availability(ios,introduced=7_0)));


@property(class, nonatomic, readonly) NSTimeInterval inheritedAnimationDuration __attribute__((availability(ios,introduced=9_0)));




/* @end */


// @interface UIView(UIViewAnimationWithBlocks)

// + (void)animateWithDuration:(NSTimeInterval)duration delay:(NSTimeInterval)delay options:(UIViewAnimationOptions)options animations:(void (^)(void))animations completion:(void (^ _Nullable)(BOOL finished))completion __attribute__((availability(ios,introduced=4_0)));

// + (void)animateWithDuration:(NSTimeInterval)duration animations:(void (^)(void))animations completion:(void (^ _Nullable)(BOOL finished))completion __attribute__((availability(ios,introduced=4_0)));

// + (void)animateWithDuration:(NSTimeInterval)duration animations:(void (^)(void))animations __attribute__((availability(ios,introduced=4_0)));


// + (void)animateWithDuration:(NSTimeInterval)duration delay:(NSTimeInterval)delay usingSpringWithDamping:(CGFloat)dampingRatio initialSpringVelocity:(CGFloat)velocity options:(UIViewAnimationOptions)options animations:(void (^)(void))animations completion:(void (^ _Nullable)(BOOL finished))completion __attribute__((availability(ios,introduced=7_0)));

// + (void)transitionWithView:(UIView *)view duration:(NSTimeInterval)duration options:(UIViewAnimationOptions)options animations:(void (^ _Nullable)(void))animations completion:(void (^ _Nullable)(BOOL finished))completion __attribute__((availability(ios,introduced=4_0)));

// + (void)transitionFromView:(UIView *)fromView toView:(UIView *)toView duration:(NSTimeInterval)duration options:(UIViewAnimationOptions)options completion:(void (^ _Nullable)(BOOL finished))completion __attribute__((availability(ios,introduced=4_0)));



// + (void)performSystemAnimation:(UISystemAnimation)animation onViews:(NSArray<__kindof UIView *> *)views options:(UIViewAnimationOptions)options animations:(void (^ _Nullable)(void))parallelAnimations completion:(void (^ _Nullable)(BOOL finished))completion __attribute__((availability(ios,introduced=7_0)));

/* @end */


// @interface UIView (UIViewKeyframeAnimations)

// + (void)animateKeyframesWithDuration:(NSTimeInterval)duration delay:(NSTimeInterval)delay options:(UIViewKeyframeAnimationOptions)options animations:(void (^)(void))animations completion:(void (^ _Nullable)(BOOL finished))completion __attribute__((availability(ios,introduced=7_0)));
// + (void)addKeyframeWithRelativeStartTime:(double)frameStartTime relativeDuration:(double)frameDuration animations:(void (^)(void))animations __attribute__((availability(ios,introduced=7_0)));

/* @end */


// @interface UIView (UIViewGestureRecognizers)

// @property(nullable, nonatomic,copy) NSArray<__kindof UIGestureRecognizer *> *gestureRecognizers __attribute__((availability(ios,introduced=3_2)));

// - (void)addGestureRecognizer:(UIGestureRecognizer*)gestureRecognizer __attribute__((availability(ios,introduced=3_2)));
// - (void)removeGestureRecognizer:(UIGestureRecognizer*)gestureRecognizer __attribute__((availability(ios,introduced=3_2)));




// - (BOOL)gestureRecognizerShouldBegin:(UIGestureRecognizer *)gestureRecognizer __attribute__((availability(ios,introduced=6_0)));

/* @end */


// @interface UIView (UIViewMotionEffects)






// - (void)addMotionEffect:(UIMotionEffect *)effect __attribute__((availability(ios,introduced=7_0)));



// - (void)removeMotionEffect:(UIMotionEffect *)effect __attribute__((availability(ios,introduced=7_0)));

// @property (copy, nonatomic) NSArray<__kindof UIMotionEffect *> *motionEffects __attribute__((availability(ios,introduced=7_0)));

/* @end */







typedef NSInteger UILayoutConstraintAxis; enum {
    UILayoutConstraintAxisHorizontal = 0,
    UILayoutConstraintAxisVertical = 1
};






// @interface UIView (UIConstraintBasedLayoutInstallingConstraints)

// @property(nonatomic,readonly) NSArray<__kindof NSLayoutConstraint *> *constraints __attribute__((availability(ios,introduced=6_0)));

// - (void)addConstraint:(NSLayoutConstraint *)constraint __attribute__((availability(ios,introduced=6_0)));
// - (void)addConstraints:(NSArray<__kindof NSLayoutConstraint *> *)constraints __attribute__((availability(ios,introduced=6_0)));
// - (void)removeConstraint:(NSLayoutConstraint *)constraint __attribute__((availability(ios,introduced=6_0)));
// - (void)removeConstraints:(NSArray<__kindof NSLayoutConstraint *> *)constraints __attribute__((availability(ios,introduced=6_0)));
/* @end */

// @interface UIView (UIConstraintBasedLayoutCoreMethods)
// - (void)updateConstraintsIfNeeded __attribute__((availability(ios,introduced=6_0)));
// - (void)updateConstraints __attribute__((availability(ios,introduced=6_0))) __attribute__((objc_requires_super));
// - (BOOL)needsUpdateConstraints __attribute__((availability(ios,introduced=6_0)));
// - (void)setNeedsUpdateConstraints __attribute__((availability(ios,introduced=6_0)));
/* @end */




// @interface UIView (UIConstraintBasedCompatibility)







// @property(nonatomic) BOOL translatesAutoresizingMaskIntoConstraints __attribute__((availability(ios,introduced=6_0)));




@property(class, nonatomic, readonly) BOOL requiresConstraintBasedLayout __attribute__((availability(ios,introduced=6_0)));




/* @end */




// @interface UIView (UIConstraintBasedLayoutLayering)
// - (CGRect)alignmentRectForFrame:(CGRect)frame __attribute__((availability(ios,introduced=6_0)));
// - (CGRect)frameForAlignmentRect:(CGRect)alignmentRect __attribute__((availability(ios,introduced=6_0)));




// @property(nonatomic, readonly) UIEdgeInsets alignmentRectInsets __attribute__((availability(ios,introduced=6_0)));




// - (UIView *)viewForBaselineLayout __attribute__((availability(ios,introduced=6_0,deprecated=9_0,message="" "Override -viewForFirstBaselineLayout or -viewForLastBaselineLayout as appropriate, instead"))) __attribute__((availability(tvos,unavailable)));
// @property(readonly,strong) UIView *viewForFirstBaselineLayout __attribute__((availability(ios,introduced=9_0)));
// @property(readonly,strong) UIView *viewForLastBaselineLayout __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility ("default"))) const CGFloat UIViewNoIntrinsicMetric __attribute__((availability(ios,introduced=6_0)));

// @property(nonatomic, readonly) CGSize intrinsicContentSize __attribute__((availability(ios,introduced=6_0)));



// - (void)invalidateIntrinsicContentSize __attribute__((availability(ios,introduced=6_0)));

// - (UILayoutPriority)contentHuggingPriorityForAxis:(UILayoutConstraintAxis)axis __attribute__((availability(ios,introduced=6_0)));
// - (void)setContentHuggingPriority:(UILayoutPriority)priority forAxis:(UILayoutConstraintAxis)axis __attribute__((availability(ios,introduced=6_0)));

// - (UILayoutPriority)contentCompressionResistancePriorityForAxis:(UILayoutConstraintAxis)axis __attribute__((availability(ios,introduced=6_0)));
// - (void)setContentCompressionResistancePriority:(UILayoutPriority)priority forAxis:(UILayoutConstraintAxis)axis __attribute__((availability(ios,introduced=6_0)));
/* @end */




extern "C" __attribute__((visibility ("default"))) const CGSize UILayoutFittingCompressedSize __attribute__((availability(ios,introduced=6_0)));
extern "C" __attribute__((visibility ("default"))) const CGSize UILayoutFittingExpandedSize __attribute__((availability(ios,introduced=6_0)));

// @interface UIView (UIConstraintBasedLayoutFittingSize)



// - (CGSize)systemLayoutSizeFittingSize:(CGSize)targetSize __attribute__((availability(ios,introduced=6_0)));
// - (CGSize)systemLayoutSizeFittingSize:(CGSize)targetSize withHorizontalFittingPriority:(UILayoutPriority)horizontalFittingPriority verticalFittingPriority:(UILayoutPriority)verticalFittingPriority __attribute__((availability(ios,introduced=8_0)));
/* @end */


// @interface UIView (UILayoutGuideSupport)



// @property(nonatomic,readonly,copy) NSArray<__kindof UILayoutGuide *> *layoutGuides __attribute__((availability(ios,introduced=9_0)));



// - (void)addLayoutGuide:(UILayoutGuide *)layoutGuide __attribute__((availability(ios,introduced=9_0)));



// - (void)removeLayoutGuide:(UILayoutGuide *)layoutGuide __attribute__((availability(ios,introduced=9_0)));
/* @end */


// @class NSLayoutXAxisAnchor;
#ifndef _REWRITER_typedef_NSLayoutXAxisAnchor
#define _REWRITER_typedef_NSLayoutXAxisAnchor
typedef struct objc_object NSLayoutXAxisAnchor;
typedef struct {} _objc_exc_NSLayoutXAxisAnchor;
#endif

#ifndef _REWRITER_typedef_NSLayoutYAxisAnchor
#define _REWRITER_typedef_NSLayoutYAxisAnchor
typedef struct objc_object NSLayoutYAxisAnchor;
typedef struct {} _objc_exc_NSLayoutYAxisAnchor;
#endif

#ifndef _REWRITER_typedef_NSLayoutDimension
#define _REWRITER_typedef_NSLayoutDimension
typedef struct objc_object NSLayoutDimension;
typedef struct {} _objc_exc_NSLayoutDimension;
#endif

// @interface UIView (UIViewLayoutConstraintCreation)


// @property(nonatomic,readonly,strong) NSLayoutXAxisAnchor *leadingAnchor __attribute__((availability(ios,introduced=9_0)));
// @property(nonatomic,readonly,strong) NSLayoutXAxisAnchor *trailingAnchor __attribute__((availability(ios,introduced=9_0)));
// @property(nonatomic,readonly,strong) NSLayoutXAxisAnchor *leftAnchor __attribute__((availability(ios,introduced=9_0)));
// @property(nonatomic,readonly,strong) NSLayoutXAxisAnchor *rightAnchor __attribute__((availability(ios,introduced=9_0)));
// @property(nonatomic,readonly,strong) NSLayoutYAxisAnchor *topAnchor __attribute__((availability(ios,introduced=9_0)));
// @property(nonatomic,readonly,strong) NSLayoutYAxisAnchor *bottomAnchor __attribute__((availability(ios,introduced=9_0)));
// @property(nonatomic,readonly,strong) NSLayoutDimension *widthAnchor __attribute__((availability(ios,introduced=9_0)));
// @property(nonatomic,readonly,strong) NSLayoutDimension *heightAnchor __attribute__((availability(ios,introduced=9_0)));
// @property(nonatomic,readonly,strong) NSLayoutXAxisAnchor *centerXAnchor __attribute__((availability(ios,introduced=9_0)));
// @property(nonatomic,readonly,strong) NSLayoutYAxisAnchor *centerYAnchor __attribute__((availability(ios,introduced=9_0)));
// @property(nonatomic,readonly,strong) NSLayoutYAxisAnchor *firstBaselineAnchor __attribute__((availability(ios,introduced=9_0)));
// @property(nonatomic,readonly,strong) NSLayoutYAxisAnchor *lastBaselineAnchor __attribute__((availability(ios,introduced=9_0)));

/* @end */






// @interface UIView (UIConstraintBasedLayoutDebugging)




// - (NSArray<__kindof NSLayoutConstraint *> *)constraintsAffectingLayoutForAxis:(UILayoutConstraintAxis)axis __attribute__((availability(ios,introduced=6_0)));







// @property(nonatomic, readonly) BOOL hasAmbiguousLayout __attribute__((availability(ios,introduced=6_0)));




// - (void)exerciseAmbiguityInLayout __attribute__((availability(ios,introduced=6_0)));
/* @end */




// @interface UILayoutGuide (UIConstraintBasedLayoutDebugging)




// - (NSArray<__kindof NSLayoutConstraint *> *)constraintsAffectingLayoutForAxis:(UILayoutConstraintAxis)axis __attribute__((availability(ios,introduced=10_0)));






// @property(nonatomic, readonly) BOOL hasAmbiguousLayout __attribute__((availability(ios,introduced=10_0)));



/* @end */


// @interface UIView (UIStateRestoration)
// @property (nullable, nonatomic, copy) NSString *restorationIdentifier __attribute__((availability(ios,introduced=6_0)));
// - (void) encodeRestorableStateWithCoder:(NSCoder *)coder __attribute__((availability(ios,introduced=6_0)));
// - (void) decodeRestorableStateWithCoder:(NSCoder *)coder __attribute__((availability(ios,introduced=6_0)));
/* @end */


// @interface UIView (UISnapshotting)
// - (nullable UIView *)snapshotViewAfterScreenUpdates:(BOOL)afterUpdates __attribute__((availability(ios,introduced=7_0)));
// - (nullable UIView *)resizableSnapshotViewFromRect:(CGRect)rect afterScreenUpdates:(BOOL)afterUpdates withCapInsets:(UIEdgeInsets)capInsets __attribute__((availability(ios,introduced=7_0)));

// - (BOOL)drawViewHierarchyInRect:(CGRect)rect afterScreenUpdates:(BOOL)afterUpdates __attribute__((availability(ios,introduced=7_0)));
/* @end */

#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin

// @protocol UIPickerViewDataSource, UIPickerViewDelegate;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIPickerView
#define _REWRITER_typedef_UIPickerView
typedef struct objc_object UIPickerView;
typedef struct {} _objc_exc_UIPickerView;
#endif

struct UIPickerView_IMPL {
	struct UIView_IMPL UIView_IVARS;
};


// @property(nullable,nonatomic,weak) id<UIPickerViewDataSource> dataSource;
// @property(nullable,nonatomic,weak) id<UIPickerViewDelegate> delegate;
// @property(nonatomic) BOOL showsSelectionIndicator;


// @property(nonatomic,readonly) NSInteger numberOfComponents;
// - (NSInteger)numberOfRowsInComponent:(NSInteger)component;
// - (CGSize)rowSizeForComponent:(NSInteger)component;




// - (nullable UIView *)viewForRow:(NSInteger)row forComponent:(NSInteger)component;


// - (void)reloadAllComponents;
// - (void)reloadComponent:(NSInteger)component;


// - (void)selectRow:(NSInteger)row inComponent:(NSInteger)component animated:(BOOL)animated;

// - (NSInteger)selectedRowInComponent:(NSInteger)component;

/* @end */



__attribute__((availability(tvos,unavailable)))
// @protocol UIPickerViewDataSource<NSObject>
/* @required */


// - (NSInteger)numberOfComponentsInPickerView:(UIPickerView *)pickerView;


// - (NSInteger)pickerView:(UIPickerView *)pickerView numberOfRowsInComponent:(NSInteger)component;
/* @end */


__attribute__((availability(tvos,unavailable)))
// @protocol UIPickerViewDelegate<NSObject>
/* @optional */


// - (CGFloat)pickerView:(UIPickerView *)pickerView widthForComponent:(NSInteger)component __attribute__((availability(tvos,unavailable)));
// - (CGFloat)pickerView:(UIPickerView *)pickerView rowHeightForComponent:(NSInteger)component __attribute__((availability(tvos,unavailable)));




// - (nullable NSString *)pickerView:(UIPickerView *)pickerView titleForRow:(NSInteger)row forComponent:(NSInteger)component __attribute__((availability(tvos,unavailable)));
// - (nullable NSAttributedString *)pickerView:(UIPickerView *)pickerView attributedTitleForRow:(NSInteger)row forComponent:(NSInteger)component __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(tvos,unavailable)));
// - (UIView *)pickerView:(UIPickerView *)pickerView viewForRow:(NSInteger)row forComponent:(NSInteger)component reusingView:(nullable UIView *)view __attribute__((availability(tvos,unavailable)));

// - (void)pickerView:(UIPickerView *)pickerView didSelectRow:(NSInteger)row inComponent:(NSInteger)component __attribute__((availability(tvos,unavailable)));

/* @end */

#pragma clang assume_nonnull end








#pragma clang assume_nonnull begin

typedef NSUInteger UIControlEvents; enum {
    UIControlEventTouchDown = 1 << 0,
    UIControlEventTouchDownRepeat = 1 << 1,
    UIControlEventTouchDragInside = 1 << 2,
    UIControlEventTouchDragOutside = 1 << 3,
    UIControlEventTouchDragEnter = 1 << 4,
    UIControlEventTouchDragExit = 1 << 5,
    UIControlEventTouchUpInside = 1 << 6,
    UIControlEventTouchUpOutside = 1 << 7,
    UIControlEventTouchCancel = 1 << 8,

    UIControlEventValueChanged = 1 << 12,
    UIControlEventPrimaryActionTriggered __attribute__((availability(ios,introduced=9_0))) = 1 << 13,

    UIControlEventEditingDidBegin = 1 << 16,
    UIControlEventEditingChanged = 1 << 17,
    UIControlEventEditingDidEnd = 1 << 18,
    UIControlEventEditingDidEndOnExit = 1 << 19,

    UIControlEventAllTouchEvents = 0x00000FFF,
    UIControlEventAllEditingEvents = 0x000F0000,
    UIControlEventApplicationReserved = 0x0F000000,
    UIControlEventSystemReserved = 0xF0000000,
    UIControlEventAllEvents = 0xFFFFFFFF
};

typedef NSInteger UIControlContentVerticalAlignment; enum {
    UIControlContentVerticalAlignmentCenter = 0,
    UIControlContentVerticalAlignmentTop = 1,
    UIControlContentVerticalAlignmentBottom = 2,
    UIControlContentVerticalAlignmentFill = 3,
};

typedef NSInteger UIControlContentHorizontalAlignment; enum {
    UIControlContentHorizontalAlignmentCenter = 0,
    UIControlContentHorizontalAlignmentLeft = 1,
    UIControlContentHorizontalAlignmentRight = 2,
    UIControlContentHorizontalAlignmentFill = 3,
    UIControlContentHorizontalAlignmentLeading __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) = 4,
    UIControlContentHorizontalAlignmentTrailing __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) = 5,
};

typedef NSUInteger UIControlState; enum {
    UIControlStateNormal = 0,
    UIControlStateHighlighted = 1 << 0,
    UIControlStateDisabled = 1 << 1,
    UIControlStateSelected = 1 << 2,
    UIControlStateFocused __attribute__((availability(ios,introduced=9_0))) = 1 << 3,
    UIControlStateApplication = 0x00FF0000,
    UIControlStateReserved = 0xFF000000
};

// @class UITouch;
#ifndef _REWRITER_typedef_UITouch
#define _REWRITER_typedef_UITouch
typedef struct objc_object UITouch;
typedef struct {} _objc_exc_UITouch;
#endif

// @class UIEvent;
#ifndef _REWRITER_typedef_UIEvent
#define _REWRITER_typedef_UIEvent
typedef struct objc_object UIEvent;
typedef struct {} _objc_exc_UIEvent;
#endif




__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) 
#ifndef _REWRITER_typedef_UIControl
#define _REWRITER_typedef_UIControl
typedef struct objc_object UIControl;
typedef struct {} _objc_exc_UIControl;
#endif

struct UIControl_IMPL {
	struct UIView_IMPL UIView_IVARS;
};



// @property(nonatomic,getter=isEnabled) BOOL enabled;
// @property(nonatomic,getter=isSelected) BOOL selected;
// @property(nonatomic,getter=isHighlighted) BOOL highlighted;
// @property(nonatomic) UIControlContentVerticalAlignment contentVerticalAlignment;
// @property(nonatomic) UIControlContentHorizontalAlignment contentHorizontalAlignment;
// @property(nonatomic, readonly) UIControlContentHorizontalAlignment effectiveContentHorizontalAlignment;

// @property(nonatomic,readonly) UIControlState state;
// @property(nonatomic,readonly,getter=isTracking) BOOL tracking;
// @property(nonatomic,readonly,getter=isTouchInside) BOOL touchInside;

// - (BOOL)beginTrackingWithTouch:(UITouch *)touch withEvent:(nullable UIEvent *)event;
// - (BOOL)continueTrackingWithTouch:(UITouch *)touch withEvent:(nullable UIEvent *)event;
// - (void)endTrackingWithTouch:(nullable UITouch *)touch withEvent:(nullable UIEvent *)event;
// - (void)cancelTrackingWithEvent:(nullable UIEvent *)event;




// - (void)addTarget:(nullable id)target action:(SEL)action forControlEvents:(UIControlEvents)controlEvents;


// - (void)removeTarget:(nullable id)target action:(nullable SEL)action forControlEvents:(UIControlEvents)controlEvents;



// @property(nonatomic,readonly) NSSet *allTargets;
// @property(nonatomic,readonly) UIControlEvents allControlEvents;





// - (nullable NSArray<NSString *> *)actionsForTarget:(nullable id)target forControlEvent:(UIControlEvents)controlEvent;


// - (void)sendAction:(SEL)action to:(nullable id)target forEvent:(nullable UIEvent *)event;
// - (void)sendActionsForControlEvents:(UIControlEvents)controlEvents;

/* @end */

#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIRefreshControl
#define _REWRITER_typedef_UIRefreshControl
typedef struct objc_object UIRefreshControl;
typedef struct {} _objc_exc_UIRefreshControl;
#endif

struct UIRefreshControl_IMPL {
	struct UIControl_IMPL UIControl_IVARS;
};








// - (instancetype)init;

// @property (nonatomic, readonly, getter=isRefreshing) BOOL refreshing;

// @property (null_resettable, nonatomic, strong) UIColor *tintColor;
// @property (nullable, nonatomic, strong) NSAttributedString *attributedTitle __attribute__((annotate("ui_appearance_selector")));


// - (void)beginRefreshing __attribute__((availability(ios,introduced=6_0)));

// - (void)endRefreshing __attribute__((availability(ios,introduced=6_0)));

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

typedef NSInteger UIScrollViewIndicatorStyle; enum {
    UIScrollViewIndicatorStyleDefault,
    UIScrollViewIndicatorStyleBlack,
    UIScrollViewIndicatorStyleWhite
};

typedef NSInteger UIScrollViewKeyboardDismissMode; enum {
    UIScrollViewKeyboardDismissModeNone,
    UIScrollViewKeyboardDismissModeOnDrag,
    UIScrollViewKeyboardDismissModeInteractive,
} __attribute__((availability(ios,introduced=7_0)));

typedef NSInteger UIScrollViewIndexDisplayMode; enum {
    UIScrollViewIndexDisplayModeAutomatic,
    UIScrollViewIndexDisplayModeAlwaysHidden,
} __attribute__((availability(tvos,introduced=10.2)));

typedef NSInteger UIScrollViewContentInsetAdjustmentBehavior; enum {
    UIScrollViewContentInsetAdjustmentAutomatic,
    UIScrollViewContentInsetAdjustmentScrollableAxes,
    UIScrollViewContentInsetAdjustmentNever,
    UIScrollViewContentInsetAdjustmentAlways,
} __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));

extern "C" __attribute__((visibility ("default"))) const CGFloat UIScrollViewDecelerationRateNormal __attribute__((availability(ios,introduced=3_0)));
extern "C" __attribute__((visibility ("default"))) const CGFloat UIScrollViewDecelerationRateFast __attribute__((availability(ios,introduced=3_0)));

// @class UIEvent;
#ifndef _REWRITER_typedef_UIEvent
#define _REWRITER_typedef_UIEvent
typedef struct objc_object UIEvent;
typedef struct {} _objc_exc_UIEvent;
#endif

#ifndef _REWRITER_typedef_UIImageView
#define _REWRITER_typedef_UIImageView
typedef struct objc_object UIImageView;
typedef struct {} _objc_exc_UIImageView;
#endif

#ifndef _REWRITER_typedef_UIPanGestureRecognizer
#define _REWRITER_typedef_UIPanGestureRecognizer
typedef struct objc_object UIPanGestureRecognizer;
typedef struct {} _objc_exc_UIPanGestureRecognizer;
#endif

#ifndef _REWRITER_typedef_UIPinchGestureRecognizer
#define _REWRITER_typedef_UIPinchGestureRecognizer
typedef struct objc_object UIPinchGestureRecognizer;
typedef struct {} _objc_exc_UIPinchGestureRecognizer;
#endif

// @protocol UIScrollViewDelegate;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) 
#ifndef _REWRITER_typedef_UIScrollView
#define _REWRITER_typedef_UIScrollView
typedef struct objc_object UIScrollView;
typedef struct {} _objc_exc_UIScrollView;
#endif

struct UIScrollView_IMPL {
	struct UIView_IMPL UIView_IVARS;
};


// @property(nonatomic) CGPoint contentOffset;
// @property(nonatomic) CGSize contentSize;
// @property(nonatomic) UIEdgeInsets contentInset;




// @property(nonatomic, readonly) UIEdgeInsets adjustedContentInset __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));



// - (void)adjustedContentInsetDidChange __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((objc_requires_super));




// @property(nonatomic) UIScrollViewContentInsetAdjustmentBehavior contentInsetAdjustmentBehavior __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));




// @property(nonatomic,readonly,strong) UILayoutGuide *contentLayoutGuide __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));




// @property(nonatomic,readonly,strong) UILayoutGuide *frameLayoutGuide __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));

// @property(nullable,nonatomic,weak) id<UIScrollViewDelegate> delegate;
// @property(nonatomic,getter=isDirectionalLockEnabled) BOOL directionalLockEnabled;
// @property(nonatomic) BOOL bounces;
// @property(nonatomic) BOOL alwaysBounceVertical;
// @property(nonatomic) BOOL alwaysBounceHorizontal;
// @property(nonatomic,getter=isPagingEnabled) BOOL pagingEnabled __attribute__((availability(tvos,unavailable)));
// @property(nonatomic,getter=isScrollEnabled) BOOL scrollEnabled;
// @property(nonatomic) BOOL showsHorizontalScrollIndicator;
// @property(nonatomic) BOOL showsVerticalScrollIndicator;
// @property(nonatomic) UIEdgeInsets scrollIndicatorInsets;
// @property(nonatomic) UIScrollViewIndicatorStyle indicatorStyle;
// @property(nonatomic) CGFloat decelerationRate __attribute__((availability(ios,introduced=3_0)));
// @property(nonatomic) UIScrollViewIndexDisplayMode indexDisplayMode __attribute__((availability(tvos,introduced=10.2)));

// - (void)setContentOffset:(CGPoint)contentOffset animated:(BOOL)animated;
// - (void)scrollRectToVisible:(CGRect)rect animated:(BOOL)animated;

// - (void)flashScrollIndicators;
// @property(nonatomic,readonly,getter=isTracking) BOOL tracking;
// @property(nonatomic,readonly,getter=isDragging) BOOL dragging;
// @property(nonatomic,readonly,getter=isDecelerating) BOOL decelerating;

// @property(nonatomic) BOOL delaysContentTouches;
// @property(nonatomic) BOOL canCancelContentTouches;





// - (BOOL)touchesShouldBegin:(NSSet<UITouch *> *)touches withEvent:(nullable UIEvent *)event inContentView:(UIView *)view;



// - (BOOL)touchesShouldCancelInContentView:(UIView *)view;
// @property(nonatomic) CGFloat minimumZoomScale;
// @property(nonatomic) CGFloat maximumZoomScale;

// @property(nonatomic) CGFloat zoomScale __attribute__((availability(ios,introduced=3_0)));
// - (void)setZoomScale:(CGFloat)scale animated:(BOOL)animated __attribute__((availability(ios,introduced=3_0)));
// - (void)zoomToRect:(CGRect)rect animated:(BOOL)animated __attribute__((availability(ios,introduced=3_0)));

// @property(nonatomic) BOOL bouncesZoom;

// @property(nonatomic,readonly,getter=isZooming) BOOL zooming;
// @property(nonatomic,readonly,getter=isZoomBouncing) BOOL zoomBouncing;



// @property(nonatomic) BOOL scrollsToTop __attribute__((availability(tvos,unavailable)));





// @property(nonatomic, readonly) UIPanGestureRecognizer *panGestureRecognizer __attribute__((availability(ios,introduced=5_0)));

// @property(nullable, nonatomic, readonly) UIPinchGestureRecognizer *pinchGestureRecognizer __attribute__((availability(ios,introduced=5_0)));

// @property(nonatomic, readonly) UIGestureRecognizer *directionalPressGestureRecognizer __attribute__((availability(tvos,introduced=9.0,deprecated=11.0,message="Configuring the panGestureRecognizer for indirect scrolling automatically supports directional presses now, so this property is no longer useful.")));

// @property(nonatomic) UIScrollViewKeyboardDismissMode keyboardDismissMode __attribute__((availability(ios,introduced=7_0)));

// @property (nonatomic, strong, nullable) UIRefreshControl *refreshControl __attribute__((availability(ios,introduced=10_0))) __attribute__((availability(tvos,unavailable)));

/* @end */


// @protocol UIScrollViewDelegate<NSObject>

/* @optional */

// - (void)scrollViewDidScroll:(UIScrollView *)scrollView;
// - (void)scrollViewDidZoom:(UIScrollView *)scrollView __attribute__((availability(ios,introduced=3_2)));


// - (void)scrollViewWillBeginDragging:(UIScrollView *)scrollView;

// - (void)scrollViewWillEndDragging:(UIScrollView *)scrollView withVelocity:(CGPoint)velocity targetContentOffset:(inout CGPoint *)targetContentOffset __attribute__((availability(ios,introduced=5_0)));

// - (void)scrollViewDidEndDragging:(UIScrollView *)scrollView willDecelerate:(BOOL)decelerate;

// - (void)scrollViewWillBeginDecelerating:(UIScrollView *)scrollView;
// - (void)scrollViewDidEndDecelerating:(UIScrollView *)scrollView;

// - (void)scrollViewDidEndScrollingAnimation:(UIScrollView *)scrollView;

// - (nullable UIView *)viewForZoomingInScrollView:(UIScrollView *)scrollView;
// - (void)scrollViewWillBeginZooming:(UIScrollView *)scrollView withView:(nullable UIView *)view __attribute__((availability(ios,introduced=3_2)));
// - (void)scrollViewDidEndZooming:(UIScrollView *)scrollView withView:(nullable UIView *)view atScale:(CGFloat)scale;

// - (BOOL)scrollViewShouldScrollToTop:(UIScrollView *)scrollView;
// - (void)scrollViewDidScrollToTop:(UIScrollView *)scrollView;



// - (void)scrollViewDidChangeAdjustedContentInset:(UIScrollView *)scrollView __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin







__attribute__((availability(tvos,unavailable)))
// @protocol UIPickerViewAccessibilityDelegate <UIPickerViewDelegate>

/* @optional */
// - (nullable NSString *)pickerView:(UIPickerView *)pickerView accessibilityLabelForComponent:(NSInteger)component;
// - (nullable NSString *)pickerView:(UIPickerView *)pickerView accessibilityHintForComponent:(NSInteger)component;


// - (nullable NSAttributedString *)pickerView:(UIPickerView *)pickerView accessibilityAttributedLabelForComponent:(NSInteger)component __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));
// - (nullable NSAttributedString *)pickerView:(UIPickerView *)pickerView accessibilityAttributedHintForComponent:(NSInteger)component __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));

/* @end */








// @protocol UIScrollViewAccessibilityDelegate <UIScrollViewDelegate>

/* @optional */
// - (nullable NSString *)accessibilityScrollStatusForScrollView:(UIScrollView *)scrollView;


// - (nullable NSAttributedString *)accessibilityAttributedScrollStatusForScrollView:(UIScrollView *)scrollView __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));

/* @end */

// @interface UIView (UIAccessibilityInvertColors)
// @property(nonatomic) BOOL accessibilityIgnoresInvertColors __attribute__((availability(ios,introduced=11_0))) __attribute__((availability(tvos,introduced=11_0)));
/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin
typedef uint64_t UIAccessibilityTraits;


extern "C" __attribute__((visibility ("default"))) UIAccessibilityTraits UIAccessibilityTraitNone;


extern "C" __attribute__((visibility ("default"))) UIAccessibilityTraits UIAccessibilityTraitButton;


extern "C" __attribute__((visibility ("default"))) UIAccessibilityTraits UIAccessibilityTraitLink;


extern "C" __attribute__((visibility ("default"))) UIAccessibilityTraits UIAccessibilityTraitHeader __attribute__((availability(ios,introduced=6_0)));


extern "C" __attribute__((visibility ("default"))) UIAccessibilityTraits UIAccessibilityTraitSearchField;


extern "C" __attribute__((visibility ("default"))) UIAccessibilityTraits UIAccessibilityTraitImage;





extern "C" __attribute__((visibility ("default"))) UIAccessibilityTraits UIAccessibilityTraitSelected;


extern "C" __attribute__((visibility ("default"))) UIAccessibilityTraits UIAccessibilityTraitPlaysSound;


extern "C" __attribute__((visibility ("default"))) UIAccessibilityTraits UIAccessibilityTraitKeyboardKey;


extern "C" __attribute__((visibility ("default"))) UIAccessibilityTraits UIAccessibilityTraitStaticText;







extern "C" __attribute__((visibility ("default"))) UIAccessibilityTraits UIAccessibilityTraitSummaryElement;


extern "C" __attribute__((visibility ("default"))) UIAccessibilityTraits UIAccessibilityTraitNotEnabled;





extern "C" __attribute__((visibility ("default"))) UIAccessibilityTraits UIAccessibilityTraitUpdatesFrequently;





extern "C" __attribute__((visibility ("default"))) UIAccessibilityTraits UIAccessibilityTraitStartsMediaSession __attribute__((availability(ios,introduced=4_0)));





extern "C" __attribute__((visibility ("default"))) UIAccessibilityTraits UIAccessibilityTraitAdjustable __attribute__((availability(ios,introduced=4_0)));


extern "C" __attribute__((visibility ("default"))) UIAccessibilityTraits UIAccessibilityTraitAllowsDirectInteraction __attribute__((availability(ios,introduced=5_0)));






extern "C" __attribute__((visibility ("default"))) UIAccessibilityTraits UIAccessibilityTraitCausesPageTurn __attribute__((availability(ios,introduced=5_0)));





extern "C" __attribute__((visibility ("default"))) UIAccessibilityTraits UIAccessibilityTraitTabBar __attribute__((availability(ios,introduced=10_0)));
typedef uint32_t UIAccessibilityNotifications;





extern "C" __attribute__((visibility ("default"))) UIAccessibilityNotifications UIAccessibilityScreenChangedNotification;






extern "C" __attribute__((visibility ("default"))) UIAccessibilityNotifications UIAccessibilityLayoutChangedNotification;






extern "C" __attribute__((visibility ("default"))) UIAccessibilityNotifications UIAccessibilityAnnouncementNotification __attribute__((availability(ios,introduced=4_0)));





extern "C" __attribute__((visibility ("default"))) NSString *const UIAccessibilityAnnouncementDidFinishNotification __attribute__((availability(ios,introduced=6_0)));


extern "C" __attribute__((visibility ("default"))) NSString *const UIAccessibilityAnnouncementKeyStringValue __attribute__((availability(ios,introduced=6_0)));


extern "C" __attribute__((visibility ("default"))) NSString *const UIAccessibilityAnnouncementKeyWasSuccessful __attribute__((availability(ios,introduced=6_0)));




extern "C" __attribute__((visibility ("default"))) NSString *const UIAccessibilityElementFocusedNotification __attribute__((availability(ios,introduced=9_0)));


extern "C" __attribute__((visibility ("default"))) NSString *const UIAccessibilityFocusedElementKey __attribute__((availability(ios,introduced=9_0)));


extern "C" __attribute__((visibility ("default"))) NSString *const UIAccessibilityUnfocusedElementKey __attribute__((availability(ios,introduced=9_0)));


extern "C" __attribute__((visibility ("default"))) NSString *const UIAccessibilityAssistiveTechnologyKey __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility ("default"))) UIAccessibilityNotifications UIAccessibilityPageScrolledNotification __attribute__((availability(ios,introduced=4_2)));
extern "C" __attribute__((visibility ("default"))) UIAccessibilityNotifications UIAccessibilityPauseAssistiveTechnologyNotification __attribute__((availability(ios,introduced=8_0)));
extern "C" __attribute__((visibility ("default"))) UIAccessibilityNotifications UIAccessibilityResumeAssistiveTechnologyNotification __attribute__((availability(ios,introduced=8_0)));





extern "C" __attribute__((visibility ("default"))) NSString *const UIAccessibilityNotificationSwitchControlIdentifier __attribute__((availability(ios,introduced=8_0)));


extern "C" __attribute__((visibility ("default"))) NSString *const UIAccessibilityNotificationVoiceOverIdentifier __attribute__((availability(ios,introduced=9_0)));





typedef NSInteger UIAccessibilityNavigationStyle; enum {




    UIAccessibilityNavigationStyleAutomatic = 0,




    UIAccessibilityNavigationStyleSeparate = 1,





    UIAccessibilityNavigationStyleCombined = 2,
} __attribute__((availability(ios,introduced=8_0)));


typedef NSInteger UIAccessibilityContainerType; enum {
    UIAccessibilityContainerTypeNone = 0,
    UIAccessibilityContainerTypeDataTable,
    UIAccessibilityContainerTypeList,
    UIAccessibilityContainerTypeLandmark,
} __attribute__((availability(ios,introduced=11_0)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIAccessibilitySpeechAttributePunctuation __attribute__((availability(ios,introduced=7_0)));


extern "C" __attribute__((visibility ("default"))) NSString *const UIAccessibilitySpeechAttributeLanguage __attribute__((availability(ios,introduced=7_0)));




extern "C" __attribute__((visibility ("default"))) NSString *const UIAccessibilitySpeechAttributePitch __attribute__((availability(ios,introduced=7_0)));




extern "C" __attribute__((visibility ("default"))) NSString *const UIAccessibilitySpeechAttributeQueueAnnouncement __attribute__((availability(ios,introduced=11_0)));



extern "C" __attribute__((visibility ("default"))) NSString *const UIAccessibilitySpeechAttributeIPANotation __attribute__((availability(ios,introduced=11_0)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIAccessibilityTextAttributeHeadingLevel __attribute__((availability(ios,introduced=11_0)));



extern "C" __attribute__((visibility ("default"))) NSString *const UIAccessibilityTextAttributeCustom __attribute__((availability(ios,introduced=11_0)));
#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin
// @interface NSObject (UIAccessibilityContainer)




// - (NSInteger)accessibilityElementCount;





// - (nullable id)accessibilityElementAtIndex:(NSInteger)index;





// - (NSInteger)indexOfAccessibilityElement:(id)element;




// @property (nullable, nonatomic, strong) NSArray *accessibilityElements __attribute__((availability(ios,introduced=8_0)));




// @property (nonatomic) UIAccessibilityContainerType accessibilityContainerType __attribute__((availability(ios,introduced=11_0)));

/* @end */







__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=11_0))) // @protocol UIAccessibilityContainerDataTableCell <NSObject>
/* @required */



// - (NSRange)accessibilityRowRange;
// - (NSRange)accessibilityColumnRange;

/* @end */


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=11_0))) // @protocol UIAccessibilityContainerDataTable <NSObject>
/* @required */



// - (nullable id<UIAccessibilityContainerDataTableCell>)accessibilityDataTableCellElementForRow:(NSUInteger)row column:(NSUInteger)column;

// - (NSUInteger)accessibilityRowCount;
// - (NSUInteger)accessibilityColumnCount;

/* @optional */


// - (nullable NSArray<id<UIAccessibilityContainerDataTableCell>> *)accessibilityHeaderElementsForRow:(NSUInteger)row;
// - (nullable NSArray<id<UIAccessibilityContainerDataTableCell>> *)accessibilityHeaderElementsForColumn:(NSUInteger)column;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) 
#ifndef _REWRITER_typedef_UIAccessibilityCustomAction
#define _REWRITER_typedef_UIAccessibilityCustomAction
typedef struct objc_object UIAccessibilityCustomAction;
typedef struct {} _objc_exc_UIAccessibilityCustomAction;
#endif

struct UIAccessibilityCustomAction_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)initWithName:(NSString *)name target:(nullable id)target selector:(SEL)selector;
// - (instancetype)initWithAttributedName:(NSAttributedString *)attributedName target:(nullable id)target selector:(SEL)selector __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));




// @property (nonatomic, copy) NSString *name;





// @property (nonatomic, copy) NSAttributedString *attributedName __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));




// @property (nullable, nonatomic, weak) id target;







// @property (nonatomic, assign) SEL selector;

/* @end */

#pragma clang assume_nonnull end








typedef NSInteger UITextAutocapitalizationType; enum {
    UITextAutocapitalizationTypeNone,
    UITextAutocapitalizationTypeWords,
    UITextAutocapitalizationTypeSentences,
    UITextAutocapitalizationTypeAllCharacters,
};
typedef NSInteger UITextAutocorrectionType; enum {
    UITextAutocorrectionTypeDefault,
    UITextAutocorrectionTypeNo,
    UITextAutocorrectionTypeYes,
};






typedef NSInteger UITextSpellCheckingType; enum {
    UITextSpellCheckingTypeDefault,
    UITextSpellCheckingTypeNo,
    UITextSpellCheckingTypeYes,
} __attribute__((availability(ios,introduced=5_0)));





typedef NSInteger UITextSmartQuotesType; enum {
    UITextSmartQuotesTypeDefault,
    UITextSmartQuotesTypeNo,
    UITextSmartQuotesTypeYes,
} __attribute__((availability(ios,introduced=11_0)));





typedef NSInteger UITextSmartDashesType; enum {
    UITextSmartDashesTypeDefault,
    UITextSmartDashesTypeNo,
    UITextSmartDashesTypeYes,
} __attribute__((availability(ios,introduced=11_0)));





typedef NSInteger UITextSmartInsertDeleteType; enum {
    UITextSmartInsertDeleteTypeDefault,
    UITextSmartInsertDeleteTypeNo,
    UITextSmartInsertDeleteTypeYes,
} __attribute__((availability(ios,introduced=11_0)));
typedef NSInteger UIKeyboardType; enum {
    UIKeyboardTypeDefault,
    UIKeyboardTypeASCIICapable,
    UIKeyboardTypeNumbersAndPunctuation,
    UIKeyboardTypeURL,
    UIKeyboardTypeNumberPad,
    UIKeyboardTypePhonePad,
    UIKeyboardTypeNamePhonePad,
    UIKeyboardTypeEmailAddress,
    UIKeyboardTypeDecimalPad __attribute__((availability(ios,introduced=4_1))),
    UIKeyboardTypeTwitter __attribute__((availability(ios,introduced=5_0))),
    UIKeyboardTypeWebSearch __attribute__((availability(ios,introduced=7_0))),
    UIKeyboardTypeASCIICapableNumberPad __attribute__((availability(ios,introduced=10_0))),

    UIKeyboardTypeAlphabet = UIKeyboardTypeASCIICapable,

};
typedef NSInteger UIKeyboardAppearance; enum {
    UIKeyboardAppearanceDefault,
    UIKeyboardAppearanceDark __attribute__((availability(ios,introduced=7_0))),
    UIKeyboardAppearanceLight __attribute__((availability(ios,introduced=7_0))),
    UIKeyboardAppearanceAlert = UIKeyboardAppearanceDark,
};
typedef NSInteger UIReturnKeyType; enum {
    UIReturnKeyDefault,
    UIReturnKeyGo,
    UIReturnKeyGoogle,
    UIReturnKeyJoin,
    UIReturnKeyNext,
    UIReturnKeyRoute,
    UIReturnKeySearch,
    UIReturnKeySend,
    UIReturnKeyYahoo,
    UIReturnKeyDone,
    UIReturnKeyEmergencyCall,
    UIReturnKeyContinue __attribute__((availability(ios,introduced=9_0))),
};




typedef NSString * UITextContentType;
// @protocol UITextInputTraits <NSObject>

/* @optional */

// @property(nonatomic) UITextAutocapitalizationType autocapitalizationType;
// @property(nonatomic) UITextAutocorrectionType autocorrectionType;
// @property(nonatomic) UITextSpellCheckingType spellCheckingType __attribute__((availability(ios,introduced=5_0)));
// @property(nonatomic) UITextSmartQuotesType smartQuotesType __attribute__((availability(ios,introduced=11_0)));
// @property(nonatomic) UITextSmartDashesType smartDashesType __attribute__((availability(ios,introduced=11_0)));
// @property(nonatomic) UITextSmartInsertDeleteType smartInsertDeleteType __attribute__((availability(ios,introduced=11_0)));
// @property(nonatomic) UIKeyboardType keyboardType;
// @property(nonatomic) UIKeyboardAppearance keyboardAppearance;
// @property(nonatomic) UIReturnKeyType returnKeyType;
// @property(nonatomic) BOOL enablesReturnKeyAutomatically;
// @property(nonatomic,getter=isSecureTextEntry) BOOL secureTextEntry;


// @property(nonatomic,copy) UITextContentType textContentType __attribute__((availability(ios,introduced=10_0)));

/* @end */



extern "C" __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeName __attribute__((availability(ios,introduced=10_0)));
extern "C" __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeNamePrefix __attribute__((availability(ios,introduced=10_0)));
extern "C" __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeGivenName __attribute__((availability(ios,introduced=10_0)));
extern "C" __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeMiddleName __attribute__((availability(ios,introduced=10_0)));
extern "C" __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeFamilyName __attribute__((availability(ios,introduced=10_0)));
extern "C" __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeNameSuffix __attribute__((availability(ios,introduced=10_0)));
extern "C" __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeNickname __attribute__((availability(ios,introduced=10_0)));
extern "C" __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeJobTitle __attribute__((availability(ios,introduced=10_0)));
extern "C" __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeOrganizationName __attribute__((availability(ios,introduced=10_0)));
extern "C" __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeLocation __attribute__((availability(ios,introduced=10_0)));
extern "C" __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeFullStreetAddress __attribute__((availability(ios,introduced=10_0)));
extern "C" __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeStreetAddressLine1 __attribute__((availability(ios,introduced=10_0)));
extern "C" __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeStreetAddressLine2 __attribute__((availability(ios,introduced=10_0)));
extern "C" __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeAddressCity __attribute__((availability(ios,introduced=10_0)));
extern "C" __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeAddressState __attribute__((availability(ios,introduced=10_0)));
extern "C" __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeAddressCityAndState __attribute__((availability(ios,introduced=10_0)));
extern "C" __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeSublocality __attribute__((availability(ios,introduced=10_0)));
extern "C" __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeCountryName __attribute__((availability(ios,introduced=10_0)));
extern "C" __attribute__((visibility ("default"))) UITextContentType const UITextContentTypePostalCode __attribute__((availability(ios,introduced=10_0)));
extern "C" __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeTelephoneNumber __attribute__((availability(ios,introduced=10_0)));
extern "C" __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeEmailAddress __attribute__((availability(ios,introduced=10_0)));
extern "C" __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeURL __attribute__((availability(ios,introduced=10_0)));
extern "C" __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeCreditCardNumber __attribute__((availability(ios,introduced=10_0)));
extern "C" __attribute__((visibility ("default"))) UITextContentType const UITextContentTypeUsername __attribute__((availability(ios,introduced=11_0)));
extern "C" __attribute__((visibility ("default"))) UITextContentType const UITextContentTypePassword __attribute__((availability(ios,introduced=11_0)));






#pragma clang assume_nonnull begin

// @protocol UIKeyInput <UITextInputTraits>


// @property(nonatomic, readonly) BOOL hasText;



// - (void)insertText:(NSString *)text;
// - (void)deleteBackward;

/* @end */






// @class NSTextAlternatives;
#ifndef _REWRITER_typedef_NSTextAlternatives
#define _REWRITER_typedef_NSTextAlternatives
typedef struct objc_object NSTextAlternatives;
typedef struct {} _objc_exc_NSTextAlternatives;
#endif

// @class UITextPosition;
#ifndef _REWRITER_typedef_UITextPosition
#define _REWRITER_typedef_UITextPosition
typedef struct objc_object UITextPosition;
typedef struct {} _objc_exc_UITextPosition;
#endif

// @class UITextRange;
#ifndef _REWRITER_typedef_UITextRange
#define _REWRITER_typedef_UITextRange
typedef struct objc_object UITextRange;
typedef struct {} _objc_exc_UITextRange;
#endif

// @class UITextSelectionRect;
#ifndef _REWRITER_typedef_UITextSelectionRect
#define _REWRITER_typedef_UITextSelectionRect
typedef struct objc_object UITextSelectionRect;
typedef struct {} _objc_exc_UITextSelectionRect;
#endif

// @class UIBarButtonItemGroup;
#ifndef _REWRITER_typedef_UIBarButtonItemGroup
#define _REWRITER_typedef_UIBarButtonItemGroup
typedef struct objc_object UIBarButtonItemGroup;
typedef struct {} _objc_exc_UIBarButtonItemGroup;
#endif


// @protocol UITextInputTokenizer;
// @protocol UITextInputDelegate;

typedef NSInteger UITextStorageDirection; enum {
    UITextStorageDirectionForward = 0,
    UITextStorageDirectionBackward
};

typedef NSInteger UITextLayoutDirection; enum {
    UITextLayoutDirectionRight = 2,
    UITextLayoutDirectionLeft,
    UITextLayoutDirectionUp,
    UITextLayoutDirectionDown
};

typedef NSInteger UITextDirection;

typedef NSInteger UITextWritingDirection; enum {
    UITextWritingDirectionNatural = -1,
    UITextWritingDirectionLeftToRight = 0,
    UITextWritingDirectionRightToLeft,
};

typedef NSInteger UITextGranularity; enum {
    UITextGranularityCharacter,
    UITextGranularityWord,
    UITextGranularitySentence,
    UITextGranularityParagraph,
    UITextGranularityLine,
    UITextGranularityDocument
};

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_1))) 
#ifndef _REWRITER_typedef_UIDictationPhrase
#define _REWRITER_typedef_UIDictationPhrase
typedef struct objc_object UIDictationPhrase;
typedef struct {} _objc_exc_UIDictationPhrase;
#endif

struct UIDictationPhrase_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	NSString *__strong _text;
	NSArray * _Nullable __strong _alternativeInterpretations;
};





// @property (nonatomic, readonly) NSString *text;
// @property (nullable, nonatomic, readonly) NSArray<NSString *> *alternativeInterpretations;

/* @end */


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) 
#ifndef _REWRITER_typedef_UITextInputAssistantItem
#define _REWRITER_typedef_UITextInputAssistantItem
typedef struct objc_object UITextInputAssistantItem;
typedef struct {} _objc_exc_UITextInputAssistantItem;
#endif

struct UITextInputAssistantItem_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



// @property (nonatomic, readwrite, assign) BOOL allowsHidingShortcuts;

// @property (nonatomic, readwrite, copy) NSArray<UIBarButtonItemGroup *> *leadingBarButtonGroups;

// @property (nonatomic, readwrite, copy) NSArray<UIBarButtonItemGroup *> *trailingBarButtonGroups;

/* @end */


// @protocol UITextInput <UIKeyInput>
/* @required */


// - (nullable NSString *)textInRange:(UITextRange *)range;
// - (void)replaceRange:(UITextRange *)range withText:(NSString *)text;




// @property (nullable, readwrite, copy) UITextRange *selectedTextRange;
// @property (nullable, nonatomic, readonly) UITextRange *markedTextRange;
// @property (nullable, nonatomic, copy) NSDictionary *markedTextStyle;
// - (void)setMarkedText:(nullable NSString *)markedText selectedRange:(NSRange)selectedRange;
// - (void)unmarkText;


// @property (nonatomic, readonly) UITextPosition *beginningOfDocument;
// @property (nonatomic, readonly) UITextPosition *endOfDocument;


// - (nullable UITextRange *)textRangeFromPosition:(UITextPosition *)fromPosition toPosition:(UITextPosition *)toPosition;
// - (nullable UITextPosition *)positionFromPosition:(UITextPosition *)position offset:(NSInteger)offset;
// - (nullable UITextPosition *)positionFromPosition:(UITextPosition *)position inDirection:(UITextLayoutDirection)direction offset:(NSInteger)offset;


// - (NSComparisonResult)comparePosition:(UITextPosition *)position toPosition:(UITextPosition *)other;
// - (NSInteger)offsetFromPosition:(UITextPosition *)from toPosition:(UITextPosition *)toPosition;


// @property (nullable, nonatomic, weak) id <UITextInputDelegate> inputDelegate;


// @property (nonatomic, readonly) id <UITextInputTokenizer> tokenizer;


// - (nullable UITextPosition *)positionWithinRange:(UITextRange *)range farthestInDirection:(UITextLayoutDirection)direction;
// - (nullable UITextRange *)characterRangeByExtendingPosition:(UITextPosition *)position inDirection:(UITextLayoutDirection)direction;


// - (UITextWritingDirection)baseWritingDirectionForPosition:(UITextPosition *)position inDirection:(UITextStorageDirection)direction;
// - (void)setBaseWritingDirection:(UITextWritingDirection)writingDirection forRange:(UITextRange *)range;


// - (CGRect)firstRectForRange:(UITextRange *)range;
// - (CGRect)caretRectForPosition:(UITextPosition *)position;
// - (NSArray *)selectionRectsForRange:(UITextRange *)range __attribute__((availability(ios,introduced=6_0)));


// - (nullable UITextPosition *)closestPositionToPoint:(CGPoint)point;
// - (nullable UITextPosition *)closestPositionToPoint:(CGPoint)point withinRange:(UITextRange *)range;
// - (nullable UITextRange *)characterRangeAtPoint:(CGPoint)point;

/* @optional */

// - (BOOL)shouldChangeTextInRange:(UITextRange *)range replacementText:(NSString *)text __attribute__((availability(ios,introduced=6_0)));



// - (nullable NSDictionary<NSString *,id> *)textStylingAtPosition:(UITextPosition *)position inDirection:(UITextStorageDirection)direction;


// - (nullable UITextPosition *)positionWithinRange:(UITextRange *)range atCharacterOffset:(NSInteger)offset;
// - (NSInteger)characterOffsetOfPosition:(UITextPosition *)position withinRange:(UITextRange *)range;



// @property (nonatomic, readonly) __kindof UIView *textInputView;




// @property (nonatomic) UITextStorageDirection selectionAffinity;





// - (void)insertDictationResult:(NSArray<UIDictationPhrase *> *)dictationResult;


// - (void)dictationRecordingDidEnd;
// - (void)dictationRecognitionFailed;






// @property(nonatomic, readonly) id insertDictationResultPlaceholder;



// - (CGRect)frameForDictationResultPlaceholder:(id)placeholder;

// - (void)removeDictationResultPlaceholder:(id)placeholder willInsertResult:(BOOL)willInsertResult;





// - (void)beginFloatingCursorAtPoint:(CGPoint)point __attribute__((availability(ios,introduced=9_0)));
// - (void)updateFloatingCursorAtPoint:(CGPoint)point __attribute__((availability(ios,introduced=9_0)));
// - (void)endFloatingCursor __attribute__((availability(ios,introduced=9_0)));

/* @end */





extern "C" __attribute__((visibility ("default"))) NSString *const UITextInputTextBackgroundColorKey __attribute__((availability(ios,introduced=3_2,deprecated=8_0,message="" "Use NSBackgroundColorAttributeName instead"))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSString *const UITextInputTextColorKey __attribute__((availability(ios,introduced=3_2,deprecated=8_0,message="" "Use NSForegroundColorAttributeName instead"))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSString *const UITextInputTextFontKey __attribute__((availability(ios,introduced=3_2,deprecated=8_0,message="" "Use NSFontAttributeName instead"))) __attribute__((availability(tvos,unavailable)));





__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_2))) 
#ifndef _REWRITER_typedef_UITextPosition
#define _REWRITER_typedef_UITextPosition
typedef struct objc_object UITextPosition;
typedef struct {} _objc_exc_UITextPosition;
#endif

struct UITextPosition_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


/* @end */


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_2))) 
#ifndef _REWRITER_typedef_UITextRange
#define _REWRITER_typedef_UITextRange
typedef struct objc_object UITextRange;
typedef struct {} _objc_exc_UITextRange;
#endif

struct UITextRange_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property (nonatomic, readonly, getter=isEmpty) BOOL empty;
// @property (nonatomic, readonly) UITextPosition *start;
// @property (nonatomic, readonly) UITextPosition *end;

/* @end */





__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0))) 
#ifndef _REWRITER_typedef_UITextSelectionRect
#define _REWRITER_typedef_UITextSelectionRect
typedef struct objc_object UITextSelectionRect;
typedef struct {} _objc_exc_UITextSelectionRect;
#endif

struct UITextSelectionRect_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property (nonatomic, readonly) CGRect rect;
// @property (nonatomic, readonly) UITextWritingDirection writingDirection;
// @property (nonatomic, readonly) BOOL containsStart;
// @property (nonatomic, readonly) BOOL containsEnd;
// @property (nonatomic, readonly) BOOL isVertical;

/* @end */



// @protocol UITextInputDelegate <NSObject>

// - (void)selectionWillChange:(nullable id <UITextInput>)textInput;
// - (void)selectionDidChange:(nullable id <UITextInput>)textInput;
// - (void)textWillChange:(nullable id <UITextInput>)textInput;
// - (void)textDidChange:(nullable id <UITextInput>)textInput;

/* @end */




// @protocol UITextInputTokenizer <NSObject>

/* @required */

// - (nullable UITextRange *)rangeEnclosingPosition:(UITextPosition *)position withGranularity:(UITextGranularity)granularity inDirection:(UITextDirection)direction;
// - (BOOL)isPosition:(UITextPosition *)position atBoundary:(UITextGranularity)granularity inDirection:(UITextDirection)direction;
// - (nullable UITextPosition *)positionFromPosition:(UITextPosition *)position toBoundary:(UITextGranularity)granularity inDirection:(UITextDirection)direction;
// - (BOOL)isPosition:(UITextPosition *)position withinTextUnit:(UITextGranularity)granularity inDirection:(UITextDirection)direction;

/* @end */





__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_2))) 
#ifndef _REWRITER_typedef_UITextInputStringTokenizer
#define _REWRITER_typedef_UITextInputStringTokenizer
typedef struct objc_object UITextInputStringTokenizer;
typedef struct {} _objc_exc_UITextInputStringTokenizer;
#endif

struct UITextInputStringTokenizer_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)initWithTextInput:(UIResponder <UITextInput> *)textInput;

/* @end */




__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_2))) 
#ifndef _REWRITER_typedef_UITextInputMode
#define _REWRITER_typedef_UITextInputMode
typedef struct objc_object UITextInputMode;
typedef struct {} _objc_exc_UITextInputMode;
#endif

struct UITextInputMode_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property (nullable, nonatomic, readonly, strong) NSString *primaryLanguage;


// + (nullable UITextInputMode *)currentInputMode __attribute__((availability(ios,introduced=4_2,deprecated=7_0,message="" ))) __attribute__((availability(tvos,unavailable)));

@property(class, nonatomic, readonly) NSArray<UITextInputMode *> *activeInputModes;




/* @end */


extern "C" __attribute__((visibility ("default"))) NSNotificationName const UITextInputCurrentInputModeDidChangeNotification __attribute__((availability(ios,introduced=4_2)));
#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIAccessibilityCustomRotor;
#ifndef _REWRITER_typedef_UIAccessibilityCustomRotor
#define _REWRITER_typedef_UIAccessibilityCustomRotor
typedef struct objc_object UIAccessibilityCustomRotor;
typedef struct {} _objc_exc_UIAccessibilityCustomRotor;
#endif

#ifndef _REWRITER_typedef_UIAccessibilityCustomRotorItemResult
#define _REWRITER_typedef_UIAccessibilityCustomRotorItemResult
typedef struct objc_object UIAccessibilityCustomRotorItemResult;
typedef struct {} _objc_exc_UIAccessibilityCustomRotorItemResult;
#endif

#ifndef _REWRITER_typedef_UIAccessibilityCustomRotorSearchPredicate
#define _REWRITER_typedef_UIAccessibilityCustomRotorSearchPredicate
typedef struct objc_object UIAccessibilityCustomRotorSearchPredicate;
typedef struct {} _objc_exc_UIAccessibilityCustomRotorSearchPredicate;
#endif


typedef NSInteger UIAccessibilityCustomRotorDirection; enum {
    UIAccessibilityCustomRotorDirectionPrevious __attribute__((availability(ios,introduced=10_0))),
    UIAccessibilityCustomRotorDirectionNext __attribute__((availability(ios,introduced=10_0))),
};





typedef NSInteger UIAccessibilityCustomSystemRotorType; enum {
    UIAccessibilityCustomSystemRotorTypeNone = 0,
    UIAccessibilityCustomSystemRotorTypeLink,
    UIAccessibilityCustomSystemRotorTypeVisitedLink,
    UIAccessibilityCustomSystemRotorTypeHeading,
    UIAccessibilityCustomSystemRotorTypeHeadingLevel1,
    UIAccessibilityCustomSystemRotorTypeHeadingLevel2,
    UIAccessibilityCustomSystemRotorTypeHeadingLevel3,
    UIAccessibilityCustomSystemRotorTypeHeadingLevel4,
    UIAccessibilityCustomSystemRotorTypeHeadingLevel5,
    UIAccessibilityCustomSystemRotorTypeHeadingLevel6,
    UIAccessibilityCustomSystemRotorTypeBoldText,
    UIAccessibilityCustomSystemRotorTypeItalicText,
    UIAccessibilityCustomSystemRotorTypeUnderlineText,
    UIAccessibilityCustomSystemRotorTypeMisspelledWord,
    UIAccessibilityCustomSystemRotorTypeImage,
    UIAccessibilityCustomSystemRotorTypeTextField,
    UIAccessibilityCustomSystemRotorTypeTable,
    UIAccessibilityCustomSystemRotorTypeList,
    UIAccessibilityCustomSystemRotorTypeLandmark,
} __attribute__((availability(ios,introduced=11_0)));

typedef UIAccessibilityCustomRotorItemResult *_Nullable(*UIAccessibilityCustomRotorSearch)(UIAccessibilityCustomRotorSearchPredicate *predicate);


// @interface NSObject (UIAccessibilityCustomRotor)
// @property (nonatomic, retain, nullable) NSArray<UIAccessibilityCustomRotor *> *accessibilityCustomRotors __attribute__((availability(ios,introduced=10_0)));
/* @end */




__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0))) 
#ifndef _REWRITER_typedef_UIAccessibilityCustomRotorSearchPredicate
#define _REWRITER_typedef_UIAccessibilityCustomRotorSearchPredicate
typedef struct objc_object UIAccessibilityCustomRotorSearchPredicate;
typedef struct {} _objc_exc_UIAccessibilityCustomRotorSearchPredicate;
#endif

struct UIAccessibilityCustomRotorSearchPredicate_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};

// @property (nonatomic, retain) UIAccessibilityCustomRotorItemResult *currentItem;
// @property (nonatomic) UIAccessibilityCustomRotorDirection searchDirection;
/* @end */


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0))) 
#ifndef _REWRITER_typedef_UIAccessibilityCustomRotor
#define _REWRITER_typedef_UIAccessibilityCustomRotor
typedef struct objc_object UIAccessibilityCustomRotor;
typedef struct {} _objc_exc_UIAccessibilityCustomRotor;
#endif

struct UIAccessibilityCustomRotor_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)initWithName:(NSString *)name itemSearchBlock:(UIAccessibilityCustomRotorSearch)itemSearchBlock;
// - (instancetype)initWithAttributedName:(NSAttributedString *)attributedName itemSearchBlock:(UIAccessibilityCustomRotorSearch)itemSearchBlock __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));
// - (instancetype)initWithSystemType:(UIAccessibilityCustomSystemRotorType)type itemSearchBlock:(UIAccessibilityCustomRotorSearch)itemSearchBlock __attribute__((availability(ios,introduced=11_0)));


// @property (nonatomic, copy) NSString *name;



// @property (nonatomic, copy) NSAttributedString *attributedName __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));



// @property (nonatomic, copy) UIAccessibilityCustomRotorSearch itemSearchBlock;



// @property (nonatomic, readonly) UIAccessibilityCustomSystemRotorType systemRotorType __attribute__((availability(ios,introduced=11_0)));

/* @end */



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0))) 
#ifndef _REWRITER_typedef_UIAccessibilityCustomRotorItemResult
#define _REWRITER_typedef_UIAccessibilityCustomRotorItemResult
typedef struct objc_object UIAccessibilityCustomRotorItemResult;
typedef struct {} _objc_exc_UIAccessibilityCustomRotorItemResult;
#endif

struct UIAccessibilityCustomRotorItemResult_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)initWithTargetElement:(id<NSObject>)targetElement targetRange:(nullable UITextRange *)targetRange;


// @property (nonatomic, weak) id<NSObject> targetElement;



// @property (nullable, nonatomic, retain) UITextRange *targetRange;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

typedef NSInteger UIPreferredPresentationStyle; enum {
    UIPreferredPresentationStyleUnspecified = 0,
    UIPreferredPresentationStyleInline,
    UIPreferredPresentationStyleAttachment,
};

// @interface NSItemProvider (UIKitAdditions)

// @property (nonatomic, copy, nullable) NSData *teamData __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));


// @property (nonatomic) CGSize preferredPresentationSize __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

// @property (nonatomic) UIPreferredPresentationStyle preferredPresentationStyle;

/* @end */


__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
// @protocol UIItemProviderPresentationSizeProviding <NSObject>





// @property (nonatomic, readonly) CGSize preferredPresentationSizeForItemProvider;

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin


// @class UITraitCollection;
#ifndef _REWRITER_typedef_UITraitCollection
#define _REWRITER_typedef_UITraitCollection
typedef struct objc_object UITraitCollection;
typedef struct {} _objc_exc_UITraitCollection;
#endif

#ifndef _REWRITER_typedef_UIImageAsset
#define _REWRITER_typedef_UIImageAsset
typedef struct objc_object UIImageAsset;
typedef struct {} _objc_exc_UIImageAsset;
#endif




// @class UIGraphicsImageRendererFormat;
#ifndef _REWRITER_typedef_UIGraphicsImageRendererFormat
#define _REWRITER_typedef_UIGraphicsImageRendererFormat
typedef struct objc_object UIGraphicsImageRendererFormat;
typedef struct {} _objc_exc_UIGraphicsImageRendererFormat;
#endif



typedef NSInteger UIImageOrientation; enum {
    UIImageOrientationUp,
    UIImageOrientationDown,
    UIImageOrientationLeft,
    UIImageOrientationRight,
    UIImageOrientationUpMirrored,
    UIImageOrientationDownMirrored,
    UIImageOrientationLeftMirrored,
    UIImageOrientationRightMirrored,
};






typedef NSInteger UIImageResizingMode; enum {
    UIImageResizingModeTile,
    UIImageResizingModeStretch,
};



typedef NSInteger UIImageRenderingMode; enum {
    UIImageRenderingModeAutomatic,

    UIImageRenderingModeAlwaysOriginal,
    UIImageRenderingModeAlwaysTemplate,
} __attribute__((availability(ios,introduced=7_0)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) 
#ifndef _REWRITER_typedef_UIImage
#define _REWRITER_typedef_UIImage
typedef struct objc_object UIImage;
typedef struct {} _objc_exc_UIImage;
#endif

struct UIImage_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// + (nullable UIImage *)imageNamed:(NSString *)name;

// + (nullable UIImage *)imageNamed:(NSString *)name inBundle:(nullable NSBundle *)bundle compatibleWithTraitCollection:(nullable UITraitCollection *)traitCollection __attribute__((availability(ios,introduced=8_0)));


// + (nullable UIImage *)imageWithContentsOfFile:(NSString *)path;
// + (nullable UIImage *)imageWithData:(NSData *)data;
// + (nullable UIImage *)imageWithData:(NSData *)data scale:(CGFloat)scale __attribute__((availability(ios,introduced=6_0)));
// + (UIImage *)imageWithCGImage:(CGImageRef)cgImage;
// + (UIImage *)imageWithCGImage:(CGImageRef)cgImage scale:(CGFloat)scale orientation:(UIImageOrientation)orientation __attribute__((availability(ios,introduced=4_0)));

// + (UIImage *)imageWithCIImage:(CIImage *)ciImage __attribute__((availability(ios,introduced=5_0)));
// + (UIImage *)imageWithCIImage:(CIImage *)ciImage scale:(CGFloat)scale orientation:(UIImageOrientation)orientation __attribute__((availability(ios,introduced=6_0)));


// - (nullable instancetype)initWithContentsOfFile:(NSString *)path;
// - (nullable instancetype)initWithData:(NSData *)data;
// - (nullable instancetype)initWithData:(NSData *)data scale:(CGFloat)scale __attribute__((availability(ios,introduced=6_0)));
// - (instancetype)initWithCGImage:(CGImageRef)cgImage;
// - (instancetype)initWithCGImage:(CGImageRef)cgImage scale:(CGFloat)scale orientation:(UIImageOrientation)orientation __attribute__((availability(ios,introduced=4_0)));

// - (instancetype)initWithCIImage:(CIImage *)ciImage __attribute__((availability(ios,introduced=5_0)));
// - (instancetype)initWithCIImage:(CIImage *)ciImage scale:(CGFloat)scale orientation:(UIImageOrientation)orientation __attribute__((availability(ios,introduced=6_0)));


// @property(nonatomic,readonly) CGSize size;
// @property(nullable, nonatomic,readonly) CGImageRef CGImage;
// - (nullable CGImageRef)CGImage __attribute__((objc_returns_inner_pointer)) __attribute__((cf_returns_not_retained));

// @property(nullable,nonatomic,readonly) CIImage *CIImage __attribute__((availability(ios,introduced=5_0)));

// @property(nonatomic,readonly) UIImageOrientation imageOrientation;
// @property(nonatomic,readonly) CGFloat scale __attribute__((availability(ios,introduced=4_0)));



// + (nullable UIImage *)animatedImageNamed:(NSString *)name duration:(NSTimeInterval)duration __attribute__((availability(ios,introduced=5_0)));
// + (nullable UIImage *)animatedResizableImageNamed:(NSString *)name capInsets:(UIEdgeInsets)capInsets duration:(NSTimeInterval)duration __attribute__((availability(ios,introduced=5_0)));
// + (nullable UIImage *)animatedResizableImageNamed:(NSString *)name capInsets:(UIEdgeInsets)capInsets resizingMode:(UIImageResizingMode)resizingMode duration:(NSTimeInterval)duration __attribute__((availability(ios,introduced=6_0)));
// + (nullable UIImage *)animatedImageWithImages:(NSArray<UIImage *> *)images duration:(NSTimeInterval)duration __attribute__((availability(ios,introduced=5_0)));

// @property(nullable, nonatomic,readonly) NSArray<UIImage *> *images __attribute__((availability(ios,introduced=5_0)));
// @property(nonatomic,readonly) NSTimeInterval duration __attribute__((availability(ios,introduced=5_0)));



// - (void)drawAtPoint:(CGPoint)point;
// - (void)drawAtPoint:(CGPoint)point blendMode:(CGBlendMode)blendMode alpha:(CGFloat)alpha;
// - (void)drawInRect:(CGRect)rect;
// - (void)drawInRect:(CGRect)rect blendMode:(CGBlendMode)blendMode alpha:(CGFloat)alpha;

// - (void)drawAsPatternInRect:(CGRect)rect;

// - (UIImage *)resizableImageWithCapInsets:(UIEdgeInsets)capInsets __attribute__((availability(ios,introduced=5_0)));
// - (UIImage *)resizableImageWithCapInsets:(UIEdgeInsets)capInsets resizingMode:(UIImageResizingMode)resizingMode __attribute__((availability(ios,introduced=6_0)));

// @property(nonatomic,readonly) UIEdgeInsets capInsets __attribute__((availability(ios,introduced=5_0)));
// @property(nonatomic,readonly) UIImageResizingMode resizingMode __attribute__((availability(ios,introduced=6_0)));






// - (UIImage *)imageWithAlignmentRectInsets:(UIEdgeInsets)alignmentInsets __attribute__((availability(ios,introduced=6_0)));
// @property(nonatomic,readonly) UIEdgeInsets alignmentRectInsets __attribute__((availability(ios,introduced=6_0)));


// - (UIImage *)imageWithRenderingMode:(UIImageRenderingMode)renderingMode __attribute__((availability(ios,introduced=7_0)));
// @property(nonatomic, readonly) UIImageRenderingMode renderingMode __attribute__((availability(ios,introduced=7_0)));



// @property (nonatomic, readonly) UIGraphicsImageRendererFormat *imageRendererFormat __attribute__((availability(ios,introduced=10_0)));



// @property (nonatomic, readonly, copy) UITraitCollection *traitCollection __attribute__((availability(ios,introduced=8_0)));
// @property (nullable, nonatomic, readonly) UIImageAsset *imageAsset __attribute__((availability(ios,introduced=8_0)));




// - (UIImage *)imageFlippedForRightToLeftLayoutDirection __attribute__((availability(ios,introduced=9_0)));
// @property (nonatomic, readonly) BOOL flipsForRightToLeftLayoutDirection __attribute__((availability(ios,introduced=9_0)));


// - (UIImage *)imageWithHorizontallyFlippedOrientation __attribute__((availability(ios,introduced=10_0)));

/* @end */



// @interface UIImage (NSItemProvider) <NSItemProviderReading, NSItemProviderWriting, UIItemProviderPresentationSizeProviding>




/* @end */



// @interface UIImage(UIImageDeprecated)



// - (UIImage *)stretchableImageWithLeftCapWidth:(NSInteger)leftCapWidth topCapHeight:(NSInteger)topCapHeight __attribute__((availability(tvos,unavailable)));
// @property(nonatomic,readonly) NSInteger leftCapWidth __attribute__((availability(tvos,unavailable)));
// @property(nonatomic,readonly) NSInteger topCapHeight __attribute__((availability(tvos,unavailable)));

/* @end */




// @interface CIImage(UIKitAdditions)

// - (nullable instancetype)initWithImage:(UIImage *)image __attribute__((availability(ios,introduced=5_0)));
// - (nullable instancetype)initWithImage:(UIImage *)image options:(nullable NSDictionary *)options __attribute__((availability(ios,introduced=5_0)));

/* @end */



extern "C" __attribute__((visibility ("default"))) NSData * _Nullable UIImagePNGRepresentation(UIImage * _Nonnull image);
extern "C" __attribute__((visibility ("default"))) NSData * _Nullable UIImageJPEGRepresentation(UIImage * _Nonnull image, CGFloat compressionQuality);
#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIImage;
#ifndef _REWRITER_typedef_UIImage
#define _REWRITER_typedef_UIImage
typedef struct objc_object UIImage;
typedef struct {} _objc_exc_UIImage;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) 
#ifndef _REWRITER_typedef_UIBarItem
#define _REWRITER_typedef_UIBarItem
typedef struct objc_object UIBarItem;
typedef struct {} _objc_exc_UIBarItem;
#endif

struct UIBarItem_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)init __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

// @property(nonatomic,getter=isEnabled) BOOL enabled;
// @property(nullable, nonatomic,copy) NSString *title;
// @property(nullable, nonatomic,strong) UIImage *image;
// @property(nullable, nonatomic,strong) UIImage *landscapeImagePhone __attribute__((availability(ios,introduced=5_0))) __attribute__((availability(tvos,unavailable)));


// @property(nullable, nonatomic,strong) UIImage *largeContentSizeImage __attribute__((availability(ios,introduced=11.0)));

// @property(nonatomic) UIEdgeInsets imageInsets;
// @property(nonatomic) UIEdgeInsets landscapeImagePhoneInsets __attribute__((availability(ios,introduced=5_0))) __attribute__((availability(tvos,unavailable)));
// @property(nonatomic) UIEdgeInsets largeContentSizeImageInsets __attribute__((availability(ios,introduced=11.0)));
// @property(nonatomic) NSInteger tag;



// - (void)setTitleTextAttributes:(nullable NSDictionary<NSAttributedStringKey,id> *)attributes forState:(UIControlState)state __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));
// - (nullable NSDictionary<NSString *,id> *)titleTextAttributesForState:(UIControlState)state __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

// @protocol UIAccessibilityIdentification <NSObject>
/* @required */





// @property(nullable, nonatomic, copy) NSString *accessibilityIdentifier __attribute__((availability(ios,introduced=5_0)));

/* @end */


// @interface UIView (UIAccessibility) <UIAccessibilityIdentification>
/* @end */


// @interface UIBarItem (UIAccessibility) <UIAccessibilityIdentification>
/* @end */






// @interface UIImage (UIAccessibility) <UIAccessibilityIdentification>
/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_0))) 
#ifndef _REWRITER_typedef_UIAccessibilityElement
#define _REWRITER_typedef_UIAccessibilityElement
typedef struct objc_object UIAccessibilityElement;
typedef struct {} _objc_exc_UIAccessibilityElement;
#endif

struct UIAccessibilityElement_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



// - (instancetype)initWithAccessibilityContainer:(id)container;

// @property (nullable, nonatomic, assign) id accessibilityContainer;
// @property (nonatomic, assign) BOOL isAccessibilityElement;
// @property (nullable, nonatomic, strong) NSString *accessibilityLabel;
// @property (nullable, nonatomic, strong) NSString *accessibilityHint;
// @property (nullable, nonatomic, strong) NSString *accessibilityValue;
// @property (nonatomic, assign) CGRect accessibilityFrame;
// @property (nonatomic, assign) UIAccessibilityTraits accessibilityTraits;



// @property (nonatomic, assign) CGRect accessibilityFrameInContainerSpace __attribute__((availability(ios,introduced=10_0)));

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin





typedef NSInteger UIAccessibilityZoomType; enum {
    UIAccessibilityZoomTypeInsertionPoint,
} __attribute__((availability(ios,introduced=5_0)));

extern "C" __attribute__((visibility ("default"))) void UIAccessibilityZoomFocusChanged(UIAccessibilityZoomType type, CGRect frame, UIView * _Nonnull view) __attribute__((availability(ios,introduced=5_0)));





extern "C" __attribute__((visibility ("default"))) void UIAccessibilityRegisterGestureConflictWithZoom(void) __attribute__((availability(ios,introduced=5_0)));
#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin
typedef NSInteger UIGuidedAccessRestrictionState; enum {
    UIGuidedAccessRestrictionStateAllow,
    UIGuidedAccessRestrictionStateDeny
};
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0))) // @protocol UIGuidedAccessRestrictionDelegate <NSObject>

/* @required */







// @property(nonatomic, readonly, nullable) NSArray<NSString *> *guidedAccessRestrictionIdentifiers;





// - (void)guidedAccessRestrictionWithIdentifier:(NSString *)restrictionIdentifier didChangeState:(UIGuidedAccessRestrictionState)newRestrictionState;


// - (nullable NSString *)textForGuidedAccessRestrictionWithIdentifier:(NSString *)restrictionIdentifier;

/* @optional */


// - (nullable NSString *)detailTextForGuidedAccessRestrictionWithIdentifier:(NSString *)restrictionIdentifier;

/* @end */



extern "C" __attribute__((visibility ("default"))) UIGuidedAccessRestrictionState UIGuidedAccessRestrictionStateForIdentifier(NSString *restrictionIdentifier) __attribute__((availability(ios,introduced=7_0)));
#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin








extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIAccessibilityLocationDescriptor
#define _REWRITER_typedef_UIAccessibilityLocationDescriptor
typedef struct objc_object UIAccessibilityLocationDescriptor;
typedef struct {} _objc_exc_UIAccessibilityLocationDescriptor;
#endif

struct UIAccessibilityLocationDescriptor_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)init __attribute__((unavailable));
// + (instancetype)new __attribute__((unavailable));






// - (instancetype)initWithName:(NSString *)name view:(UIView *)view;




// - (instancetype)initWithName:(NSString *)name point:(CGPoint)point inView:(UIView *)view;
// - (instancetype)initWithAttributedName:(NSAttributedString *)attributedName point:(CGPoint)point inView:(UIView *)view __attribute__((objc_designated_initializer));







// @property (nonatomic, readonly, weak) UIView *view;



// @property (nonatomic, readonly) CGPoint point;




// @property (nonatomic, readonly, strong) NSString *name;




// @property (nonatomic, readonly, strong) NSAttributedString *attributedName;

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin
// @interface NSObject (UIAccessibility)







// @property (nonatomic) BOOL isAccessibilityElement;
// @property (nullable, nonatomic, copy) NSString *accessibilityLabel;





// @property (nullable, nonatomic, copy) NSAttributedString *accessibilityAttributedLabel __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));
// @property (nullable, nonatomic, copy) NSString *accessibilityHint;





// @property (nullable, nonatomic, copy) NSAttributedString *accessibilityAttributedHint __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));
// @property (nullable, nonatomic, copy) NSString *accessibilityValue;





// @property (nullable, nonatomic, copy) NSAttributedString *accessibilityAttributedValue __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));
// @property (nonatomic) UIAccessibilityTraits accessibilityTraits;







// @property (nonatomic) CGRect accessibilityFrame;




extern "C" __attribute__((visibility ("default"))) CGRect UIAccessibilityConvertFrameToScreenCoordinates(CGRect rect, UIView *view) __attribute__((availability(ios,introduced=7_0)));







// @property (nullable, nonatomic, copy) UIBezierPath *accessibilityPath __attribute__((availability(ios,introduced=7_0)));




extern "C" __attribute__((visibility ("default"))) UIBezierPath *UIAccessibilityConvertPathToScreenCoordinates(UIBezierPath *path, UIView *view) __attribute__((availability(ios,introduced=7_0)));





// @property (nonatomic) CGPoint accessibilityActivationPoint __attribute__((availability(ios,introduced=5_0)));
// @property (nullable, nonatomic, strong) NSString *accessibilityLanguage;





// @property (nonatomic) BOOL accessibilityElementsHidden __attribute__((availability(ios,introduced=5_0)));






// @property (nonatomic) BOOL accessibilityViewIsModal __attribute__((availability(ios,introduced=5_0)));
// @property (nonatomic) BOOL shouldGroupAccessibilityChildren __attribute__((availability(ios,introduced=6_0)));
// @property (nonatomic) UIAccessibilityNavigationStyle accessibilityNavigationStyle __attribute__((availability(ios,introduced=8_0)));







// @property(nullable, nonatomic, copy) NSArray *accessibilityHeaderElements __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,introduced=9_0)));

/* @end */

// @interface NSObject (UIAccessibilityFocus)


// - (void)accessibilityElementDidBecomeFocused __attribute__((availability(ios,introduced=4_0)));
// - (void)accessibilityElementDidLoseFocus __attribute__((availability(ios,introduced=4_0)));


// - (BOOL)accessibilityElementIsFocused __attribute__((availability(ios,introduced=4_0)));


// - (nullable NSSet<NSString *> *)accessibilityAssistiveTechnologyFocusedIdentifiers __attribute__((availability(ios,introduced=9_0)));





extern "C" __attribute__((visibility ("default"))) _Nullable id UIAccessibilityFocusedElement(NSString * _Nullable assistiveTechnologyIdentifier) __attribute__((availability(ios,introduced=9_0)));

/* @end */







// @interface NSObject (UIAccessibilityAction)
// - (BOOL)accessibilityActivate __attribute__((availability(ios,introduced=7_0)));







// - (void)accessibilityIncrement __attribute__((availability(ios,introduced=4_0)));
// - (void)accessibilityDecrement __attribute__((availability(ios,introduced=4_0)));
typedef NSInteger UIAccessibilityScrollDirection; enum {
    UIAccessibilityScrollDirectionRight = 1,
    UIAccessibilityScrollDirectionLeft,
    UIAccessibilityScrollDirectionUp,
    UIAccessibilityScrollDirectionDown,
    UIAccessibilityScrollDirectionNext __attribute__((availability(ios,introduced=5_0))),
    UIAccessibilityScrollDirectionPrevious __attribute__((availability(ios,introduced=5_0))),
};

// - (BOOL)accessibilityScroll:(UIAccessibilityScrollDirection)direction __attribute__((availability(ios,introduced=4_2)));
// - (BOOL)accessibilityPerformEscape __attribute__((availability(ios,introduced=5_0)));







// - (BOOL)accessibilityPerformMagicTap __attribute__((availability(ios,introduced=6_0)));







// @property (nullable, nonatomic, strong) NSArray <UIAccessibilityCustomAction *> *accessibilityCustomActions __attribute__((availability(ios,introduced=8_0)));
/* @end */








// @protocol UIAccessibilityReadingContent
/* @required */


// - (NSInteger)accessibilityLineNumberForPoint:(CGPoint)point __attribute__((availability(ios,introduced=5_0)));


// - (nullable NSString *)accessibilityContentForLineNumber:(NSInteger)lineNumber __attribute__((availability(ios,introduced=5_0)));


// - (CGRect)accessibilityFrameForLineNumber:(NSInteger)lineNumber __attribute__((availability(ios,introduced=5_0)));


// - (nullable NSString *)accessibilityPageContent __attribute__((availability(ios,introduced=5_0)));

/* @optional */

// - (nullable NSAttributedString *)accessibilityAttributedContentForLineNumber:(NSInteger)lineNumber __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));
// - (nullable NSAttributedString *)accessibilityAttributedPageContent __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));

/* @end */


// @interface NSObject(UIAccessibilityDragging)
// @property (nullable, nonatomic, copy) NSArray<UIAccessibilityLocationDescriptor *> *accessibilityDragSourceDescriptors __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

// @property (nullable, nonatomic, copy) NSArray<UIAccessibilityLocationDescriptor *> *accessibilityDropPointDescriptors __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));


/* @end */

extern "C" __attribute__((visibility ("default"))) void UIAccessibilityPostNotification(UIAccessibilityNotifications notification, _Nullable id argument);







extern "C" __attribute__((visibility ("default"))) BOOL UIAccessibilityIsVoiceOverRunning(void) __attribute__((availability(ios,introduced=4_0)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIAccessibilityVoiceOverStatusChanged __attribute__((availability(ios,introduced=4.0,deprecated=11.0,replacement="UIAccessibilityVoiceOverStatusDidChangeNotification"))) __attribute__((availability(tvos,introduced=9.0,deprecated=11.0,replacement="UIAccessibilityVoiceOverStatusDidChangeNotification")));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIAccessibilityVoiceOverStatusDidChangeNotification __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));


extern "C" __attribute__((visibility ("default"))) BOOL UIAccessibilityIsMonoAudioEnabled(void) __attribute__((availability(ios,introduced=5_0)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIAccessibilityMonoAudioStatusDidChangeNotification __attribute__((availability(ios,introduced=5_0)));


extern "C" __attribute__((visibility ("default"))) BOOL UIAccessibilityIsClosedCaptioningEnabled(void) __attribute__((availability(ios,introduced=5_0)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIAccessibilityClosedCaptioningStatusDidChangeNotification __attribute__((availability(ios,introduced=5_0)));


extern "C" __attribute__((visibility ("default"))) BOOL UIAccessibilityIsInvertColorsEnabled(void) __attribute__((availability(ios,introduced=6_0)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIAccessibilityInvertColorsStatusDidChangeNotification __attribute__((availability(ios,introduced=6_0)));


extern "C" __attribute__((visibility ("default"))) BOOL UIAccessibilityIsGuidedAccessEnabled(void) __attribute__((availability(ios,introduced=6_0)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIAccessibilityGuidedAccessStatusDidChangeNotification __attribute__((availability(ios,introduced=6_0)));


extern "C" __attribute__((visibility ("default"))) BOOL UIAccessibilityIsBoldTextEnabled(void) __attribute__((availability(ios,introduced=8_0)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIAccessibilityBoldTextStatusDidChangeNotification __attribute__((availability(ios,introduced=8_0)));


extern "C" __attribute__((visibility ("default"))) BOOL UIAccessibilityIsGrayscaleEnabled(void) __attribute__((availability(ios,introduced=8_0)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIAccessibilityGrayscaleStatusDidChangeNotification __attribute__((availability(ios,introduced=8_0)));


extern "C" __attribute__((visibility ("default"))) BOOL UIAccessibilityIsReduceTransparencyEnabled(void) __attribute__((availability(ios,introduced=8_0)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIAccessibilityReduceTransparencyStatusDidChangeNotification __attribute__((availability(ios,introduced=8_0)));


extern "C" __attribute__((visibility ("default"))) BOOL UIAccessibilityIsReduceMotionEnabled(void) __attribute__((availability(ios,introduced=8_0)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIAccessibilityReduceMotionStatusDidChangeNotification __attribute__((availability(ios,introduced=8_0)));


extern "C" __attribute__((visibility ("default"))) BOOL UIAccessibilityDarkerSystemColorsEnabled(void) __attribute__((availability(ios,introduced=8_0)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIAccessibilityDarkerSystemColorsStatusDidChangeNotification __attribute__((availability(ios,introduced=8_0)));





extern "C" __attribute__((visibility ("default"))) BOOL UIAccessibilityIsSwitchControlRunning(void) __attribute__((availability(ios,introduced=8_0)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIAccessibilitySwitchControlStatusDidChangeNotification __attribute__((availability(ios,introduced=8_0)));


extern "C" __attribute__((visibility ("default"))) BOOL UIAccessibilityIsSpeakSelectionEnabled(void) __attribute__((availability(ios,introduced=8_0)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIAccessibilitySpeakSelectionStatusDidChangeNotification __attribute__((availability(ios,introduced=8_0)));


extern "C" __attribute__((visibility ("default"))) BOOL UIAccessibilityIsSpeakScreenEnabled(void) __attribute__((availability(ios,introduced=8_0)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIAccessibilitySpeakScreenStatusDidChangeNotification __attribute__((availability(ios,introduced=8_0)));


extern "C" __attribute__((visibility ("default"))) BOOL UIAccessibilityIsShakeToUndoEnabled(void) __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIAccessibilityShakeToUndoDidChangeNotification __attribute__((availability(ios,introduced=9_0)));



extern "C" __attribute__((visibility ("default"))) BOOL UIAccessibilityIsAssistiveTouchRunning(void) __attribute__((availability(ios,introduced=10_0)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIAccessibilityAssistiveTouchStatusDidChangeNotification __attribute__((availability(ios,introduced=10_0)));







extern "C" __attribute__((visibility ("default"))) void UIAccessibilityRequestGuidedAccessSession(BOOL enable, void(^completionHandler)(BOOL didSucceed)) __attribute__((availability(ios,introduced=7_0)));

typedef NSUInteger UIAccessibilityHearingDeviceEar; enum {
    UIAccessibilityHearingDeviceEarNone = 0,
    UIAccessibilityHearingDeviceEarLeft = 1 << 1,
    UIAccessibilityHearingDeviceEarRight = 1 << 2,
    UIAccessibilityHearingDeviceEarBoth = UIAccessibilityHearingDeviceEarLeft | UIAccessibilityHearingDeviceEarRight,
} __attribute__((availability(ios,introduced=10_0))) __attribute__((availability(tvos,unavailable)));


extern "C" __attribute__((visibility ("default"))) UIAccessibilityHearingDeviceEar UIAccessibilityHearingDevicePairedEar(void) __attribute__((availability(ios,introduced=10_0))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIAccessibilityHearingDevicePairedEarDidChangeNotification __attribute__((availability(ios,introduced=10_0))) __attribute__((availability(tvos,unavailable)));
#pragma clang assume_nonnull end





#pragma clang assume_nonnull begin

// @class UIImage;
#ifndef _REWRITER_typedef_UIImage
#define _REWRITER_typedef_UIImage
typedef struct objc_object UIImage;
typedef struct {} _objc_exc_UIImage;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) 
#ifndef _REWRITER_typedef_UIImageView
#define _REWRITER_typedef_UIImageView
typedef struct objc_object UIImageView;
typedef struct {} _objc_exc_UIImageView;
#endif

struct UIImageView_IMPL {
	struct UIView_IMPL UIView_IVARS;
};


// - (instancetype)initWithImage:(nullable UIImage *)image;
// - (instancetype)initWithImage:(nullable UIImage *)image highlightedImage:(nullable UIImage *)highlightedImage __attribute__((availability(ios,introduced=3_0)));

// @property (nullable, nonatomic, strong) UIImage *image;
// @property (nullable, nonatomic, strong) UIImage *highlightedImage __attribute__((availability(ios,introduced=3_0)));
// @property (nonatomic, getter=isUserInteractionEnabled) BOOL userInteractionEnabled;

// @property (nonatomic, getter=isHighlighted) BOOL highlighted __attribute__((availability(ios,introduced=3_0)));



// @property (nullable, nonatomic, copy) NSArray<UIImage *> *animationImages;
// @property (nullable, nonatomic, copy) NSArray<UIImage *> *highlightedAnimationImages __attribute__((availability(ios,introduced=3_0)));

// @property (nonatomic) NSTimeInterval animationDuration;
// @property (nonatomic) NSInteger animationRepeatCount;



// @property (null_resettable, nonatomic, strong) UIColor *tintColor __attribute__((availability(ios,introduced=7_0)));

// - (void)startAnimating;
// - (void)stopAnimating;

// @property(nonatomic, readonly, getter=isAnimating) BOOL animating;





// @property (nonatomic) BOOL adjustsImageWhenAncestorFocused __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,introduced=9_0)));



// @property(readonly,strong) UILayoutGuide *focusedFrameGuide __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,introduced=9_0)));





// @property (nonatomic, strong, readonly) UIView *overlayContentView __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,introduced=11_0)));






// @property (nonatomic) BOOL masksFocusEffectToContents __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,introduced=11_0)));

/* @end */

#pragma clang assume_nonnull end
// @class UIFont;
#ifndef _REWRITER_typedef_UIFont
#define _REWRITER_typedef_UIFont
typedef struct objc_object UIFont;
typedef struct {} _objc_exc_UIFont;
#endif

// @class UIFontDescriptor;
#ifndef _REWRITER_typedef_UIFontDescriptor
#define _REWRITER_typedef_UIFontDescriptor
typedef struct objc_object UIFontDescriptor;
typedef struct {} _objc_exc_UIFontDescriptor;
#endif








// @class NSParagraphStyle;
#ifndef _REWRITER_typedef_NSParagraphStyle
#define _REWRITER_typedef_NSParagraphStyle
typedef struct objc_object NSParagraphStyle;
typedef struct {} _objc_exc_NSParagraphStyle;
#endif

// @class NSTextTab;
#ifndef _REWRITER_typedef_NSTextTab
#define _REWRITER_typedef_NSTextTab
typedef struct objc_object NSTextTab;
typedef struct {} _objc_exc_NSTextTab;
#endif





extern "C" {
#pragma clang assume_nonnull begin





typedef const struct __attribute__((objc_bridge_related(NSParagraphStyle,,))) __CTParagraphStyle * CTParagraphStyleRef;







CFTypeID CTParagraphStyleGetTypeID( void ) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.2))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
typedef uint8_t CTTextAlignment; enum {
    kCTTextAlignmentLeft = 0,
    kCTTextAlignmentRight = 1,
    kCTTextAlignmentCenter = 2,
    kCTTextAlignmentJustified = 3,
    kCTTextAlignmentNatural = 4,

    kCTLeftTextAlignment __attribute__((availability(macos,introduced=10.5,deprecated=10.11,message="Deprecated"))) __attribute__((availability(ios,introduced=3.2,deprecated=9.0,message="Deprecated"))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
        = kCTTextAlignmentLeft,
    kCTRightTextAlignment __attribute__((availability(macos,introduced=10.5,deprecated=10.11,message="Deprecated"))) __attribute__((availability(ios,introduced=3.2,deprecated=9.0,message="Deprecated"))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
    = kCTTextAlignmentRight,
    kCTCenterTextAlignment __attribute__((availability(macos,introduced=10.5,deprecated=10.11,message="Deprecated"))) __attribute__((availability(ios,introduced=3.2,deprecated=9.0,message="Deprecated"))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
        = kCTTextAlignmentCenter,
    kCTJustifiedTextAlignment __attribute__((availability(macos,introduced=10.5,deprecated=10.11,message="Deprecated"))) __attribute__((availability(ios,introduced=3.2,deprecated=9.0,message="Deprecated"))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
        = kCTTextAlignmentJustified,
    kCTNaturalTextAlignment __attribute__((availability(macos,introduced=10.5,deprecated=10.11,message="Deprecated"))) __attribute__((availability(ios,introduced=3.2,deprecated=9.0,message="Deprecated"))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
        = kCTTextAlignmentNatural
};
typedef uint8_t CTLineBreakMode; enum {
    kCTLineBreakByWordWrapping = 0,
    kCTLineBreakByCharWrapping = 1,
    kCTLineBreakByClipping = 2,
    kCTLineBreakByTruncatingHead = 3,
    kCTLineBreakByTruncatingTail = 4,
    kCTLineBreakByTruncatingMiddle = 5
};
typedef int8_t CTWritingDirection; enum {
    kCTWritingDirectionNatural = -1,
    kCTWritingDirectionLeftToRight = 0,
    kCTWritingDirectionRightToLeft = 1
};
typedef uint32_t CTParagraphStyleSpecifier; enum {
    kCTParagraphStyleSpecifierAlignment = 0,
    kCTParagraphStyleSpecifierFirstLineHeadIndent = 1,
    kCTParagraphStyleSpecifierHeadIndent = 2,
    kCTParagraphStyleSpecifierTailIndent = 3,
    kCTParagraphStyleSpecifierTabStops = 4,
    kCTParagraphStyleSpecifierDefaultTabInterval = 5,
    kCTParagraphStyleSpecifierLineBreakMode = 6,
    kCTParagraphStyleSpecifierLineHeightMultiple = 7,
    kCTParagraphStyleSpecifierMaximumLineHeight = 8,
    kCTParagraphStyleSpecifierMinimumLineHeight = 9,
    kCTParagraphStyleSpecifierLineSpacing __attribute__((availability(macos,introduced=10.5,deprecated=10.8,message="See documentation for replacements"))) __attribute__((availability(ios,introduced=3.2,deprecated=6.0,message="See documentation for replacements"))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) = 10,
    kCTParagraphStyleSpecifierParagraphSpacing = 11,
    kCTParagraphStyleSpecifierParagraphSpacingBefore = 12,
    kCTParagraphStyleSpecifierBaseWritingDirection = 13,
    kCTParagraphStyleSpecifierMaximumLineSpacing = 14,
    kCTParagraphStyleSpecifierMinimumLineSpacing = 15,
    kCTParagraphStyleSpecifierLineSpacingAdjustment = 16,
    kCTParagraphStyleSpecifierLineBoundsOptions = 17,

    kCTParagraphStyleSpecifierCount
};
typedef struct CTParagraphStyleSetting
{
    CTParagraphStyleSpecifier spec;
    size_t valueSize;
    const void * value;

} CTParagraphStyleSetting;
CTParagraphStyleRef CTParagraphStyleCreate(
    const CTParagraphStyleSetting * _Nullable settings,
    size_t settingCount ) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.2))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
CTParagraphStyleRef CTParagraphStyleCreateCopy(
    CTParagraphStyleRef paragraphStyle ) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.2))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
bool CTParagraphStyleGetValueForSpecifier(
    CTParagraphStyleRef paragraphStyle,
    CTParagraphStyleSpecifier spec,
    size_t valueBufferSize,
    void * valueBuffer ) __attribute__((availability(macos,introduced=10.5))) __attribute__((availability(ios,introduced=3.2))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
#pragma clang assume_nonnull end


}



#pragma clang assume_nonnull begin


typedef NSInteger NSTextAlignment; enum {
    NSTextAlignmentLeft = 0,

    NSTextAlignmentCenter = 1,
    NSTextAlignmentRight = 2,




    NSTextAlignmentJustified = 3,
    NSTextAlignmentNatural = 4,
} __attribute__((availability(ios,introduced=6_0)));


extern "C" __attribute__((visibility ("default"))) CTTextAlignment NSTextAlignmentToCTTextAlignment(NSTextAlignment nsTextAlignment) __attribute__((availability(ios,introduced=6_0)));
extern "C" __attribute__((visibility ("default"))) NSTextAlignment NSTextAlignmentFromCTTextAlignment(CTTextAlignment ctTextAlignment) __attribute__((availability(ios,introduced=6_0)));



typedef NSInteger NSWritingDirection; enum {
    NSWritingDirectionNatural = -1,
    NSWritingDirectionLeftToRight = 0,
    NSWritingDirectionRightToLeft = 1
} __attribute__((availability(ios,introduced=6_0)));
#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin


typedef NSString * NSTextTabOptionKey __attribute__((swift_wrapper(enum)));
extern "C" __attribute__((visibility ("default"))) NSTextTabOptionKey const NSTabColumnTerminatorsAttributeName __attribute__((availability(ios,introduced=7_0)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0))) 
#ifndef _REWRITER_typedef_NSTextTab
#define _REWRITER_typedef_NSTextTab
typedef struct objc_object NSTextTab;
typedef struct {} _objc_exc_NSTextTab;
#endif

struct NSTextTab_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// + (NSCharacterSet *)columnTerminatorsForLocale:(nullable NSLocale *)aLocale __attribute__((availability(ios,introduced=7_0)));

// - (instancetype)initWithTextAlignment:(NSTextAlignment)alignment location:(CGFloat)loc options:(NSDictionary<NSTextTabOptionKey, id> *)options __attribute__((objc_designated_initializer));


// @property (readonly, nonatomic) NSTextAlignment alignment;
// @property (readonly, nonatomic) CGFloat location;
// @property (readonly, nonatomic) NSDictionary<NSTextTabOptionKey, id> *options;
/* @end */




typedef NSInteger NSLineBreakMode; enum {
    NSLineBreakByWordWrapping = 0,
    NSLineBreakByCharWrapping,
    NSLineBreakByClipping,
    NSLineBreakByTruncatingHead,
    NSLineBreakByTruncatingTail,
    NSLineBreakByTruncatingMiddle
} __attribute__((availability(ios,introduced=6_0)));


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0))) 
#ifndef _REWRITER_typedef_NSParagraphStyle
#define _REWRITER_typedef_NSParagraphStyle
typedef struct objc_object NSParagraphStyle;
typedef struct {} _objc_exc_NSParagraphStyle;
#endif

struct NSParagraphStyle_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


@property (class, readonly, copy, nonatomic) NSParagraphStyle *defaultParagraphStyle;

// + (NSWritingDirection)defaultWritingDirectionForLanguage:(nullable NSString *)languageName;

// @property (readonly, nonatomic) CGFloat lineSpacing;
// @property (readonly, nonatomic) CGFloat paragraphSpacing;
// @property (readonly, nonatomic) NSTextAlignment alignment;



// @property (readonly, nonatomic) CGFloat headIndent;
// @property (readonly, nonatomic) CGFloat tailIndent;
// @property (readonly, nonatomic) CGFloat firstLineHeadIndent;

// @property (readonly, nonatomic) CGFloat minimumLineHeight;
// @property (readonly, nonatomic) CGFloat maximumLineHeight;

// @property (readonly, nonatomic) NSLineBreakMode lineBreakMode;

// @property (readonly, nonatomic) NSWritingDirection baseWritingDirection;

// @property (readonly, nonatomic) CGFloat lineHeightMultiple;
// @property (readonly, nonatomic) CGFloat paragraphSpacingBefore;


// @property (readonly, nonatomic) float hyphenationFactor;

// @property (readonly,copy, nonatomic) NSArray<NSTextTab *> *tabStops __attribute__((availability(ios,introduced=7_0)));
// @property (readonly, nonatomic) CGFloat defaultTabInterval __attribute__((availability(ios,introduced=7_0)));

// @property (readonly, nonatomic) BOOL allowsDefaultTighteningForTruncation __attribute__((availability(ios,introduced=9_0)));
/* @end */



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0))) 
#ifndef _REWRITER_typedef_NSMutableParagraphStyle
#define _REWRITER_typedef_NSMutableParagraphStyle
typedef struct objc_object NSMutableParagraphStyle;
typedef struct {} _objc_exc_NSMutableParagraphStyle;
#endif

struct NSMutableParagraphStyle_IMPL {
	struct NSParagraphStyle_IMPL NSParagraphStyle_IVARS;
};


// @property (nonatomic) CGFloat lineSpacing;
// @property (nonatomic) CGFloat paragraphSpacing;
// @property (nonatomic) NSTextAlignment alignment;
// @property (nonatomic) CGFloat firstLineHeadIndent;
// @property (nonatomic) CGFloat headIndent;
// @property (nonatomic) CGFloat tailIndent;
// @property (nonatomic) NSLineBreakMode lineBreakMode;
// @property (nonatomic) CGFloat minimumLineHeight;
// @property (nonatomic) CGFloat maximumLineHeight;
// @property (nonatomic) NSWritingDirection baseWritingDirection;
// @property (nonatomic) CGFloat lineHeightMultiple;
// @property (nonatomic) CGFloat paragraphSpacingBefore;
// @property (nonatomic) float hyphenationFactor;
// @property (null_resettable, copy, nonatomic) NSArray<NSTextTab *> *tabStops __attribute__((availability(ios,introduced=7_0)));
// @property (nonatomic) CGFloat defaultTabInterval __attribute__((availability(ios,introduced=7_0)));
// @property (nonatomic) BOOL allowsDefaultTighteningForTruncation __attribute__((availability(ios,introduced=9_0)));

// - (void)addTabStop:(NSTextTab *)anObject __attribute__((availability(ios,introduced=9_0)));
// - (void)removeTabStop:(NSTextTab *)anObject __attribute__((availability(ios,introduced=9_0)));

// - (void)setParagraphStyle:(NSParagraphStyle *)obj __attribute__((availability(ios,introduced=9_0)));

/* @end */

#pragma clang assume_nonnull end







extern "C" __attribute__((visibility ("default"))) NSString *const UITextAttributeFont __attribute__((availability(ios,introduced=5_0,deprecated=7_0,message="" "Use NSFontAttributeName"))) __attribute__((availability(tvos,unavailable)));

extern "C" __attribute__((visibility ("default"))) NSString *const UITextAttributeTextColor __attribute__((availability(ios,introduced=5_0,deprecated=7_0,message="" "Use NSForegroundColorAttributeName"))) __attribute__((availability(tvos,unavailable)));

extern "C" __attribute__((visibility ("default"))) NSString *const UITextAttributeTextShadowColor __attribute__((availability(ios,introduced=5_0,deprecated=7_0,message="" "Use NSShadowAttributeName with an NSShadow instance as the value"))) __attribute__((availability(tvos,unavailable)));

extern "C" __attribute__((visibility ("default"))) NSString *const UITextAttributeTextShadowOffset __attribute__((availability(ios,introduced=5_0,deprecated=7_0,message="" "Use NSShadowAttributeName with an NSShadow instance as the value"))) __attribute__((availability(tvos,unavailable)));


typedef NSInteger UILineBreakMode; enum {
    UILineBreakModeWordWrap = 0,
    UILineBreakModeCharacterWrap,
    UILineBreakModeClip,
    UILineBreakModeHeadTruncation,
    UILineBreakModeTailTruncation,
    UILineBreakModeMiddleTruncation,
} __attribute__((availability(ios,introduced=2_0,deprecated=6_0,message="" ))) __attribute__((availability(tvos,unavailable)));


typedef NSInteger UITextAlignment; enum {
    UITextAlignmentLeft = 0,
    UITextAlignmentCenter,
    UITextAlignmentRight,
} __attribute__((availability(ios,introduced=2_0,deprecated=6_0,message="" ))) __attribute__((availability(tvos,unavailable)));

typedef NSInteger UIBaselineAdjustment; enum {
    UIBaselineAdjustmentAlignBaselines = 0,
    UIBaselineAdjustmentAlignCenters,
    UIBaselineAdjustmentNone,
};

// @class UIFont;
#ifndef _REWRITER_typedef_UIFont
#define _REWRITER_typedef_UIFont
typedef struct objc_object UIFont;
typedef struct {} _objc_exc_UIFont;
#endif




// @interface NSString(UIStringDrawing)


// - (CGSize)sizeWithFont:(UIFont *)font __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" "Use -sizeWithAttributes:"))) __attribute__((availability(tvos,unavailable)));
// - (CGSize)sizeWithFont:(UIFont *)font forWidth:(CGFloat)width lineBreakMode:(NSLineBreakMode)lineBreakMode __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" "Use -boundingRectWithSize:options:attributes:context:"))) __attribute__((availability(tvos,unavailable)));


// - (CGSize)drawAtPoint:(CGPoint)point withFont:(UIFont *)font __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" "Use -drawAtPoint:withAttributes:"))) __attribute__((availability(tvos,unavailable)));
// - (CGSize)drawAtPoint:(CGPoint)point forWidth:(CGFloat)width withFont:(UIFont *)font lineBreakMode:(NSLineBreakMode)lineBreakMode __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" "Use -drawInRect:withAttributes:"))) __attribute__((availability(tvos,unavailable)));




// - (CGSize)sizeWithFont:(UIFont *)font constrainedToSize:(CGSize)size __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" "Use -boundingRectWithSize:options:attributes:context:"))) __attribute__((availability(tvos,unavailable)));
// - (CGSize)sizeWithFont:(UIFont *)font constrainedToSize:(CGSize)size lineBreakMode:(NSLineBreakMode)lineBreakMode __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" "Use -boundingRectWithSize:options:attributes:context:"))) __attribute__((availability(tvos,unavailable)));


// - (CGSize)drawInRect:(CGRect)rect withFont:(UIFont *)font __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" "Use -drawInRect:withAttributes:"))) __attribute__((availability(tvos,unavailable)));
// - (CGSize)drawInRect:(CGRect)rect withFont:(UIFont *)font lineBreakMode:(NSLineBreakMode)lineBreakMode __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" "Use -drawInRect:withAttributes:"))) __attribute__((availability(tvos,unavailable)));
// - (CGSize)drawInRect:(CGRect)rect withFont:(UIFont *)font lineBreakMode:(NSLineBreakMode)lineBreakMode alignment:(NSTextAlignment)alignment __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" "Use -drawInRect:withAttributes:"))) __attribute__((availability(tvos,unavailable)));






// - (CGSize)sizeWithFont:(UIFont *)font minFontSize:(CGFloat)minFontSize actualFontSize:(CGFloat *)actualFontSize forWidth:(CGFloat)width lineBreakMode:(NSLineBreakMode)lineBreakMode __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" ))) __attribute__((availability(tvos,unavailable)));

// - (CGSize)drawAtPoint:(CGPoint)point forWidth:(CGFloat)width withFont:(UIFont *)font fontSize:(CGFloat)fontSize lineBreakMode:(NSLineBreakMode)lineBreakMode baselineAdjustment:(UIBaselineAdjustment)baselineAdjustment __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" "Use -drawInRect:withAttributes:"))) __attribute__((availability(tvos,unavailable)));

// - (CGSize)drawAtPoint:(CGPoint)point forWidth:(CGFloat)width withFont:(UIFont *)font minFontSize:(CGFloat)minFontSize actualFontSize:(CGFloat *)actualFontSize lineBreakMode:(NSLineBreakMode)lineBreakMode baselineAdjustment:(UIBaselineAdjustment)baselineAdjustment __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" "Use -drawInRect:withAttributes:"))) __attribute__((availability(tvos,unavailable)));

/* @end */


#pragma clang assume_nonnull begin

__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))
// @protocol UISpringLoadedInteractionSupporting <NSObject>

// @property (nonatomic, assign, getter=isSpringLoaded) BOOL springLoaded __attribute__((availability(ios,introduced=11_0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

// @class UIImage;
#ifndef _REWRITER_typedef_UIImage
#define _REWRITER_typedef_UIImage
typedef struct objc_object UIImage;
typedef struct {} _objc_exc_UIImage;
#endif

#ifndef _REWRITER_typedef_UIFont
#define _REWRITER_typedef_UIFont
typedef struct objc_object UIFont;
typedef struct {} _objc_exc_UIFont;
#endif

#ifndef _REWRITER_typedef_UIColor
#define _REWRITER_typedef_UIColor
typedef struct objc_object UIColor;
typedef struct {} _objc_exc_UIColor;
#endif

#ifndef _REWRITER_typedef_UIImageView
#define _REWRITER_typedef_UIImageView
typedef struct objc_object UIImageView;
typedef struct {} _objc_exc_UIImageView;
#endif

#ifndef _REWRITER_typedef_UILabel
#define _REWRITER_typedef_UILabel
typedef struct objc_object UILabel;
typedef struct {} _objc_exc_UILabel;
#endif


typedef NSInteger UIButtonType; enum {
    UIButtonTypeCustom = 0,
    UIButtonTypeSystem __attribute__((availability(ios,introduced=7_0))),

    UIButtonTypeDetailDisclosure,
    UIButtonTypeInfoLight,
    UIButtonTypeInfoDark,
    UIButtonTypeContactAdd,

    UIButtonTypePlain __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))),

    UIButtonTypeRoundedRect = UIButtonTypeSystem
};

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) 
#ifndef _REWRITER_typedef_UIButton
#define _REWRITER_typedef_UIButton
typedef struct objc_object UIButton;
typedef struct {} _objc_exc_UIButton;
#endif

struct UIButton_IMPL {
	struct UIControl_IMPL UIControl_IVARS;
};


// + (instancetype)buttonWithType:(UIButtonType)buttonType;

// @property(nonatomic) UIEdgeInsets contentEdgeInsets __attribute__((annotate("ui_appearance_selector")));
// @property(nonatomic) UIEdgeInsets titleEdgeInsets;
// @property(nonatomic) BOOL reversesTitleShadowWhenHighlighted;
// @property(nonatomic) UIEdgeInsets imageEdgeInsets;
// @property(nonatomic) BOOL adjustsImageWhenHighlighted;
// @property(nonatomic) BOOL adjustsImageWhenDisabled;
// @property(nonatomic) BOOL showsTouchWhenHighlighted __attribute__((availability(tvos,unavailable)));
// @property(null_resettable, nonatomic,strong) UIColor *tintColor __attribute__((availability(ios,introduced=5_0)));
// @property(nonatomic,readonly) UIButtonType buttonType;





// - (void)setTitle:(nullable NSString *)title forState:(UIControlState)state;
// - (void)setTitleColor:(nullable UIColor *)color forState:(UIControlState)state __attribute__((annotate("ui_appearance_selector")));
// - (void)setTitleShadowColor:(nullable UIColor *)color forState:(UIControlState)state __attribute__((annotate("ui_appearance_selector")));
// - (void)setImage:(nullable UIImage *)image forState:(UIControlState)state;
// - (void)setBackgroundImage:(nullable UIImage *)image forState:(UIControlState)state __attribute__((annotate("ui_appearance_selector")));
// - (void)setAttributedTitle:(nullable NSAttributedString *)title forState:(UIControlState)state __attribute__((availability(ios,introduced=6_0)));

// - (nullable NSString *)titleForState:(UIControlState)state;
// - (nullable UIColor *)titleColorForState:(UIControlState)state;
// - (nullable UIColor *)titleShadowColorForState:(UIControlState)state;
// - (nullable UIImage *)imageForState:(UIControlState)state;
// - (nullable UIImage *)backgroundImageForState:(UIControlState)state;
// - (nullable NSAttributedString *)attributedTitleForState:(UIControlState)state __attribute__((availability(ios,introduced=6_0)));





// @property(nullable, nonatomic,readonly,strong) NSString *currentTitle;
// @property(nonatomic,readonly,strong) UIColor *currentTitleColor;
// @property(nullable, nonatomic,readonly,strong) UIColor *currentTitleShadowColor;
// @property(nullable, nonatomic,readonly,strong) UIImage *currentImage;
// @property(nullable, nonatomic,readonly,strong) UIImage *currentBackgroundImage;
// @property(nullable, nonatomic,readonly,strong) NSAttributedString *currentAttributedTitle __attribute__((availability(ios,introduced=6_0)));


// @property(nullable, nonatomic,readonly,strong) UILabel *titleLabel __attribute__((availability(ios,introduced=3_0)));
// @property(nullable, nonatomic,readonly,strong) UIImageView *imageView __attribute__((availability(ios,introduced=3_0)));





// - (CGRect)backgroundRectForBounds:(CGRect)bounds;
// - (CGRect)contentRectForBounds:(CGRect)bounds;
// - (CGRect)titleRectForContentRect:(CGRect)contentRect;
// - (CGRect)imageRectForContentRect:(CGRect)contentRect;
/* @end */


// @interface UIButton(UIButtonDeprecated)

// @property(nonatomic,strong) UIFont *font __attribute__((availability(ios,introduced=2_0,deprecated=3_0,message="" ))) __attribute__((availability(tvos,unavailable)));
// @property(nonatomic) NSLineBreakMode lineBreakMode __attribute__((availability(ios,introduced=2_0,deprecated=3_0,message="" ))) __attribute__((availability(tvos,unavailable)));
// @property(nonatomic) CGSize titleShadowOffset __attribute__((availability(ios,introduced=2_0,deprecated=3_0,message="" ))) __attribute__((availability(tvos,unavailable)));

/* @end */



// @interface UIButton (SpringLoading) <UISpringLoadedInteractionSupporting>
/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

enum {
    NSAttachmentCharacter __attribute__((availability(ios,introduced=7_0))) = 0xFFFC
};

// @class NSTextContainer;
#ifndef _REWRITER_typedef_NSTextContainer
#define _REWRITER_typedef_NSTextContainer
typedef struct objc_object NSTextContainer;
typedef struct {} _objc_exc_NSTextContainer;
#endif

// @class NSLayoutManager;
#ifndef _REWRITER_typedef_NSLayoutManager
#define _REWRITER_typedef_NSLayoutManager
typedef struct objc_object NSLayoutManager;
typedef struct {} _objc_exc_NSLayoutManager;
#endif

// @class UIImage;
#ifndef _REWRITER_typedef_UIImage
#define _REWRITER_typedef_UIImage
typedef struct objc_object UIImage;
typedef struct {} _objc_exc_UIImage;
#endif




// @protocol NSTextAttachmentContainer <NSObject>




// - (nullable UIImage *)imageForBounds:(CGRect)imageBounds textContainer:(nullable NSTextContainer *)textContainer characterIndex:(NSUInteger)charIndex __attribute__((availability(ios,introduced=7_0)));



// - (CGRect)attachmentBoundsForTextContainer:(nullable NSTextContainer *)textContainer proposedLineFragment:(CGRect)lineFrag glyphPosition:(CGPoint)position characterIndex:(NSUInteger)charIndex __attribute__((availability(ios,introduced=7_0)));


/* @end */


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0))) 
#ifndef _REWRITER_typedef_NSTextAttachment
#define _REWRITER_typedef_NSTextAttachment
typedef struct objc_object NSTextAttachment;
typedef struct {} _objc_exc_NSTextAttachment;
#endif

struct NSTextAttachment_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};





// - (instancetype)initWithData:(nullable NSData *)contentData ofType:(nullable NSString *)uti __attribute__((objc_designated_initializer)) __attribute__((availability(ios,introduced=7_0)));







// @property (nullable, copy, nonatomic) NSData *contents __attribute__((availability(ios,introduced=7_0)));
// @property (nullable, copy, nonatomic) NSString *fileType __attribute__((availability(ios,introduced=7_0)));




// @property (nullable, strong, nonatomic) UIImage *image __attribute__((availability(ios,introduced=7_0)));


// @property (nonatomic) CGRect bounds __attribute__((availability(ios,introduced=7_0)));





// @property (nullable, strong, nonatomic) NSFileWrapper *fileWrapper;


/* @end */


// @interface NSAttributedString (NSAttributedStringAttachmentConveniences)

// + (NSAttributedString *)attributedStringWithAttachment:(NSTextAttachment *)attachment __attribute__((availability(ios,introduced=7_0)));
/* @end */

#pragma clang assume_nonnull end



#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)))
// @protocol UIAccessibilityContentSizeCategoryImageAdjusting <NSObject>


// @property (nonatomic) BOOL adjustsImageSizeForAccessibilityContentSizeCategory;

/* @end */



// @interface UIImageView (UIAccessibilityContentSizeCategoryImageAdjusting) <UIAccessibilityContentSizeCategoryImageAdjusting>

/* @end */



// @interface UIButton (UIAccessibilityContentSizeCategoryImageAdjusting) <UIAccessibilityContentSizeCategoryImageAdjusting>

/* @end */




// @interface NSTextAttachment (UIAccessibilityContentSizeCategoryImageAdjusting) <UIAccessibilityContentSizeCategoryImageAdjusting>

/* @end */

#pragma clang assume_nonnull end



#pragma clang assume_nonnull begin

typedef NSInteger UIActivityIndicatorViewStyle; enum {
    UIActivityIndicatorViewStyleWhiteLarge,
    UIActivityIndicatorViewStyleWhite,
    UIActivityIndicatorViewStyleGray __attribute__((availability(tvos,unavailable))),
};

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) 
#ifndef _REWRITER_typedef_UIActivityIndicatorView
#define _REWRITER_typedef_UIActivityIndicatorView
typedef struct objc_object UIActivityIndicatorView;
typedef struct {} _objc_exc_UIActivityIndicatorView;
#endif

struct UIActivityIndicatorView_IMPL {
	struct UIView_IMPL UIView_IVARS;
};


// - (instancetype)initWithActivityIndicatorStyle:(UIActivityIndicatorViewStyle)style __attribute__((objc_designated_initializer));
// - (instancetype)initWithFrame:(CGRect)frame __attribute__((objc_designated_initializer));
// - (instancetype) initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

// @property(nonatomic) UIActivityIndicatorViewStyle activityIndicatorViewStyle;
// @property(nonatomic) BOOL hidesWhenStopped;

// @property (nullable, readwrite, nonatomic, strong) UIColor *color __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));

// - (void)startAnimating;
// - (void)stopAnimating;

// @property(nonatomic, readonly, getter=isAnimating) BOOL animating;




/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIImage;
#ifndef _REWRITER_typedef_UIImage
#define _REWRITER_typedef_UIImage
typedef struct objc_object UIImage;
typedef struct {} _objc_exc_UIImage;
#endif

#ifndef _REWRITER_typedef_UIViewController
#define _REWRITER_typedef_UIViewController
typedef struct objc_object UIViewController;
typedef struct {} _objc_exc_UIViewController;
#endif





typedef NSString * UIActivityType;


extern "C" __attribute__((visibility ("default"))) UIActivityType const UIActivityTypePostToFacebook __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) UIActivityType const UIActivityTypePostToTwitter __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) UIActivityType const UIActivityTypePostToWeibo __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) UIActivityType const UIActivityTypeMessage __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) UIActivityType const UIActivityTypeMail __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) UIActivityType const UIActivityTypePrint __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) UIActivityType const UIActivityTypeCopyToPasteboard __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) UIActivityType const UIActivityTypeAssignToContact __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) UIActivityType const UIActivityTypeSaveToCameraRoll __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) UIActivityType const UIActivityTypeAddToReadingList __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) UIActivityType const UIActivityTypePostToFlickr __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) UIActivityType const UIActivityTypePostToVimeo __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) UIActivityType const UIActivityTypePostToTencentWeibo __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) UIActivityType const UIActivityTypeAirDrop __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) UIActivityType const UIActivityTypeOpenInIBooks __attribute__((availability(ios,introduced=9_0))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) UIActivityType const UIActivityTypeMarkupAsPDF __attribute__((availability(ios,introduced=11_0))) __attribute__((availability(tvos,unavailable)));

typedef NSInteger UIActivityCategory; enum {
    UIActivityCategoryAction,
    UIActivityCategoryShare,
} __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIActivity
#define _REWRITER_typedef_UIActivity
typedef struct objc_object UIActivity;
typedef struct {} _objc_exc_UIActivity;
#endif

struct UIActivity_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};




@property(class, nonatomic, readonly) UIActivityCategory activityCategory __attribute__((availability(ios,introduced=7_0)));





// @property(nonatomic, readonly, nullable) UIActivityType activityType;
// @property(nonatomic, readonly, nullable) NSString *activityTitle;
// @property(nonatomic, readonly, nullable) UIImage *activityImage;






// - (BOOL)canPerformWithActivityItems:(NSArray *)activityItems;
// - (void)prepareWithActivityItems:(NSArray *)activityItems;


// @property(nonatomic, readonly, nullable) UIViewController *activityViewController;



// - (void)performActivity;



// - (void)activityDidFinish:(BOOL)completed;
/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIActivityViewController;
#ifndef _REWRITER_typedef_UIActivityViewController
#define _REWRITER_typedef_UIActivityViewController
typedef struct objc_object UIActivityViewController;
typedef struct {} _objc_exc_UIActivityViewController;
#endif

#ifndef _REWRITER_typedef_UIImage
#define _REWRITER_typedef_UIImage
typedef struct objc_object UIImage;
typedef struct {} _objc_exc_UIImage;
#endif


// @protocol UIActivityItemSource <NSObject>

/* @required */

// - (id)activityViewControllerPlaceholderItem:(UIActivityViewController *)activityViewController;
// - (nullable id)activityViewController:(UIActivityViewController *)activityViewController itemForActivityType:(nullable UIActivityType)activityType;

/* @optional */

// - (NSString *)activityViewController:(UIActivityViewController *)activityViewController subjectForActivityType:(nullable UIActivityType)activityType;
// - (NSString *)activityViewController:(UIActivityViewController *)activityViewController dataTypeIdentifierForActivityType:(nullable UIActivityType)activityType;
// - (nullable UIImage *)activityViewController:(UIActivityViewController *)activityViewController thumbnailImageForActivityType:(nullable UIActivityType)activityType suggestedSize:(CGSize)size;

/* @end */


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIActivityItemProvider
#define _REWRITER_typedef_UIActivityItemProvider
typedef struct objc_object UIActivityItemProvider;
typedef struct {} _objc_exc_UIActivityItemProvider;
#endif

struct UIActivityItemProvider_IMPL {
	struct NSOperation_IMPL NSOperation_IVARS;
};


// - (instancetype)init __attribute__((unavailable));
// - (instancetype)initWithPlaceholderItem:(id)placeholderItem __attribute__((objc_designated_initializer));

// @property(nullable,nonatomic,strong,readonly) id placeholderItem;
// @property(nullable,nonatomic,copy,readonly) UIActivityType activityType;


// @property(nonnull, nonatomic, readonly) id item;




/* @end */

#pragma clang assume_nonnull end





































#pragma clang assume_nonnull begin

__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) // @protocol UIInteraction <NSObject>

// @property (nonatomic, nullable, weak, readonly) __kindof UIView *view;

// - (void)willMoveToView:(nullable UIView *)view;
// - (void)didMoveToView:(nullable UIView *)view;

/* @end */



// @interface UIView (Interactions)

// - (void)addInteraction:(id<UIInteraction>)interaction __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
// - (void)removeInteraction:(id<UIInteraction>)interaction __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

// @property (nonatomic, copy) NSArray<id<UIInteraction>> *interactions __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

// @protocol UIDragAnimating, UIDropInteractionDelegate, UIDropSession;
// @class UIDragItem;
#ifndef _REWRITER_typedef_UIDragItem
#define _REWRITER_typedef_UIDragItem
typedef struct objc_object UIDragItem;
typedef struct {} _objc_exc_UIDragItem;
#endif

#ifndef _REWRITER_typedef_UITargetedDragPreview
#define _REWRITER_typedef_UITargetedDragPreview
typedef struct objc_object UITargetedDragPreview;
typedef struct {} _objc_exc_UITargetedDragPreview;
#endif



extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIDropInteraction
#define _REWRITER_typedef_UIDropInteraction
typedef struct objc_object UIDropInteraction;
typedef struct {} _objc_exc_UIDropInteraction;
#endif

struct UIDropInteraction_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)initWithDelegate:(id<UIDropInteractionDelegate>)delegate __attribute__((objc_designated_initializer));
// - (instancetype)init __attribute__((unavailable));
// + (instancetype)new __attribute__((unavailable));

// @property (nonatomic, nullable, readonly, weak) id<UIDropInteractionDelegate> delegate;







// @property (nonatomic, assign) BOOL allowsSimultaneousDropSessions;

/* @end */






typedef NSUInteger UIDropOperation; enum {
    UIDropOperationCancel = 0,







    UIDropOperationForbidden = 1,
    UIDropOperationCopy = 2,
    UIDropOperationMove = 3,
} __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIDropProposal
#define _REWRITER_typedef_UIDropProposal
typedef struct objc_object UIDropProposal;
typedef struct {} _objc_exc_UIDropProposal;
#endif

struct UIDropProposal_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)initWithDropOperation:(UIDropOperation)operation __attribute__((objc_designated_initializer));
// - (instancetype)init __attribute__((unavailable));
// + (instancetype)new __attribute__((unavailable));



// @property (nonatomic, readonly) UIDropOperation operation;





// @property (nonatomic, getter=isPrecise) BOOL precise;







// @property (nonatomic) BOOL prefersFullSizePreview;

/* @end */



__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) // @protocol UIDropInteractionDelegate <NSObject>

/* @optional */
// - (BOOL)dropInteraction:(UIDropInteraction *)interaction canHandleSession:(id<UIDropSession>)session;



// - (void)dropInteraction:(UIDropInteraction *)interaction sessionDidEnter:(id<UIDropSession>)session;
// - (UIDropProposal *)dropInteraction:(UIDropInteraction *)interaction sessionDidUpdate:(id<UIDropSession>)session;



// - (void)dropInteraction:(UIDropInteraction *)interaction sessionDidExit:(id<UIDropSession>)session;






// - (void)dropInteraction:(UIDropInteraction *)interaction performDrop:(id<UIDropSession>)session;







// - (void)dropInteraction:(UIDropInteraction *)interaction concludeDrop:(id<UIDropSession>)session;







// - (void)dropInteraction:(UIDropInteraction *)interaction sessionDidEnd:(id<UIDropSession>)session;
// - (nullable UITargetedDragPreview *)dropInteraction:(UIDropInteraction *)interaction previewForDroppingItem:(UIDragItem *)item withDefault:(UITargetedDragPreview *)defaultPreview;





// - (void)dropInteraction:(UIDropInteraction *)interaction item:(UIDragItem *)item willAnimateDropWithAnimator:(id<UIDragAnimating>)animator;

/* @end */

#pragma clang assume_nonnull end

typedef NSInteger UIViewAnimatingState; enum
{
    UIViewAnimatingStateInactive,
    UIViewAnimatingStateActive,
    UIViewAnimatingStateStopped,
} __attribute__((availability(ios,introduced=10_0))) ;

typedef NSInteger UIViewAnimatingPosition; enum {
    UIViewAnimatingPositionEnd,
    UIViewAnimatingPositionStart,
    UIViewAnimatingPositionCurrent,
} __attribute__((availability(ios,introduced=10_0)));


#pragma clang assume_nonnull begin

// @protocol UIViewAnimating <NSObject>

// @property(nonatomic, readonly) UIViewAnimatingState state;



// @property(nonatomic, readonly, getter=isRunning) BOOL running;



// @property(nonatomic, getter=isReversed) BOOL reversed;







// @property(nonatomic) CGFloat fractionComplete;


// - (void)startAnimation;


// - (void)startAnimationAfterDelay:(NSTimeInterval)delay;



// - (void)pauseAnimation;







// - (void)stopAnimation:(BOOL) withoutFinishing;



// - (void)finishAnimationAtPosition:(UIViewAnimatingPosition)finalPosition;

/* @end */


// @protocol UITimingCurveProvider;

// @protocol UIViewImplicitlyAnimating <UIViewAnimating>

/* @optional */

// - (void)addAnimations:(void (^)(void))animation delayFactor:(CGFloat)delayFactor;
// - (void)addAnimations:(void (^)(void))animation;
// - (void)addCompletion:(void (^)(UIViewAnimatingPosition finalPosition))completion;
// - (void)continueAnimationWithTimingParameters:(nullable id <UITimingCurveProvider>)parameters durationFactor:(CGFloat)durationFactor;

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

// @protocol UIDragInteractionDelegate, UIDragSession;
// @class UIDragItem;
#ifndef _REWRITER_typedef_UIDragItem
#define _REWRITER_typedef_UIDragItem
typedef struct objc_object UIDragItem;
typedef struct {} _objc_exc_UIDragItem;
#endif

#ifndef _REWRITER_typedef_UITargetedDragPreview
#define _REWRITER_typedef_UITargetedDragPreview
typedef struct objc_object UITargetedDragPreview;
typedef struct {} _objc_exc_UITargetedDragPreview;
#endif



__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) // @protocol UIDragAnimating <NSObject>







// - (void)addAnimations:(void (^)(void))animations;
// - (void)addCompletion:(void (^)(UIViewAnimatingPosition finalPosition))completion;

/* @end */



extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIDragInteraction
#define _REWRITER_typedef_UIDragInteraction
typedef struct objc_object UIDragInteraction;
typedef struct {} _objc_exc_UIDragInteraction;
#endif

struct UIDragInteraction_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)initWithDelegate:(id<UIDragInteractionDelegate>)delegate __attribute__((objc_designated_initializer));
// - (instancetype)init __attribute__((unavailable));
// + (instancetype)new __attribute__((unavailable));

// @property (nonatomic, nullable, readonly, weak) id<UIDragInteractionDelegate> delegate;






// @property (nonatomic) BOOL allowsSimultaneousRecognitionDuringLift;





// @property (nonatomic, getter=isEnabled) BOOL enabled;




@property (class, nonatomic, readonly, getter=isEnabledByDefault) BOOL enabledByDefault;

/* @end */



__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) // @protocol UIDragInteractionDelegate <NSObject>

/* @required */
// - (NSArray<UIDragItem *> *)dragInteraction:(UIDragInteraction *)interaction itemsForBeginningSession:(id<UIDragSession>)session;

/* @optional */





// - (nullable UITargetedDragPreview *)dragInteraction:(UIDragInteraction *)interaction previewForLiftingItem:(UIDragItem *)item session:(id<UIDragSession>)session;





// - (void)dragInteraction:(UIDragInteraction *)interaction willAnimateLiftWithAnimator:(id<UIDragAnimating>)animator session:(id<UIDragSession>)session;






// - (void)dragInteraction:(UIDragInteraction *)interaction sessionWillBegin:(id<UIDragSession>)session;
// - (BOOL)dragInteraction:(UIDragInteraction *)interaction sessionAllowsMoveOperation:(id<UIDragSession>)session;
// - (BOOL)dragInteraction:(UIDragInteraction *)interaction sessionIsRestrictedToDraggingApplication:(id<UIDragSession>)session;







// - (BOOL)dragInteraction:(UIDragInteraction *)interaction prefersFullSizePreviewsForSession:(id<UIDragSession>)session;




// - (void)dragInteraction:(UIDragInteraction *)interaction sessionDidMove:(id<UIDragSession>)session;







// - (void)dragInteraction:(UIDragInteraction *)interaction session:(id<UIDragSession>)session willEndWithOperation:(UIDropOperation)operation;







// - (void)dragInteraction:(UIDragInteraction *)interaction session:(id<UIDragSession>)session didEndWithOperation:(UIDropOperation)operation;





// - (void)dragInteraction:(UIDragInteraction *)interaction sessionDidTransferItems:(id<UIDragSession>)session;
// - (NSArray<UIDragItem *> *)dragInteraction:(UIDragInteraction *)interaction itemsForAddingToSession:(id<UIDragSession>)session withTouchAtPoint:(CGPoint)point;
// - (nullable id<UIDragSession>)dragInteraction:(UIDragInteraction *)interaction sessionForAddingItems:(NSArray<id<UIDragSession>> *)sessions withTouchAtPoint:(CGPoint)point;
// - (void)dragInteraction:(UIDragInteraction *)interaction session:(id<UIDragSession>)session willAddItems:(NSArray<UIDragItem *> *)items forInteraction:(UIDragInteraction *)addingInteraction;
// - (nullable UITargetedDragPreview *)dragInteraction:(UIDragInteraction *)interaction previewForCancellingItem:(UIDragItem *)item withDefault:(UITargetedDragPreview *)defaultPreview;





// - (void)dragInteraction:(UIDragInteraction *)interaction item:(UIDragItem *)item willAnimateCancelWithAnimator:(id<UIDragAnimating>)animator;

/* @end */

#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin

typedef NSInteger UITextDragOptions; enum {
    UITextDragOptionsNone = 0,
    UITextDragOptionStripTextColorFromPreviews = (1 << 0)
} __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

// @protocol UITextDragDelegate;



__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
// @protocol UITextDraggable <UITextInput>

// @property (nonatomic, weak, nullable) id<UITextDragDelegate> textDragDelegate;





// @property (nonatomic, readonly, nullable) UIDragInteraction *textDragInteraction;



// @property (nonatomic, readonly, getter=isTextDragActive) BOOL textDragActive;

// @property (nonatomic) UITextDragOptions textDragOptions;

/* @end */



// @class UIDragItem;
#ifndef _REWRITER_typedef_UIDragItem
#define _REWRITER_typedef_UIDragItem
typedef struct objc_object UIDragItem;
typedef struct {} _objc_exc_UIDragItem;
#endif

#ifndef _REWRITER_typedef_UITargetedDragPreview
#define _REWRITER_typedef_UITargetedDragPreview
typedef struct objc_object UITargetedDragPreview;
typedef struct {} _objc_exc_UITargetedDragPreview;
#endif

// @protocol UIDragSession, UITextDragRequest;

__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
// @protocol UITextDragDelegate <NSObject>

/* @optional */
// - (NSArray<UIDragItem *> *)textDraggableView:(UIView<UITextDraggable> *)textDraggableView itemsForDrag:(id<UITextDragRequest>)dragRequest;
// - (nullable UITargetedDragPreview *)textDraggableView:(UIView<UITextDraggable> *)textDraggableView dragPreviewForLiftingItem:(UIDragItem *)item session:(id<UIDragSession>)session;





// - (void)textDraggableView:(UIView<UITextDraggable> *)textDraggableView willAnimateLiftWithAnimator:(id<UIDragAnimating>)animator session:(id<UIDragSession>)session;





// - (void)textDraggableView:(UIView<UITextDraggable> *)textDraggableView dragSessionWillBegin:(id<UIDragSession>)session;




// - (void)textDraggableView:(UIView<UITextDraggable> *)textDraggableView dragSessionDidEnd:(id<UIDragSession>)session withOperation:(UIDropOperation)operation;

/* @end */



__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
// @protocol UITextDragRequest <NSObject>

/* @required */



// @property (nonatomic, readonly) UITextRange *dragRange;





// @property (nonatomic, readonly) NSArray<UIDragItem *> *suggestedItems;




// @property (nonatomic, readonly) NSArray<UIDragItem *> *existingItems;






// @property (nonatomic, readonly, getter=isSelected) BOOL selected;



// @property (nonatomic, readonly) id<UIDragSession> dragSession;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

typedef NSUInteger UITextDropAction; enum {


    UITextDropActionInsert = 0,




    UITextDropActionReplaceSelection,




    UITextDropActionReplaceAll,
} __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

typedef NSUInteger UITextDropProgressMode; enum {



    UITextDropProgressModeSystem = 0,



    UITextDropProgressModeCustom
} __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

typedef NSUInteger UITextDropPerformer; enum {






    UITextDropPerformerView = 0,
    UITextDropPerformerDelegate,
} __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_UITextDropProposal
#define _REWRITER_typedef_UITextDropProposal
typedef struct objc_object UITextDropProposal;
typedef struct {} _objc_exc_UITextDropProposal;
#endif

struct UITextDropProposal_IMPL {
	struct UIDropProposal_IMPL UIDropProposal_IVARS;
};







// @property (nonatomic) UITextDropAction dropAction;



// @property (nonatomic) UITextDropProgressMode dropProgressMode;







// @property (nonatomic) BOOL useFastSameViewOperations;
// @property (nonatomic) UITextDropPerformer dropPerformer;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_UIPasteConfiguration
#define _REWRITER_typedef_UIPasteConfiguration
typedef struct objc_object UIPasteConfiguration;
typedef struct {} _objc_exc_UIPasteConfiguration;
#endif

struct UIPasteConfiguration_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property (nonatomic, copy) NSArray<NSString *> *acceptableTypeIdentifiers;

// - (instancetype)init __attribute__((objc_designated_initializer));

// - (instancetype)initWithAcceptableTypeIdentifiers:(NSArray<NSString *> *)acceptableTypeIdentifiers;
// - (void)addAcceptableTypeIdentifiers:(NSArray<NSString *> *)acceptableTypeIdentifiers;


// - (instancetype)initWithTypeIdentifiersForAcceptingClass:(Class<NSItemProviderReading>)aClass;
// - (void)addTypeIdentifiersForAcceptingClass:(Class<NSItemProviderReading>)aClass;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @protocol UITextPasteConfigurationSupporting;
// @protocol UITextPasteItem;

// @class UITextRange;
#ifndef _REWRITER_typedef_UITextRange
#define _REWRITER_typedef_UITextRange
typedef struct objc_object UITextRange;
typedef struct {} _objc_exc_UITextRange;
#endif

// @class NSTextAttachment;
#ifndef _REWRITER_typedef_NSTextAttachment
#define _REWRITER_typedef_NSTextAttachment
typedef struct objc_object NSTextAttachment;
typedef struct {} _objc_exc_NSTextAttachment;
#endif

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
// @protocol UITextPasteDelegate <NSObject>

/* @optional */
// - (void)textPasteConfigurationSupporting:(id<UITextPasteConfigurationSupporting>)textPasteConfigurationSupporting transformPasteItem:(id<UITextPasteItem>)item;
// - (NSAttributedString *)textPasteConfigurationSupporting:(id<UITextPasteConfigurationSupporting>)textPasteConfigurationSupporting combineItemAttributedStrings:(NSArray<NSAttributedString *> *)itemStrings forRange:(UITextRange*)textRange;
// - (UITextRange*)textPasteConfigurationSupporting:(id<UITextPasteConfigurationSupporting>)textPasteConfigurationSupporting performPasteOfAttributedString:(NSAttributedString*)attributedString toRange:(UITextRange*)textRange;







// - (BOOL)textPasteConfigurationSupporting:(id<UITextPasteConfigurationSupporting>)textPasteConfigurationSupporting shouldAnimatePasteOfAttributedString:(NSAttributedString*)attributedString toRange:(UITextRange*)textRange;

/* @end */




extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
// @protocol UITextPasteItem <NSObject>



// @property (nonatomic, readonly) __kindof NSItemProvider *itemProvider;



// @property (nonatomic, readonly, nullable) id localObject;




// @property (nonatomic, readonly) NSDictionary<NSString *, id> *defaultAttributes;


// - (void)setStringResult:(NSString*)string;


// - (void)setAttributedStringResult:(NSAttributedString*)string;


// - (void)setAttachmentResult:(NSTextAttachment*)textAttachment;



// - (void)setNoResult;





// - (void)setDefaultResult;

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
// @protocol UITextPasteConfigurationSupporting <UIPasteConfigurationSupporting>

// @property (nonatomic, weak, nullable) id<UITextPasteDelegate> pasteDelegate;

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

// @class UIDropInteraction;
#ifndef _REWRITER_typedef_UIDropInteraction
#define _REWRITER_typedef_UIDropInteraction
typedef struct objc_object UIDropInteraction;
typedef struct {} _objc_exc_UIDropInteraction;
#endif

// @protocol UITextDropDelegate;



__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
// @protocol UITextDroppable <UITextInput, UITextPasteConfigurationSupporting>

// @property (nonatomic, weak, nullable) id<UITextDropDelegate> textDropDelegate;





// @property (nonatomic, readonly, nullable) UIDropInteraction *textDropInteraction;



// @property (nonatomic, readonly, getter=isTextDropActive) bool textDropActive;

/* @end */



typedef NSUInteger UITextDropEditability; enum {



    UITextDropEditabilityNo = 0,




    UITextDropEditabilityTemporary,




    UITextDropEditabilityYes,
} __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));


// @protocol UITextDropRequest;


__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
// @protocol UITextDropDelegate <NSObject>

/* @optional */






// - (UITextDropEditability)textDroppableView:(UIView<UITextDroppable> *)textDroppableView willBecomeEditableForDrop:(id<UITextDropRequest>)drop;
// - (UITextDropProposal*)textDroppableView:(UIView<UITextDroppable> *)textDroppableView proposalForDrop:(id<UITextDropRequest>)drop;





// - (void)textDroppableView:(UIView<UITextDroppable> *)textDroppableView willPerformDrop:(id<UITextDropRequest>)drop;
// - (nullable UITargetedDragPreview *)textDroppableView:(UIView<UITextDroppable> *)textDroppableView previewForDroppingAllItemsWithDefault:(UITargetedDragPreview *)defaultPreview;



// - (void)textDroppableView:(UIView<UITextDroppable> *)textDroppableView dropSessionDidEnter:(id<UIDropSession>)session;






// - (void)textDroppableView:(UIView<UITextDroppable> *)textDroppableView dropSessionDidUpdate:(id<UIDropSession>)session;



// - (void)textDroppableView:(UIView<UITextDroppable> *)textDroppableView dropSessionDidExit:(id<UIDropSession>)session;



// - (void)textDroppableView:(UIView<UITextDroppable> *)textDroppableView dropSessionDidEnd:(id<UIDropSession>)session;

/* @end */



__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
// @protocol UITextDropRequest <NSObject>



// @property (nonatomic, readonly) UITextPosition *dropPosition;



// @property (nonatomic, readonly) UITextDropProposal *suggestedProposal;




// @property (nonatomic, readonly, getter=isSameView) BOOL sameView;




// @property (nonatomic, readonly) id<UIDropSession> dropSession;

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0))) // @protocol UIContentSizeCategoryAdjusting <NSObject>







// @property (nonatomic) BOOL adjustsFontForContentSizeCategory;

/* @end */

#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin

// @class UIImage;
#ifndef _REWRITER_typedef_UIImage
#define _REWRITER_typedef_UIImage
typedef struct objc_object UIImage;
typedef struct {} _objc_exc_UIImage;
#endif

#ifndef _REWRITER_typedef_UIImageView
#define _REWRITER_typedef_UIImageView
typedef struct objc_object UIImageView;
typedef struct {} _objc_exc_UIImageView;
#endif

#ifndef _REWRITER_typedef_UILabel
#define _REWRITER_typedef_UILabel
typedef struct objc_object UILabel;
typedef struct {} _objc_exc_UILabel;
#endif

#ifndef _REWRITER_typedef_UIColor
#define _REWRITER_typedef_UIColor
typedef struct objc_object UIColor;
typedef struct {} _objc_exc_UIColor;
#endif

#ifndef _REWRITER_typedef_UIButton
#define _REWRITER_typedef_UIButton
typedef struct objc_object UIButton;
typedef struct {} _objc_exc_UIButton;
#endif

// @class UITextFieldAtomBackgroundView;
#ifndef _REWRITER_typedef_UITextFieldAtomBackgroundView
#define _REWRITER_typedef_UITextFieldAtomBackgroundView
typedef struct objc_object UITextFieldAtomBackgroundView;
typedef struct {} _objc_exc_UITextFieldAtomBackgroundView;
#endif

// @class UITextFieldBackgroundView;
#ifndef _REWRITER_typedef_UITextFieldBackgroundView
#define _REWRITER_typedef_UITextFieldBackgroundView
typedef struct objc_object UITextFieldBackgroundView;
typedef struct {} _objc_exc_UITextFieldBackgroundView;
#endif

// @class UITextFieldBorderView;
#ifndef _REWRITER_typedef_UITextFieldBorderView
#define _REWRITER_typedef_UITextFieldBorderView
typedef struct objc_object UITextFieldBorderView;
typedef struct {} _objc_exc_UITextFieldBorderView;
#endif

// @class UITextFieldLabel;
#ifndef _REWRITER_typedef_UITextFieldLabel
#define _REWRITER_typedef_UITextFieldLabel
typedef struct objc_object UITextFieldLabel;
typedef struct {} _objc_exc_UITextFieldLabel;
#endif

// @class UITextInputTraits;
#ifndef _REWRITER_typedef_UITextInputTraits
#define _REWRITER_typedef_UITextInputTraits
typedef struct objc_object UITextInputTraits;
typedef struct {} _objc_exc_UITextInputTraits;
#endif

// @class UITextSelectionView;
#ifndef _REWRITER_typedef_UITextSelectionView
#define _REWRITER_typedef_UITextSelectionView
typedef struct objc_object UITextSelectionView;
typedef struct {} _objc_exc_UITextSelectionView;
#endif

// @class UITextInteractionAssistant;
#ifndef _REWRITER_typedef_UITextInteractionAssistant
#define _REWRITER_typedef_UITextInteractionAssistant
typedef struct objc_object UITextInteractionAssistant;
typedef struct {} _objc_exc_UITextInteractionAssistant;
#endif

// @class UIPopoverController;
#ifndef _REWRITER_typedef_UIPopoverController
#define _REWRITER_typedef_UIPopoverController
typedef struct objc_object UIPopoverController;
typedef struct {} _objc_exc_UIPopoverController;
#endif

// @protocol UITextFieldDelegate;
// @protocol UITextSelecting;

typedef NSInteger UITextBorderStyle; enum {
    UITextBorderStyleNone,
    UITextBorderStyleLine,
    UITextBorderStyleBezel,
    UITextBorderStyleRoundedRect
};

typedef NSInteger UITextFieldViewMode; enum {
    UITextFieldViewModeNever,
    UITextFieldViewModeWhileEditing,
    UITextFieldViewModeUnlessEditing,
    UITextFieldViewModeAlways
};

typedef NSInteger UITextFieldDidEndEditingReason; enum {
    UITextFieldDidEndEditingReasonCommitted,
    UITextFieldDidEndEditingReasonCancelled __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,introduced=10_0)))
} __attribute__((availability(ios,introduced=10_0)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) 
#ifndef _REWRITER_typedef_UITextField
#define _REWRITER_typedef_UITextField
typedef struct objc_object UITextField;
typedef struct {} _objc_exc_UITextField;
#endif

struct UITextField_IMPL {
	struct UIControl_IMPL UIControl_IVARS;
};


// @property(nullable, nonatomic,copy) NSString *text;
// @property(nullable, nonatomic,copy) NSAttributedString *attributedText __attribute__((availability(ios,introduced=6_0)));
// @property(nullable, nonatomic,strong) UIColor *textColor;
// @property(nullable, nonatomic,strong) UIFont *font;
// @property(nonatomic) NSTextAlignment textAlignment;
// @property(nonatomic) UITextBorderStyle borderStyle;
// @property(nonatomic,copy) NSDictionary<NSString *, id> *defaultTextAttributes __attribute__((availability(ios,introduced=7_0)));

// @property(nullable, nonatomic,copy) NSString *placeholder;
// @property(nullable, nonatomic,copy) NSAttributedString *attributedPlaceholder __attribute__((availability(ios,introduced=6_0)));
// @property(nonatomic) BOOL clearsOnBeginEditing;
// @property(nonatomic) BOOL adjustsFontSizeToFitWidth;
// @property(nonatomic) CGFloat minimumFontSize;
// @property(nullable, nonatomic,weak) id<UITextFieldDelegate> delegate;
// @property(nullable, nonatomic,strong) UIImage *background;
// @property(nullable, nonatomic,strong) UIImage *disabledBackground;

// @property(nonatomic,readonly,getter=isEditing) BOOL editing;
// @property(nonatomic) BOOL allowsEditingTextAttributes __attribute__((availability(ios,introduced=6_0)));
// @property(nullable, nonatomic,copy) NSDictionary<NSString *, id> *typingAttributes __attribute__((availability(ios,introduced=6_0)));
// @property(nonatomic) UITextFieldViewMode clearButtonMode;

// @property(nullable, nonatomic,strong) UIView *leftView;
// @property(nonatomic) UITextFieldViewMode leftViewMode;

// @property(nullable, nonatomic,strong) UIView *rightView;
// @property(nonatomic) UITextFieldViewMode rightViewMode;



// - (CGRect)borderRectForBounds:(CGRect)bounds;
// - (CGRect)textRectForBounds:(CGRect)bounds;
// - (CGRect)placeholderRectForBounds:(CGRect)bounds;
// - (CGRect)editingRectForBounds:(CGRect)bounds;
// - (CGRect)clearButtonRectForBounds:(CGRect)bounds;
// - (CGRect)leftViewRectForBounds:(CGRect)bounds;
// - (CGRect)rightViewRectForBounds:(CGRect)bounds;

// - (void)drawTextInRect:(CGRect)rect;
// - (void)drawPlaceholderInRect:(CGRect)rect;



// @property (nullable, readwrite, strong) UIView *inputView;
// @property (nullable, readwrite, strong) UIView *inputAccessoryView;

// @property(nonatomic) BOOL clearsOnInsertion __attribute__((availability(ios,introduced=6_0)));

/* @end */




// @interface UITextField () <UITextDraggable, UITextDroppable, UITextPasteConfigurationSupporting>
/* @end */




// @interface UIView (UITextField)
// - (BOOL)endEditing:(BOOL)force;
/* @end */


// @protocol UITextFieldDelegate <NSObject>

/* @optional */

// - (BOOL)textFieldShouldBeginEditing:(UITextField *)textField;
// - (void)textFieldDidBeginEditing:(UITextField *)textField;
// - (BOOL)textFieldShouldEndEditing:(UITextField *)textField;
// - (void)textFieldDidEndEditing:(UITextField *)textField;
// - (void)textFieldDidEndEditing:(UITextField *)textField reason:(UITextFieldDidEndEditingReason)reason __attribute__((availability(ios,introduced=10_0)));

// - (BOOL)textField:(UITextField *)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString *)string;

// - (BOOL)textFieldShouldClear:(UITextField *)textField;
// - (BOOL)textFieldShouldReturn:(UITextField *)textField;

/* @end */


extern "C" __attribute__((visibility ("default"))) NSNotificationName const UITextFieldTextDidBeginEditingNotification;
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UITextFieldTextDidEndEditingNotification;
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UITextFieldTextDidChangeNotification;

extern "C" __attribute__((visibility ("default"))) NSString *const UITextFieldDidEndEditingReasonKey __attribute__((availability(ios,introduced=10_0)));
#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin

// @protocol UIActionSheetDelegate;
// @class UILabel;
#ifndef _REWRITER_typedef_UILabel
#define _REWRITER_typedef_UILabel
typedef struct objc_object UILabel;
typedef struct {} _objc_exc_UILabel;
#endif

#ifndef _REWRITER_typedef_UIToolbar
#define _REWRITER_typedef_UIToolbar
typedef struct objc_object UIToolbar;
typedef struct {} _objc_exc_UIToolbar;
#endif

#ifndef _REWRITER_typedef_UITabBar
#define _REWRITER_typedef_UITabBar
typedef struct objc_object UITabBar;
typedef struct {} _objc_exc_UITabBar;
#endif

#ifndef _REWRITER_typedef_UIWindow
#define _REWRITER_typedef_UIWindow
typedef struct objc_object UIWindow;
typedef struct {} _objc_exc_UIWindow;
#endif

#ifndef _REWRITER_typedef_UIBarButtonItem
#define _REWRITER_typedef_UIBarButtonItem
typedef struct objc_object UIBarButtonItem;
typedef struct {} _objc_exc_UIBarButtonItem;
#endif

#ifndef _REWRITER_typedef_UIPopoverController
#define _REWRITER_typedef_UIPopoverController
typedef struct objc_object UIPopoverController;
typedef struct {} _objc_exc_UIPopoverController;
#endif


typedef NSInteger UIActionSheetStyle; enum {
    UIActionSheetStyleAutomatic = -1,
    UIActionSheetStyleDefault = UIBarStyleDefault,
    UIActionSheetStyleBlackTranslucent = UIBarStyleBlackTranslucent,
    UIActionSheetStyleBlackOpaque = UIBarStyleBlackOpaque ,
} __attribute__((availability(tvos,unavailable)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0,deprecated=8_3,message="" "UIActionSheet is deprecated. Use UIAlertController with a preferredStyle of UIAlertControllerStyleActionSheet instead"))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_UIActionSheet
#define _REWRITER_typedef_UIActionSheet
typedef struct objc_object UIActionSheet;
typedef struct {} _objc_exc_UIActionSheet;
#endif

struct UIActionSheet_IMPL {
	struct UIView_IMPL UIView_IVARS;
};


// - (instancetype)initWithTitle:(nullable NSString *)title delegate:(nullable id<UIActionSheetDelegate>)delegate cancelButtonTitle:(nullable NSString *)cancelButtonTitle destructiveButtonTitle:(nullable NSString *)destructiveButtonTitle otherButtonTitles:(nullable NSString *)otherButtonTitles, ... __attribute__((sentinel(0,1))) __attribute__((availability(ios_app_extension,unavailable,message="Use UIAlertController instead.")));

// @property(nullable,nonatomic,weak) id<UIActionSheetDelegate> delegate;
// @property(nonatomic,copy) NSString *title;
// @property(nonatomic) UIActionSheetStyle actionSheetStyle;



// - (NSInteger)addButtonWithTitle:(nullable NSString *)title;
// - (nullable NSString *)buttonTitleAtIndex:(NSInteger)buttonIndex;
// @property(nonatomic,readonly) NSInteger numberOfButtons;
// @property(nonatomic) NSInteger cancelButtonIndex;
// @property(nonatomic) NSInteger destructiveButtonIndex;

// @property(nonatomic,readonly) NSInteger firstOtherButtonIndex;
// @property(nonatomic,readonly,getter=isVisible) BOOL visible;




// - (void)showFromToolbar:(UIToolbar *)view;
// - (void)showFromTabBar:(UITabBar *)view;
// - (void)showFromBarButtonItem:(UIBarButtonItem *)item animated:(BOOL)animated __attribute__((availability(ios,introduced=3_2)));
// - (void)showFromRect:(CGRect)rect inView:(UIView *)view animated:(BOOL)animated __attribute__((availability(ios,introduced=3_2)));
// - (void)showInView:(UIView *)view;



// - (void)dismissWithClickedButtonIndex:(NSInteger)buttonIndex animated:(BOOL)animated;

/* @end */



__attribute__((availability(tvos,unavailable)))
// @protocol UIActionSheetDelegate <NSObject>
/* @optional */


// - (void)actionSheet:(UIActionSheet *)actionSheet clickedButtonAtIndex:(NSInteger)buttonIndex __attribute__((availability(ios,introduced=2_0,deprecated=8_3,message="" ))) __attribute__((availability(tvos,unavailable)));



// - (void)actionSheetCancel:(UIActionSheet *)actionSheet __attribute__((availability(ios,introduced=2_0,deprecated=8_3,message="" ))) __attribute__((availability(tvos,unavailable)));

// - (void)willPresentActionSheet:(UIActionSheet *)actionSheet __attribute__((availability(ios,introduced=2_0,deprecated=8_3,message="" )))__attribute__((availability(tvos,unavailable)));
// - (void)didPresentActionSheet:(UIActionSheet *)actionSheet __attribute__((availability(ios,introduced=2_0,deprecated=8_3,message="" ))) __attribute__((availability(tvos,unavailable)));

// - (void)actionSheet:(UIActionSheet *)actionSheet willDismissWithButtonIndex:(NSInteger)buttonIndex __attribute__((availability(ios,introduced=2_0,deprecated=8_3,message="" ))) __attribute__((availability(tvos,unavailable)));
// - (void)actionSheet:(UIActionSheet *)actionSheet didDismissWithButtonIndex:(NSInteger)buttonIndex __attribute__((availability(ios,introduced=2_0,deprecated=8_3,message="" ))) __attribute__((availability(tvos,unavailable)));

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

typedef NSInteger UIAlertViewStyle; enum {
    UIAlertViewStyleDefault = 0,
    UIAlertViewStyleSecureTextInput,
    UIAlertViewStylePlainTextInput,
    UIAlertViewStyleLoginAndPasswordInput
} __attribute__((availability(tvos,unavailable)));

// @protocol UIAlertViewDelegate;
// @class UILabel;
#ifndef _REWRITER_typedef_UILabel
#define _REWRITER_typedef_UILabel
typedef struct objc_object UILabel;
typedef struct {} _objc_exc_UILabel;
#endif

#ifndef _REWRITER_typedef_UIToolbar
#define _REWRITER_typedef_UIToolbar
typedef struct objc_object UIToolbar;
typedef struct {} _objc_exc_UIToolbar;
#endif

#ifndef _REWRITER_typedef_UITabBar
#define _REWRITER_typedef_UITabBar
typedef struct objc_object UITabBar;
typedef struct {} _objc_exc_UITabBar;
#endif

#ifndef _REWRITER_typedef_UIWindow
#define _REWRITER_typedef_UIWindow
typedef struct objc_object UIWindow;
typedef struct {} _objc_exc_UIWindow;
#endif

#ifndef _REWRITER_typedef_UIBarButtonItem
#define _REWRITER_typedef_UIBarButtonItem
typedef struct objc_object UIBarButtonItem;
typedef struct {} _objc_exc_UIBarButtonItem;
#endif

#ifndef _REWRITER_typedef_UIPopoverController
#define _REWRITER_typedef_UIPopoverController
typedef struct objc_object UIPopoverController;
typedef struct {} _objc_exc_UIPopoverController;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "UIAlertView is deprecated. Use UIAlertController with a preferredStyle of UIAlertControllerStyleAlert instead"))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_UIAlertView
#define _REWRITER_typedef_UIAlertView
typedef struct objc_object UIAlertView;
typedef struct {} _objc_exc_UIAlertView;
#endif

struct UIAlertView_IMPL {
	struct UIView_IMPL UIView_IVARS;
};


// - (instancetype)initWithTitle:(nullable NSString *)title message:(nullable NSString *)message delegate:(nullable id )delegate cancelButtonTitle:(nullable NSString *)cancelButtonTitle otherButtonTitles:(nullable NSString *)otherButtonTitles, ... __attribute__((sentinel(0,1))) __attribute__((availability(ios_app_extension,unavailable,message="Use UIAlertController instead.")));

// - (id)initWithFrame:(CGRect)frame __attribute__((objc_designated_initializer));
// - (nullable instancetype) initWithCoder:(nonnull NSCoder *)aDecoder __attribute__((objc_designated_initializer));

// @property(nullable,nonatomic,weak) id delegate;
// @property(nonatomic,copy) NSString *title;
// @property(nullable,nonatomic,copy) NSString *message;




// - (NSInteger)addButtonWithTitle:(nullable NSString *)title;
// - (nullable NSString *)buttonTitleAtIndex:(NSInteger)buttonIndex;
// @property(nonatomic,readonly) NSInteger numberOfButtons;
// @property(nonatomic) NSInteger cancelButtonIndex;

// @property(nonatomic,readonly) NSInteger firstOtherButtonIndex;
// @property(nonatomic,readonly,getter=isVisible) BOOL visible;


// - (void)show;



// - (void)dismissWithClickedButtonIndex:(NSInteger)buttonIndex animated:(BOOL)animated;


// @property(nonatomic,assign) UIAlertViewStyle alertViewStyle __attribute__((availability(ios,introduced=5_0)));



// - (nullable UITextField *)textFieldAtIndex:(NSInteger)textFieldIndex __attribute__((availability(ios,introduced=5_0)));


/* @end */


__attribute__((availability(tvos,unavailable)))
// @protocol UIAlertViewDelegate <NSObject>
/* @optional */


// - (void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" )));



// - (void)alertViewCancel:(UIAlertView *)alertView __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" )));

// - (void)willPresentAlertView:(UIAlertView *)alertView __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" )));
// - (void)didPresentAlertView:(UIAlertView *)alertView __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" )));

// - (void)alertView:(UIAlertView *)alertView willDismissWithButtonIndex:(NSInteger)buttonIndex __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" )));
// - (void)alertView:(UIAlertView *)alertView didDismissWithButtonIndex:(NSInteger)buttonIndex __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" )));


// - (BOOL)alertViewShouldEnableFirstOtherButton:(UIAlertView *)alertView __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" )));

/* @end */

#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin

typedef NSInteger UIStatusBarStyle; enum {
    UIStatusBarStyleDefault = 0,
    UIStatusBarStyleLightContent __attribute__((availability(ios,introduced=7_0))) = 1,

    UIStatusBarStyleBlackTranslucent __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" "Use UIStatusBarStyleLightContent"))) = 1,
    UIStatusBarStyleBlackOpaque __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" "Use UIStatusBarStyleLightContent"))) = 2,
} __attribute__((availability(tvos,unavailable)));

typedef NSInteger UIStatusBarAnimation; enum {
    UIStatusBarAnimationNone,
    UIStatusBarAnimationFade __attribute__((availability(ios,introduced=3_2))),
    UIStatusBarAnimationSlide __attribute__((availability(ios,introduced=3_2))),
} __attribute__((availability(tvos,unavailable)));



typedef NSInteger UIInterfaceOrientation; enum {
    UIInterfaceOrientationUnknown = UIDeviceOrientationUnknown,
    UIInterfaceOrientationPortrait = UIDeviceOrientationPortrait,
    UIInterfaceOrientationPortraitUpsideDown = UIDeviceOrientationPortraitUpsideDown,
    UIInterfaceOrientationLandscapeLeft = UIDeviceOrientationLandscapeRight,
    UIInterfaceOrientationLandscapeRight = UIDeviceOrientationLandscapeLeft
} __attribute__((availability(tvos,unavailable)));




extern "C" __attribute__((visibility ("default"))) NSExceptionName const UIApplicationInvalidInterfaceOrientationException __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(tvos,unavailable)));

typedef NSUInteger UIInterfaceOrientationMask; enum {
    UIInterfaceOrientationMaskPortrait = (1 << UIInterfaceOrientationPortrait),
    UIInterfaceOrientationMaskLandscapeLeft = (1 << UIInterfaceOrientationLandscapeLeft),
    UIInterfaceOrientationMaskLandscapeRight = (1 << UIInterfaceOrientationLandscapeRight),
    UIInterfaceOrientationMaskPortraitUpsideDown = (1 << UIInterfaceOrientationPortraitUpsideDown),
    UIInterfaceOrientationMaskLandscape = (UIInterfaceOrientationMaskLandscapeLeft | UIInterfaceOrientationMaskLandscapeRight),
    UIInterfaceOrientationMaskAll = (UIInterfaceOrientationMaskPortrait | UIInterfaceOrientationMaskLandscapeLeft | UIInterfaceOrientationMaskLandscapeRight | UIInterfaceOrientationMaskPortraitUpsideDown),
    UIInterfaceOrientationMaskAllButUpsideDown = (UIInterfaceOrientationMaskPortrait | UIInterfaceOrientationMaskLandscapeLeft | UIInterfaceOrientationMaskLandscapeRight),
} __attribute__((availability(tvos,unavailable)));



static inline BOOL UIInterfaceOrientationIsPortrait(UIInterfaceOrientation orientation) __attribute__((availability(tvos,unavailable))) {
    return ((orientation) == UIInterfaceOrientationPortrait || (orientation) == UIInterfaceOrientationPortraitUpsideDown);
}

static inline BOOL UIInterfaceOrientationIsLandscape(UIInterfaceOrientation orientation) __attribute__((availability(tvos,unavailable))) {
    return ((orientation) == UIInterfaceOrientationLandscapeLeft || (orientation) == UIInterfaceOrientationLandscapeRight);
}

typedef NSUInteger UIRemoteNotificationType; enum {
    UIRemoteNotificationTypeNone = 0,
    UIRemoteNotificationTypeBadge = 1 << 0,
    UIRemoteNotificationTypeSound = 1 << 1,
    UIRemoteNotificationTypeAlert = 1 << 2,
    UIRemoteNotificationTypeNewsstandContentAvailability = 1 << 3,
} __attribute__((availability(ios,introduced=3_0,deprecated=8_0,message="" "Use UserNotifications Framework's UNAuthorizationOptions for user notifications and registerForRemoteNotifications for receiving remote notifications instead."))) __attribute__((availability(tvos,unavailable)));

typedef NSUInteger UIBackgroundFetchResult; enum {
    UIBackgroundFetchResultNewData,
    UIBackgroundFetchResultNoData,
    UIBackgroundFetchResultFailed
} __attribute__((availability(ios,introduced=7_0)));

typedef NSInteger UIBackgroundRefreshStatus; enum {
    UIBackgroundRefreshStatusRestricted,
    UIBackgroundRefreshStatusDenied,
    UIBackgroundRefreshStatusAvailable
} __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(tvos,introduced=11.0)));

typedef NSInteger UIApplicationState; enum {
    UIApplicationStateActive,
    UIApplicationStateInactive,
    UIApplicationStateBackground
} __attribute__((availability(ios,introduced=4_0)));

typedef NSUInteger UIBackgroundTaskIdentifier;
extern "C" __attribute__((visibility ("default"))) const UIBackgroundTaskIdentifier UIBackgroundTaskInvalid __attribute__((availability(ios,introduced=4_0)));
extern "C" __attribute__((visibility ("default"))) const NSTimeInterval UIMinimumKeepAliveTimeout __attribute__((availability(ios,introduced=4_0)));
extern "C" __attribute__((visibility ("default"))) const NSTimeInterval UIApplicationBackgroundFetchIntervalMinimum __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(tvos,introduced=11.0)));
extern "C" __attribute__((visibility ("default"))) const NSTimeInterval UIApplicationBackgroundFetchIntervalNever __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(tvos,introduced=11.0)));

// @class CKShareMetadata;
#ifndef _REWRITER_typedef_CKShareMetadata
#define _REWRITER_typedef_CKShareMetadata
typedef struct objc_object CKShareMetadata;
typedef struct {} _objc_exc_CKShareMetadata;
#endif

// @class UIView;
#ifndef _REWRITER_typedef_UIView
#define _REWRITER_typedef_UIView
typedef struct objc_object UIView;
typedef struct {} _objc_exc_UIView;
#endif

#ifndef _REWRITER_typedef_UIWindow
#define _REWRITER_typedef_UIWindow
typedef struct objc_object UIWindow;
typedef struct {} _objc_exc_UIWindow;
#endif

// @class UIStatusBar;
#ifndef _REWRITER_typedef_UIStatusBar
#define _REWRITER_typedef_UIStatusBar
typedef struct objc_object UIStatusBar;
typedef struct {} _objc_exc_UIStatusBar;
#endif

#ifndef _REWRITER_typedef_UIStatusBarWindow
#define _REWRITER_typedef_UIStatusBarWindow
typedef struct objc_object UIStatusBarWindow;
typedef struct {} _objc_exc_UIStatusBarWindow;
#endif

#ifndef _REWRITER_typedef_UILocalNotification
#define _REWRITER_typedef_UILocalNotification
typedef struct objc_object UILocalNotification;
typedef struct {} _objc_exc_UILocalNotification;
#endif

// @protocol UIApplicationDelegate;
// @class INIntent;
#ifndef _REWRITER_typedef_INIntent
#define _REWRITER_typedef_INIntent
typedef struct objc_object INIntent;
typedef struct {} _objc_exc_INIntent;
#endif

// @class INIntentResponse;
#ifndef _REWRITER_typedef_INIntentResponse
#define _REWRITER_typedef_INIntentResponse
typedef struct objc_object INIntentResponse;
typedef struct {} _objc_exc_INIntentResponse;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) 
#ifndef _REWRITER_typedef_UIApplication
#define _REWRITER_typedef_UIApplication
typedef struct objc_object UIApplication;
typedef struct {} _objc_exc_UIApplication;
#endif

struct UIApplication_IMPL {
	struct UIResponder_IMPL UIResponder_IVARS;
};



@property(class, nonatomic, readonly) UIApplication *sharedApplication __attribute__((availability(ios_app_extension,unavailable,message="Use view controller based solutions where appropriate instead.")));




// @property(nullable, nonatomic, assign) id<UIApplicationDelegate> delegate;

// - (void)beginIgnoringInteractionEvents __attribute__((availability(ios_app_extension,unavailable,message="")));
// - (void)endIgnoringInteractionEvents __attribute__((availability(ios_app_extension,unavailable,message="")));

// @property(nonatomic, readonly, getter=isIgnoringInteractionEvents) BOOL ignoringInteractionEvents;




// @property(nonatomic,getter=isIdleTimerDisabled) BOOL idleTimerDisabled;

// - (BOOL)openURL:(NSURL*)url __attribute__((availability(ios,introduced=2_0,deprecated=10_0,message="" "Please use openURL:options:completionHandler: instead"))) __attribute__((availability(ios_app_extension,unavailable,message="")));
// - (BOOL)canOpenURL:(NSURL *)url __attribute__((availability(ios,introduced=3_0)));





// - (void)openURL:(NSURL*)url options:(NSDictionary<NSString *, id> *)options completionHandler:(void (^ _Nullable)(BOOL success))completion __attribute__((availability(ios,introduced=10_0))) __attribute__((availability(ios_app_extension,unavailable,message="")));

// - (void)sendEvent:(UIEvent *)event;

// @property(nullable, nonatomic,readonly) UIWindow *keyWindow;
// @property(nonatomic,readonly) NSArray<__kindof UIWindow *> *windows;

// - (BOOL)sendAction:(SEL)action to:(nullable id)target from:(nullable id)sender forEvent:(nullable UIEvent *)event;

// @property(nonatomic,getter=isNetworkActivityIndicatorVisible) BOOL networkActivityIndicatorVisible __attribute__((availability(tvos,unavailable)));

// @property(readonly, nonatomic) UIStatusBarStyle statusBarStyle __attribute__((availability(tvos,unavailable)));

// @property(readonly, nonatomic,getter=isStatusBarHidden) BOOL statusBarHidden __attribute__((availability(tvos,unavailable)));

// @property(readonly, nonatomic) UIInterfaceOrientation statusBarOrientation __attribute__((availability(tvos,unavailable)));
// - (UIInterfaceOrientationMask)supportedInterfaceOrientationsForWindow:(nullable UIWindow *)window __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(tvos,unavailable)));

// @property(nonatomic,readonly) NSTimeInterval statusBarOrientationAnimationDuration __attribute__((availability(tvos,unavailable)));
// @property(nonatomic,readonly) CGRect statusBarFrame __attribute__((availability(tvos,unavailable)));

// @property(nonatomic) NSInteger applicationIconBadgeNumber;

// @property(nonatomic) BOOL applicationSupportsShakeToEdit __attribute__((availability(ios,introduced=3_0))) __attribute__((availability(tvos,unavailable)));

// @property(nonatomic,readonly) UIApplicationState applicationState __attribute__((availability(ios,introduced=4_0)));
// @property(nonatomic,readonly) NSTimeInterval backgroundTimeRemaining __attribute__((availability(ios,introduced=4_0)));

// - (UIBackgroundTaskIdentifier)beginBackgroundTaskWithExpirationHandler:(void(^ _Nullable)(void))handler __attribute__((availability(ios,introduced=4_0))) __attribute__((objc_requires_super));
// - (UIBackgroundTaskIdentifier)beginBackgroundTaskWithName:(nullable NSString *)taskName expirationHandler:(void(^ _Nullable)(void))handler __attribute__((availability(ios,introduced=7_0))) __attribute__((objc_requires_super));
// - (void)endBackgroundTask:(UIBackgroundTaskIdentifier)identifier __attribute__((availability(ios,introduced=4_0))) __attribute__((objc_requires_super));
// - (void)setMinimumBackgroundFetchInterval:(NSTimeInterval)minimumBackgroundFetchInterval __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(tvos,introduced=11.0)));




// @property (nonatomic, readonly) UIBackgroundRefreshStatus backgroundRefreshStatus __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(tvos,introduced=11.0)));

// @property(nonatomic,readonly,getter=isProtectedDataAvailable) BOOL protectedDataAvailable __attribute__((availability(ios,introduced=4_0)));

// @property(nonatomic,readonly) UIUserInterfaceLayoutDirection userInterfaceLayoutDirection __attribute__((availability(ios,introduced=5_0)));


// @property(nonatomic,readonly) UIContentSizeCategory preferredContentSizeCategory __attribute__((availability(ios,introduced=7_0)));

/* @end */


// @interface UIApplication (UIRemoteNotifications)


// - (void)registerForRemoteNotifications __attribute__((availability(ios,introduced=8_0)));

// - (void)unregisterForRemoteNotifications __attribute__((availability(ios,introduced=3_0)));



// @property(nonatomic, readonly, getter=isRegisteredForRemoteNotifications) BOOL registeredForRemoteNotifications __attribute__((availability(ios,introduced=8_0)));




// - (void)registerForRemoteNotificationTypes:(UIRemoteNotificationType)types __attribute__((availability(ios,introduced=3_0,deprecated=8_0,message="" "Use -[UIApplication registerForRemoteNotifications] and UserNotifications Framework's -[UNUserNotificationCenter requestAuthorizationWithOptions:completionHandler:]"))) __attribute__((availability(tvos,unavailable)));


// - (UIRemoteNotificationType)enabledRemoteNotificationTypes __attribute__((availability(ios,introduced=3_0,deprecated=8_0,message="" "Use -[UIApplication isRegisteredForRemoteNotifications] and UserNotifications Framework's -[UNUserNotificationCenter getNotificationSettingsWithCompletionHandler:] to retrieve user-enabled remote notification and user notification settings"))) __attribute__((availability(tvos,unavailable)));

/* @end */



// @interface UIApplication (UILocalNotifications)

// - (void)presentLocalNotificationNow:(UILocalNotification *)notification __attribute__((availability(ios,introduced=4_0,deprecated=10_0,message="" "Use UserNotifications Framework's -[UNUserNotificationCenter addNotificationRequest:withCompletionHandler:]"))) __attribute__((availability(tvos,unavailable)));

// - (void)scheduleLocalNotification:(UILocalNotification *)notification __attribute__((availability(ios,introduced=4_0,deprecated=10_0,message="" "Use UserNotifications Framework's -[UNUserNotificationCenter addNotificationRequest:withCompletionHandler:]"))) __attribute__((availability(tvos,unavailable)));
// - (void)cancelLocalNotification:(UILocalNotification *)notification __attribute__((availability(ios,introduced=4_0,deprecated=10_0,message="" "Use UserNotifications Framework's -[UNUserNotificationCenter removePendingNotificationRequestsWithIdentifiers:]"))) __attribute__((availability(tvos,unavailable)));
// - (void)cancelAllLocalNotifications __attribute__((availability(ios,introduced=4_0,deprecated=10_0,message="" "Use UserNotifications Framework's -[UNUserNotificationCenter removeAllPendingNotificationRequests]"))) __attribute__((availability(tvos,unavailable)));

// @property(nullable,nonatomic,copy) NSArray<UILocalNotification *> *scheduledLocalNotifications __attribute__((availability(ios,introduced=4_0,deprecated=10_0,message="" "Use UserNotifications Framework's -[UNUserNotificationCenter getPendingNotificationRequestsWithCompletionHandler:]"))) __attribute__((availability(tvos,unavailable)));

/* @end */


// @class UIUserNotificationSettings;
#ifndef _REWRITER_typedef_UIUserNotificationSettings
#define _REWRITER_typedef_UIUserNotificationSettings
typedef struct objc_object UIUserNotificationSettings;
typedef struct {} _objc_exc_UIUserNotificationSettings;
#endif

// @interface UIApplication (UIUserNotificationSettings)


// - (void)registerUserNotificationSettings:(UIUserNotificationSettings *)notificationSettings __attribute__((availability(ios,introduced=8_0,deprecated=10_0,message="" "Use UserNotifications Framework's -[UNUserNotificationCenter requestAuthorizationWithOptions:completionHandler:] and -[UNUserNotificationCenter setNotificationCategories:]"))) __attribute__((availability(tvos,unavailable)));



// @property(nonatomic, readonly, nullable) UIUserNotificationSettings *currentUserNotificationSettings __attribute__((availability(ios,introduced=8_0,deprecated=10_0,message="" "Use UserNotifications Framework's -[UNUserNotificationCenter getNotificationSettingsWithCompletionHandler:] and -[UNUserNotificationCenter getNotificationCategoriesWithCompletionHandler:]"))) __attribute__((availability(tvos,unavailable)));




/* @end */


// @interface UIApplication (UIRemoteControlEvents)

// - (void)beginReceivingRemoteControlEvents __attribute__((availability(ios,introduced=4_0)));
// - (void)endReceivingRemoteControlEvents __attribute__((availability(ios,introduced=4_0)));

/* @end */


// @interface UIApplication (UINewsstand)
// - (void)setNewsstandIconImage:(nullable UIImage *)image __attribute__((availability(ios,introduced=5_0,deprecated=9_0,message="" "Newsstand apps now behave like normal apps on SpringBoard"))) __attribute__((availability(tvos,unavailable)));
/* @end */


// @class UIApplicationShortcutItem;
#ifndef _REWRITER_typedef_UIApplicationShortcutItem
#define _REWRITER_typedef_UIApplicationShortcutItem
typedef struct objc_object UIApplicationShortcutItem;
typedef struct {} _objc_exc_UIApplicationShortcutItem;
#endif

// @interface UIApplication (UIShortcutItems)

// @property (nullable, nonatomic, copy) NSArray<UIApplicationShortcutItem *> *shortcutItems __attribute__((availability(ios,introduced=9_0))) __attribute__((availability(tvos,unavailable)));
/* @end */


// @interface UIApplication (UIAlternateApplicationIcons)

// @property (readonly, nonatomic) BOOL supportsAlternateIcons __attribute__((availability(macosx_app_extension,unavailable,message="Extensions may not have alternate icons"))) __attribute__((availability(ios_app_extension,unavailable,message="Extensions may not have alternate icons"))) __attribute__((availability(ios,introduced=10.3))) __attribute__((availability(tvos,introduced=10.2)));


// - (void)setAlternateIconName:(nullable NSString *)alternateIconName completionHandler:(nullable void (^)(NSError *_Nullable error))completionHandler __attribute__((availability(macosx_app_extension,unavailable,message="Extensions may not have alternate icons"))) __attribute__((availability(ios_app_extension,unavailable,message="Extensions may not have alternate icons"))) __attribute__((availability(ios,introduced=10.3))) __attribute__((availability(tvos,introduced=10.2)));


// @property (nullable, readonly, nonatomic) NSString *alternateIconName __attribute__((availability(macosx_app_extension,unavailable,message="Extensions may not have alternate icons"))) __attribute__((availability(ios_app_extension,unavailable,message="Extensions may not have alternate icons"))) __attribute__((availability(ios,introduced=10.3))) __attribute__((availability(tvos,introduced=10.2)));
/* @end */


// @protocol UIStateRestoring;
// @interface UIApplication (UIStateRestoration)



// - (void)extendStateRestoration __attribute__((availability(ios,introduced=6_0)));
// - (void)completeStateRestoration __attribute__((availability(ios,introduced=6_0)));



// - (void)ignoreSnapshotOnNextApplicationLaunch __attribute__((availability(ios,introduced=7_0)));





// + (void)registerObjectForStateRestoration:(id<UIStateRestoring>)object restorationIdentifier:(NSString *)restorationIdentifier __attribute__((availability(ios,introduced=7_0)));
/* @end */






typedef NSString * UIApplicationLaunchOptionsKey;


// @protocol UIApplicationDelegate<NSObject>

/* @optional */

// - (void)applicationDidFinishLaunching:(UIApplication *)application;




// - (BOOL)application:(UIApplication *)application willFinishLaunchingWithOptions:(nullable NSDictionary *)launchOptions __attribute__((availability(ios,introduced=6_0)));
// - (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(nullable NSDictionary *)launchOptions __attribute__((availability(ios,introduced=3_0)));


// - (void)applicationDidBecomeActive:(UIApplication *)application;
// - (void)applicationWillResignActive:(UIApplication *)application;
// - (BOOL)application:(UIApplication *)application handleOpenURL:(NSURL *)url __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Please use application:openURL:options:"))) __attribute__((availability(tvos,unavailable)));
// - (BOOL)application:(UIApplication *)application openURL:(NSURL *)url sourceApplication:(nullable NSString *)sourceApplication annotation:(id)annotation __attribute__((availability(ios,introduced=4_2,deprecated=9_0,message="" "Please use application:openURL:options:"))) __attribute__((availability(tvos,unavailable)));





typedef NSString * UIApplicationOpenURLOptionsKey;


// - (BOOL)application:(UIApplication *)app openURL:(NSURL *)url options:(NSDictionary<UIApplicationOpenURLOptionsKey, id> *)options __attribute__((availability(ios,introduced=9_0)));

// - (void)applicationDidReceiveMemoryWarning:(UIApplication *)application;
// - (void)applicationWillTerminate:(UIApplication *)application;
// - (void)applicationSignificantTimeChange:(UIApplication *)application;

// - (void)application:(UIApplication *)application willChangeStatusBarOrientation:(UIInterfaceOrientation)newStatusBarOrientation duration:(NSTimeInterval)duration __attribute__((availability(tvos,unavailable)));
// - (void)application:(UIApplication *)application didChangeStatusBarOrientation:(UIInterfaceOrientation)oldStatusBarOrientation __attribute__((availability(tvos,unavailable)));

// - (void)application:(UIApplication *)application willChangeStatusBarFrame:(CGRect)newStatusBarFrame __attribute__((availability(tvos,unavailable)));
// - (void)application:(UIApplication *)application didChangeStatusBarFrame:(CGRect)oldStatusBarFrame __attribute__((availability(tvos,unavailable)));


 // - (void)application:(UIApplication *)application didRegisterUserNotificationSettings:(UIUserNotificationSettings *)notificationSettings __attribute__((availability(ios,introduced=8_0,deprecated=10_0,message="" "Use UserNotifications Framework's -[UNUserNotificationCenter requestAuthorizationWithOptions:completionHandler:]"))) __attribute__((availability(tvos,unavailable)));

// - (void)application:(UIApplication *)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)deviceToken __attribute__((availability(ios,introduced=3_0)));

// - (void)application:(UIApplication *)application didFailToRegisterForRemoteNotificationsWithError:(NSError *)error __attribute__((availability(ios,introduced=3_0)));

// - (void)application:(UIApplication *)application didReceiveRemoteNotification:(NSDictionary *)userInfo __attribute__((availability(ios,introduced=3_0,deprecated=10_0,message="" "Use UserNotifications Framework's -[UNUserNotificationCenterDelegate willPresentNotification:withCompletionHandler:] or -[UNUserNotificationCenterDelegate didReceiveNotificationResponse:withCompletionHandler:] for user visible notifications and -[UIApplicationDelegate application:didReceiveRemoteNotification:fetchCompletionHandler:] for silent remote notifications")));

// - (void)application:(UIApplication *)application didReceiveLocalNotification:(UILocalNotification *)notification __attribute__((availability(ios,introduced=4_0,deprecated=10_0,message="" "Use UserNotifications Framework's -[UNUserNotificationCenterDelegate willPresentNotification:withCompletionHandler:] or -[UNUserNotificationCenterDelegate didReceiveNotificationResponse:withCompletionHandler:]"))) __attribute__((availability(tvos,unavailable)));




// - (void)application:(UIApplication *)application handleActionWithIdentifier:(nullable NSString *)identifier forLocalNotification:(UILocalNotification *)notification completionHandler:(void(^)())completionHandler __attribute__((availability(ios,introduced=8_0,deprecated=10_0,message="" "Use UserNotifications Framework's -[UNUserNotificationCenterDelegate didReceiveNotificationResponse:withCompletionHandler:]"))) __attribute__((availability(tvos,unavailable)));

// - (void)application:(UIApplication *)application handleActionWithIdentifier:(nullable NSString *)identifier forRemoteNotification:(NSDictionary *)userInfo withResponseInfo:(NSDictionary *)responseInfo completionHandler:(void(^)())completionHandler __attribute__((availability(ios,introduced=9_0,deprecated=10_0,message="" "Use UserNotifications Framework's -[UNUserNotificationCenterDelegate didReceiveNotificationResponse:withCompletionHandler:]"))) __attribute__((availability(tvos,unavailable)));




// - (void)application:(UIApplication *)application handleActionWithIdentifier:(nullable NSString *)identifier forRemoteNotification:(NSDictionary *)userInfo completionHandler:(void(^)())completionHandler __attribute__((availability(ios,introduced=8_0,deprecated=10_0,message="" "Use UserNotifications Framework's -[UNUserNotificationCenterDelegate didReceiveNotificationResponse:withCompletionHandler:]"))) __attribute__((availability(tvos,unavailable)));

// - (void)application:(UIApplication *)application handleActionWithIdentifier:(nullable NSString *)identifier forLocalNotification:(UILocalNotification *)notification withResponseInfo:(NSDictionary *)responseInfo completionHandler:(void(^)())completionHandler __attribute__((availability(ios,introduced=9_0,deprecated=10_0,message="" "Use UserNotifications Framework's -[UNUserNotificationCenterDelegate didReceiveNotificationResponse:withCompletionHandler:]"))) __attribute__((availability(tvos,unavailable)));




// - (void)application:(UIApplication *)application didReceiveRemoteNotification:(NSDictionary *)userInfo fetchCompletionHandler:(void (^)(UIBackgroundFetchResult result))completionHandler __attribute__((availability(ios,introduced=7_0)));


// - (void)application:(UIApplication *)application performFetchWithCompletionHandler:(void (^)(UIBackgroundFetchResult result))completionHandler __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(tvos,introduced=11.0)));



// - (void)application:(UIApplication *)application performActionForShortcutItem:(UIApplicationShortcutItem *)shortcutItem completionHandler:(void(^)(BOOL succeeded))completionHandler __attribute__((availability(ios,introduced=9_0))) __attribute__((availability(tvos,unavailable)));






// - (void)application:(UIApplication *)application handleEventsForBackgroundURLSession:(NSString *)identifier completionHandler:(void (^)(void))completionHandler __attribute__((availability(ios,introduced=7_0)));

// - (void)application:(UIApplication *)application handleWatchKitExtensionRequest:(nullable NSDictionary *)userInfo reply:(void(^)(NSDictionary * _Nullable replyInfo))reply __attribute__((availability(ios,introduced=8_2)));

// - (void)applicationShouldRequestHealthAuthorization:(UIApplication *)application __attribute__((availability(ios,introduced=9_0)));

// - (void)application:(UIApplication *)application handleIntent:(INIntent *)intent completionHandler:(void(^)(INIntentResponse *intentResponse))completionHandler __attribute__((availability(ios,introduced=11_0)));

// - (void)applicationDidEnterBackground:(UIApplication *)application __attribute__((availability(ios,introduced=4_0)));
// - (void)applicationWillEnterForeground:(UIApplication *)application __attribute__((availability(ios,introduced=4_0)));

// - (void)applicationProtectedDataWillBecomeUnavailable:(UIApplication *)application __attribute__((availability(ios,introduced=4_0)));
// - (void)applicationProtectedDataDidBecomeAvailable:(UIApplication *)application __attribute__((availability(ios,introduced=4_0)));

// @property (nullable, nonatomic, strong) UIWindow *window __attribute__((availability(ios,introduced=5_0)));

// - (UIInterfaceOrientationMask)application:(UIApplication *)application supportedInterfaceOrientationsForWindow:(nullable UIWindow *)window __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(tvos,unavailable)));




typedef NSString * UIApplicationExtensionPointIdentifier;





// - (BOOL)application:(UIApplication *)application shouldAllowExtensionPointIdentifier:(UIApplicationExtensionPointIdentifier)extensionPointIdentifier __attribute__((availability(ios,introduced=8_0)));



// - (nullable UIViewController *) application:(UIApplication *)application viewControllerWithRestorationIdentifierPath:(NSArray *)identifierComponents coder:(NSCoder *)coder __attribute__((availability(ios,introduced=6_0)));
// - (BOOL) application:(UIApplication *)application shouldSaveApplicationState:(NSCoder *)coder __attribute__((availability(ios,introduced=6_0)));
// - (BOOL) application:(UIApplication *)application shouldRestoreApplicationState:(NSCoder *)coder __attribute__((availability(ios,introduced=6_0)));
// - (void) application:(UIApplication *)application willEncodeRestorableStateWithCoder:(NSCoder *)coder __attribute__((availability(ios,introduced=6_0)));
// - (void) application:(UIApplication *)application didDecodeRestorableStateWithCoder:(NSCoder *)coder __attribute__((availability(ios,introduced=6_0)));







// - (BOOL)application:(UIApplication *)application willContinueUserActivityWithType:(NSString *)userActivityType __attribute__((availability(ios,introduced=8_0)));





// - (BOOL)application:(UIApplication *)application continueUserActivity:(NSUserActivity *)userActivity restorationHandler:(void(^)(NSArray * _Nullable restorableObjects))restorationHandler __attribute__((availability(ios,introduced=8_0)));


// - (void)application:(UIApplication *)application didFailToContinueUserActivityWithType:(NSString *)userActivityType error:(NSError *)error __attribute__((availability(ios,introduced=8_0)));


// - (void)application:(UIApplication *)application didUpdateUserActivity:(NSUserActivity *)userActivity __attribute__((availability(ios,introduced=8_0)));





// - (void) application:(UIApplication *)application userDidAcceptCloudKitShareWithMetadata:(CKShareMetadata *)cloudKitShareMetadata __attribute__((availability(ios,introduced=10_0)));

/* @end */


// @interface UIApplication(UIApplicationDeprecated)

// @property(nonatomic,getter=isProximitySensingEnabled) BOOL proximitySensingEnabled __attribute__((availability(ios,introduced=2_0,deprecated=3_0,message="" ))) __attribute__((availability(tvos,unavailable)));
// - (void)setStatusBarHidden:(BOOL)hidden animated:(BOOL)animated __attribute__((availability(ios,introduced=2_0,deprecated=3_2,message="" ))) __attribute__((availability(tvos,unavailable)));


// @property(readwrite, nonatomic) UIInterfaceOrientation statusBarOrientation __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Explicit setting of the status bar orientation is more limited in iOS 6.0 and later"))) __attribute__((availability(tvos,unavailable)));
// - (void)setStatusBarOrientation:(UIInterfaceOrientation)interfaceOrientation animated:(BOOL)animated __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Explicit setting of the status bar orientation is more limited in iOS 6.0 and later"))) __attribute__((availability(tvos,unavailable)));


// @property(readwrite, nonatomic) UIStatusBarStyle statusBarStyle __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use -[UIViewController preferredStatusBarStyle]"))) __attribute__((availability(tvos,unavailable)));
// - (void)setStatusBarStyle:(UIStatusBarStyle)statusBarStyle animated:(BOOL)animated __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use -[UIViewController preferredStatusBarStyle]"))) __attribute__((availability(tvos,unavailable)));


// @property(readwrite, nonatomic,getter=isStatusBarHidden) BOOL statusBarHidden __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use -[UIViewController prefersStatusBarHidden]"))) __attribute__((availability(tvos,unavailable)));
// - (void)setStatusBarHidden:(BOOL)hidden withAnimation:(UIStatusBarAnimation)animation __attribute__((availability(ios,introduced=3_2,deprecated=9_0,message="" "Use -[UIViewController prefersStatusBarHidden]"))) __attribute__((availability(tvos,unavailable)));

// - (BOOL)setKeepAliveTimeout:(NSTimeInterval)timeout handler:(void(^ _Nullable)(void))keepAliveHandler __attribute__((availability(ios,introduced=4_0,deprecated=9_0,message="" "Please use PushKit for VoIP applications instead of calling this method"))) __attribute__((availability(tvos,unavailable)));
// - (void)clearKeepAliveTimeout __attribute__((availability(ios,introduced=4_0,deprecated=9_0,message="" "Please use PushKit for VoIP applications instead of calling this method"))) __attribute__((availability(tvos,unavailable)));

/* @end */




extern "C" __attribute__((visibility ("default"))) int UIApplicationMain(int argc, char * _Nonnull * _Null_unspecified argv, NSString * _Nullable principalClassName, NSString * _Nullable delegateClassName);

extern "C" __attribute__((visibility ("default"))) NSRunLoopMode const UITrackingRunLoopMode;


extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIApplicationDidEnterBackgroundNotification __attribute__((availability(ios,introduced=4_0)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIApplicationWillEnterForegroundNotification __attribute__((availability(ios,introduced=4_0)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIApplicationDidFinishLaunchingNotification;
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIApplicationDidBecomeActiveNotification;
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIApplicationWillResignActiveNotification;
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIApplicationDidReceiveMemoryWarningNotification;
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIApplicationWillTerminateNotification;
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIApplicationSignificantTimeChangeNotification;
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIApplicationWillChangeStatusBarOrientationNotification __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIApplicationDidChangeStatusBarOrientationNotification __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIApplicationStatusBarOrientationUserInfoKey __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIApplicationWillChangeStatusBarFrameNotification __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIApplicationDidChangeStatusBarFrameNotification __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIApplicationStatusBarFrameUserInfoKey __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIApplicationBackgroundRefreshStatusDidChangeNotification __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(tvos,introduced=11.0)));

extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIApplicationProtectedDataWillBecomeUnavailable __attribute__((availability(ios,introduced=4_0)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIApplicationProtectedDataDidBecomeAvailable __attribute__((availability(ios,introduced=4_0)));
extern "C" __attribute__((visibility ("default"))) UIApplicationLaunchOptionsKey const UIApplicationLaunchOptionsURLKey __attribute__((availability(ios,introduced=3_0)));
extern "C" __attribute__((visibility ("default"))) UIApplicationLaunchOptionsKey const UIApplicationLaunchOptionsSourceApplicationKey __attribute__((availability(ios,introduced=3_0)));
extern "C" __attribute__((visibility ("default"))) UIApplicationLaunchOptionsKey const UIApplicationLaunchOptionsRemoteNotificationKey __attribute__((availability(ios,introduced=3_0))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) UIApplicationLaunchOptionsKey const UIApplicationLaunchOptionsLocalNotificationKey __attribute__((availability(ios,introduced=4_0,deprecated=10_0,message="" "Use UserNotifications Framework's -[UNUserNotificationCenterDelegate didReceiveNotificationResponse:withCompletionHandler:]"))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) UIApplicationLaunchOptionsKey const UIApplicationLaunchOptionsAnnotationKey __attribute__((availability(ios,introduced=3_2)));
extern "C" __attribute__((visibility ("default"))) UIApplicationLaunchOptionsKey const UIApplicationLaunchOptionsLocationKey __attribute__((availability(ios,introduced=4_0)));
extern "C" __attribute__((visibility ("default"))) UIApplicationLaunchOptionsKey const UIApplicationLaunchOptionsNewsstandDownloadsKey __attribute__((availability(ios,introduced=5_0))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) UIApplicationLaunchOptionsKey const UIApplicationLaunchOptionsBluetoothCentralsKey __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility ("default"))) UIApplicationLaunchOptionsKey const UIApplicationLaunchOptionsBluetoothPeripheralsKey __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility ("default"))) UIApplicationLaunchOptionsKey const UIApplicationLaunchOptionsShortcutItemKey __attribute__((availability(ios,introduced=9_0))) __attribute__((availability(tvos,unavailable)));

extern "C" __attribute__((visibility ("default"))) UIApplicationLaunchOptionsKey const UIApplicationLaunchOptionsUserActivityDictionaryKey __attribute__((availability(ios,introduced=8_0)));
extern "C" __attribute__((visibility ("default"))) UIApplicationLaunchOptionsKey const UIApplicationLaunchOptionsUserActivityTypeKey __attribute__((availability(ios,introduced=8_0)));
extern "C" __attribute__((visibility ("default"))) UIApplicationLaunchOptionsKey const UIApplicationLaunchOptionsCloudKitShareMetadataKey __attribute__((availability(ios,introduced=10_0))) __attribute__((availability(tvos,unavailable)));


extern "C" __attribute__((visibility ("default"))) NSString *const UIApplicationOpenSettingsURLString __attribute__((availability(ios,introduced=8_0)));







extern "C" __attribute__((visibility ("default"))) UIApplicationOpenURLOptionsKey const UIApplicationOpenURLOptionsSourceApplicationKey __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility ("default"))) UIApplicationOpenURLOptionsKey const UIApplicationOpenURLOptionsAnnotationKey __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility ("default"))) UIApplicationOpenURLOptionsKey const UIApplicationOpenURLOptionsOpenInPlaceKey __attribute__((availability(ios,introduced=9_0)));



extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIApplicationUserDidTakeScreenshotNotification __attribute__((availability(ios,introduced=7_0)));





extern "C" __attribute__((visibility ("default"))) UIApplicationExtensionPointIdentifier const UIApplicationKeyboardExtensionPointIdentifier __attribute__((availability(ios,introduced=8_0)));






extern "C" __attribute__((visibility ("default"))) NSString *const UIApplicationOpenURLOptionUniversalLinksOnly __attribute__((availability(ios,introduced=10_0)));
#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin





extern "C" __attribute__((visibility ("default"))) NSString *const UIStateRestorationViewControllerStoryboardKey __attribute__((availability(ios,introduced=6_0)));


extern "C" __attribute__((visibility ("default"))) NSString *const UIApplicationStateRestorationBundleVersionKey __attribute__((availability(ios,introduced=6_0)));


extern "C" __attribute__((visibility ("default"))) NSString *const UIApplicationStateRestorationUserInterfaceIdiomKey __attribute__((availability(ios,introduced=6_0)));


extern "C" __attribute__((visibility ("default"))) NSString *const UIApplicationStateRestorationTimestampKey __attribute__((availability(ios,introduced=7_0)));


extern "C" __attribute__((visibility ("default"))) NSString *const UIApplicationStateRestorationSystemVersionKey __attribute__((availability(ios,introduced=7_0)));

// @class UIView;
#ifndef _REWRITER_typedef_UIView
#define _REWRITER_typedef_UIView
typedef struct objc_object UIView;
typedef struct {} _objc_exc_UIView;
#endif

// @class UIViewController;
#ifndef _REWRITER_typedef_UIViewController
#define _REWRITER_typedef_UIViewController
typedef struct objc_object UIViewController;
typedef struct {} _objc_exc_UIViewController;
#endif





// @protocol UIViewControllerRestoration
// + (nullable UIViewController *) viewControllerWithRestorationIdentifierPath:(NSArray *)identifierComponents coder:(NSCoder *)coder;
/* @end */


// @protocol UIDataSourceModelAssociation
// - (nullable NSString *) modelIdentifierForElementAtIndexPath:(NSIndexPath *)idx inView:(UIView *)view;
// - (nullable NSIndexPath *) indexPathForElementWithModelIdentifier:(NSString *)identifier inView:(UIView *)view;
/* @end */




// @protocol UIObjectRestoration;




// @protocol UIStateRestoring <NSObject>
/* @optional */



// @property (nonatomic, readonly, nullable) id<UIStateRestoring> restorationParent;



// @property (nonatomic, readonly, nullable) Class<UIObjectRestoration> objectRestorationClass;




// - (void) encodeRestorableStateWithCoder:(NSCoder *)coder;
// - (void) decodeRestorableStateWithCoder:(NSCoder *)coder;





// - (void) applicationFinishedRestoringState;
/* @end */




// @protocol UIObjectRestoration
// + (nullable id<UIStateRestoring>) objectWithRestorationIdentifierPath:(NSArray<NSString *> *)identifierComponents coder:(NSCoder *)coder;
/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIView;
#ifndef _REWRITER_typedef_UIView
#define _REWRITER_typedef_UIView
typedef struct objc_object UIView;
typedef struct {} _objc_exc_UIView;
#endif

// @class UINavigationItem;
#ifndef _REWRITER_typedef_UINavigationItem
#define _REWRITER_typedef_UINavigationItem
typedef struct objc_object UINavigationItem;
typedef struct {} _objc_exc_UINavigationItem;
#endif

#ifndef _REWRITER_typedef_UIBarButtonItem
#define _REWRITER_typedef_UIBarButtonItem
typedef struct objc_object UIBarButtonItem;
typedef struct {} _objc_exc_UIBarButtonItem;
#endif

#ifndef _REWRITER_typedef_UITabBarItem
#define _REWRITER_typedef_UITabBarItem
typedef struct objc_object UITabBarItem;
typedef struct {} _objc_exc_UITabBarItem;
#endif

// @class UISearchDisplayController;
#ifndef _REWRITER_typedef_UISearchDisplayController
#define _REWRITER_typedef_UISearchDisplayController
typedef struct objc_object UISearchDisplayController;
typedef struct {} _objc_exc_UISearchDisplayController;
#endif

// @class UIPopoverController;
#ifndef _REWRITER_typedef_UIPopoverController
#define _REWRITER_typedef_UIPopoverController
typedef struct objc_object UIPopoverController;
typedef struct {} _objc_exc_UIPopoverController;
#endif

// @class UIStoryboard;
#ifndef _REWRITER_typedef_UIStoryboard
#define _REWRITER_typedef_UIStoryboard
typedef struct objc_object UIStoryboard;
typedef struct {} _objc_exc_UIStoryboard;
#endif

#ifndef _REWRITER_typedef_UIStoryboardSegue
#define _REWRITER_typedef_UIStoryboardSegue
typedef struct objc_object UIStoryboardSegue;
typedef struct {} _objc_exc_UIStoryboardSegue;
#endif

#ifndef _REWRITER_typedef_UIStoryboardUnwindSegueSource
#define _REWRITER_typedef_UIStoryboardUnwindSegueSource
typedef struct objc_object UIStoryboardUnwindSegueSource;
typedef struct {} _objc_exc_UIStoryboardUnwindSegueSource;
#endif

// @class UIScrollView;
#ifndef _REWRITER_typedef_UIScrollView
#define _REWRITER_typedef_UIScrollView
typedef struct objc_object UIScrollView;
typedef struct {} _objc_exc_UIScrollView;
#endif

// @protocol UIViewControllerTransitionCoordinator;

typedef NSInteger UIModalTransitionStyle; enum {
    UIModalTransitionStyleCoverVertical = 0,
    UIModalTransitionStyleFlipHorizontal __attribute__((availability(tvos,unavailable))),
    UIModalTransitionStyleCrossDissolve,
    UIModalTransitionStylePartialCurl __attribute__((availability(ios,introduced=3_2))) __attribute__((availability(tvos,unavailable))),
};

typedef NSInteger UIModalPresentationStyle; enum {
        UIModalPresentationFullScreen = 0,
        UIModalPresentationPageSheet __attribute__((availability(ios,introduced=3_2))) __attribute__((availability(tvos,unavailable))),
        UIModalPresentationFormSheet __attribute__((availability(ios,introduced=3_2))) __attribute__((availability(tvos,unavailable))),
        UIModalPresentationCurrentContext __attribute__((availability(ios,introduced=3_2))),
        UIModalPresentationCustom __attribute__((availability(ios,introduced=7_0))),
        UIModalPresentationOverFullScreen __attribute__((availability(ios,introduced=8_0))),
        UIModalPresentationOverCurrentContext __attribute__((availability(ios,introduced=8_0))),
        UIModalPresentationPopover __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable))),
        UIModalPresentationBlurOverFullScreen __attribute__((availability(tvos,introduced=11_0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))),
        UIModalPresentationNone __attribute__((availability(ios,introduced=7_0))) = -1,
};

// @protocol UIContentContainer <NSObject>

// @property (nonatomic, readonly) CGSize preferredContentSize __attribute__((availability(ios,introduced=8_0)));
// - (void)preferredContentSizeDidChangeForChildContentContainer:(id <UIContentContainer>)container __attribute__((availability(ios,introduced=8_0)));







// - (void)systemLayoutFittingSizeDidChangeForChildContentContainer:(id <UIContentContainer>)container __attribute__((availability(ios,introduced=8_0)));






// - (CGSize)sizeForChildContentContainer:(id <UIContentContainer>)container withParentContainerSize:(CGSize)parentSize __attribute__((availability(ios,introduced=8_0)));






// - (void)viewWillTransitionToSize:(CGSize)size withTransitionCoordinator:(id <UIViewControllerTransitionCoordinator>)coordinator __attribute__((availability(ios,introduced=8_0)));






// - (void)willTransitionToTraitCollection:(UITraitCollection *)newCollection withTransitionCoordinator:(id <UIViewControllerTransitionCoordinator>)coordinator __attribute__((availability(ios,introduced=8_0)));

/* @end */



extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIViewControllerShowDetailTargetDidChangeNotification __attribute__((availability(ios,introduced=8_0)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) 
#ifndef _REWRITER_typedef_UIViewController
#define _REWRITER_typedef_UIViewController
typedef struct objc_object UIViewController;
typedef struct {} _objc_exc_UIViewController;
#endif

struct UIViewController_IMPL {
	struct UIResponder_IMPL UIResponder_IVARS;
};

// - (instancetype)initWithNibName:(nullable NSString *)nibNameOrNil bundle:(nullable NSBundle *)nibBundleOrNil __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

// @property(null_resettable, nonatomic,strong) UIView *view;
// - (void)loadView;
// - (void)loadViewIfNeeded __attribute__((availability(ios,introduced=9_0)));
// @property(nullable, nonatomic, readonly, strong) UIView *viewIfLoaded __attribute__((availability(ios,introduced=9_0)));

// - (void)viewWillUnload __attribute__((availability(ios,introduced=5_0,deprecated=6_0,message="" ))) __attribute__((availability(tvos,unavailable)));
// - (void)viewDidUnload __attribute__((availability(ios,introduced=3_0,deprecated=6_0,message="" ))) __attribute__((availability(tvos,unavailable)));

// - (void)viewDidLoad;

// @property(nonatomic, readonly, getter=isViewLoaded) BOOL viewLoaded __attribute__((availability(ios,introduced=3_0)));




// @property(nullable, nonatomic, readonly, copy) NSString *nibName;
// @property(nullable, nonatomic, readonly, strong) NSBundle *nibBundle;
// @property(nullable, nonatomic, readonly, strong) UIStoryboard *storyboard __attribute__((availability(ios,introduced=5_0)));

// - (void)performSegueWithIdentifier:(NSString *)identifier sender:(nullable id)sender __attribute__((availability(ios,introduced=5_0)));
// - (BOOL)shouldPerformSegueWithIdentifier:(NSString *)identifier sender:(nullable id)sender __attribute__((availability(ios,introduced=6_0)));
// - (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(nullable id)sender __attribute__((availability(ios,introduced=5_0)));


// - (BOOL)canPerformUnwindSegueAction:(SEL)action fromViewController:(UIViewController *)fromViewController withSender:(id)sender __attribute__((availability(ios,introduced=6_0)));





// - (NSArray<UIViewController *> *)allowedChildViewControllersForUnwindingFromSource:(UIStoryboardUnwindSegueSource *)source __attribute__((availability(ios,introduced=9_0)));




// - (nullable UIViewController *)childViewControllerContainingSegueSource:(UIStoryboardUnwindSegueSource *)source __attribute__((availability(ios,introduced=9_0)));



// - (nullable UIViewController *)viewControllerForUnwindSegueAction:(SEL)action fromViewController:(UIViewController *)fromViewController withSender:(nullable id)sender __attribute__((availability(ios,introduced=6_0,deprecated=9_0,message="" )));


// - (void)unwindForSegue:(UIStoryboardSegue *)unwindSegue towardsViewController:(UIViewController *)subsequentVC __attribute__((availability(ios,introduced=9_0)));




// - (nullable UIStoryboardSegue *)segueForUnwindingToViewController:(UIViewController *)toViewController fromViewController:(UIViewController *)fromViewController identifier:(nullable NSString *)identifier __attribute__((availability(ios,introduced=6_0,deprecated=9_0,message="" )));

// - (void)viewWillAppear:(BOOL)animated;
// - (void)viewDidAppear:(BOOL)animated;
// - (void)viewWillDisappear:(BOOL)animated;
// - (void)viewDidDisappear:(BOOL)animated;


// - (void)viewWillLayoutSubviews __attribute__((availability(ios,introduced=5_0)));

// - (void)viewDidLayoutSubviews __attribute__((availability(ios,introduced=5_0)));

// @property(nullable, nonatomic,copy) NSString *title;

// - (void)didReceiveMemoryWarning;






// @property(nullable,nonatomic,weak,readonly) UIViewController *parentViewController;


// @property(nullable, nonatomic,readonly) UIViewController *modalViewController __attribute__((availability(ios,introduced=2_0,deprecated=6_0,message="" ))) __attribute__((availability(tvos,unavailable)));


// @property(nullable, nonatomic,readonly) UIViewController *presentedViewController __attribute__((availability(ios,introduced=5_0)));


// @property(nullable, nonatomic,readonly) UIViewController *presentingViewController __attribute__((availability(ios,introduced=5_0)));






// @property(nonatomic,assign) BOOL definesPresentationContext __attribute__((availability(ios,introduced=5_0)));


// @property(nonatomic,assign) BOOL providesPresentationContextTransitionStyle __attribute__((availability(ios,introduced=5_0)));


// @property (nonatomic) BOOL restoresFocusAfterTransition __attribute__((availability(ios,introduced=10_0)));
// @property(nonatomic, readonly, getter=isBeingPresented) BOOL beingPresented __attribute__((availability(ios,introduced=5_0)));
// @property(nonatomic, readonly, getter=isBeingDismissed) BOOL beingDismissed __attribute__((availability(ios,introduced=5_0)));

// @property(nonatomic, readonly, getter=isMovingToParentViewController) BOOL movingToParentViewController __attribute__((availability(ios,introduced=5_0)));
// @property(nonatomic, readonly, getter=isMovingFromParentViewController) BOOL movingFromParentViewController __attribute__((availability(ios,introduced=5_0)));
// - (void)presentViewController:(UIViewController *)viewControllerToPresent animated: (BOOL)flag completion:(void (^ _Nullable)(void))completion __attribute__((availability(ios,introduced=5_0)));

// - (void)dismissViewControllerAnimated: (BOOL)flag completion: (void (^ _Nullable)(void))completion __attribute__((availability(ios,introduced=5_0)));


// - (void)presentModalViewController:(UIViewController *)modalViewController animated:(BOOL)animated __attribute__((availability(ios,introduced=2_0,deprecated=6_0,message="" ))) __attribute__((availability(tvos,unavailable)));


// - (void)dismissModalViewControllerAnimated:(BOOL)animated __attribute__((availability(ios,introduced=2_0,deprecated=6_0,message="" ))) __attribute__((availability(tvos,unavailable)));






// @property(nonatomic,assign) UIModalTransitionStyle modalTransitionStyle __attribute__((availability(ios,introduced=3_0)));
// @property(nonatomic,assign) UIModalPresentationStyle modalPresentationStyle __attribute__((availability(ios,introduced=3_2)));

// @property(nonatomic,assign) BOOL modalPresentationCapturesStatusBarAppearance __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));



// @property(nonatomic, readonly) BOOL disablesAutomaticKeyboardDismissal __attribute__((availability(ios,introduced=4_3)));




// @property(nonatomic,assign) BOOL wantsFullScreenLayout __attribute__((availability(ios,introduced=3_0,deprecated=7_0,message="" ))) __attribute__((availability(tvos,unavailable)));

// @property(nonatomic,assign) UIRectEdge edgesForExtendedLayout __attribute__((availability(ios,introduced=7_0)));
// @property(nonatomic,assign) BOOL extendedLayoutIncludesOpaqueBars __attribute__((availability(ios,introduced=7_0)));
// @property(nonatomic,assign) BOOL automaticallyAdjustsScrollViewInsets __attribute__((availability(ios,introduced=7.0,deprecated=11.0,message="Use UIScrollView's contentInsetAdjustmentBehavior instead"))) __attribute__((availability(tvos,introduced=7.0,deprecated=11.0,message="Use UIScrollView's contentInsetAdjustmentBehavior instead")));



// @property (nonatomic) CGSize preferredContentSize __attribute__((availability(ios,introduced=7_0)));



// @property(nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));
// @property(nonatomic, readonly) BOOL prefersStatusBarHidden __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));

// @property(nonatomic, readonly) UIStatusBarAnimation preferredStatusBarUpdateAnimation __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));
// - (void)setNeedsStatusBarAppearanceUpdate __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));


// - (nullable UIViewController *)targetViewControllerForAction:(SEL)action sender:(nullable id)sender __attribute__((availability(ios,introduced=8_0)));



// - (void)showViewController:(UIViewController *)vc sender:(nullable id)sender __attribute__((availability(ios,introduced=8_0)));


// - (void)showDetailViewController:(UIViewController *)vc sender:(nullable id)sender __attribute__((availability(ios,introduced=8_0)));


// @property (nonatomic, readonly) UIUserInterfaceStyle preferredUserInterfaceStyle __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable)));


// - (void)setNeedsUserInterfaceAppearanceUpdate __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable)));

/* @end */



// @interface UIViewController (UIViewControllerRotation)



// + (void)attemptRotationToDeviceOrientation __attribute__((availability(ios,introduced=5_0))) __attribute__((availability(tvos,unavailable)));


// - (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)toInterfaceOrientation __attribute__((availability(ios,introduced=2_0,deprecated=6_0,message="" ))) __attribute__((availability(tvos,unavailable)));



// @property(nonatomic, readonly) BOOL shouldAutorotate __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(tvos,unavailable)));
// @property(nonatomic, readonly) UIInterfaceOrientationMask supportedInterfaceOrientations __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(tvos,unavailable)));

// @property(nonatomic, readonly) UIInterfaceOrientation preferredInterfaceOrientationForPresentation __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(tvos,unavailable)));
// - (nullable UIView *)rotatingHeaderView __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Header views are animated along with the rest of the view hierarchy"))) __attribute__((availability(tvos,unavailable)));
// - (nullable UIView *)rotatingFooterView __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Footer views are animated along with the rest of the view hierarchy"))) __attribute__((availability(tvos,unavailable)));

// @property(nonatomic,readonly) UIInterfaceOrientation interfaceOrientation __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" ))) __attribute__((availability(tvos,unavailable)));


// - (void)willRotateToInterfaceOrientation:(UIInterfaceOrientation)toInterfaceOrientation duration:(NSTimeInterval)duration __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Implement viewWillTransitionToSize:withTransitionCoordinator: instead"))) __attribute__((availability(tvos,unavailable)));
// - (void)didRotateFromInterfaceOrientation:(UIInterfaceOrientation)fromInterfaceOrientation __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" ))) __attribute__((availability(tvos,unavailable)));

// - (void)willAnimateRotationToInterfaceOrientation:(UIInterfaceOrientation)toInterfaceOrientation duration:(NSTimeInterval)duration __attribute__((availability(ios,introduced=3_0,deprecated=8_0,message="" "Implement viewWillTransitionToSize:withTransitionCoordinator: instead"))) __attribute__((availability(tvos,unavailable)));

// - (void)willAnimateFirstHalfOfRotationToInterfaceOrientation:(UIInterfaceOrientation)toInterfaceOrientation duration:(NSTimeInterval)duration __attribute__((availability(ios,introduced=2_0,deprecated=5_0,message="" ))) __attribute__((availability(tvos,unavailable)));
// - (void)didAnimateFirstHalfOfRotationToInterfaceOrientation:(UIInterfaceOrientation)toInterfaceOrientation __attribute__((availability(ios,introduced=2_0,deprecated=5_0,message="" ))) __attribute__((availability(tvos,unavailable)));
// - (void)willAnimateSecondHalfOfRotationFromInterfaceOrientation:(UIInterfaceOrientation)fromInterfaceOrientation duration:(NSTimeInterval)duration __attribute__((availability(ios,introduced=2_0,deprecated=5_0,message="" ))) __attribute__((availability(tvos,unavailable)));

/* @end */




// @interface UIViewController (UIViewControllerEditing)

// @property(nonatomic,getter=isEditing) BOOL editing;
// - (void)setEditing:(BOOL)editing animated:(BOOL)animated;


// @property(nonatomic, readonly) UIBarButtonItem *editButtonItem;




/* @end */


// @interface UIViewController (UISearchDisplayControllerSupport)

// @property(nullable, nonatomic, readonly, strong) UISearchDisplayController *searchDisplayController __attribute__((availability(ios,introduced=3_0,deprecated=8_0,message="" ))) __attribute__((availability(tvos,unavailable)));

/* @end */








extern "C" __attribute__((visibility ("default"))) NSExceptionName const UIViewControllerHierarchyInconsistencyException __attribute__((availability(ios,introduced=5_0)));






// @interface UIViewController (UIContainerViewControllerProtectedMethods)


// @property(nonatomic,readonly) NSArray<__kindof UIViewController *> *childViewControllers __attribute__((availability(ios,introduced=5_0)));






// - (void)addChildViewController:(UIViewController *)childController __attribute__((availability(ios,introduced=5_0)));





// - (void)removeFromParentViewController __attribute__((availability(ios,introduced=5_0)));
// - (void)transitionFromViewController:(UIViewController *)fromViewController toViewController:(UIViewController *)toViewController duration:(NSTimeInterval)duration options:(UIViewAnimationOptions)options animations:(void (^ _Nullable)(void))animations completion:(void (^ _Nullable)(BOOL finished))completion __attribute__((availability(ios,introduced=5_0)));






// - (void)beginAppearanceTransition:(BOOL)isAppearing animated:(BOOL)animated __attribute__((availability(ios,introduced=5.0)));
// - (void)endAppearanceTransition __attribute__((availability(ios,introduced=5.0)));



// @property(nonatomic, readonly, nullable) UIViewController *childViewControllerForStatusBarStyle __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));
// @property(nonatomic, readonly, nullable) UIViewController *childViewControllerForStatusBarHidden __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));






// - (void)setOverrideTraitCollection:(nullable UITraitCollection *)collection forChildViewController:(UIViewController *)childViewController __attribute__((availability(ios,introduced=8_0)));
// - (nullable UITraitCollection *)overrideTraitCollectionForChildViewController:(UIViewController *)childViewController __attribute__((availability(ios,introduced=8_0)));


// @property (nonatomic, readonly, nullable) UIViewController *childViewControllerForUserInterfaceStyle __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable)));

/* @end */


// @interface UIViewController (UIContainerViewControllerCallbacks)
// - (BOOL)automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers __attribute__((availability(ios,introduced=5_0,deprecated=6_0,message="" ))) __attribute__((availability(tvos,unavailable)));
// - (BOOL)shouldAutomaticallyForwardRotationMethods __attribute__((availability(ios,introduced=6_0,deprecated=8_0,message="" "Manually forward viewWillTransitionToSize:withTransitionCoordinator: if necessary"))) __attribute__((availability(tvos,unavailable)));


// @property(nonatomic, readonly) BOOL shouldAutomaticallyForwardAppearanceMethods __attribute__((availability(ios,introduced=6_0)));
// - (void)willMoveToParentViewController:(nullable UIViewController *)parent __attribute__((availability(ios,introduced=5_0)));
// - (void)didMoveToParentViewController:(nullable UIViewController *)parent __attribute__((availability(ios,introduced=5_0)));

/* @end */


// @interface UIViewController (UIStateRestoration) <UIStateRestoring>
// @property (nullable, nonatomic, copy) NSString *restorationIdentifier __attribute__((availability(ios,introduced=6_0)));
// @property (nullable, nonatomic, readwrite, assign) Class<UIViewControllerRestoration> restorationClass __attribute__((availability(ios,introduced=6_0)));
// - (void) encodeRestorableStateWithCoder:(NSCoder *)coder __attribute__((availability(ios,introduced=6_0)));
// - (void) decodeRestorableStateWithCoder:(NSCoder *)coder __attribute__((availability(ios,introduced=6_0)));
// - (void) applicationFinishedRestoringState __attribute__((availability(ios,introduced=7_0)));
/* @end */


// @interface UIViewController (UIConstraintBasedLayoutCoreMethods)
// - (void)updateViewConstraints __attribute__((availability(ios,introduced=6_0)));
/* @end */


// @protocol UIViewControllerTransitioningDelegate;

// @interface UIViewController(UIViewControllerTransitioning)

// @property (nullable, nonatomic, weak) id <UIViewControllerTransitioningDelegate> transitioningDelegate __attribute__((availability(ios,introduced=7_0)));

/* @end */


// @interface UIViewController (UILayoutSupport)

// @property(nonatomic,readonly,strong) id<UILayoutSupport> topLayoutGuide __attribute__((availability(ios,introduced=7.0,deprecated=11.0,message="Use view.safeAreaLayoutGuide.topAnchor instead of topLayoutGuide.bottomAnchor"))) __attribute__((availability(tvos,introduced=7.0,deprecated=11.0,message="Use view.safeAreaLayoutGuide.topAnchor instead of topLayoutGuide.bottomAnchor")));
// @property(nonatomic,readonly,strong) id<UILayoutSupport> bottomLayoutGuide __attribute__((availability(ios,introduced=7.0,deprecated=11.0,message="Use view.safeAreaLayoutGuide.bottomAnchor instead of bottomLayoutGuide.topAnchor"))) __attribute__((availability(tvos,introduced=7.0,deprecated=11.0,message="Use view.safeAreaLayoutGuide.bottomAnchor instead of bottomLayoutGuide.topAnchor")));




// @property(nonatomic) UIEdgeInsets additionalSafeAreaInsets __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));





// @property(nonatomic,readonly) NSDirectionalEdgeInsets systemMinimumLayoutMargins __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));





// @property(nonatomic) BOOL viewRespectsSystemMinimumLayoutMargins __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));

// - (void)viewLayoutMarginsDidChange __attribute__((objc_requires_super)) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));
// - (void)viewSafeAreaInsetsDidChange __attribute__((objc_requires_super)) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));

/* @end */


// @interface UIViewController (UIKeyCommand)

// - (void)addKeyCommand:(UIKeyCommand *)keyCommand __attribute__((availability(ios,introduced=9_0)));
// - (void)removeKeyCommand:(UIKeyCommand *)keyCommand __attribute__((availability(ios,introduced=9_0)));

/* @end */


// @class NSExtensionContext;
#ifndef _REWRITER_typedef_NSExtensionContext
#define _REWRITER_typedef_NSExtensionContext
typedef struct objc_object NSExtensionContext;
typedef struct {} _objc_exc_NSExtensionContext;
#endif


// @interface UIViewController(NSExtensionAdditions) <NSExtensionRequestHandling>


// @property (nullable, nonatomic,readonly,strong) NSExtensionContext *extensionContext __attribute__((availability(ios,introduced=8_0)));

/* @end */


// @class UIPresentationController;
#ifndef _REWRITER_typedef_UIPresentationController
#define _REWRITER_typedef_UIPresentationController
typedef struct objc_object UIPresentationController;
typedef struct {} _objc_exc_UIPresentationController;
#endif

#ifndef _REWRITER_typedef_UIPopoverPresentationController
#define _REWRITER_typedef_UIPopoverPresentationController
typedef struct objc_object UIPopoverPresentationController;
typedef struct {} _objc_exc_UIPopoverPresentationController;
#endif


// @interface UIViewController (UIAdaptivePresentations)
// @property (nullable, nonatomic,readonly) UIPresentationController *presentationController __attribute__((availability(ios,introduced=8_0)));
// @property (nullable, nonatomic,readonly) UIPopoverPresentationController *popoverPresentationController __attribute__((availability(ios,introduced=8_0)));
/* @end */



// @protocol UIViewControllerPreviewingDelegate;

// @protocol UIViewControllerPreviewing <NSObject>


// @property (nonatomic, readonly) UIGestureRecognizer *previewingGestureRecognizerForFailureRelationship __attribute__((availability(ios,introduced=9_0)));

// @property (nonatomic, readonly) id<UIViewControllerPreviewingDelegate> delegate __attribute__((availability(ios,introduced=9_0)));
// @property (nonatomic, readonly) UIView *sourceView __attribute__((availability(ios,introduced=9_0)));




// @property (nonatomic) CGRect sourceRect __attribute__((availability(ios,introduced=9_0)));

/* @end */



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0))) // @protocol UIViewControllerPreviewingDelegate <NSObject>


// - (nullable UIViewController *)previewingContext:(id <UIViewControllerPreviewing>)previewingContext viewControllerForLocation:(CGPoint)location __attribute__((availability(ios,introduced=9_0)));
// - (void)previewingContext:(id <UIViewControllerPreviewing>)previewingContext commitViewController:(UIViewController *)viewControllerToCommit __attribute__((availability(ios,introduced=9_0)));

/* @end */


// @interface UIViewController (UIViewControllerPreviewingRegistration)


// - (id <UIViewControllerPreviewing>)registerForPreviewingWithDelegate:(id<UIViewControllerPreviewingDelegate>)delegate sourceView:(UIView *)sourceView __attribute__((availability(ios,introduced=9_0)));
// - (void)unregisterForPreviewingWithContext:(id <UIViewControllerPreviewing>)previewing __attribute__((availability(ios,introduced=9_0)));

/* @end */


// @interface UIViewController (UIScreenEdgesDeferringSystemGestures)


// - (nullable UIViewController *)childViewControllerForScreenEdgesDeferringSystemGestures __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));


// - (UIRectEdge)preferredScreenEdgesDeferringSystemGestures __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));


// - (void)setNeedsUpdateOfScreenEdgesDeferringSystemGestures __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

/* @end */



// @interface UIViewController (UIHomeIndicatorAutoHidden)


// - (nullable UIViewController *)childViewControllerForHomeIndicatorAutoHidden __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));


// - (BOOL)prefersHomeIndicatorAutoHidden __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));


// - (void)setNeedsUpdateOfHomeIndicatorAutoHidden __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

/* @end */



// @protocol UIPreviewActionItem;

// @interface UIViewController ()


// @property(nonatomic, readonly) NSArray <id <UIPreviewActionItem>> *previewActionItems __attribute__((availability(ios,introduced=9_0)));




/* @end */



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0))) // @protocol UIPreviewActionItem <NSObject>
// @property(nonatomic, copy, readonly) NSString *title;
/* @end */


typedef NSInteger UIPreviewActionStyle; enum {
    UIPreviewActionStyleDefault=0,
    UIPreviewActionStyleSelected,
    UIPreviewActionStyleDestructive,
} __attribute__((availability(ios,introduced=9_0)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0))) 
#ifndef _REWRITER_typedef_UIPreviewAction
#define _REWRITER_typedef_UIPreviewAction
typedef struct objc_object UIPreviewAction;
typedef struct {} _objc_exc_UIPreviewAction;
#endif

struct UIPreviewAction_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property(nonatomic, copy, readonly) void (^handler)(id<UIPreviewActionItem> action, UIViewController *previewViewController);

// + (instancetype)actionWithTitle:(NSString *)title style:(UIPreviewActionStyle)style handler:(void (^)(UIPreviewAction *action, UIViewController *previewViewController))handler;

/* @end */


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0))) 
#ifndef _REWRITER_typedef_UIPreviewActionGroup
#define _REWRITER_typedef_UIPreviewActionGroup
typedef struct objc_object UIPreviewActionGroup;
typedef struct {} _objc_exc_UIPreviewActionGroup;
#endif

struct UIPreviewActionGroup_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};

// + (instancetype)actionGroupWithTitle:(NSString *)title style:(UIPreviewActionStyle)style actions:(NSArray<UIPreviewAction *> *)actions;
/* @end */

#pragma clang assume_nonnull end



#pragma clang assume_nonnull begin

typedef void (*UIActivityViewControllerCompletionHandler)(UIActivityType _Nullable activityType, BOOL completed);
typedef void (*UIActivityViewControllerCompletionWithItemsHandler)(UIActivityType _Nullable activityType, BOOL completed, NSArray * _Nullable returnedItems, NSError * _Nullable activityError);

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIActivityViewController
#define _REWRITER_typedef_UIActivityViewController
typedef struct objc_object UIActivityViewController;
typedef struct {} _objc_exc_UIActivityViewController;
#endif

struct UIActivityViewController_IMPL {
	struct UIViewController_IMPL UIViewController_IVARS;
};


// - (instancetype)init __attribute__((unavailable));
// - (instancetype)initWithNibName:(nullable NSString *)nibNameOrNil bundle:(nullable NSBundle *)nibBundleOrNil __attribute__((unavailable));
// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((unavailable));
// - (instancetype)initWithActivityItems:(NSArray *)activityItems applicationActivities:(nullable NSArray<__kindof UIActivity *> *)applicationActivities __attribute__((objc_designated_initializer));

// @property(nullable, nonatomic, copy) UIActivityViewControllerCompletionHandler completionHandler __attribute__((availability(ios,introduced=6_0,deprecated=8_0,message="" "Use completionWithItemsHandler instead.")));
// @property(nullable, nonatomic, copy) UIActivityViewControllerCompletionWithItemsHandler completionWithItemsHandler __attribute__((availability(ios,introduced=8_0)));

// @property(nullable, nonatomic, copy) NSArray<UIActivityType> *excludedActivityTypes;

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

typedef NSInteger UIAlertActionStyle; enum {
    UIAlertActionStyleDefault = 0,
    UIAlertActionStyleCancel,
    UIAlertActionStyleDestructive
} __attribute__((availability(ios,introduced=8_0)));

typedef NSInteger UIAlertControllerStyle; enum {
    UIAlertControllerStyleActionSheet = 0,
    UIAlertControllerStyleAlert
} __attribute__((availability(ios,introduced=8_0)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) 
#ifndef _REWRITER_typedef_UIAlertAction
#define _REWRITER_typedef_UIAlertAction
typedef struct objc_object UIAlertAction;
typedef struct {} _objc_exc_UIAlertAction;
#endif

struct UIAlertAction_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// + (instancetype)actionWithTitle:(nullable NSString *)title style:(UIAlertActionStyle)style handler:(void (^ _Nullable)(UIAlertAction *action))handler;

// @property (nullable, nonatomic, readonly) NSString *title;
// @property (nonatomic, readonly) UIAlertActionStyle style;
// @property (nonatomic, getter=isEnabled) BOOL enabled;

/* @end */


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) 
#ifndef _REWRITER_typedef_UIAlertController
#define _REWRITER_typedef_UIAlertController
typedef struct objc_object UIAlertController;
typedef struct {} _objc_exc_UIAlertController;
#endif

struct UIAlertController_IMPL {
	struct UIViewController_IMPL UIViewController_IVARS;
};


// + (instancetype)alertControllerWithTitle:(nullable NSString *)title message:(nullable NSString *)message preferredStyle:(UIAlertControllerStyle)preferredStyle;

// - (void)addAction:(UIAlertAction *)action;
// @property (nonatomic, readonly) NSArray<UIAlertAction *> *actions;

// @property (nonatomic, strong, nullable) UIAlertAction *preferredAction __attribute__((availability(ios,introduced=9_0)));

// - (void)addTextFieldWithConfigurationHandler:(void (^ _Nullable)(UITextField *textField))configurationHandler;
// @property (nullable, nonatomic, readonly) NSArray<UITextField *> *textFields;

// @property (nullable, nonatomic, copy) NSString *title;
// @property (nullable, nonatomic, copy) NSString *message;

// @property (nonatomic, readonly) UIAlertControllerStyle preferredStyle;

/* @end */



// @interface UIAlertController (SpringLoading) <UISpringLoadedInteractionSupporting>
/* @end */

#pragma clang assume_nonnull end



#pragma clang assume_nonnull begin

typedef NSInteger UIBarMetrics; enum {
    UIBarMetricsDefault,
    UIBarMetricsCompact,
    UIBarMetricsDefaultPrompt = 101,
    UIBarMetricsCompactPrompt,

    UIBarMetricsLandscapePhone __attribute__((availability(ios,introduced=5_0,deprecated=8_0,message="" "Use UIBarMetricsCompact instead"))) = UIBarMetricsCompact,
    UIBarMetricsLandscapePhonePrompt __attribute__((availability(ios,introduced=7_0,deprecated=8_0,message="" "Use UIBarMetricsCompactPrompt"))) = UIBarMetricsCompactPrompt,
};

typedef NSInteger UIBarPosition; enum {
    UIBarPositionAny = 0,
    UIBarPositionBottom = 1,
    UIBarPositionTop = 2,
    UIBarPositionTopAttached = 3,
} __attribute__((availability(ios,introduced=7_0)));







// @protocol UIBarPositioning <NSObject>
// @property(nonatomic,readonly) UIBarPosition barPosition;
/* @end */


// @protocol UIBarPositioningDelegate <NSObject>
/* @optional */




// - (UIBarPosition)positionForBar:(id <UIBarPositioning>)bar;
/* @end */

#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin

typedef NSInteger UIBarButtonItemStyle; enum {
    UIBarButtonItemStylePlain,
    UIBarButtonItemStyleBordered __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use UIBarButtonItemStylePlain when minimum deployment target is iOS7 or later"))),
    UIBarButtonItemStyleDone,
};

typedef NSInteger UIBarButtonSystemItem; enum {
    UIBarButtonSystemItemDone,
    UIBarButtonSystemItemCancel,
    UIBarButtonSystemItemEdit,
    UIBarButtonSystemItemSave,
    UIBarButtonSystemItemAdd,
    UIBarButtonSystemItemFlexibleSpace,
    UIBarButtonSystemItemFixedSpace,
    UIBarButtonSystemItemCompose,
    UIBarButtonSystemItemReply,
    UIBarButtonSystemItemAction,
    UIBarButtonSystemItemOrganize,
    UIBarButtonSystemItemBookmarks,
    UIBarButtonSystemItemSearch,
    UIBarButtonSystemItemRefresh,
    UIBarButtonSystemItemStop,
    UIBarButtonSystemItemCamera,
    UIBarButtonSystemItemTrash,
    UIBarButtonSystemItemPlay,
    UIBarButtonSystemItemPause,
    UIBarButtonSystemItemRewind,
    UIBarButtonSystemItemFastForward,
    UIBarButtonSystemItemUndo __attribute__((availability(ios,introduced=3_0))),
    UIBarButtonSystemItemRedo __attribute__((availability(ios,introduced=3_0))),
    UIBarButtonSystemItemPageCurl __attribute__((availability(ios,introduced=4_0,deprecated=11_0,message="" )))
};

// @class UIImage;
#ifndef _REWRITER_typedef_UIImage
#define _REWRITER_typedef_UIImage
typedef struct objc_object UIImage;
typedef struct {} _objc_exc_UIImage;
#endif

#ifndef _REWRITER_typedef_UIView
#define _REWRITER_typedef_UIView
typedef struct objc_object UIView;
typedef struct {} _objc_exc_UIView;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) 
#ifndef _REWRITER_typedef_UIBarButtonItem
#define _REWRITER_typedef_UIBarButtonItem
typedef struct objc_object UIBarButtonItem;
typedef struct {} _objc_exc_UIBarButtonItem;
#endif

struct UIBarButtonItem_IMPL {
	struct UIBarItem_IMPL UIBarItem_IVARS;
};


// - (instancetype)init __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));
// - (instancetype)initWithImage:(nullable UIImage *)image style:(UIBarButtonItemStyle)style target:(nullable id)target action:(nullable SEL)action;
// - (instancetype)initWithImage:(nullable UIImage *)image landscapeImagePhone:(nullable UIImage *)landscapeImagePhone style:(UIBarButtonItemStyle)style target:(nullable id)target action:(nullable SEL)action __attribute__((availability(ios,introduced=5_0)));
// - (instancetype)initWithTitle:(nullable NSString *)title style:(UIBarButtonItemStyle)style target:(nullable id)target action:(nullable SEL)action;
// - (instancetype)initWithBarButtonSystemItem:(UIBarButtonSystemItem)systemItem target:(nullable id)target action:(nullable SEL)action;
// - (instancetype)initWithCustomView:(UIView *)customView;

// @property(nonatomic) UIBarButtonItemStyle style;
// @property(nonatomic) CGFloat width;
// @property(nullable, nonatomic,copy) NSSet<NSString *> *possibleTitles;
// @property(nullable, nonatomic,strong) __kindof UIView *customView;
// @property(nullable, nonatomic) SEL action;
// @property(nullable, nonatomic,weak) id target;
// - (void)setBackgroundImage:(nullable UIImage *)backgroundImage forState:(UIControlState)state barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));
// - (nullable UIImage *)backgroundImageForState:(UIControlState)state barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));



// - (void)setBackgroundImage:(nullable UIImage *)backgroundImage forState:(UIControlState)state style:(UIBarButtonItemStyle)style barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=6_0))) __attribute__((annotate("ui_appearance_selector")));
// - (nullable UIImage *)backgroundImageForState:(UIControlState)state style:(UIBarButtonItemStyle)style barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=6_0))) __attribute__((annotate("ui_appearance_selector")));

// @property(nullable, nonatomic,strong) UIColor *tintColor __attribute__((availability(ios,introduced=5_0)));



// - (void)setBackgroundVerticalPositionAdjustment:(CGFloat)adjustment forBarMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));
// - (CGFloat)backgroundVerticalPositionAdjustmentForBarMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));



// - (void)setTitlePositionAdjustment:(UIOffset)adjustment forBarMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));
// - (UIOffset)titlePositionAdjustmentForBarMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));






// - (void)setBackButtonBackgroundImage:(nullable UIImage *)backgroundImage forState:(UIControlState)state barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos,unavailable)));
// - (nullable UIImage *)backButtonBackgroundImageForState:(UIControlState)state barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos,unavailable)));

// - (void)setBackButtonTitlePositionAdjustment:(UIOffset)adjustment forBarMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos,unavailable)));
// - (UIOffset)backButtonTitlePositionAdjustmentForBarMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos,unavailable)));



// - (void)setBackButtonBackgroundVerticalPositionAdjustment:(CGFloat)adjustment forBarMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos,unavailable)));
// - (CGFloat)backButtonBackgroundVerticalPositionAdjustmentForBarMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos,unavailable)));

/* @end */



// @interface UIBarButtonItem (SpringLoading) <UISpringLoadedInteractionSupporting>
/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0))) 
#ifndef _REWRITER_typedef_UIBarButtonItemGroup
#define _REWRITER_typedef_UIBarButtonItemGroup
typedef struct objc_object UIBarButtonItemGroup;
typedef struct {} _objc_exc_UIBarButtonItemGroup;
#endif

struct UIBarButtonItemGroup_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



// - (instancetype)initWithBarButtonItems:(NSArray<UIBarButtonItem *> *)barButtonItems representativeItem:(nullable UIBarButtonItem *)representativeItem __attribute__((objc_designated_initializer));

// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));


// @property (nonatomic, readwrite, copy) NSArray<UIBarButtonItem *> *barButtonItems;





// @property (nonatomic, readwrite, strong, nullable) UIBarButtonItem *representativeItem;


// @property (nonatomic, readonly, assign, getter = isDisplayingRepresentativeItem) BOOL displayingRepresentativeItem;

/* @end */


// @interface UIBarButtonItem (UIBarButtonItemGroup)


// @property (nonatomic, readonly, weak, nullable) UIBarButtonItemGroup *buttonGroup __attribute__((availability(ios,introduced=9_0)));

/* @end */

#pragma clang assume_nonnull end
















#pragma clang assume_nonnull begin


// @interface NSIndexPath (UIKitAdditions)

// + (instancetype)indexPathForRow:(NSInteger)row inSection:(NSInteger)section;
// + (instancetype)indexPathForItem:(NSInteger)item inSection:(NSInteger)section __attribute__((availability(ios,introduced=6_0)));


// @property (nonatomic, readonly) NSInteger section;


// @property (nonatomic, readonly) NSInteger row;

// @property (nonatomic, readonly) NSInteger item __attribute__((availability(ios,introduced=6_0)));

/* @end */

#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin





__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)))
// @protocol UIDataSourceTranslating <NSObject>





// - (NSInteger)presentationSectionIndexForDataSourceSectionIndex:(NSInteger)dataSourceSectionIndex;





// - (NSInteger)dataSourceSectionIndexForPresentationSectionIndex:(NSInteger)presentationSectionIndex;





// - (nullable NSIndexPath *)presentationIndexPathForDataSourceIndexPath:(nullable NSIndexPath *)dataSourceIndexPath;





// - (nullable NSIndexPath *)dataSourceIndexPathForPresentationIndexPath:(nullable NSIndexPath *)presentationIndexPath;




// - (void)performUsingPresentationValues:(void (__attribute__((noescape)) ^)(void))actionsToTranslate __attribute__((swift_name("performUsingPresentationValues(_:)")));

/* @end */

#pragma clang assume_nonnull end



#pragma clang assume_nonnull begin

typedef NSUInteger UICollectionViewScrollPosition; enum {
    UICollectionViewScrollPositionNone = 0,



    UICollectionViewScrollPositionTop = 1 << 0,
    UICollectionViewScrollPositionCenteredVertically = 1 << 1,
    UICollectionViewScrollPositionBottom = 1 << 2,


    UICollectionViewScrollPositionLeft = 1 << 3,
    UICollectionViewScrollPositionCenteredHorizontally = 1 << 4,
    UICollectionViewScrollPositionRight = 1 << 5
};


typedef NSInteger UICollectionViewReorderingCadence; enum {
    UICollectionViewReorderingCadenceImmediate,
    UICollectionViewReorderingCadenceFast,
    UICollectionViewReorderingCadenceSlow
} __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));

// @class UICollectionView;
#ifndef _REWRITER_typedef_UICollectionView
#define _REWRITER_typedef_UICollectionView
typedef struct objc_object UICollectionView;
typedef struct {} _objc_exc_UICollectionView;
#endif

#ifndef _REWRITER_typedef_UICollectionReusableView
#define _REWRITER_typedef_UICollectionReusableView
typedef struct objc_object UICollectionReusableView;
typedef struct {} _objc_exc_UICollectionReusableView;
#endif

#ifndef _REWRITER_typedef_UICollectionViewCell
#define _REWRITER_typedef_UICollectionViewCell
typedef struct objc_object UICollectionViewCell;
typedef struct {} _objc_exc_UICollectionViewCell;
#endif

#ifndef _REWRITER_typedef_UICollectionViewLayout
#define _REWRITER_typedef_UICollectionViewLayout
typedef struct objc_object UICollectionViewLayout;
typedef struct {} _objc_exc_UICollectionViewLayout;
#endif

#ifndef _REWRITER_typedef_UICollectionViewTransitionLayout
#define _REWRITER_typedef_UICollectionViewTransitionLayout
typedef struct objc_object UICollectionViewTransitionLayout;
typedef struct {} _objc_exc_UICollectionViewTransitionLayout;
#endif

#ifndef _REWRITER_typedef_UICollectionViewLayoutAttributes
#define _REWRITER_typedef_UICollectionViewLayoutAttributes
typedef struct objc_object UICollectionViewLayoutAttributes;
typedef struct {} _objc_exc_UICollectionViewLayoutAttributes;
#endif

#ifndef _REWRITER_typedef_UITouch
#define _REWRITER_typedef_UITouch
typedef struct objc_object UITouch;
typedef struct {} _objc_exc_UITouch;
#endif

#ifndef _REWRITER_typedef_UINib
#define _REWRITER_typedef_UINib
typedef struct objc_object UINib;
typedef struct {} _objc_exc_UINib;
#endif

// @class UIDragItem;
#ifndef _REWRITER_typedef_UIDragItem
#define _REWRITER_typedef_UIDragItem
typedef struct objc_object UIDragItem;
typedef struct {} _objc_exc_UIDragItem;
#endif

#ifndef _REWRITER_typedef_UIDragPreviewParameters
#define _REWRITER_typedef_UIDragPreviewParameters
typedef struct objc_object UIDragPreviewParameters;
typedef struct {} _objc_exc_UIDragPreviewParameters;
#endif

#ifndef _REWRITER_typedef_UIDragPreviewTarget
#define _REWRITER_typedef_UIDragPreviewTarget
typedef struct objc_object UIDragPreviewTarget;
typedef struct {} _objc_exc_UIDragPreviewTarget;
#endif

// @class UICollectionViewDropProposal;
#ifndef _REWRITER_typedef_UICollectionViewDropProposal
#define _REWRITER_typedef_UICollectionViewDropProposal
typedef struct objc_object UICollectionViewDropProposal;
typedef struct {} _objc_exc_UICollectionViewDropProposal;
#endif

#ifndef _REWRITER_typedef_UICollectionViewPlaceholder
#define _REWRITER_typedef_UICollectionViewPlaceholder
typedef struct objc_object UICollectionViewPlaceholder;
typedef struct {} _objc_exc_UICollectionViewPlaceholder;
#endif

#ifndef _REWRITER_typedef_UICollectionViewDropPlaceholder
#define _REWRITER_typedef_UICollectionViewDropPlaceholder
typedef struct objc_object UICollectionViewDropPlaceholder;
typedef struct {} _objc_exc_UICollectionViewDropPlaceholder;
#endif

// @protocol UIDataSourceTranslating, UISpringLoadedInteractionContext;
// @protocol UIDragSession, UIDropSession;
// @protocol UICollectionViewDragDelegate, UICollectionViewDropDelegate, UICollectionViewDropCoordinator, UICollectionViewDropItem, UICollectionViewDropPlaceholderContext;


typedef void (*UICollectionViewLayoutInteractiveTransitionCompletion)(BOOL completed, BOOL finished);

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0))) 
#ifndef _REWRITER_typedef_UICollectionViewFocusUpdateContext
#define _REWRITER_typedef_UICollectionViewFocusUpdateContext
typedef struct objc_object UICollectionViewFocusUpdateContext;
typedef struct {} _objc_exc_UICollectionViewFocusUpdateContext;
#endif

struct UICollectionViewFocusUpdateContext_IMPL {
	struct UIFocusUpdateContext_IMPL UIFocusUpdateContext_IVARS;
};


// @property (nonatomic, strong, readonly, nullable) NSIndexPath *previouslyFocusedIndexPath;
// @property (nonatomic, strong, readonly, nullable) NSIndexPath *nextFocusedIndexPath;

/* @end */


// @protocol UICollectionViewDataSource <NSObject>
/* @required */

// - (NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section;


// - (__kindof UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath;

/* @optional */

// - (NSInteger)numberOfSectionsInCollectionView:(UICollectionView *)collectionView;


// - (UICollectionReusableView *)collectionView:(UICollectionView *)collectionView viewForSupplementaryElementOfKind:(NSString *)kind atIndexPath:(NSIndexPath *)indexPath;

// - (BOOL)collectionView:(UICollectionView *)collectionView canMoveItemAtIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=9_0)));
// - (void)collectionView:(UICollectionView *)collectionView moveItemAtIndexPath:(NSIndexPath *)sourceIndexPath toIndexPath:(NSIndexPath*)destinationIndexPath __attribute__((availability(ios,introduced=9_0)));


// - (nullable NSArray<NSString *> *)indexTitlesForCollectionView:(UICollectionView *)collectionView __attribute__((availability(tvos,introduced=10.2)));



// - (NSIndexPath *)collectionView:(UICollectionView *)collectionView indexPathForIndexTitle:(NSString *)title atIndex:(NSInteger)index __attribute__((availability(tvos,introduced=10.2)));

/* @end */


// @protocol UICollectionViewDataSourcePrefetching <NSObject>
/* @required */

// - (void)collectionView:(UICollectionView *)collectionView prefetchItemsAtIndexPaths:(NSArray<NSIndexPath *> *)indexPaths __attribute__((availability(ios,introduced=10_0)));

/* @optional */

// - (void)collectionView:(UICollectionView *)collectionView cancelPrefetchingForItemsAtIndexPaths:(NSArray<NSIndexPath *> *)indexPaths __attribute__((availability(ios,introduced=10_0)));

/* @end */



// @protocol UICollectionViewDelegate <UIScrollViewDelegate>
/* @optional */
// - (BOOL)collectionView:(UICollectionView *)collectionView shouldHighlightItemAtIndexPath:(NSIndexPath *)indexPath;
// - (void)collectionView:(UICollectionView *)collectionView didHighlightItemAtIndexPath:(NSIndexPath *)indexPath;
// - (void)collectionView:(UICollectionView *)collectionView didUnhighlightItemAtIndexPath:(NSIndexPath *)indexPath;
// - (BOOL)collectionView:(UICollectionView *)collectionView shouldSelectItemAtIndexPath:(NSIndexPath *)indexPath;
// - (BOOL)collectionView:(UICollectionView *)collectionView shouldDeselectItemAtIndexPath:(NSIndexPath *)indexPath;
// - (void)collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath;
// - (void)collectionView:(UICollectionView *)collectionView didDeselectItemAtIndexPath:(NSIndexPath *)indexPath;

// - (void)collectionView:(UICollectionView *)collectionView willDisplayCell:(UICollectionViewCell *)cell forItemAtIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=8_0)));
// - (void)collectionView:(UICollectionView *)collectionView willDisplaySupplementaryView:(UICollectionReusableView *)view forElementKind:(NSString *)elementKind atIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=8_0)));
// - (void)collectionView:(UICollectionView *)collectionView didEndDisplayingCell:(UICollectionViewCell *)cell forItemAtIndexPath:(NSIndexPath *)indexPath;
// - (void)collectionView:(UICollectionView *)collectionView didEndDisplayingSupplementaryView:(UICollectionReusableView *)view forElementOfKind:(NSString *)elementKind atIndexPath:(NSIndexPath *)indexPath;



// - (BOOL)collectionView:(UICollectionView *)collectionView shouldShowMenuForItemAtIndexPath:(NSIndexPath *)indexPath;
// - (BOOL)collectionView:(UICollectionView *)collectionView canPerformAction:(SEL)action forItemAtIndexPath:(NSIndexPath *)indexPath withSender:(nullable id)sender;
// - (void)collectionView:(UICollectionView *)collectionView performAction:(SEL)action forItemAtIndexPath:(NSIndexPath *)indexPath withSender:(nullable id)sender;


// - (nonnull UICollectionViewTransitionLayout *)collectionView:(UICollectionView *)collectionView transitionLayoutForOldLayout:(UICollectionViewLayout *)fromLayout newLayout:(UICollectionViewLayout *)toLayout;


// - (BOOL)collectionView:(UICollectionView *)collectionView canFocusItemAtIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=9_0)));
// - (BOOL)collectionView:(UICollectionView *)collectionView shouldUpdateFocusInContext:(UICollectionViewFocusUpdateContext *)context __attribute__((availability(ios,introduced=9_0)));
// - (void)collectionView:(UICollectionView *)collectionView didUpdateFocusInContext:(UICollectionViewFocusUpdateContext *)context withAnimationCoordinator:(UIFocusAnimationCoordinator *)coordinator __attribute__((availability(ios,introduced=9_0)));
// - (nullable NSIndexPath *)indexPathForPreferredFocusedViewInCollectionView:(UICollectionView *)collectionView __attribute__((availability(ios,introduced=9_0)));

// - (NSIndexPath *)collectionView:(UICollectionView *)collectionView targetIndexPathForMoveFromItemAtIndexPath:(NSIndexPath *)originalIndexPath toProposedIndexPath:(NSIndexPath *)proposedIndexPath __attribute__((availability(ios,introduced=9_0)));

// - (CGPoint)collectionView:(UICollectionView *)collectionView targetContentOffsetForProposedContentOffset:(CGPoint)proposedContentOffset __attribute__((availability(ios,introduced=9_0)));
// - (BOOL)collectionView:(UICollectionView *)collectionView shouldSpringLoadItemAtIndexPath:(NSIndexPath *)indexPath withContext:(id<UISpringLoadedInteractionContext>)context __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));

/* @end */


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0))) 
#ifndef _REWRITER_typedef_UICollectionView
#define _REWRITER_typedef_UICollectionView
typedef struct objc_object UICollectionView;
typedef struct {} _objc_exc_UICollectionView;
#endif

struct UICollectionView_IMPL {
	struct UIScrollView_IMPL UIScrollView_IVARS;
};


// - (instancetype)initWithFrame:(CGRect)frame collectionViewLayout:(UICollectionViewLayout *)layout __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

// @property (nonatomic, strong) UICollectionViewLayout *collectionViewLayout;
// @property (nonatomic, weak, nullable) id <UICollectionViewDelegate> delegate;
// @property (nonatomic, weak, nullable) id <UICollectionViewDataSource> dataSource;

// @property (nonatomic, weak, nullable) id<UICollectionViewDataSourcePrefetching> prefetchDataSource __attribute__((availability(ios,introduced=10_0)));
// @property (nonatomic, getter=isPrefetchingEnabled) BOOL prefetchingEnabled __attribute__((availability(ios,introduced=10_0)));

// @property (nonatomic, weak, nullable) id <UICollectionViewDragDelegate> dragDelegate __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
// @property (nonatomic, weak, nullable) id <UICollectionViewDropDelegate> dropDelegate __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));






// @property (nonatomic) BOOL dragInteractionEnabled __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));




// @property (nonatomic) UICollectionViewReorderingCadence reorderingCadence __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));

// @property (nonatomic, strong, nullable) UIView *backgroundView;




// - (void)registerClass:(nullable Class)cellClass forCellWithReuseIdentifier:(NSString *)identifier;
// - (void)registerNib:(nullable UINib *)nib forCellWithReuseIdentifier:(NSString *)identifier;

// - (void)registerClass:(nullable Class)viewClass forSupplementaryViewOfKind:(NSString *)elementKind withReuseIdentifier:(NSString *)identifier;
// - (void)registerNib:(nullable UINib *)nib forSupplementaryViewOfKind:(NSString *)kind withReuseIdentifier:(NSString *)identifier;

// - (__kindof UICollectionViewCell *)dequeueReusableCellWithReuseIdentifier:(NSString *)identifier forIndexPath:(NSIndexPath *)indexPath;
// - (__kindof UICollectionReusableView *)dequeueReusableSupplementaryViewOfKind:(NSString *)elementKind withReuseIdentifier:(NSString *)identifier forIndexPath:(NSIndexPath *)indexPath;


// @property (nonatomic) BOOL allowsSelection;
// @property (nonatomic) BOOL allowsMultipleSelection;


// @property (nonatomic, readonly, nullable) NSArray<NSIndexPath *> *indexPathsForSelectedItems;



// - (void)selectItemAtIndexPath:(nullable NSIndexPath *)indexPath animated:(BOOL)animated scrollPosition:(UICollectionViewScrollPosition)scrollPosition;
// - (void)deselectItemAtIndexPath:(NSIndexPath *)indexPath animated:(BOOL)animated;


// @property (nonatomic, readonly) BOOL hasUncommittedUpdates __attribute__((availability(ios,introduced=11.0)));


// - (void)reloadData;

// - (void)setCollectionViewLayout:(UICollectionViewLayout *)layout animated:(BOOL)animated;
// - (void)setCollectionViewLayout:(UICollectionViewLayout *)layout animated:(BOOL)animated completion:(void (^ _Nullable)(BOOL finished))completion __attribute__((availability(ios,introduced=7_0)));

// - (UICollectionViewTransitionLayout *)startInteractiveTransitionToCollectionViewLayout:(UICollectionViewLayout *)layout completion:(nullable UICollectionViewLayoutInteractiveTransitionCompletion)completion __attribute__((availability(ios,introduced=7_0)));
// - (void)finishInteractiveTransition __attribute__((availability(ios,introduced=7_0)));
// - (void)cancelInteractiveTransition __attribute__((availability(ios,introduced=7_0)));




// @property (nonatomic, readonly) NSInteger numberOfSections;



// - (NSInteger)numberOfItemsInSection:(NSInteger)section;

// - (nullable UICollectionViewLayoutAttributes *)layoutAttributesForItemAtIndexPath:(NSIndexPath *)indexPath;
// - (nullable UICollectionViewLayoutAttributes *)layoutAttributesForSupplementaryElementOfKind:(NSString *)kind atIndexPath:(NSIndexPath *)indexPath;

// - (nullable NSIndexPath *)indexPathForItemAtPoint:(CGPoint)point;
// - (nullable NSIndexPath *)indexPathForCell:(UICollectionViewCell *)cell;

// - (nullable UICollectionViewCell *)cellForItemAtIndexPath:(NSIndexPath *)indexPath;

// @property (nonatomic, readonly) NSArray<__kindof UICollectionViewCell *> *visibleCells;
// @property (nonatomic, readonly) NSArray<NSIndexPath *> *indexPathsForVisibleItems;





// - (nullable UICollectionReusableView *)supplementaryViewForElementKind:(NSString *)elementKind atIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=9_0)));
// - (NSArray<UICollectionReusableView *> *)visibleSupplementaryViewsOfKind:(NSString *)elementKind __attribute__((availability(ios,introduced=9_0)));
// - (NSArray<NSIndexPath *> *)indexPathsForVisibleSupplementaryElementsOfKind:(NSString *)elementKind __attribute__((availability(ios,introduced=9_0)));



// - (void)scrollToItemAtIndexPath:(NSIndexPath *)indexPath atScrollPosition:(UICollectionViewScrollPosition)scrollPosition animated:(BOOL)animated;


// - (void)insertSections:(NSIndexSet *)sections;
// - (void)deleteSections:(NSIndexSet *)sections;
// - (void)reloadSections:(NSIndexSet *)sections;
// - (void)moveSection:(NSInteger)section toSection:(NSInteger)newSection;

// - (void)insertItemsAtIndexPaths:(NSArray<NSIndexPath *> *)indexPaths;
// - (void)deleteItemsAtIndexPaths:(NSArray<NSIndexPath *> *)indexPaths;
// - (void)reloadItemsAtIndexPaths:(NSArray<NSIndexPath *> *)indexPaths;
// - (void)moveItemAtIndexPath:(NSIndexPath *)indexPath toIndexPath:(NSIndexPath *)newIndexPath;

// - (void)performBatchUpdates:(void (__attribute__((noescape)) ^ _Nullable)(void))updates completion:(void (^ _Nullable)(BOOL finished))completion;


// - (BOOL)beginInteractiveMovementForItemAtIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=9_0)));
// - (void)updateInteractiveMovementTargetPosition:(CGPoint)targetPosition __attribute__((availability(ios,introduced=9_0)));
// - (void)endInteractiveMovement __attribute__((availability(ios,introduced=9_0)));
// - (void)cancelInteractiveMovement __attribute__((availability(ios,introduced=9_0)));


// @property (nonatomic) BOOL remembersLastFocusedIndexPath __attribute__((availability(ios,introduced=9_0)));





// @property (nonatomic, readonly) BOOL hasActiveDrag __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));



// @property (nonatomic, readonly) BOOL hasActiveDrop __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));

/* @end */







// @interface UICollectionView (UIDragAndDrop) <UISpringLoadedInteractionSupporting>
/* @end */



__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))
// @protocol UICollectionViewDragDelegate <NSObject>

/* @required */




// - (NSArray<UIDragItem *> *)collectionView:(UICollectionView *)collectionView itemsForBeginningDragSession:(id<UIDragSession>)session atIndexPath:(NSIndexPath *)indexPath;

/* @optional */






// - (NSArray<UIDragItem *> *)collectionView:(UICollectionView *)collectionView itemsForAddingToDragSession:(id<UIDragSession>)session atIndexPath:(NSIndexPath *)indexPath point:(CGPoint)point;




// - (nullable UIDragPreviewParameters *)collectionView:(UICollectionView *)collectionView dragPreviewParametersForItemAtIndexPath:(NSIndexPath *)indexPath;




// - (void)collectionView:(UICollectionView *)collectionView dragSessionWillBegin:(id<UIDragSession>)session;



// - (void)collectionView:(UICollectionView *)collectionView dragSessionDidEnd:(id<UIDragSession>)session;





// - (BOOL)collectionView:(UICollectionView *)collectionView dragSessionAllowsMoveOperation:(id<UIDragSession>)session;





// - (BOOL)collectionView:(UICollectionView *)collectionView dragSessionIsRestrictedToDraggingApplication:(id<UIDragSession>)session;

/* @end */


__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))
// @protocol UICollectionViewDropDelegate <NSObject>

/* @required */







// - (void)collectionView:(UICollectionView *)collectionView performDropWithCoordinator:(id<UICollectionViewDropCoordinator>)coordinator;

/* @optional */




// - (BOOL)collectionView:(UICollectionView *)collectionView canHandleDropSession:(id<UIDropSession>)session;



// - (void)collectionView:(UICollectionView *)collectionView dropSessionDidEnter:(id<UIDropSession>)session;
// - (UICollectionViewDropProposal *)collectionView:(UICollectionView *)collectionView dropSessionDidUpdate:(id<UIDropSession>)session withDestinationIndexPath:(nullable NSIndexPath *)destinationIndexPath;



// - (void)collectionView:(UICollectionView *)collectionView dropSessionDidExit:(id<UIDropSession>)session;



// - (void)collectionView:(UICollectionView *)collectionView dropSessionDidEnd:(id<UIDropSession>)session;







// - (nullable UIDragPreviewParameters *)collectionView:(UICollectionView *)collectionView dropPreviewParametersForItemAtIndexPath:(NSIndexPath *)indexPath;

/* @end */


typedef NSInteger UICollectionViewDropIntent; enum {



    UICollectionViewDropIntentUnspecified,




    UICollectionViewDropIntentInsertAtDestinationIndexPath,




    UICollectionViewDropIntentInsertIntoDestinationIndexPath,

} __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_UICollectionViewDropProposal
#define _REWRITER_typedef_UICollectionViewDropProposal
typedef struct objc_object UICollectionViewDropProposal;
typedef struct {} _objc_exc_UICollectionViewDropProposal;
#endif

struct UICollectionViewDropProposal_IMPL {
	struct UIDropProposal_IMPL UIDropProposal_IVARS;
};


// - (instancetype)initWithDropOperation:(UIDropOperation)operation intent:(UICollectionViewDropIntent)intent;



// @property (nonatomic, readonly) UICollectionViewDropIntent intent;

/* @end */



__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))
// @protocol UICollectionViewDropCoordinator <NSObject>



// @property (nonatomic, readonly) NSArray<id<UICollectionViewDropItem>> *items;




// @property (nonatomic, readonly, nullable) NSIndexPath *destinationIndexPath;



// @property (nonatomic, readonly) UICollectionViewDropProposal *proposal;


// @property (nonatomic, readonly) id<UIDropSession> session;
// - (id<UICollectionViewDropPlaceholderContext>)dropItem:(UIDragItem *)dragItem toPlaceholder:(UICollectionViewDropPlaceholder*)placeholder;






// - (id<UIDragAnimating>)dropItem:(UIDragItem *)dragItem toItemAtIndexPath:(NSIndexPath *)indexPath;





// - (id<UIDragAnimating>)dropItem:(UIDragItem *)dragItem intoItemAtIndexPath:(NSIndexPath *)indexPath rect:(CGRect)rect;



// - (id<UIDragAnimating>)dropItem:(UIDragItem *)dragItem toTarget:(UIDragPreviewTarget *)target;

/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_UICollectionViewPlaceholder
#define _REWRITER_typedef_UICollectionViewPlaceholder
typedef struct objc_object UICollectionViewPlaceholder;
typedef struct {} _objc_exc_UICollectionViewPlaceholder;
#endif

struct UICollectionViewPlaceholder_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)initWithInsertionIndexPath:(NSIndexPath*)insertionIndexPath reuseIdentifier:(NSString *)reuseIdentifier __attribute__((objc_designated_initializer));
// - (instancetype)init __attribute__((unavailable));
// + (instancetype)new __attribute__((unavailable));



// @property (nonatomic, nullable, copy) void(^cellUpdateHandler)(__kindof UICollectionViewCell *);

/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_UICollectionViewDropPlaceholder
#define _REWRITER_typedef_UICollectionViewDropPlaceholder
typedef struct objc_object UICollectionViewDropPlaceholder;
typedef struct {} _objc_exc_UICollectionViewDropPlaceholder;
#endif

struct UICollectionViewDropPlaceholder_IMPL {
	struct UICollectionViewPlaceholder_IMPL UICollectionViewPlaceholder_IVARS;
};





// @property (nonatomic, nullable, copy) UIDragPreviewParameters * _Nullable (^previewParametersProvider)(__kindof UICollectionViewCell *);
/* @end */



__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))
// @protocol UICollectionViewDropItem <NSObject>

// @property (nonatomic, readonly) UIDragItem *dragItem;






// @property (nonatomic, readonly, nullable) NSIndexPath *sourceIndexPath;




// @property (nonatomic, readonly) CGSize previewSize;

/* @end */



__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))
// @protocol UICollectionViewDropPlaceholderContext <UIDragAnimating>



// @property (nonatomic, readonly) UIDragItem *dragItem;







// - (BOOL)commitInsertionWithDataSourceUpdates:(void(__attribute__((noescape)) ^)(NSIndexPath *insertionIndexPath))dataSourceUpdates;





// - (BOOL)deletePlaceholder;





// - (void)setNeedsCellUpdate;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UICollectionViewLayout;
#ifndef _REWRITER_typedef_UICollectionViewLayout
#define _REWRITER_typedef_UICollectionViewLayout
typedef struct objc_object UICollectionViewLayout;
typedef struct {} _objc_exc_UICollectionViewLayout;
#endif

// @class UICollectionView;
#ifndef _REWRITER_typedef_UICollectionView
#define _REWRITER_typedef_UICollectionView
typedef struct objc_object UICollectionView;
typedef struct {} _objc_exc_UICollectionView;
#endif

// @class UICollectionViewLayoutAttributes;
#ifndef _REWRITER_typedef_UICollectionViewLayoutAttributes
#define _REWRITER_typedef_UICollectionViewLayoutAttributes
typedef struct objc_object UICollectionViewLayoutAttributes;
typedef struct {} _objc_exc_UICollectionViewLayoutAttributes;
#endif

// @class UILongPressGestureRecognizer;
#ifndef _REWRITER_typedef_UILongPressGestureRecognizer
#define _REWRITER_typedef_UILongPressGestureRecognizer
typedef struct objc_object UILongPressGestureRecognizer;
typedef struct {} _objc_exc_UILongPressGestureRecognizer;
#endif


typedef NSInteger UICollectionViewCellDragState; enum {
    UICollectionViewCellDragStateNone,


    UICollectionViewCellDragStateLifting,





    UICollectionViewCellDragStateDragging
} __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0))) 
#ifndef _REWRITER_typedef_UICollectionReusableView
#define _REWRITER_typedef_UICollectionReusableView
typedef struct objc_object UICollectionReusableView;
typedef struct {} _objc_exc_UICollectionReusableView;
#endif

struct UICollectionReusableView_IMPL {
	struct UIView_IMPL UIView_IVARS;
};


// @property (nonatomic, readonly, copy, nullable) NSString *reuseIdentifier;




// - (void)prepareForReuse;





// - (void)applyLayoutAttributes:(UICollectionViewLayoutAttributes *)layoutAttributes;


// - (void)willTransitionFromLayout:(UICollectionViewLayout *)oldLayout toLayout:(UICollectionViewLayout *)newLayout;
// - (void)didTransitionFromLayout:(UICollectionViewLayout *)oldLayout toLayout:(UICollectionViewLayout *)newLayout;

// - (UICollectionViewLayoutAttributes *)preferredLayoutAttributesFittingAttributes:(UICollectionViewLayoutAttributes *)layoutAttributes __attribute__((availability(ios,introduced=8_0)));

/* @end */


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0))) 
#ifndef _REWRITER_typedef_UICollectionViewCell
#define _REWRITER_typedef_UICollectionViewCell
typedef struct objc_object UICollectionViewCell;
typedef struct {} _objc_exc_UICollectionViewCell;
#endif

struct UICollectionViewCell_IMPL {
	struct UICollectionReusableView_IMPL UICollectionReusableView_IVARS;
};


// @property (nonatomic, readonly) UIView *contentView;





// @property (nonatomic, getter=isSelected) BOOL selected;
// @property (nonatomic, getter=isHighlighted) BOOL highlighted;






// - (void)dragStateDidChange:(UICollectionViewCellDragState)dragState __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));



// @property (nonatomic, strong, nullable) UIView *backgroundView;
// @property (nonatomic, strong, nullable) UIView *selectedBackgroundView;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UICollectionViewLayout;
#ifndef _REWRITER_typedef_UICollectionViewLayout
#define _REWRITER_typedef_UICollectionViewLayout
typedef struct objc_object UICollectionViewLayout;
typedef struct {} _objc_exc_UICollectionViewLayout;
#endif

// @class UICollectionViewController;
#ifndef _REWRITER_typedef_UICollectionViewController
#define _REWRITER_typedef_UICollectionViewController
typedef struct objc_object UICollectionViewController;
typedef struct {} _objc_exc_UICollectionViewController;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0))) 
#ifndef _REWRITER_typedef_UICollectionViewController
#define _REWRITER_typedef_UICollectionViewController
typedef struct objc_object UICollectionViewController;
typedef struct {} _objc_exc_UICollectionViewController;
#endif

struct UICollectionViewController_IMPL {
	struct UIViewController_IMPL UIViewController_IVARS;
};


// - (instancetype)initWithCollectionViewLayout:(UICollectionViewLayout *)layout __attribute__((objc_designated_initializer));
// - (instancetype)initWithNibName:(nullable NSString *)nibNameOrNil bundle:(nullable NSBundle *)nibBundleOrNil __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

// @property (nullable, nonatomic, strong) __kindof UICollectionView *collectionView;



// @property (nonatomic) BOOL clearsSelectionOnViewWillAppear;






// @property (nonatomic, assign) BOOL useLayoutToLayoutNavigationTransitions __attribute__((availability(ios,introduced=7_0)));


// @property (nonatomic, readonly) UICollectionViewLayout *collectionViewLayout __attribute__((availability(ios,introduced=7_0)));


// @property (nonatomic) BOOL installsStandardGestureForInteractiveMovement __attribute__((availability(ios,introduced=9_0)));

/* @end */

#pragma clang assume_nonnull end







#pragma clang assume_nonnull begin

typedef NSUInteger UICollectionElementCategory; enum {
    UICollectionElementCategoryCell,
    UICollectionElementCategorySupplementaryView,
    UICollectionElementCategoryDecorationView
};

// @class UICollectionViewLayoutAttributes;
#ifndef _REWRITER_typedef_UICollectionViewLayoutAttributes
#define _REWRITER_typedef_UICollectionViewLayoutAttributes
typedef struct objc_object UICollectionViewLayoutAttributes;
typedef struct {} _objc_exc_UICollectionViewLayoutAttributes;
#endif

// @class UICollectionView;
#ifndef _REWRITER_typedef_UICollectionView
#define _REWRITER_typedef_UICollectionView
typedef struct objc_object UICollectionView;
typedef struct {} _objc_exc_UICollectionView;
#endif

// @class UINib;
#ifndef _REWRITER_typedef_UINib
#define _REWRITER_typedef_UINib
typedef struct objc_object UINib;
typedef struct {} _objc_exc_UINib;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0))) 
#ifndef _REWRITER_typedef_UICollectionViewLayoutAttributes
#define _REWRITER_typedef_UICollectionViewLayoutAttributes
typedef struct objc_object UICollectionViewLayoutAttributes;
typedef struct {} _objc_exc_UICollectionViewLayoutAttributes;
#endif

struct UICollectionViewLayoutAttributes_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property (nonatomic) CGRect frame;
// @property (nonatomic) CGPoint center;
// @property (nonatomic) CGSize size;
// @property (nonatomic) CATransform3D transform3D;
// @property (nonatomic) CGRect bounds __attribute__((availability(ios,introduced=7_0)));
// @property (nonatomic) CGAffineTransform transform __attribute__((availability(ios,introduced=7_0)));
// @property (nonatomic) CGFloat alpha;
// @property (nonatomic) NSInteger zIndex;
// @property (nonatomic, getter=isHidden) BOOL hidden;
// @property (nonatomic, strong) NSIndexPath *indexPath;

// @property (nonatomic, readonly) UICollectionElementCategory representedElementCategory;
// @property (nonatomic, readonly, nullable) NSString *representedElementKind;

// + (instancetype)layoutAttributesForCellWithIndexPath:(NSIndexPath *)indexPath;
// + (instancetype)layoutAttributesForSupplementaryViewOfKind:(NSString *)elementKind withIndexPath:(NSIndexPath *)indexPath;
// + (instancetype)layoutAttributesForDecorationViewOfKind:(NSString *)decorationViewKind withIndexPath:(NSIndexPath *)indexPath;

/* @end */


typedef NSInteger UICollectionUpdateAction; enum {
    UICollectionUpdateActionInsert,
    UICollectionUpdateActionDelete,
    UICollectionUpdateActionReload,
    UICollectionUpdateActionMove,
    UICollectionUpdateActionNone
};

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0))) 
#ifndef _REWRITER_typedef_UICollectionViewUpdateItem
#define _REWRITER_typedef_UICollectionViewUpdateItem
typedef struct objc_object UICollectionViewUpdateItem;
typedef struct {} _objc_exc_UICollectionViewUpdateItem;
#endif

struct UICollectionViewUpdateItem_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property (nonatomic, readonly, nullable) NSIndexPath *indexPathBeforeUpdate;
// @property (nonatomic, readonly, nullable) NSIndexPath *indexPathAfterUpdate;
// @property (nonatomic, readonly) UICollectionUpdateAction updateAction;

/* @end */


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0))) 
#ifndef _REWRITER_typedef_UICollectionViewLayoutInvalidationContext
#define _REWRITER_typedef_UICollectionViewLayoutInvalidationContext
typedef struct objc_object UICollectionViewLayoutInvalidationContext;
typedef struct {} _objc_exc_UICollectionViewLayoutInvalidationContext;
#endif

struct UICollectionViewLayoutInvalidationContext_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property (nonatomic, readonly) BOOL invalidateEverything;
// @property (nonatomic, readonly) BOOL invalidateDataSourceCounts;

// - (void)invalidateItemsAtIndexPaths:(NSArray<NSIndexPath *> *)indexPaths __attribute__((availability(ios,introduced=8_0)));
// - (void)invalidateSupplementaryElementsOfKind:(NSString *)elementKind atIndexPaths:(NSArray<NSIndexPath *> *)indexPaths __attribute__((availability(ios,introduced=8_0)));
// - (void)invalidateDecorationElementsOfKind:(NSString *)elementKind atIndexPaths:(NSArray<NSIndexPath *> *)indexPaths __attribute__((availability(ios,introduced=8_0)));
// @property (nonatomic, readonly, nullable) NSArray<NSIndexPath *> *invalidatedItemIndexPaths __attribute__((availability(ios,introduced=8_0)));
// @property (nonatomic, readonly, nullable) NSDictionary<NSString *, NSArray<NSIndexPath *> *> *invalidatedSupplementaryIndexPaths __attribute__((availability(ios,introduced=8_0)));
// @property (nonatomic, readonly, nullable) NSDictionary<NSString *, NSArray<NSIndexPath *> *> *invalidatedDecorationIndexPaths __attribute__((availability(ios,introduced=8_0)));

// @property (nonatomic) CGPoint contentOffsetAdjustment __attribute__((availability(ios,introduced=8_0)));
// @property (nonatomic) CGSize contentSizeAdjustment __attribute__((availability(ios,introduced=8_0)));


// @property (nonatomic, readonly, copy, nullable) NSArray<NSIndexPath *> *previousIndexPathsForInteractivelyMovingItems __attribute__((availability(ios,introduced=9_0)));
// @property (nonatomic, readonly, copy, nullable) NSArray<NSIndexPath *> *targetIndexPathsForInteractivelyMovingItems __attribute__((availability(ios,introduced=9_0)));
// @property (nonatomic, readonly) CGPoint interactiveMovementTarget __attribute__((availability(ios,introduced=9_0)));

/* @end */


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0))) 
#ifndef _REWRITER_typedef_UICollectionViewLayout
#define _REWRITER_typedef_UICollectionViewLayout
typedef struct objc_object UICollectionViewLayout;
typedef struct {} _objc_exc_UICollectionViewLayout;
#endif

struct UICollectionViewLayout_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)init __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));




// @property (nullable, nonatomic, readonly) UICollectionView *collectionView;



// - (void)invalidateLayout;
// - (void)invalidateLayoutWithContext:(UICollectionViewLayoutInvalidationContext *)context __attribute__((availability(ios,introduced=7_0)));

// - (void)registerClass:(nullable Class)viewClass forDecorationViewOfKind:(NSString *)elementKind;
// - (void)registerNib:(nullable UINib *)nib forDecorationViewOfKind:(NSString *)elementKind;

/* @end */


// @interface UICollectionViewLayout (UISubclassingHooks)


@property(class, nonatomic, readonly) Class layoutAttributesClass;
@property(class, nonatomic, readonly) Class invalidationContextClass __attribute__((availability(ios,introduced=7_0)));
// - (void)prepareLayout;





// - (nullable NSArray<__kindof UICollectionViewLayoutAttributes *> *)layoutAttributesForElementsInRect:(CGRect)rect;
// - (nullable UICollectionViewLayoutAttributes *)layoutAttributesForItemAtIndexPath:(NSIndexPath *)indexPath;
// - (nullable UICollectionViewLayoutAttributes *)layoutAttributesForSupplementaryViewOfKind:(NSString *)elementKind atIndexPath:(NSIndexPath *)indexPath;
// - (nullable UICollectionViewLayoutAttributes *)layoutAttributesForDecorationViewOfKind:(NSString*)elementKind atIndexPath:(NSIndexPath *)indexPath;

// - (BOOL)shouldInvalidateLayoutForBoundsChange:(CGRect)newBounds;
// - (UICollectionViewLayoutInvalidationContext *)invalidationContextForBoundsChange:(CGRect)newBounds __attribute__((availability(ios,introduced=7_0)));

// - (BOOL)shouldInvalidateLayoutForPreferredLayoutAttributes:(UICollectionViewLayoutAttributes *)preferredAttributes withOriginalAttributes:(UICollectionViewLayoutAttributes *)originalAttributes __attribute__((availability(ios,introduced=8_0)));
// - (UICollectionViewLayoutInvalidationContext *)invalidationContextForPreferredLayoutAttributes:(UICollectionViewLayoutAttributes *)preferredAttributes withOriginalAttributes:(UICollectionViewLayoutAttributes *)originalAttributes __attribute__((availability(ios,introduced=8_0)));

// - (CGPoint)targetContentOffsetForProposedContentOffset:(CGPoint)proposedContentOffset withScrollingVelocity:(CGPoint)velocity;
// - (CGPoint)targetContentOffsetForProposedContentOffset:(CGPoint)proposedContentOffset __attribute__((availability(ios,introduced=7_0)));


// @property(nonatomic, readonly) CGSize collectionViewContentSize;




// @property (nonatomic, readonly) UIUserInterfaceLayoutDirection developmentLayoutDirection;
// @property(nonatomic, readonly) BOOL flipsHorizontallyInOppositeLayoutDirection;

/* @end */


// @interface UICollectionViewLayout (UIUpdateSupportHooks)




// - (void)prepareForCollectionViewUpdates:(NSArray<UICollectionViewUpdateItem *> *)updateItems;
// - (void)finalizeCollectionViewUpdates;

// - (void)prepareForAnimatedBoundsChange:(CGRect)oldBounds;
// - (void)finalizeAnimatedBoundsChange;


// - (void)prepareForTransitionToLayout:(UICollectionViewLayout *)newLayout __attribute__((availability(ios,introduced=7_0)));
// - (void)prepareForTransitionFromLayout:(UICollectionViewLayout *)oldLayout __attribute__((availability(ios,introduced=7_0)));
// - (void)finalizeLayoutTransition __attribute__((availability(ios,introduced=7_0)));





// - (nullable UICollectionViewLayoutAttributes *)initialLayoutAttributesForAppearingItemAtIndexPath:(NSIndexPath *)itemIndexPath;
// - (nullable UICollectionViewLayoutAttributes *)finalLayoutAttributesForDisappearingItemAtIndexPath:(NSIndexPath *)itemIndexPath;
// - (nullable UICollectionViewLayoutAttributes *)initialLayoutAttributesForAppearingSupplementaryElementOfKind:(NSString *)elementKind atIndexPath:(NSIndexPath *)elementIndexPath;
// - (nullable UICollectionViewLayoutAttributes *)finalLayoutAttributesForDisappearingSupplementaryElementOfKind:(NSString *)elementKind atIndexPath:(NSIndexPath *)elementIndexPath;
// - (nullable UICollectionViewLayoutAttributes *)initialLayoutAttributesForAppearingDecorationElementOfKind:(NSString *)elementKind atIndexPath:(NSIndexPath *)decorationIndexPath;
// - (nullable UICollectionViewLayoutAttributes *)finalLayoutAttributesForDisappearingDecorationElementOfKind:(NSString *)elementKind atIndexPath:(NSIndexPath *)decorationIndexPath;



// - (NSArray<NSIndexPath *> *)indexPathsToDeleteForSupplementaryViewOfKind:(NSString *)elementKind __attribute__((availability(ios,introduced=7_0)));
// - (NSArray<NSIndexPath *> *)indexPathsToDeleteForDecorationViewOfKind:(NSString *)elementKind __attribute__((availability(ios,introduced=7_0)));
// - (NSArray<NSIndexPath *> *)indexPathsToInsertForSupplementaryViewOfKind:(NSString *)elementKind __attribute__((availability(ios,introduced=7_0)));
// - (NSArray<NSIndexPath *> *)indexPathsToInsertForDecorationViewOfKind:(NSString *)elementKind __attribute__((availability(ios,introduced=7_0)));

/* @end */


// @interface UICollectionViewLayout (UIReorderingSupportHooks)

// - (NSIndexPath *)targetIndexPathForInteractivelyMovingItem:(NSIndexPath *)previousIndexPath withPosition:(CGPoint)position __attribute__((availability(ios,introduced=9_0)));
// - (UICollectionViewLayoutAttributes *)layoutAttributesForInteractivelyMovingItemAtIndexPath:(NSIndexPath *)indexPath withTargetPosition:(CGPoint)position __attribute__((availability(ios,introduced=9_0)));

// - (UICollectionViewLayoutInvalidationContext *)invalidationContextForInteractivelyMovingItems:(NSArray<NSIndexPath *> *)targetIndexPaths withTargetPosition:(CGPoint)targetPosition previousIndexPaths:(NSArray<NSIndexPath *> *)previousIndexPaths previousPosition:(CGPoint)previousPosition __attribute__((availability(ios,introduced=9_0)));
// - (UICollectionViewLayoutInvalidationContext *)invalidationContextForEndingInteractiveMovementOfItemsToFinalIndexPaths:(NSArray<NSIndexPath *> *)indexPaths previousIndexPaths:(NSArray<NSIndexPath *> *)previousIndexPaths movementCancelled:(BOOL)movementCancelled __attribute__((availability(ios,introduced=9_0)));

/* @end */

#pragma clang assume_nonnull end




#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) NSString *const UICollectionElementKindSectionHeader __attribute__((availability(ios,introduced=6_0)));
extern "C" __attribute__((visibility ("default"))) NSString *const UICollectionElementKindSectionFooter __attribute__((availability(ios,introduced=6_0)));
extern "C" __attribute__((visibility ("default"))) const CGSize UICollectionViewFlowLayoutAutomaticSize __attribute__((availability(ios,introduced=10_0)));

typedef NSInteger UICollectionViewScrollDirection; enum {
    UICollectionViewScrollDirectionVertical,
    UICollectionViewScrollDirectionHorizontal
};

typedef NSInteger UICollectionViewFlowLayoutSectionInsetReference; enum {
    UICollectionViewFlowLayoutSectionInsetFromContentInset,
    UICollectionViewFlowLayoutSectionInsetFromSafeArea,
    UICollectionViewFlowLayoutSectionInsetFromLayoutMargins
} __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,unavailable)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0))) 
#ifndef _REWRITER_typedef_UICollectionViewFlowLayoutInvalidationContext
#define _REWRITER_typedef_UICollectionViewFlowLayoutInvalidationContext
typedef struct objc_object UICollectionViewFlowLayoutInvalidationContext;
typedef struct {} _objc_exc_UICollectionViewFlowLayoutInvalidationContext;
#endif

struct UICollectionViewFlowLayoutInvalidationContext_IMPL {
	struct UICollectionViewLayoutInvalidationContext_IMPL UICollectionViewLayoutInvalidationContext_IVARS;
};


// @property (nonatomic) BOOL invalidateFlowLayoutDelegateMetrics;
// @property (nonatomic) BOOL invalidateFlowLayoutAttributes;

/* @end */


// @protocol UICollectionViewDelegateFlowLayout <UICollectionViewDelegate>
/* @optional */

// - (CGSize)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath *)indexPath;
// - (UIEdgeInsets)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout insetForSectionAtIndex:(NSInteger)section;
// - (CGFloat)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout minimumLineSpacingForSectionAtIndex:(NSInteger)section;
// - (CGFloat)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout minimumInteritemSpacingForSectionAtIndex:(NSInteger)section;
// - (CGSize)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout referenceSizeForHeaderInSection:(NSInteger)section;
// - (CGSize)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout referenceSizeForFooterInSection:(NSInteger)section;

/* @end */


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0))) 
#ifndef _REWRITER_typedef_UICollectionViewFlowLayout
#define _REWRITER_typedef_UICollectionViewFlowLayout
typedef struct objc_object UICollectionViewFlowLayout;
typedef struct {} _objc_exc_UICollectionViewFlowLayout;
#endif

struct UICollectionViewFlowLayout_IMPL {
	struct UICollectionViewLayout_IMPL UICollectionViewLayout_IVARS;
};


// @property (nonatomic) CGFloat minimumLineSpacing;
// @property (nonatomic) CGFloat minimumInteritemSpacing;
// @property (nonatomic) CGSize itemSize;
// @property (nonatomic) CGSize estimatedItemSize __attribute__((availability(ios,introduced=8_0)));
// @property (nonatomic) UICollectionViewScrollDirection scrollDirection;
// @property (nonatomic) CGSize headerReferenceSize;
// @property (nonatomic) CGSize footerReferenceSize;
// @property (nonatomic) UIEdgeInsets sectionInset;



// @property (nonatomic) UICollectionViewFlowLayoutSectionInsetReference sectionInsetReference __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,unavailable)));


// @property (nonatomic) BOOL sectionHeadersPinToVisibleBounds __attribute__((availability(ios,introduced=9_0)));
// @property (nonatomic) BOOL sectionFootersPinToVisibleBounds __attribute__((availability(ios,introduced=9_0)));

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0))) 
#ifndef _REWRITER_typedef_UICollectionViewTransitionLayout
#define _REWRITER_typedef_UICollectionViewTransitionLayout
typedef struct objc_object UICollectionViewTransitionLayout;
typedef struct {} _objc_exc_UICollectionViewTransitionLayout;
#endif

struct UICollectionViewTransitionLayout_IMPL {
	struct UICollectionViewLayout_IMPL UICollectionViewLayout_IVARS;
};


// @property (assign, nonatomic) CGFloat transitionProgress;
// @property (readonly, nonatomic) UICollectionViewLayout *currentLayout;
// @property (readonly, nonatomic) UICollectionViewLayout *nextLayout;

// - (instancetype)initWithCurrentLayout:(UICollectionViewLayout *)currentLayout nextLayout:(UICollectionViewLayout *)newLayout __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

// - (instancetype)init __attribute__((unavailable));

// - (void)updateValue:(CGFloat)value forAnimatedKey:(NSString *)key;
// - (CGFloat)valueForAnimatedKey:(NSString *)key;

/* @end */

#pragma clang assume_nonnull end








typedef NSUInteger UIDataDetectorTypes; enum {
    UIDataDetectorTypePhoneNumber = 1 << 0,
    UIDataDetectorTypeLink = 1 << 1,
    UIDataDetectorTypeAddress __attribute__((availability(ios,introduced=4_0))) = 1 << 2,
    UIDataDetectorTypeCalendarEvent __attribute__((availability(ios,introduced=4_0))) = 1 << 3,
    UIDataDetectorTypeShipmentTrackingNumber __attribute__((availability(ios,introduced=10_0))) = 1 << 4,
    UIDataDetectorTypeFlightNumber __attribute__((availability(ios,introduced=10_0))) = 1 << 5,
    UIDataDetectorTypeLookupSuggestion __attribute__((availability(ios,introduced=10_0))) = 1 << 6,

    UIDataDetectorTypeNone = 0,
    UIDataDetectorTypeAll = (9223372036854775807L *2UL+1UL)
} __attribute__((availability(tvos,unavailable)));
#pragma clang assume_nonnull begin

typedef NSInteger UIDatePickerMode; enum {
    UIDatePickerModeTime,
    UIDatePickerModeDate,
    UIDatePickerModeDateAndTime,
    UIDatePickerModeCountDownTimer,
} __attribute__((availability(tvos,unavailable)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIDatePicker
#define _REWRITER_typedef_UIDatePicker
typedef struct objc_object UIDatePicker;
typedef struct {} _objc_exc_UIDatePicker;
#endif

struct UIDatePicker_IMPL {
	struct UIControl_IMPL UIControl_IVARS;
};

// @property (nonatomic) UIDatePickerMode datePickerMode;

// @property (nullable, nonatomic, strong) NSLocale *locale;
// @property (null_resettable, nonatomic, copy) NSCalendar *calendar;
// @property (nullable, nonatomic, strong) NSTimeZone *timeZone;

// @property (nonatomic, strong) NSDate *date;
// @property (nullable, nonatomic, strong) NSDate *minimumDate;
// @property (nullable, nonatomic, strong) NSDate *maximumDate;

// @property (nonatomic) NSTimeInterval countDownDuration;
// @property (nonatomic) NSInteger minuteInterval;

// - (void)setDate:(NSDate *)date animated:(BOOL)animated;
/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

typedef NSInteger UIDocumentChangeKind; enum {
    UIDocumentChangeDone,
    UIDocumentChangeUndone,
    UIDocumentChangeRedone,
    UIDocumentChangeCleared
} __attribute__((availability(tvos,unavailable)));

typedef NSInteger UIDocumentSaveOperation; enum {
    UIDocumentSaveForCreating,
    UIDocumentSaveForOverwriting
} __attribute__((availability(tvos,unavailable)));

typedef NSUInteger UIDocumentState; enum {
    UIDocumentStateNormal = 0,
    UIDocumentStateClosed = 1 << 0,
    UIDocumentStateInConflict = 1 << 1,
    UIDocumentStateSavingError = 1 << 2,
    UIDocumentStateEditingDisabled = 1 << 3,
    UIDocumentStateProgressAvailable = 1 << 4
} __attribute__((availability(tvos,unavailable)));

extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIDocumentStateChangedNotification __attribute__((availability(ios,introduced=5_0))) __attribute__((availability(tvos,unavailable)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIDocument
#define _REWRITER_typedef_UIDocument
typedef struct objc_object UIDocument;
typedef struct {} _objc_exc_UIDocument;
#endif

struct UIDocument_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};





// - (instancetype)initWithFileURL:(NSURL *)url __attribute__((objc_designated_initializer)) __attribute__((availability(tvos,unavailable)));






// @property (readonly) NSURL *fileURL __attribute__((availability(tvos,unavailable)));
// @property (readonly, copy) NSString *localizedName __attribute__((availability(tvos,unavailable)));
// @property (readonly, copy, nullable) NSString *fileType __attribute__((availability(tvos,unavailable)));
// @property (copy, nullable) NSDate *fileModificationDate __attribute__((availability(tvos,unavailable)));

// @property (readonly) UIDocumentState documentState __attribute__((availability(tvos,unavailable)));

// @property (readonly, nullable) NSProgress *progress __attribute__((availability(ios,introduced=9_0))) __attribute__((availability(tvos,unavailable)));





// - (void)openWithCompletionHandler:(void (^ _Nullable)(BOOL success))completionHandler __attribute__((availability(tvos,unavailable)));


// - (void)closeWithCompletionHandler:(void (^ _Nullable)(BOOL success))completionHandler __attribute__((availability(tvos,unavailable)));







// - (BOOL)loadFromContents:(id)contents ofType:(nullable NSString *)typeName error:(NSError **)outError __attribute__((availability(tvos,unavailable)));



// - (nullable id)contentsForType:(NSString *)typeName error:(NSError **)outError __attribute__((availability(tvos,unavailable)));






// - (void)disableEditing __attribute__((availability(tvos,unavailable)));
// - (void)enableEditing __attribute__((availability(tvos,unavailable)));






// @property (strong, null_resettable) NSUndoManager *undoManager __attribute__((availability(tvos,unavailable)));




// @property(nonatomic, readonly) BOOL hasUnsavedChanges __attribute__((availability(tvos,unavailable)));





// - (void)updateChangeCount:(UIDocumentChangeKind)change __attribute__((availability(tvos,unavailable)));





// - (id)changeCountTokenForSaveOperation:(UIDocumentSaveOperation)saveOperation __attribute__((availability(tvos,unavailable)));
// - (void)updateChangeCountWithToken:(id)changeCountToken forSaveOperation:(UIDocumentSaveOperation)saveOperation __attribute__((availability(tvos,unavailable)));






// - (void)saveToURL:(NSURL *)url forSaveOperation:(UIDocumentSaveOperation)saveOperation completionHandler:(void (^ _Nullable)(BOOL success))completionHandler __attribute__((availability(tvos,unavailable)));



// - (void)autosaveWithCompletionHandler:(void (^ _Nullable)(BOOL success))completionHandler __attribute__((availability(tvos,unavailable)));


// @property(nonatomic, readonly, nullable) NSString *savingFileType __attribute__((availability(tvos,unavailable)));



// - (NSString *)fileNameExtensionForType:(nullable NSString *)typeName saveOperation:(UIDocumentSaveOperation)saveOperation __attribute__((availability(tvos,unavailable)));



// - (BOOL)writeContents:(id)contents andAttributes:(nullable NSDictionary *)additionalFileAttributes safelyToURL:(NSURL *)url forSaveOperation:(UIDocumentSaveOperation)saveOperation error:(NSError **)outError __attribute__((availability(tvos,unavailable)));


// - (BOOL)writeContents:(id)contents toURL:(NSURL *)url forSaveOperation:(UIDocumentSaveOperation)saveOperation originalContentsURL:(nullable NSURL *)originalContentsURL error:(NSError **)outError __attribute__((availability(tvos,unavailable)));



// - (nullable NSDictionary *)fileAttributesToWriteToURL:(NSURL *)url forSaveOperation:(UIDocumentSaveOperation)saveOperation error:(NSError **)outError __attribute__((availability(tvos,unavailable)));




// - (BOOL)readFromURL:(NSURL *)url error:(NSError **)outError __attribute__((availability(tvos,unavailable)));




// - (void)performAsynchronousFileAccessUsingBlock:(void (^)(void))block __attribute__((availability(tvos,unavailable)));
// - (void)handleError:(NSError *)error userInteractionPermitted:(BOOL)userInteractionPermitted __attribute__((availability(tvos,unavailable)));




// - (void)finishedHandlingError:(NSError *)error recovered:(BOOL)recovered __attribute__((availability(tvos,unavailable)));




// - (void)userInteractionNoLongerPermittedForError:(NSError *)error __attribute__((availability(tvos,unavailable)));







// - (void)revertToContentsOfURL:(NSURL *)url completionHandler:(void (^ _Nullable)(BOOL success))completionHandler __attribute__((availability(tvos,unavailable)));

/* @end */




extern "C" __attribute__((visibility ("default"))) NSString* const NSUserActivityDocumentURLKey __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable)));

// @interface UIDocument (ActivityContinuation)
// @property (nonatomic, strong, nullable) NSUserActivity *userActivity __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable)));
// - (void)updateUserActivityState:(NSUserActivity *)userActivity __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable)));
// - (void)restoreUserActivityState:(NSUserActivity *)userActivity __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable)));
/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @protocol UIDocumentInteractionControllerDelegate;

// @class UIImage;
#ifndef _REWRITER_typedef_UIImage
#define _REWRITER_typedef_UIImage
typedef struct objc_object UIImage;
typedef struct {} _objc_exc_UIImage;
#endif

#ifndef _REWRITER_typedef_UIView
#define _REWRITER_typedef_UIView
typedef struct objc_object UIView;
typedef struct {} _objc_exc_UIView;
#endif

#ifndef _REWRITER_typedef_UIPopoverController
#define _REWRITER_typedef_UIPopoverController
typedef struct objc_object UIPopoverController;
typedef struct {} _objc_exc_UIPopoverController;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_2))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIDocumentInteractionController
#define _REWRITER_typedef_UIDocumentInteractionController
typedef struct objc_object UIDocumentInteractionController;
typedef struct {} _objc_exc_UIDocumentInteractionController;
#endif

struct UIDocumentInteractionController_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// + (UIDocumentInteractionController *)interactionControllerWithURL:(NSURL *)url;

// @property(nullable, nonatomic, weak) id<UIDocumentInteractionControllerDelegate> delegate;

// @property(nullable, strong) NSURL *URL;
// @property(nullable, nonatomic, copy) NSString *UTI;
// @property(nullable, copy) NSString *name;
// @property(nonatomic, readonly) NSArray<UIImage *> *icons;
// @property(nullable, nonatomic, strong) id annotation;






// - (BOOL)presentOptionsMenuFromRect:(CGRect)rect inView:(UIView *)view animated:(BOOL)animated;
// - (BOOL)presentOptionsMenuFromBarButtonItem:(UIBarButtonItem *)item animated:(BOOL)animated;



// - (BOOL)presentPreviewAnimated:(BOOL)animated;




// - (BOOL)presentOpenInMenuFromRect:(CGRect)rect inView:(UIView *)view animated:(BOOL)animated;
// - (BOOL)presentOpenInMenuFromBarButtonItem:(UIBarButtonItem *)item animated:(BOOL)animated;


// - (void)dismissPreviewAnimated:(BOOL)animated;


// - (void)dismissMenuAnimated:(BOOL)animated;



// @property(nonatomic, readonly) NSArray<__kindof UIGestureRecognizer *> *gestureRecognizers;

/* @end */


__attribute__((availability(tvos,unavailable))) // @protocol UIDocumentInteractionControllerDelegate <NSObject>

/* @optional */




// - (UIViewController *)documentInteractionControllerViewControllerForPreview:(UIDocumentInteractionController *)controller;





// - (CGRect)documentInteractionControllerRectForPreview:(UIDocumentInteractionController *)controller;
// - (nullable UIView *)documentInteractionControllerViewForPreview:(UIDocumentInteractionController *)controller;


// - (void)documentInteractionControllerWillBeginPreview:(UIDocumentInteractionController *)controller;
// - (void)documentInteractionControllerDidEndPreview:(UIDocumentInteractionController *)controller;


// - (void)documentInteractionControllerWillPresentOptionsMenu:(UIDocumentInteractionController *)controller;
// - (void)documentInteractionControllerDidDismissOptionsMenu:(UIDocumentInteractionController *)controller;


// - (void)documentInteractionControllerWillPresentOpenInMenu:(UIDocumentInteractionController *)controller;
// - (void)documentInteractionControllerDidDismissOpenInMenu:(UIDocumentInteractionController *)controller;


// - (void)documentInteractionController:(UIDocumentInteractionController *)controller willBeginSendingToApplication:(nullable NSString *)application;
// - (void)documentInteractionController:(UIDocumentInteractionController *)controller didEndSendingToApplication:(nullable NSString *)application;


// - (BOOL)documentInteractionController:(UIDocumentInteractionController *)controller canPerformAction:(nullable SEL)action __attribute__((availability(ios,introduced=3_2,deprecated=6_0,message="" )));
// - (BOOL)documentInteractionController:(UIDocumentInteractionController *)controller performAction:(nullable SEL)action __attribute__((availability(ios,introduced=3_2,deprecated=6_0,message="" )));

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIDocumentPickerViewController;
#ifndef _REWRITER_typedef_UIDocumentPickerViewController
#define _REWRITER_typedef_UIDocumentPickerViewController
typedef struct objc_object UIDocumentPickerViewController;
typedef struct {} _objc_exc_UIDocumentPickerViewController;
#endif

#ifndef _REWRITER_typedef_UIDocumentMenuViewController
#define _REWRITER_typedef_UIDocumentMenuViewController
typedef struct objc_object UIDocumentMenuViewController;
typedef struct {} _objc_exc_UIDocumentMenuViewController;
#endif


__attribute__((availability(tvos,unavailable))) // @protocol UIDocumentPickerDelegate <NSObject>

/* @optional */


// - (void)documentPicker:(UIDocumentPickerViewController *)controller didPickDocumentsAtURLs:(NSArray <NSURL *>*)urls __attribute__((availability(ios,introduced=11_0)));


// - (void)documentPickerWasCancelled:(UIDocumentPickerViewController *)controller;

// - (void)documentPicker:(UIDocumentPickerViewController *)controller didPickDocumentAtURL:(NSURL *)url __attribute__((availability(ios,introduced=8_0,deprecated=11_0,message="" "Implement documentPicker:didPickDocumentsAtURLs: instead")));
/* @end */


typedef NSUInteger UIDocumentPickerMode; enum {
    UIDocumentPickerModeImport,
    UIDocumentPickerModeOpen,
    UIDocumentPickerModeExportToService,
    UIDocumentPickerModeMoveToService
} __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIDocumentPickerViewController
#define _REWRITER_typedef_UIDocumentPickerViewController
typedef struct objc_object UIDocumentPickerViewController;
typedef struct {} _objc_exc_UIDocumentPickerViewController;
#endif

struct UIDocumentPickerViewController_IMPL {
	struct UIViewController_IMPL UIViewController_IVARS;
};



// - (instancetype)initWithDocumentTypes:(NSArray <NSString *>*)allowedUTIs inMode:(UIDocumentPickerMode)mode __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));


// - (instancetype)initWithURL:(NSURL *)url inMode:(UIDocumentPickerMode)mode __attribute__((objc_designated_initializer));


// - (instancetype)initWithURLs:(NSArray <NSURL *> *)urls inMode:(UIDocumentPickerMode)mode __attribute__((objc_designated_initializer)) __attribute__((availability(ios,introduced=11_0)));

// @property (nullable, nonatomic, weak) id<UIDocumentPickerDelegate> delegate;
// @property (nonatomic, assign, readonly) UIDocumentPickerMode documentPickerMode;
// @property (nonatomic, assign) BOOL allowsMultipleSelection __attribute__((availability(ios,introduced=11_0)));

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

typedef NSUInteger UIDocumentMenuOrder; enum {
    UIDocumentMenuOrderFirst,
    UIDocumentMenuOrderLast
} __attribute__((availability(ios,introduced=8_0,deprecated=11_0,message="" ))) __attribute__((availability(tvos,unavailable)));

__attribute__((availability(tvos,unavailable))) // @protocol UIDocumentMenuDelegate <NSObject>

// - (void)documentMenu:(UIDocumentMenuViewController *)documentMenu didPickDocumentPicker:(UIDocumentPickerViewController *)documentPicker;
/* @optional */
// - (void)documentMenuWasCancelled:(UIDocumentMenuViewController *)documentMenu;

/* @end */


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0,deprecated=11_0,message="" "UIDocumentMenuViewController is deprecated. Use UIDocumentPickerViewController directly.")))
__attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIDocumentMenuViewController
#define _REWRITER_typedef_UIDocumentMenuViewController
typedef struct objc_object UIDocumentMenuViewController;
typedef struct {} _objc_exc_UIDocumentMenuViewController;
#endif

struct UIDocumentMenuViewController_IMPL {
	struct UIViewController_IMPL UIViewController_IVARS;
};


// - (instancetype)initWithDocumentTypes:(NSArray <NSString *> *)allowedUTIs inMode:(UIDocumentPickerMode)mode __attribute__((objc_designated_initializer));
// - (instancetype)initWithURL:(NSURL *)url inMode:(UIDocumentPickerMode)mode __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

// - (void)addOptionWithTitle:(NSString *)title image:(nullable UIImage *)image order:(UIDocumentMenuOrder)order handler:(void (^)(void))handler;

// @property (nullable, nonatomic, weak) id<UIDocumentMenuDelegate> delegate;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIDocumentPickerExtensionViewController
#define _REWRITER_typedef_UIDocumentPickerExtensionViewController
typedef struct objc_object UIDocumentPickerExtensionViewController;
typedef struct {} _objc_exc_UIDocumentPickerExtensionViewController;
#endif

struct UIDocumentPickerExtensionViewController_IMPL {
	struct UIViewController_IMPL UIViewController_IVARS;
};






// - (void)dismissGrantingAccessToURL:(nullable NSURL *)url;

// - (void)prepareForPresentationInMode:(UIDocumentPickerMode)mode;


// @property (nonatomic, readonly, assign) UIDocumentPickerMode documentPickerMode;


// @property (nullable, nonatomic, readonly, copy) NSURL *originalURL;


// @property (nullable, nonatomic, readonly, copy) NSArray<NSString *> *validTypes;



// @property (nonatomic, readonly, copy) NSString *providerIdentifier;
// @property (nullable, nonatomic, readonly, copy) NSURL *documentStorageURL;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UICloudSharingController;
#ifndef _REWRITER_typedef_UICloudSharingController
#define _REWRITER_typedef_UICloudSharingController
typedef struct objc_object UICloudSharingController;
typedef struct {} _objc_exc_UICloudSharingController;
#endif

#ifndef _REWRITER_typedef_CKShare
#define _REWRITER_typedef_CKShare
typedef struct objc_object CKShare;
typedef struct {} _objc_exc_CKShare;
#endif

#ifndef _REWRITER_typedef_CKContainer
#define _REWRITER_typedef_CKContainer
typedef struct objc_object CKContainer;
typedef struct {} _objc_exc_CKContainer;
#endif


typedef NSUInteger UICloudSharingPermissionOptions; enum {
    UICloudSharingPermissionStandard = 0,

    UICloudSharingPermissionAllowPublic = 1 << 0,
    UICloudSharingPermissionAllowPrivate = 1 << 1,

    UICloudSharingPermissionAllowReadOnly = 1 << 2,
    UICloudSharingPermissionAllowReadWrite = 1 << 3,
} __attribute__((availability(ios,introduced=10_0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));

__attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))
// @protocol UICloudSharingControllerDelegate <NSObject>

// - (void)cloudSharingController:(UICloudSharingController *)csc failedToSaveShareWithError:(NSError *)error;


// - (nullable NSString *)itemTitleForCloudSharingController:(UICloudSharingController *)csc;

/* @optional */

// - (nullable NSData *)itemThumbnailDataForCloudSharingController:(UICloudSharingController *)csc;

// - (nullable NSString *)itemTypeForCloudSharingController:(UICloudSharingController *)csc;

// - (void)cloudSharingControllerDidSaveShare:(UICloudSharingController *)csc;
// - (void)cloudSharingControllerDidStopSharing:(UICloudSharingController *)csc;

/* @end */


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) 
#ifndef _REWRITER_typedef_UICloudSharingController
#define _REWRITER_typedef_UICloudSharingController
typedef struct objc_object UICloudSharingController;
typedef struct {} _objc_exc_UICloudSharingController;
#endif

struct UICloudSharingController_IMPL {
	struct UIViewController_IMPL UIViewController_IVARS;
};


// - (instancetype)initWithNibName:(nullable NSString *)nibNameOrNil bundle:(nullable NSBundle *)nibBundleOrNil __attribute__((unavailable));
// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((unavailable));






// - (instancetype)initWithPreparationHandler:(void (^)(UICloudSharingController *controller, void (^preparationCompletionHandler)(CKShare * _Nullable, CKContainer * _Nullable, NSError * _Nullable)))preparationHandler;



// - (instancetype)initWithShare:(CKShare *)share container:(CKContainer *)container;

// @property (nonatomic, weak) id<UICloudSharingControllerDelegate> delegate;
// @property (nonatomic, readonly, strong, nullable) CKShare *share;



// @property (nonatomic) UICloudSharingPermissionOptions availablePermissions;





// - (id <UIActivityItemSource>)activityItemSource;

/* @end */

#pragma clang assume_nonnull end






#pragma clang assume_nonnull begin

typedef NSString *NSFileProviderItemIdentifier __attribute__((swift_wrapper(struct)));





extern "C" NSFileProviderItemIdentifier const NSFileProviderRootContainerItemIdentifier __attribute__((swift_name("NSFileProviderItemIdentifier.rootContainer"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern "C" NSFileProviderItemIdentifier const NSFileProviderWorkingSetContainerItemIdentifier __attribute__((swift_name("NSFileProviderItemIdentifier.workingSet"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));





extern "C" unsigned long long const NSFileProviderFavoriteRankUnranked __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

typedef NSUInteger NSFileProviderItemCapabilities; enum {




    NSFileProviderItemCapabilitiesAllowsReading = 1 << 0,





    NSFileProviderItemCapabilitiesAllowsWriting = 1 << 1,


    NSFileProviderItemCapabilitiesAllowsReparenting = 1 << 2,


    NSFileProviderItemCapabilitiesAllowsRenaming = 1 << 3,


    NSFileProviderItemCapabilitiesAllowsTrashing = 1 << 4,


    NSFileProviderItemCapabilitiesAllowsDeleting = 1 << 5,





    NSFileProviderItemCapabilitiesAllowsAddingSubItems = NSFileProviderItemCapabilitiesAllowsWriting,





    NSFileProviderItemCapabilitiesAllowsContentEnumerating = NSFileProviderItemCapabilitiesAllowsReading,

    NSFileProviderItemCapabilitiesAllowsAll =
          NSFileProviderItemCapabilitiesAllowsReading
        | NSFileProviderItemCapabilitiesAllowsWriting
        | NSFileProviderItemCapabilitiesAllowsReparenting
        | NSFileProviderItemCapabilitiesAllowsRenaming
        | NSFileProviderItemCapabilitiesAllowsTrashing
        | NSFileProviderItemCapabilitiesAllowsDeleting
};

// @protocol NSFileProviderItem <NSObject>

// @property (nonatomic, readonly, copy) NSFileProviderItemIdentifier itemIdentifier;
// @property (nonatomic, readonly, copy) NSFileProviderItemIdentifier parentItemIdentifier;




// @property (nonatomic, readonly, copy) NSString *filename;




// @property (nonatomic, readonly, copy) NSString *typeIdentifier;

/* @optional */





// @property (nonatomic, readonly) NSFileProviderItemCapabilities capabilities;

// @property (nonatomic, readonly, copy, nullable) NSNumber *documentSize;
// @property (nonatomic, readonly, copy, nullable) NSNumber *childItemCount;
// @property (nonatomic, readonly, copy, nullable) NSDate *creationDate;
// @property (nonatomic, readonly, copy, nullable) NSDate *contentModificationDate;
// @property (nonatomic, readonly, copy, nullable) NSDate *lastUsedDate;
// @property (nonatomic, readonly, copy, nullable) NSData *tagData;
// @property (nonatomic, readonly, copy, nullable) NSNumber *favoriteRank;




// @property (nonatomic, readonly, getter=isTrashed) BOOL trashed;





// @property (nonatomic, readonly, getter=isUploaded) BOOL uploaded;
// @property (nonatomic, readonly, getter=isUploading) BOOL uploading;






// @property (nonatomic, readonly, copy, nullable) NSError *uploadingError;

// @property (nonatomic, readonly, getter=isDownloaded) BOOL downloaded;
// @property (nonatomic, readonly, getter=isDownloading) BOOL downloading;
// @property (nonatomic, readonly, copy, nullable) NSError *downloadingError;

// @property (nonatomic, readonly, getter=isMostRecentVersionDownloaded) BOOL mostRecentVersionDownloaded;

// @property (nonatomic, readonly, getter=isShared) BOOL shared;
// @property (nonatomic, readonly, getter=isSharedByCurrentUser) BOOL sharedByCurrentUser;




// @property (nonatomic, strong, readonly, nullable) NSPersonNameComponents *ownerNameComponents;
// @property (nonatomic, strong, readonly, nullable) NSPersonNameComponents *mostRecentEditorNameComponents;







// @property (nonatomic, strong, readonly, nullable) NSData *versionIdentifier;







// @property (nonatomic, strong, readonly, nullable) NSDictionary *userInfo;

/* @end */



typedef id/*<NSFileProviderItem>*/ NSFileProviderItem;
#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

// @class NSFileProviderDomain;
#ifndef _REWRITER_typedef_NSFileProviderDomain
#define _REWRITER_typedef_NSFileProviderDomain
typedef struct objc_object NSFileProviderDomain;
typedef struct {} _objc_exc_NSFileProviderDomain;
#endif


__attribute__((availability(ios,introduced=8.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_NSFileProviderExtension
#define _REWRITER_typedef_NSFileProviderExtension
typedef struct objc_object NSFileProviderExtension;
typedef struct {} _objc_exc_NSFileProviderExtension;
#endif

struct NSFileProviderExtension_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};







// - (nullable NSURL *)URLForItemWithPersistentIdentifier:(NSFileProviderItemIdentifier)identifier;
// - (nullable NSFileProviderItemIdentifier)persistentIdentifierForItemAtURL:(NSURL *)url;

// - (nullable NSFileProviderItem)itemForIdentifier:(NSFileProviderItemIdentifier)identifier error:(NSError * _Nullable *)error __attribute__((swift_name("item(for:)"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));






// - (void)providePlaceholderAtURL:(NSURL *)url completionHandler:(void (^)(NSError * _Nullable error))completionHandler;


// - (void)startProvidingItemAtURL:(NSURL *)url completionHandler:(void (^)(NSError * _Nullable error))completionHandler __attribute__((swift_name("startProvidingItem(at:completionHandler:)")));






// - (void)stopProvidingItemAtURL:(NSURL *)url __attribute__((swift_name("stopProvidingItem(at:)")));


// - (void)itemChangedAtURL:(NSURL *)url;

/* @end */


// @interface NSFileProviderExtension (Deprecated)




// + (BOOL)writePlaceholderAtURL:(NSURL *)placeholderURL withMetadata:(NSDictionary <NSURLResourceKey, id> *)metadata error:(NSError **)error __attribute__((availability(ios,introduced=8.0,deprecated=11.0,message="Use the corresponding method on NSFileProviderManager instead"))) __attribute__((availability(macos,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));



// + (NSURL *)placeholderURLForURL:(NSURL *)url __attribute__((availability(ios,introduced=8.0,deprecated=11.0,replacement="NSFileProviderManager +placeholderURLForURL:"))) __attribute__((availability(macos,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));




// @property(nonatomic, readonly) NSString *providerIdentifier __attribute__((availability(ios,introduced=8.0,deprecated=11.0,replacement="NSFileProviderManager -providerIdentifier"))) __attribute__((availability(macos,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));



// @property(nonatomic, readonly) NSURL *documentStorageURL __attribute__((availability(ios,introduced=8.0,deprecated=11.0,replacement="NSFileProviderManager -documentStorageURL"))) __attribute__((availability(macos,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) 
#ifndef _REWRITER_typedef_UIVisualEffect
#define _REWRITER_typedef_UIVisualEffect
typedef struct objc_object UIVisualEffect;
typedef struct {} _objc_exc_UIVisualEffect;
#endif

struct UIVisualEffect_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

typedef NSInteger UIBlurEffectStyle; enum {
    UIBlurEffectStyleExtraLight,
    UIBlurEffectStyleLight,
    UIBlurEffectStyleDark,
    UIBlurEffectStyleExtraDark __attribute__((availability(tvos,introduced=10_0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable))),
    UIBlurEffectStyleRegular __attribute__((availability(ios,introduced=10_0))),
    UIBlurEffectStyleProminent __attribute__((availability(ios,introduced=10_0))),
} __attribute__((availability(ios,introduced=8_0)));


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8.0))) 
#ifndef _REWRITER_typedef_UIBlurEffect
#define _REWRITER_typedef_UIBlurEffect
typedef struct objc_object UIBlurEffect;
typedef struct {} _objc_exc_UIBlurEffect;
#endif

struct UIBlurEffect_IMPL {
	struct UIVisualEffect_IMPL UIVisualEffect_IVARS;
};


// + (UIBlurEffect *)effectWithStyle:(UIBlurEffectStyle)style;

/* @end */

#pragma clang assume_nonnull end
// @class UIBlurEffect;
#ifndef _REWRITER_typedef_UIBlurEffect
#define _REWRITER_typedef_UIBlurEffect
typedef struct objc_object UIBlurEffect;
typedef struct {} _objc_exc_UIBlurEffect;
#endif


#pragma clang assume_nonnull begin



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8.0))) 
#ifndef _REWRITER_typedef_UIVibrancyEffect
#define _REWRITER_typedef_UIVibrancyEffect
typedef struct objc_object UIVibrancyEffect;
typedef struct {} _objc_exc_UIVibrancyEffect;
#endif

struct UIVibrancyEffect_IMPL {
	struct UIVisualEffect_IMPL UIVisualEffect_IVARS;
};


// + (UIVibrancyEffect *)effectForBlurEffect:(UIBlurEffect *)blurEffect;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) 
#ifndef _REWRITER_typedef_UIVisualEffectView
#define _REWRITER_typedef_UIVisualEffectView
typedef struct objc_object UIVisualEffectView;
typedef struct {} _objc_exc_UIVisualEffectView;
#endif

struct UIVisualEffectView_IMPL {
	struct UIView_IMPL UIView_IVARS;
};


// @property (nonatomic, strong, readonly) UIView *contentView;

// @property (nonatomic, copy, nullable) UIVisualEffect *effect;

// - (instancetype)initWithEffect:(nullable UIVisualEffect *)effect __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

/* @end */

#pragma clang assume_nonnull end





#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)))

#ifndef _REWRITER_typedef_UIFontMetrics
#define _REWRITER_typedef_UIFontMetrics
typedef struct objc_object UIFontMetrics;
typedef struct {} _objc_exc_UIFontMetrics;
#endif

struct UIFontMetrics_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


@property (class, readonly, strong) UIFontMetrics *defaultMetrics;

// + (instancetype)metricsForTextStyle:(UIFontTextStyle)textStyle;

// - (instancetype)init __attribute__((unavailable));
// - (instancetype)initForTextStyle:(UIFontTextStyle)textStyle __attribute__((objc_designated_initializer));

// - (UIFont *)scaledFontForFont:(UIFont *)font;
// - (UIFont *)scaledFontForFont:(UIFont *)font maximumPointSize:(CGFloat)maximumPointSize;
// - (UIFont *)scaledFontForFont:(UIFont *)font compatibleWithTraitCollection:(nullable UITraitCollection *)traitCollection __attribute__((availability(watchos,unavailable)));
// - (UIFont *)scaledFontForFont:(UIFont *)font maximumPointSize:(CGFloat)maximumPointSize compatibleWithTraitCollection:(nullable UITraitCollection *)traitCollection __attribute__((availability(watchos,unavailable)));

// - (CGFloat)scaledValueForValue:(CGFloat)value;
// - (CGFloat)scaledValueForValue:(CGFloat)value compatibleWithTraitCollection:(nullable UITraitCollection *)traitCollection __attribute__((availability(watchos,unavailable)));

/* @end */

#pragma clang assume_nonnull end



#pragma clang assume_nonnull begin

// @protocol UIGestureRecognizerDelegate;
// @class UIView;
#ifndef _REWRITER_typedef_UIView
#define _REWRITER_typedef_UIView
typedef struct objc_object UIView;
typedef struct {} _objc_exc_UIView;
#endif

#ifndef _REWRITER_typedef_UIEvent
#define _REWRITER_typedef_UIEvent
typedef struct objc_object UIEvent;
typedef struct {} _objc_exc_UIEvent;
#endif

#ifndef _REWRITER_typedef_UITouch
#define _REWRITER_typedef_UITouch
typedef struct objc_object UITouch;
typedef struct {} _objc_exc_UITouch;
#endif

#ifndef _REWRITER_typedef_UIPress
#define _REWRITER_typedef_UIPress
typedef struct objc_object UIPress;
typedef struct {} _objc_exc_UIPress;
#endif


typedef NSInteger UIGestureRecognizerState; enum {
    UIGestureRecognizerStatePossible,

    UIGestureRecognizerStateBegan,
    UIGestureRecognizerStateChanged,
    UIGestureRecognizerStateEnded,
    UIGestureRecognizerStateCancelled,

    UIGestureRecognizerStateFailed,


    UIGestureRecognizerStateRecognized = UIGestureRecognizerStateEnded
};

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_2))) 
#ifndef _REWRITER_typedef_UIGestureRecognizer
#define _REWRITER_typedef_UIGestureRecognizer
typedef struct objc_object UIGestureRecognizer;
typedef struct {} _objc_exc_UIGestureRecognizer;
#endif

struct UIGestureRecognizer_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};





// - (instancetype)initWithTarget:(nullable id)target action:(nullable SEL)action __attribute__((objc_designated_initializer));

// - (void)addTarget:(id)target action:(SEL)action;
// - (void)removeTarget:(nullable id)target action:(nullable SEL)action;

// @property(nonatomic,readonly) UIGestureRecognizerState state;

// @property(nullable,nonatomic,weak) id <UIGestureRecognizerDelegate> delegate;

// @property(nonatomic, getter=isEnabled) BOOL enabled;


// @property(nullable, nonatomic,readonly) UIView *view;

// @property(nonatomic) BOOL cancelsTouchesInView;
// @property(nonatomic) BOOL delaysTouchesBegan;
// @property(nonatomic) BOOL delaysTouchesEnded;

// @property(nonatomic, copy) NSArray<NSNumber *> *allowedTouchTypes __attribute__((availability(ios,introduced=9_0)));
// @property(nonatomic, copy) NSArray<NSNumber *> *allowedPressTypes __attribute__((availability(ios,introduced=9_0)));




// @property (nonatomic) BOOL requiresExclusiveTouchType __attribute__((availability(ios,introduced=9_2)));




// - (void)requireGestureRecognizerToFail:(UIGestureRecognizer *)otherGestureRecognizer;


// - (CGPoint)locationInView:(nullable UIView*)view;


// @property(nonatomic, readonly) NSUInteger numberOfTouches;



// - (CGPoint)locationOfTouch:(NSUInteger)touchIndex inView:(nullable UIView*)view;

// @property (nullable, nonatomic, copy) NSString *name __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));

/* @end */



// @protocol UIGestureRecognizerDelegate <NSObject>
/* @optional */

// - (BOOL)gestureRecognizerShouldBegin:(UIGestureRecognizer *)gestureRecognizer;





// - (BOOL)gestureRecognizer:(UIGestureRecognizer *)gestureRecognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer *)otherGestureRecognizer;





// - (BOOL)gestureRecognizer:(UIGestureRecognizer *)gestureRecognizer shouldRequireFailureOfGestureRecognizer:(UIGestureRecognizer *)otherGestureRecognizer __attribute__((availability(ios,introduced=7_0)));
// - (BOOL)gestureRecognizer:(UIGestureRecognizer *)gestureRecognizer shouldBeRequiredToFailByGestureRecognizer:(UIGestureRecognizer *)otherGestureRecognizer __attribute__((availability(ios,introduced=7_0)));


// - (BOOL)gestureRecognizer:(UIGestureRecognizer *)gestureRecognizer shouldReceiveTouch:(UITouch *)touch;


// - (BOOL)gestureRecognizer:(UIGestureRecognizer *)gestureRecognizer shouldReceivePress:(UIPress *)press;

/* @end */

#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin

// @class UIImage;
#ifndef _REWRITER_typedef_UIImage
#define _REWRITER_typedef_UIImage
typedef struct objc_object UIImage;
typedef struct {} _objc_exc_UIImage;
#endif


extern "C" __attribute__((visibility ("default"))) CGContextRef _Nullable UIGraphicsGetCurrentContext(void) __attribute__((cf_returns_not_retained));
extern "C" __attribute__((visibility ("default"))) void UIGraphicsPushContext(CGContextRef context);
extern "C" __attribute__((visibility ("default"))) void UIGraphicsPopContext(void);

extern "C" __attribute__((visibility ("default"))) void UIRectFillUsingBlendMode(CGRect rect, CGBlendMode blendMode);
extern "C" __attribute__((visibility ("default"))) void UIRectFill(CGRect rect);

extern "C" __attribute__((visibility ("default"))) void UIRectFrameUsingBlendMode(CGRect rect, CGBlendMode blendMode);
extern "C" __attribute__((visibility ("default"))) void UIRectFrame(CGRect rect);

extern "C" __attribute__((visibility ("default"))) void UIRectClip(CGRect rect);





extern "C" __attribute__((visibility ("default"))) void UIGraphicsBeginImageContext(CGSize size);
extern "C" __attribute__((visibility ("default"))) void UIGraphicsBeginImageContextWithOptions(CGSize size, BOOL opaque, CGFloat scale) __attribute__((availability(ios,introduced=4_0)));
extern "C" __attribute__((visibility ("default"))) UIImage* _Nullable UIGraphicsGetImageFromCurrentImageContext(void);
extern "C" __attribute__((visibility ("default"))) void UIGraphicsEndImageContext(void);



extern "C" __attribute__((visibility ("default"))) BOOL UIGraphicsBeginPDFContextToFile(NSString *path, CGRect bounds, NSDictionary * _Nullable documentInfo) __attribute__((availability(ios,introduced=3_2)));
extern "C" __attribute__((visibility ("default"))) void UIGraphicsBeginPDFContextToData(NSMutableData *data, CGRect bounds, NSDictionary * _Nullable documentInfo) __attribute__((availability(ios,introduced=3_2)));
extern "C" __attribute__((visibility ("default"))) void UIGraphicsEndPDFContext(void) __attribute__((availability(ios,introduced=3_2)));

extern "C" __attribute__((visibility ("default"))) void UIGraphicsBeginPDFPage(void) __attribute__((availability(ios,introduced=3_2)));
extern "C" __attribute__((visibility ("default"))) void UIGraphicsBeginPDFPageWithInfo(CGRect bounds, NSDictionary * _Nullable pageInfo) __attribute__((availability(ios,introduced=3_2)));

extern "C" __attribute__((visibility ("default"))) CGRect UIGraphicsGetPDFContextBounds(void) __attribute__((availability(ios,introduced=3_2)));

extern "C" __attribute__((visibility ("default"))) void UIGraphicsSetPDFContextURLForRect(NSURL *url, CGRect rect) __attribute__((availability(ios,introduced=3_2)));
extern "C" __attribute__((visibility ("default"))) void UIGraphicsAddPDFContextDestinationAtPoint(NSString *name, CGPoint point) __attribute__((availability(ios,introduced=3_2)));
extern "C" __attribute__((visibility ("default"))) void UIGraphicsSetPDFContextDestinationForRect(NSString *name, CGRect rect) __attribute__((availability(ios,introduced=3_2)));
#pragma clang assume_nonnull end



#pragma clang assume_nonnull begin





__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0))) 
#ifndef _REWRITER_typedef_UIGraphicsRendererFormat
#define _REWRITER_typedef_UIGraphicsRendererFormat
typedef struct objc_object UIGraphicsRendererFormat;
typedef struct {} _objc_exc_UIGraphicsRendererFormat;
#endif

struct UIGraphicsRendererFormat_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



// + (instancetype)defaultFormat __attribute__((availability(tvos,introduced=10.0,deprecated=11.0,replacement="+preferredFormat"))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));


// + (instancetype)preferredFormat __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));


// @property (nonatomic, readonly) CGRect bounds;
/* @end */







__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0))) 
#ifndef _REWRITER_typedef_UIGraphicsRendererContext
#define _REWRITER_typedef_UIGraphicsRendererContext
typedef struct objc_object UIGraphicsRendererContext;
typedef struct {} _objc_exc_UIGraphicsRendererContext;
#endif

struct UIGraphicsRendererContext_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};

// @property (nonatomic, readonly) CGContextRef CGContext;
// @property (nonatomic, readonly) __kindof UIGraphicsRendererFormat *format;

// - (void)fillRect:(CGRect)rect;
// - (void)fillRect:(CGRect)rect blendMode:(CGBlendMode)blendMode;

// - (void)strokeRect:(CGRect)rect;
// - (void)strokeRect:(CGRect)rect blendMode:(CGBlendMode)blendMode;

// - (void)clipToRect:(CGRect)rect;
/* @end */





__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0))) 
#ifndef _REWRITER_typedef_UIGraphicsRenderer
#define _REWRITER_typedef_UIGraphicsRenderer
typedef struct objc_object UIGraphicsRenderer;
typedef struct {} _objc_exc_UIGraphicsRenderer;
#endif

struct UIGraphicsRenderer_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};




// - (instancetype)initWithBounds:(CGRect)bounds;
// - (instancetype)initWithBounds:(CGRect)bounds format:(UIGraphicsRendererFormat *)format __attribute__((objc_designated_initializer));

// @property (nonatomic, readonly) __kindof UIGraphicsRendererFormat *format;
// @property (nonatomic, readonly) BOOL allowsImageOutput;
/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIGraphicsImageRendererContext;
#ifndef _REWRITER_typedef_UIGraphicsImageRendererContext
#define _REWRITER_typedef_UIGraphicsImageRendererContext
typedef struct objc_object UIGraphicsImageRendererContext;
typedef struct {} _objc_exc_UIGraphicsImageRendererContext;
#endif


typedef void (*UIGraphicsImageDrawingActions)(UIGraphicsImageRendererContext *rendererContext) __attribute__((availability(ios,introduced=10_0)));


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0))) 
#ifndef _REWRITER_typedef_UIGraphicsImageRendererFormat
#define _REWRITER_typedef_UIGraphicsImageRendererFormat
typedef struct objc_object UIGraphicsImageRendererFormat;
typedef struct {} _objc_exc_UIGraphicsImageRendererFormat;
#endif

struct UIGraphicsImageRendererFormat_IMPL {
	struct UIGraphicsRendererFormat_IMPL UIGraphicsRendererFormat_IVARS;
};


// @property (nonatomic) CGFloat scale;
// @property (nonatomic) BOOL opaque;
// @property (nonatomic) BOOL prefersExtendedRange;



// + (instancetype)formatForTraitCollection:(UITraitCollection *)traitCollection __attribute__((availability(ios,introduced=11_0)));

/* @end */


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0))) 
#ifndef _REWRITER_typedef_UIGraphicsImageRendererContext
#define _REWRITER_typedef_UIGraphicsImageRendererContext
typedef struct objc_object UIGraphicsImageRendererContext;
typedef struct {} _objc_exc_UIGraphicsImageRendererContext;
#endif

struct UIGraphicsImageRendererContext_IMPL {
	struct UIGraphicsRendererContext_IMPL UIGraphicsRendererContext_IVARS;
};

// @property (nonatomic, readonly) UIImage *currentImage;
/* @end */


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0))) 
#ifndef _REWRITER_typedef_UIGraphicsImageRenderer
#define _REWRITER_typedef_UIGraphicsImageRenderer
typedef struct objc_object UIGraphicsImageRenderer;
typedef struct {} _objc_exc_UIGraphicsImageRenderer;
#endif

struct UIGraphicsImageRenderer_IMPL {
	struct UIGraphicsRenderer_IMPL UIGraphicsRenderer_IVARS;
};

// - (instancetype)initWithSize:(CGSize)size;
// - (instancetype)initWithSize:(CGSize)size format:(UIGraphicsImageRendererFormat *)format __attribute__((objc_designated_initializer));
// - (instancetype)initWithBounds:(CGRect)bounds format:(UIGraphicsImageRendererFormat *)format __attribute__((objc_designated_initializer));



// - (UIImage *)imageWithActions:(__attribute__((noescape)) UIGraphicsImageDrawingActions)actions;


// - (NSData *)PNGDataWithActions:(__attribute__((noescape)) UIGraphicsImageDrawingActions)actions;
// - (NSData *)JPEGDataWithCompressionQuality:(CGFloat)compressionQuality actions:(__attribute__((noescape)) UIGraphicsImageDrawingActions)actions;
/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIGraphicsPDFRendererContext;
#ifndef _REWRITER_typedef_UIGraphicsPDFRendererContext
#define _REWRITER_typedef_UIGraphicsPDFRendererContext
typedef struct objc_object UIGraphicsPDFRendererContext;
typedef struct {} _objc_exc_UIGraphicsPDFRendererContext;
#endif


typedef void (*UIGraphicsPDFDrawingActions)(UIGraphicsPDFRendererContext *rendererContext) __attribute__((availability(ios,introduced=10_0)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0))) 
#ifndef _REWRITER_typedef_UIGraphicsPDFRendererFormat
#define _REWRITER_typedef_UIGraphicsPDFRendererFormat
typedef struct objc_object UIGraphicsPDFRendererFormat;
typedef struct {} _objc_exc_UIGraphicsPDFRendererFormat;
#endif

struct UIGraphicsPDFRendererFormat_IMPL {
	struct UIGraphicsRendererFormat_IMPL UIGraphicsRendererFormat_IVARS;
};

// @property (nonatomic, copy) NSDictionary<NSString *, id> *documentInfo;
/* @end */


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0))) 
#ifndef _REWRITER_typedef_UIGraphicsPDFRendererContext
#define _REWRITER_typedef_UIGraphicsPDFRendererContext
typedef struct objc_object UIGraphicsPDFRendererContext;
typedef struct {} _objc_exc_UIGraphicsPDFRendererContext;
#endif

struct UIGraphicsPDFRendererContext_IMPL {
	struct UIGraphicsRendererContext_IMPL UIGraphicsRendererContext_IVARS;
};

// @property (nonatomic, readonly) CGRect pdfContextBounds;

// - (void)beginPage;
// - (void)beginPageWithBounds:(CGRect)bounds pageInfo:(NSDictionary<NSString *, id> *)pageInfo;

// - (void)setURL:(NSURL *)url forRect:(CGRect)rect;
// - (void)addDestinationWithName:(NSString *)name atPoint:(CGPoint)point;
// - (void)setDestinationWithName:(NSString *)name forRect:(CGRect)rect;
/* @end */


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0))) 
#ifndef _REWRITER_typedef_UIGraphicsPDFRenderer
#define _REWRITER_typedef_UIGraphicsPDFRenderer
typedef struct objc_object UIGraphicsPDFRenderer;
typedef struct {} _objc_exc_UIGraphicsPDFRenderer;
#endif

struct UIGraphicsPDFRenderer_IMPL {
	struct UIGraphicsRenderer_IMPL UIGraphicsRenderer_IVARS;
};

// - (instancetype)initWithBounds:(CGRect)bounds format:(UIGraphicsPDFRendererFormat *)format __attribute__((objc_designated_initializer));

// - (BOOL)writePDFToURL:(NSURL *)url withActions:(__attribute__((noescape)) UIGraphicsPDFDrawingActions)actions error:(NSError **)error;
// - (NSData *)PDFDataWithActions:(__attribute__((noescape)) UIGraphicsPDFDrawingActions)actions;
/* @end */

#pragma clang assume_nonnull end



#pragma clang assume_nonnull begin

// @class UITraitCollection;
#ifndef _REWRITER_typedef_UITraitCollection
#define _REWRITER_typedef_UITraitCollection
typedef struct objc_object UITraitCollection;
typedef struct {} _objc_exc_UITraitCollection;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) 
#ifndef _REWRITER_typedef_UIImageAsset
#define _REWRITER_typedef_UIImageAsset
typedef struct objc_object UIImageAsset;
typedef struct {} _objc_exc_UIImageAsset;
#endif

struct UIImageAsset_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)init __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

// - (UIImage *)imageWithTraitCollection:(UITraitCollection *)traitCollection;
// - (void)registerImage:(UIImage *)image withTraitCollection:(UITraitCollection *)traitCollection;
// - (void)unregisterImageWithTraitCollection:(UITraitCollection *)traitCollection;
/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0))) 
#ifndef _REWRITER_typedef_NSDataAsset
#define _REWRITER_typedef_NSDataAsset
typedef struct objc_object NSDataAsset;
typedef struct {} _objc_exc_NSDataAsset;
#endif

struct NSDataAsset_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)init __attribute__((unavailable));


// - (nullable instancetype)initWithName:(NSString *)name;

// - (nullable instancetype)initWithName:(NSString *)name bundle:(NSBundle *)bundle __attribute__((objc_designated_initializer));


// @property (nonatomic, readonly, copy) NSString *name;

// @property (nonatomic, readonly, copy) NSData *data;

// @property (nonatomic, readonly, copy) NSString *typeIdentifier;

/* @end */

#pragma clang assume_nonnull end








#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_2))) 
#ifndef _REWRITER_typedef_UIPanGestureRecognizer
#define _REWRITER_typedef_UIPanGestureRecognizer
typedef struct objc_object UIPanGestureRecognizer;
typedef struct {} _objc_exc_UIPanGestureRecognizer;
#endif

struct UIPanGestureRecognizer_IMPL {
	struct UIGestureRecognizer_IMPL UIGestureRecognizer_IVARS;
};


// @property (nonatomic) NSUInteger minimumNumberOfTouches __attribute__((availability(tvos,unavailable)));
// @property (nonatomic) NSUInteger maximumNumberOfTouches __attribute__((availability(tvos,unavailable)));

// - (CGPoint)translationInView:(nullable UIView *)view;
// - (void)setTranslation:(CGPoint)translation inView:(nullable UIView *)view;

// - (CGPoint)velocityInView:(nullable UIView *)view;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin







__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_2))) 
#ifndef _REWRITER_typedef_UITapGestureRecognizer
#define _REWRITER_typedef_UITapGestureRecognizer
typedef struct objc_object UITapGestureRecognizer;
typedef struct {} _objc_exc_UITapGestureRecognizer;
#endif

struct UITapGestureRecognizer_IMPL {
	struct UIGestureRecognizer_IMPL UIGestureRecognizer_IVARS;
};


// @property (nonatomic) NSUInteger numberOfTapsRequired;
// @property (nonatomic) NSUInteger numberOfTouchesRequired __attribute__((availability(tvos,unavailable)));

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

typedef NSInteger UINavigationControllerOperation; enum {
    UINavigationControllerOperationNone,
    UINavigationControllerOperationPush,
    UINavigationControllerOperationPop,
};

extern "C" __attribute__((visibility ("default"))) const CGFloat UINavigationControllerHideShowBarDuration;

// @class UIView;
#ifndef _REWRITER_typedef_UIView
#define _REWRITER_typedef_UIView
typedef struct objc_object UIView;
typedef struct {} _objc_exc_UIView;
#endif

#ifndef _REWRITER_typedef_UINavigationBar
#define _REWRITER_typedef_UINavigationBar
typedef struct objc_object UINavigationBar;
typedef struct {} _objc_exc_UINavigationBar;
#endif

#ifndef _REWRITER_typedef_UINavigationItem
#define _REWRITER_typedef_UINavigationItem
typedef struct objc_object UINavigationItem;
typedef struct {} _objc_exc_UINavigationItem;
#endif

#ifndef _REWRITER_typedef_UIToolbar
#define _REWRITER_typedef_UIToolbar
typedef struct objc_object UIToolbar;
typedef struct {} _objc_exc_UIToolbar;
#endif

// @protocol UINavigationControllerDelegate;


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) 
#ifndef _REWRITER_typedef_UINavigationController
#define _REWRITER_typedef_UINavigationController
typedef struct objc_object UINavigationController;
typedef struct {} _objc_exc_UINavigationController;
#endif

struct UINavigationController_IMPL {
	struct UIViewController_IMPL UIViewController_IVARS;
};







// - (instancetype)initWithNavigationBarClass:(nullable Class)navigationBarClass toolbarClass:(nullable Class)toolbarClass __attribute__((availability(ios,introduced=5_0)));

// - (instancetype)initWithRootViewController:(UIViewController *)rootViewController;

// - (void)pushViewController:(UIViewController *)viewController animated:(BOOL)animated;

// - (nullable UIViewController *)popViewControllerAnimated:(BOOL)animated;
// - (nullable NSArray<__kindof UIViewController *> *)popToViewController:(UIViewController *)viewController animated:(BOOL)animated;
// - (nullable NSArray<__kindof UIViewController *> *)popToRootViewControllerAnimated:(BOOL)animated;

// @property(nullable, nonatomic,readonly,strong) UIViewController *topViewController;
// @property(nullable, nonatomic,readonly,strong) UIViewController *visibleViewController;

// @property(nonatomic,copy) NSArray<__kindof UIViewController *> *viewControllers;

// - (void)setViewControllers:(NSArray<UIViewController *> *)viewControllers animated:(BOOL)animated __attribute__((availability(ios,introduced=3_0)));

// @property(nonatomic,getter=isNavigationBarHidden) BOOL navigationBarHidden;
// - (void)setNavigationBarHidden:(BOOL)hidden animated:(BOOL)animated;
// @property(nonatomic,readonly) UINavigationBar *navigationBar;

// @property(nonatomic,getter=isToolbarHidden) BOOL toolbarHidden __attribute__((availability(ios,introduced=3_0))) __attribute__((availability(tvos,unavailable)));
// - (void)setToolbarHidden:(BOOL)hidden animated:(BOOL)animated __attribute__((availability(ios,introduced=3_0))) __attribute__((availability(tvos,unavailable)));
// @property(null_resettable,nonatomic,readonly) UIToolbar *toolbar __attribute__((availability(ios,introduced=3_0))) __attribute__((availability(tvos,unavailable)));

// @property(nullable, nonatomic, weak) id<UINavigationControllerDelegate> delegate;
// @property(nullable, nonatomic, readonly) UIGestureRecognizer *interactivePopGestureRecognizer __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));

// - (void)showViewController:(UIViewController *)vc sender:(nullable id)sender __attribute__((availability(ios,introduced=8_0)));


// @property (nonatomic, readwrite, assign) BOOL hidesBarsWhenKeyboardAppears __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable)));

// @property (nonatomic, readwrite, assign) BOOL hidesBarsOnSwipe __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable)));

// @property (nonatomic, readonly, strong) UIPanGestureRecognizer *barHideOnSwipeGestureRecognizer __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable)));

// @property (nonatomic, readwrite, assign) BOOL hidesBarsWhenVerticallyCompact __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable)));

// @property (nonatomic, readwrite, assign) BOOL hidesBarsOnTap __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable)));

// @property (nonatomic, readonly, assign) UITapGestureRecognizer *barHideOnTapGestureRecognizer __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable)));

/* @end */


// @protocol UIViewControllerInteractiveTransitioning;
// @protocol UIViewControllerAnimatedTransitioning;

// @protocol UINavigationControllerDelegate <NSObject>

/* @optional */


// - (void)navigationController:(UINavigationController *)navigationController willShowViewController:(UIViewController *)viewController animated:(BOOL)animated;
// - (void)navigationController:(UINavigationController *)navigationController didShowViewController:(UIViewController *)viewController animated:(BOOL)animated;

// - (UIInterfaceOrientationMask)navigationControllerSupportedInterfaceOrientations:(UINavigationController *)navigationController __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));
// - (UIInterfaceOrientation)navigationControllerPreferredInterfaceOrientationForPresentation:(UINavigationController *)navigationController __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));

#if 0
- (nullable id <UIViewControllerInteractiveTransitioning>)navigationController:(UINavigationController *)navigationController
                          interactionControllerForAnimationController:(id <UIViewControllerAnimatedTransitioning>) animationController __attribute__((availability(ios,introduced=7_0)));
#endif


#if 0
- (nullable id <UIViewControllerAnimatedTransitioning>)navigationController:(UINavigationController *)navigationController
                                   animationControllerForOperation:(UINavigationControllerOperation)operation
                                                fromViewController:(UIViewController *)fromVC
                                                  toViewController:(UIViewController *)toVC __attribute__((availability(ios,introduced=7_0)));
#endif


/* @end */


// @interface UIViewController (UINavigationControllerItem)

// @property(nonatomic,readonly,strong) UINavigationItem *navigationItem;
// @property(nonatomic) BOOL hidesBottomBarWhenPushed __attribute__((availability(tvos,unavailable)));
// @property(nullable, nonatomic,readonly,strong) UINavigationController *navigationController;

/* @end */


// @interface UIViewController (UINavigationControllerContextualToolbarItems)

// @property (nullable, nonatomic, strong) NSArray<__kindof UIBarButtonItem *> *toolbarItems __attribute__((availability(ios,introduced=3_0))) __attribute__((availability(tvos,unavailable)));
// - (void)setToolbarItems:(nullable NSArray<UIBarButtonItem *> *)toolbarItems animated:(BOOL)animated __attribute__((availability(ios,introduced=3_0))) __attribute__((availability(tvos,unavailable)));

/* @end */

#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin

// @class UIImage;
#ifndef _REWRITER_typedef_UIImage
#define _REWRITER_typedef_UIImage
typedef struct objc_object UIImage;
typedef struct {} _objc_exc_UIImage;
#endif

// @protocol UIImagePickerControllerDelegate;

typedef NSInteger UIImagePickerControllerSourceType; enum {
    UIImagePickerControllerSourceTypePhotoLibrary,
    UIImagePickerControllerSourceTypeCamera,
    UIImagePickerControllerSourceTypeSavedPhotosAlbum
} __attribute__((availability(tvos,unavailable)));

typedef NSInteger UIImagePickerControllerQualityType; enum {
    UIImagePickerControllerQualityTypeHigh = 0,
    UIImagePickerControllerQualityTypeMedium = 1,
    UIImagePickerControllerQualityTypeLow = 2,
    UIImagePickerControllerQualityType640x480 __attribute__((availability(ios,introduced=4_0))) = 3,
    UIImagePickerControllerQualityTypeIFrame1280x720 __attribute__((availability(ios,introduced=5_0))) = 4,
    UIImagePickerControllerQualityTypeIFrame960x540 __attribute__((availability(ios,introduced=5_0))) = 5,
} __attribute__((availability(tvos,unavailable)));

typedef NSInteger UIImagePickerControllerCameraCaptureMode; enum {
    UIImagePickerControllerCameraCaptureModePhoto,
    UIImagePickerControllerCameraCaptureModeVideo
} __attribute__((availability(tvos,unavailable)));

typedef NSInteger UIImagePickerControllerCameraDevice; enum {
    UIImagePickerControllerCameraDeviceRear,
    UIImagePickerControllerCameraDeviceFront
} __attribute__((availability(tvos,unavailable)));

typedef NSInteger UIImagePickerControllerCameraFlashMode; enum {
    UIImagePickerControllerCameraFlashModeOff = -1,
    UIImagePickerControllerCameraFlashModeAuto = 0,
    UIImagePickerControllerCameraFlashModeOn = 1
} __attribute__((availability(tvos,unavailable)));

typedef NSInteger UIImagePickerControllerImageURLExportPreset; enum {
    UIImagePickerControllerImageURLExportPresetCompatible = 0,
    UIImagePickerControllerImageURLExportPresetCurrent
} __attribute__((availability(ios,introduced=11_0))) __attribute__((availability(tvos,unavailable)));


extern "C" __attribute__((visibility ("default"))) NSString *const UIImagePickerControllerMediaType __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIImagePickerControllerOriginalImage __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIImagePickerControllerEditedImage __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIImagePickerControllerCropRect __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIImagePickerControllerMediaURL __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIImagePickerControllerReferenceURL __attribute__((availability(ios,introduced=4_1,deprecated=11_0,message="" "Replace with public API: UIImagePickerControllerPHAsset"))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIImagePickerControllerMediaMetadata __attribute__((availability(ios,introduced=4_1))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIImagePickerControllerLivePhoto __attribute__((availability(ios,introduced=9_1))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIImagePickerControllerPHAsset __attribute__((availability(ios,introduced=11_0))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIImagePickerControllerImageURL __attribute__((availability(ios,introduced=11_0))) __attribute__((availability(tvos,unavailable)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIImagePickerController
#define _REWRITER_typedef_UIImagePickerController
typedef struct objc_object UIImagePickerController;
typedef struct {} _objc_exc_UIImagePickerController;
#endif

struct UIImagePickerController_IMPL {
	struct UINavigationController_IMPL UINavigationController_IVARS;
};


// + (BOOL)isSourceTypeAvailable:(UIImagePickerControllerSourceType)sourceType;
// + (nullable NSArray<NSString *> *)availableMediaTypesForSourceType:(UIImagePickerControllerSourceType)sourceType;

// + (BOOL)isCameraDeviceAvailable:(UIImagePickerControllerCameraDevice)cameraDevice __attribute__((availability(ios,introduced=4_0)));
// + (BOOL)isFlashAvailableForCameraDevice:(UIImagePickerControllerCameraDevice)cameraDevice __attribute__((availability(ios,introduced=4_0)));
// + (nullable NSArray<NSNumber *> *)availableCaptureModesForCameraDevice:(UIImagePickerControllerCameraDevice)cameraDevice __attribute__((availability(ios,introduced=4_0)));

// @property(nullable,nonatomic,weak) id <UINavigationControllerDelegate, UIImagePickerControllerDelegate> delegate;

// @property(nonatomic) UIImagePickerControllerSourceType sourceType;
// @property(nonatomic,copy) NSArray<NSString *> *mediaTypes;

// @property(nonatomic) BOOL allowsEditing __attribute__((availability(ios,introduced=3_1)));
// @property(nonatomic) BOOL allowsImageEditing __attribute__((availability(ios,introduced=2_0,deprecated=3_1,message="" )));
// @property(nonatomic) UIImagePickerControllerImageURLExportPreset imageExportPreset __attribute__((availability(ios,introduced=11_0)));


// @property(nonatomic) NSTimeInterval videoMaximumDuration __attribute__((availability(ios,introduced=3_1)));
// @property(nonatomic) UIImagePickerControllerQualityType videoQuality __attribute__((availability(ios,introduced=3_1)));
// @property(nonatomic, copy) NSString *videoExportPreset __attribute__((availability(ios,introduced=11_0)));



// @property(nonatomic) BOOL showsCameraControls __attribute__((availability(ios,introduced=3_1)));
// @property(nullable, nonatomic,strong) __kindof UIView *cameraOverlayView __attribute__((availability(ios,introduced=3_1)));
// @property(nonatomic) CGAffineTransform cameraViewTransform __attribute__((availability(ios,introduced=3_1)));

// - (void)takePicture __attribute__((availability(ios,introduced=3_1)));



// - (BOOL)startVideoCapture __attribute__((availability(ios,introduced=4_0)));
// - (void)stopVideoCapture __attribute__((availability(ios,introduced=4_0)));

// @property(nonatomic) UIImagePickerControllerCameraCaptureMode cameraCaptureMode __attribute__((availability(ios,introduced=4_0)));
// @property(nonatomic) UIImagePickerControllerCameraDevice cameraDevice __attribute__((availability(ios,introduced=4_0)));
// @property(nonatomic) UIImagePickerControllerCameraFlashMode cameraFlashMode __attribute__((availability(ios,introduced=4_0)));


/* @end */


__attribute__((availability(tvos,unavailable))) // @protocol UIImagePickerControllerDelegate<NSObject>
/* @optional */



// - (void)imagePickerController:(UIImagePickerController *)picker didFinishPickingImage:(UIImage *)image editingInfo:(nullable NSDictionary<NSString *,id> *)editingInfo __attribute__((availability(ios,introduced=2_0,deprecated=3_0,message="" )));
// - (void)imagePickerController:(UIImagePickerController *)picker didFinishPickingMediaWithInfo:(NSDictionary<NSString *,id> *)info;
// - (void)imagePickerControllerDidCancel:(UIImagePickerController *)picker;

/* @end */





extern "C" __attribute__((visibility ("default"))) void UIImageWriteToSavedPhotosAlbum(UIImage *image, _Nullable id completionTarget, _Nullable SEL completionSelector, void * _Nullable contextInfo) __attribute__((availability(tvos,unavailable)));


extern "C" __attribute__((visibility ("default"))) BOOL UIVideoAtPathIsCompatibleWithSavedPhotosAlbum(NSString *videoPath) __attribute__((availability(ios,introduced=3_1))) __attribute__((availability(tvos,unavailable)));



extern "C" __attribute__((visibility ("default"))) void UISaveVideoAtPathToSavedPhotosAlbum(NSString *videoPath, _Nullable id completionTarget, _Nullable SEL completionSelector, void * _Nullable contextInfo) __attribute__((availability(ios,introduced=3_1))) __attribute__((availability(tvos,unavailable)));
#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

typedef NSInteger UIInputViewStyle; enum {
    UIInputViewStyleDefault,
    UIInputViewStyleKeyboard,
} __attribute__((availability(ios,introduced=7_0)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0))) 
#ifndef _REWRITER_typedef_UIInputView
#define _REWRITER_typedef_UIInputView
typedef struct objc_object UIInputView;
typedef struct {} _objc_exc_UIInputView;
#endif

struct UIInputView_IMPL {
	struct UIView_IMPL UIView_IVARS;
};


// @property (nonatomic, readonly) UIInputViewStyle inputViewStyle;

// @property (nonatomic, assign) BOOL allowsSelfSizing __attribute__((availability(ios,introduced=9_0)));

// - (instancetype)initWithFrame:(CGRect)frame inputViewStyle:(UIInputViewStyle)inputViewStyle __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UILexicon;
#ifndef _REWRITER_typedef_UILexicon
#define _REWRITER_typedef_UILexicon
typedef struct objc_object UILexicon;
typedef struct {} _objc_exc_UILexicon;
#endif


// @protocol UITextDocumentProxy <UIKeyInput>

// @property (nullable, nonatomic, readonly) NSString *documentContextBeforeInput;
// @property (nullable, nonatomic, readonly) NSString *documentContextAfterInput;
// @property (nullable, nonatomic, readonly) NSString *selectedText __attribute__((availability(ios,introduced=11.0)));



// @property (nullable, nonatomic, readonly) UITextInputMode *documentInputMode __attribute__((availability(ios,introduced=10_0)));

// @property (nonatomic, readonly, copy) NSUUID *documentIdentifier __attribute__((availability(ios,introduced=11.0)));

// - (void)adjustTextPositionByCharacterOffset:(NSInteger)offset;

/* @end */


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) 
#ifndef _REWRITER_typedef_UIInputViewController
#define _REWRITER_typedef_UIInputViewController
typedef struct objc_object UIInputViewController;
typedef struct {} _objc_exc_UIInputViewController;
#endif

struct UIInputViewController_IMPL {
	struct UIViewController_IMPL UIViewController_IVARS;
};


// @property (nullable, nonatomic, strong) UIInputView *inputView;

// @property (nonatomic, readonly) id <UITextDocumentProxy> textDocumentProxy;



// @property (nullable, nonatomic, copy) NSString *primaryLanguage;


// @property (nonatomic) BOOL hasDictationKey;

// @property (nonatomic, readonly) BOOL hasFullAccess __attribute__((availability(ios,introduced=11.0)));
// @property (nonatomic, readonly) BOOL needsInputModeSwitchKey __attribute__((availability(ios,introduced=11.0)));

// - (void)dismissKeyboard;
// - (void)advanceToNextInputMode;




// - (void)handleInputModeListFromView:(nonnull UIView *)view withEvent:(nonnull UIEvent *)event __attribute__((availability(ios,introduced=10_0)));



// - (void)requestSupplementaryLexiconWithCompletion:(void (^)(UILexicon *))completionHandler;

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

// @class UIColor;
#ifndef _REWRITER_typedef_UIColor
#define _REWRITER_typedef_UIColor
typedef struct objc_object UIColor;
typedef struct {} _objc_exc_UIColor;
#endif

#ifndef _REWRITER_typedef_UIFont
#define _REWRITER_typedef_UIFont
typedef struct objc_object UIFont;
typedef struct {} _objc_exc_UIFont;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) 
#ifndef _REWRITER_typedef_UILabel
#define _REWRITER_typedef_UILabel
typedef struct objc_object UILabel;
typedef struct {} _objc_exc_UILabel;
#endif

struct UILabel_IMPL {
	struct UIView_IMPL UIView_IVARS;
};


// @property(nullable, nonatomic,copy) NSString *text;
// @property(null_resettable, nonatomic,strong) UIFont *font;
// @property(null_resettable, nonatomic,strong) UIColor *textColor;
// @property(nullable, nonatomic,strong) UIColor *shadowColor;
// @property(nonatomic) CGSize shadowOffset;
// @property(nonatomic) NSTextAlignment textAlignment;
// @property(nonatomic) NSLineBreakMode lineBreakMode;


// @property(nullable, nonatomic,copy) NSAttributedString *attributedText __attribute__((availability(ios,introduced=6_0)));



// @property(nullable, nonatomic,strong) UIColor *highlightedTextColor;
// @property(nonatomic,getter=isHighlighted) BOOL highlighted;

// @property(nonatomic,getter=isUserInteractionEnabled) BOOL userInteractionEnabled;
// @property(nonatomic,getter=isEnabled) BOOL enabled;





// @property(nonatomic) NSInteger numberOfLines;




// @property(nonatomic) BOOL adjustsFontSizeToFitWidth;
// @property(nonatomic) UIBaselineAdjustment baselineAdjustment;
// @property(nonatomic) CGFloat minimumScaleFactor __attribute__((availability(ios,introduced=6_0)));




// @property(nonatomic) BOOL allowsDefaultTighteningForTruncation __attribute__((availability(ios,introduced=9_0)));




// - (CGRect)textRectForBounds:(CGRect)bounds limitedToNumberOfLines:(NSInteger)numberOfLines;
// - (void)drawTextInRect:(CGRect)rect;




// @property(nonatomic) CGFloat preferredMaxLayoutWidth __attribute__((availability(ios,introduced=6_0)));




// @property(nonatomic) CGFloat minimumFontSize __attribute__((availability(ios,introduced=2_0,deprecated=6_0,message="" ))) __attribute__((availability(tvos,unavailable)));


// @property(nonatomic) BOOL adjustsLetterSpacingToFitWidth __attribute__((availability(ios,introduced=6_0,deprecated=7_0,message="" ))) __attribute__((availability(tvos,unavailable)));

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UILexiconEntry
#define _REWRITER_typedef_UILexiconEntry
typedef struct objc_object UILexiconEntry;
typedef struct {} _objc_exc_UILexiconEntry;
#endif

struct UILexiconEntry_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};





// @property (nonatomic, readonly) NSString *documentText;
// @property (nonatomic, readonly) NSString *userInput;
/* @end */


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UILexicon
#define _REWRITER_typedef_UILexicon
typedef struct objc_object UILexicon;
typedef struct {} _objc_exc_UILexicon;
#endif

struct UILexicon_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};

// @property (nonatomic, readonly) NSArray<UILexiconEntry *> *entries;
/* @end */

#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin

// @class CLRegion;
#ifndef _REWRITER_typedef_CLRegion
#define _REWRITER_typedef_CLRegion
typedef struct objc_object CLRegion;
typedef struct {} _objc_exc_CLRegion;
#endif



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0,deprecated=10_0,message="" "Use UserNotifications Framework's UNNotificationRequest"))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_UILocalNotification
#define _REWRITER_typedef_UILocalNotification
typedef struct objc_object UILocalNotification;
typedef struct {} _objc_exc_UILocalNotification;
#endif

struct UILocalNotification_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)init __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));


// @property(nullable, nonatomic,copy) NSDate *fireDate;


// @property(nullable, nonatomic,copy) NSTimeZone *timeZone;

// @property(nonatomic) NSCalendarUnit repeatInterval;
// @property(nullable, nonatomic,copy) NSCalendar *repeatCalendar;




// @property(nullable, nonatomic,copy) CLRegion *region __attribute__((availability(ios,introduced=8_0)));


// @property(nonatomic,assign) BOOL regionTriggersOnce __attribute__((availability(ios,introduced=8_0)));


// @property(nullable, nonatomic,copy) NSString *alertBody;
// @property(nonatomic) BOOL hasAction;
// @property(nullable, nonatomic,copy) NSString *alertAction;
// @property(nullable, nonatomic,copy) NSString *alertLaunchImage;
// @property(nullable, nonatomic,copy) NSString *alertTitle __attribute__((availability(ios,introduced=8_2)));


// @property(nullable, nonatomic,copy) NSString *soundName;


// @property(nonatomic) NSInteger applicationIconBadgeNumber;


// @property(nullable, nonatomic,copy) NSDictionary *userInfo;


// @property (nullable, nonatomic, copy) NSString *category __attribute__((availability(ios,introduced=8_0)));

/* @end */



extern "C" __attribute__((visibility ("default"))) NSString *const UILocalNotificationDefaultSoundName __attribute__((availability(ios,introduced=4_0,deprecated=10_0,message="" "Use UserNotifications Framework's +[UNNotificationSound defaultSound]"))) __attribute__((availability(tvos,unavailable)));
#pragma clang assume_nonnull end



#pragma clang assume_nonnull begin

// @class UIImage;
#ifndef _REWRITER_typedef_UIImage
#define _REWRITER_typedef_UIImage
typedef struct objc_object UIImage;
typedef struct {} _objc_exc_UIImage;
#endif


typedef NSInteger UIApplicationShortcutIconType; enum {
    UIApplicationShortcutIconTypeCompose,
    UIApplicationShortcutIconTypePlay,
    UIApplicationShortcutIconTypePause,
    UIApplicationShortcutIconTypeAdd,
    UIApplicationShortcutIconTypeLocation,
    UIApplicationShortcutIconTypeSearch,
    UIApplicationShortcutIconTypeShare,
    UIApplicationShortcutIconTypeProhibit __attribute__((availability(ios,introduced=9_1))),
    UIApplicationShortcutIconTypeContact __attribute__((availability(ios,introduced=9_1))),
    UIApplicationShortcutIconTypeHome __attribute__((availability(ios,introduced=9_1))),
    UIApplicationShortcutIconTypeMarkLocation __attribute__((availability(ios,introduced=9_1))),
    UIApplicationShortcutIconTypeFavorite __attribute__((availability(ios,introduced=9_1))),
    UIApplicationShortcutIconTypeLove __attribute__((availability(ios,introduced=9_1))),
    UIApplicationShortcutIconTypeCloud __attribute__((availability(ios,introduced=9_1))),
    UIApplicationShortcutIconTypeInvitation __attribute__((availability(ios,introduced=9_1))),
    UIApplicationShortcutIconTypeConfirmation __attribute__((availability(ios,introduced=9_1))),
    UIApplicationShortcutIconTypeMail __attribute__((availability(ios,introduced=9_1))),
    UIApplicationShortcutIconTypeMessage __attribute__((availability(ios,introduced=9_1))),
    UIApplicationShortcutIconTypeDate __attribute__((availability(ios,introduced=9_1))),
    UIApplicationShortcutIconTypeTime __attribute__((availability(ios,introduced=9_1))),
    UIApplicationShortcutIconTypeCapturePhoto __attribute__((availability(ios,introduced=9_1))),
    UIApplicationShortcutIconTypeCaptureVideo __attribute__((availability(ios,introduced=9_1))),
    UIApplicationShortcutIconTypeTask __attribute__((availability(ios,introduced=9_1))),
    UIApplicationShortcutIconTypeTaskCompleted __attribute__((availability(ios,introduced=9_1))),
    UIApplicationShortcutIconTypeAlarm __attribute__((availability(ios,introduced=9_1))),
    UIApplicationShortcutIconTypeBookmark __attribute__((availability(ios,introduced=9_1))),
    UIApplicationShortcutIconTypeShuffle __attribute__((availability(ios,introduced=9_1))),
    UIApplicationShortcutIconTypeAudio __attribute__((availability(ios,introduced=9_1))),
    UIApplicationShortcutIconTypeUpdate __attribute__((availability(ios,introduced=9_1)))
} __attribute__((availability(ios,introduced=9_0))) __attribute__((availability(tvos,unavailable)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_UIApplicationShortcutIcon
#define _REWRITER_typedef_UIApplicationShortcutIcon
typedef struct objc_object UIApplicationShortcutIcon;
typedef struct {} _objc_exc_UIApplicationShortcutIcon;
#endif

struct UIApplicationShortcutIcon_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



// + (instancetype)iconWithType:(UIApplicationShortcutIconType)type;




// + (instancetype)iconWithTemplateImageName:(NSString *)templateImageName;

/* @end */


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_UIApplicationShortcutItem
#define _REWRITER_typedef_UIApplicationShortcutItem
typedef struct objc_object UIApplicationShortcutItem;
typedef struct {} _objc_exc_UIApplicationShortcutItem;
#endif

struct UIApplicationShortcutItem_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)init __attribute__((unavailable));
// - (instancetype)initWithType:(NSString *)type localizedTitle:(NSString *)localizedTitle localizedSubtitle:(nullable NSString *)localizedSubtitle icon:(nullable UIApplicationShortcutIcon *)icon userInfo:(nullable NSDictionary *)userInfo __attribute__((objc_designated_initializer));
// - (instancetype)initWithType:(NSString *)type localizedTitle:(NSString *)localizedTitle;


// @property (nonatomic, copy, readonly) NSString *type;


// @property (nonatomic, copy, readonly) NSString *localizedTitle;
// @property (nullable, nonatomic, copy, readonly) NSString *localizedSubtitle;
// @property (nullable, nonatomic, copy, readonly) UIApplicationShortcutIcon *icon;



// @property (nullable, nonatomic, copy, readonly) NSDictionary<NSString *, id <NSSecureCoding>> *userInfo;

/* @end */


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_UIMutableApplicationShortcutItem
#define _REWRITER_typedef_UIMutableApplicationShortcutItem
typedef struct objc_object UIMutableApplicationShortcutItem;
typedef struct {} _objc_exc_UIMutableApplicationShortcutItem;
#endif

struct UIMutableApplicationShortcutItem_IMPL {
	struct UIApplicationShortcutItem_IMPL UIApplicationShortcutItem_IVARS;
};



// @property (nonatomic, copy) NSString *type;


// @property (nonatomic, copy) NSString *localizedTitle;
// @property (nullable, nonatomic, copy) NSString *localizedSubtitle;
// @property (nullable, nonatomic, copy) UIApplicationShortcutIcon *icon;



// @property (nullable, nonatomic, copy) NSDictionary<NSString *, id <NSSecureCoding>> *userInfo;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIUserNotificationCategory;
#ifndef _REWRITER_typedef_UIUserNotificationCategory
#define _REWRITER_typedef_UIUserNotificationCategory
typedef struct objc_object UIUserNotificationCategory;
typedef struct {} _objc_exc_UIUserNotificationCategory;
#endif

// @class UIUserNotificationAction;
#ifndef _REWRITER_typedef_UIUserNotificationAction
#define _REWRITER_typedef_UIUserNotificationAction
typedef struct objc_object UIUserNotificationAction;
typedef struct {} _objc_exc_UIUserNotificationAction;
#endif


typedef NSUInteger UIUserNotificationType; enum {
    UIUserNotificationTypeNone = 0,
    UIUserNotificationTypeBadge = 1 << 0,
    UIUserNotificationTypeSound = 1 << 1,
    UIUserNotificationTypeAlert = 1 << 2,
} __attribute__((availability(ios,introduced=8_0,deprecated=10_0,message="" "Use UserNotifications Framework's UNAuthorizationOptions"))) __attribute__((availability(tvos,unavailable)));

typedef NSUInteger UIUserNotificationActionBehavior; enum {
    UIUserNotificationActionBehaviorDefault,
    UIUserNotificationActionBehaviorTextInput
} __attribute__((availability(ios,introduced=9_0,deprecated=10_0,message="" "Use UserNotifications Framework's UNNotificationAction or UNTextInputNotificationAction"))) __attribute__((availability(tvos,unavailable)));

typedef NSUInteger UIUserNotificationActivationMode; enum {
    UIUserNotificationActivationModeForeground,
    UIUserNotificationActivationModeBackground
} __attribute__((availability(ios,introduced=8_0,deprecated=10_0,message="" "Use UserNotifications Framework's UNNotificationActionOptions"))) __attribute__((availability(tvos,unavailable)));

typedef NSUInteger UIUserNotificationActionContext; enum {
    UIUserNotificationActionContextDefault,
    UIUserNotificationActionContextMinimal
} __attribute__((availability(ios,introduced=8_0,deprecated=10_0,message="" "Use UserNotifications Framework's -[UNNotificationCategory actions] or -[UNNotificationCategory minimalActions]"))) __attribute__((availability(tvos,unavailable)));

extern "C" __attribute__((visibility ("default"))) NSString *const UIUserNotificationTextInputActionButtonTitleKey __attribute__((availability(ios,introduced=9_0,deprecated=10_0,message="" "Use UserNotifications Framework's -[UNTextInputNotificationAction textInputButtonTitle]"))) __attribute__((availability(tvos,unavailable)));

extern "C" __attribute__((visibility ("default"))) NSString *const UIUserNotificationActionResponseTypedTextKey __attribute__((availability(ios,introduced=9_0,deprecated=10_0,message="" "Use UserNotifications Framework's -[UNTextInputNotificationResponse userText]"))) __attribute__((availability(tvos,unavailable)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0,deprecated=10_0,message="" "Use UserNotifications Framework's UNNotificationSettings"))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_UIUserNotificationSettings
#define _REWRITER_typedef_UIUserNotificationSettings
typedef struct objc_object UIUserNotificationSettings;
typedef struct {} _objc_exc_UIUserNotificationSettings;
#endif

struct UIUserNotificationSettings_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



#if 0
+ (instancetype)settingsForTypes:(UIUserNotificationType)types
                      categories:(nullable NSSet<UIUserNotificationCategory *> *)categories;
#endif


// @property (nonatomic, readonly) UIUserNotificationType types;


// @property (nullable, nonatomic, copy, readonly) NSSet<UIUserNotificationCategory *> *categories;

/* @end */


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0,deprecated=10_0,message="" "Use UserNotifications Framework's UNNotificationCategory"))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_UIUserNotificationCategory
#define _REWRITER_typedef_UIUserNotificationCategory
typedef struct objc_object UIUserNotificationCategory;
typedef struct {} _objc_exc_UIUserNotificationCategory;
#endif

struct UIUserNotificationCategory_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)init __attribute__((objc_designated_initializer)) __attribute__((availability(tvos,unavailable)));
// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer)) __attribute__((availability(tvos,unavailable)));


// @property (nullable, nonatomic, copy, readonly) NSString *identifier __attribute__((availability(tvos,unavailable)));


// - (nullable NSArray<UIUserNotificationAction *> *)actionsForContext:(UIUserNotificationActionContext)context __attribute__((availability(tvos,unavailable)));

/* @end */


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0,deprecated=10_0,message="" "Use UserNotifications Framework's UNNotificationCategory"))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_UIMutableUserNotificationCategory
#define _REWRITER_typedef_UIMutableUserNotificationCategory
typedef struct objc_object UIMutableUserNotificationCategory;
typedef struct {} _objc_exc_UIMutableUserNotificationCategory;
#endif

struct UIMutableUserNotificationCategory_IMPL {
	struct UIUserNotificationCategory_IMPL UIUserNotificationCategory_IVARS;
};



// @property (nullable, nonatomic, copy) NSString *identifier;


// - (void)setActions:(nullable NSArray<UIUserNotificationAction *> *)actions forContext:(UIUserNotificationActionContext)context;

/* @end */


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0,deprecated=10_0,message="" "Use UserNotifications Framework's UNNotificationAction"))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_UIUserNotificationAction
#define _REWRITER_typedef_UIUserNotificationAction
typedef struct objc_object UIUserNotificationAction;
typedef struct {} _objc_exc_UIUserNotificationAction;
#endif

struct UIUserNotificationAction_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)init __attribute__((objc_designated_initializer)) __attribute__((availability(tvos,unavailable)));
// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer)) __attribute__((availability(tvos,unavailable)));


// @property (nullable, nonatomic, copy, readonly) NSString *identifier __attribute__((availability(tvos,unavailable)));


// @property (nullable, nonatomic, copy, readonly) NSString *title __attribute__((availability(tvos,unavailable)));


// @property (nonatomic, assign, readonly) UIUserNotificationActionBehavior behavior __attribute__((availability(ios,introduced=9_0))) __attribute__((availability(tvos,unavailable)));


// @property (nonatomic, copy, readonly) NSDictionary *parameters __attribute__((availability(ios,introduced=9_0)))__attribute__((availability(tvos,unavailable)));


// @property (nonatomic, assign, readonly) UIUserNotificationActivationMode activationMode __attribute__((availability(tvos,unavailable)));


// @property (nonatomic, assign, readonly, getter=isAuthenticationRequired) BOOL authenticationRequired __attribute__((availability(tvos,unavailable)));


// @property (nonatomic, assign, readonly, getter=isDestructive) BOOL destructive __attribute__((availability(tvos,unavailable)));

/* @end */


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0,deprecated=10_0,message="" "Use UserNotifications Framework's UNNotificationAction"))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_UIMutableUserNotificationAction
#define _REWRITER_typedef_UIMutableUserNotificationAction
typedef struct objc_object UIMutableUserNotificationAction;
typedef struct {} _objc_exc_UIMutableUserNotificationAction;
#endif

struct UIMutableUserNotificationAction_IMPL {
	struct UIUserNotificationAction_IMPL UIUserNotificationAction_IVARS;
};



// @property (nullable, nonatomic, copy) NSString *identifier;


// @property (nullable, nonatomic, copy) NSString *title;


// @property (nonatomic, assign) UIUserNotificationActionBehavior behavior __attribute__((availability(ios,introduced=9_0)));


// @property (nonatomic, copy) NSDictionary *parameters __attribute__((availability(ios,introduced=9_0)));


// @property (nonatomic, assign) UIUserNotificationActivationMode activationMode;


// @property (nonatomic, assign, getter=isAuthenticationRequired) BOOL authenticationRequired;


// @property (nonatomic, assign, getter=isDestructive) BOOL destructive;

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=11_0))) 
#ifndef _REWRITER_typedef_UIFocusSystem
#define _REWRITER_typedef_UIFocusSystem
typedef struct objc_object UIFocusSystem;
typedef struct {} _objc_exc_UIFocusSystem;
#endif

struct UIFocusSystem_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// + (instancetype)new __attribute__((unavailable));
// - (instancetype)init __attribute__((unavailable));


// + (BOOL)environment:(id<UIFocusEnvironment>)environment containsEnvironment:(id<UIFocusEnvironment>)otherEnvironment;


// + (void)registerURL:(NSURL *)soundFileURL forSoundIdentifier:(UIFocusSoundIdentifier)identifier __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(ios,unavailable))) __attribute__((availability(watchos,unavailable)));

/* @end */

#pragma clang assume_nonnull end


// @protocol UIFocusDebuggerOutput, UIFocusEnvironment, UIFocusItem;

#pragma clang assume_nonnull begin


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=11_0))) 
#ifndef _REWRITER_typedef_UIFocusDebugger
#define _REWRITER_typedef_UIFocusDebugger
typedef struct objc_object UIFocusDebugger;
typedef struct {} _objc_exc_UIFocusDebugger;
#endif

struct UIFocusDebugger_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};





// + (id<UIFocusDebuggerOutput>)help;




// + (id<UIFocusDebuggerOutput>)status;




// + (id<UIFocusDebuggerOutput>)checkFocusabilityForItem:(id<UIFocusItem>)item;




// + (id<UIFocusDebuggerOutput>)simulateFocusUpdateRequestFromEnvironment:(id<UIFocusEnvironment>)environment;

/* @end */


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=11_0))) // @protocol UIFocusDebuggerOutput <NSObject>
/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_0))) 
#ifndef _REWRITER_typedef_UILocalizedIndexedCollation
#define _REWRITER_typedef_UILocalizedIndexedCollation
typedef struct objc_object UILocalizedIndexedCollation;
typedef struct {} _objc_exc_UILocalizedIndexedCollation;
#endif

struct UILocalizedIndexedCollation_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// + (instancetype)currentCollation;


// @property(nonatomic, readonly) NSArray<NSString *> * sectionTitles;


// @property(nonatomic, readonly) NSArray<NSString *> *sectionIndexTitles;




// - (NSInteger)sectionForSectionIndexTitleAtIndex:(NSInteger)indexTitleIndex;



// - (NSInteger)sectionForObject:(id)object collationStringSelector:(SEL)selector;





// - (NSArray *)sortedArrayFromArray:(NSArray *)array collationStringSelector:(SEL)selector;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin





__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_2))) 
#ifndef _REWRITER_typedef_UILongPressGestureRecognizer
#define _REWRITER_typedef_UILongPressGestureRecognizer
typedef struct objc_object UILongPressGestureRecognizer;
typedef struct {} _objc_exc_UILongPressGestureRecognizer;
#endif

struct UILongPressGestureRecognizer_IMPL {
	struct UIGestureRecognizer_IMPL UIGestureRecognizer_IVARS;
};


// @property (nonatomic) NSUInteger numberOfTapsRequired;
// @property (nonatomic) NSUInteger numberOfTouchesRequired __attribute__((availability(tvos,unavailable)));

// @property (nonatomic) CFTimeInterval minimumPressDuration;
// @property (nonatomic) CGFloat allowableMovement;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class NSManagedObjectModel;
#ifndef _REWRITER_typedef_NSManagedObjectModel
#define _REWRITER_typedef_NSManagedObjectModel
typedef struct objc_object NSManagedObjectModel;
typedef struct {} _objc_exc_NSManagedObjectModel;
#endif

// @class NSManagedObjectContext;
#ifndef _REWRITER_typedef_NSManagedObjectContext
#define _REWRITER_typedef_NSManagedObjectContext
typedef struct objc_object NSManagedObjectContext;
typedef struct {} _objc_exc_NSManagedObjectContext;
#endif

// @class NSPersistentStoreCoordinator;
#ifndef _REWRITER_typedef_NSPersistentStoreCoordinator
#define _REWRITER_typedef_NSPersistentStoreCoordinator
typedef struct objc_object NSPersistentStoreCoordinator;
typedef struct {} _objc_exc_NSPersistentStoreCoordinator;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIManagedDocument
#define _REWRITER_typedef_UIManagedDocument
typedef struct objc_object UIManagedDocument;
typedef struct {} _objc_exc_UIManagedDocument;
#endif

struct UIManagedDocument_IMPL {
	struct UIDocument_IMPL UIDocument_IVARS;
};





@property(class, nonatomic, readonly) NSString *persistentStoreName;






// @property (nonatomic, strong, readonly) NSManagedObjectContext *managedObjectContext;



// @property (nonatomic, strong, readonly) NSManagedObjectModel* managedObjectModel;



// @property (nullable, nonatomic, copy) NSDictionary *persistentStoreOptions;



// @property (nullable, nonatomic, copy) NSString *modelConfiguration;



// - (BOOL)configurePersistentStoreCoordinatorForURL:(NSURL *)storeURL ofType:(NSString *)fileType modelConfiguration:(nullable NSString *)configuration storeOptions:(nullable NSDictionary *)storeOptions error:(NSError **)error;



// - (NSString *)persistentStoreTypeForFileType:(NSString *)fileType;



// - (BOOL)readAdditionalContentFromURL:(NSURL *)absoluteURL error:(NSError **)error;



// - (nullable id)additionalContentForURL:(NSURL *)absoluteURL error:(NSError **)error;



// - (BOOL)writeAdditionalContent:(id)content toURL:(NSURL *)absoluteURL originalContentsURL:(nullable NSURL *)absoluteOriginalContentsURL error:(NSError **)error;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

typedef NSInteger UIMenuControllerArrowDirection; enum {
    UIMenuControllerArrowDefault,
    UIMenuControllerArrowUp __attribute__((availability(ios,introduced=3_2))),
    UIMenuControllerArrowDown __attribute__((availability(ios,introduced=3_2))),
    UIMenuControllerArrowLeft __attribute__((availability(ios,introduced=3_2))),
    UIMenuControllerArrowRight __attribute__((availability(ios,introduced=3_2))),
} __attribute__((availability(tvos,unavailable)));

// @class UIView;
#ifndef _REWRITER_typedef_UIView
#define _REWRITER_typedef_UIView
typedef struct objc_object UIView;
typedef struct {} _objc_exc_UIView;
#endif

#ifndef _REWRITER_typedef_UIMenuItem
#define _REWRITER_typedef_UIMenuItem
typedef struct objc_object UIMenuItem;
typedef struct {} _objc_exc_UIMenuItem;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_0))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIMenuController
#define _REWRITER_typedef_UIMenuController
typedef struct objc_object UIMenuController;
typedef struct {} _objc_exc_UIMenuController;
#endif

struct UIMenuController_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



@property(class, nonatomic, readonly) UIMenuController *sharedMenuController;




// @property(nonatomic,getter=isMenuVisible) BOOL menuVisible;
// - (void)setMenuVisible:(BOOL)menuVisible animated:(BOOL)animated;

// - (void)setTargetRect:(CGRect)targetRect inView:(UIView *)targetView;
// @property(nonatomic) UIMenuControllerArrowDirection arrowDirection __attribute__((availability(ios,introduced=3_2)));

// @property(nullable, nonatomic,copy) NSArray<UIMenuItem *> *menuItems __attribute__((availability(ios,introduced=3_2)));

// - (void)update;

// @property(nonatomic,readonly) CGRect menuFrame;

/* @end */


extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIMenuControllerWillShowMenuNotification __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIMenuControllerDidShowMenuNotification __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIMenuControllerWillHideMenuNotification __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIMenuControllerDidHideMenuNotification __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIMenuControllerMenuFrameDidChangeNotification __attribute__((availability(tvos,unavailable)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_2))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIMenuItem
#define _REWRITER_typedef_UIMenuItem
typedef struct objc_object UIMenuItem;
typedef struct {} _objc_exc_UIMenuItem;
#endif

struct UIMenuItem_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)initWithTitle:(NSString *)title action:(SEL)action __attribute__((objc_designated_initializer));

// @property(nonatomic,copy) NSString *title;
// @property(nonatomic) SEL action;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0))) 
#ifndef _REWRITER_typedef_UIMotionEffect
#define _REWRITER_typedef_UIMotionEffect
typedef struct objc_object UIMotionEffect;
typedef struct {} _objc_exc_UIMotionEffect;
#endif

struct UIMotionEffect_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)init __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));
// - (nullable NSDictionary<NSString *, id> *)keyPathsAndRelativeValuesForViewerOffset:(UIOffset)viewerOffset;

/* @end */




typedef NSInteger UIInterpolatingMotionEffectType; enum {



    UIInterpolatingMotionEffectTypeTiltAlongHorizontalAxis,




    UIInterpolatingMotionEffectTypeTiltAlongVerticalAxis
};






__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0))) 
#ifndef _REWRITER_typedef_UIInterpolatingMotionEffect
#define _REWRITER_typedef_UIInterpolatingMotionEffect
typedef struct objc_object UIInterpolatingMotionEffect;
typedef struct {} _objc_exc_UIInterpolatingMotionEffect;
#endif

struct UIInterpolatingMotionEffect_IMPL {
	struct UIMotionEffect_IMPL UIMotionEffect_IVARS;
};


// - (instancetype)initWithKeyPath:(NSString *)keyPath type:(UIInterpolatingMotionEffectType)type __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));
// @property (readonly, nonatomic) NSString *keyPath;
// @property (readonly, nonatomic) UIInterpolatingMotionEffectType type;

// @property (nullable, strong, nonatomic) id minimumRelativeValue;
// @property (nullable, strong, nonatomic) id maximumRelativeValue;

/* @end */






__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0))) 
#ifndef _REWRITER_typedef_UIMotionEffectGroup
#define _REWRITER_typedef_UIMotionEffectGroup
typedef struct objc_object UIMotionEffectGroup;
typedef struct {} _objc_exc_UIMotionEffectGroup;
#endif

struct UIMotionEffectGroup_IMPL {
	struct UIMotionEffect_IMPL UIMotionEffect_IVARS;
};

// @property (nullable, copy, nonatomic) NSArray<__kindof UIMotionEffect *> *motionEffects;
/* @end */

#pragma clang assume_nonnull end
// @class UISearchController;
#ifndef _REWRITER_typedef_UISearchController
#define _REWRITER_typedef_UISearchController
typedef struct objc_object UISearchController;
typedef struct {} _objc_exc_UISearchController;
#endif


#pragma clang assume_nonnull begin

typedef NSInteger UINavigationItemLargeTitleDisplayMode; enum {

    UINavigationItemLargeTitleDisplayModeAutomatic,

    UINavigationItemLargeTitleDisplayModeAlways,

    UINavigationItemLargeTitleDisplayModeNever,
} __attribute__((swift_name("UINavigationItem.LargeTitleDisplayMode")));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) 
#ifndef _REWRITER_typedef_UINavigationItem
#define _REWRITER_typedef_UINavigationItem
typedef struct objc_object UINavigationItem;
typedef struct {} _objc_exc_UINavigationItem;
#endif

struct UINavigationItem_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)initWithTitle:(NSString *)title __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

// @property(nullable, nonatomic,copy) NSString *title;
// @property(nullable, nonatomic,strong) UIView *titleView;

// @property(nullable,nonatomic,copy) NSString *prompt __attribute__((availability(tvos,unavailable)));
// @property(nullable,nonatomic,strong) UIBarButtonItem *backBarButtonItem __attribute__((availability(tvos,unavailable)));

// @property(nonatomic,assign) BOOL hidesBackButton __attribute__((availability(tvos,unavailable)));
// - (void)setHidesBackButton:(BOOL)hidesBackButton animated:(BOOL)animated __attribute__((availability(tvos,unavailable)));
// @property(nullable,nonatomic,copy) NSArray<UIBarButtonItem *> *leftBarButtonItems __attribute__((availability(ios,introduced=5_0)));
// @property(nullable,nonatomic,copy) NSArray<UIBarButtonItem *> *rightBarButtonItems __attribute__((availability(ios,introduced=5_0)));
// - (void)setLeftBarButtonItems:(nullable NSArray<UIBarButtonItem *> *)items animated:(BOOL)animated __attribute__((availability(ios,introduced=5_0)));
// - (void)setRightBarButtonItems:(nullable NSArray<UIBarButtonItem *> *)items animated:(BOOL)animated __attribute__((availability(ios,introduced=5_0)));






// @property(nonatomic) BOOL leftItemsSupplementBackButton __attribute__((availability(ios,introduced=5_0))) __attribute__((availability(tvos,unavailable)));



// @property(nullable, nonatomic,strong) UIBarButtonItem *leftBarButtonItem;
// @property(nullable, nonatomic,strong) UIBarButtonItem *rightBarButtonItem;
// - (void)setLeftBarButtonItem:(nullable UIBarButtonItem *)item animated:(BOOL)animated;
// - (void)setRightBarButtonItem:(nullable UIBarButtonItem *)item animated:(BOOL)animated;


// @property (nonatomic, readwrite, assign) UINavigationItemLargeTitleDisplayMode largeTitleDisplayMode __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable)));


// @property (nonatomic, retain, nullable) UISearchController *searchController __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable)));


// @property (nonatomic) BOOL hidesSearchBarWhenScrolling __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable)));


/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

// @class UINavigationItem;
#ifndef _REWRITER_typedef_UINavigationItem
#define _REWRITER_typedef_UINavigationItem
typedef struct objc_object UINavigationItem;
typedef struct {} _objc_exc_UINavigationItem;
#endif

#ifndef _REWRITER_typedef_UIBarButtonItem
#define _REWRITER_typedef_UIBarButtonItem
typedef struct objc_object UIBarButtonItem;
typedef struct {} _objc_exc_UIBarButtonItem;
#endif

#ifndef _REWRITER_typedef_UIImage
#define _REWRITER_typedef_UIImage
typedef struct objc_object UIImage;
typedef struct {} _objc_exc_UIImage;
#endif

#ifndef _REWRITER_typedef_UIColor
#define _REWRITER_typedef_UIColor
typedef struct objc_object UIColor;
typedef struct {} _objc_exc_UIColor;
#endif

// @protocol UINavigationBarDelegate;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) 
#ifndef _REWRITER_typedef_UINavigationBar
#define _REWRITER_typedef_UINavigationBar
typedef struct objc_object UINavigationBar;
typedef struct {} _objc_exc_UINavigationBar;
#endif

struct UINavigationBar_IMPL {
	struct UIView_IMPL UIView_IVARS;
};


// @property(nonatomic,assign) UIBarStyle barStyle __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos,unavailable)));
// @property(nullable,nonatomic,weak) id<UINavigationBarDelegate> delegate;
// @property(nonatomic,assign,getter=isTranslucent) BOOL translucent __attribute__((availability(ios,introduced=3_0))) __attribute__((annotate("ui_appearance_selector")));



// - (void)pushNavigationItem:(UINavigationItem *)item animated:(BOOL)animated;
// - (nullable UINavigationItem *)popNavigationItemAnimated:(BOOL)animated;

// @property(nullable, nonatomic,readonly,strong) UINavigationItem *topItem;
// @property(nullable, nonatomic,readonly,strong) UINavigationItem *backItem;

// @property(nullable,nonatomic,copy) NSArray<UINavigationItem *> *items;
// - (void)setItems:(nullable NSArray<UINavigationItem *> *)items animated:(BOOL)animated;


// @property (nonatomic, readwrite, assign) BOOL prefersLargeTitles __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable)));






// @property(null_resettable, nonatomic,strong) UIColor *tintColor;
// @property(nullable, nonatomic,strong) UIColor *barTintColor __attribute__((availability(ios,introduced=7_0))) __attribute__((annotate("ui_appearance_selector")));






// - (void)setBackgroundImage:(nullable UIImage *)backgroundImage forBarPosition:(UIBarPosition)barPosition barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=7_0))) __attribute__((annotate("ui_appearance_selector")));
// - (nullable UIImage *)backgroundImageForBarPosition:(UIBarPosition)barPosition barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=7_0))) __attribute__((annotate("ui_appearance_selector")));





// - (void)setBackgroundImage:(nullable UIImage *)backgroundImage forBarMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));
// - (nullable UIImage *)backgroundImageForBarMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));



// @property(nullable, nonatomic,strong) UIImage *shadowImage __attribute__((availability(ios,introduced=6_0))) __attribute__((annotate("ui_appearance_selector")));



// @property(nullable,nonatomic,copy) NSDictionary<NSAttributedStringKey, id> *titleTextAttributes __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));



// @property(nullable, nonatomic, copy) NSDictionary<NSAttributedStringKey, id> *largeTitleTextAttributes __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable)));

// - (void)setTitleVerticalPositionAdjustment:(CGFloat)adjustment forBarMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));
// - (CGFloat)titleVerticalPositionAdjustmentForBarMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));






// @property(nullable,nonatomic,strong) UIImage *backIndicatorImage __attribute__((availability(ios,introduced=7_0))) __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos,unavailable)));
// @property(nullable,nonatomic,strong) UIImage *backIndicatorTransitionMaskImage __attribute__((availability(ios,introduced=7_0))) __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos,unavailable)));

/* @end */


// @protocol UINavigationBarDelegate <UIBarPositioningDelegate>

/* @optional */

// - (BOOL)navigationBar:(UINavigationBar *)navigationBar shouldPushItem:(UINavigationItem *)item;
// - (void)navigationBar:(UINavigationBar *)navigationBar didPushItem:(UINavigationItem *)item;
// - (BOOL)navigationBar:(UINavigationBar *)navigationBar shouldPopItem:(UINavigationItem *)item;
// - (void)navigationBar:(UINavigationBar *)navigationBar didPopItem:(UINavigationItem *)item;

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0))) 
#ifndef _REWRITER_typedef_UINib
#define _REWRITER_typedef_UINib
typedef struct objc_object UINib;
typedef struct {} _objc_exc_UINib;
#endif

struct UINib_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};




// + (UINib *)nibWithNibName:(NSString *)name bundle:(nullable NSBundle *)bundleOrNil;


// + (UINib *)nibWithData:(NSData *)data bundle:(nullable NSBundle *)bundleOrNil;





// - (NSArray *)instantiateWithOwner:(nullable id)ownerOrNil options:(nullable NSDictionary *)optionsOrNil;
/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) NSString * const UINibExternalObjects __attribute__((availability(ios,introduced=3_0)));

// @interface NSBundle(UINibLoadingAdditions)
// - (nullable NSArray *)loadNibNamed:(NSString *)name owner:(nullable id)owner options:(nullable NSDictionary *)options;
/* @end */


// @interface NSObject(UINibLoadingAdditions)
// - (void)awakeFromNib __attribute__((objc_requires_super));
// - (void)prepareForInterfaceBuilder __attribute__((availability(ios,introduced=8_0)));
/* @end */


extern "C" __attribute__((visibility ("default"))) NSString * const UINibProxiedObjectsKey __attribute__((availability(ios,introduced=2_0,deprecated=3_0,message="" ))) __attribute__((availability(tvos,unavailable)));
#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) 
#ifndef _REWRITER_typedef_UIPageControl
#define _REWRITER_typedef_UIPageControl
typedef struct objc_object UIPageControl;
typedef struct {} _objc_exc_UIPageControl;
#endif

struct UIPageControl_IMPL {
	struct UIControl_IMPL UIControl_IVARS;
};


// @property(nonatomic) NSInteger numberOfPages;
// @property(nonatomic) NSInteger currentPage;

// @property(nonatomic) BOOL hidesForSinglePage;

// @property(nonatomic) BOOL defersCurrentPageDisplay;
// - (void)updateCurrentPageDisplay;

// - (CGSize)sizeForNumberOfPages:(NSInteger)pageCount;

// @property(nullable, nonatomic,strong) UIColor *pageIndicatorTintColor __attribute__((availability(ios,introduced=6_0))) __attribute__((annotate("ui_appearance_selector")));
// @property(nullable, nonatomic,strong) UIColor *currentPageIndicatorTintColor __attribute__((availability(ios,introduced=6_0))) __attribute__((annotate("ui_appearance_selector")));

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

typedef NSInteger UIPageViewControllerNavigationOrientation; enum {
    UIPageViewControllerNavigationOrientationHorizontal = 0,
    UIPageViewControllerNavigationOrientationVertical = 1
};

typedef NSInteger UIPageViewControllerSpineLocation; enum {
    UIPageViewControllerSpineLocationNone = 0,
    UIPageViewControllerSpineLocationMin = 1,
    UIPageViewControllerSpineLocationMid = 2,
    UIPageViewControllerSpineLocationMax = 3
};

typedef NSInteger UIPageViewControllerNavigationDirection; enum {
    UIPageViewControllerNavigationDirectionForward,
    UIPageViewControllerNavigationDirectionReverse
};

typedef NSInteger UIPageViewControllerTransitionStyle; enum {
    UIPageViewControllerTransitionStylePageCurl = 0,
    UIPageViewControllerTransitionStyleScroll = 1
};




extern "C" __attribute__((visibility ("default"))) NSString * const UIPageViewControllerOptionSpineLocationKey;




extern "C" __attribute__((visibility ("default"))) NSString * const UIPageViewControllerOptionInterPageSpacingKey __attribute__((availability(ios,introduced=6_0)));

// @protocol UIPageViewControllerDelegate, UIPageViewControllerDataSource;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0))) 
#ifndef _REWRITER_typedef_UIPageViewController
#define _REWRITER_typedef_UIPageViewController
typedef struct objc_object UIPageViewController;
typedef struct {} _objc_exc_UIPageViewController;
#endif

struct UIPageViewController_IMPL {
	struct UIViewController_IMPL UIViewController_IVARS;
};


// - (instancetype)initWithTransitionStyle:(UIPageViewControllerTransitionStyle)style navigationOrientation:(UIPageViewControllerNavigationOrientation)navigationOrientation options:(nullable NSDictionary<NSString *, id> *)options __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));

// @property (nullable, nonatomic, weak) id <UIPageViewControllerDelegate> delegate;
// @property (nullable, nonatomic, weak) id <UIPageViewControllerDataSource> dataSource;
// @property (nonatomic, readonly) UIPageViewControllerTransitionStyle transitionStyle;
// @property (nonatomic, readonly) UIPageViewControllerNavigationOrientation navigationOrientation;
// @property (nonatomic, readonly) UIPageViewControllerSpineLocation spineLocation;



// @property (nonatomic, getter=isDoubleSided) BOOL doubleSided;




// @property(nonatomic, readonly) NSArray<__kindof UIGestureRecognizer *> *gestureRecognizers;
// @property (nullable, nonatomic, readonly) NSArray<__kindof UIViewController *> *viewControllers;



// - (void)setViewControllers:(nullable NSArray<UIViewController *> *)viewControllers direction:(UIPageViewControllerNavigationDirection)direction animated:(BOOL)animated completion:(void (^ _Nullable)(BOOL finished))completion;

/* @end */


// @protocol UIPageViewControllerDelegate <NSObject>

/* @optional */


// - (void)pageViewController:(UIPageViewController *)pageViewController willTransitionToViewControllers:(NSArray<UIViewController *> *)pendingViewControllers __attribute__((availability(ios,introduced=6_0)));


// - (void)pageViewController:(UIPageViewController *)pageViewController didFinishAnimating:(BOOL)finished previousViewControllers:(NSArray<UIViewController *> *)previousViewControllers transitionCompleted:(BOOL)completed;



// - (UIPageViewControllerSpineLocation)pageViewController:(UIPageViewController *)pageViewController spineLocationForInterfaceOrientation:(UIInterfaceOrientation)orientation __attribute__((availability(tvos,unavailable)));

// - (UIInterfaceOrientationMask)pageViewControllerSupportedInterfaceOrientations:(UIPageViewController *)pageViewController __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));
// - (UIInterfaceOrientation)pageViewControllerPreferredInterfaceOrientationForPresentation:(UIPageViewController *)pageViewController __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));

/* @end */


// @protocol UIPageViewControllerDataSource <NSObject>

/* @required */




// - (nullable UIViewController *)pageViewController:(UIPageViewController *)pageViewController viewControllerBeforeViewController:(UIViewController *)viewController;
// - (nullable UIViewController *)pageViewController:(UIPageViewController *)pageViewController viewControllerAfterViewController:(UIViewController *)viewController;

/* @optional */



// - (NSInteger)presentationCountForPageViewController:(UIPageViewController *)pageViewController __attribute__((availability(ios,introduced=6_0)));
// - (NSInteger)presentationIndexForPageViewController:(UIPageViewController *)pageViewController __attribute__((availability(ios,introduced=6_0)));

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin




typedef NSString * UIPasteboardName;


extern "C" __attribute__((visibility ("default"))) UIPasteboardName const UIPasteboardNameGeneral __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIPasteboardNameFind __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(ios,introduced=3_0,deprecated=10_0,message="" "The Find pasteboard is no longer available.")));

// @class UIColor;
#ifndef _REWRITER_typedef_UIColor
#define _REWRITER_typedef_UIColor
typedef struct objc_object UIColor;
typedef struct {} _objc_exc_UIColor;
#endif

#ifndef _REWRITER_typedef_UIImage
#define _REWRITER_typedef_UIImage
typedef struct objc_object UIImage;
typedef struct {} _objc_exc_UIImage;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) 
#ifndef _REWRITER_typedef_UIPasteboard
#define _REWRITER_typedef_UIPasteboard
typedef struct objc_object UIPasteboard;
typedef struct {} _objc_exc_UIPasteboard;
#endif

struct UIPasteboard_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



@property(class, nonatomic, readonly) UIPasteboard *generalPasteboard;




// + (nullable UIPasteboard *)pasteboardWithName:(UIPasteboardName)pasteboardName create:(BOOL)create;
// + (UIPasteboard *)pasteboardWithUniqueName;

// @property(readonly,nonatomic) UIPasteboardName name;

// + (void)removePasteboardWithName:(UIPasteboardName)pasteboardName;

// @property(readonly,getter=isPersistent,nonatomic) BOOL persistent;
// - (void)setPersistent:(BOOL)persistent __attribute__((availability(ios,introduced=3_0,deprecated=10_0,message="" "Do not set persistence on pasteboards. This property is set automatically.")));
// @property(readonly,nonatomic) NSInteger changeCount;



// @property (nonatomic, copy) NSArray<__kindof NSItemProvider *> *itemProviders __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

// - (void)setItemProviders:(NSArray<NSItemProvider *> *)itemProviders localOnly:(BOOL)localOnly expirationDate:(NSDate * _Nullable)expirationDate __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));


// - (void)setObjects:(NSArray<id<NSItemProviderWriting>> *)objects __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
// - (void)setObjects:(NSArray<id<NSItemProviderWriting>> *)objects localOnly:(BOOL)localOnly expirationDate:(NSDate * _Nullable)expirationDate __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));




// @property(nonatomic, readonly) NSArray<NSString *> * pasteboardTypes;



// - (BOOL)containsPasteboardTypes:(NSArray<NSString *> *)pasteboardTypes;
// - (nullable NSData *)dataForPasteboardType:(NSString *)pasteboardType;

// - (nullable id)valueForPasteboardType:(NSString *)pasteboardType;

// - (void)setValue:(id)value forPasteboardType:(NSString *)pasteboardType;
// - (void)setData:(NSData *)data forPasteboardType:(NSString *)pasteboardType;



// @property(readonly,nonatomic) NSInteger numberOfItems;
// - (nullable NSArray<NSArray<NSString *> *> *)pasteboardTypesForItemSet:(nullable NSIndexSet*)itemSet;

// - (BOOL)containsPasteboardTypes:(NSArray<NSString *> *)pasteboardTypes inItemSet:(nullable NSIndexSet *)itemSet;
// - (nullable NSIndexSet *)itemSetWithPasteboardTypes:(NSArray<NSString *> *)pasteboardTypes;
// - (nullable NSArray *)valuesForPasteboardType:(NSString *)pasteboardType inItemSet:(nullable NSIndexSet *)itemSet;
// - (nullable NSArray *)dataForPasteboardType:(NSString *)pasteboardType inItemSet:(nullable NSIndexSet *)itemSet;



// @property(nonatomic,copy) NSArray<NSDictionary<NSString *, id> *> *items;
// - (void)addItems:(NSArray<NSDictionary<NSString *, id> *> *)items;

typedef NSString * UIPasteboardOption __attribute__((swift_wrapper(struct))) __attribute__((availability(ios,introduced=10_0)));

extern "C" __attribute__((visibility ("default"))) UIPasteboardOption const UIPasteboardOptionExpirationDate __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(ios,introduced=10_0))) __attribute__((swift_name("UIPasteboardOption.expirationDate")));
extern "C" __attribute__((visibility ("default"))) UIPasteboardOption const UIPasteboardOptionLocalOnly __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(ios,introduced=10_0))) __attribute__((swift_name("UIPasteboardOption.localOnly")));

// - (void)setItems:(NSArray<NSDictionary<NSString *, id> *> *)items options:(NSDictionary<UIPasteboardOption, id> *)options __attribute__((availability(ios,introduced=10_0)));

// @property(nullable,nonatomic,copy) NSString *string __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
// @property(nullable,nonatomic,copy) NSArray<NSString *> *strings __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));

// @property(nullable,nonatomic,copy) NSURL *URL __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
// @property(nullable,nonatomic,copy) NSArray<NSURL *> *URLs __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));

// @property(nullable,nonatomic,copy) UIImage *image __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
// @property(nullable,nonatomic,copy) NSArray<UIImage *> *images __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));

// @property(nullable,nonatomic,copy) UIColor *color __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
// @property(nullable,nonatomic,copy) NSArray<UIColor *> *colors __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));



// @property (nonatomic, readonly) BOOL hasStrings __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(ios,introduced=10_0)));
// @property (nonatomic, readonly) BOOL hasURLs __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(ios,introduced=10_0)));
// @property (nonatomic, readonly) BOOL hasImages __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(ios,introduced=10_0)));
// @property (nonatomic, readonly) BOOL hasColors __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(ios,introduced=10_0)));

/* @end */




extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIPasteboardChangedNotification __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIPasteboardChangedTypesAddedKey __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIPasteboardChangedTypesRemovedKey __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));

extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIPasteboardRemovedNotification __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));



extern "C" __attribute__((visibility ("default"))) NSArray<NSString *> *UIPasteboardTypeListString __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSArray<NSString *> *UIPasteboardTypeListURL __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSArray<NSString *> *UIPasteboardTypeListImage __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSArray<NSString *> *UIPasteboardTypeListColor __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));



extern "C" __attribute__((visibility ("default"))) NSString * const UIPasteboardTypeAutomatic __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(ios,introduced=10_0)));
#pragma clang assume_nonnull end



#pragma clang assume_nonnull begin





__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_2))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIPinchGestureRecognizer
#define _REWRITER_typedef_UIPinchGestureRecognizer
typedef struct objc_object UIPinchGestureRecognizer;
typedef struct {} _objc_exc_UIPinchGestureRecognizer;
#endif

struct UIPinchGestureRecognizer_IMPL {
	struct UIGestureRecognizer_IMPL UIGestureRecognizer_IVARS;
};


// @property (nonatomic) CGFloat scale;
// @property (nonatomic,readonly) CGFloat velocity;

/* @end */

#pragma clang assume_nonnull end
typedef NSUInteger UIPopoverArrowDirection; enum {
    UIPopoverArrowDirectionUp = 1UL << 0,
    UIPopoverArrowDirectionDown = 1UL << 1,
    UIPopoverArrowDirectionLeft = 1UL << 2,
    UIPopoverArrowDirectionRight = 1UL << 3,
    UIPopoverArrowDirectionAny = UIPopoverArrowDirectionUp | UIPopoverArrowDirectionDown | UIPopoverArrowDirectionLeft | UIPopoverArrowDirectionRight,
    UIPopoverArrowDirectionUnknown = (9223372036854775807L *2UL+1UL)
};

// @interface UIViewController (UIPopoverController)



// @property (nonatomic,readwrite,getter=isModalInPopover) BOOL modalInPopover __attribute__((availability(ios,introduced=3_2)));



// @property (nonatomic,readwrite) CGSize contentSizeForViewInPopover __attribute__((availability(ios,introduced=3_2,deprecated=7_0,message="" "Use UIViewController.preferredContentSize instead."))) __attribute__((availability(tvos,unavailable)));

/* @end */


#pragma clang assume_nonnull begin

// @class UIBarButtonItem;
#ifndef _REWRITER_typedef_UIBarButtonItem
#define _REWRITER_typedef_UIBarButtonItem
typedef struct objc_object UIBarButtonItem;
typedef struct {} _objc_exc_UIBarButtonItem;
#endif

#ifndef _REWRITER_typedef_UIView
#define _REWRITER_typedef_UIView
typedef struct objc_object UIView;
typedef struct {} _objc_exc_UIView;
#endif

// @protocol UIPopoverControllerDelegate;


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_2,deprecated=9_0,message="" "UIPopoverController is deprecated. Popovers are now implemented as UIViewController presentations. Use a modal presentation style of UIModalPresentationPopover and UIPopoverPresentationController.")))

#ifndef _REWRITER_typedef_UIPopoverController
#define _REWRITER_typedef_UIPopoverController
typedef struct objc_object UIPopoverController;
typedef struct {} _objc_exc_UIPopoverController;
#endif

struct UIPopoverController_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};




// - (instancetype)initWithContentViewController:(UIViewController *)viewController;

// @property (nullable, nonatomic, weak) id <UIPopoverControllerDelegate> delegate;



// @property (nonatomic, strong) UIViewController *contentViewController;
// - (void)setContentViewController:(UIViewController *)viewController animated:(BOOL)animated;



// @property (nonatomic) CGSize popoverContentSize;
// - (void)setPopoverContentSize:(CGSize)size animated:(BOOL)animated;



// @property (nonatomic, readonly, getter=isPopoverVisible) BOOL popoverVisible;



// @property (nonatomic, readonly) UIPopoverArrowDirection popoverArrowDirection;



// @property (nullable, nonatomic, copy) NSArray<__kindof UIView *> *passthroughViews;



// - (void)presentPopoverFromRect:(CGRect)rect inView:(UIView *)view permittedArrowDirections:(UIPopoverArrowDirection)arrowDirections animated:(BOOL)animated;



// - (void)presentPopoverFromBarButtonItem:(UIBarButtonItem *)item permittedArrowDirections:(UIPopoverArrowDirection)arrowDirections animated:(BOOL)animated;



// - (void)dismissPopoverAnimated:(BOOL)animated;



// @property (nullable, nonatomic, copy) UIColor *backgroundColor __attribute__((availability(ios,introduced=7_0)));



// @property (nonatomic, readwrite) UIEdgeInsets popoverLayoutMargins __attribute__((availability(ios,introduced=5_0)));



// @property (nullable, nonatomic, readwrite, strong) Class popoverBackgroundViewClass __attribute__((availability(ios,introduced=5_0)));

/* @end */


// @protocol UIPopoverControllerDelegate <NSObject>
/* @optional */



// - (BOOL)popoverControllerShouldDismissPopover:(UIPopoverController *)popoverController __attribute__((availability(ios,introduced=3_2,deprecated=9_0,message="" )));



// - (void)popoverControllerDidDismissPopover:(UIPopoverController *)popoverController __attribute__((availability(ios,introduced=3_2,deprecated=9_0,message="" )));



// - (void)popoverController:(UIPopoverController *)popoverController willRepositionPopoverToRect:(inout CGRect *)rect inView:(inout UIView * _Nonnull * _Nonnull)view __attribute__((availability(ios,introduced=7_0,deprecated=9_0,message="" )));

/* @end */

#pragma clang assume_nonnull end
// @protocol UIPopoverBackgroundViewMethods


// + (CGFloat)arrowBase;



// + (UIEdgeInsets)contentViewInsets;

// + (CGFloat)arrowHeight;
/* @end */


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0)))

#ifndef _REWRITER_typedef_UIPopoverBackgroundView
#define _REWRITER_typedef_UIPopoverBackgroundView
typedef struct objc_object UIPopoverBackgroundView;
typedef struct {} _objc_exc_UIPopoverBackgroundView;
#endif

struct UIPopoverBackgroundView_IMPL {
	struct UIView_IMPL UIView_IVARS;
};






// @property (nonatomic, readwrite) CGFloat arrowOffset;



// @property (nonatomic, readwrite) UIPopoverArrowDirection arrowDirection;




@property(class, nonatomic, readonly) BOOL wantsDefaultContentAppearance __attribute__((availability(ios,introduced=6_0)));




/* @end */

// @class UIGestureRecognizer;
#ifndef _REWRITER_typedef_UIGestureRecognizer
#define _REWRITER_typedef_UIGestureRecognizer
typedef struct objc_object UIGestureRecognizer;
typedef struct {} _objc_exc_UIGestureRecognizer;
#endif

// @class UIResponder;
#ifndef _REWRITER_typedef_UIResponder
#define _REWRITER_typedef_UIResponder
typedef struct objc_object UIResponder;
typedef struct {} _objc_exc_UIResponder;
#endif

// @class UIWindow;
#ifndef _REWRITER_typedef_UIWindow
#define _REWRITER_typedef_UIWindow
typedef struct objc_object UIWindow;
typedef struct {} _objc_exc_UIWindow;
#endif


__attribute__((availability(ios,introduced=9_0))) typedef NSInteger UIPressPhase; enum {
    UIPressPhaseBegan,
    UIPressPhaseChanged,
    UIPressPhaseStationary,
    UIPressPhaseEnded,
    UIPressPhaseCancelled,
};

__attribute__((availability(ios,introduced=9_0))) typedef NSInteger UIPressType; enum {
    UIPressTypeUpArrow,
    UIPressTypeDownArrow,
    UIPressTypeLeftArrow,
    UIPressTypeRightArrow,

    UIPressTypeSelect,
    UIPressTypeMenu,
    UIPressTypePlayPause,
};

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0))) 
#ifndef _REWRITER_typedef_UIPress
#define _REWRITER_typedef_UIPress
typedef struct objc_object UIPress;
typedef struct {} _objc_exc_UIPress;
#endif

struct UIPress_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property(nonatomic,readonly) NSTimeInterval timestamp;
// @property(nonatomic,readonly) UIPressPhase phase;
// @property(nonatomic,readonly) UIPressType type;

// @property(nullable,nonatomic,readonly,strong) UIWindow *window;
// @property(nullable,nonatomic,readonly,strong) UIResponder *responder;
// @property(nullable,nonatomic,readonly,copy) NSArray <UIGestureRecognizer *> *gestureRecognizers;


// @property(nonatomic, readonly) CGFloat force;
/* @end */

#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0))) 
#ifndef _REWRITER_typedef_UIPressesEvent
#define _REWRITER_typedef_UIPressesEvent
typedef struct objc_object UIPressesEvent;
typedef struct {} _objc_exc_UIPressesEvent;
#endif

struct UIPressesEvent_IMPL {
	struct UIEvent_IMPL UIEvent_IVARS;
};



// @property(nonatomic, readonly) NSSet <UIPress *> *allPresses;



// - (NSSet <UIPress *> *)pressesForGestureRecognizer:(UIGestureRecognizer *)gesture;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIPrinter
#define _REWRITER_typedef_UIPrinter
typedef struct objc_object UIPrinter;
typedef struct {} _objc_exc_UIPrinter;
#endif

struct UIPrinter_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};

typedef NSInteger UIPrinterJobTypes; enum {
    UIPrinterJobTypeUnknown = 0,
    UIPrinterJobTypeDocument = 1 << 0,
    UIPrinterJobTypeEnvelope = 1 << 1,
    UIPrinterJobTypeLabel = 1 << 2,
    UIPrinterJobTypePhoto = 1 << 3,
    UIPrinterJobTypeReceipt = 1 << 4,
    UIPrinterJobTypeRoll = 1 << 5,
    UIPrinterJobTypeLargeFormat = 1 << 6,
    UIPrinterJobTypePostcard = 1 << 7
} __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable)));
// + (UIPrinter *)printerWithURL:(NSURL *)url;







// @property (readonly,copy) NSURL *URL;





// @property (readonly,copy) NSString *displayName;
// @property (nullable,readonly,copy) NSString *displayLocation;
// @property (readonly) UIPrinterJobTypes supportedJobTypes;
// @property (nullable, readonly,copy) NSString *makeAndModel;
// @property (readonly) BOOL supportsColor;
// @property (readonly) BOOL supportsDuplex;
// - (void)contactPrinter:(void(^ _Nullable)(BOOL available))completionHandler;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIPrinterPickerController;
#ifndef _REWRITER_typedef_UIPrinterPickerController
#define _REWRITER_typedef_UIPrinterPickerController
typedef struct objc_object UIPrinterPickerController;
typedef struct {} _objc_exc_UIPrinterPickerController;
#endif

#ifndef _REWRITER_typedef_UIPrinter
#define _REWRITER_typedef_UIPrinter
typedef struct objc_object UIPrinter;
typedef struct {} _objc_exc_UIPrinter;
#endif

#ifndef _REWRITER_typedef_UIView
#define _REWRITER_typedef_UIView
typedef struct objc_object UIView;
typedef struct {} _objc_exc_UIView;
#endif

#ifndef _REWRITER_typedef_UIViewController
#define _REWRITER_typedef_UIViewController
typedef struct objc_object UIViewController;
typedef struct {} _objc_exc_UIViewController;
#endif

#ifndef _REWRITER_typedef_UIBarButtonItem
#define _REWRITER_typedef_UIBarButtonItem
typedef struct objc_object UIBarButtonItem;
typedef struct {} _objc_exc_UIBarButtonItem;
#endif


typedef void (*UIPrinterPickerCompletionHandler)(UIPrinterPickerController *printerPickerController, BOOL userDidSelect, NSError * _Nullable error);

__attribute__((availability(tvos,unavailable)))
// @protocol UIPrinterPickerControllerDelegate <NSObject>
/* @optional */

// - (nullable UIViewController *)printerPickerControllerParentViewController:(UIPrinterPickerController *)printerPickerController;
// - (BOOL)printerPickerController:(UIPrinterPickerController *)printerPickerController shouldShowPrinter:(UIPrinter *)printer;

// - (void)printerPickerControllerWillPresent:(UIPrinterPickerController *)printerPickerController;
// - (void)printerPickerControllerDidPresent:(UIPrinterPickerController *)printerPickerController;
// - (void)printerPickerControllerWillDismiss:(UIPrinterPickerController *)printerPickerController;
// - (void)printerPickerControllerDidDismiss:(UIPrinterPickerController *)printerPickerController;

// - (void)printerPickerControllerDidSelectPrinter:(UIPrinterPickerController *)printerPickerController;

/* @end */


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIPrinterPickerController
#define _REWRITER_typedef_UIPrinterPickerController
typedef struct objc_object UIPrinterPickerController;
typedef struct {} _objc_exc_UIPrinterPickerController;
#endif

struct UIPrinterPickerController_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};

// + (UIPrinterPickerController *)printerPickerControllerWithInitiallySelectedPrinter:(nullable UIPrinter *)printer;





// @property(nullable,nonatomic,readonly) UIPrinter *selectedPrinter;

// @property(nullable,nonatomic,weak) id<UIPrinterPickerControllerDelegate> delegate;

// - (BOOL)presentAnimated:(BOOL)animated completionHandler:(nullable UIPrinterPickerCompletionHandler)completion;
// - (BOOL)presentFromRect:(CGRect)rect inView:(UIView *)view animated:(BOOL)animated completionHandler:(nullable UIPrinterPickerCompletionHandler)completion;
// - (BOOL)presentFromBarButtonItem:(UIBarButtonItem *)item animated:(BOOL)animated completionHandler:(nullable UIPrinterPickerCompletionHandler)completion;
// - (void)dismissAnimated:(BOOL)animated;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) NSErrorDomain const UIPrintErrorDomain __attribute__((availability(tvos,unavailable)));

enum {
    UIPrintingNotAvailableError = 1,
    UIPrintNoContentError,
    UIPrintUnknownImageFormatError,
    UIPrintJobFailedError,
} __attribute__((availability(tvos,unavailable)));
#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIPrintPageRenderer;
#ifndef _REWRITER_typedef_UIPrintPageRenderer
#define _REWRITER_typedef_UIPrintPageRenderer
typedef struct objc_object UIPrintPageRenderer;
typedef struct {} _objc_exc_UIPrintPageRenderer;
#endif

// @class UIView;
#ifndef _REWRITER_typedef_UIView
#define _REWRITER_typedef_UIView
typedef struct objc_object UIView;
typedef struct {} _objc_exc_UIView;
#endif

#ifndef _REWRITER_typedef_UIFont
#define _REWRITER_typedef_UIFont
typedef struct objc_object UIFont;
typedef struct {} _objc_exc_UIFont;
#endif

#ifndef _REWRITER_typedef_UIColor
#define _REWRITER_typedef_UIColor
typedef struct objc_object UIColor;
typedef struct {} _objc_exc_UIColor;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_2))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIPrintFormatter
#define _REWRITER_typedef_UIPrintFormatter
typedef struct objc_object UIPrintFormatter;
typedef struct {} _objc_exc_UIPrintFormatter;
#endif

struct UIPrintFormatter_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property(nullable,nonatomic,readonly,weak) UIPrintPageRenderer *printPageRenderer __attribute__((availability(tvos,unavailable)));
// - (void)removeFromPrintPageRenderer __attribute__((availability(tvos,unavailable)));

// @property(nonatomic) CGFloat maximumContentHeight __attribute__((availability(tvos,unavailable)));
// @property(nonatomic) CGFloat maximumContentWidth __attribute__((availability(tvos,unavailable)));
// @property(nonatomic) UIEdgeInsets contentInsets __attribute__((availability(ios,introduced=4_2,deprecated=10_0,message="" "Use perPageContentInsets instead."))) __attribute__((availability(tvos,unavailable)));


// @property(nonatomic) UIEdgeInsets perPageContentInsets __attribute__((availability(tvos,unavailable)));

// @property(nonatomic) NSInteger startPage __attribute__((availability(tvos,unavailable)));
// @property(nonatomic,readonly) NSInteger pageCount __attribute__((availability(tvos,unavailable)));

// - (CGRect)rectForPageAtIndex:(NSInteger)pageIndex __attribute__((availability(tvos,unavailable)));
// - (void)drawInRect:(CGRect)rect forPageAtIndex:(NSInteger)pageIndex __attribute__((availability(tvos,unavailable)));

/* @end */




__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_2))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UISimpleTextPrintFormatter
#define _REWRITER_typedef_UISimpleTextPrintFormatter
typedef struct objc_object UISimpleTextPrintFormatter;
typedef struct {} _objc_exc_UISimpleTextPrintFormatter;
#endif

struct UISimpleTextPrintFormatter_IMPL {
	struct UIPrintFormatter_IMPL UIPrintFormatter_IVARS;
};


// - (instancetype)initWithText:(NSString *)text;
// - (instancetype)initWithAttributedText:(NSAttributedString *)attributedText __attribute__((availability(ios,introduced=7_0)));

// @property(nullable,nonatomic,copy) NSString *text;
// @property(nullable,nonatomic,copy) NSAttributedString *attributedText __attribute__((availability(ios,introduced=7_0)));
// @property(nullable,nonatomic,strong) UIFont *font;
// @property(nullable,nonatomic,strong) UIColor *color;
// @property(nonatomic) NSTextAlignment textAlignment;

/* @end */




__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_2))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIMarkupTextPrintFormatter
#define _REWRITER_typedef_UIMarkupTextPrintFormatter
typedef struct objc_object UIMarkupTextPrintFormatter;
typedef struct {} _objc_exc_UIMarkupTextPrintFormatter;
#endif

struct UIMarkupTextPrintFormatter_IMPL {
	struct UIPrintFormatter_IMPL UIPrintFormatter_IVARS;
};


// - (instancetype)initWithMarkupText:(NSString *)markupText;
// @property(nullable,nonatomic,copy) NSString *markupText;

/* @end */




__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_2))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIViewPrintFormatter
#define _REWRITER_typedef_UIViewPrintFormatter
typedef struct objc_object UIViewPrintFormatter;
typedef struct {} _objc_exc_UIViewPrintFormatter;
#endif

struct UIViewPrintFormatter_IMPL {
	struct UIPrintFormatter_IMPL UIPrintFormatter_IVARS;
};


// @property(nonatomic,readonly) UIView *view;

/* @end */




// @interface UIView(UIPrintFormatter)

// - (UIViewPrintFormatter *)viewPrintFormatter __attribute__((availability(tvos,unavailable)));
// - (void)drawRect:(CGRect)rect forViewPrintFormatter:(UIViewPrintFormatter *)formatter __attribute__((availability(tvos,unavailable)));

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

typedef NSInteger UIPrintInfoOutputType; enum {
    UIPrintInfoOutputGeneral,
    UIPrintInfoOutputPhoto,
    UIPrintInfoOutputGrayscale,
    UIPrintInfoOutputPhotoGrayscale __attribute__((availability(ios,introduced=7_0))),
 } __attribute__((availability(tvos,unavailable)));

typedef NSInteger UIPrintInfoOrientation; enum {
    UIPrintInfoOrientationPortrait,
    UIPrintInfoOrientationLandscape,
} __attribute__((availability(tvos,unavailable)));

typedef NSInteger UIPrintInfoDuplex; enum {
    UIPrintInfoDuplexNone,
    UIPrintInfoDuplexLongEdge,
    UIPrintInfoDuplexShortEdge,
} __attribute__((availability(tvos,unavailable)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_2))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIPrintInfo
#define _REWRITER_typedef_UIPrintInfo
typedef struct objc_object UIPrintInfo;
typedef struct {} _objc_exc_UIPrintInfo;
#endif

struct UIPrintInfo_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

// + (UIPrintInfo *)printInfo;
// + (UIPrintInfo *)printInfoWithDictionary:(nullable NSDictionary *)dictionary;

// @property(nullable,nonatomic,copy) NSString *printerID;
// @property(nonatomic,copy) NSString *jobName;
// @property(nonatomic) UIPrintInfoOutputType outputType;
// @property(nonatomic) UIPrintInfoOrientation orientation;
// @property(nonatomic) UIPrintInfoDuplex duplex;
// @property(nonatomic,readonly) NSDictionary *dictionaryRepresentation;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIPrintInteractionController;
#ifndef _REWRITER_typedef_UIPrintInteractionController
#define _REWRITER_typedef_UIPrintInteractionController
typedef struct objc_object UIPrintInteractionController;
typedef struct {} _objc_exc_UIPrintInteractionController;
#endif

#ifndef _REWRITER_typedef_UIPrintInfo
#define _REWRITER_typedef_UIPrintInfo
typedef struct objc_object UIPrintInfo;
typedef struct {} _objc_exc_UIPrintInfo;
#endif

#ifndef _REWRITER_typedef_UIPrintPaper
#define _REWRITER_typedef_UIPrintPaper
typedef struct objc_object UIPrintPaper;
typedef struct {} _objc_exc_UIPrintPaper;
#endif

#ifndef _REWRITER_typedef_UIPrintPageRenderer
#define _REWRITER_typedef_UIPrintPageRenderer
typedef struct objc_object UIPrintPageRenderer;
typedef struct {} _objc_exc_UIPrintPageRenderer;
#endif

#ifndef _REWRITER_typedef_UIPrintFormatter
#define _REWRITER_typedef_UIPrintFormatter
typedef struct objc_object UIPrintFormatter;
typedef struct {} _objc_exc_UIPrintFormatter;
#endif

#ifndef _REWRITER_typedef_UIPrinter
#define _REWRITER_typedef_UIPrinter
typedef struct objc_object UIPrinter;
typedef struct {} _objc_exc_UIPrinter;
#endif

// @class UIView;
#ifndef _REWRITER_typedef_UIView
#define _REWRITER_typedef_UIView
typedef struct objc_object UIView;
typedef struct {} _objc_exc_UIView;
#endif

#ifndef _REWRITER_typedef_UIBarButtonItem
#define _REWRITER_typedef_UIBarButtonItem
typedef struct objc_object UIBarButtonItem;
typedef struct {} _objc_exc_UIBarButtonItem;
#endif


typedef void (*UIPrintInteractionCompletionHandler)(UIPrintInteractionController *printInteractionController, BOOL completed, NSError * _Nullable error) __attribute__((availability(tvos,unavailable)));


__attribute__((availability(ios,introduced=9_0))) typedef NSInteger UIPrinterCutterBehavior; enum {
    UIPrinterCutterBehaviorNoCut,
    UIPrinterCutterBehaviorPrinterDefault,
    UIPrinterCutterBehaviorCutAfterEachPage,
    UIPrinterCutterBehaviorCutAfterEachCopy,
    UIPrinterCutterBehaviorCutAfterEachJob,
} __attribute__((availability(tvos,unavailable)));

// @protocol UIPrintInteractionControllerDelegate;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_2))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIPrintInteractionController
#define _REWRITER_typedef_UIPrintInteractionController
typedef struct objc_object UIPrintInteractionController;
typedef struct {} _objc_exc_UIPrintInteractionController;
#endif

struct UIPrintInteractionController_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



@property(class, nonatomic, readonly, getter=isPrintingAvailable) BOOL printingAvailable;





@property(class, nonatomic, readonly) NSSet<NSString *> *printableUTIs;



// + (BOOL)canPrintURL:(NSURL *)url;
// + (BOOL)canPrintData:(NSData *)data;


@property(class, nonatomic, readonly) UIPrintInteractionController *sharedPrintController;




// @property(nullable,nonatomic,strong) UIPrintInfo *printInfo;
// @property(nullable,nonatomic,weak) id<UIPrintInteractionControllerDelegate> delegate;
// @property(nonatomic) BOOL showsPageRange __attribute__((availability(ios,introduced=4_2,deprecated=10_0,message="" "Pages can be removed from the print preview, so page range is always shown.")));
// @property(nonatomic) BOOL showsNumberOfCopies __attribute__((availability(ios,introduced=7_0)));
// @property(nonatomic) BOOL showsPaperSelectionForLoadedPapers __attribute__((availability(ios,introduced=8_0)));

// @property(nullable, nonatomic,readonly) UIPrintPaper *printPaper;

// @property(nullable,nonatomic,strong) UIPrintPageRenderer *printPageRenderer;
// @property(nullable,nonatomic,strong) UIPrintFormatter *printFormatter;
// @property(nullable,nonatomic,copy) id printingItem;
// @property(nullable,nonatomic,copy) NSArray *printingItems;

// - (BOOL)presentAnimated:(BOOL)animated completionHandler:(nullable UIPrintInteractionCompletionHandler)completion;
// - (BOOL)presentFromRect:(CGRect)rect inView:(UIView *)view animated:(BOOL)animated completionHandler:(nullable UIPrintInteractionCompletionHandler)completion;
// - (BOOL)presentFromBarButtonItem:(UIBarButtonItem *)item animated:(BOOL)animated completionHandler:(nullable UIPrintInteractionCompletionHandler)completion;






// - (BOOL)printToPrinter:(UIPrinter *)printer completionHandler:(nullable UIPrintInteractionCompletionHandler)completion;

// - (void)dismissAnimated:(BOOL)animated;

/* @end */


__attribute__((availability(tvos,unavailable))) // @protocol UIPrintInteractionControllerDelegate <NSObject>
/* @optional */

// - ( UIViewController * _Nullable )printInteractionControllerParentViewController:(UIPrintInteractionController *)printInteractionController;

// - (UIPrintPaper *)printInteractionController:(UIPrintInteractionController *)printInteractionController choosePaper:(NSArray<UIPrintPaper *> *)paperList;

// - (void)printInteractionControllerWillPresentPrinterOptions:(UIPrintInteractionController *)printInteractionController;
// - (void)printInteractionControllerDidPresentPrinterOptions:(UIPrintInteractionController *)printInteractionController;
// - (void)printInteractionControllerWillDismissPrinterOptions:(UIPrintInteractionController *)printInteractionController;
// - (void)printInteractionControllerDidDismissPrinterOptions:(UIPrintInteractionController *)printInteractionController;

// - (void)printInteractionControllerWillStartJob:(UIPrintInteractionController *)printInteractionController;
// - (void)printInteractionControllerDidFinishJob:(UIPrintInteractionController *)printInteractionController;

// - (CGFloat)printInteractionController:(UIPrintInteractionController *)printInteractionController cutLengthForPaper:(UIPrintPaper *)paper __attribute__((availability(ios,introduced=7_0)));
// - (UIPrinterCutterBehavior) printInteractionController:(UIPrintInteractionController *)printInteractionController chooseCutterBehavior:(NSArray *)availableBehaviors __attribute__((availability(ios,introduced=9_0)));

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIPrintFormatter;
#ifndef _REWRITER_typedef_UIPrintFormatter
#define _REWRITER_typedef_UIPrintFormatter
typedef struct objc_object UIPrintFormatter;
typedef struct {} _objc_exc_UIPrintFormatter;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_2))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIPrintPageRenderer
#define _REWRITER_typedef_UIPrintPageRenderer
typedef struct objc_object UIPrintPageRenderer;
typedef struct {} _objc_exc_UIPrintPageRenderer;
#endif

struct UIPrintPageRenderer_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property(nonatomic) CGFloat headerHeight;
// @property(nonatomic) CGFloat footerHeight;

// @property(nonatomic,readonly) CGRect paperRect;
// @property(nonatomic,readonly) CGRect printableRect;

// @property(nonatomic,readonly) NSInteger numberOfPages;

// @property(nullable,nonatomic,copy) NSArray<UIPrintFormatter *> *printFormatters;
// - (nullable NSArray<UIPrintFormatter *> *)printFormattersForPageAtIndex:(NSInteger)pageIndex;
// - (void)addPrintFormatter:(UIPrintFormatter *)formatter startingAtPageAtIndex:(NSInteger)pageIndex;

// - (void)prepareForDrawingPages:(NSRange)range;

// - (void)drawPageAtIndex:(NSInteger)pageIndex inRect:(CGRect)printableRect;
// - (void)drawPrintFormatter:(UIPrintFormatter *)printFormatter forPageAtIndex:(NSInteger)pageIndex;
// - (void)drawHeaderForPageAtIndex:(NSInteger)pageIndex inRect:(CGRect)headerRect;
// - (void)drawContentForPageAtIndex:(NSInteger)pageIndex inRect:(CGRect)contentRect;
// - (void)drawFooterForPageAtIndex:(NSInteger)pageIndex inRect:(CGRect)footerRect;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_2)))__attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIPrintPaper
#define _REWRITER_typedef_UIPrintPaper
typedef struct objc_object UIPrintPaper;
typedef struct {} _objc_exc_UIPrintPaper;
#endif

struct UIPrintPaper_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// + (UIPrintPaper *)bestPaperForPageSize:(CGSize)contentSize withPapersFromArray:(NSArray<UIPrintPaper *> *)paperList;

// @property(readonly) CGSize paperSize;
// @property(readonly) CGRect printableRect;

/* @end */




// @interface UIPrintPaper(Deprecated_Nonfunctional)
// - (CGRect)printRect __attribute__((availability(tvos,unavailable))) ;
/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIImageView;
#ifndef _REWRITER_typedef_UIImageView
#define _REWRITER_typedef_UIImageView
typedef struct objc_object UIImageView;
typedef struct {} _objc_exc_UIImageView;
#endif

#ifndef _REWRITER_typedef_CAGradientLayer
#define _REWRITER_typedef_CAGradientLayer
typedef struct objc_object CAGradientLayer;
typedef struct {} _objc_exc_CAGradientLayer;
#endif


typedef NSInteger UIProgressViewStyle; enum {
    UIProgressViewStyleDefault,
    UIProgressViewStyleBar __attribute__((availability(tvos,unavailable))),
};

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) 
#ifndef _REWRITER_typedef_UIProgressView
#define _REWRITER_typedef_UIProgressView
typedef struct objc_object UIProgressView;
typedef struct {} _objc_exc_UIProgressView;
#endif

struct UIProgressView_IMPL {
	struct UIView_IMPL UIView_IVARS;
};


// - (instancetype)initWithFrame:(CGRect)frame __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));
// - (instancetype)initWithProgressViewStyle:(UIProgressViewStyle)style;

// @property(nonatomic) UIProgressViewStyle progressViewStyle;
// @property(nonatomic) float progress;
// @property(nonatomic, strong, nullable) UIColor* progressTintColor __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));
// @property(nonatomic, strong, nullable) UIColor* trackTintColor __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));
// @property(nonatomic, strong, nullable) UIImage* progressImage __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));
// @property(nonatomic, strong, nullable) UIImage* trackImage __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));

// - (void)setProgress:(float)progress animated:(BOOL)animated __attribute__((availability(ios,introduced=5_0)));

// @property(nonatomic, strong, nullable) NSProgress *observedProgress __attribute__((availability(ios,introduced=9_0)));

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_UIReferenceLibraryViewController
#define _REWRITER_typedef_UIReferenceLibraryViewController
typedef struct objc_object UIReferenceLibraryViewController;
typedef struct {} _objc_exc_UIReferenceLibraryViewController;
#endif

struct UIReferenceLibraryViewController_IMPL {
	struct UIViewController_IMPL UIViewController_IVARS;
};




// + (BOOL)dictionaryHasDefinitionForTerm:(NSString *)term;



// - (instancetype)initWithTerm:(NSString *)term __attribute__((objc_designated_initializer));
// - (instancetype) initWithCoder:(nonnull NSCoder *)aDecoder __attribute__((objc_designated_initializer));

// - (instancetype)initWithNibName:(nullable NSString *)nibNameOrNil bundle:(nullable NSBundle *)nibBundleOrNil __attribute__((unavailable));
// - (instancetype)init __attribute__((unavailable));

/* @end */

#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin





__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_2))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIRotationGestureRecognizer
#define _REWRITER_typedef_UIRotationGestureRecognizer
typedef struct objc_object UIRotationGestureRecognizer;
typedef struct {} _objc_exc_UIRotationGestureRecognizer;
#endif

struct UIRotationGestureRecognizer_IMPL {
	struct UIGestureRecognizer_IMPL UIGestureRecognizer_IVARS;
};


// @property (nonatomic) CGFloat rotation;
// @property (nonatomic,readonly) CGFloat velocity;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIScreenMode;
#ifndef _REWRITER_typedef_UIScreenMode
#define _REWRITER_typedef_UIScreenMode
typedef struct objc_object UIScreenMode;
typedef struct {} _objc_exc_UIScreenMode;
#endif

#ifndef _REWRITER_typedef_CADisplayLink
#define _REWRITER_typedef_CADisplayLink
typedef struct objc_object CADisplayLink;
typedef struct {} _objc_exc_CADisplayLink;
#endif

#ifndef _REWRITER_typedef_UIView
#define _REWRITER_typedef_UIView
typedef struct objc_object UIView;
typedef struct {} _objc_exc_UIView;
#endif



extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIScreenDidConnectNotification __attribute__((availability(ios,introduced=3_2)));

extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIScreenDidDisconnectNotification __attribute__((availability(ios,introduced=3_2)));

extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIScreenModeDidChangeNotification __attribute__((availability(ios,introduced=3_2)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIScreenBrightnessDidChangeNotification __attribute__((availability(ios,introduced=5_0)));

extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIScreenCapturedDidChangeNotification __attribute__((availability(ios,introduced=11_0)));


typedef NSInteger UIScreenOverscanCompensation; enum {
    UIScreenOverscanCompensationScale,
    UIScreenOverscanCompensationInsetBounds,
    UIScreenOverscanCompensationNone __attribute__((availability(ios,introduced=9_0))),

    UIScreenOverscanCompensationInsetApplicationFrame __attribute__((availability(ios,introduced=5_0,deprecated=9_0,message="" "Use UIScreenOverscanCompensationNone"))) = 2,
};

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) 
#ifndef _REWRITER_typedef_UIScreen
#define _REWRITER_typedef_UIScreen
typedef struct objc_object UIScreen;
typedef struct {} _objc_exc_UIScreen;
#endif

struct UIScreen_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



@property(class, nonatomic, readonly) NSArray<UIScreen *> *screens __attribute__((availability(ios,introduced=3_2)));
@property(class, nonatomic, readonly) UIScreen *mainScreen;





// @property(nonatomic,readonly) CGRect bounds;
// @property(nonatomic,readonly) CGFloat scale __attribute__((availability(ios,introduced=4_0)));

// @property(nonatomic,readonly,copy) NSArray<UIScreenMode *> *availableModes __attribute__((availability(ios,introduced=3_2))) __attribute__((availability(tvos,unavailable)));
// @property(nullable, nonatomic,readonly,strong) UIScreenMode *preferredMode __attribute__((availability(ios,introduced=4_3))) __attribute__((availability(tvos,unavailable)));



// @property(nullable,nonatomic,strong) UIScreenMode *currentMode __attribute__((availability(ios,introduced=3_2)));

// @property(nonatomic) UIScreenOverscanCompensation overscanCompensation __attribute__((availability(ios,introduced=5_0)));

// @property(nonatomic,readonly) UIEdgeInsets overscanCompensationInsets __attribute__((availability(ios,introduced=9_0)));

// @property(nullable, nonatomic,readonly,strong) UIScreen *mirroredScreen __attribute__((availability(ios,introduced=4_3)));
// @property(nonatomic,readonly,getter=isCaptured) BOOL captured __attribute__((availability(ios,introduced=11_0)));

// @property(nonatomic) CGFloat brightness __attribute__((availability(ios,introduced=5_0))) __attribute__((availability(tvos,unavailable)));
// @property(nonatomic) BOOL wantsSoftwareDimming __attribute__((availability(ios,introduced=5_0))) __attribute__((availability(tvos,unavailable)));

// @property (readonly) id <UICoordinateSpace> coordinateSpace __attribute__((availability(ios,introduced=8_0)));
// @property (readonly) id <UICoordinateSpace> fixedCoordinateSpace __attribute__((availability(ios,introduced=8_0)));

// @property(nonatomic,readonly) CGRect nativeBounds __attribute__((availability(ios,introduced=8_0)));
// @property(nonatomic,readonly) CGFloat nativeScale __attribute__((availability(ios,introduced=8_0)));

// - (nullable CADisplayLink *)displayLinkWithTarget:(id)target selector:(SEL)sel __attribute__((availability(ios,introduced=4_0)));

// @property (readonly) NSInteger maximumFramesPerSecond __attribute__((availability(ios,introduced=10_3)));

// @property (nullable, nonatomic, weak, readonly) id<UIFocusItem> focusedItem __attribute__((availability(ios,introduced=10_0)));
// @property (nullable, nonatomic, weak, readonly) UIView *focusedView __attribute__((availability(ios,introduced=9_0)));
// @property (readonly, nonatomic) BOOL supportsFocus __attribute__((availability(ios,introduced=9_0)));

// @property(nonatomic,readonly) CGRect applicationFrame __attribute__((availability(ios,introduced=2_0,deprecated=9_0,message="" "Use -[UIScreen bounds]"))) __attribute__((availability(tvos,unavailable)));

/* @end */


// @interface UIScreen (UISnapshotting)

// - (UIView *)snapshotViewAfterScreenUpdates:(BOOL)afterUpdates __attribute__((availability(ios,introduced=7_0)));
/* @end */

#pragma clang assume_nonnull end








#pragma clang assume_nonnull begin



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIScreenEdgePanGestureRecognizer
#define _REWRITER_typedef_UIScreenEdgePanGestureRecognizer
typedef struct objc_object UIScreenEdgePanGestureRecognizer;
typedef struct {} _objc_exc_UIScreenEdgePanGestureRecognizer;
#endif

struct UIScreenEdgePanGestureRecognizer_IMPL {
	struct UIPanGestureRecognizer_IMPL UIPanGestureRecognizer_IVARS;
};

// @property (readwrite, nonatomic, assign) UIRectEdge edges;
/* @end */

#pragma clang assume_nonnull end
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_2))) 
#ifndef _REWRITER_typedef_UIScreenMode
#define _REWRITER_typedef_UIScreenMode
typedef struct objc_object UIScreenMode;
typedef struct {} _objc_exc_UIScreenMode;
#endif

struct UIScreenMode_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property(readonly,nonatomic) CGSize size;
// @property(readonly,nonatomic) CGFloat pixelAspectRatio;

/* @end */


#pragma clang assume_nonnull begin

typedef NSInteger UISearchBarIcon; enum {
    UISearchBarIconSearch,
    UISearchBarIconClear __attribute__((availability(tvos,unavailable))),
    UISearchBarIconBookmark __attribute__((availability(tvos,unavailable))),
    UISearchBarIconResultsList __attribute__((availability(tvos,unavailable))),
};

typedef NSUInteger UISearchBarStyle; enum {
    UISearchBarStyleDefault,
    UISearchBarStyleProminent,
    UISearchBarStyleMinimal
} __attribute__((availability(ios,introduced=7_0)));


// @protocol UISearchBarDelegate;
// @class UITextField;
#ifndef _REWRITER_typedef_UITextField
#define _REWRITER_typedef_UITextField
typedef struct objc_object UITextField;
typedef struct {} _objc_exc_UITextField;
#endif

#ifndef _REWRITER_typedef_UILabel
#define _REWRITER_typedef_UILabel
typedef struct objc_object UILabel;
typedef struct {} _objc_exc_UILabel;
#endif

#ifndef _REWRITER_typedef_UIButton
#define _REWRITER_typedef_UIButton
typedef struct objc_object UIButton;
typedef struct {} _objc_exc_UIButton;
#endif

#ifndef _REWRITER_typedef_UIColor
#define _REWRITER_typedef_UIColor
typedef struct objc_object UIColor;
typedef struct {} _objc_exc_UIColor;
#endif






__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) 
#ifndef _REWRITER_typedef_UISearchBar
#define _REWRITER_typedef_UISearchBar
typedef struct objc_object UISearchBar;
typedef struct {} _objc_exc_UISearchBar;
#endif

struct UISearchBar_IMPL {
	struct UIView_IMPL UIView_IVARS;
};


// - (instancetype)init __attribute__((availability(tvos,unavailable)));
// - (instancetype)initWithFrame:(CGRect)frame __attribute__((objc_designated_initializer)) __attribute__((availability(tvos,unavailable)));
// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer)) __attribute__((availability(tvos,unavailable)));

// @property(nonatomic) UIBarStyle barStyle __attribute__((availability(tvos,unavailable)));
// @property(nullable,nonatomic,weak) id<UISearchBarDelegate> delegate;
// @property(nullable,nonatomic,copy) NSString *text;
// @property(nullable,nonatomic,copy) NSString *prompt;
// @property(nullable,nonatomic,copy) NSString *placeholder;
// @property(nonatomic) BOOL showsBookmarkButton __attribute__((availability(tvos,unavailable)));
// @property(nonatomic) BOOL showsCancelButton __attribute__((availability(tvos,unavailable)));
// @property(nonatomic) BOOL showsSearchResultsButton __attribute__((availability(ios,introduced=3_2))) __attribute__((availability(tvos,unavailable)));
// @property(nonatomic, getter=isSearchResultsButtonSelected) BOOL searchResultsButtonSelected __attribute__((availability(ios,introduced=3_2))) __attribute__((availability(tvos,unavailable)));
// - (void)setShowsCancelButton:(BOOL)showsCancelButton animated:(BOOL)animated __attribute__((availability(ios,introduced=3_0))) __attribute__((availability(tvos,unavailable)));




// @property (nonatomic, readonly, strong) UITextInputAssistantItem *inputAssistantItem __attribute__((availability(ios,introduced=9_0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));






// @property(null_resettable, nonatomic,strong) UIColor *tintColor;
// @property(nullable, nonatomic,strong) UIColor *barTintColor __attribute__((availability(ios,introduced=7_0))) __attribute__((annotate("ui_appearance_selector")));

// @property (nonatomic) UISearchBarStyle searchBarStyle __attribute__((availability(ios,introduced=7_0)));
// @property(nonatomic,assign,getter=isTranslucent) BOOL translucent __attribute__((availability(ios,introduced=3_0)));

// @property(nullable, nonatomic,copy) NSArray<NSString *> *scopeButtonTitles __attribute__((availability(ios,introduced=3_0)));
// @property(nonatomic) NSInteger selectedScopeButtonIndex __attribute__((availability(ios,introduced=3_0)));
// @property(nonatomic) BOOL showsScopeBar __attribute__((availability(ios,introduced=3_0)));



// @property (nullable, nonatomic, readwrite, strong) UIView *inputAccessoryView;


// @property(nullable, nonatomic,strong) UIImage *backgroundImage __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));
// @property(nullable, nonatomic,strong) UIImage *scopeBarBackgroundImage __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));


// - (void)setBackgroundImage:(nullable UIImage *)backgroundImage forBarPosition:(UIBarPosition)barPosition barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=7_0))) __attribute__((annotate("ui_appearance_selector")));
// - (nullable UIImage *)backgroundImageForBarPosition:(UIBarPosition)barPosition barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=7_0))) __attribute__((annotate("ui_appearance_selector")));






// - (void)setSearchFieldBackgroundImage:(nullable UIImage *)backgroundImage forState:(UIControlState)state __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));
// - (nullable UIImage *)searchFieldBackgroundImageForState:(UIControlState)state __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));

// - (void)setImage:(nullable UIImage *)iconImage forSearchBarIcon:(UISearchBarIcon)icon state:(UIControlState)state __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));
// - (nullable UIImage *)imageForSearchBarIcon:(UISearchBarIcon)icon state:(UIControlState)state __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));







// - (void)setScopeBarButtonBackgroundImage:(nullable UIImage *)backgroundImage forState:(UIControlState)state __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));
// - (nullable UIImage *)scopeBarButtonBackgroundImageForState:(UIControlState)state __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));



// - (void)setScopeBarButtonDividerImage:(nullable UIImage *)dividerImage forLeftSegmentState:(UIControlState)leftState rightSegmentState:(UIControlState)rightState __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));
// - (nullable UIImage *)scopeBarButtonDividerImageForLeftSegmentState:(UIControlState)leftState rightSegmentState:(UIControlState)rightState __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));



// - (void)setScopeBarButtonTitleTextAttributes:(nullable NSDictionary<NSString *, id> *)attributes forState:(UIControlState)state __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));
// - (nullable NSDictionary<NSString *, id> *)scopeBarButtonTitleTextAttributesForState:(UIControlState)state __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));



// @property(nonatomic) UIOffset searchFieldBackgroundPositionAdjustment __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));



// @property(nonatomic) UIOffset searchTextPositionAdjustment __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));



// - (void)setPositionAdjustment:(UIOffset)adjustment forSearchBarIcon:(UISearchBarIcon)icon __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));
// - (UIOffset)positionAdjustmentForSearchBarIcon:(UISearchBarIcon)icon __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));
/* @end */


// @protocol UISearchBarDelegate <UIBarPositioningDelegate>

/* @optional */

// - (BOOL)searchBarShouldBeginEditing:(UISearchBar *)searchBar;
// - (void)searchBarTextDidBeginEditing:(UISearchBar *)searchBar;
// - (BOOL)searchBarShouldEndEditing:(UISearchBar *)searchBar;
// - (void)searchBarTextDidEndEditing:(UISearchBar *)searchBar;
// - (void)searchBar:(UISearchBar *)searchBar textDidChange:(NSString *)searchText;
// - (BOOL)searchBar:(UISearchBar *)searchBar shouldChangeTextInRange:(NSRange)range replacementText:(NSString *)text __attribute__((availability(ios,introduced=3_0)));

// - (void)searchBarSearchButtonClicked:(UISearchBar *)searchBar;
// - (void)searchBarBookmarkButtonClicked:(UISearchBar *)searchBar __attribute__((availability(tvos,unavailable)));
// - (void)searchBarCancelButtonClicked:(UISearchBar *)searchBar __attribute__((availability(tvos,unavailable)));
// - (void)searchBarResultsListButtonClicked:(UISearchBar *)searchBar __attribute__((availability(ios,introduced=3_2))) __attribute__((availability(tvos,unavailable)));

// - (void)searchBar:(UISearchBar *)searchBar selectedScopeButtonIndexDidChange:(NSInteger)selectedScope __attribute__((availability(ios,introduced=3_0)));

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UISearchController;
#ifndef _REWRITER_typedef_UISearchController
#define _REWRITER_typedef_UISearchController
typedef struct objc_object UISearchController;
typedef struct {} _objc_exc_UISearchController;
#endif



extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=9_1))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,introduced=9_0))) 
#ifndef _REWRITER_typedef_UISearchContainerViewController
#define _REWRITER_typedef_UISearchContainerViewController
typedef struct objc_object UISearchContainerViewController;
typedef struct {} _objc_exc_UISearchContainerViewController;
#endif

struct UISearchContainerViewController_IMPL {
	struct UIViewController_IMPL UIViewController_IVARS;
};

// @property (nonatomic, strong, readonly) UISearchController *searchController;

// - (instancetype)initWithSearchController:(UISearchController *)searchController;

/* @end */

#pragma clang assume_nonnull end







#pragma clang assume_nonnull begin





typedef NSString * UITransitionContextViewControllerKey;
typedef NSString * UITransitionContextViewKey;


// @protocol UIViewControllerTransitionCoordinatorContext <NSObject>






// @property(nonatomic, readonly, getter=isAnimated) BOOL animated;







// @property(nonatomic, readonly) UIModalPresentationStyle presentationStyle;
// @property(nonatomic, readonly) BOOL initiallyInteractive;



// @property(nonatomic,readonly) BOOL isInterruptible __attribute__((availability(ios,introduced=10_0)));




// @property(nonatomic, readonly, getter=isInteractive) BOOL interactive;






// @property(nonatomic, readonly, getter=isCancelled) BOOL cancelled;






// @property(nonatomic, readonly) NSTimeInterval transitionDuration;
// @property(nonatomic, readonly) CGFloat percentComplete;
// @property(nonatomic, readonly) CGFloat completionVelocity;
// @property(nonatomic, readonly) UIViewAnimationCurve completionCurve;
// - (nullable __kindof UIViewController *)viewControllerForKey:(UITransitionContextViewControllerKey)key;




// - (nullable __kindof UIView *)viewForKey:(UITransitionContextViewKey)key __attribute__((availability(ios,introduced=8_0)));



// @property(nonatomic, readonly) UIView *containerView;






// @property(nonatomic, readonly) CGAffineTransform targetTransform __attribute__((availability(ios,introduced=8_0)));




/* @end */








// @protocol UIViewControllerTransitionCoordinator <UIViewControllerTransitionCoordinatorContext>
#if 0
- (BOOL)animateAlongsideTransition:(void (^ _Nullable)(id <UIViewControllerTransitionCoordinatorContext>context))animation
                        completion:(void (^ _Nullable)(id <UIViewControllerTransitionCoordinatorContext>context))completion;
#endif




#if 0
- (BOOL)animateAlongsideTransitionInView:(nullable UIView *)view
                               animation:(void (^ _Nullable)(id <UIViewControllerTransitionCoordinatorContext>context))animation
                              completion:(void (^ _Nullable)(id <UIViewControllerTransitionCoordinatorContext>context))completion;
#endif

// - (void)notifyWhenInteractionEndsUsingBlock: (void (^)(id <UIViewControllerTransitionCoordinatorContext>context))handler __attribute__((availability(ios,introduced=7_0,deprecated=10_0,message="" "Use notifyWhenInteractionChangesUsingBlock")));





// - (void)notifyWhenInteractionChangesUsingBlock: (void (^)(id <UIViewControllerTransitionCoordinatorContext>context))handler __attribute__((availability(ios,introduced=10_0)));

/* @end */


// @interface UIViewController(UIViewControllerTransitionCoordinator)
// @property(nonatomic, readonly, nullable) id <UIViewControllerTransitionCoordinator> transitionCoordinator __attribute__((availability(ios,introduced=7_0)));



/* @end */

#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin

// @class UIPresentationController;
#ifndef _REWRITER_typedef_UIPresentationController
#define _REWRITER_typedef_UIPresentationController
typedef struct objc_object UIPresentationController;
typedef struct {} _objc_exc_UIPresentationController;
#endif


// @protocol UIAdaptivePresentationControllerDelegate <NSObject>

/* @optional */


// - (UIModalPresentationStyle)adaptivePresentationStyleForPresentationController:(UIPresentationController *)controller;


// - (UIModalPresentationStyle)adaptivePresentationStyleForPresentationController:(UIPresentationController *)controller traitCollection:(UITraitCollection *)traitCollection __attribute__((availability(ios,introduced=8_3)));


// - (nullable UIViewController *)presentationController:(UIPresentationController *)controller viewControllerForAdaptivePresentationStyle:(UIModalPresentationStyle)style;


// - (void)presentationController:(UIPresentationController *)presentationController willPresentWithAdaptiveStyle:(UIModalPresentationStyle)style transitionCoordinator:(nullable id <UIViewControllerTransitionCoordinator>)transitionCoordinator __attribute__((availability(ios,introduced=8_3)));


/* @end */


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) 
#ifndef _REWRITER_typedef_UIPresentationController
#define _REWRITER_typedef_UIPresentationController
typedef struct objc_object UIPresentationController;
typedef struct {} _objc_exc_UIPresentationController;
#endif

struct UIPresentationController_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property(nonatomic, strong, readonly) UIViewController *presentingViewController;
// @property(nonatomic, strong, readonly) UIViewController *presentedViewController;

// @property(nonatomic, readonly) UIModalPresentationStyle presentationStyle;



// @property(nullable, nonatomic, readonly, strong) UIView *containerView;

// @property(nullable, nonatomic, weak) id <UIAdaptivePresentationControllerDelegate> delegate;

// - (instancetype)initWithPresentedViewController:(UIViewController *)presentedViewController presentingViewController:(nullable UIViewController *)presentingViewController __attribute__((objc_designated_initializer));
// - (instancetype)init __attribute__((unavailable));





// @property(nonatomic, readonly) UIModalPresentationStyle adaptivePresentationStyle;



// - (UIModalPresentationStyle)adaptivePresentationStyleForTraitCollection:(UITraitCollection *)traitCollection __attribute__((availability(ios,introduced=8_3)));

// - (void)containerViewWillLayoutSubviews;
// - (void)containerViewDidLayoutSubviews;





// @property(nonatomic, readonly, nullable) UIView *presentedView;



// @property(nonatomic, readonly) CGRect frameOfPresentedViewInContainerView;




// @property(nonatomic, readonly) BOOL shouldPresentInFullscreen;




// @property(nonatomic, readonly) BOOL shouldRemovePresentersView;
// - (void)presentationTransitionWillBegin;
// - (void)presentationTransitionDidEnd:(BOOL)completed;
// - (void)dismissalTransitionWillBegin;
// - (void)dismissalTransitionDidEnd:(BOOL)completed;


// @property(nullable, nonatomic, copy) UITraitCollection *overrideTraitCollection;

/* @end */

#pragma clang assume_nonnull end
typedef NSInteger UITimingCurveType; enum {
    UITimingCurveTypeBuiltin,
    UITimingCurveTypeCubic,
    UITimingCurveTypeSpring,
    UITimingCurveTypeComposed,
} __attribute__((availability(ios,introduced=10_0)));

// @class UICubicTimingParameters;
#ifndef _REWRITER_typedef_UICubicTimingParameters
#define _REWRITER_typedef_UICubicTimingParameters
typedef struct objc_object UICubicTimingParameters;
typedef struct {} _objc_exc_UICubicTimingParameters;
#endif

#ifndef _REWRITER_typedef_UISpringTimingParameters
#define _REWRITER_typedef_UISpringTimingParameters
typedef struct objc_object UISpringTimingParameters;
typedef struct {} _objc_exc_UISpringTimingParameters;
#endif


#pragma clang assume_nonnull begin

// @protocol UITimingCurveProvider <NSCoding, NSCopying>

// @property(nonatomic, readonly) UITimingCurveType timingCurveType;
// @property(nullable, nonatomic, readonly) UICubicTimingParameters *cubicTimingParameters;
// @property(nullable, nonatomic, readonly) UISpringTimingParameters *springTimingParameters;

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0))) 
#ifndef _REWRITER_typedef_UICubicTimingParameters
#define _REWRITER_typedef_UICubicTimingParameters
typedef struct objc_object UICubicTimingParameters;
typedef struct {} _objc_exc_UICubicTimingParameters;
#endif

struct UICubicTimingParameters_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property(nonatomic, readonly) UIViewAnimationCurve animationCurve;
// @property(nonatomic, readonly) CGPoint controlPoint1;
// @property(nonatomic, readonly) CGPoint controlPoint2;

// - (instancetype)init __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));
// - (instancetype)initWithAnimationCurve:(UIViewAnimationCurve)curve __attribute__((objc_designated_initializer));
// - (instancetype)initWithControlPoint1:(CGPoint)point1 controlPoint2:(CGPoint)point2 __attribute__((objc_designated_initializer));

/* @end */



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0))) 
#ifndef _REWRITER_typedef_UISpringTimingParameters
#define _REWRITER_typedef_UISpringTimingParameters
typedef struct objc_object UISpringTimingParameters;
typedef struct {} _objc_exc_UISpringTimingParameters;
#endif

struct UISpringTimingParameters_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property(nonatomic, readonly) CGVector initialVelocity;

// - (instancetype)init __attribute__((objc_designated_initializer));

// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));
// - (instancetype)initWithDampingRatio:(CGFloat)ratio initialVelocity:(CGVector)velocity __attribute__((objc_designated_initializer));



// - (instancetype)initWithMass:(CGFloat)mass stiffness:(CGFloat)stiffness damping:(CGFloat)damping initialVelocity:(CGVector)velocity __attribute__((objc_designated_initializer));


// - (instancetype)initWithDampingRatio:(CGFloat)ratio;

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

// @class UIView;
#ifndef _REWRITER_typedef_UIView
#define _REWRITER_typedef_UIView
typedef struct objc_object UIView;
typedef struct {} _objc_exc_UIView;
#endif

extern "C" __attribute__((visibility ("default"))) UITransitionContextViewControllerKey const UITransitionContextFromViewControllerKey __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility ("default"))) UITransitionContextViewControllerKey const UITransitionContextToViewControllerKey __attribute__((availability(ios,introduced=7_0)));

extern "C" __attribute__((visibility ("default"))) UITransitionContextViewKey const UITransitionContextFromViewKey __attribute__((availability(ios,introduced=8_0)));
extern "C" __attribute__((visibility ("default"))) UITransitionContextViewKey const UITransitionContextToViewKey __attribute__((availability(ios,introduced=8_0)));
// @protocol UIViewControllerContextTransitioning <NSObject>



// @property(nonatomic, readonly) UIView *containerView;
// @property(nonatomic, readonly, getter=isAnimated) BOOL animated;

// @property(nonatomic, readonly, getter=isInteractive) BOOL interactive;

// @property(nonatomic, readonly) BOOL transitionWasCancelled;

// @property(nonatomic, readonly) UIModalPresentationStyle presentationStyle;
// - (void)updateInteractiveTransition:(CGFloat)percentComplete;
// - (void)finishInteractiveTransition;
// - (void)cancelInteractiveTransition;



// - (void)pauseInteractiveTransition __attribute__((availability(ios,introduced=10_0)));







// - (void)completeTransition:(BOOL)didComplete;







// - (nullable __kindof UIViewController *)viewControllerForKey:(UITransitionContextViewControllerKey)key;





// - (nullable __kindof UIView *)viewForKey:(UITransitionContextViewKey)key __attribute__((availability(ios,introduced=8_0)));


// @property(nonatomic, readonly) CGAffineTransform targetTransform __attribute__((availability(ios,introduced=8_0)));
// - (CGRect)initialFrameForViewController:(UIViewController *)vc;
// - (CGRect)finalFrameForViewController:(UIViewController *)vc;
/* @end */


// @protocol UIViewControllerAnimatedTransitioning <NSObject>




// - (NSTimeInterval)transitionDuration:(nullable id <UIViewControllerContextTransitioning>)transitionContext;

// - (void)animateTransition:(id <UIViewControllerContextTransitioning>)transitionContext;

/* @optional */





// - (id <UIViewImplicitlyAnimating>) interruptibleAnimatorForTransition:(id <UIViewControllerContextTransitioning>)transitionContext __attribute__((availability(ios,introduced=10_0)));


// - (void)animationEnded:(BOOL) transitionCompleted;

/* @end */



// @protocol UIViewControllerInteractiveTransitioning <NSObject>
// - (void)startInteractiveTransition:(id <UIViewControllerContextTransitioning>)transitionContext;

/* @optional */

// @property(nonatomic, readonly) CGFloat completionSpeed;
// @property(nonatomic, readonly) UIViewAnimationCurve completionCurve;
// @property (nonatomic, readonly) BOOL wantsInteractiveStart __attribute__((availability(ios,introduced=10_0)));

/* @end */


// @class UIPresentationController;
#ifndef _REWRITER_typedef_UIPresentationController
#define _REWRITER_typedef_UIPresentationController
typedef struct objc_object UIPresentationController;
typedef struct {} _objc_exc_UIPresentationController;
#endif


// @protocol UIViewControllerTransitioningDelegate <NSObject>

/* @optional */
// - (nullable id <UIViewControllerAnimatedTransitioning>)animationControllerForPresentedController:(UIViewController *)presented presentingController:(UIViewController *)presenting sourceController:(UIViewController *)source;

// - (nullable id <UIViewControllerAnimatedTransitioning>)animationControllerForDismissedController:(UIViewController *)dismissed;

// - (nullable id <UIViewControllerInteractiveTransitioning>)interactionControllerForPresentation:(id <UIViewControllerAnimatedTransitioning>)animator;

// - (nullable id <UIViewControllerInteractiveTransitioning>)interactionControllerForDismissal:(id <UIViewControllerAnimatedTransitioning>)animator;

// - (nullable UIPresentationController *)presentationControllerForPresentedViewController:(UIViewController *)presented presentingViewController:(nullable UIViewController *)presenting sourceViewController:(UIViewController *)source __attribute__((availability(ios,introduced=8_0)));

/* @end */


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0))) 
#ifndef _REWRITER_typedef_UIPercentDrivenInteractiveTransition
#define _REWRITER_typedef_UIPercentDrivenInteractiveTransition
typedef struct objc_object UIPercentDrivenInteractiveTransition;
typedef struct {} _objc_exc_UIPercentDrivenInteractiveTransition;
#endif

struct UIPercentDrivenInteractiveTransition_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};




// @property (readonly) CGFloat duration;


// @property (readonly) CGFloat percentComplete;







// @property (nonatomic,assign) CGFloat completionSpeed;




// @property (nonatomic,assign) UIViewAnimationCurve completionCurve;




// @property (nullable, nonatomic, strong)id <UITimingCurveProvider> timingCurve __attribute__((availability(ios,introduced=10_0)));




// @property (nonatomic) BOOL wantsInteractiveStart __attribute__((availability(ios,introduced=10_0)));




// - (void)pauseInteractiveTransition __attribute__((availability(ios,introduced=10_0)));
// - (void)updateInteractiveTransition:(CGFloat)percentComplete;
// - (void)cancelInteractiveTransition;
// - (void)finishInteractiveTransition;

/* @end */

#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin

// @class UISearchController;
#ifndef _REWRITER_typedef_UISearchController
#define _REWRITER_typedef_UISearchController
typedef struct objc_object UISearchController;
typedef struct {} _objc_exc_UISearchController;
#endif


// @protocol UISearchControllerDelegate <NSObject>
/* @optional */

// - (void)willPresentSearchController:(UISearchController *)searchController;
// - (void)didPresentSearchController:(UISearchController *)searchController;
// - (void)willDismissSearchController:(UISearchController *)searchController;
// - (void)didDismissSearchController:(UISearchController *)searchController;


// - (void)presentSearchController:(UISearchController *)searchController;
/* @end */


// @protocol UISearchResultsUpdating <NSObject>
/* @required */

// - (void)updateSearchResultsForSearchController:(UISearchController *)searchController;
/* @end */


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) 
#ifndef _REWRITER_typedef_UISearchController
#define _REWRITER_typedef_UISearchController
typedef struct objc_object UISearchController;
typedef struct {} _objc_exc_UISearchController;
#endif

struct UISearchController_IMPL {
	struct UIViewController_IMPL UIViewController_IVARS;
};



// - (instancetype)initWithSearchResultsController:(nullable UIViewController *)searchResultsController;


// @property (nullable, nonatomic, weak) id <UISearchResultsUpdating> searchResultsUpdater;


// @property (nonatomic, assign, getter = isActive) BOOL active;

// @property (nullable, nonatomic, weak) id <UISearchControllerDelegate> delegate;
// @property (nonatomic, assign) BOOL dimsBackgroundDuringPresentation __attribute__((availability(tvos,unavailable)));
// @property (nonatomic, assign) BOOL obscuresBackgroundDuringPresentation __attribute__((availability(ios,introduced=9_1)));
// @property (nonatomic, assign) BOOL hidesNavigationBarDuringPresentation;

// @property (nullable, nonatomic, strong, readonly) UIViewController *searchResultsController;


// @property (nonatomic, strong, readonly) UISearchBar *searchBar;
/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin
typedef NSUInteger UISwipeGestureRecognizerDirection; enum {
    UISwipeGestureRecognizerDirectionRight = 1 << 0,
    UISwipeGestureRecognizerDirectionLeft = 1 << 1,
    UISwipeGestureRecognizerDirectionUp = 1 << 2,
    UISwipeGestureRecognizerDirectionDown = 1 << 3
};

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_2))) 
#ifndef _REWRITER_typedef_UISwipeGestureRecognizer
#define _REWRITER_typedef_UISwipeGestureRecognizer
typedef struct objc_object UISwipeGestureRecognizer;
typedef struct {} _objc_exc_UISwipeGestureRecognizer;
#endif

struct UISwipeGestureRecognizer_IMPL {
	struct UIGestureRecognizer_IMPL UIGestureRecognizer_IVARS;
};


// @property(nonatomic) NSUInteger numberOfTouchesRequired __attribute__((availability(tvos,unavailable)));
// @property(nonatomic) UISwipeGestureRecognizerDirection direction;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIContextualAction;
#ifndef _REWRITER_typedef_UIContextualAction
#define _REWRITER_typedef_UIContextualAction
typedef struct objc_object UIContextualAction;
typedef struct {} _objc_exc_UIContextualAction;
#endif




typedef void (*UIContextualActionHandler)(UIContextualAction *action, __kindof UIView *sourceView, void(^completionHandler)(BOOL actionPerformed));

typedef NSInteger UIContextualActionStyle; enum {
    UIContextualActionStyleNormal,
    UIContextualActionStyleDestructive
} __attribute__((swift_name("UIContextualAction.Style"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable)));

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_UIContextualAction
#define _REWRITER_typedef_UIContextualAction
typedef struct objc_object UIContextualAction;
typedef struct {} _objc_exc_UIContextualAction;
#endif

struct UIContextualAction_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// + (instancetype)contextualActionWithStyle:(UIContextualActionStyle)style title:(nullable NSString *)title handler:(UIContextualActionHandler)handler;

// @property (nonatomic, readonly) UIContextualActionStyle style;
// @property (nonatomic, copy, readonly) UIContextualActionHandler handler;

// @property (nonatomic, copy, nullable) NSString *title;
// @property (nonatomic, copy, nullable) UIColor *backgroundColor;
// @property (nonatomic, copy, nullable) UIImage *image;

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_UISwipeActionsConfiguration
#define _REWRITER_typedef_UISwipeActionsConfiguration
typedef struct objc_object UISwipeActionsConfiguration;
typedef struct {} _objc_exc_UISwipeActionsConfiguration;
#endif

struct UISwipeActionsConfiguration_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// + (instancetype)configurationWithActions:(NSArray<UIContextualAction *> *)actions;

// @property (nonatomic, copy, readonly) NSArray<UIContextualAction *> *actions;
// @property (nonatomic) BOOL performsFirstActionWithFullSwipe;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIImage;
#ifndef _REWRITER_typedef_UIImage
#define _REWRITER_typedef_UIImage
typedef struct objc_object UIImage;
typedef struct {} _objc_exc_UIImage;
#endif

#ifndef _REWRITER_typedef_UIColor
#define _REWRITER_typedef_UIColor
typedef struct objc_object UIColor;
typedef struct {} _objc_exc_UIColor;
#endif

#ifndef _REWRITER_typedef_UILabel
#define _REWRITER_typedef_UILabel
typedef struct objc_object UILabel;
typedef struct {} _objc_exc_UILabel;
#endif

#ifndef _REWRITER_typedef_UIImageView
#define _REWRITER_typedef_UIImageView
typedef struct objc_object UIImageView;
typedef struct {} _objc_exc_UIImageView;
#endif

#ifndef _REWRITER_typedef_UIButton
#define _REWRITER_typedef_UIButton
typedef struct objc_object UIButton;
typedef struct {} _objc_exc_UIButton;
#endif

#ifndef _REWRITER_typedef_UITextField
#define _REWRITER_typedef_UITextField
typedef struct objc_object UITextField;
typedef struct {} _objc_exc_UITextField;
#endif

#ifndef _REWRITER_typedef_UITableView
#define _REWRITER_typedef_UITableView
typedef struct objc_object UITableView;
typedef struct {} _objc_exc_UITableView;
#endif

#ifndef _REWRITER_typedef_UILongPressGestureRecognizer
#define _REWRITER_typedef_UILongPressGestureRecognizer
typedef struct objc_object UILongPressGestureRecognizer;
typedef struct {} _objc_exc_UILongPressGestureRecognizer;
#endif


typedef NSInteger UITableViewCellStyle; enum {
    UITableViewCellStyleDefault,
    UITableViewCellStyleValue1,
    UITableViewCellStyleValue2,
    UITableViewCellStyleSubtitle
};

typedef NSInteger UITableViewCellSeparatorStyle; enum {
    UITableViewCellSeparatorStyleNone,
    UITableViewCellSeparatorStyleSingleLine,
    UITableViewCellSeparatorStyleSingleLineEtched __attribute__((availability(ios,introduced=2_0,deprecated=11_0,message="" "Use UITableViewCellSeparatorStyleSingleLine for a single line separator.")))
} __attribute__((availability(tvos,unavailable)));

typedef NSInteger UITableViewCellSelectionStyle; enum {
    UITableViewCellSelectionStyleNone,
    UITableViewCellSelectionStyleBlue,
    UITableViewCellSelectionStyleGray,
    UITableViewCellSelectionStyleDefault __attribute__((availability(ios,introduced=7_0)))
};

typedef NSInteger UITableViewCellFocusStyle; enum {
    UITableViewCellFocusStyleDefault,
    UITableViewCellFocusStyleCustom
} __attribute__((availability(ios,introduced=9_0)));

typedef NSInteger UITableViewCellEditingStyle; enum {
    UITableViewCellEditingStyleNone,
    UITableViewCellEditingStyleDelete,
    UITableViewCellEditingStyleInsert
};

typedef NSInteger UITableViewCellAccessoryType; enum {
    UITableViewCellAccessoryNone,
    UITableViewCellAccessoryDisclosureIndicator,
    UITableViewCellAccessoryDetailDisclosureButton __attribute__((availability(tvos,unavailable))),
    UITableViewCellAccessoryCheckmark,
    UITableViewCellAccessoryDetailButton __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)))
};

typedef NSUInteger UITableViewCellStateMask; enum {
    UITableViewCellStateDefaultMask = 0,
    UITableViewCellStateShowingEditControlMask = 1 << 0,
    UITableViewCellStateShowingDeleteConfirmationMask = 1 << 1
};

typedef NSInteger UITableViewCellDragState; enum {
    UITableViewCellDragStateNone,
    UITableViewCellDragStateLifting,
    UITableViewCellDragStateDragging
} __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) 
#ifndef _REWRITER_typedef_UITableViewCell
#define _REWRITER_typedef_UITableViewCell
typedef struct objc_object UITableViewCell;
typedef struct {} _objc_exc_UITableViewCell;
#endif

struct UITableViewCell_IMPL {
	struct UIView_IMPL UIView_IVARS;
};



// - (instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(nullable NSString *)reuseIdentifier __attribute__((availability(ios,introduced=3_0))) __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));


// @property (nonatomic, readonly, strong, nullable) UIImageView *imageView __attribute__((availability(ios,introduced=3_0)));

// @property (nonatomic, readonly, strong, nullable) UILabel *textLabel __attribute__((availability(ios,introduced=3_0)));
// @property (nonatomic, readonly, strong, nullable) UILabel *detailTextLabel __attribute__((availability(ios,introduced=3_0)));


// @property (nonatomic, readonly, strong) UIView *contentView;


// @property (nonatomic, strong, nullable) UIView *backgroundView;


// @property (nonatomic, strong, nullable) UIView *selectedBackgroundView;


// @property (nonatomic, strong, nullable) UIView *multipleSelectionBackgroundView __attribute__((availability(ios,introduced=5_0)));

// @property (nonatomic, readonly, copy, nullable) NSString *reuseIdentifier;
// - (void)prepareForReuse __attribute__((objc_requires_super));

// @property (nonatomic) UITableViewCellSelectionStyle selectionStyle;
// @property (nonatomic, getter=isSelected) BOOL selected;
// @property (nonatomic, getter=isHighlighted) BOOL highlighted;
// - (void)setSelected:(BOOL)selected animated:(BOOL)animated;
// - (void)setHighlighted:(BOOL)highlighted animated:(BOOL)animated;

// @property (nonatomic, readonly) UITableViewCellEditingStyle editingStyle;
// @property (nonatomic) BOOL showsReorderControl;
// @property (nonatomic) BOOL shouldIndentWhileEditing;

// @property (nonatomic) UITableViewCellAccessoryType accessoryType;
// @property (nonatomic, strong, nullable) UIView *accessoryView;
// @property (nonatomic) UITableViewCellAccessoryType editingAccessoryType;
// @property (nonatomic, strong, nullable) UIView *editingAccessoryView;

// @property (nonatomic) NSInteger indentationLevel;
// @property (nonatomic) CGFloat indentationWidth;
// @property (nonatomic) UIEdgeInsets separatorInset __attribute__((availability(ios,introduced=7_0))) __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos,unavailable)));

// @property (nonatomic, getter=isEditing) BOOL editing;
// - (void)setEditing:(BOOL)editing animated:(BOOL)animated;

// @property(nonatomic, readonly) BOOL showingDeleteConfirmation;

// @property (nonatomic) UITableViewCellFocusStyle focusStyle __attribute__((availability(ios,introduced=9_0))) __attribute__((annotate("ui_appearance_selector")));




// - (void)willTransitionToState:(UITableViewCellStateMask)state __attribute__((availability(ios,introduced=3_0)));
// - (void)didTransitionToState:(UITableViewCellStateMask)state __attribute__((availability(ios,introduced=3_0)));




// - (void)dragStateDidChange:(UITableViewCellDragState)dragState __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));




// @property (nonatomic) BOOL userInteractionEnabledWhileDragging __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));

/* @end */


// @interface UITableViewCell (UIDeprecated)


// - (id)initWithFrame:(CGRect)frame reuseIdentifier:(nullable NSString *)reuseIdentifier __attribute__((availability(ios,introduced=2_0,deprecated=3_0,message="" ))) __attribute__((availability(tvos,unavailable)));



// @property (nonatomic, copy, nullable) NSString *text __attribute__((availability(ios,introduced=2_0,deprecated=3_0,message="" ))) __attribute__((availability(tvos,unavailable)));
// @property (nonatomic, strong, nullable) UIFont *font __attribute__((availability(ios,introduced=2_0,deprecated=3_0,message="" ))) __attribute__((availability(tvos,unavailable)));
// @property (nonatomic) NSTextAlignment textAlignment __attribute__((availability(ios,introduced=2_0,deprecated=3_0,message="" ))) __attribute__((availability(tvos,unavailable)));
// @property (nonatomic) NSLineBreakMode lineBreakMode __attribute__((availability(ios,introduced=2_0,deprecated=3_0,message="" ))) __attribute__((availability(tvos,unavailable)));
// @property (nonatomic, strong, nullable) UIColor *textColor __attribute__((availability(ios,introduced=2_0,deprecated=3_0,message="" ))) __attribute__((availability(tvos,unavailable)));
// @property (nonatomic, strong, nullable) UIColor *selectedTextColor __attribute__((availability(ios,introduced=2_0,deprecated=3_0,message="" ))) __attribute__((availability(tvos,unavailable)));

// @property (nonatomic, strong, nullable) UIImage *image __attribute__((availability(ios,introduced=2_0,deprecated=3_0,message="" ))) __attribute__((availability(tvos,unavailable)));
// @property (nonatomic, strong, nullable) UIImage *selectedImage __attribute__((availability(ios,introduced=2_0,deprecated=3_0,message="" ))) __attribute__((availability(tvos,unavailable)));


// @property (nonatomic) BOOL hidesAccessoryWhenEditing __attribute__((availability(ios,introduced=2_0,deprecated=3_0,message="" ))) __attribute__((availability(tvos,unavailable)));


// @property (nonatomic, assign, nullable) id target __attribute__((availability(ios,introduced=2_0,deprecated=3_0,message="" ))) __attribute__((availability(tvos,unavailable)));
// @property (nonatomic, nullable) SEL editAction __attribute__((availability(ios,introduced=2_0,deprecated=3_0,message="" ))) __attribute__((availability(tvos,unavailable)));
// @property (nonatomic, nullable) SEL accessoryAction __attribute__((availability(ios,introduced=2_0,deprecated=3_0,message="" ))) __attribute__((availability(tvos,unavailable)));

/* @end */

#pragma clang assume_nonnull end





#pragma clang assume_nonnull begin

typedef NSInteger UITableViewStyle; enum {
    UITableViewStylePlain,
    UITableViewStyleGrouped
};

typedef NSInteger UITableViewScrollPosition; enum {
    UITableViewScrollPositionNone,
    UITableViewScrollPositionTop,
    UITableViewScrollPositionMiddle,
    UITableViewScrollPositionBottom
};

typedef NSInteger UITableViewRowAnimation; enum {
    UITableViewRowAnimationFade,
    UITableViewRowAnimationRight,
    UITableViewRowAnimationLeft,
    UITableViewRowAnimationTop,
    UITableViewRowAnimationBottom,
    UITableViewRowAnimationNone,
    UITableViewRowAnimationMiddle,
    UITableViewRowAnimationAutomatic = 100
};



extern "C" __attribute__((visibility ("default"))) NSString *const UITableViewIndexSearch __attribute__((availability(ios,introduced=3_0))) __attribute__((availability(tvos,unavailable)));



extern "C" __attribute__((visibility ("default"))) const CGFloat UITableViewAutomaticDimension __attribute__((availability(ios,introduced=5_0)));

// @class UITableView;
#ifndef _REWRITER_typedef_UITableView
#define _REWRITER_typedef_UITableView
typedef struct objc_object UITableView;
typedef struct {} _objc_exc_UITableView;
#endif

#ifndef _REWRITER_typedef_UINib
#define _REWRITER_typedef_UINib
typedef struct objc_object UINib;
typedef struct {} _objc_exc_UINib;
#endif

#ifndef _REWRITER_typedef_UITableViewHeaderFooterView
#define _REWRITER_typedef_UITableViewHeaderFooterView
typedef struct objc_object UITableViewHeaderFooterView;
typedef struct {} _objc_exc_UITableViewHeaderFooterView;
#endif

#ifndef _REWRITER_typedef_UIVisualEffect
#define _REWRITER_typedef_UIVisualEffect
typedef struct objc_object UIVisualEffect;
typedef struct {} _objc_exc_UIVisualEffect;
#endif

// @protocol UITableViewDataSource, UITableViewDataSourcePrefetching;
// @class UIDragItem;
#ifndef _REWRITER_typedef_UIDragItem
#define _REWRITER_typedef_UIDragItem
typedef struct objc_object UIDragItem;
typedef struct {} _objc_exc_UIDragItem;
#endif

#ifndef _REWRITER_typedef_UIDragPreviewParameters
#define _REWRITER_typedef_UIDragPreviewParameters
typedef struct objc_object UIDragPreviewParameters;
typedef struct {} _objc_exc_UIDragPreviewParameters;
#endif

#ifndef _REWRITER_typedef_UIDragPreviewTarget
#define _REWRITER_typedef_UIDragPreviewTarget
typedef struct objc_object UIDragPreviewTarget;
typedef struct {} _objc_exc_UIDragPreviewTarget;
#endif

#ifndef _REWRITER_typedef_UITableViewDropProposal
#define _REWRITER_typedef_UITableViewDropProposal
typedef struct objc_object UITableViewDropProposal;
typedef struct {} _objc_exc_UITableViewDropProposal;
#endif

#ifndef _REWRITER_typedef_UITableViewPlaceholder
#define _REWRITER_typedef_UITableViewPlaceholder
typedef struct objc_object UITableViewPlaceholder;
typedef struct {} _objc_exc_UITableViewPlaceholder;
#endif

#ifndef _REWRITER_typedef_UITableViewDropPlaceholder
#define _REWRITER_typedef_UITableViewDropPlaceholder
typedef struct objc_object UITableViewDropPlaceholder;
typedef struct {} _objc_exc_UITableViewDropPlaceholder;
#endif

// @protocol UISpringLoadedInteractionContext, UIDragSession, UIDropSession;
// @protocol UITableViewDragDelegate, UITableViewDropDelegate, UITableViewDropCoordinator, UITableViewDropItem, UITableViewDropPlaceholderContext;

typedef NSInteger UITableViewRowActionStyle; enum {
    UITableViewRowActionStyleDefault = 0,
    UITableViewRowActionStyleDestructive = UITableViewRowActionStyleDefault,
    UITableViewRowActionStyleNormal
} __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable)));


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_UITableViewRowAction
#define _REWRITER_typedef_UITableViewRowAction
typedef struct objc_object UITableViewRowAction;
typedef struct {} _objc_exc_UITableViewRowAction;
#endif

struct UITableViewRowAction_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// + (instancetype)rowActionWithStyle:(UITableViewRowActionStyle)style title:(nullable NSString *)title handler:(void (^)(UITableViewRowAction *action, NSIndexPath *indexPath))handler;

// @property (nonatomic, readonly) UITableViewRowActionStyle style;
// @property (nonatomic, copy, nullable) NSString *title;
// @property (nonatomic, copy, nullable) UIColor *backgroundColor;
// @property (nonatomic, copy, nullable) UIVisualEffect* backgroundEffect;

/* @end */


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0))) 
#ifndef _REWRITER_typedef_UITableViewFocusUpdateContext
#define _REWRITER_typedef_UITableViewFocusUpdateContext
typedef struct objc_object UITableViewFocusUpdateContext;
typedef struct {} _objc_exc_UITableViewFocusUpdateContext;
#endif

struct UITableViewFocusUpdateContext_IMPL {
	struct UIFocusUpdateContext_IMPL UIFocusUpdateContext_IVARS;
};


// @property (nonatomic, strong, readonly, nullable) NSIndexPath *previouslyFocusedIndexPath;
// @property (nonatomic, strong, readonly, nullable) NSIndexPath *nextFocusedIndexPath;

/* @end */





// @protocol UITableViewDelegate<NSObject, UIScrollViewDelegate>

/* @optional */



// - (void)tableView:(UITableView *)tableView willDisplayCell:(UITableViewCell *)cell forRowAtIndexPath:(NSIndexPath *)indexPath;
// - (void)tableView:(UITableView *)tableView willDisplayHeaderView:(UIView *)view forSection:(NSInteger)section __attribute__((availability(ios,introduced=6_0)));
// - (void)tableView:(UITableView *)tableView willDisplayFooterView:(UIView *)view forSection:(NSInteger)section __attribute__((availability(ios,introduced=6_0)));
// - (void)tableView:(UITableView *)tableView didEndDisplayingCell:(UITableViewCell *)cell forRowAtIndexPath:(NSIndexPath*)indexPath __attribute__((availability(ios,introduced=6_0)));
// - (void)tableView:(UITableView *)tableView didEndDisplayingHeaderView:(UIView *)view forSection:(NSInteger)section __attribute__((availability(ios,introduced=6_0)));
// - (void)tableView:(UITableView *)tableView didEndDisplayingFooterView:(UIView *)view forSection:(NSInteger)section __attribute__((availability(ios,introduced=6_0)));



// - (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath;
// - (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section;
// - (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section;



// - (CGFloat)tableView:(UITableView *)tableView estimatedHeightForRowAtIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=7_0)));
// - (CGFloat)tableView:(UITableView *)tableView estimatedHeightForHeaderInSection:(NSInteger)section __attribute__((availability(ios,introduced=7_0)));
// - (CGFloat)tableView:(UITableView *)tableView estimatedHeightForFooterInSection:(NSInteger)section __attribute__((availability(ios,introduced=7_0)));



// - (nullable UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section;
// - (nullable UIView *)tableView:(UITableView *)tableView viewForFooterInSection:(NSInteger)section;



// - (UITableViewCellAccessoryType)tableView:(UITableView *)tableView accessoryTypeForRowWithIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=2_0,deprecated=3_0,message="" ))) __attribute__((availability(tvos,unavailable)));
// - (void)tableView:(UITableView *)tableView accessoryButtonTappedForRowWithIndexPath:(NSIndexPath *)indexPath;





// - (BOOL)tableView:(UITableView *)tableView shouldHighlightRowAtIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=6_0)));
// - (void)tableView:(UITableView *)tableView didHighlightRowAtIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=6_0)));
// - (void)tableView:(UITableView *)tableView didUnhighlightRowAtIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=6_0)));


// - (nullable NSIndexPath *)tableView:(UITableView *)tableView willSelectRowAtIndexPath:(NSIndexPath *)indexPath;
// - (nullable NSIndexPath *)tableView:(UITableView *)tableView willDeselectRowAtIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=3_0)));

// - (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath;
// - (void)tableView:(UITableView *)tableView didDeselectRowAtIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=3_0)));




// - (UITableViewCellEditingStyle)tableView:(UITableView *)tableView editingStyleForRowAtIndexPath:(NSIndexPath *)indexPath;
// - (nullable NSString *)tableView:(UITableView *)tableView titleForDeleteConfirmationButtonForRowAtIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=3_0))) __attribute__((availability(tvos,unavailable)));



// - (nullable NSArray<UITableViewRowAction *> *)tableView:(UITableView *)tableView editActionsForRowAtIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable)));




// - (nullable UISwipeActionsConfiguration *)tableView:(UITableView *)tableView leadingSwipeActionsConfigurationForRowAtIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable)));
// - (nullable UISwipeActionsConfiguration *)tableView:(UITableView *)tableView trailingSwipeActionsConfigurationForRowAtIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable)));


// - (BOOL)tableView:(UITableView *)tableView shouldIndentWhileEditingRowAtIndexPath:(NSIndexPath *)indexPath;


// - (void)tableView:(UITableView *)tableView willBeginEditingRowAtIndexPath:(NSIndexPath *)indexPath __attribute__((availability(tvos,unavailable)));
// - (void)tableView:(UITableView *)tableView didEndEditingRowAtIndexPath:(nullable NSIndexPath *)indexPath __attribute__((availability(tvos,unavailable)));




// - (NSIndexPath *)tableView:(UITableView *)tableView targetIndexPathForMoveFromRowAtIndexPath:(NSIndexPath *)sourceIndexPath toProposedIndexPath:(NSIndexPath *)proposedDestinationIndexPath;



// - (NSInteger)tableView:(UITableView *)tableView indentationLevelForRowAtIndexPath:(NSIndexPath *)indexPath;



// - (BOOL)tableView:(UITableView *)tableView shouldShowMenuForRowAtIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=5_0)));
// - (BOOL)tableView:(UITableView *)tableView canPerformAction:(SEL)action forRowAtIndexPath:(NSIndexPath *)indexPath withSender:(nullable id)sender __attribute__((availability(ios,introduced=5_0)));
// - (void)tableView:(UITableView *)tableView performAction:(SEL)action forRowAtIndexPath:(NSIndexPath *)indexPath withSender:(nullable id)sender __attribute__((availability(ios,introduced=5_0)));



// - (BOOL)tableView:(UITableView *)tableView canFocusRowAtIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=9_0)));
// - (BOOL)tableView:(UITableView *)tableView shouldUpdateFocusInContext:(UITableViewFocusUpdateContext *)context __attribute__((availability(ios,introduced=9_0)));
// - (void)tableView:(UITableView *)tableView didUpdateFocusInContext:(UITableViewFocusUpdateContext *)context withAnimationCoordinator:(UIFocusAnimationCoordinator *)coordinator __attribute__((availability(ios,introduced=9_0)));
// - (nullable NSIndexPath *)indexPathForPreferredFocusedViewInTableView:(UITableView *)tableView __attribute__((availability(ios,introduced=9_0)));






// - (BOOL)tableView:(UITableView *)tableView shouldSpringLoadRowAtIndexPath:(NSIndexPath *)indexPath withContext:(id<UISpringLoadedInteractionContext>)context __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));

/* @end */


extern "C" __attribute__((visibility ("default"))) NSNotificationName const UITableViewSelectionDidChangeNotification;

typedef NSInteger UITableViewSeparatorInsetReference; enum {

    UITableViewSeparatorInsetFromCellEdges,


    UITableViewSeparatorInsetFromAutomaticInsets
} __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));




__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) 
#ifndef _REWRITER_typedef_UITableView
#define _REWRITER_typedef_UITableView
typedef struct objc_object UITableView;
typedef struct {} _objc_exc_UITableView;
#endif

struct UITableView_IMPL {
	struct UIScrollView_IMPL UIScrollView_IVARS;
};


// - (instancetype)initWithFrame:(CGRect)frame style:(UITableViewStyle)style __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

// @property (nonatomic, readonly) UITableViewStyle style;

// @property (nonatomic, weak, nullable) id <UITableViewDataSource> dataSource;
// @property (nonatomic, weak, nullable) id <UITableViewDelegate> delegate;
// @property (nonatomic, weak, nullable) id <UITableViewDataSourcePrefetching> prefetchDataSource __attribute__((availability(ios,introduced=10_0)));
// @property (nonatomic, weak, nullable) id <UITableViewDragDelegate> dragDelegate __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
// @property (nonatomic, weak, nullable) id <UITableViewDropDelegate> dropDelegate __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));

// @property (nonatomic) CGFloat rowHeight;
// @property (nonatomic) CGFloat sectionHeaderHeight;
// @property (nonatomic) CGFloat sectionFooterHeight;
// @property (nonatomic) CGFloat estimatedRowHeight __attribute__((availability(ios,introduced=7_0)));
// @property (nonatomic) CGFloat estimatedSectionHeaderHeight __attribute__((availability(ios,introduced=7_0)));
// @property (nonatomic) CGFloat estimatedSectionFooterHeight __attribute__((availability(ios,introduced=7_0)));

// @property (nonatomic) UIEdgeInsets separatorInset __attribute__((availability(ios,introduced=7_0))) __attribute__((annotate("ui_appearance_selector")));
// @property (nonatomic) UITableViewSeparatorInsetReference separatorInsetReference __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));

// @property (nonatomic, strong, nullable) UIView *backgroundView __attribute__((availability(ios,introduced=3_2)));



// @property (nonatomic, readonly) NSInteger numberOfSections;
// - (NSInteger)numberOfRowsInSection:(NSInteger)section;

// - (CGRect)rectForSection:(NSInteger)section;
// - (CGRect)rectForHeaderInSection:(NSInteger)section;
// - (CGRect)rectForFooterInSection:(NSInteger)section;
// - (CGRect)rectForRowAtIndexPath:(NSIndexPath *)indexPath;

// - (nullable NSIndexPath *)indexPathForRowAtPoint:(CGPoint)point;
// - (nullable NSIndexPath *)indexPathForCell:(UITableViewCell *)cell;
// - (nullable NSArray<NSIndexPath *> *)indexPathsForRowsInRect:(CGRect)rect;

// - (nullable __kindof UITableViewCell *)cellForRowAtIndexPath:(NSIndexPath *)indexPath;
// @property (nonatomic, readonly) NSArray<__kindof UITableViewCell *> *visibleCells;
// @property (nonatomic, readonly, nullable) NSArray<NSIndexPath *> *indexPathsForVisibleRows;

// - (nullable UITableViewHeaderFooterView *)headerViewForSection:(NSInteger)section __attribute__((availability(ios,introduced=6_0)));
// - (nullable UITableViewHeaderFooterView *)footerViewForSection:(NSInteger)section __attribute__((availability(ios,introduced=6_0)));

// - (void)scrollToRowAtIndexPath:(NSIndexPath *)indexPath atScrollPosition:(UITableViewScrollPosition)scrollPosition animated:(BOOL)animated;
// - (void)scrollToNearestSelectedRowAtScrollPosition:(UITableViewScrollPosition)scrollPosition animated:(BOOL)animated;




// - (void)performBatchUpdates:(void (__attribute__((noescape)) ^ _Nullable)(void))updates completion:(void (^ _Nullable)(BOOL finished))completion __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));


// - (void)beginUpdates;
// - (void)endUpdates;

// - (void)insertSections:(NSIndexSet *)sections withRowAnimation:(UITableViewRowAnimation)animation;
// - (void)deleteSections:(NSIndexSet *)sections withRowAnimation:(UITableViewRowAnimation)animation;
// - (void)reloadSections:(NSIndexSet *)sections withRowAnimation:(UITableViewRowAnimation)animation __attribute__((availability(ios,introduced=3_0)));
// - (void)moveSection:(NSInteger)section toSection:(NSInteger)newSection __attribute__((availability(ios,introduced=5_0)));

// - (void)insertRowsAtIndexPaths:(NSArray<NSIndexPath *> *)indexPaths withRowAnimation:(UITableViewRowAnimation)animation;
// - (void)deleteRowsAtIndexPaths:(NSArray<NSIndexPath *> *)indexPaths withRowAnimation:(UITableViewRowAnimation)animation;
// - (void)reloadRowsAtIndexPaths:(NSArray<NSIndexPath *> *)indexPaths withRowAnimation:(UITableViewRowAnimation)animation __attribute__((availability(ios,introduced=3_0)));
// - (void)moveRowAtIndexPath:(NSIndexPath *)indexPath toIndexPath:(NSIndexPath *)newIndexPath __attribute__((availability(ios,introduced=5_0)));


// @property (nonatomic, readonly) BOOL hasUncommittedUpdates __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));


// - (void)reloadData;


// - (void)reloadSectionIndexTitles __attribute__((availability(ios,introduced=3_0)));



// @property (nonatomic, getter=isEditing) BOOL editing;
// - (void)setEditing:(BOOL)editing animated:(BOOL)animated;

// @property (nonatomic) BOOL allowsSelection __attribute__((availability(ios,introduced=3_0)));
// @property (nonatomic) BOOL allowsSelectionDuringEditing;
// @property (nonatomic) BOOL allowsMultipleSelection __attribute__((availability(ios,introduced=5_0)));
// @property (nonatomic) BOOL allowsMultipleSelectionDuringEditing __attribute__((availability(ios,introduced=5_0)));



// @property (nonatomic, readonly, nullable) NSIndexPath *indexPathForSelectedRow;
// @property (nonatomic, readonly, nullable) NSArray<NSIndexPath *> *indexPathsForSelectedRows __attribute__((availability(ios,introduced=5_0)));


// - (void)selectRowAtIndexPath:(nullable NSIndexPath *)indexPath animated:(BOOL)animated scrollPosition:(UITableViewScrollPosition)scrollPosition;
// - (void)deselectRowAtIndexPath:(NSIndexPath *)indexPath animated:(BOOL)animated;



// @property (nonatomic) NSInteger sectionIndexMinimumDisplayRowCount;
// @property (nonatomic, strong, nullable) UIColor *sectionIndexColor __attribute__((availability(ios,introduced=6_0))) __attribute__((annotate("ui_appearance_selector")));
// @property (nonatomic, strong, nullable) UIColor *sectionIndexBackgroundColor __attribute__((availability(ios,introduced=7_0))) __attribute__((annotate("ui_appearance_selector")));
// @property (nonatomic, strong, nullable) UIColor *sectionIndexTrackingBackgroundColor __attribute__((availability(ios,introduced=6_0))) __attribute__((annotate("ui_appearance_selector")));

// @property (nonatomic) UITableViewCellSeparatorStyle separatorStyle __attribute__((availability(tvos,unavailable)));
// @property (nonatomic, strong, nullable) UIColor *separatorColor __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos,unavailable)));
// @property (nonatomic, copy, nullable) UIVisualEffect *separatorEffect __attribute__((availability(ios,introduced=8_0))) __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos,unavailable)));

// @property (nonatomic) BOOL cellLayoutMarginsFollowReadableWidth __attribute__((availability(ios,introduced=9_0)));
// @property (nonatomic) BOOL insetsContentViewsToSafeArea __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));

// @property (nonatomic, strong, nullable) UIView *tableHeaderView;
// @property (nonatomic, strong, nullable) UIView *tableFooterView;

// - (nullable __kindof UITableViewCell *)dequeueReusableCellWithIdentifier:(NSString *)identifier;
// - (__kindof UITableViewCell *)dequeueReusableCellWithIdentifier:(NSString *)identifier forIndexPath:(NSIndexPath *)indexPath __attribute__((availability(ios,introduced=6_0)));
// - (nullable __kindof UITableViewHeaderFooterView *)dequeueReusableHeaderFooterViewWithIdentifier:(NSString *)identifier __attribute__((availability(ios,introduced=6_0)));




// - (void)registerNib:(nullable UINib *)nib forCellReuseIdentifier:(NSString *)identifier __attribute__((availability(ios,introduced=5_0)));
// - (void)registerClass:(nullable Class)cellClass forCellReuseIdentifier:(NSString *)identifier __attribute__((availability(ios,introduced=6_0)));

// - (void)registerNib:(nullable UINib *)nib forHeaderFooterViewReuseIdentifier:(NSString *)identifier __attribute__((availability(ios,introduced=6_0)));
// - (void)registerClass:(nullable Class)aClass forHeaderFooterViewReuseIdentifier:(NSString *)identifier __attribute__((availability(ios,introduced=6_0)));



// @property (nonatomic) BOOL remembersLastFocusedIndexPath __attribute__((availability(ios,introduced=9_0)));






// @property (nonatomic) BOOL dragInteractionEnabled __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));


// @property (nonatomic, readonly) BOOL hasActiveDrag __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));


// @property (nonatomic, readonly) BOOL hasActiveDrop __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));

/* @end */



// @interface UITableView (UIDragAndDrop) <UISpringLoadedInteractionSupporting>
/* @end */






// @protocol UITableViewDataSource<NSObject>

/* @required */

// - (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section;




// - (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath;

/* @optional */

// - (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView;

// - (nullable NSString *)tableView:(UITableView *)tableView titleForHeaderInSection:(NSInteger)section;
// - (nullable NSString *)tableView:(UITableView *)tableView titleForFooterInSection:(NSInteger)section;




// - (BOOL)tableView:(UITableView *)tableView canEditRowAtIndexPath:(NSIndexPath *)indexPath;




// - (BOOL)tableView:(UITableView *)tableView canMoveRowAtIndexPath:(NSIndexPath *)indexPath;



// - (nullable NSArray<NSString *> *)sectionIndexTitlesForTableView:(UITableView *)tableView;
// - (NSInteger)tableView:(UITableView *)tableView sectionForSectionIndexTitle:(NSString *)title atIndex:(NSInteger)index;





// - (void)tableView:(UITableView *)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath *)indexPath;



// - (void)tableView:(UITableView *)tableView moveRowAtIndexPath:(NSIndexPath *)sourceIndexPath toIndexPath:(NSIndexPath *)destinationIndexPath;

/* @end */






// @protocol UITableViewDataSourcePrefetching <NSObject>

/* @required */


// - (void)tableView:(UITableView *)tableView prefetchRowsAtIndexPaths:(NSArray<NSIndexPath *> *)indexPaths;

/* @optional */


// - (void)tableView:(UITableView *)tableView cancelPrefetchingForRowsAtIndexPaths:(NSArray<NSIndexPath *> *)indexPaths;

/* @end */






__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))
// @protocol UITableViewDragDelegate <NSObject>

/* @required */




// - (NSArray<UIDragItem *> *)tableView:(UITableView *)tableView itemsForBeginningDragSession:(id<UIDragSession>)session atIndexPath:(NSIndexPath *)indexPath;

/* @optional */





// - (NSArray<UIDragItem *> *)tableView:(UITableView *)tableView itemsForAddingToDragSession:(id<UIDragSession>)session atIndexPath:(NSIndexPath *)indexPath point:(CGPoint)point;



// - (nullable UIDragPreviewParameters *)tableView:(UITableView *)tableView dragPreviewParametersForRowAtIndexPath:(NSIndexPath *)indexPath;



// - (void)tableView:(UITableView *)tableView dragSessionWillBegin:(id<UIDragSession>)session;


// - (void)tableView:(UITableView *)tableView dragSessionDidEnd:(id<UIDragSession>)session;



// - (BOOL)tableView:(UITableView *)tableView dragSessionAllowsMoveOperation:(id<UIDragSession>)session;



// - (BOOL)tableView:(UITableView *)tableView dragSessionIsRestrictedToDraggingApplication:(id<UIDragSession>)session;

/* @end */



__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))
// @protocol UITableViewDropDelegate <NSObject>

/* @required */






// - (void)tableView:(UITableView *)tableView performDropWithCoordinator:(id<UITableViewDropCoordinator>)coordinator;

/* @optional */



// - (BOOL)tableView:(UITableView *)tableView canHandleDropSession:(id<UIDropSession>)session;


// - (void)tableView:(UITableView *)tableView dropSessionDidEnter:(id<UIDropSession>)session;







// - (UITableViewDropProposal *)tableView:(UITableView *)tableView dropSessionDidUpdate:(id<UIDropSession>)session withDestinationIndexPath:(nullable NSIndexPath *)destinationIndexPath;


// - (void)tableView:(UITableView *)tableView dropSessionDidExit:(id<UIDropSession>)session;


// - (void)tableView:(UITableView *)tableView dropSessionDidEnd:(id<UIDropSession>)session;



// - (nullable UIDragPreviewParameters *)tableView:(UITableView *)tableView dropPreviewParametersForRowAtIndexPath:(NSIndexPath *)indexPath;

/* @end */



typedef NSInteger UITableViewDropIntent; enum {


    UITableViewDropIntentUnspecified,



    UITableViewDropIntentInsertAtDestinationIndexPath,



    UITableViewDropIntentInsertIntoDestinationIndexPath,





    UITableViewDropIntentAutomatic
} __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_UITableViewDropProposal
#define _REWRITER_typedef_UITableViewDropProposal
typedef struct objc_object UITableViewDropProposal;
typedef struct {} _objc_exc_UITableViewDropProposal;
#endif

struct UITableViewDropProposal_IMPL {
	struct UIDropProposal_IMPL UIDropProposal_IVARS;
};


// - (instancetype)initWithDropOperation:(UIDropOperation)operation intent:(UITableViewDropIntent)intent;


// @property (nonatomic, readonly) UITableViewDropIntent intent;

/* @end */



__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))
// @protocol UITableViewDropCoordinator <NSObject>


// @property (nonatomic, readonly) NSArray<id<UITableViewDropItem>> *items;






// @property (nonatomic, readonly, nullable) NSIndexPath *destinationIndexPath;


// @property (nonatomic, readonly) UITableViewDropProposal *proposal;


// @property (nonatomic, readonly) id<UIDropSession> session;




// - (id<UITableViewDropPlaceholderContext>)dropItem:(UIDragItem *)dragItem toPlaceholder:(UITableViewDropPlaceholder *)placeholder;




// - (id<UIDragAnimating>)dropItem:(UIDragItem *)dragItem toRowAtIndexPath:(NSIndexPath *)indexPath;




// - (id<UIDragAnimating>)dropItem:(UIDragItem *)dragItem intoRowAtIndexPath:(NSIndexPath *)indexPath rect:(CGRect)rect;



// - (id<UIDragAnimating>)dropItem:(UIDragItem *)dragItem toTarget:(UIDragPreviewTarget *)target;

/* @end */



extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_UITableViewPlaceholder
#define _REWRITER_typedef_UITableViewPlaceholder
typedef struct objc_object UITableViewPlaceholder;
typedef struct {} _objc_exc_UITableViewPlaceholder;
#endif

struct UITableViewPlaceholder_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};




// - (instancetype)initWithInsertionIndexPath:(NSIndexPath *)insertionIndexPath reuseIdentifier:(NSString *)reuseIdentifier rowHeight:(CGFloat)rowHeight __attribute__((objc_designated_initializer));
// - (instancetype)init __attribute__((unavailable));
// + (instancetype)new __attribute__((unavailable));


// @property (nonatomic, nullable, copy) void(^cellUpdateHandler)(__kindof UITableViewCell *);

/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_UITableViewDropPlaceholder
#define _REWRITER_typedef_UITableViewDropPlaceholder
typedef struct objc_object UITableViewDropPlaceholder;
typedef struct {} _objc_exc_UITableViewDropPlaceholder;
#endif

struct UITableViewDropPlaceholder_IMPL {
	struct UITableViewPlaceholder_IMPL UITableViewPlaceholder_IVARS;
};




// @property (nonatomic, nullable, copy) UIDragPreviewParameters * _Nullable (^previewParametersProvider)(__kindof UITableViewCell *);

/* @end */



__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))
// @protocol UITableViewDropItem <NSObject>


// @property (nonatomic, readonly) UIDragItem *dragItem;






// @property (nonatomic, readonly, nullable) NSIndexPath *sourceIndexPath;



// @property (nonatomic, readonly) CGSize previewSize;

/* @end */



__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))
// @protocol UITableViewDropPlaceholderContext <UIDragAnimating>


// @property (nonatomic, readonly) UIDragItem *dragItem;





// - (BOOL)commitInsertionWithDataSourceUpdates:(void(__attribute__((noescape)) ^)(NSIndexPath *insertionIndexPath))dataSourceUpdates;




// - (BOOL)deletePlaceholder;

/* @end */

#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin

// @class UISearchBar;
#ifndef _REWRITER_typedef_UISearchBar
#define _REWRITER_typedef_UISearchBar
typedef struct objc_object UISearchBar;
typedef struct {} _objc_exc_UISearchBar;
#endif

#ifndef _REWRITER_typedef_UITableView
#define _REWRITER_typedef_UITableView
typedef struct objc_object UITableView;
typedef struct {} _objc_exc_UITableView;
#endif

#ifndef _REWRITER_typedef_UIViewController
#define _REWRITER_typedef_UIViewController
typedef struct objc_object UIViewController;
typedef struct {} _objc_exc_UIViewController;
#endif

#ifndef _REWRITER_typedef_UIPopoverController
#define _REWRITER_typedef_UIPopoverController
typedef struct objc_object UIPopoverController;
typedef struct {} _objc_exc_UIPopoverController;
#endif

// @protocol UITableViewDataSource, UITableViewDelegate, UISearchDisplayDelegate;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_0,deprecated=8_0,message="" "UISearchDisplayController has been replaced with UISearchController"))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_UISearchDisplayController
#define _REWRITER_typedef_UISearchDisplayController
typedef struct objc_object UISearchDisplayController;
typedef struct {} _objc_exc_UISearchDisplayController;
#endif

struct UISearchDisplayController_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)initWithSearchBar:(UISearchBar *)searchBar contentsController:(UIViewController *)viewController;

// @property(nullable,nonatomic,assign) id<UISearchDisplayDelegate> delegate;

// @property(nonatomic,getter=isActive) BOOL active;
// - (void)setActive:(BOOL)visible animated:(BOOL)animated;

// @property(nonatomic,readonly) UISearchBar *searchBar;
// @property(nonatomic,readonly) UIViewController *searchContentsController;
// @property(nonatomic,readonly) UITableView *searchResultsTableView;
// @property(nullable,nonatomic,weak) id<UITableViewDataSource> searchResultsDataSource;
// @property(nullable,nonatomic,weak) id<UITableViewDelegate> searchResultsDelegate;
// @property(nullable,nonatomic,copy) NSString *searchResultsTitle __attribute__((availability(ios,introduced=5_0)));


// @property (nonatomic, assign) BOOL displaysSearchBarInNavigationBar __attribute__((availability(ios,introduced=7_0)));
// @property (nullable, nonatomic, readonly) UINavigationItem *navigationItem __attribute__((availability(ios,introduced=7_0)));

/* @end */


__attribute__((availability(tvos,unavailable)))
// @protocol UISearchDisplayDelegate <NSObject>

/* @optional */


// - (void) searchDisplayControllerWillBeginSearch:(UISearchDisplayController *)controller __attribute__((availability(ios,introduced=3_0,deprecated=8_0,message="" )));
// - (void) searchDisplayControllerDidBeginSearch:(UISearchDisplayController *)controller __attribute__((availability(ios,introduced=3_0,deprecated=8_0,message="" )));
// - (void) searchDisplayControllerWillEndSearch:(UISearchDisplayController *)controller __attribute__((availability(ios,introduced=3_0,deprecated=8_0,message="" )));
// - (void) searchDisplayControllerDidEndSearch:(UISearchDisplayController *)controller __attribute__((availability(ios,introduced=3_0,deprecated=8_0,message="" )));


// - (void)searchDisplayController:(UISearchDisplayController *)controller didLoadSearchResultsTableView:(UITableView *)tableView __attribute__((availability(ios,introduced=3_0,deprecated=8_0,message="" )));
// - (void)searchDisplayController:(UISearchDisplayController *)controller willUnloadSearchResultsTableView:(UITableView *)tableView __attribute__((availability(ios,introduced=3_0,deprecated=8_0,message="" )));


// - (void)searchDisplayController:(UISearchDisplayController *)controller willShowSearchResultsTableView:(UITableView *)tableView __attribute__((availability(ios,introduced=3_0,deprecated=8_0,message="" )));
// - (void)searchDisplayController:(UISearchDisplayController *)controller didShowSearchResultsTableView:(UITableView *)tableView __attribute__((availability(ios,introduced=3_0,deprecated=8_0,message="" )));
// - (void)searchDisplayController:(UISearchDisplayController *)controller willHideSearchResultsTableView:(UITableView *)tableView __attribute__((availability(ios,introduced=3_0,deprecated=8_0,message="" )));
// - (void)searchDisplayController:(UISearchDisplayController *)controller didHideSearchResultsTableView:(UITableView *)tableView __attribute__((availability(ios,introduced=3_0,deprecated=8_0,message="" )));


// - (BOOL)searchDisplayController:(UISearchDisplayController *)controller shouldReloadTableForSearchString:(nullable NSString *)searchString __attribute__((availability(ios,introduced=3_0,deprecated=8_0,message="" )));
// - (BOOL)searchDisplayController:(UISearchDisplayController *)controller shouldReloadTableForSearchScope:(NSInteger)searchOption __attribute__((availability(ios,introduced=3_0,deprecated=8_0,message="" )));

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

typedef NSInteger UISegmentedControlStyle; enum {
    UISegmentedControlStylePlain,
    UISegmentedControlStyleBordered,
    UISegmentedControlStyleBar,
    UISegmentedControlStyleBezeled,
} __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" "The segmentedControlStyle property no longer has any effect"))) __attribute__((availability(tvos,unavailable)));

enum {
    UISegmentedControlNoSegment = -1
};

typedef NSInteger UISegmentedControlSegment; enum {
    UISegmentedControlSegmentAny = 0,
    UISegmentedControlSegmentLeft = 1,
    UISegmentedControlSegmentCenter = 2,
    UISegmentedControlSegmentRight = 3,
    UISegmentedControlSegmentAlone = 4,
};

// @class UIImage;
#ifndef _REWRITER_typedef_UIImage
#define _REWRITER_typedef_UIImage
typedef struct objc_object UIImage;
typedef struct {} _objc_exc_UIImage;
#endif

#ifndef _REWRITER_typedef_UIColor
#define _REWRITER_typedef_UIColor
typedef struct objc_object UIColor;
typedef struct {} _objc_exc_UIColor;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) 
#ifndef _REWRITER_typedef_UISegmentedControl
#define _REWRITER_typedef_UISegmentedControl
typedef struct objc_object UISegmentedControl;
typedef struct {} _objc_exc_UISegmentedControl;
#endif

struct UISegmentedControl_IMPL {
	struct UIControl_IMPL UIControl_IVARS;
};


// - (instancetype)initWithItems:(nullable NSArray *)items;

// @property(nonatomic) UISegmentedControlStyle segmentedControlStyle __attribute__((availability(ios,introduced=2_0,deprecated=7_0,message="" "The segmentedControlStyle property no longer has any effect"))) __attribute__((availability(tvos,unavailable)));
// @property(nonatomic,getter=isMomentary) BOOL momentary;
// @property(nonatomic,readonly) NSUInteger numberOfSegments;


// @property(nonatomic) BOOL apportionsSegmentWidthsByContent __attribute__((availability(ios,introduced=5_0)));

// - (void)insertSegmentWithTitle:(nullable NSString *)title atIndex:(NSUInteger)segment animated:(BOOL)animated;
// - (void)insertSegmentWithImage:(nullable UIImage *)image atIndex:(NSUInteger)segment animated:(BOOL)animated;
// - (void)removeSegmentAtIndex:(NSUInteger)segment animated:(BOOL)animated;
// - (void)removeAllSegments;

// - (void)setTitle:(nullable NSString *)title forSegmentAtIndex:(NSUInteger)segment;
// - (nullable NSString *)titleForSegmentAtIndex:(NSUInteger)segment;

// - (void)setImage:(nullable UIImage *)image forSegmentAtIndex:(NSUInteger)segment;
// - (nullable UIImage *)imageForSegmentAtIndex:(NSUInteger)segment;

// - (void)setWidth:(CGFloat)width forSegmentAtIndex:(NSUInteger)segment;
// - (CGFloat)widthForSegmentAtIndex:(NSUInteger)segment;

// - (void)setContentOffset:(CGSize)offset forSegmentAtIndex:(NSUInteger)segment;
// - (CGSize)contentOffsetForSegmentAtIndex:(NSUInteger)segment;

// - (void)setEnabled:(BOOL)enabled forSegmentAtIndex:(NSUInteger)segment;
// - (BOOL)isEnabledForSegmentAtIndex:(NSUInteger)segment;



// @property(nonatomic) NSInteger selectedSegmentIndex;


// @property(null_resettable,nonatomic,strong) UIColor *tintColor;
// - (void)setBackgroundImage:(nullable UIImage *)backgroundImage forState:(UIControlState)state barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));
// - (nullable UIImage *)backgroundImageForState:(UIControlState)state barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));



// - (void)setDividerImage:(nullable UIImage *)dividerImage forLeftSegmentState:(UIControlState)leftState rightSegmentState:(UIControlState)rightState barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));
// - (nullable UIImage *)dividerImageForLeftSegmentState:(UIControlState)leftState rightSegmentState:(UIControlState)rightState barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));



// - (void)setTitleTextAttributes:(nullable NSDictionary *)attributes forState:(UIControlState)state __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));
// - (nullable NSDictionary *)titleTextAttributesForState:(UIControlState)state __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));



// - (void)setContentPositionAdjustment:(UIOffset)adjustment forSegmentType:(UISegmentedControlSegment)leftCenterRightOrAlone barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));
// - (UIOffset)contentPositionAdjustmentForSegmentType:(UISegmentedControlSegment)leftCenterRightOrAlone barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));

/* @end */



// @interface UISegmentedControl (SpringLoading) <UISpringLoadedInteractionSupporting>
/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIImageView;
#ifndef _REWRITER_typedef_UIImageView
#define _REWRITER_typedef_UIImageView
typedef struct objc_object UIImageView;
typedef struct {} _objc_exc_UIImageView;
#endif

#ifndef _REWRITER_typedef_UIImage
#define _REWRITER_typedef_UIImage
typedef struct objc_object UIImage;
typedef struct {} _objc_exc_UIImage;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UISlider
#define _REWRITER_typedef_UISlider
typedef struct objc_object UISlider;
typedef struct {} _objc_exc_UISlider;
#endif

struct UISlider_IMPL {
	struct UIControl_IMPL UIControl_IVARS;
};


// @property(nonatomic) float value;
// @property(nonatomic) float minimumValue;
// @property(nonatomic) float maximumValue;

// @property(nullable, nonatomic,strong) UIImage *minimumValueImage;
// @property(nullable, nonatomic,strong) UIImage *maximumValueImage;

// @property(nonatomic,getter=isContinuous) BOOL continuous;

// @property(nullable, nonatomic,strong) UIColor *minimumTrackTintColor __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));
// @property(nullable, nonatomic,strong) UIColor *maximumTrackTintColor __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));
// @property(nullable, nonatomic,strong) UIColor *thumbTintColor __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));

// - (void)setValue:(float)value animated:(BOOL)animated;




// - (void)setThumbImage:(nullable UIImage *)image forState:(UIControlState)state;
// - (void)setMinimumTrackImage:(nullable UIImage *)image forState:(UIControlState)state;
// - (void)setMaximumTrackImage:(nullable UIImage *)image forState:(UIControlState)state;

// - (nullable UIImage *)thumbImageForState:(UIControlState)state;
// - (nullable UIImage *)minimumTrackImageForState:(UIControlState)state;
// - (nullable UIImage *)maximumTrackImageForState:(UIControlState)state;

// @property(nullable,nonatomic,readonly) UIImage *currentThumbImage;
// @property(nullable,nonatomic,readonly) UIImage *currentMinimumTrackImage;
// @property(nullable,nonatomic,readonly) UIImage *currentMaximumTrackImage;


// - (CGRect)minimumValueImageRectForBounds:(CGRect)bounds;
// - (CGRect)maximumValueImageRectForBounds:(CGRect)bounds;
// - (CGRect)trackRectForBounds:(CGRect)bounds;
// - (CGRect)thumbRectForBounds:(CGRect)bounds trackRect:(CGRect)rect value:(float)value;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @protocol UISplitViewControllerDelegate;

typedef NSInteger UISplitViewControllerDisplayMode; enum {
    UISplitViewControllerDisplayModeAutomatic,
    UISplitViewControllerDisplayModePrimaryHidden,
    UISplitViewControllerDisplayModeAllVisible,
    UISplitViewControllerDisplayModePrimaryOverlay,
} __attribute__((availability(ios,introduced=8_0)));

typedef NSInteger UISplitViewControllerPrimaryEdge; enum {
    UISplitViewControllerPrimaryEdgeLeading,
    UISplitViewControllerPrimaryEdgeTrailing,
} __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));


extern "C" __attribute__((visibility ("default"))) CGFloat const UISplitViewControllerAutomaticDimension __attribute__((availability(ios,introduced=8_0)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_2))) 
#ifndef _REWRITER_typedef_UISplitViewController
#define _REWRITER_typedef_UISplitViewController
typedef struct objc_object UISplitViewController;
typedef struct {} _objc_exc_UISplitViewController;
#endif

struct UISplitViewController_IMPL {
	struct UIViewController_IMPL UIViewController_IVARS;
};


// @property (nonatomic, copy) NSArray<__kindof UIViewController *> *viewControllers;
// @property (nullable, nonatomic, weak) id <UISplitViewControllerDelegate> delegate;


// @property (nonatomic) BOOL presentsWithGesture __attribute__((availability(ios,introduced=5_1)));


// @property(nonatomic, readonly, getter=isCollapsed) BOOL collapsed __attribute__((availability(ios,introduced=8_0)));


// @property (nonatomic) UISplitViewControllerDisplayMode preferredDisplayMode __attribute__((availability(ios,introduced=8_0)));


// @property (nonatomic, readonly) UISplitViewControllerDisplayMode displayMode __attribute__((availability(ios,introduced=8_0)));



// @property (nonatomic, readonly) UIBarButtonItem *displayModeButtonItem __attribute__((availability(ios,introduced=8_0)));





// @property(nonatomic, assign) CGFloat preferredPrimaryColumnWidthFraction __attribute__((availability(ios,introduced=8_0)));


// @property(nonatomic, assign) CGFloat minimumPrimaryColumnWidth __attribute__((availability(ios,introduced=8_0)));


// @property(nonatomic, assign) CGFloat maximumPrimaryColumnWidth __attribute__((availability(ios,introduced=8_0)));


// @property(nonatomic,readonly) CGFloat primaryColumnWidth __attribute__((availability(ios,introduced=8_0)));


// @property(nonatomic) UISplitViewControllerPrimaryEdge primaryEdge __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));


// - (void)showViewController:(UIViewController *)vc sender:(nullable id)sender __attribute__((availability(ios,introduced=8_0)));


// - (void)showDetailViewController:(UIViewController *)vc sender:(nullable id)sender __attribute__((availability(ios,introduced=8_0)));

/* @end */


// @protocol UISplitViewControllerDelegate

/* @optional */


// - (void)splitViewController:(UISplitViewController *)svc willChangeToDisplayMode:(UISplitViewControllerDisplayMode)displayMode __attribute__((availability(ios,introduced=8_0)));


// - (UISplitViewControllerDisplayMode)targetDisplayModeForActionInSplitViewController:(UISplitViewController *)svc __attribute__((availability(ios,introduced=8_0)));



// - (BOOL)splitViewController:(UISplitViewController *)splitViewController showViewController:(UIViewController *)vc sender:(nullable id)sender __attribute__((availability(ios,introduced=8_0)));



// - (BOOL)splitViewController:(UISplitViewController *)splitViewController showDetailViewController:(UIViewController *)vc sender:(nullable id)sender __attribute__((availability(ios,introduced=8_0)));




// - (nullable UIViewController *)primaryViewControllerForCollapsingSplitViewController:(UISplitViewController *)splitViewController __attribute__((availability(ios,introduced=8_0)));




// - (nullable UIViewController *)primaryViewControllerForExpandingSplitViewController:(UISplitViewController *)splitViewController __attribute__((availability(ios,introduced=8_0)));






// - (BOOL)splitViewController:(UISplitViewController *)splitViewController collapseSecondaryViewController:(UIViewController *)secondaryViewController ontoPrimaryViewController:(UIViewController *)primaryViewController __attribute__((availability(ios,introduced=8_0)));






// - (nullable UIViewController *)splitViewController:(UISplitViewController *)splitViewController separateSecondaryViewControllerFromPrimaryViewController:(UIViewController *)primaryViewController __attribute__((availability(ios,introduced=8_0)));

// - (UIInterfaceOrientationMask)splitViewControllerSupportedInterfaceOrientations:(UISplitViewController *)splitViewController __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));
// - (UIInterfaceOrientation)splitViewControllerPreferredInterfaceOrientationForPresentation:(UISplitViewController *)splitViewController __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));



// - (void)splitViewController:(UISplitViewController *)svc willHideViewController:(UIViewController *)aViewController withBarButtonItem:(UIBarButtonItem *)barButtonItem forPopoverController:(UIPopoverController *)pc __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use splitViewController:willChangeToDisplayMode: and displayModeButtonItem instead"))) __attribute__((availability(tvos,unavailable)));


// - (void)splitViewController:(UISplitViewController *)svc willShowViewController:(UIViewController *)aViewController invalidatingBarButtonItem:(UIBarButtonItem *)barButtonItem __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use splitViewController:willChangeToDisplayMode: and displayModeButtonItem instead"))) __attribute__((availability(tvos,unavailable)));


// - (void)splitViewController:(UISplitViewController *)svc popoverController:(UIPopoverController *)pc willPresentViewController:(UIViewController *)aViewController __attribute__((availability(ios,introduced=2_0,deprecated=8_0,message="" "Use splitViewController:willChangeToDisplayMode: instead"))) __attribute__((availability(tvos,unavailable)));



// - (BOOL)splitViewController:(UISplitViewController *)svc shouldHideViewController:(UIViewController *)vc inOrientation:(UIInterfaceOrientation)orientation __attribute__((availability(ios,introduced=5_0,deprecated=8_0,message="" "Use preferredDisplayMode instead"))) __attribute__((availability(tvos,unavailable)));


/* @end */


// @interface UIViewController (UISplitViewController)

// @property (nullable, nonatomic, readonly, strong) UISplitViewController *splitViewController;



// - (void)collapseSecondaryViewController:(UIViewController *)secondaryViewController forSplitViewController:(UISplitViewController *)splitViewController __attribute__((availability(ios,introduced=8_0)));


// - (nullable UIViewController *)separateSecondaryViewControllerForSplitViewController:(UISplitViewController *)splitViewController __attribute__((availability(ios,introduced=8_0)));

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIButton;
#ifndef _REWRITER_typedef_UIButton
#define _REWRITER_typedef_UIButton
typedef struct objc_object UIButton;
typedef struct {} _objc_exc_UIButton;
#endif

#ifndef _REWRITER_typedef_UIImageView
#define _REWRITER_typedef_UIImageView
typedef struct objc_object UIImageView;
typedef struct {} _objc_exc_UIImageView;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIStepper
#define _REWRITER_typedef_UIStepper
typedef struct objc_object UIStepper;
typedef struct {} _objc_exc_UIStepper;
#endif

struct UIStepper_IMPL {
	struct UIControl_IMPL UIControl_IVARS;
};


// @property(nonatomic,getter=isContinuous) BOOL continuous;
// @property(nonatomic) BOOL autorepeat;
// @property(nonatomic) BOOL wraps;

// @property(nonatomic) double value;
// @property(nonatomic) double minimumValue;
// @property(nonatomic) double maximumValue;
// @property(nonatomic) double stepValue;


// @property(null_resettable,nonatomic,strong) UIColor *tintColor __attribute__((availability(ios,introduced=6_0)));


// - (void)setBackgroundImage:(nullable UIImage*)image forState:(UIControlState)state __attribute__((availability(ios,introduced=6_0))) __attribute__((annotate("ui_appearance_selector")));
// - (nullable UIImage*)backgroundImageForState:(UIControlState)state __attribute__((availability(ios,introduced=6_0))) __attribute__((annotate("ui_appearance_selector")));


// - (void)setDividerImage:(nullable UIImage*)image forLeftSegmentState:(UIControlState)leftState rightSegmentState:(UIControlState)rightState __attribute__((availability(ios,introduced=6_0))) __attribute__((annotate("ui_appearance_selector")));
// - (nullable UIImage*)dividerImageForLeftSegmentState:(UIControlState)state rightSegmentState:(UIControlState)state __attribute__((availability(ios,introduced=6_0))) __attribute__((annotate("ui_appearance_selector")));


// - (void)setIncrementImage:(nullable UIImage *)image forState:(UIControlState)state __attribute__((availability(ios,introduced=6_0))) __attribute__((annotate("ui_appearance_selector")));
// - (nullable UIImage *)incrementImageForState:(UIControlState)state __attribute__((availability(ios,introduced=6_0))) __attribute__((annotate("ui_appearance_selector")));


// - (void)setDecrementImage:(nullable UIImage *)image forState:(UIControlState)state __attribute__((availability(ios,introduced=6_0))) __attribute__((annotate("ui_appearance_selector")));
// - (nullable UIImage *)decrementImageForState:(UIControlState)state __attribute__((availability(ios,introduced=6_0))) __attribute__((annotate("ui_appearance_selector")));

/* @end */

#pragma clang assume_nonnull end
// @class UIViewController;
#ifndef _REWRITER_typedef_UIViewController
#define _REWRITER_typedef_UIViewController
typedef struct objc_object UIViewController;
typedef struct {} _objc_exc_UIViewController;
#endif


#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0))) 
#ifndef _REWRITER_typedef_UIStoryboard
#define _REWRITER_typedef_UIStoryboard
typedef struct objc_object UIStoryboard;
typedef struct {} _objc_exc_UIStoryboard;
#endif

struct UIStoryboard_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// + (UIStoryboard *)storyboardWithName:(NSString *)name bundle:(nullable NSBundle *)storyboardBundleOrNil;

// - (nullable __kindof UIViewController *)instantiateInitialViewController;
// - (__kindof UIViewController *)instantiateViewControllerWithIdentifier:(NSString *)identifier;

/* @end */

#pragma clang assume_nonnull end







#pragma clang assume_nonnull begin

// @class UIViewController;
#ifndef _REWRITER_typedef_UIViewController
#define _REWRITER_typedef_UIViewController
typedef struct objc_object UIViewController;
typedef struct {} _objc_exc_UIViewController;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0))) 
#ifndef _REWRITER_typedef_UIStoryboardSegue
#define _REWRITER_typedef_UIStoryboardSegue
typedef struct objc_object UIStoryboardSegue;
typedef struct {} _objc_exc_UIStoryboardSegue;
#endif

struct UIStoryboardSegue_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



// + (instancetype)segueWithIdentifier:(nullable NSString *)identifier source:(UIViewController *)source destination:(UIViewController *)destination performHandler:(void (^)(void))performHandler __attribute__((availability(ios,introduced=6_0)));

// - (instancetype)initWithIdentifier:(nullable NSString *)identifier source:(UIViewController *)source destination:(UIViewController *)destination __attribute__((objc_designated_initializer));
// - (instancetype)init __attribute__((unavailable));

// @property (nullable, nonatomic, copy, readonly) NSString *identifier;
// @property (nonatomic, readonly) __kindof UIViewController *sourceViewController;
// @property (nonatomic, readonly) __kindof UIViewController *destinationViewController;



// - (void)perform;

/* @end */




__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0))) 
#ifndef _REWRITER_typedef_UIStoryboardUnwindSegueSource
#define _REWRITER_typedef_UIStoryboardUnwindSegueSource
typedef struct objc_object UIStoryboardUnwindSegueSource;
typedef struct {} _objc_exc_UIStoryboardUnwindSegueSource;
#endif

struct UIStoryboardUnwindSegueSource_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)init __attribute__((unavailable));

// @property (readonly) UIViewController *sourceViewController;
// @property (readonly) SEL unwindAction;
// @property (readonly, nullable) id sender;

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

// @class UIPopoverController;
#ifndef _REWRITER_typedef_UIPopoverController
#define _REWRITER_typedef_UIPopoverController
typedef struct objc_object UIPopoverController;
typedef struct {} _objc_exc_UIPopoverController;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0,deprecated=9_0,message="" "Access destinationViewController.popoverPresentationController from your segue's performHandler or override of -perform"))) 
#ifndef _REWRITER_typedef_UIStoryboardPopoverSegue
#define _REWRITER_typedef_UIStoryboardPopoverSegue
typedef struct objc_object UIStoryboardPopoverSegue;
typedef struct {} _objc_exc_UIStoryboardPopoverSegue;
#endif

struct UIStoryboardPopoverSegue_IMPL {
	struct UIStoryboardSegue_IMPL UIStoryboardSegue_IVARS;
};


// @property (nonatomic, strong, readonly) UIPopoverController *popoverController;

/* @end */

#pragma clang assume_nonnull end



#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UISwitch
#define _REWRITER_typedef_UISwitch
typedef struct objc_object UISwitch;
typedef struct {} _objc_exc_UISwitch;
#endif

struct UISwitch_IMPL {
	struct UIControl_IMPL UIControl_IVARS;
};


// @property(nullable, nonatomic, strong) UIColor *onTintColor __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));
// @property(null_resettable, nonatomic, strong) UIColor *tintColor __attribute__((availability(ios,introduced=6_0)));
// @property(nullable, nonatomic, strong) UIColor *thumbTintColor __attribute__((availability(ios,introduced=6_0))) __attribute__((annotate("ui_appearance_selector")));

// @property(nullable, nonatomic, strong) UIImage *onImage __attribute__((availability(ios,introduced=6_0))) __attribute__((annotate("ui_appearance_selector")));
// @property(nullable, nonatomic, strong) UIImage *offImage __attribute__((availability(ios,introduced=6_0))) __attribute__((annotate("ui_appearance_selector")));

// @property(nonatomic,getter=isOn) BOOL on;

// - (instancetype)initWithFrame:(CGRect)frame __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

// - (void)setOn:(BOOL)on animated:(BOOL)animated;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

typedef NSInteger UITabBarItemPositioning; enum {
    UITabBarItemPositioningAutomatic,
    UITabBarItemPositioningFill,
    UITabBarItemPositioningCentered,
} __attribute__((availability(ios,introduced=7_0)));

// @class UITabBarItem;
#ifndef _REWRITER_typedef_UITabBarItem
#define _REWRITER_typedef_UITabBarItem
typedef struct objc_object UITabBarItem;
typedef struct {} _objc_exc_UITabBarItem;
#endif

// @class UIImageView;
#ifndef _REWRITER_typedef_UIImageView
#define _REWRITER_typedef_UIImageView
typedef struct objc_object UIImageView;
typedef struct {} _objc_exc_UIImageView;
#endif

// @protocol UITabBarDelegate;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) 
#ifndef _REWRITER_typedef_UITabBar
#define _REWRITER_typedef_UITabBar
typedef struct objc_object UITabBar;
typedef struct {} _objc_exc_UITabBar;
#endif

struct UITabBar_IMPL {
	struct UIView_IMPL UIView_IVARS;
};


// @property(nullable, nonatomic, weak) id<UITabBarDelegate> delegate;
// @property(nullable, nonatomic, copy) NSArray<UITabBarItem *> *items;
// @property(nullable, nonatomic, weak) UITabBarItem *selectedItem;

// - (void)setItems:(nullable NSArray<UITabBarItem *> *)items animated:(BOOL)animated;



// - (void)beginCustomizingItems:(NSArray<UITabBarItem *> *)items __attribute__((availability(tvos,unavailable)));
// - (BOOL)endCustomizingAnimated:(BOOL)animated __attribute__((availability(tvos,unavailable)));

// @property(nonatomic, readonly, getter=isCustomizing) BOOL customizing __attribute__((availability(tvos,unavailable)));
// @property(null_resettable, nonatomic, strong) UIColor *tintColor __attribute__((availability(ios,introduced=5_0)));
// @property(nullable, nonatomic, strong) UIColor *barTintColor __attribute__((availability(ios,introduced=7_0))) __attribute__((annotate("ui_appearance_selector")));

// @property (nonatomic, readwrite, copy, nullable) UIColor *unselectedItemTintColor __attribute__((availability(ios,introduced=10_0))) __attribute__((annotate("ui_appearance_selector")));
// @property(nullable, nonatomic, strong) UIColor *selectedImageTintColor __attribute__((availability(ios,introduced=5_0,deprecated=8_0,message="" "Use tintColor"))) __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos,unavailable)));



// @property(nullable, nonatomic, strong) UIImage *backgroundImage __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));



// @property(nullable, nonatomic, strong) UIImage *selectionIndicatorImage __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));



// @property(nullable, nonatomic, strong) UIImage *shadowImage __attribute__((availability(ios,introduced=6_0))) __attribute__((annotate("ui_appearance_selector")));
// @property(nonatomic) UITabBarItemPositioning itemPositioning __attribute__((availability(ios,introduced=7_0))) __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos,unavailable)));






// @property(nonatomic) CGFloat itemWidth __attribute__((availability(ios,introduced=7_0))) __attribute__((annotate("ui_appearance_selector")));






// @property(nonatomic) CGFloat itemSpacing __attribute__((availability(ios,introduced=7_0))) __attribute__((annotate("ui_appearance_selector")));




// @property(nonatomic) UIBarStyle barStyle __attribute__((availability(ios,introduced=7_0))) __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos,unavailable)));
// @property(nonatomic,getter=isTranslucent) BOOL translucent __attribute__((availability(ios,introduced=7_0)));
/* @end */




// @protocol UITabBarDelegate<NSObject>
/* @optional */

// - (void)tabBar:(UITabBar *)tabBar didSelectItem:(UITabBarItem *)item;






// - (void)tabBar:(UITabBar *)tabBar willBeginCustomizingItems:(NSArray<UITabBarItem *> *)items __attribute__((availability(tvos,unavailable)));
// - (void)tabBar:(UITabBar *)tabBar didBeginCustomizingItems:(NSArray<UITabBarItem *> *)items __attribute__((availability(tvos,unavailable)));
// - (void)tabBar:(UITabBar *)tabBar willEndCustomizingItems:(NSArray<UITabBarItem *> *)items changed:(BOOL)changed __attribute__((availability(tvos,unavailable)));
// - (void)tabBar:(UITabBar *)tabBar didEndCustomizingItems:(NSArray<UITabBarItem *> *)items changed:(BOOL)changed __attribute__((availability(tvos,unavailable)));

/* @end */



// @interface UITabBar (SpringLoading) <UISpringLoadedInteractionSupporting>
/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIView;
#ifndef _REWRITER_typedef_UIView
#define _REWRITER_typedef_UIView
typedef struct objc_object UIView;
typedef struct {} _objc_exc_UIView;
#endif

#ifndef _REWRITER_typedef_UIImage
#define _REWRITER_typedef_UIImage
typedef struct objc_object UIImage;
typedef struct {} _objc_exc_UIImage;
#endif

#ifndef _REWRITER_typedef_UINavigationController
#define _REWRITER_typedef_UINavigationController
typedef struct objc_object UINavigationController;
typedef struct {} _objc_exc_UINavigationController;
#endif

#ifndef _REWRITER_typedef_UITabBarItem
#define _REWRITER_typedef_UITabBarItem
typedef struct objc_object UITabBarItem;
typedef struct {} _objc_exc_UITabBarItem;
#endif

// @protocol UITabBarControllerDelegate;
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) 
#ifndef _REWRITER_typedef_UITabBarController
#define _REWRITER_typedef_UITabBarController
typedef struct objc_object UITabBarController;
typedef struct {} _objc_exc_UITabBarController;
#endif

struct UITabBarController_IMPL {
	struct UIViewController_IMPL UIViewController_IVARS;
};


// @property(nullable, nonatomic,copy) NSArray<__kindof UIViewController *> *viewControllers;


// - (void)setViewControllers:(NSArray<__kindof UIViewController *> * _Nullable)viewControllers animated:(BOOL)animated;

// @property(nullable, nonatomic, assign) __kindof UIViewController *selectedViewController;
// @property(nonatomic) NSUInteger selectedIndex;

// @property(nonatomic, readonly) UINavigationController *moreNavigationController __attribute__((availability(tvos,unavailable)));
// @property(nullable, nonatomic, copy) NSArray<__kindof UIViewController *> *customizableViewControllers __attribute__((availability(tvos,unavailable)));

// @property(nonatomic,readonly) UITabBar *tabBar __attribute__((availability(ios,introduced=3_0)));

// @property(nullable, nonatomic,weak) id<UITabBarControllerDelegate> delegate;

/* @end */


// @protocol UITabBarControllerDelegate <NSObject>
/* @optional */
// - (BOOL)tabBarController:(UITabBarController *)tabBarController shouldSelectViewController:(UIViewController *)viewController __attribute__((availability(ios,introduced=3_0)));
// - (void)tabBarController:(UITabBarController *)tabBarController didSelectViewController:(UIViewController *)viewController;

// - (void)tabBarController:(UITabBarController *)tabBarController willBeginCustomizingViewControllers:(NSArray<__kindof UIViewController *> *)viewControllers __attribute__((availability(ios,introduced=3_0))) __attribute__((availability(tvos,unavailable)));
// - (void)tabBarController:(UITabBarController *)tabBarController willEndCustomizingViewControllers:(NSArray<__kindof UIViewController *> *)viewControllers changed:(BOOL)changed __attribute__((availability(ios,introduced=3_0))) __attribute__((availability(tvos,unavailable)));
// - (void)tabBarController:(UITabBarController *)tabBarController didEndCustomizingViewControllers:(NSArray<__kindof UIViewController *> *)viewControllers changed:(BOOL)changed __attribute__((availability(tvos,unavailable)));

// - (UIInterfaceOrientationMask)tabBarControllerSupportedInterfaceOrientations:(UITabBarController *)tabBarController __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));
// - (UIInterfaceOrientation)tabBarControllerPreferredInterfaceOrientationForPresentation:(UITabBarController *)tabBarController __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));

#if 0
- (nullable id <UIViewControllerInteractiveTransitioning>)tabBarController:(UITabBarController *)tabBarController
                      interactionControllerForAnimationController: (id <UIViewControllerAnimatedTransitioning>)animationController __attribute__((availability(ios,introduced=7_0)));
#endif


#if 0
- (nullable id <UIViewControllerAnimatedTransitioning>)tabBarController:(UITabBarController *)tabBarController
            animationControllerForTransitionFromViewController:(UIViewController *)fromVC
                                              toViewController:(UIViewController *)toVC __attribute__((availability(ios,introduced=7_0)));
#endif


/* @end */


// @interface UIViewController (UITabBarControllerItem)

// @property(null_resettable, nonatomic, strong) UITabBarItem *tabBarItem;

// @property(nullable, nonatomic, readonly, strong) UITabBarController *tabBarController;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

typedef NSInteger UITabBarSystemItem; enum {
    UITabBarSystemItemMore,
    UITabBarSystemItemFavorites,
    UITabBarSystemItemFeatured,
    UITabBarSystemItemTopRated,
    UITabBarSystemItemRecents,
    UITabBarSystemItemContacts,
    UITabBarSystemItemHistory,
    UITabBarSystemItemBookmarks,
    UITabBarSystemItemSearch,
    UITabBarSystemItemDownloads,
    UITabBarSystemItemMostRecent,
    UITabBarSystemItemMostViewed,
};

// @class UIView;
#ifndef _REWRITER_typedef_UIView
#define _REWRITER_typedef_UIView
typedef struct objc_object UIView;
typedef struct {} _objc_exc_UIView;
#endif

#ifndef _REWRITER_typedef_UIImage
#define _REWRITER_typedef_UIImage
typedef struct objc_object UIImage;
typedef struct {} _objc_exc_UIImage;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) 
#ifndef _REWRITER_typedef_UITabBarItem
#define _REWRITER_typedef_UITabBarItem
typedef struct objc_object UITabBarItem;
typedef struct {} _objc_exc_UITabBarItem;
#endif

struct UITabBarItem_IMPL {
	struct UIBarItem_IMPL UIBarItem_IVARS;
};


// - (instancetype)init __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));




// - (instancetype)initWithTitle:(nullable NSString *)title image:(nullable UIImage *)image tag:(NSInteger)tag;
// - (instancetype)initWithTitle:(nullable NSString *)title image:(nullable UIImage *)image selectedImage:(nullable UIImage *)selectedImage __attribute__((availability(ios,introduced=7_0)));
// - (instancetype)initWithTabBarSystemItem:(UITabBarSystemItem)systemItem tag:(NSInteger)tag;

// @property(nullable, nonatomic,strong) UIImage *selectedImage __attribute__((availability(ios,introduced=7_0)));

// @property(nullable, nonatomic, copy) NSString *badgeValue;



// - (void)setFinishedSelectedImage:(nullable UIImage *)selectedImage withFinishedUnselectedImage:(nullable UIImage *)unselectedImage __attribute__((availability(ios,introduced=5_0,deprecated=7_0,message="" "Use initWithTitle:image:selectedImage: or the image and selectedImage properties along with UIImageRenderingModeAlwaysOriginal"))) __attribute__((availability(tvos,unavailable)));
// - (nullable UIImage *)finishedSelectedImage __attribute__((availability(ios,introduced=5_0,deprecated=7_0,message="" ))) __attribute__((availability(tvos,unavailable)));
// - (nullable UIImage *)finishedUnselectedImage __attribute__((availability(ios,introduced=5_0,deprecated=7_0,message="" ))) __attribute__((availability(tvos,unavailable)));





// @property (nonatomic, readwrite, assign) UIOffset titlePositionAdjustment __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));


// @property (nonatomic, readwrite, copy, nullable) UIColor *badgeColor __attribute__((availability(ios,introduced=10_0))) __attribute__((annotate("ui_appearance_selector")));


// - (void)setBadgeTextAttributes:(nullable NSDictionary<NSString *,id> *)textAttributes forState:(UIControlState)state __attribute__((availability(ios,introduced=10_0))) __attribute__((annotate("ui_appearance_selector")));


// - (nullable NSDictionary<NSString *,id> *)badgeTextAttributesForState:(UIControlState)state __attribute__((availability(ios,introduced=10_0))) __attribute__((annotate("ui_appearance_selector")));

/* @end */



// @interface UITabBarItem (SpringLoading) <UISpringLoadedInteractionSupporting>
/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0))) 
#ifndef _REWRITER_typedef_UITableViewHeaderFooterView
#define _REWRITER_typedef_UITableViewHeaderFooterView
typedef struct objc_object UITableViewHeaderFooterView;
typedef struct {} _objc_exc_UITableViewHeaderFooterView;
#endif

struct UITableViewHeaderFooterView_IMPL {
	struct UIView_IMPL UIView_IVARS;
};


// - (instancetype)initWithReuseIdentifier:(nullable NSString *)reuseIdentifier __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

// @property (nonatomic, readonly, strong, nullable) UILabel *textLabel;
// @property (nonatomic, readonly, strong, nullable) UILabel *detailTextLabel;

// @property (nonatomic, readonly, strong) UIView *contentView;
// @property (nonatomic, strong, nullable) UIView *backgroundView;

// @property (nonatomic, readonly, copy, nullable) NSString *reuseIdentifier;

// - (void)prepareForReuse __attribute__((objc_requires_super));

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) 
#ifndef _REWRITER_typedef_UITableViewController
#define _REWRITER_typedef_UITableViewController
typedef struct objc_object UITableViewController;
typedef struct {} _objc_exc_UITableViewController;
#endif

struct UITableViewController_IMPL {
	struct UIViewController_IMPL UIViewController_IVARS;
};


// - (instancetype)initWithStyle:(UITableViewStyle)style __attribute__((objc_designated_initializer));
// - (instancetype)initWithNibName:(nullable NSString *)nibNameOrNil bundle:(nullable NSBundle *)nibBundleOrNil __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

// @property (nonatomic, strong, null_resettable) UITableView *tableView;
// @property (nonatomic) BOOL clearsSelectionOnViewWillAppear __attribute__((availability(ios,introduced=3_2)));

// @property (nonatomic, strong, nullable) UIRefreshControl *refreshControl __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(tvos,unavailable)));

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_2))) 
#ifndef _REWRITER_typedef_UITextChecker
#define _REWRITER_typedef_UITextChecker
typedef struct objc_object UITextChecker;
typedef struct {} _objc_exc_UITextChecker;
#endif

struct UITextChecker_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



// - (NSRange)rangeOfMisspelledWordInString:(NSString *)stringToCheck range:(NSRange)range startingAt:(NSInteger)startingOffset wrap:(BOOL)wrapFlag language:(NSString *)language;


// - (nullable NSArray<NSString *> *)guessesForWordRange:(NSRange)range inString:(NSString *)string language:(NSString *)language;


// - (nullable NSArray<NSString *> *)completionsForPartialWordRange:(NSRange)range inString:(NSString *)string language:(NSString *)language;


// - (void)ignoreWord:(NSString *)wordToIgnore;

// @property(nonatomic, strong, nullable) NSArray<NSString *> *ignoredWords;






// + (void)learnWord:(NSString *)word;
// + (BOOL)hasLearnedWord:(NSString *)word;
// + (void)unlearnWord:(NSString *)word;



@property(class, nonatomic, readonly) NSArray<NSString *> *availableLanguages;




/* @end */

#pragma clang assume_nonnull end










typedef NSInteger UITextItemInteraction; enum {
    UITextItemInteractionInvokeDefaultAction,
    UITextItemInteractionPresentActions,
    UITextItemInteractionPreview,
} __attribute__((availability(ios,introduced=10_0)));



#pragma clang assume_nonnull begin

// @class UIFont;
#ifndef _REWRITER_typedef_UIFont
#define _REWRITER_typedef_UIFont
typedef struct objc_object UIFont;
typedef struct {} _objc_exc_UIFont;
#endif

#ifndef _REWRITER_typedef_UIColor
#define _REWRITER_typedef_UIColor
typedef struct objc_object UIColor;
typedef struct {} _objc_exc_UIColor;
#endif

#ifndef _REWRITER_typedef_UITextView
#define _REWRITER_typedef_UITextView
typedef struct objc_object UITextView;
typedef struct {} _objc_exc_UITextView;
#endif

#ifndef _REWRITER_typedef_NSTextContainer
#define _REWRITER_typedef_NSTextContainer
typedef struct objc_object NSTextContainer;
typedef struct {} _objc_exc_NSTextContainer;
#endif

#ifndef _REWRITER_typedef_NSLayoutManager
#define _REWRITER_typedef_NSLayoutManager
typedef struct objc_object NSLayoutManager;
typedef struct {} _objc_exc_NSLayoutManager;
#endif

#ifndef _REWRITER_typedef_NSTextStorage
#define _REWRITER_typedef_NSTextStorage
typedef struct objc_object NSTextStorage;
typedef struct {} _objc_exc_NSTextStorage;
#endif

#ifndef _REWRITER_typedef_NSTextAttachment
#define _REWRITER_typedef_NSTextAttachment
typedef struct objc_object NSTextAttachment;
typedef struct {} _objc_exc_NSTextAttachment;
#endif


// @protocol UITextViewDelegate <NSObject, UIScrollViewDelegate>

/* @optional */

// - (BOOL)textViewShouldBeginEditing:(UITextView *)textView;
// - (BOOL)textViewShouldEndEditing:(UITextView *)textView;

// - (void)textViewDidBeginEditing:(UITextView *)textView;
// - (void)textViewDidEndEditing:(UITextView *)textView;

// - (BOOL)textView:(UITextView *)textView shouldChangeTextInRange:(NSRange)range replacementText:(NSString *)text;
// - (void)textViewDidChange:(UITextView *)textView;

// - (void)textViewDidChangeSelection:(UITextView *)textView;

// - (BOOL)textView:(UITextView *)textView shouldInteractWithURL:(NSURL *)URL inRange:(NSRange)characterRange interaction:(UITextItemInteraction)interaction __attribute__((availability(ios,introduced=10_0)));
// - (BOOL)textView:(UITextView *)textView shouldInteractWithTextAttachment:(NSTextAttachment *)textAttachment inRange:(NSRange)characterRange interaction:(UITextItemInteraction)interaction __attribute__((availability(ios,introduced=10_0)));

// - (BOOL)textView:(UITextView *)textView shouldInteractWithURL:(NSURL *)URL inRange:(NSRange)characterRange __attribute__((availability(ios,introduced=7_0,deprecated=10_0,message="" "Use textView:shouldInteractWithURL:inRange:forInteractionType: instead")));
// - (BOOL)textView:(UITextView *)textView shouldInteractWithTextAttachment:(NSTextAttachment *)textAttachment inRange:(NSRange)characterRange __attribute__((availability(ios,introduced=7_0,deprecated=10_0,message="" "Use textView:shouldInteractWithTextAttachment:inRange:forInteractionType: instead")));

/* @end */


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) 
#ifndef _REWRITER_typedef_UITextView
#define _REWRITER_typedef_UITextView
typedef struct objc_object UITextView;
typedef struct {} _objc_exc_UITextView;
#endif

struct UITextView_IMPL {
	struct UIScrollView_IMPL UIScrollView_IVARS;
};


// @property(nullable,nonatomic,weak) id<UITextViewDelegate> delegate;

// @property(null_resettable,nonatomic,copy) NSString *text;
// @property(nullable,nonatomic,strong) UIFont *font;
// @property(nullable,nonatomic,strong) UIColor *textColor;
// @property(nonatomic) NSTextAlignment textAlignment;
// @property(nonatomic) NSRange selectedRange;
// @property(nonatomic,getter=isEditable) BOOL editable __attribute__((availability(tvos,unavailable)));
// @property(nonatomic,getter=isSelectable) BOOL selectable __attribute__((availability(ios,introduced=7_0)));
// @property(nonatomic) UIDataDetectorTypes dataDetectorTypes __attribute__((availability(ios,introduced=3_0))) __attribute__((availability(tvos,unavailable)));

// @property(nonatomic) BOOL allowsEditingTextAttributes __attribute__((availability(ios,introduced=6_0)));
// @property(null_resettable,copy) NSAttributedString *attributedText __attribute__((availability(ios,introduced=6_0)));
// @property(nonatomic,copy) NSDictionary<NSString *, id> *typingAttributes __attribute__((availability(ios,introduced=6_0)));

// - (void)scrollRangeToVisible:(NSRange)range;




// @property (nullable, readwrite, strong) UIView *inputView;
// @property (nullable, readwrite, strong) UIView *inputAccessoryView;

// @property(nonatomic) BOOL clearsOnInsertion __attribute__((availability(ios,introduced=6_0)));


// - (instancetype)initWithFrame:(CGRect)frame textContainer:(nullable NSTextContainer *)textContainer __attribute__((availability(ios,introduced=7_0))) __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));


// @property(nonatomic,readonly) NSTextContainer *textContainer __attribute__((availability(ios,introduced=7_0)));

// @property(nonatomic, assign) UIEdgeInsets textContainerInset __attribute__((availability(ios,introduced=7_0)));


// @property(nonatomic,readonly) NSLayoutManager *layoutManager __attribute__((availability(ios,introduced=7_0)));
// @property(nonatomic,readonly,strong) NSTextStorage *textStorage __attribute__((availability(ios,introduced=7_0)));


// @property(null_resettable, nonatomic, copy) NSDictionary<NSString *, id> *linkTextAttributes __attribute__((availability(ios,introduced=7_0)));

/* @end */




// @interface UITextView () <UITextDraggable, UITextDroppable, UITextPasteConfigurationSupporting>
/* @end */




extern "C" __attribute__((visibility ("default"))) NSNotificationName const UITextViewTextDidBeginEditingNotification;
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UITextViewTextDidChangeNotification;
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UITextViewTextDidEndEditingNotification;
#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIBarButtonItem;
#ifndef _REWRITER_typedef_UIBarButtonItem
#define _REWRITER_typedef_UIBarButtonItem
typedef struct objc_object UIBarButtonItem;
typedef struct {} _objc_exc_UIBarButtonItem;
#endif

#ifndef _REWRITER_typedef_UIColor
#define _REWRITER_typedef_UIColor
typedef struct objc_object UIColor;
typedef struct {} _objc_exc_UIColor;
#endif

// @protocol UIToolbarDelegate;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIToolbar
#define _REWRITER_typedef_UIToolbar
typedef struct objc_object UIToolbar;
typedef struct {} _objc_exc_UIToolbar;
#endif

struct UIToolbar_IMPL {
	struct UIView_IMPL UIView_IVARS;
};


// @property(nonatomic) UIBarStyle barStyle __attribute__((annotate("ui_appearance_selector"))) __attribute__((availability(tvos,unavailable)));
// @property(nullable, nonatomic, copy) NSArray<UIBarButtonItem *> *items;
// @property(nonatomic,assign,getter=isTranslucent) BOOL translucent __attribute__((availability(ios,introduced=3_0))) __attribute__((annotate("ui_appearance_selector")));

// - (void)setItems:(nullable NSArray<UIBarButtonItem *> *)items animated:(BOOL)animated;






// @property(null_resettable, nonatomic, strong) UIColor *tintColor;
// @property(nullable, nonatomic, strong) UIColor *barTintColor __attribute__((availability(ios,introduced=7_0))) __attribute__((annotate("ui_appearance_selector")));
// - (void)setBackgroundImage:(nullable UIImage *)backgroundImage forToolbarPosition:(UIBarPosition)topOrBottom barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));
// - (nullable UIImage *)backgroundImageForToolbarPosition:(UIBarPosition)topOrBottom barMetrics:(UIBarMetrics)barMetrics __attribute__((availability(ios,introduced=5_0))) __attribute__((annotate("ui_appearance_selector")));



// - (void)setShadowImage:(nullable UIImage *)shadowImage forToolbarPosition:(UIBarPosition)topOrBottom __attribute__((availability(ios,introduced=6_0))) __attribute__((annotate("ui_appearance_selector")));
// - (nullable UIImage *)shadowImageForToolbarPosition:(UIBarPosition)topOrBottom __attribute__((availability(ios,introduced=6_0))) __attribute__((annotate("ui_appearance_selector")));

// @property(nullable, nonatomic, weak) id<UIToolbarDelegate> delegate __attribute__((availability(ios,introduced=7_0)));
/* @end */


__attribute__((availability(tvos,unavailable)))
// @protocol UIToolbarDelegate <UIBarPositioningDelegate>
/* @end */

#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin

// @protocol UIVideoEditorControllerDelegate;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_1))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIVideoEditorController
#define _REWRITER_typedef_UIVideoEditorController
typedef struct objc_object UIVideoEditorController;
typedef struct {} _objc_exc_UIVideoEditorController;
#endif

struct UIVideoEditorController_IMPL {
	struct UINavigationController_IMPL UINavigationController_IVARS;
};


// + (BOOL)canEditVideoAtPath:(NSString *)videoPath __attribute__((availability(ios,introduced=3_1)));

// @property(nullable, nonatomic,assign) id <UINavigationControllerDelegate, UIVideoEditorControllerDelegate> delegate;

// @property(nonatomic, copy) NSString *videoPath;
// @property(nonatomic) NSTimeInterval videoMaximumDuration;
// @property(nonatomic) UIImagePickerControllerQualityType videoQuality;

/* @end */


__attribute__((availability(tvos,unavailable))) // @protocol UIVideoEditorControllerDelegate<NSObject>
/* @optional */



// - (void)videoEditorController:(UIVideoEditorController *)editor didSaveEditedVideoToPath:(NSString *)editedVideoPath;
// - (void)videoEditorController:(UIVideoEditorController *)editor didFailWithError:(NSError *)error;
// - (void)videoEditorControllerDidCancel:(UIVideoEditorController *)editor;

/* @end */

#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin

typedef NSInteger UIWebViewNavigationType; enum {
    UIWebViewNavigationTypeLinkClicked,
    UIWebViewNavigationTypeFormSubmitted,
    UIWebViewNavigationTypeBackForward,
    UIWebViewNavigationTypeReload,
    UIWebViewNavigationTypeFormResubmitted,
    UIWebViewNavigationTypeOther
} __attribute__((availability(tvos,unavailable)));

typedef NSInteger UIWebPaginationMode; enum {
    UIWebPaginationModeUnpaginated,
    UIWebPaginationModeLeftToRight,
    UIWebPaginationModeTopToBottom,
    UIWebPaginationModeBottomToTop,
    UIWebPaginationModeRightToLeft
} __attribute__((availability(tvos,unavailable)));

typedef NSInteger UIWebPaginationBreakingMode; enum {
    UIWebPaginationBreakingModePage,
    UIWebPaginationBreakingModeColumn
} __attribute__((availability(tvos,unavailable)));

// @class UIWebViewInternal;
#ifndef _REWRITER_typedef_UIWebViewInternal
#define _REWRITER_typedef_UIWebViewInternal
typedef struct objc_object UIWebViewInternal;
typedef struct {} _objc_exc_UIWebViewInternal;
#endif

// @protocol UIWebViewDelegate;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIWebView
#define _REWRITER_typedef_UIWebView
typedef struct objc_object UIWebView;
typedef struct {} _objc_exc_UIWebView;
#endif

struct UIWebView_IMPL {
	struct UIView_IMPL UIView_IVARS;
};


// @property (nullable, nonatomic, assign) id <UIWebViewDelegate> delegate;

// @property (nonatomic, readonly, strong) UIScrollView *scrollView __attribute__((availability(ios,introduced=5_0)));

// - (void)loadRequest:(NSURLRequest *)request;
// - (void)loadHTMLString:(NSString *)string baseURL:(nullable NSURL *)baseURL;
// - (void)loadData:(NSData *)data MIMEType:(NSString *)MIMEType textEncodingName:(NSString *)textEncodingName baseURL:(NSURL *)baseURL;

// @property (nullable, nonatomic, readonly, strong) NSURLRequest *request;

// - (void)reload;
// - (void)stopLoading;

// - (void)goBack;
// - (void)goForward;

// @property (nonatomic, readonly, getter=canGoBack) BOOL canGoBack;
// @property (nonatomic, readonly, getter=canGoForward) BOOL canGoForward;
// @property (nonatomic, readonly, getter=isLoading) BOOL loading;

// - (nullable NSString *)stringByEvaluatingJavaScriptFromString:(NSString *)script;

// @property (nonatomic) BOOL scalesPageToFit;

// @property (nonatomic) BOOL detectsPhoneNumbers __attribute__((availability(ios,introduced=2_0,deprecated=3_0,message="" )));
// @property (nonatomic) UIDataDetectorTypes dataDetectorTypes __attribute__((availability(ios,introduced=3_0)));

// @property (nonatomic) BOOL allowsInlineMediaPlayback __attribute__((availability(ios,introduced=4_0)));
// @property (nonatomic) BOOL mediaPlaybackRequiresUserAction __attribute__((availability(ios,introduced=4_0)));

// @property (nonatomic) BOOL mediaPlaybackAllowsAirPlay __attribute__((availability(ios,introduced=5_0)));

// @property (nonatomic) BOOL suppressesIncrementalRendering __attribute__((availability(ios,introduced=6_0)));

// @property (nonatomic) BOOL keyboardDisplayRequiresUserAction __attribute__((availability(ios,introduced=6_0)));

// @property (nonatomic) UIWebPaginationMode paginationMode __attribute__((availability(ios,introduced=7_0)));
// @property (nonatomic) UIWebPaginationBreakingMode paginationBreakingMode __attribute__((availability(ios,introduced=7_0)));
// @property (nonatomic) CGFloat pageLength __attribute__((availability(ios,introduced=7_0)));
// @property (nonatomic) CGFloat gapBetweenPages __attribute__((availability(ios,introduced=7_0)));
// @property (nonatomic, readonly) NSUInteger pageCount __attribute__((availability(ios,introduced=7_0)));

// @property (nonatomic) BOOL allowsPictureInPictureMediaPlayback __attribute__((availability(ios,introduced=9_0)));

// @property (nonatomic) BOOL allowsLinkPreview __attribute__((availability(ios,introduced=9_0)));
/* @end */


__attribute__((availability(tvos,unavailable))) // @protocol UIWebViewDelegate <NSObject>

/* @optional */
// - (BOOL)webView:(UIWebView *)webView shouldStartLoadWithRequest:(NSURLRequest *)request navigationType:(UIWebViewNavigationType)navigationType;
// - (void)webViewDidStartLoad:(UIWebView *)webView;
// - (void)webViewDidFinishLoad:(UIWebView *)webView;
// - (void)webView:(UIWebView *)webView didFailLoadWithError:(NSError *)error;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

typedef CGFloat UIWindowLevel;

// @class UIEvent;
#ifndef _REWRITER_typedef_UIEvent
#define _REWRITER_typedef_UIEvent
typedef struct objc_object UIEvent;
typedef struct {} _objc_exc_UIEvent;
#endif

#ifndef _REWRITER_typedef_UIScreen
#define _REWRITER_typedef_UIScreen
typedef struct objc_object UIScreen;
typedef struct {} _objc_exc_UIScreen;
#endif

#ifndef _REWRITER_typedef_NSUndoManager
#define _REWRITER_typedef_NSUndoManager
typedef struct objc_object NSUndoManager;
typedef struct {} _objc_exc_NSUndoManager;
#endif

#ifndef _REWRITER_typedef_UIViewController
#define _REWRITER_typedef_UIViewController
typedef struct objc_object UIViewController;
typedef struct {} _objc_exc_UIViewController;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_0))) 
#ifndef _REWRITER_typedef_UIWindow
#define _REWRITER_typedef_UIWindow
typedef struct objc_object UIWindow;
typedef struct {} _objc_exc_UIWindow;
#endif

struct UIWindow_IMPL {
	struct UIView_IMPL UIView_IVARS;
};


// @property(nonatomic,strong) UIScreen *screen __attribute__((availability(ios,introduced=3_2)));

// @property(nonatomic) UIWindowLevel windowLevel;
// @property(nonatomic,readonly,getter=isKeyWindow) BOOL keyWindow;
// - (void)becomeKeyWindow;
// - (void)resignKeyWindow;

// - (void)makeKeyWindow;
// - (void)makeKeyAndVisible;

// @property(nullable, nonatomic,strong) UIViewController *rootViewController __attribute__((availability(ios,introduced=4_0)));

// - (void)sendEvent:(UIEvent *)event;

// - (CGPoint)convertPoint:(CGPoint)point toWindow:(nullable UIWindow *)window;
// - (CGPoint)convertPoint:(CGPoint)point fromWindow:(nullable UIWindow *)window;
// - (CGRect)convertRect:(CGRect)rect toWindow:(nullable UIWindow *)window;
// - (CGRect)convertRect:(CGRect)rect fromWindow:(nullable UIWindow *)window;

/* @end */


extern "C" __attribute__((visibility ("default"))) const UIWindowLevel UIWindowLevelNormal;
extern "C" __attribute__((visibility ("default"))) const UIWindowLevel UIWindowLevelAlert;
extern "C" __attribute__((visibility ("default"))) const UIWindowLevel UIWindowLevelStatusBar __attribute__((availability(tvos,unavailable)));

extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIWindowDidBecomeVisibleNotification;
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIWindowDidBecomeHiddenNotification;
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIWindowDidBecomeKeyNotification;
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIWindowDidResignKeyNotification;





extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIKeyboardWillShowNotification __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIKeyboardDidShowNotification __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIKeyboardWillHideNotification __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIKeyboardDidHideNotification __attribute__((availability(tvos,unavailable)));

extern "C" __attribute__((visibility ("default"))) NSString *const UIKeyboardFrameBeginUserInfoKey __attribute__((availability(ios,introduced=3_2))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIKeyboardFrameEndUserInfoKey __attribute__((availability(ios,introduced=3_2))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIKeyboardAnimationDurationUserInfoKey __attribute__((availability(ios,introduced=3_0))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIKeyboardAnimationCurveUserInfoKey __attribute__((availability(ios,introduced=3_0))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIKeyboardIsLocalUserInfoKey __attribute__((availability(ios,introduced=9_0))) __attribute__((availability(tvos,unavailable)));



extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIKeyboardWillChangeFrameNotification __attribute__((availability(ios,introduced=5_0))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const UIKeyboardDidChangeFrameNotification __attribute__((availability(ios,introduced=5_0))) __attribute__((availability(tvos,unavailable)));


extern "C" __attribute__((visibility ("default"))) NSString *const UIKeyboardCenterBeginUserInfoKey __attribute__((availability(ios,introduced=2_0,deprecated=3_2,message="" ))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIKeyboardCenterEndUserInfoKey __attribute__((availability(ios,introduced=2_0,deprecated=3_2,message="" ))) __attribute__((availability(tvos,unavailable)));
extern "C" __attribute__((visibility ("default"))) NSString *const UIKeyboardBoundsUserInfoKey __attribute__((availability(ios,introduced=2_0,deprecated=3_2,message="" ))) __attribute__((availability(tvos,unavailable)));
#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin

// @class UIDragPreview;
#ifndef _REWRITER_typedef_UIDragPreview
#define _REWRITER_typedef_UIDragPreview
typedef struct objc_object UIDragPreview;
typedef struct {} _objc_exc_UIDragPreview;
#endif


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIDragItem
#define _REWRITER_typedef_UIDragItem
typedef struct objc_object UIDragItem;
typedef struct {} _objc_exc_UIDragItem;
#endif

struct UIDragItem_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)initWithItemProvider:(NSItemProvider *)itemProvider __attribute__((objc_designated_initializer));
// - (instancetype)init __attribute__((unavailable));
// + (instancetype)new __attribute__((unavailable));

// @property (nonatomic, readonly) __kindof NSItemProvider *itemProvider;




// @property (nonatomic, strong, nullable) id localObject;
// @property (nonatomic, copy, nullable) UIDragPreview * _Nullable (^previewProvider)(void);

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIDragPreviewParameters;
#ifndef _REWRITER_typedef_UIDragPreviewParameters
#define _REWRITER_typedef_UIDragPreviewParameters
typedef struct objc_object UIDragPreviewParameters;
typedef struct {} _objc_exc_UIDragPreviewParameters;
#endif

#ifndef _REWRITER_typedef_UIView
#define _REWRITER_typedef_UIView
typedef struct objc_object UIView;
typedef struct {} _objc_exc_UIView;
#endif


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIDragPreview
#define _REWRITER_typedef_UIDragPreview
typedef struct objc_object UIDragPreview;
typedef struct {} _objc_exc_UIDragPreview;
#endif

struct UIDragPreview_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};

// - (instancetype)initWithView:(UIView *)view parameters:(UIDragPreviewParameters *)parameters __attribute__((objc_designated_initializer));



// - (instancetype)initWithView:(UIView *)view;

// - (instancetype)init __attribute__((unavailable));
// + (instancetype)new __attribute__((unavailable));

// @property (nonatomic, readonly) UIView *view;

// @property (nonatomic, readonly, copy) UIDragPreviewParameters *parameters;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIBezierPath;
#ifndef _REWRITER_typedef_UIBezierPath
#define _REWRITER_typedef_UIBezierPath
typedef struct objc_object UIBezierPath;
typedef struct {} _objc_exc_UIBezierPath;
#endif

#ifndef _REWRITER_typedef_UIColor
#define _REWRITER_typedef_UIColor
typedef struct objc_object UIColor;
typedef struct {} _objc_exc_UIColor;
#endif


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIDragPreviewParameters
#define _REWRITER_typedef_UIDragPreviewParameters
typedef struct objc_object UIDragPreviewParameters;
typedef struct {} _objc_exc_UIDragPreviewParameters;
#endif

struct UIDragPreviewParameters_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};




// - (instancetype)init __attribute__((objc_designated_initializer));
// - (instancetype)initWithTextLineRects:(NSArray<NSValue *> *)textLineRects;





// @property (nonatomic, copy, nullable) UIBezierPath *visiblePath;




// @property (nonatomic, copy, null_resettable) UIColor *backgroundColor;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIDragItem;
#ifndef _REWRITER_typedef_UIDragItem
#define _REWRITER_typedef_UIDragItem
typedef struct objc_object UIDragItem;
typedef struct {} _objc_exc_UIDragItem;
#endif

#ifndef _REWRITER_typedef_UIView
#define _REWRITER_typedef_UIView
typedef struct objc_object UIView;
typedef struct {} _objc_exc_UIView;
#endif


__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) // @protocol UIDragDropSession <NSObject>
// @property (nonatomic, readonly) NSArray<UIDragItem *> *items;



// - (CGPoint)locationInView:(UIView *)view;
// @property (nonatomic, readonly) BOOL allowsMoveOperation;






// @property (nonatomic, readonly, getter=isRestrictedToDraggingApplication) BOOL restrictedToDraggingApplication;





// - (BOOL)hasItemsConformingToTypeIdentifiers:(NSArray<NSString *> *)typeIdentifiers;



// - (BOOL)canLoadObjectsOfClass:(Class<NSItemProviderReading>)aClass;

/* @end */



__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) // @protocol UIDragSession <UIDragDropSession>




// @property (nonatomic, strong, nullable) id localContext;

/* @end */



typedef NSUInteger UIDropSessionProgressIndicatorStyle; enum {
    UIDropSessionProgressIndicatorStyleNone,
    UIDropSessionProgressIndicatorStyleDefault,
} __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) // @protocol UIDropSession <UIDragDropSession, NSProgressReporting>




// @property (nonatomic, readonly, nullable) id<UIDragSession> localDragSession;
// @property (nonatomic) UIDropSessionProgressIndicatorStyle progressIndicatorStyle;
// - (NSProgress *)loadObjectsOfClass:(Class<NSItemProviderReading>)aClass completion:(void(^)(NSArray<__kindof id<NSItemProviderReading>> *objects))completion;

/* @end */

#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin

// @class UIDragPreviewParameters;
#ifndef _REWRITER_typedef_UIDragPreviewParameters
#define _REWRITER_typedef_UIDragPreviewParameters
typedef struct objc_object UIDragPreviewParameters;
typedef struct {} _objc_exc_UIDragPreviewParameters;
#endif

#ifndef _REWRITER_typedef_UIView
#define _REWRITER_typedef_UIView
typedef struct objc_object UIView;
typedef struct {} _objc_exc_UIView;
#endif


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIDragPreviewTarget
#define _REWRITER_typedef_UIDragPreviewTarget
typedef struct objc_object UIDragPreviewTarget;
typedef struct {} _objc_exc_UIDragPreviewTarget;
#endif

struct UIDragPreviewTarget_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};

// - (instancetype)initWithContainer:(UIView *)container center:(CGPoint)center transform:(CGAffineTransform)transform __attribute__((objc_designated_initializer));



// - (instancetype)initWithContainer:(UIView *)container center:(CGPoint)center;

// - (instancetype)init __attribute__((unavailable));
// + (instancetype)new __attribute__((unavailable));

// @property (nonatomic, readonly) UIView *container;
// @property (nonatomic, readonly) CGPoint center;
// @property (nonatomic, readonly) CGAffineTransform transform;

/* @end */


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UITargetedDragPreview
#define _REWRITER_typedef_UITargetedDragPreview
typedef struct objc_object UITargetedDragPreview;
typedef struct {} _objc_exc_UITargetedDragPreview;
#endif

struct UITargetedDragPreview_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};

// - (instancetype)initWithView:(UIView *)view parameters:(UIDragPreviewParameters *)parameters target:(UIDragPreviewTarget *)target __attribute__((objc_designated_initializer));




// - (instancetype)initWithView:(UIView *)view parameters:(UIDragPreviewParameters *)parameters;





// - (instancetype)initWithView:(UIView *)view;

// - (instancetype)init __attribute__((unavailable));
// + (instancetype)new __attribute__((unavailable));

// @property (nonatomic, readonly) UIDragPreviewTarget* target;

// @property (nonatomic, readonly) UIView *view;

// @property (nonatomic, readonly, copy) UIDragPreviewParameters *parameters;





// @property (nonatomic, readonly) CGSize size;
// - (UITargetedDragPreview *)retargetedPreviewWithTarget:(UIDragPreviewTarget *)newTarget;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin
typedef NSInteger UISpringLoadedInteractionEffectState; enum {
    UISpringLoadedInteractionEffectStateInactive,
    UISpringLoadedInteractionEffectStatePossible,
    UISpringLoadedInteractionEffectStateActivating,
    UISpringLoadedInteractionEffectStateActivated,
} __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

// @protocol UISpringLoadedInteractionBehavior, UISpringLoadedInteractionEffect, UISpringLoadedInteractionContext;

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_UISpringLoadedInteraction
#define _REWRITER_typedef_UISpringLoadedInteraction
typedef struct objc_object UISpringLoadedInteraction;
typedef struct {} _objc_exc_UISpringLoadedInteraction;
#endif

struct UISpringLoadedInteraction_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// + (instancetype)new __attribute__((unavailable));
// - (instancetype)init __attribute__((unavailable));
// - (instancetype)initWithInteractionBehavior:(nullable id<UISpringLoadedInteractionBehavior>)interactionBehavior interactionEffect:(nullable id<UISpringLoadedInteractionEffect>)interactionEffect activationHandler:(void(^)(UISpringLoadedInteraction *interaction, id<UISpringLoadedInteractionContext> context))handler __attribute__((objc_designated_initializer));
// - (instancetype)initWithActivationHandler:(void(^)(UISpringLoadedInteraction *interaction, id<UISpringLoadedInteractionContext> context))handler;

// @property (nonatomic, strong, readonly) id<UISpringLoadedInteractionBehavior> interactionBehavior;
// @property (nonatomic, strong, readonly) id<UISpringLoadedInteractionEffect> interactionEffect;

/* @end */





__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
// @protocol UISpringLoadedInteractionBehavior <NSObject>

/* @required */
// - (BOOL)shouldAllowInteraction:(UISpringLoadedInteraction *)interaction withContext:(id<UISpringLoadedInteractionContext>)context;

/* @optional */





// - (void)interactionDidFinish:(UISpringLoadedInteraction *)interaction;

/* @end */






__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
// @protocol UISpringLoadedInteractionEffect <NSObject>

/* @required */







// - (void)interaction:(UISpringLoadedInteraction *)interaction didChangeWithContext:(id<UISpringLoadedInteractionContext>)context;

/* @end */






__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))
// @protocol UISpringLoadedInteractionContext <NSObject>




// @property (nonatomic, readonly) UISpringLoadedInteractionEffectState state;




// @property (nonatomic, strong, nullable) UIView *targetView;





// @property (nonatomic, strong, nullable) id targetItem;







// - (CGPoint)locationInView:(nullable UIView *)view;

/* @end */

#pragma clang assume_nonnull end




// @class NSAttributedString;
#ifndef _REWRITER_typedef_NSAttributedString
#define _REWRITER_typedef_NSAttributedString
typedef struct objc_object NSAttributedString;
typedef struct {} _objc_exc_NSAttributedString;
#endif

// @class NSFileWrapper;
#ifndef _REWRITER_typedef_NSFileWrapper
#define _REWRITER_typedef_NSFileWrapper
typedef struct objc_object NSFileWrapper;
typedef struct {} _objc_exc_NSFileWrapper;
#endif

// @class NSURL;
#ifndef _REWRITER_typedef_NSURL
#define _REWRITER_typedef_NSURL
typedef struct objc_object NSURL;
typedef struct {} _objc_exc_NSURL;
#endif


#pragma clang assume_nonnull begin



extern "C" __attribute__((visibility ("default"))) NSAttributedStringKey const NSFontAttributeName __attribute__((availability(ios,introduced=6_0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringKey const NSParagraphStyleAttributeName __attribute__((availability(ios,introduced=6_0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringKey const NSForegroundColorAttributeName __attribute__((availability(ios,introduced=6_0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringKey const NSBackgroundColorAttributeName __attribute__((availability(ios,introduced=6_0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringKey const NSLigatureAttributeName __attribute__((availability(ios,introduced=6_0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringKey const NSKernAttributeName __attribute__((availability(ios,introduced=6_0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringKey const NSStrikethroughStyleAttributeName __attribute__((availability(ios,introduced=6_0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringKey const NSUnderlineStyleAttributeName __attribute__((availability(ios,introduced=6_0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringKey const NSStrokeColorAttributeName __attribute__((availability(ios,introduced=6_0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringKey const NSStrokeWidthAttributeName __attribute__((availability(ios,introduced=6_0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringKey const NSShadowAttributeName __attribute__((availability(ios,introduced=6_0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringKey const NSTextEffectAttributeName __attribute__((availability(ios,introduced=7_0)));

extern "C" __attribute__((visibility ("default"))) NSAttributedStringKey const NSAttachmentAttributeName __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringKey const NSLinkAttributeName __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringKey const NSBaselineOffsetAttributeName __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringKey const NSUnderlineColorAttributeName __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringKey const NSStrikethroughColorAttributeName __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringKey const NSObliquenessAttributeName __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringKey const NSExpansionAttributeName __attribute__((availability(ios,introduced=7_0)));

extern "C" __attribute__((visibility ("default"))) NSAttributedStringKey const NSWritingDirectionAttributeName __attribute__((availability(ios,introduced=7_0)));

extern "C" __attribute__((visibility ("default"))) NSAttributedStringKey const NSVerticalGlyphFormAttributeName __attribute__((availability(ios,introduced=6_0)));





typedef NSInteger NSUnderlineStyle; enum {
    NSUnderlineStyleNone = 0x00,
    NSUnderlineStyleSingle = 0x01,
    NSUnderlineStyleThick __attribute__((availability(ios,introduced=7_0))) = 0x02,
    NSUnderlineStyleDouble __attribute__((availability(ios,introduced=7_0))) = 0x09,

    NSUnderlinePatternSolid __attribute__((availability(ios,introduced=7_0))) = 0x0000,
    NSUnderlinePatternDot __attribute__((availability(ios,introduced=7_0))) = 0x0100,
    NSUnderlinePatternDash __attribute__((availability(ios,introduced=7_0))) = 0x0200,
    NSUnderlinePatternDashDot __attribute__((availability(ios,introduced=7_0))) = 0x0300,
    NSUnderlinePatternDashDotDot __attribute__((availability(ios,introduced=7_0))) = 0x0400,

    NSUnderlineByWord __attribute__((availability(ios,introduced=7_0))) = 0x8000
} __attribute__((availability(ios,introduced=6_0)));


typedef NSInteger NSWritingDirectionFormatType; enum {
    NSWritingDirectionEmbedding = (0 << 1),
    NSWritingDirectionOverride = (1 << 1)
} __attribute__((availability(ios,introduced=9_0)));


typedef NSString * NSTextEffectStyle __attribute__((swift_wrapper(enum)));
extern "C" __attribute__((visibility ("default"))) NSTextEffectStyle const NSTextEffectLetterpressStyle __attribute__((availability(ios,introduced=7_0)));




// @interface NSMutableAttributedString (NSAttributedStringAttributeFixing)

// - (void)fixAttributesInRange:(NSRange)range __attribute__((availability(ios,introduced=7_0)));

/* @end */





typedef NSString * NSAttributedStringDocumentType __attribute__((swift_wrapper(struct)));


extern "C" __attribute__((visibility ("default"))) NSAttributedStringDocumentType const NSPlainTextDocumentType __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringDocumentType const NSRTFTextDocumentType __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringDocumentType const NSRTFDTextDocumentType __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringDocumentType const NSHTMLTextDocumentType __attribute__((availability(ios,introduced=7_0)));

typedef NSString * NSTextLayoutSectionKey __attribute__((swift_wrapper(enum)));


extern "C" __attribute__((visibility ("default"))) NSTextLayoutSectionKey const NSTextLayoutSectionOrientation __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility ("default"))) NSTextLayoutSectionKey const NSTextLayoutSectionRange __attribute__((availability(ios,introduced=7_0)));

typedef NSString * NSAttributedStringDocumentAttributeKey __attribute__((swift_wrapper(struct)));



extern "C" __attribute__((visibility ("default"))) NSAttributedStringDocumentAttributeKey const NSDocumentTypeDocumentAttribute __attribute__((availability(ios,introduced=7_0)));



extern "C" __attribute__((visibility ("default"))) NSAttributedStringDocumentAttributeKey const NSCharacterEncodingDocumentAttribute __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringDocumentAttributeKey const NSDefaultAttributesDocumentAttribute __attribute__((availability(ios,introduced=7_0)));





extern "C" __attribute__((visibility ("default"))) NSAttributedStringDocumentAttributeKey const NSPaperSizeDocumentAttribute __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringDocumentAttributeKey const NSPaperMarginDocumentAttribute __attribute__((availability(ios,introduced=7_0)));

extern "C" __attribute__((visibility ("default"))) NSAttributedStringDocumentAttributeKey const NSViewSizeDocumentAttribute __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringDocumentAttributeKey const NSViewZoomDocumentAttribute __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringDocumentAttributeKey const NSViewModeDocumentAttribute __attribute__((availability(ios,introduced=7_0)));



extern "C" __attribute__((visibility ("default"))) NSAttributedStringDocumentAttributeKey const NSReadOnlyDocumentAttribute __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringDocumentAttributeKey const NSBackgroundColorDocumentAttribute __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringDocumentAttributeKey const NSHyphenationFactorDocumentAttribute __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringDocumentAttributeKey const NSDefaultTabIntervalDocumentAttribute __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility ("default"))) NSAttributedStringDocumentAttributeKey const NSTextLayoutSectionsAttribute __attribute__((availability(ios,introduced=7_0)));


typedef NSString * NSAttributedStringDocumentReadingOptionKey __attribute__((swift_wrapper(struct)));

extern "C" __attribute__((visibility ("default"))) NSAttributedStringDocumentReadingOptionKey const NSDocumentTypeDocumentOption;
extern "C" __attribute__((visibility ("default"))) NSAttributedStringDocumentReadingOptionKey const NSDefaultAttributesDocumentOption;
extern "C" __attribute__((visibility ("default"))) NSAttributedStringDocumentReadingOptionKey const NSCharacterEncodingDocumentOption;



// @interface NSAttributedString (NSAttributedStringDocumentFormats)

// - (nullable instancetype)initWithURL:(NSURL *)url options:(NSDictionary<NSAttributedStringDocumentReadingOptionKey, id> *)options documentAttributes:(NSDictionary<NSAttributedStringDocumentAttributeKey, id> * _Nullable * _Nullable)dict error:(NSError **)error __attribute__((availability(ios,introduced=9_0)));
// - (nullable instancetype)initWithData:(NSData *)data options:(NSDictionary<NSAttributedStringDocumentReadingOptionKey, id> *)options documentAttributes:(NSDictionary<NSAttributedStringDocumentAttributeKey, id> * _Nullable * _Nullable)dict error:(NSError **)error __attribute__((availability(ios,introduced=7_0)));


// - (nullable NSData *)dataFromRange:(NSRange)range documentAttributes:(NSDictionary<NSAttributedStringDocumentAttributeKey, id> *)dict error:(NSError **)error __attribute__((availability(ios,introduced=7_0)));


// - (nullable NSFileWrapper *)fileWrapperFromRange:(NSRange)range documentAttributes:(NSDictionary<NSAttributedStringDocumentAttributeKey, id> *)dict error:(NSError **)error __attribute__((availability(ios,introduced=7_0)));

/* @end */


// @interface NSMutableAttributedString (NSMutableAttributedStringDocumentFormats)

// - (BOOL)readFromURL:(NSURL *)url options:(NSDictionary<NSAttributedStringDocumentReadingOptionKey, id> *)opts documentAttributes:(NSDictionary<NSAttributedStringDocumentAttributeKey, id> * _Nullable * _Nullable)dict error:(NSError **)error __attribute__((availability(macosx,introduced=10.5))) __attribute__((availability(ios,introduced=9.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));
// - (BOOL)readFromData:(NSData *)data options:(NSDictionary<NSAttributedStringDocumentReadingOptionKey, id> *)opts documentAttributes:(NSDictionary<NSAttributedStringDocumentAttributeKey, id> * _Nullable * _Nullable)dict error:(NSError **)error __attribute__((availability(ios,introduced=7_0)));
/* @end */




// @interface NSAttributedString (NSAttributedStringKitAdditions)

// - (BOOL)containsAttachmentsInRange:(NSRange)range __attribute__((availability(ios,introduced=9_0)));
/* @end */



// @interface NSAttributedString (UINSItemProvider) <NSItemProviderReading, NSItemProviderWriting>

/* @end */




typedef NSInteger NSTextWritingDirection; enum {
    NSTextWritingDirectionEmbedding = (0 << 1),
    NSTextWritingDirectionOverride = (1 << 1)
} __attribute__((availability(ios,introduced=7_0,deprecated=9_0,message="" "Use NSWritingDirectionFormatType instead"))) __attribute__((availability(tvos,unavailable)));

// @interface NSAttributedString(NSDeprecatedKitAdditions)
// - (nullable instancetype)initWithFileURL:(NSURL *)url options:(NSDictionary *)options documentAttributes:(NSDictionary* _Nullable * _Nullable)dict error:(NSError **)error __attribute__((availability(ios,introduced=7_0,deprecated=9_0,message="" "Use -initWithURL:options:documentAttributes:error: instead"))) __attribute__((availability(tvos,unavailable)));
/* @end */


// @interface NSMutableAttributedString (NSDeprecatedKitAdditions)
// - (BOOL)readFromFileURL:(NSURL *)url options:(NSDictionary *)opts documentAttributes:(NSDictionary* _Nullable * _Nullable)dict error:(NSError **)error __attribute__((availability(ios,introduced=7_0,deprecated=9_0,message="" "Use -readFromURL:options:documentAttributes:error: instead"))) __attribute__((availability(tvos,unavailable)));
/* @end */

#pragma clang assume_nonnull end














#pragma clang assume_nonnull begin

// @class NSLayoutConstraint;
#ifndef _REWRITER_typedef_NSLayoutConstraint
#define _REWRITER_typedef_NSLayoutConstraint
typedef struct objc_object NSLayoutConstraint;
typedef struct {} _objc_exc_NSLayoutConstraint;
#endif

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0)))

#ifndef _REWRITER_typedef_NSLayoutAnchor
#define _REWRITER_typedef_NSLayoutAnchor
typedef struct objc_object NSLayoutAnchor;
typedef struct {} _objc_exc_NSLayoutAnchor;
#endif

struct NSLayoutAnchor_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};




// - (NSLayoutConstraint *)constraintEqualToAnchor:(NSLayoutAnchor<AnchorType> *)anchor;
// - (NSLayoutConstraint *)constraintGreaterThanOrEqualToAnchor:(NSLayoutAnchor<AnchorType> *)anchor;
// - (NSLayoutConstraint *)constraintLessThanOrEqualToAnchor:(NSLayoutAnchor<AnchorType> *)anchor;



// - (NSLayoutConstraint *)constraintEqualToAnchor:(NSLayoutAnchor<AnchorType> *)anchor constant:(CGFloat)c;
// - (NSLayoutConstraint *)constraintGreaterThanOrEqualToAnchor:(NSLayoutAnchor<AnchorType> *)anchor constant:(CGFloat)c;
// - (NSLayoutConstraint *)constraintLessThanOrEqualToAnchor:(NSLayoutAnchor<AnchorType> *)anchor constant:(CGFloat)c;
/* @end */





// @class NSLayoutXAxisAnchor;
#ifndef _REWRITER_typedef_NSLayoutXAxisAnchor
#define _REWRITER_typedef_NSLayoutXAxisAnchor
typedef struct objc_object NSLayoutXAxisAnchor;
typedef struct {} _objc_exc_NSLayoutXAxisAnchor;
#endif

#ifndef _REWRITER_typedef_NSLayoutYAxisAnchor
#define _REWRITER_typedef_NSLayoutYAxisAnchor
typedef struct objc_object NSLayoutYAxisAnchor;
typedef struct {} _objc_exc_NSLayoutYAxisAnchor;
#endif

#ifndef _REWRITER_typedef_NSLayoutDimension
#define _REWRITER_typedef_NSLayoutDimension
typedef struct objc_object NSLayoutDimension;
typedef struct {} _objc_exc_NSLayoutDimension;
#endif

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0)))

#ifndef _REWRITER_typedef_NSLayoutXAxisAnchor
#define _REWRITER_typedef_NSLayoutXAxisAnchor
typedef struct objc_object NSLayoutXAxisAnchor;
typedef struct {} _objc_exc_NSLayoutXAxisAnchor;
#endif

struct NSLayoutXAxisAnchor_IMPL {
	struct NSLayoutAnchor_IMPL NSLayoutAnchor_IVARS;
};


// - (NSLayoutDimension *)anchorWithOffsetToAnchor:(NSLayoutXAxisAnchor *)otherAnchor __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0)));

/* @end */


// @interface NSLayoutXAxisAnchor (UIViewDynamicSystemSpacingSupport)





// - (NSLayoutConstraint *)constraintEqualToSystemSpacingAfterAnchor:(NSLayoutXAxisAnchor *)anchor multiplier:(CGFloat)multiplier __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));
// - (NSLayoutConstraint *)constraintGreaterThanOrEqualToSystemSpacingAfterAnchor:(NSLayoutXAxisAnchor *)anchor multiplier:(CGFloat)multiplier __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));
// - (NSLayoutConstraint *)constraintLessThanOrEqualToSystemSpacingAfterAnchor:(NSLayoutXAxisAnchor *)anchor multiplier:(CGFloat)multiplier __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));

/* @end */

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0)))

#ifndef _REWRITER_typedef_NSLayoutYAxisAnchor
#define _REWRITER_typedef_NSLayoutYAxisAnchor
typedef struct objc_object NSLayoutYAxisAnchor;
typedef struct {} _objc_exc_NSLayoutYAxisAnchor;
#endif

struct NSLayoutYAxisAnchor_IMPL {
	struct NSLayoutAnchor_IMPL NSLayoutAnchor_IVARS;
};


// - (NSLayoutDimension *)anchorWithOffsetToAnchor:(NSLayoutYAxisAnchor *)otherAnchor __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0)));

/* @end */


// @interface NSLayoutYAxisAnchor (UIViewDynamicSystemSpacingSupport)







// - (NSLayoutConstraint *)constraintEqualToSystemSpacingBelowAnchor:(NSLayoutYAxisAnchor *)anchor multiplier:(CGFloat)multiplier __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));
// - (NSLayoutConstraint *)constraintGreaterThanOrEqualToSystemSpacingBelowAnchor:(NSLayoutYAxisAnchor *)anchor multiplier:(CGFloat)multiplier __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));
// - (NSLayoutConstraint *)constraintLessThanOrEqualToSystemSpacingBelowAnchor:(NSLayoutYAxisAnchor *)anchor multiplier:(CGFloat)multiplier __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));
/* @end */





__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0)))

#ifndef _REWRITER_typedef_NSLayoutDimension
#define _REWRITER_typedef_NSLayoutDimension
typedef struct objc_object NSLayoutDimension;
typedef struct {} _objc_exc_NSLayoutDimension;
#endif

struct NSLayoutDimension_IMPL {
	struct NSLayoutAnchor_IMPL NSLayoutAnchor_IVARS;
};





// - (NSLayoutConstraint *)constraintEqualToConstant:(CGFloat)c;
// - (NSLayoutConstraint *)constraintGreaterThanOrEqualToConstant:(CGFloat)c;
// - (NSLayoutConstraint *)constraintLessThanOrEqualToConstant:(CGFloat)c;




// - (NSLayoutConstraint *)constraintEqualToAnchor:(NSLayoutDimension *)anchor multiplier:(CGFloat)m;
// - (NSLayoutConstraint *)constraintGreaterThanOrEqualToAnchor:(NSLayoutDimension *)anchor multiplier:(CGFloat)m;
// - (NSLayoutConstraint *)constraintLessThanOrEqualToAnchor:(NSLayoutDimension *)anchor multiplier:(CGFloat)m;




// - (NSLayoutConstraint *)constraintEqualToAnchor:(NSLayoutDimension *)anchor multiplier:(CGFloat)m constant:(CGFloat)c;
// - (NSLayoutConstraint *)constraintGreaterThanOrEqualToAnchor:(NSLayoutDimension *)anchor multiplier:(CGFloat)m constant:(CGFloat)c;
// - (NSLayoutConstraint *)constraintLessThanOrEqualToAnchor:(NSLayoutDimension *)anchor multiplier:(CGFloat)m constant:(CGFloat)c;
/* @end */

#pragma clang assume_nonnull end

typedef NSInteger UIStackViewDistribution; enum {






    UIStackViewDistributionFill = 0,






    UIStackViewDistributionFillEqually,




    UIStackViewDistributionFillProportionally,





    UIStackViewDistributionEqualSpacing,
    UIStackViewDistributionEqualCentering,
} __attribute__((availability(ios,introduced=9_0)));



typedef NSInteger UIStackViewAlignment; enum {



    UIStackViewAlignmentFill,





    UIStackViewAlignmentLeading,
    UIStackViewAlignmentTop = UIStackViewAlignmentLeading,
    UIStackViewAlignmentFirstBaseline,




    UIStackViewAlignmentCenter,





    UIStackViewAlignmentTrailing,
    UIStackViewAlignmentBottom = UIStackViewAlignmentTrailing,
    UIStackViewAlignmentLastBaseline,
} __attribute__((availability(ios,introduced=9_0)));






static const CGFloat UIStackViewSpacingUseDefault __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) = 3.40282347e+38F;
static const CGFloat UIStackViewSpacingUseSystem __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) = 1.17549435e-38F;
#pragma clang assume_nonnull begin
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0)))

#ifndef _REWRITER_typedef_UIStackView
#define _REWRITER_typedef_UIStackView
typedef struct objc_object UIStackView;
typedef struct {} _objc_exc_UIStackView;
#endif

struct UIStackView_IMPL {
	struct UIView_IMPL UIView_IVARS;
};


// - (instancetype)initWithFrame:(CGRect)frame __attribute__((objc_designated_initializer));
// - (instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));
// - (instancetype)initWithArrangedSubviews:(NSArray<__kindof UIView *> *)views;
// @property(nonatomic,readonly,copy) NSArray<__kindof UIView *> *arrangedSubviews;
// - (void)addArrangedSubview:(UIView *)view;







// - (void)removeArrangedSubview:(UIView *)view;





// - (void)insertArrangedSubview:(UIView *)view atIndex:(NSUInteger)stackIndex;




// @property(nonatomic) UILayoutConstraintAxis axis;



// @property(nonatomic) UIStackViewDistribution distribution;




// @property(nonatomic) UIStackViewAlignment alignment;
// @property(nonatomic) CGFloat spacing;
// - (void)setCustomSpacing:(CGFloat)spacing afterView:(UIView *)arrangedSubview __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));
// - (CGFloat)customSpacingAfterView:(UIView *)arrangedSubview __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0)));
// @property(nonatomic,getter=isBaselineRelativeArrangement) BOOL baselineRelativeArrangement;




// @property(nonatomic,getter=isLayoutMarginsRelativeArrangement) BOOL layoutMarginsRelativeArrangement;

/* @end */

#pragma clang assume_nonnull end








// @class NSArray;
#ifndef _REWRITER_typedef_NSArray
#define _REWRITER_typedef_NSArray
typedef struct objc_object NSArray;
typedef struct {} _objc_exc_NSArray;
#endif

#ifndef _REWRITER_typedef_NSLayoutManager
#define _REWRITER_typedef_NSLayoutManager
typedef struct objc_object NSLayoutManager;
typedef struct {} _objc_exc_NSLayoutManager;
#endif

#ifndef _REWRITER_typedef_NSNotification
#define _REWRITER_typedef_NSNotification
typedef struct objc_object NSNotification;
typedef struct {} _objc_exc_NSNotification;
#endif


// @protocol NSTextStorageDelegate;

#pragma clang assume_nonnull begin

typedef NSUInteger NSTextStorageEditActions; enum {
    NSTextStorageEditedAttributes = (1 << 0),
    NSTextStorageEditedCharacters = (1 << 1)
} __attribute__((availability(ios,introduced=7_0)));
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0))) 
#ifndef _REWRITER_typedef_NSTextStorage
#define _REWRITER_typedef_NSTextStorage
typedef struct objc_object NSTextStorage;
typedef struct {} _objc_exc_NSTextStorage;
#endif

struct NSTextStorage_IMPL {
	struct NSMutableAttributedString_IMPL NSMutableAttributedString_IVARS;
};





// @property (readonly, copy, nonatomic) NSArray<NSLayoutManager *> *layoutManagers;


// - (void)addLayoutManager:(NSLayoutManager *)aLayoutManager;


// - (void)removeLayoutManager:(NSLayoutManager *)aLayoutManager;






// @property (readonly, nonatomic) NSTextStorageEditActions editedMask;


// @property (readonly, nonatomic) NSRange editedRange;


// @property (readonly, nonatomic) NSInteger changeInLength;




// @property (nullable, weak, nonatomic) id <NSTextStorageDelegate> delegate;





// - (void)edited:(NSTextStorageEditActions)editedMask range:(NSRange)editedRange changeInLength:(NSInteger)delta;


// - (void)processEditing;





// @property (readonly, nonatomic) BOOL fixesAttributesLazily;


// - (void)invalidateAttributesInRange:(NSRange)range;


// - (void)ensureAttributesAreFixedInRange:(NSRange)range;

/* @end */





// @protocol NSTextStorageDelegate <NSObject>
/* @optional */


// - (void)textStorage:(NSTextStorage *)textStorage willProcessEditing:(NSTextStorageEditActions)editedMask range:(NSRange)editedRange changeInLength:(NSInteger)delta __attribute__((availability(ios,introduced=7_0)));


// - (void)textStorage:(NSTextStorage *)textStorage didProcessEditing:(NSTextStorageEditActions)editedMask range:(NSRange)editedRange changeInLength:(NSInteger)delta __attribute__((availability(ios,introduced=7_0)));

/* @end */




extern "C" __attribute__((visibility ("default"))) NSNotificationName const NSTextStorageWillProcessEditingNotification __attribute__((availability(ios,introduced=7_0)));
extern "C" __attribute__((visibility ("default"))) NSNotificationName const NSTextStorageDidProcessEditingNotification __attribute__((availability(ios,introduced=7_0)));
#pragma clang assume_nonnull end



// @class NSTextContainer;
#ifndef _REWRITER_typedef_NSTextContainer
#define _REWRITER_typedef_NSTextContainer
typedef struct objc_object NSTextContainer;
typedef struct {} _objc_exc_NSTextContainer;
#endif

// @class UIColor;
#ifndef _REWRITER_typedef_UIColor
#define _REWRITER_typedef_UIColor
typedef struct objc_object UIColor;
typedef struct {} _objc_exc_UIColor;
#endif


#pragma clang assume_nonnull begin

// @protocol NSLayoutManagerDelegate;

typedef NSInteger NSTextLayoutOrientation; enum {
    NSTextLayoutOrientationHorizontal = 0,
    NSTextLayoutOrientationVertical = 1,
} __attribute__((availability(ios,introduced=7_0)));

typedef NSInteger NSGlyphProperty; enum {
    NSGlyphPropertyNull = (1 << 0),
    NSGlyphPropertyControlCharacter = (1 << 1),
    NSGlyphPropertyElastic = (1 << 2),
    NSGlyphPropertyNonBaseCharacter = (1 << 3)
} __attribute__((availability(ios,introduced=7_0)));

typedef NSInteger NSControlCharacterAction; enum {
    NSControlCharacterActionZeroAdvancement = (1 << 0),
    NSControlCharacterActionWhitespace = (1 << 1),
    NSControlCharacterActionHorizontalTab = (1 << 2),
    NSControlCharacterActionLineBreak = (1 << 3),
    NSControlCharacterActionParagraphBreak = (1 << 4),
    NSControlCharacterActionContainerBreak = (1 << 5)
} __attribute__((availability(ios,introduced=7_0)));

// @protocol NSTextLayoutOrientationProvider

// @property (readonly, nonatomic) NSTextLayoutOrientation layoutOrientation __attribute__((availability(ios,introduced=7_0)));
/* @end */



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0))) 
#ifndef _REWRITER_typedef_NSLayoutManager
#define _REWRITER_typedef_NSLayoutManager
typedef struct objc_object NSLayoutManager;
typedef struct {} _objc_exc_NSLayoutManager;
#endif

struct NSLayoutManager_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};





// - (instancetype)init __attribute__((objc_designated_initializer));

// - (nullable instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));






// @property (nullable, assign, nonatomic) NSTextStorage *textStorage;






// @property (readonly, nonatomic) NSArray<NSTextContainer *> *textContainers;


// - (void)addTextContainer:(NSTextContainer *)container;


// - (void)insertTextContainer:(NSTextContainer *)container atIndex:(NSUInteger)index;


// - (void)removeTextContainerAtIndex:(NSUInteger)index;


// - (void)textContainerChangedGeometry:(NSTextContainer *)container;





// @property (nullable, weak, nonatomic) id <NSLayoutManagerDelegate> delegate;





// @property (nonatomic) BOOL showsInvisibleCharacters;


// @property (nonatomic) BOOL showsControlCharacters;


// @property (nonatomic) CGFloat hyphenationFactor;


// @property (nonatomic) BOOL usesFontLeading;


// @property (nonatomic) BOOL allowsNonContiguousLayout __attribute__((availability(ios,introduced=7_0)));


// @property (readonly, nonatomic) BOOL hasNonContiguousLayout __attribute__((availability(ios,introduced=7_0)));






// - (void)invalidateGlyphsForCharacterRange:(NSRange)charRange changeInLength:(NSInteger)delta actualCharacterRange:(nullable NSRangePointer)actualCharRange;


// - (void)invalidateLayoutForCharacterRange:(NSRange)charRange actualCharacterRange:(nullable NSRangePointer)actualCharRange __attribute__((availability(ios,introduced=7_0)));


// - (void)invalidateDisplayForCharacterRange:(NSRange)charRange;
// - (void)invalidateDisplayForGlyphRange:(NSRange)glyphRange;


// - (void)processEditingForTextStorage:(NSTextStorage *)textStorage edited:(NSTextStorageEditActions)editMask range:(NSRange)newCharRange changeInLength:(NSInteger)delta invalidatedRange:(NSRange)invalidatedCharRange __attribute__((availability(ios,introduced=7_0)));





// - (void)ensureGlyphsForCharacterRange:(NSRange)charRange;
// - (void)ensureGlyphsForGlyphRange:(NSRange)glyphRange;
// - (void)ensureLayoutForCharacterRange:(NSRange)charRange;
// - (void)ensureLayoutForGlyphRange:(NSRange)glyphRange;
// - (void)ensureLayoutForTextContainer:(NSTextContainer *)container;
// - (void)ensureLayoutForBoundingRect:(CGRect)bounds inTextContainer:(NSTextContainer *)container;





// - (void)setGlyphs:(const CGGlyph *)glyphs properties:(const NSGlyphProperty *)props characterIndexes:(const NSUInteger *)charIndexes font:(UIFont *)aFont forGlyphRange:(NSRange)glyphRange __attribute__((availability(ios,introduced=7_0)));





// @property (readonly, nonatomic) NSUInteger numberOfGlyphs;


// - (CGGlyph)CGGlyphAtIndex:(NSUInteger)glyphIndex isValidIndex:(nullable BOOL *)isValidIndex __attribute__((availability(ios,introduced=7_0)));
// - (CGGlyph)CGGlyphAtIndex:(NSUInteger)glyphIndex __attribute__((availability(ios,introduced=7_0)));
// - (BOOL)isValidGlyphIndex:(NSUInteger)glyphIndex __attribute__((availability(macosx,introduced=10.0))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=9.0)));


// - (NSGlyphProperty)propertyForGlyphAtIndex:(NSUInteger)glyphIndex __attribute__((availability(ios,introduced=7_0)));


// - (NSUInteger)characterIndexForGlyphAtIndex:(NSUInteger)glyphIndex;


// - (NSUInteger)glyphIndexForCharacterAtIndex:(NSUInteger)charIndex;


// - (NSUInteger)getGlyphsInRange:(NSRange)glyphRange glyphs:(nullable CGGlyph *)glyphBuffer properties:(nullable NSGlyphProperty *)props characterIndexes:(nullable NSUInteger *)charIndexBuffer bidiLevels:(nullable unsigned char *)bidiLevelBuffer __attribute__((availability(ios,introduced=7_0)));





// - (void)setTextContainer:(NSTextContainer *)container forGlyphRange:(NSRange)glyphRange;


// - (void)setLineFragmentRect:(CGRect)fragmentRect forGlyphRange:(NSRange)glyphRange usedRect:(CGRect)usedRect;


// - (void)setExtraLineFragmentRect:(CGRect)fragmentRect usedRect:(CGRect)usedRect textContainer:(NSTextContainer *)container;


// - (void)setLocation:(CGPoint)location forStartOfGlyphRange:(NSRange)glyphRange;


// - (void)setNotShownAttribute:(BOOL)flag forGlyphAtIndex:(NSUInteger)glyphIndex;


// - (void)setDrawsOutsideLineFragment:(BOOL)flag forGlyphAtIndex:(NSUInteger)glyphIndex;


// - (void)setAttachmentSize:(CGSize)attachmentSize forGlyphRange:(NSRange)glyphRange;





// - (void)getFirstUnlaidCharacterIndex:(nullable NSUInteger *)charIndex glyphIndex:(nullable NSUInteger *)glyphIndex;
// - (NSUInteger)firstUnlaidCharacterIndex;
// - (NSUInteger)firstUnlaidGlyphIndex;


// - (nullable NSTextContainer *)textContainerForGlyphAtIndex:(NSUInteger)glyphIndex effectiveRange:(nullable NSRangePointer)effectiveGlyphRange;
// - (nullable NSTextContainer *)textContainerForGlyphAtIndex:(NSUInteger)glyphIndex effectiveRange:(nullable NSRangePointer)effectiveGlyphRange withoutAdditionalLayout:(BOOL)flag __attribute__((availability(ios,introduced=9_0)));



// - (CGRect)usedRectForTextContainer:(NSTextContainer *)container;


// - (CGRect)lineFragmentRectForGlyphAtIndex:(NSUInteger)glyphIndex effectiveRange:(nullable NSRangePointer)effectiveGlyphRange;
// - (CGRect)lineFragmentRectForGlyphAtIndex:(NSUInteger)glyphIndex effectiveRange:(nullable NSRangePointer)effectiveGlyphRange withoutAdditionalLayout:(BOOL)flag __attribute__((availability(ios,introduced=9_0)));


// - (CGRect)lineFragmentUsedRectForGlyphAtIndex:(NSUInteger)glyphIndex effectiveRange:(nullable NSRangePointer)effectiveGlyphRange;
// - (CGRect)lineFragmentUsedRectForGlyphAtIndex:(NSUInteger)glyphIndex effectiveRange:(nullable NSRangePointer)effectiveGlyphRange withoutAdditionalLayout:(BOOL)flag __attribute__((availability(ios,introduced=9_0)));


// @property (readonly, nonatomic) CGRect extraLineFragmentRect;
// @property (readonly, nonatomic) CGRect extraLineFragmentUsedRect;
// @property (nullable, readonly, nonatomic) NSTextContainer *extraLineFragmentTextContainer;



// - (CGPoint)locationForGlyphAtIndex:(NSUInteger)glyphIndex;


// - (BOOL)notShownAttributeForGlyphAtIndex:(NSUInteger)glyphIndex;


// - (BOOL)drawsOutsideLineFragmentForGlyphAtIndex:(NSUInteger)glyphIndex;


// - (CGSize)attachmentSizeForGlyphAtIndex:(NSUInteger)glyphIndex;



// - (NSRange)truncatedGlyphRangeInLineFragmentForGlyphAtIndex:(NSUInteger)glyphIndex __attribute__((availability(ios,introduced=7_0)));





// - (NSRange)glyphRangeForCharacterRange:(NSRange)charRange actualCharacterRange:(nullable NSRangePointer)actualCharRange;


// - (NSRange)characterRangeForGlyphRange:(NSRange)glyphRange actualGlyphRange:(nullable NSRangePointer)actualGlyphRange;


// - (NSRange)glyphRangeForTextContainer:(NSTextContainer *)container;


// - (NSRange)rangeOfNominallySpacedGlyphsContainingIndex:(NSUInteger)glyphIndex;


// - (CGRect)boundingRectForGlyphRange:(NSRange)glyphRange inTextContainer:(NSTextContainer *)container;


// - (NSRange)glyphRangeForBoundingRect:(CGRect)bounds inTextContainer:(NSTextContainer *)container;
// - (NSRange)glyphRangeForBoundingRectWithoutAdditionalLayout:(CGRect)bounds inTextContainer:(NSTextContainer *)container;


// - (NSUInteger)glyphIndexForPoint:(CGPoint)point inTextContainer:(NSTextContainer *)container fractionOfDistanceThroughGlyph:(nullable CGFloat *)partialFraction;
// - (NSUInteger)glyphIndexForPoint:(CGPoint)point inTextContainer:(NSTextContainer *)container;
// - (CGFloat)fractionOfDistanceThroughGlyphForPoint:(CGPoint)point inTextContainer:(NSTextContainer *)container;


// - (NSUInteger)characterIndexForPoint:(CGPoint)point inTextContainer:(NSTextContainer *)container fractionOfDistanceBetweenInsertionPoints:(nullable CGFloat *)partialFraction;


// - (NSUInteger)getLineFragmentInsertionPointsForCharacterAtIndex:(NSUInteger)charIndex alternatePositions:(BOOL)aFlag inDisplayOrder:(BOOL)dFlag positions:(nullable CGFloat *)positions characterIndexes:(nullable NSUInteger *)charIndexes;


// - (void)enumerateLineFragmentsForGlyphRange:(NSRange)glyphRange usingBlock:(void (^)(CGRect rect, CGRect usedRect, NSTextContainer *textContainer, NSRange glyphRange, BOOL *stop))block __attribute__((availability(ios,introduced=7_0)));


// - (void)enumerateEnclosingRectsForGlyphRange:(NSRange)glyphRange withinSelectedGlyphRange:(NSRange)selectedRange inTextContainer:(NSTextContainer *)textContainer usingBlock:(void (^)(CGRect rect, BOOL *stop))block __attribute__((availability(ios,introduced=7_0)));




// - (void)drawBackgroundForGlyphRange:(NSRange)glyphsToShow atPoint:(CGPoint)origin;
// - (void)drawGlyphsForGlyphRange:(NSRange)glyphsToShow atPoint:(CGPoint)origin;


// - (void)showCGGlyphs:(const CGGlyph *)glyphs positions:(const CGPoint *)positions count:(NSUInteger)glyphCount font:(UIFont *)font matrix:(CGAffineTransform)textMatrix attributes:(NSDictionary<NSAttributedStringKey, id> *)attributes inContext:(CGContextRef)graphicsContext __attribute__((availability(ios,introduced=7_0)));


// - (void)fillBackgroundRectArray:(const CGRect *)rectArray count:(NSUInteger)rectCount forCharacterRange:(NSRange)charRange color:(UIColor *)color __attribute__((availability(ios,introduced=7_0)));


// - (void)drawUnderlineForGlyphRange:(NSRange)glyphRange underlineType:(NSUnderlineStyle)underlineVal baselineOffset:(CGFloat)baselineOffset lineFragmentRect:(CGRect)lineRect lineFragmentGlyphRange:(NSRange)lineGlyphRange containerOrigin:(CGPoint)containerOrigin;
// - (void)underlineGlyphRange:(NSRange)glyphRange underlineType:(NSUnderlineStyle)underlineVal lineFragmentRect:(CGRect)lineRect lineFragmentGlyphRange:(NSRange)lineGlyphRange containerOrigin:(CGPoint)containerOrigin;


// - (void)drawStrikethroughForGlyphRange:(NSRange)glyphRange strikethroughType:(NSUnderlineStyle)strikethroughVal baselineOffset:(CGFloat)baselineOffset lineFragmentRect:(CGRect)lineRect lineFragmentGlyphRange:(NSRange)lineGlyphRange containerOrigin:(CGPoint)containerOrigin;
// - (void)strikethroughGlyphRange:(NSRange)glyphRange strikethroughType:(NSUnderlineStyle)strikethroughVal lineFragmentRect:(CGRect)lineRect lineFragmentGlyphRange:(NSRange)lineGlyphRange containerOrigin:(CGPoint)containerOrigin;

/* @end */



// @protocol NSLayoutManagerDelegate <NSObject>
/* @optional */



// - (NSUInteger)layoutManager:(NSLayoutManager *)layoutManager shouldGenerateGlyphs:(const CGGlyph *)glyphs properties:(const NSGlyphProperty *)props characterIndexes:(const NSUInteger *)charIndexes font:(UIFont *)aFont forGlyphRange:(NSRange)glyphRange __attribute__((availability(ios,introduced=7_0)));






// - (CGFloat)layoutManager:(NSLayoutManager *)layoutManager lineSpacingAfterGlyphAtIndex:(NSUInteger)glyphIndex withProposedLineFragmentRect:(CGRect)rect __attribute__((availability(ios,introduced=7_0)));


// - (CGFloat)layoutManager:(NSLayoutManager *)layoutManager paragraphSpacingBeforeGlyphAtIndex:(NSUInteger)glyphIndex withProposedLineFragmentRect:(CGRect)rect __attribute__((availability(ios,introduced=7_0)));


// - (CGFloat)layoutManager:(NSLayoutManager *)layoutManager paragraphSpacingAfterGlyphAtIndex:(NSUInteger)glyphIndex withProposedLineFragmentRect:(CGRect)rect __attribute__((availability(ios,introduced=7_0)));


// - (NSControlCharacterAction)layoutManager:(NSLayoutManager *)layoutManager shouldUseAction:(NSControlCharacterAction)action forControlCharacterAtIndex:(NSUInteger)charIndex __attribute__((availability(ios,introduced=7_0)));


// - (BOOL)layoutManager:(NSLayoutManager *)layoutManager shouldBreakLineByWordBeforeCharacterAtIndex:(NSUInteger)charIndex __attribute__((availability(ios,introduced=7_0)));


// - (BOOL)layoutManager:(NSLayoutManager *)layoutManager shouldBreakLineByHyphenatingBeforeCharacterAtIndex:(NSUInteger)charIndex __attribute__((availability(ios,introduced=7_0)));


// - (CGRect)layoutManager:(NSLayoutManager *)layoutManager boundingBoxForControlGlyphAtIndex:(NSUInteger)glyphIndex forTextContainer:(NSTextContainer *)textContainer proposedLineFragment:(CGRect)proposedRect glyphPosition:(CGPoint)glyphPosition characterIndex:(NSUInteger)charIndex __attribute__((availability(ios,introduced=7_0)));


// - (BOOL)layoutManager:(NSLayoutManager *)layoutManager shouldSetLineFragmentRect:(inout CGRect *)lineFragmentRect lineFragmentUsedRect:(inout CGRect *)lineFragmentUsedRect baselineOffset:(inout CGFloat *)baselineOffset inTextContainer:(NSTextContainer *)textContainer forGlyphRange:(NSRange)glyphRange __attribute__((availability(ios,introduced=9_0)));




// - (void)layoutManagerDidInvalidateLayout:(NSLayoutManager *)sender __attribute__((availability(ios,introduced=7_0)));


// - (void)layoutManager:(NSLayoutManager *)layoutManager didCompleteLayoutForTextContainer:(nullable NSTextContainer *)textContainer atEnd:(BOOL)layoutFinishedFlag __attribute__((availability(ios,introduced=7_0)));


// - (void)layoutManager:(NSLayoutManager *)layoutManager textContainer:(NSTextContainer *)textContainer didChangeGeometryFromSize:(CGSize)oldSize __attribute__((availability(ios,introduced=7_0)));

/* @end */




enum {
    NSControlCharacterZeroAdvancementAction __attribute__((availability(ios,introduced=7_0,deprecated=9_0,message="" "Use NSControlCharacterActionZeroAdvancement instead"))) = NSControlCharacterActionZeroAdvancement,
    NSControlCharacterWhitespaceAction __attribute__((availability(ios,introduced=7_0,deprecated=9_0,message="" "Use NSControlCharacterActionWhitespace instead"))) = NSControlCharacterActionWhitespace,
    NSControlCharacterHorizontalTabAction __attribute__((availability(ios,introduced=7_0,deprecated=9_0,message="" "Use NSControlCharacterActionHorizontalTab instead"))) = NSControlCharacterActionHorizontalTab,
    NSControlCharacterLineBreakAction __attribute__((availability(ios,introduced=7_0,deprecated=9_0,message="" "Use NSControlCharacterActionLineBreak instead"))) = NSControlCharacterActionLineBreak,
    NSControlCharacterParagraphBreakAction __attribute__((availability(ios,introduced=7_0,deprecated=9_0,message="" "Use NSControlCharacterActionParagraphBreak instead"))) = NSControlCharacterActionParagraphBreak,
    NSControlCharacterContainerBreakAction __attribute__((availability(ios,introduced=7_0,deprecated=9_0,message="" "Use NSControlCharacterActionContainerBreak instead"))) = NSControlCharacterActionContainerBreak
};

// @interface NSLayoutManager (NSLayoutManagerDeprecated)

// - (CGGlyph)glyphAtIndex:(NSUInteger)glyphIndex isValidIndex:(nullable BOOL *)isValidIndex;
// - (CGGlyph)glyphAtIndex:(NSUInteger)glyphIndex;
/* @end */

#pragma clang assume_nonnull end






#pragma clang assume_nonnull begin






__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0))) 
#ifndef _REWRITER_typedef_NSShadow
#define _REWRITER_typedef_NSShadow
typedef struct objc_object NSShadow;
typedef struct {} _objc_exc_NSShadow;
#endif

struct NSShadow_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)init __attribute__((objc_designated_initializer));
// - (nullable instancetype)initWithCoder:(NSCoder *)aDecoder __attribute__((objc_designated_initializer));

// @property (nonatomic, assign) CGSize shadowOffset;
// @property (nonatomic, assign) CGFloat shadowBlurRadius;
// @property (nullable, nonatomic, strong) id shadowColor;

/* @end */

#pragma clang assume_nonnull end


// @class NSStringDrawingContext;
#ifndef _REWRITER_typedef_NSStringDrawingContext
#define _REWRITER_typedef_NSStringDrawingContext
typedef struct objc_object NSStringDrawingContext;
typedef struct {} _objc_exc_NSStringDrawingContext;
#endif


#pragma clang assume_nonnull begin



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0))) 
#ifndef _REWRITER_typedef_NSStringDrawingContext
#define _REWRITER_typedef_NSStringDrawingContext
typedef struct objc_object NSStringDrawingContext;
typedef struct {} _objc_exc_NSStringDrawingContext;
#endif

struct NSStringDrawingContext_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};



// @property (nonatomic) CGFloat minimumScaleFactor;


// @property (readonly, nonatomic) CGFloat actualScaleFactor;


// @property (readonly, nonatomic) CGRect totalBounds;

/* @end */


// @interface NSString(NSStringDrawing)
// - (CGSize)sizeWithAttributes:(nullable NSDictionary<NSAttributedStringKey, id> *)attrs __attribute__((availability(ios,introduced=7_0)));
// - (void)drawAtPoint:(CGPoint)point withAttributes:(nullable NSDictionary<NSAttributedStringKey, id> *)attrs __attribute__((availability(ios,introduced=7_0)));
// - (void)drawInRect:(CGRect)rect withAttributes:(nullable NSDictionary<NSAttributedStringKey, id> *)attrs __attribute__((availability(ios,introduced=7_0)));
/* @end */


// @interface NSAttributedString(NSStringDrawing)
// - (CGSize)size __attribute__((availability(ios,introduced=6_0)));
// - (void)drawAtPoint:(CGPoint)point __attribute__((availability(ios,introduced=6_0)));
// - (void)drawInRect:(CGRect)rect __attribute__((availability(ios,introduced=6_0)));
/* @end */


typedef NSInteger NSStringDrawingOptions; enum {
    NSStringDrawingUsesLineFragmentOrigin = 1 << 0,
    NSStringDrawingUsesFontLeading = 1 << 1,
    NSStringDrawingUsesDeviceMetrics = 1 << 3,
    NSStringDrawingTruncatesLastVisibleLine __attribute__((availability(ios,introduced=6_0))) = 1 << 5,

} __attribute__((availability(ios,introduced=6_0)));




// @interface NSString (NSExtendedStringDrawing)
// - (void)drawWithRect:(CGRect)rect options:(NSStringDrawingOptions)options attributes:(nullable NSDictionary<NSAttributedStringKey, id> *)attributes context:(nullable NSStringDrawingContext *)context __attribute__((availability(ios,introduced=7_0)));
// - (CGRect)boundingRectWithSize:(CGSize)size options:(NSStringDrawingOptions)options attributes:(nullable NSDictionary<NSAttributedStringKey, id> *)attributes context:(nullable NSStringDrawingContext *)context __attribute__((availability(ios,introduced=7_0)));
/* @end */


// @interface NSAttributedString (NSExtendedStringDrawing)
// - (void)drawWithRect:(CGRect)rect options:(NSStringDrawingOptions)options context:(nullable NSStringDrawingContext *)context __attribute__((availability(ios,introduced=6_0)));
// - (CGRect)boundingRectWithSize:(CGSize)size options:(NSStringDrawingOptions)options context:(nullable NSStringDrawingContext *)context __attribute__((availability(ios,introduced=6_0)));
/* @end */



// @interface NSStringDrawingContext (NSStringDrawingContextDeprecated)
// @property (nonatomic) CGFloat minimumTrackingAdjustment __attribute__((availability(ios,introduced=6_0,deprecated=7_0,message="" ))) __attribute__((availability(tvos,unavailable)));
// @property (nonatomic, readonly) CGFloat actualTrackingAdjustment __attribute__((availability(ios,introduced=6_0,deprecated=7_0,message="" ))) __attribute__((availability(tvos,unavailable)));
/* @end */

#pragma clang assume_nonnull end




// @class UIBezierPath;
#ifndef _REWRITER_typedef_UIBezierPath
#define _REWRITER_typedef_UIBezierPath
typedef struct objc_object UIBezierPath;
typedef struct {} _objc_exc_UIBezierPath;
#endif


#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0))) 
#ifndef _REWRITER_typedef_NSTextContainer
#define _REWRITER_typedef_NSTextContainer
typedef struct objc_object NSTextContainer;
typedef struct {} _objc_exc_NSTextContainer;
#endif

struct NSTextContainer_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};




// - (instancetype)initWithSize:(CGSize)size __attribute__((objc_designated_initializer)) __attribute__((availability(ios,introduced=7_0)));
// - (instancetype)initWithCoder:(NSCoder *)coder __attribute__((objc_designated_initializer));






// @property (nullable, assign, nonatomic) NSLayoutManager *layoutManager;


// - (void)replaceLayoutManager:(NSLayoutManager *)newLayoutManager __attribute__((availability(ios,introduced=9_0)));





// @property (nonatomic) CGSize size __attribute__((availability(ios,introduced=7_0)));


// @property (copy, nonatomic) NSArray<UIBezierPath *> *exclusionPaths __attribute__((availability(ios,introduced=7_0)));


// @property (nonatomic) NSLineBreakMode lineBreakMode __attribute__((availability(ios,introduced=7_0)));




// @property (nonatomic) CGFloat lineFragmentPadding;


// @property (nonatomic) NSUInteger maximumNumberOfLines __attribute__((availability(ios,introduced=7_0)));




// - (CGRect)lineFragmentRectForProposedRect:(CGRect)proposedRect atIndex:(NSUInteger)characterIndex writingDirection:(NSWritingDirection)baseWritingDirection remainingRect:(nullable CGRect *)remainingRect __attribute__((availability(ios,introduced=7_0)));


// @property (getter=isSimpleRectangularTextContainer, readonly, nonatomic) BOOL simpleRectangularTextContainer __attribute__((availability(ios,introduced=9_0)));





// @property (nonatomic) BOOL widthTracksTextView;
// @property (nonatomic) BOOL heightTracksTextView;

/* @end */

#pragma clang assume_nonnull end





#pragma clang assume_nonnull begin

// @protocol UIPreviewInteractionDelegate;

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=10_0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIPreviewInteraction
#define _REWRITER_typedef_UIPreviewInteraction
typedef struct objc_object UIPreviewInteraction;
typedef struct {} _objc_exc_UIPreviewInteraction;
#endif

struct UIPreviewInteraction_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)initWithView:(UIView *)view __attribute__((objc_designated_initializer));
// @property (nonatomic, readonly, weak) UIView *view;

// - (instancetype)init __attribute__((unavailable));

// @property (nonatomic, nullable, weak) id <UIPreviewInteractionDelegate> delegate;

// - (CGPoint)locationInCoordinateSpace:(nullable id <UICoordinateSpace>)coordinateSpace;
// - (void)cancelInteraction;

/* @end */


// @protocol UIPreviewInteractionDelegate <NSObject>

// - (void)previewInteraction:(UIPreviewInteraction *)previewInteraction didUpdatePreviewTransition:(CGFloat)transitionProgress ended:(BOOL)ended __attribute__((availability(ios,introduced=10_0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
// - (void)previewInteractionDidCancel:(UIPreviewInteraction *)previewInteraction __attribute__((availability(ios,introduced=10_0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

/* @optional */

// - (BOOL)previewInteractionShouldBegin:(UIPreviewInteraction *)previewInteraction __attribute__((availability(ios,introduced=10_0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));


// - (void)previewInteraction:(UIPreviewInteraction *)previewInteraction didUpdateCommitTransition:(CGFloat)transitionProgress ended:(BOOL)ended __attribute__((availability(ios,introduced=10_0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIPopoverPresentationController;
#ifndef _REWRITER_typedef_UIPopoverPresentationController
#define _REWRITER_typedef_UIPopoverPresentationController
typedef struct objc_object UIPopoverPresentationController;
typedef struct {} _objc_exc_UIPopoverPresentationController;
#endif


__attribute__((availability(tvos,unavailable)))
// @protocol UIPopoverPresentationControllerDelegate <UIAdaptivePresentationControllerDelegate>
/* @optional */

// - (void)prepareForPopoverPresentation:(UIPopoverPresentationController *)popoverPresentationController;



// - (BOOL)popoverPresentationControllerShouldDismissPopover:(UIPopoverPresentationController *)popoverPresentationController;


// - (void)popoverPresentationControllerDidDismissPopover:(UIPopoverPresentationController *)popoverPresentationController;



// - (void)popoverPresentationController:(UIPopoverPresentationController *)popoverPresentationController willRepositionPopoverToRect:(inout CGRect *)rect inView:(inout UIView * _Nonnull * _Nonnull)view;

/* @end */


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIPopoverPresentationController
#define _REWRITER_typedef_UIPopoverPresentationController
typedef struct objc_object UIPopoverPresentationController;
typedef struct {} _objc_exc_UIPopoverPresentationController;
#endif

struct UIPopoverPresentationController_IMPL {
	struct UIPresentationController_IMPL UIPresentationController_IVARS;
};


// @property (nullable, nonatomic, weak) id <UIPopoverPresentationControllerDelegate> delegate;

// @property (nonatomic, assign) UIPopoverArrowDirection permittedArrowDirections;

// @property (nullable, nonatomic, strong) UIView *sourceView;
// @property (nonatomic, assign) CGRect sourceRect;



// @property (nonatomic, assign) BOOL canOverlapSourceViewRect __attribute__((availability(ios,introduced=9_0)));

// @property (nullable, nonatomic, strong) UIBarButtonItem *barButtonItem;


// @property (nonatomic, readonly) UIPopoverArrowDirection arrowDirection;




// @property (nullable, nonatomic, copy) NSArray<UIView *> *passthroughViews;


// @property (nullable, nonatomic, copy) UIColor *backgroundColor;





// @property (nonatomic, readwrite) UIEdgeInsets popoverLayoutMargins;



// @property (nullable, nonatomic, readwrite, strong) Class <UIPopoverBackgroundViewMethods> popoverBackgroundViewClass;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIDynamicBehavior;
#ifndef _REWRITER_typedef_UIDynamicBehavior
#define _REWRITER_typedef_UIDynamicBehavior
typedef struct objc_object UIDynamicBehavior;
typedef struct {} _objc_exc_UIDynamicBehavior;
#endif

// @class UIDynamicAnimator;
#ifndef _REWRITER_typedef_UIDynamicAnimator
#define _REWRITER_typedef_UIDynamicAnimator
typedef struct objc_object UIDynamicAnimator;
typedef struct {} _objc_exc_UIDynamicAnimator;
#endif


// @protocol UIDynamicAnimatorDelegate <NSObject>

/* @optional */
// - (void)dynamicAnimatorWillResume:(UIDynamicAnimator *)animator;
// - (void)dynamicAnimatorDidPause:(UIDynamicAnimator *)animator;

/* @end */


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0))) 
#ifndef _REWRITER_typedef_UIDynamicAnimator
#define _REWRITER_typedef_UIDynamicAnimator
typedef struct objc_object UIDynamicAnimator;
typedef struct {} _objc_exc_UIDynamicAnimator;
#endif

struct UIDynamicAnimator_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};




// - (instancetype)initWithReferenceView:(UIView *)view __attribute__((objc_designated_initializer));

// - (void)addBehavior:(UIDynamicBehavior *)behavior;
// - (void)removeBehavior:(UIDynamicBehavior *)behavior;
// - (void)removeAllBehaviors;

// @property (nullable, nonatomic, readonly) UIView *referenceView;
// @property (nonatomic, readonly, copy) NSArray<__kindof UIDynamicBehavior*> *behaviors;


// - (NSArray<id<UIDynamicItem>> *)itemsInRect:(CGRect)rect;

// - (void)updateItemUsingCurrentState:(id <UIDynamicItem>)item;

// @property (nonatomic, readonly, getter = isRunning) BOOL running;

// @property (nonatomic, readonly) NSTimeInterval elapsedTime;




// @property (nullable, nonatomic, weak) id <UIDynamicAnimatorDelegate> delegate;

/* @end */


// @interface UIDynamicAnimator (UICollectionViewAdditions)



// - (instancetype)initWithCollectionViewLayout:(UICollectionViewLayout *)layout;


// - (nullable UICollectionViewLayoutAttributes *)layoutAttributesForCellAtIndexPath:(NSIndexPath *)indexPath;
// - (nullable UICollectionViewLayoutAttributes *)layoutAttributesForSupplementaryViewOfKind:(NSString *)kind atIndexPath:(NSIndexPath *)indexPath;
// - (nullable UICollectionViewLayoutAttributes *)layoutAttributesForDecorationViewOfKind:(NSString *)decorationViewKind atIndexPath:(NSIndexPath *)indexPath;

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

typedef NSInteger UIPushBehaviorMode; enum {
    UIPushBehaviorModeContinuous,
    UIPushBehaviorModeInstantaneous
} __attribute__((availability(ios,introduced=7_0)));

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0))) 
#ifndef _REWRITER_typedef_UIPushBehavior
#define _REWRITER_typedef_UIPushBehavior
typedef struct objc_object UIPushBehavior;
typedef struct {} _objc_exc_UIPushBehavior;
#endif

struct UIPushBehavior_IMPL {
	struct UIDynamicBehavior_IMPL UIDynamicBehavior_IVARS;
};


// - (instancetype)initWithItems:(NSArray<id <UIDynamicItem>> *)items mode:(UIPushBehaviorMode)mode __attribute__((objc_designated_initializer));

// - (void)addItem:(id <UIDynamicItem>)item;
// - (void)removeItem:(id <UIDynamicItem>)item;
// @property (nonatomic, readonly, copy) NSArray<id <UIDynamicItem>> *items;

// - (UIOffset)targetOffsetFromCenterForItem:(id <UIDynamicItem>)item;
// - (void)setTargetOffsetFromCenter:(UIOffset)o forItem:(id <UIDynamicItem>)item;

// @property (nonatomic, readonly) UIPushBehaviorMode mode;
// @property (nonatomic, readwrite) BOOL active;

// @property (readwrite, nonatomic) CGFloat angle;

// @property (readwrite, nonatomic) CGFloat magnitude;
// @property (readwrite, nonatomic) CGVector pushDirection;

// - (void)setAngle:(CGFloat)angle magnitude:(CGFloat)magnitude;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0))) 
#ifndef _REWRITER_typedef_UISnapBehavior
#define _REWRITER_typedef_UISnapBehavior
typedef struct objc_object UISnapBehavior;
typedef struct {} _objc_exc_UISnapBehavior;
#endif

struct UISnapBehavior_IMPL {
	struct UIDynamicBehavior_IMPL UIDynamicBehavior_IVARS;
};



// - (instancetype)initWithItem:(id <UIDynamicItem>)item snapToPoint:(CGPoint)point __attribute__((objc_designated_initializer));

// @property (nonatomic, assign) CGPoint snapPoint __attribute__((availability(ios,introduced=9_0)));
// @property (nonatomic, assign) CGFloat damping;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0))) 
#ifndef _REWRITER_typedef_UIDynamicItemBehavior
#define _REWRITER_typedef_UIDynamicItemBehavior
typedef struct objc_object UIDynamicItemBehavior;
typedef struct {} _objc_exc_UIDynamicItemBehavior;
#endif

struct UIDynamicItemBehavior_IMPL {
	struct UIDynamicBehavior_IMPL UIDynamicBehavior_IVARS;
};


// - (instancetype)initWithItems:(NSArray<id <UIDynamicItem>> *)items __attribute__((objc_designated_initializer));

// - (void)addItem:(id <UIDynamicItem>)item;
// - (void)removeItem:(id <UIDynamicItem>)item;
// @property (nonatomic, readonly, copy) NSArray<id <UIDynamicItem>> *items;

// @property (readwrite, nonatomic) CGFloat elasticity;
// @property (readwrite, nonatomic) CGFloat friction;
// @property (readwrite, nonatomic) CGFloat density;
// @property (readwrite, nonatomic) CGFloat resistance;
// @property (readwrite, nonatomic) CGFloat angularResistance;






// @property (readwrite, nonatomic) CGFloat charge __attribute__((availability(ios,introduced=9_0)));






// @property (nonatomic, getter = isAnchored) BOOL anchored __attribute__((availability(ios,introduced=9_0)));

// @property (readwrite, nonatomic) BOOL allowsRotation;



// - (void)addLinearVelocity:(CGPoint)velocity forItem:(id <UIDynamicItem>)item;
// - (CGPoint)linearVelocityForItem:(id <UIDynamicItem>)item;



// - (void)addAngularVelocity:(CGFloat)velocity forItem:(id <UIDynamicItem>)item;
// - (CGFloat)angularVelocityForItem:(id <UIDynamicItem>)item;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UIRegion;
#ifndef _REWRITER_typedef_UIRegion
#define _REWRITER_typedef_UIRegion
typedef struct objc_object UIRegion;
typedef struct {} _objc_exc_UIRegion;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0))) 
#ifndef _REWRITER_typedef_UIFieldBehavior
#define _REWRITER_typedef_UIFieldBehavior
typedef struct objc_object UIFieldBehavior;
typedef struct {} _objc_exc_UIFieldBehavior;
#endif

struct UIFieldBehavior_IMPL {
	struct UIDynamicBehavior_IMPL UIDynamicBehavior_IVARS;
};


// - (instancetype)init __attribute__((unavailable));

// - (void)addItem:(id <UIDynamicItem>)item;
// - (void)removeItem:(id <UIDynamicItem>)item;

// @property (nonatomic, readonly, copy) NSArray<id <UIDynamicItem>> *items;




// @property (nonatomic, assign) CGPoint position;





// @property (nonatomic, strong) UIRegion *region;


// @property (nonatomic, assign) CGFloat strength;






// @property (nonatomic, assign) CGFloat falloff;


// @property (nonatomic, assign) CGFloat minimumRadius;






// @property (nonatomic, assign) CGVector direction;





// @property (nonatomic, assign) CGFloat smoothness;





// @property (nonatomic, assign) CGFloat animationSpeed;





// + (instancetype)dragField;






// + (instancetype)vortexField;







// + (instancetype)radialGravityFieldWithPosition:(CGPoint)position;
// + (instancetype)linearGravityFieldWithVector:(CGVector)direction;







// + (instancetype)velocityFieldWithVector:(CGVector)direction;
// + (instancetype)noiseFieldWithSmoothness:(CGFloat)smoothness animationSpeed:(CGFloat)speed;
// + (instancetype)turbulenceFieldWithSmoothness:(CGFloat)smoothness animationSpeed:(CGFloat)speed;






// + (instancetype)springField;







// + (instancetype)electricField;
// + (instancetype)magneticField;
// + (instancetype)fieldWithEvaluationBlock:(CGVector(^)(UIFieldBehavior *field, CGPoint position, CGVector velocity, CGFloat mass, CGFloat charge, NSTimeInterval deltaTime))block;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0))) 
#ifndef _REWRITER_typedef_UIGravityBehavior
#define _REWRITER_typedef_UIGravityBehavior
typedef struct objc_object UIGravityBehavior;
typedef struct {} _objc_exc_UIGravityBehavior;
#endif

struct UIGravityBehavior_IMPL {
	struct UIDynamicBehavior_IMPL UIDynamicBehavior_IVARS;
};


// - (instancetype)initWithItems:(NSArray<id <UIDynamicItem>> *)items __attribute__((objc_designated_initializer));

// - (void)addItem:(id <UIDynamicItem>)item;
// - (void)removeItem:(id <UIDynamicItem>)item;
// @property (nonatomic, readonly, copy) NSArray<id <UIDynamicItem>> *items;



// @property (readwrite, nonatomic) CGVector gravityDirection;

// @property (readwrite, nonatomic) CGFloat angle;
// @property (readwrite, nonatomic) CGFloat magnitude;
// - (void)setAngle:(CGFloat)angle magnitude:(CGFloat)magnitude;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

typedef NSInteger UIAttachmentBehaviorType; enum {
    UIAttachmentBehaviorTypeItems,
    UIAttachmentBehaviorTypeAnchor
} __attribute__((availability(ios,introduced=7_0)));

typedef struct {
    CGFloat minimum;
    CGFloat maximum;
} UIFloatRange;

extern "C" __attribute__((visibility ("default"))) const UIFloatRange UIFloatRangeZero __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility ("default"))) const UIFloatRange UIFloatRangeInfinite __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility ("default"))) BOOL UIFloatRangeIsInfinite(UIFloatRange range) __attribute__((availability(ios,introduced=9_0)));
extern "C" __attribute__((visibility ("default"))) BOOL UIFloatRangeIsEqualToRange(UIFloatRange range, UIFloatRange otherRange) __attribute__((availability(ios,introduced=9_0)));

static inline UIFloatRange UIFloatRangeMake(CGFloat minimum, CGFloat maximum) {
    return (UIFloatRange){minimum, maximum};
}

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0))) 
#ifndef _REWRITER_typedef_UIAttachmentBehavior
#define _REWRITER_typedef_UIAttachmentBehavior
typedef struct objc_object UIAttachmentBehavior;
typedef struct {} _objc_exc_UIAttachmentBehavior;
#endif

struct UIAttachmentBehavior_IMPL {
	struct UIDynamicBehavior_IMPL UIDynamicBehavior_IVARS;
};


// - (instancetype)initWithItem:(id <UIDynamicItem>)item attachedToAnchor:(CGPoint)point;
// - (instancetype)initWithItem:(id <UIDynamicItem>)item offsetFromCenter:(UIOffset)offset attachedToAnchor:(CGPoint)point __attribute__((objc_designated_initializer));

// - (instancetype)initWithItem:(id <UIDynamicItem>)item1 attachedToItem:(id <UIDynamicItem>)item2;
// - (instancetype)initWithItem:(id <UIDynamicItem>)item1 offsetFromCenter:(UIOffset)offset1 attachedToItem:(id <UIDynamicItem>)item2 offsetFromCenter:(UIOffset)offset2 __attribute__((objc_designated_initializer));
// + (instancetype)slidingAttachmentWithItem:(id <UIDynamicItem>)item1 attachedToItem:(id <UIDynamicItem>)item2 attachmentAnchor:(CGPoint)point axisOfTranslation:(CGVector)axis __attribute__((availability(ios,introduced=9_0)));
// + (instancetype)slidingAttachmentWithItem:(id <UIDynamicItem>)item attachmentAnchor:(CGPoint)point axisOfTranslation:(CGVector)axis __attribute__((availability(ios,introduced=9_0)));
// + (instancetype)limitAttachmentWithItem:(id <UIDynamicItem>)item1 offsetFromCenter:(UIOffset)offset1 attachedToItem:(id <UIDynamicItem>)item2 offsetFromCenter:(UIOffset)offset2 __attribute__((availability(ios,introduced=9_0)));
// + (instancetype)fixedAttachmentWithItem:(id <UIDynamicItem>)item1 attachedToItem:(id <UIDynamicItem>)item2 attachmentAnchor:(CGPoint)point __attribute__((availability(ios,introduced=9_0)));
// + (instancetype)pinAttachmentWithItem:(id <UIDynamicItem>)item1 attachedToItem:(id <UIDynamicItem>)item2 attachmentAnchor:(CGPoint)point __attribute__((availability(ios,introduced=9_0)));

// @property (nonatomic, readonly, copy) NSArray<id <UIDynamicItem>> *items;

// @property (readonly, nonatomic) UIAttachmentBehaviorType attachedBehaviorType;

// @property (readwrite, nonatomic) CGPoint anchorPoint;

// @property (readwrite, nonatomic) CGFloat length;
// @property (readwrite, nonatomic) CGFloat damping;
// @property (readwrite, nonatomic) CGFloat frequency;
// @property (readwrite, nonatomic) CGFloat frictionTorque __attribute__((availability(ios,introduced=9_0)));
// @property (readwrite, nonatomic) UIFloatRange attachmentRange __attribute__((availability(ios,introduced=9_0)));

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class UICollisionBehavior;
#ifndef _REWRITER_typedef_UICollisionBehavior
#define _REWRITER_typedef_UICollisionBehavior
typedef struct objc_object UICollisionBehavior;
typedef struct {} _objc_exc_UICollisionBehavior;
#endif


typedef NSUInteger UICollisionBehaviorMode; enum {
    UICollisionBehaviorModeItems = 1 << 0,
    UICollisionBehaviorModeBoundaries = 1 << 1,
    UICollisionBehaviorModeEverything = (9223372036854775807L *2UL+1UL)
} __attribute__((availability(ios,introduced=7_0)));

// @protocol UICollisionBehaviorDelegate <NSObject>
/* @optional */

// - (void)collisionBehavior:(UICollisionBehavior *)behavior beganContactForItem:(id <UIDynamicItem>)item1 withItem:(id <UIDynamicItem>)item2 atPoint:(CGPoint)p;
// - (void)collisionBehavior:(UICollisionBehavior *)behavior endedContactForItem:(id <UIDynamicItem>)item1 withItem:(id <UIDynamicItem>)item2;


// - (void)collisionBehavior:(UICollisionBehavior*)behavior beganContactForItem:(id <UIDynamicItem>)item withBoundaryIdentifier:(nullable id <NSCopying>)identifier atPoint:(CGPoint)p;
// - (void)collisionBehavior:(UICollisionBehavior*)behavior endedContactForItem:(id <UIDynamicItem>)item withBoundaryIdentifier:(nullable id <NSCopying>)identifier;

/* @end */



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0))) 
#ifndef _REWRITER_typedef_UICollisionBehavior
#define _REWRITER_typedef_UICollisionBehavior
typedef struct objc_object UICollisionBehavior;
typedef struct {} _objc_exc_UICollisionBehavior;
#endif

struct UICollisionBehavior_IMPL {
	struct UIDynamicBehavior_IMPL UIDynamicBehavior_IVARS;
};


// - (instancetype)initWithItems:(NSArray<id <UIDynamicItem>> *)items __attribute__((objc_designated_initializer));

// - (void)addItem:(id <UIDynamicItem>)item;
// - (void)removeItem:(id <UIDynamicItem>)item;

// @property (nonatomic, readonly, copy) NSArray<id <UIDynamicItem>> *items;

// @property (nonatomic, readwrite) UICollisionBehaviorMode collisionMode;

// @property (nonatomic, readwrite) BOOL translatesReferenceBoundsIntoBoundary;
// - (void)setTranslatesReferenceBoundsIntoBoundaryWithInsets:(UIEdgeInsets)insets;

// - (void)addBoundaryWithIdentifier:(id <NSCopying>)identifier forPath:(UIBezierPath *)bezierPath;
// - (void)addBoundaryWithIdentifier:(id <NSCopying>)identifier fromPoint:(CGPoint)p1 toPoint:(CGPoint)p2;
// - (nullable UIBezierPath *)boundaryWithIdentifier:(id <NSCopying>)identifier;
// - (void)removeBoundaryWithIdentifier:(id <NSCopying>)identifier;
// @property (nullable, nonatomic, readonly, copy) NSArray<id <NSCopying>> *boundaryIdentifiers;
// - (void)removeAllBoundaries;

// @property (nullable, nonatomic, weak, readwrite) id <UICollisionBehaviorDelegate> collisionDelegate;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0))) 
#ifndef _REWRITER_typedef_UIRegion
#define _REWRITER_typedef_UIRegion
typedef struct objc_object UIRegion;
typedef struct {} _objc_exc_UIRegion;
#endif

struct UIRegion_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};





@property(class, nonatomic, readonly) UIRegion *infiniteRegion;






// - (instancetype)initWithRadius:(CGFloat)radius;



// - (instancetype)initWithSize:(CGSize)size;





// - (instancetype)inverseRegion;



// - (instancetype)regionByUnionWithRegion:(UIRegion *)region;



// - (instancetype)regionByDifferenceFromRegion:(UIRegion *)region;



// - (instancetype)regionByIntersectionWithRegion:(UIRegion *)region;



// - (BOOL)containsPoint:(CGPoint)point;

/* @end */

#pragma clang assume_nonnull end






// @class UIImage;
#ifndef _REWRITER_typedef_UIImage
#define _REWRITER_typedef_UIImage
typedef struct objc_object UIImage;
typedef struct {} _objc_exc_UIImage;
#endif


#pragma clang assume_nonnull begin

extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_UITextDragPreviewRenderer
#define _REWRITER_typedef_UITextDragPreviewRenderer
typedef struct objc_object UITextDragPreviewRenderer;
typedef struct {} _objc_exc_UITextDragPreviewRenderer;
#endif

struct UITextDragPreviewRenderer_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)initWithLayoutManager:(NSLayoutManager*)layoutManager range:(NSRange)range;
// - (instancetype)initWithLayoutManager:(NSLayoutManager*)layoutManager range:(NSRange)range unifyRects:(BOOL)unifyRects __attribute__((objc_designated_initializer));

// + (instancetype)new __attribute__((unavailable));
// - (instancetype)init __attribute__((unavailable));

// @property (nonatomic, readonly) NSLayoutManager *layoutManager;
// @property (nonatomic, readonly) UIImage *image;
// @property (nonatomic, readonly) CGRect firstLineRect;
// @property (nonatomic, readonly) CGRect bodyRect;
// @property (nonatomic, readonly) CGRect lastLineRect;

// - (void)adjustFirstLineRect:(inout CGRect*)firstLineRect bodyRect:(inout CGRect*)bodyRect lastLineRect:(inout CGRect*)lastLineRect textOrigin:(CGPoint)origin;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin







// @interface UIDragPreview (URLPreviews)

// + (instancetype)previewForURL:(NSURL *)url __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));



// + (instancetype)previewForURL:(NSURL *)url title:(NSString * _Nullable)title __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

/* @end */



// @interface UITargetedDragPreview (URLPreviews)

// + (instancetype)previewForURL:(NSURL *)url target:(UIDragPreviewTarget*)target __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));



// + (instancetype)previewForURL:(NSURL *)url title:(NSString * _Nullable)title target:(UIDragPreviewTarget*)target __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

/* @end */

#pragma clang assume_nonnull end



#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0))) 
#ifndef _REWRITER_typedef_UIViewPropertyAnimator
#define _REWRITER_typedef_UIViewPropertyAnimator
typedef struct objc_object UIViewPropertyAnimator;
typedef struct {} _objc_exc_UIViewPropertyAnimator;
#endif

struct UIViewPropertyAnimator_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property(nullable, nonatomic, copy, readonly) id <UITimingCurveProvider> timingParameters;

// @property(nonatomic, readonly) NSTimeInterval duration;


// @property(nonatomic, readonly) NSTimeInterval delay;


// @property(nonatomic, getter=isUserInteractionEnabled) BOOL userInteractionEnabled;


// @property(nonatomic, getter=isManualHitTestingEnabled) BOOL manualHitTestingEnabled;


// @property(nonatomic, getter=isInterruptible) BOOL interruptible;


// @property(nonatomic) BOOL scrubsLinearly __attribute__((availability(ios,introduced=11_0)));


// @property(nonatomic) BOOL pausesOnCompletion __attribute__((availability(ios,introduced=11_0)));

// - (instancetype)initWithDuration:(NSTimeInterval)duration timingParameters:(id <UITimingCurveProvider>)parameters __attribute__((objc_designated_initializer));


// - (instancetype)initWithDuration:(NSTimeInterval)duration curve:(UIViewAnimationCurve)curve animations:(void (^ _Nullable)(void))animations;
// - (instancetype)initWithDuration:(NSTimeInterval)duration controlPoint1:(CGPoint)point1 controlPoint2:(CGPoint)point2 animations:(void (^ _Nullable)(void))animations;
// - (instancetype)initWithDuration:(NSTimeInterval)duration dampingRatio:(CGFloat)ratio animations:(void (^ _Nullable)(void))animations;
#if 0
+ (instancetype)runningPropertyAnimatorWithDuration:(NSTimeInterval)duration
                                              delay:(NSTimeInterval)delay
                                            options:(UIViewAnimationOptions)options
                                         animations:(void (^)(void))animations
                                         completion:(void (^ _Nullable)(UIViewAnimatingPosition finalPosition))completion;
#endif






// - (void)addAnimations:(void (^)(void))animation delayFactor:(CGFloat)delayFactor;
// - (void)addAnimations:(void (^)(void))animation;

// - (void)addCompletion:(void (^)(UIViewAnimatingPosition finalPosition))completion;







// - (void)continueAnimationWithTimingParameters:(nullable id <UITimingCurveProvider>)parameters durationFactor:(CGFloat)durationFactor;


/* @end */

#pragma clang assume_nonnull end



#pragma clang assume_nonnull begin


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=10_0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIFeedbackGenerator
#define _REWRITER_typedef_UIFeedbackGenerator
typedef struct objc_object UIFeedbackGenerator;
typedef struct {} _objc_exc_UIFeedbackGenerator;
#endif

struct UIFeedbackGenerator_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};




// - (void)prepare;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=10_0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UISelectionFeedbackGenerator
#define _REWRITER_typedef_UISelectionFeedbackGenerator
typedef struct objc_object UISelectionFeedbackGenerator;
typedef struct {} _objc_exc_UISelectionFeedbackGenerator;
#endif

struct UISelectionFeedbackGenerator_IMPL {
	struct UIFeedbackGenerator_IMPL UIFeedbackGenerator_IVARS;
};



// - (void)selectionChanged;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

typedef NSInteger UIImpactFeedbackStyle; enum {
    UIImpactFeedbackStyleLight,
    UIImpactFeedbackStyleMedium,
    UIImpactFeedbackStyleHeavy
};


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=10_0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIImpactFeedbackGenerator
#define _REWRITER_typedef_UIImpactFeedbackGenerator
typedef struct objc_object UIImpactFeedbackGenerator;
typedef struct {} _objc_exc_UIImpactFeedbackGenerator;
#endif

struct UIImpactFeedbackGenerator_IMPL {
	struct UIFeedbackGenerator_IMPL UIFeedbackGenerator_IVARS;
};


// - (instancetype)initWithStyle:(UIImpactFeedbackStyle)style;


// - (void)impactOccurred;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

typedef NSInteger UINotificationFeedbackType; enum {
    UINotificationFeedbackTypeSuccess,
    UINotificationFeedbackTypeWarning,
    UINotificationFeedbackTypeError
};


extern "C" __attribute__((visibility ("default"))) __attribute__((availability(ios,introduced=10_0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UINotificationFeedbackGenerator
#define _REWRITER_typedef_UINotificationFeedbackGenerator
typedef struct objc_object UINotificationFeedbackGenerator;
typedef struct {} _objc_exc_UINotificationFeedbackGenerator;
#endif

struct UINotificationFeedbackGenerator_IMPL {
	struct UIFeedbackGenerator_IMPL UIFeedbackGenerator_IVARS;
};



// - (void)notificationOccurred:(UINotificationFeedbackType)notificationType;

/* @end */

#pragma clang assume_nonnull end



#pragma clang assume_nonnull begin

// @protocol UIDocumentBrowserViewControllerDelegate;
// @class UIImage;
#ifndef _REWRITER_typedef_UIImage
#define _REWRITER_typedef_UIImage
typedef struct objc_object UIImage;
typedef struct {} _objc_exc_UIImage;
#endif

#ifndef _REWRITER_typedef_UIColor
#define _REWRITER_typedef_UIColor
typedef struct objc_object UIColor;
typedef struct {} _objc_exc_UIColor;
#endif

#ifndef _REWRITER_typedef_UIActivity
#define _REWRITER_typedef_UIActivity
typedef struct objc_object UIActivity;
typedef struct {} _objc_exc_UIActivity;
#endif

#ifndef _REWRITER_typedef_UIActivityViewController
#define _REWRITER_typedef_UIActivityViewController
typedef struct objc_object UIActivityViewController;
typedef struct {} _objc_exc_UIActivityViewController;
#endif

#ifndef _REWRITER_typedef_UIDocumentBrowserAction
#define _REWRITER_typedef_UIDocumentBrowserAction
typedef struct objc_object UIDocumentBrowserAction;
typedef struct {} _objc_exc_UIDocumentBrowserAction;
#endif

#ifndef _REWRITER_typedef_UIDocumentBrowserTransitionController
#define _REWRITER_typedef_UIDocumentBrowserTransitionController
typedef struct objc_object UIDocumentBrowserTransitionController;
typedef struct {} _objc_exc_UIDocumentBrowserTransitionController;
#endif


extern NSString * const UIDocumentBrowserErrorDomain __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
typedef NSInteger UIDocumentBrowserErrorCode; enum {
    UIDocumentBrowserErrorGeneric = 1,
} __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

typedef NSUInteger UIDocumentBrowserImportMode; enum {
    UIDocumentBrowserImportModeNone,
    UIDocumentBrowserImportModeCopy,
    UIDocumentBrowserImportModeMove,
} __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((swift_name("UIDocumentBrowserViewController.ImportMode")));

typedef NSUInteger UIDocumentBrowserUserInterfaceStyle; enum {
    UIDocumentBrowserUserInterfaceStyleWhite = 0,
    UIDocumentBrowserUserInterfaceStyleLight,
    UIDocumentBrowserUserInterfaceStyleDark,
} __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((swift_name("UIDocumentBrowserViewController.BrowserUserInterfaceStyle")));





__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_UIDocumentBrowserViewController
#define _REWRITER_typedef_UIDocumentBrowserViewController
typedef struct objc_object UIDocumentBrowserViewController;
typedef struct {} _objc_exc_UIDocumentBrowserViewController;
#endif

struct UIDocumentBrowserViewController_IMPL {
	struct UIViewController_IMPL UIViewController_IVARS;
};



// - (instancetype)initForOpeningFilesWithContentTypes:(nullable NSArray <NSString *> *)allowedContentTypes __attribute__((objc_designated_initializer));


// - (instancetype)initWithNibName:(nullable NSString *)nibName bundle:(nullable NSBundle *)bundle __attribute__((unavailable));

// @property (nullable, nonatomic, weak) id <UIDocumentBrowserViewControllerDelegate> delegate;





// @property (assign, nonatomic) BOOL allowsDocumentCreation;


// @property (assign, nonatomic) BOOL allowsPickingMultipleItems;

// @property (readonly, copy, nonatomic) NSArray<NSString *> *allowedContentTypes;





// @property (strong, nonatomic) NSArray <UIBarButtonItem *> *additionalLeadingNavigationBarButtonItems;


// @property (strong, nonatomic) NSArray <UIBarButtonItem *> *additionalTrailingNavigationBarButtonItems;






// - (void)revealDocumentAtURL:(NSURL *)url importIfNeeded:(BOOL)importIfNeeded completion:(nullable void(^)(NSURL * _Nullable revealedDocumentURL, NSError * _Nullable error))completion;





// - (void)importDocumentAtURL:(NSURL *)documentURL nextToDocumentAtURL:(NSURL *)neighbourURL mode:(UIDocumentBrowserImportMode)importMode completionHandler:(void (^)(NSURL * _Nullable, NSError * _Nullable))completion;





// - (UIDocumentBrowserTransitionController *)transitionControllerForDocumentURL:(NSURL *)documentURL;





// @property (strong, nonatomic) NSArray <UIDocumentBrowserAction *> *customActions;




// @property (assign, nonatomic) UIDocumentBrowserUserInterfaceStyle browserUserInterfaceStyle;


/* @end */




__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable)))
// @protocol UIDocumentBrowserViewControllerDelegate <NSObject>

/* @optional */



// - (void)documentBrowser:(UIDocumentBrowserViewController *)controller didPickDocumentURLs:(NSArray <NSURL *> *)documentURLs;
// - (void)documentBrowser:(UIDocumentBrowserViewController *)controller didRequestDocumentCreationWithHandler:(void(^)(NSURL *_Nullable urlToImport, UIDocumentBrowserImportMode importMode))importHandler;
// - (void)documentBrowser:(UIDocumentBrowserViewController *)controller didImportDocumentAtURL:(NSURL *)sourceURL toDestinationURL:(NSURL *)destinationURL;
// - (void)documentBrowser:(UIDocumentBrowserViewController *)controller failedToImportDocumentAtURL:(NSURL *)documentURL error:(NSError * _Nullable)error;




// - (NSArray<__kindof UIActivity *> *)documentBrowser:(UIDocumentBrowserViewController *)controller applicationActivitiesForDocumentURLs:(NSArray <NSURL *> *)documentURLs;


// - (void)documentBrowser:(UIDocumentBrowserViewController *)controller willPresentActivityViewController:(UIActivityViewController *)activityViewController;

/* @end */








__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_UIDocumentBrowserTransitionController
#define _REWRITER_typedef_UIDocumentBrowserTransitionController
typedef struct objc_object UIDocumentBrowserTransitionController;
typedef struct {} _objc_exc_UIDocumentBrowserTransitionController;
#endif

struct UIDocumentBrowserTransitionController_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)init __attribute__((unavailable));


// @property (strong, nonatomic, nullable) NSProgress *loadingProgress;





// @property (weak, nullable, nonatomic) UIView *targetView;

/* @end */

#pragma clang assume_nonnull end
// @class UIImage;
#ifndef _REWRITER_typedef_UIImage
#define _REWRITER_typedef_UIImage
typedef struct objc_object UIImage;
typedef struct {} _objc_exc_UIImage;
#endif


#pragma clang assume_nonnull begin

typedef NSInteger UIDocumentBrowserActionAvailability; enum {
    UIDocumentBrowserActionAvailabilityMenu = 1,
    UIDocumentBrowserActionAvailabilityNavigationBar = 1 << 1,
} __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) __attribute__((swift_name("UIDocumentBrowserAction.Availability")));


__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,unavailable))) 
#ifndef _REWRITER_typedef_UIDocumentBrowserAction
#define _REWRITER_typedef_UIDocumentBrowserAction
typedef struct objc_object UIDocumentBrowserAction;
typedef struct {} _objc_exc_UIDocumentBrowserAction;
#endif

struct UIDocumentBrowserAction_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)init __attribute__((unavailable));
// - (instancetype)initWithIdentifier:(NSString *)identifier localizedTitle:(NSString *)localizedTitle availability:(UIDocumentBrowserActionAvailability)availability handler:(void(^)(NSArray <NSURL *> *))handler __attribute__((objc_designated_initializer));

// @property (nonatomic, readonly) NSString *identifier;
// @property (nonatomic, readonly) NSString *localizedTitle;
// @property (nonatomic, readonly) UIDocumentBrowserActionAvailability availability;

// @property (nonatomic, strong, nullable) UIImage *image;


// @property (nonatomic, copy) NSArray<NSString*> *supportedContentTypes;


// @property (nonatomic, assign) BOOL supportsMultipleItems;

/* @end */

#pragma clang assume_nonnull end


#ifndef _REWRITER_typedef_BlockController
#define _REWRITER_typedef_BlockController
typedef struct objc_object BlockController;
typedef struct {} _objc_exc_BlockController;
#endif

struct BlockController_IMPL {
	struct UIViewController_IMPL UIViewController_IVARS;
};


/* @end */











extern "C" const CFTimeInterval AVCoreAnimationBeginTimeAtZero __attribute__((availability(ios,introduced=4_0)));

typedef NSString * AVLayerVideoGravity __attribute__((swift_wrapper(enum)));







extern "C" AVLayerVideoGravity const AVLayerVideoGravityResizeAspect __attribute__((availability(ios,introduced=4_0)));
extern "C" AVLayerVideoGravity const AVLayerVideoGravityResizeAspectFill __attribute__((availability(ios,introduced=4_0)));







extern "C" AVLayerVideoGravity const AVLayerVideoGravityResize __attribute__((availability(ios,introduced=4_0)));
#pragma clang assume_nonnull begin

typedef NSInteger AVKeyValueStatus; enum {
 AVKeyValueStatusUnknown,
 AVKeyValueStatusLoading,
 AVKeyValueStatusLoaded,
 AVKeyValueStatusFailed,
 AVKeyValueStatusCancelled
};
// @protocol AVAsynchronousKeyValueLoading
/* @required */
// - (AVKeyValueStatus)statusOfValueForKey:(NSString *)key error:(NSError * _Nullable * _Nullable)outError;
// - (void)loadValuesAsynchronouslyForKeys:(NSArray<NSString *> *)keys completionHandler:(nullable void (^)(void))handler;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin
// @class AVContentKeySessionInternal;
#ifndef _REWRITER_typedef_AVContentKeySessionInternal
#define _REWRITER_typedef_AVContentKeySessionInternal
typedef struct objc_object AVContentKeySessionInternal;
typedef struct {} _objc_exc_AVContentKeySessionInternal;
#endif

// @class AVContentKeyRequest;
#ifndef _REWRITER_typedef_AVContentKeyRequest
#define _REWRITER_typedef_AVContentKeyRequest
typedef struct objc_object AVContentKeyRequest;
typedef struct {} _objc_exc_AVContentKeyRequest;
#endif

// @class AVContentKeyResponse;
#ifndef _REWRITER_typedef_AVContentKeyResponse
#define _REWRITER_typedef_AVContentKeyResponse
typedef struct objc_object AVContentKeyResponse;
typedef struct {} _objc_exc_AVContentKeyResponse;
#endif

// @class AVPersistableContentKeyRequest;
#ifndef _REWRITER_typedef_AVPersistableContentKeyRequest
#define _REWRITER_typedef_AVPersistableContentKeyRequest
typedef struct objc_object AVPersistableContentKeyRequest;
typedef struct {} _objc_exc_AVPersistableContentKeyRequest;
#endif

// @protocol AVContentKeyRecipient;
// @protocol AVContentKeySessionDelegate;





typedef NSString *AVContentKeySystem __attribute__((swift_wrapper(enum))) __attribute__((availability(macos,introduced=10.12.4))) __attribute__((availability(ios,introduced=10.3))) __attribute__((availability(tvos,introduced=10.2))) __attribute__((availability(watchos,unavailable)));





extern "C" AVContentKeySystem const AVContentKeySystemFairPlayStreaming __attribute__((availability(macos,introduced=10.12.4))) __attribute__((availability(ios,introduced=10.3))) __attribute__((availability(tvos,introduced=10.2))) __attribute__((availability(watchos,unavailable)));





extern "C" AVContentKeySystem const AVContentKeySystemClearKey __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,unavailable)));

__attribute__((availability(macos,introduced=10.12.4))) __attribute__((availability(ios,introduced=10.3))) __attribute__((availability(tvos,introduced=10.2))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_AVContentKeySession
#define _REWRITER_typedef_AVContentKeySession
typedef struct objc_object AVContentKeySession;
typedef struct {} _objc_exc_AVContentKeySession;
#endif

struct AVContentKeySession_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVContentKeySessionInternal *__strong _session;
};

// + (instancetype)contentKeySessionWithKeySystem:(AVContentKeySystem)keySystem __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,unavailable)));
// + (instancetype)contentKeySessionWithKeySystem:(AVContentKeySystem)keySystem storageDirectoryAtURL:(NSURL *)storageURL;
// - (void)setDelegate:(nullable id <AVContentKeySessionDelegate>)delegate queue:(nullable dispatch_queue_t)delegateQueue;






// @property (readonly, weak, nullable) id<AVContentKeySessionDelegate> delegate;






// @property (readonly, nullable) dispatch_queue_t delegateQueue;






// @property (readonly, nullable) NSURL *storageURL;





// @property (readonly) AVContentKeySystem keySystem;






// - (void)expire;






// @property (readonly, nullable) NSData *contentProtectionSessionIdentifier;
// - (void)processContentKeyRequestWithIdentifier:(nullable id)identifier initializationData:(nullable NSData *)initializationData options:(nullable NSDictionary<NSString *, id> *)options;






// - (void)renewExpiringResponseDataForContentKeyRequest:(AVContentKeyRequest *)contentKeyRequest;
#if 0
- (void)makeSecureTokenForExpirationDateOfPersistableContentKey:(NSData *)persistableContentKeyData
             completionHandler:(void (^)(NSData * _Nullable secureTokenData, NSError * _Nullable error))handler __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(macosx,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
#endif


/* @end */


// @interface AVContentKeySession (AVContentKeyRecipients)






// - (void)addContentKeyRecipient:(id<AVContentKeyRecipient>)recipient;






// - (void)removeContentKeyRecipient:(id<AVContentKeyRecipient>)recipient;





// @property (readonly) NSArray<id<AVContentKeyRecipient>> *contentKeyRecipients;

/* @end */


// @interface AVContentKeySession (AVContentKeySessionPendingExpiredSessionReports)
// + (NSArray <NSData *> *)pendingExpiredSessionReportsWithAppIdentifier:(NSData *)appIdentifier storageDirectoryAtURL:(NSURL *)storageURL;
// + (void)removePendingExpiredSessionReports:(NSArray <NSData *> *)expiredSessionReports withAppIdentifier:(NSData *)appIdentifier storageDirectoryAtURL:(NSURL *)storageURL;

/* @end */






typedef NSString *AVContentKeyRequestRetryReason __attribute__((swift_wrapper(enum))) __attribute__((availability(macos,introduced=10.12.4))) __attribute__((availability(ios,introduced=10.3))) __attribute__((availability(tvos,introduced=10.2))) __attribute__((availability(watchos,unavailable)));





extern "C" AVContentKeyRequestRetryReason const AVContentKeyRequestRetryReasonTimedOut __attribute__((availability(macos,introduced=10.12.4))) __attribute__((availability(ios,introduced=10.3))) __attribute__((availability(tvos,introduced=10.2))) __attribute__((availability(watchos,unavailable)));





extern "C" AVContentKeyRequestRetryReason const AVContentKeyRequestRetryReasonReceivedResponseWithExpiredLease __attribute__((availability(macos,introduced=10.12.4))) __attribute__((availability(ios,introduced=10.3))) __attribute__((availability(tvos,introduced=10.2))) __attribute__((availability(watchos,unavailable)));





extern "C" AVContentKeyRequestRetryReason const AVContentKeyRequestRetryReasonReceivedObsoleteContentKey __attribute__((availability(macos,introduced=10.12.4))) __attribute__((availability(ios,introduced=10.3))) __attribute__((availability(tvos,introduced=10.2))) __attribute__((availability(watchos,unavailable)));

__attribute__((availability(macos,introduced=10.12.4))) __attribute__((availability(ios,introduced=10.3))) __attribute__((availability(tvos,introduced=10.2))) __attribute__((availability(watchos,unavailable)))
// @protocol AVContentKeySessionDelegate <NSObject>
/* @required */
// - (void)contentKeySession:(AVContentKeySession *)session didProvideContentKeyRequest:(AVContentKeyRequest *)keyRequest;
/* @optional */
// - (void)contentKeySession:(AVContentKeySession *)session didProvideRenewingContentKeyRequest:(AVContentKeyRequest *)keyRequest;
/* @optional */
// - (void)contentKeySession:(AVContentKeySession *)session didProvidePersistableContentKeyRequest:(AVPersistableContentKeyRequest *)keyRequest;
/* @optional */
// - (void)contentKeySession:(AVContentKeySession *)session didUpdatePersistableContentKey:(NSData *)persistableContentKey forContentKeyIdentifier:(id)keyIdentifier __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
/* @optional */
// - (void)contentKeySession:(AVContentKeySession *)session contentKeyRequest:(AVContentKeyRequest *)keyRequest didFailWithError:(NSError *)err;
/* @optional */
// - (BOOL)contentKeySession:(AVContentKeySession *)session shouldRetryContentKeyRequest:(AVContentKeyRequest *)keyRequest reason:(AVContentKeyRequestRetryReason)retryReason;





/* @optional */
// - (void)contentKeySessionContentProtectionSessionIdentifierDidChange:(AVContentKeySession *)session;

/* @end */

typedef NSInteger AVContentKeyRequestStatus; enum {
    AVContentKeyRequestStatusRequestingResponse,
    AVContentKeyRequestStatusReceivedResponse,
    AVContentKeyRequestStatusRenewed,
 AVContentKeyRequestStatusRetried,
    AVContentKeyRequestStatusCancelled,
    AVContentKeyRequestStatusFailed
} __attribute__((availability(macos,introduced=10.12.4))) __attribute__((availability(ios,introduced=10.3))) __attribute__((availability(tvos,introduced=10.2))) __attribute__((availability(watchos,unavailable)));

// @class AVContentKeyRequestInternal;
#ifndef _REWRITER_typedef_AVContentKeyRequestInternal
#define _REWRITER_typedef_AVContentKeyRequestInternal
typedef struct objc_object AVContentKeyRequestInternal;
typedef struct {} _objc_exc_AVContentKeyRequestInternal;
#endif


__attribute__((availability(macos,introduced=10.12.4))) __attribute__((availability(ios,introduced=10.3))) __attribute__((availability(tvos,introduced=10.2))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_AVContentKeyRequest
#define _REWRITER_typedef_AVContentKeyRequest
typedef struct objc_object AVContentKeyRequest;
typedef struct {} _objc_exc_AVContentKeyRequest;
#endif

struct AVContentKeyRequest_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVContentKeyRequestInternal *__strong _contentKeyRequest;
};






// @property (readonly) AVContentKeyRequestStatus status;






// @property (readonly, nullable) NSError *error;






// @property (readonly, nullable) id identifier;





// @property (nonatomic, readonly, nullable) NSData *initializationData;






// @property (readonly) BOOL canProvidePersistableContentKey;
#if 0
- (void)makeStreamingContentKeyRequestDataForApp:(NSData *)appIdentifier
                               contentIdentifier:(NSData *)contentIdentifier
                                         options:(nullable NSDictionary<NSString *, id> *)options
                               completionHandler:(void (^)(NSData * _Nullable contentKeyRequestData, NSError * _Nullable error))handler;
#endif

// - (void)processContentKeyResponse:(AVContentKeyResponse *)keyResponse;







// - (void)processContentKeyResponseError:(NSError *)error;






// - (void)respondByRequestingPersistableContentKeyRequest __attribute__((availability(ios,introduced=10.3,deprecated=11.2,message="Use respondByRequestingPersistableContentKeyRequestAndReturnError: instead."))) __attribute__((availability(macos,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
// - (BOOL)respondByRequestingPersistableContentKeyRequestAndReturnError:(NSError **)outError __attribute__((availability(ios,introduced=11.2))) __attribute__((availability(macos,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));

/* @end */


__attribute__((availability(ios,introduced=10.3))) __attribute__((availability(macos,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_AVPersistableContentKeyRequest
#define _REWRITER_typedef_AVPersistableContentKeyRequest
typedef struct objc_object AVPersistableContentKeyRequest;
typedef struct {} _objc_exc_AVPersistableContentKeyRequest;
#endif

struct AVPersistableContentKeyRequest_IMPL {
	struct AVContentKeyRequest_IMPL AVContentKeyRequest_IVARS;
};

#if 0
- (nullable NSData *)persistableContentKeyFromKeyVendorResponse:(NSData *)keyVendorResponse
                                                        options:(nullable NSDictionary <NSString *, id> *)options
                                                          error:(NSError * _Nullable * _Nullable)outError;
#endif


/* @end */


// @interface AVContentKeyRequest (AVContentKeyRequestRenewal)





// @property (readonly) BOOL renewsExpiringResponseData;

/* @end */


// @class AVContentKeyResponseInternal;
#ifndef _REWRITER_typedef_AVContentKeyResponseInternal
#define _REWRITER_typedef_AVContentKeyResponseInternal
typedef struct objc_object AVContentKeyResponseInternal;
typedef struct {} _objc_exc_AVContentKeyResponseInternal;
#endif






__attribute__((availability(macos,introduced=10.12.4))) __attribute__((availability(ios,introduced=10.3))) __attribute__((availability(tvos,introduced=10.2))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_AVContentKeyResponse
#define _REWRITER_typedef_AVContentKeyResponse
typedef struct objc_object AVContentKeyResponse;
typedef struct {} _objc_exc_AVContentKeyResponse;
#endif

struct AVContentKeyResponse_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVContentKeyResponseInternal *__strong _keyResponse;
};

// + (instancetype)contentKeyResponseWithFairPlayStreamingKeyResponseData:(NSData *)keyResponseData;
// + (instancetype)contentKeyResponseWithClearKeyData:(NSData *)keyData initializationVector:(nullable NSData *)initializationVector __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,unavailable)));

/* @end */







extern "C" NSString *const AVContentKeyRequestProtocolVersionsKey __attribute__((availability(macos,introduced=10.12.4))) __attribute__((availability(ios,introduced=10.3))) __attribute__((availability(tvos,introduced=10.2))) __attribute__((availability(watchos,unavailable)));







__attribute__((availability(macos,introduced=10.12.4))) __attribute__((availability(ios,introduced=10.3))) __attribute__((availability(tvos,introduced=10.2))) __attribute__((availability(watchos,introduced=3.3)))
// @protocol AVContentKeyRecipient

/* @required */






// @property (nonatomic, readonly) BOOL mayRequireContentKeysForMediaDataProcessing;

/* @end */

#pragma clang assume_nonnull end
typedef NSString * AVMediaType __attribute__((swift_wrapper(struct)));

extern "C" AVMediaType const AVMediaTypeVideo __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMediaType const AVMediaTypeAudio __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMediaType const AVMediaTypeText __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMediaType const AVMediaTypeClosedCaption __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMediaType const AVMediaTypeSubtitle __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMediaType const AVMediaTypeTimecode __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMediaType const AVMediaTypeMetadata __attribute__((availability(ios,introduced=6_0)));
extern "C" AVMediaType const AVMediaTypeMuxed __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMediaType const AVMediaTypeMetadataObject __attribute__((availability(ios,introduced=9_0)));

extern "C" AVMediaType const AVMediaTypeDepthData __attribute__((availability(ios,introduced=11_0)));



typedef NSString * AVMediaCharacteristic __attribute__((swift_wrapper(struct)));
extern "C" AVMediaCharacteristic const AVMediaCharacteristicVisual __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMediaCharacteristic const AVMediaCharacteristicAudible __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMediaCharacteristic const AVMediaCharacteristicLegible __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMediaCharacteristic const AVMediaCharacteristicFrameBased __attribute__((availability(ios,introduced=4_0)));







extern "C" AVMediaCharacteristic const AVMediaCharacteristicUsesWideGamutColorSpace __attribute__((availability(ios,introduced=10_0)));
extern "C" AVMediaCharacteristic const AVMediaCharacteristicIsMainProgramContent __attribute__((availability(ios,introduced=5_0)));
extern "C" AVMediaCharacteristic const AVMediaCharacteristicIsAuxiliaryContent __attribute__((availability(ios,introduced=5_0)));
extern "C" AVMediaCharacteristic const AVMediaCharacteristicContainsOnlyForcedSubtitles __attribute__((availability(ios,introduced=5_0)));
extern "C" AVMediaCharacteristic const AVMediaCharacteristicTranscribesSpokenDialogForAccessibility __attribute__((availability(ios,introduced=5_0)));
extern "C" AVMediaCharacteristic const AVMediaCharacteristicDescribesMusicAndSoundForAccessibility __attribute__((availability(ios,introduced=5_0)));
extern "C" AVMediaCharacteristic const AVMediaCharacteristicEasyToRead __attribute__((availability(ios,introduced=6_0)));
extern "C" AVMediaCharacteristic const AVMediaCharacteristicDescribesVideoForAccessibility __attribute__((availability(ios,introduced=5_0)));
extern "C" AVMediaCharacteristic const AVMediaCharacteristicLanguageTranslation __attribute__((availability(ios,introduced=9_0)));
extern "C" AVMediaCharacteristic const AVMediaCharacteristicDubbedTranslation __attribute__((availability(ios,introduced=9_0)));
extern "C" AVMediaCharacteristic const AVMediaCharacteristicVoiceOverTranslation __attribute__((availability(ios,introduced=9_0)));
typedef NSString * AVFileType __attribute__((swift_wrapper(struct)));
extern "C" AVFileType const AVFileTypeQuickTimeMovie __attribute__((availability(ios,introduced=4_0)));
extern "C" AVFileType const AVFileTypeMPEG4 __attribute__((availability(ios,introduced=4_0)));







extern "C" AVFileType const AVFileTypeAppleM4V __attribute__((availability(ios,introduced=4_0)));







extern "C" AVFileType const AVFileTypeAppleM4A __attribute__((availability(ios,introduced=4_0)));
extern "C" AVFileType const AVFileType3GPP __attribute__((availability(ios,introduced=4_0)));
extern "C" AVFileType const AVFileType3GPP2 __attribute__((availability(ios,introduced=4_0)));
extern "C" AVFileType const AVFileTypeCoreAudioFormat __attribute__((availability(ios,introduced=4_0)));
extern "C" AVFileType const AVFileTypeWAVE __attribute__((availability(ios,introduced=4_0)));
extern "C" AVFileType const AVFileTypeAIFF __attribute__((availability(ios,introduced=4_0)));
extern "C" AVFileType const AVFileTypeAIFC __attribute__((availability(ios,introduced=4_0)));
extern "C" AVFileType const AVFileTypeAMR __attribute__((availability(ios,introduced=4_0)));
extern "C" AVFileType const AVFileTypeMPEGLayer3 __attribute__((availability(ios,introduced=7_0)));
extern "C" AVFileType const AVFileTypeSunAU __attribute__((availability(ios,introduced=7_0)));
extern "C" AVFileType const AVFileTypeAC3 __attribute__((availability(ios,introduced=7_0)));
extern "C" AVFileType const AVFileTypeEnhancedAC3 __attribute__((availability(ios,introduced=9_0)));
extern "C" AVFileType const AVFileTypeJPEG __attribute__((availability(ios,introduced=11_0)));
extern "C" AVFileType const AVFileTypeDNG __attribute__((availability(ios,introduced=11_0)));
extern "C" AVFileType const AVFileTypeHEIC __attribute__((availability(ios,introduced=11_0)));
extern "C" AVFileType const AVFileTypeAVCI __attribute__((availability(ios,introduced=11_0)));
extern "C" AVFileType const AVFileTypeHEIF __attribute__((availability(ios,introduced=11_0)));
extern "C" AVFileType const AVFileTypeTIFF __attribute__((availability(ios,introduced=11_0)));







extern "C" NSString * const AVStreamingKeyDeliveryContentKeyType __attribute__((availability(ios,introduced=9_0)));







extern "C" NSString * const AVStreamingKeyDeliveryPersistentContentKeyType __attribute__((availability(ios,introduced=9_0)));
typedef NSString * AVMetadataFormat __attribute__((swift_wrapper(enum)));
typedef NSString * AVMetadataKeySpace __attribute__((swift_wrapper(struct)));
typedef NSString * AVMetadataKey __attribute__((swift_wrapper(struct)));


extern "C" AVMetadataKeySpace const AVMetadataKeySpaceCommon __attribute__((availability(ios,introduced=4_0)));


extern "C" AVMetadataKey const AVMetadataCommonKeyTitle __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataCommonKeyCreator __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataCommonKeySubject __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataCommonKeyDescription __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataCommonKeyPublisher __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataCommonKeyContributor __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataCommonKeyCreationDate __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataCommonKeyLastModifiedDate __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataCommonKeyType __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataCommonKeyFormat __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataCommonKeyIdentifier __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataCommonKeySource __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataCommonKeyLanguage __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataCommonKeyRelation __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataCommonKeyLocation __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataCommonKeyCopyrights __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataCommonKeyAlbumName __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataCommonKeyAuthor __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataCommonKeyArtist __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataCommonKeyArtwork __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataCommonKeyMake __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataCommonKeyModel __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataCommonKeySoftware __attribute__((availability(ios,introduced=4_0)));


extern "C" AVMetadataFormat const AVMetadataFormatQuickTimeUserData __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKeySpace const AVMetadataKeySpaceQuickTimeUserData __attribute__((availability(ios,introduced=4_0)));


extern "C" AVMetadataKey const AVMetadataQuickTimeUserDataKeyAlbum __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeUserDataKeyArranger __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeUserDataKeyArtist __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeUserDataKeyAuthor __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeUserDataKeyChapter __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeUserDataKeyComment __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeUserDataKeyComposer __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeUserDataKeyCopyright __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeUserDataKeyCreationDate __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeUserDataKeyDescription __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeUserDataKeyDirector __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeUserDataKeyDisclaimer __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeUserDataKeyEncodedBy __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeUserDataKeyFullName __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeUserDataKeyGenre __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeUserDataKeyHostComputer __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeUserDataKeyInformation __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeUserDataKeyKeywords __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeUserDataKeyMake __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeUserDataKeyModel __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeUserDataKeyOriginalArtist __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeUserDataKeyOriginalFormat __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeUserDataKeyOriginalSource __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeUserDataKeyPerformers __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeUserDataKeyProducer __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeUserDataKeyPublisher __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeUserDataKeyProduct __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeUserDataKeySoftware __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeUserDataKeySpecialPlaybackRequirements __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeUserDataKeyTrack __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeUserDataKeyWarning __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeUserDataKeyWriter __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeUserDataKeyURLLink __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeUserDataKeyLocationISO6709 __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeUserDataKeyTrackName __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeUserDataKeyCredits __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeUserDataKeyPhonogramRights __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeUserDataKeyTaggedCharacteristic __attribute__((availability(ios,introduced=5_0)));


extern "C" AVMetadataFormat const AVMetadataFormatISOUserData __attribute__((availability(ios,introduced=7_0)));
extern "C" AVMetadataKeySpace const AVMetadataKeySpaceISOUserData __attribute__((availability(ios,introduced=7_0)));


extern "C" AVMetadataKey const AVMetadataISOUserDataKeyCopyright __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataISOUserDataKeyTaggedCharacteristic __attribute__((availability(ios,introduced=8_0)));






extern "C" AVMetadataKey const AVMetadataISOUserDataKeyDate __attribute__((availability(ios,introduced=10_0)));
extern "C" AVMetadataKey const AVMetadata3GPUserDataKeyCopyright __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadata3GPUserDataKeyAuthor __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadata3GPUserDataKeyPerformer __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadata3GPUserDataKeyGenre __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadata3GPUserDataKeyRecordingYear __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadata3GPUserDataKeyLocation __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadata3GPUserDataKeyTitle __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadata3GPUserDataKeyDescription __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadata3GPUserDataKeyCollection __attribute__((availability(ios,introduced=7_0)));
extern "C" AVMetadataKey const AVMetadata3GPUserDataKeyUserRating __attribute__((availability(ios,introduced=7_0)));
extern "C" AVMetadataKey const AVMetadata3GPUserDataKeyThumbnail __attribute__((availability(ios,introduced=7_0)));
extern "C" AVMetadataKey const AVMetadata3GPUserDataKeyAlbumAndTrack __attribute__((availability(ios,introduced=7_0)));
extern "C" AVMetadataKey const AVMetadata3GPUserDataKeyKeywordList __attribute__((availability(ios,introduced=7_0)));
extern "C" AVMetadataKey const AVMetadata3GPUserDataKeyMediaClassification __attribute__((availability(ios,introduced=7_0)));
extern "C" AVMetadataKey const AVMetadata3GPUserDataKeyMediaRating __attribute__((availability(ios,introduced=7_0)));


extern "C" AVMetadataFormat const AVMetadataFormatQuickTimeMetadata __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKeySpace const AVMetadataKeySpaceQuickTimeMetadata __attribute__((availability(ios,introduced=4_0)));


extern "C" AVMetadataKey const AVMetadataQuickTimeMetadataKeyAuthor __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeMetadataKeyComment __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeMetadataKeyCopyright __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeMetadataKeyCreationDate __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeMetadataKeyDirector __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeMetadataKeyDisplayName __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeMetadataKeyInformation __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeMetadataKeyKeywords __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeMetadataKeyProducer __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeMetadataKeyPublisher __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeMetadataKeyAlbum __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeMetadataKeyArtist __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeMetadataKeyArtwork __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeMetadataKeyDescription __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeMetadataKeySoftware __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeMetadataKeyYear __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeMetadataKeyGenre __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeMetadataKeyiXML __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeMetadataKeyLocationISO6709 __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeMetadataKeyMake __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeMetadataKeyModel __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeMetadataKeyArranger __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeMetadataKeyEncodedBy __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeMetadataKeyOriginalArtist __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeMetadataKeyPerformer __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeMetadataKeyComposer __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeMetadataKeyCredits __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeMetadataKeyPhonogramRights __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeMetadataKeyCameraIdentifier __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeMetadataKeyCameraFrameReadoutTime __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataQuickTimeMetadataKeyTitle __attribute__((availability(ios,introduced=4_3)));
extern "C" AVMetadataKey const AVMetadataQuickTimeMetadataKeyCollectionUser __attribute__((availability(ios,introduced=4_3)));
extern "C" AVMetadataKey const AVMetadataQuickTimeMetadataKeyRatingUser __attribute__((availability(ios,introduced=4_3)));
extern "C" AVMetadataKey const AVMetadataQuickTimeMetadataKeyLocationName __attribute__((availability(ios,introduced=4_3)));
extern "C" AVMetadataKey const AVMetadataQuickTimeMetadataKeyLocationBody __attribute__((availability(ios,introduced=4_3)));
extern "C" AVMetadataKey const AVMetadataQuickTimeMetadataKeyLocationNote __attribute__((availability(ios,introduced=4_3)));
extern "C" AVMetadataKey const AVMetadataQuickTimeMetadataKeyLocationRole __attribute__((availability(ios,introduced=4_3)));
extern "C" AVMetadataKey const AVMetadataQuickTimeMetadataKeyLocationDate __attribute__((availability(ios,introduced=4_3)));
extern "C" AVMetadataKey const AVMetadataQuickTimeMetadataKeyDirectionFacing __attribute__((availability(ios,introduced=4_3)));
extern "C" AVMetadataKey const AVMetadataQuickTimeMetadataKeyDirectionMotion __attribute__((availability(ios,introduced=4_3)));
extern "C" AVMetadataKey const AVMetadataQuickTimeMetadataKeyContentIdentifier __attribute__((availability(ios,introduced=9_0)));


extern "C" AVMetadataFormat const AVMetadataFormatiTunesMetadata __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKeySpace const AVMetadataKeySpaceiTunes __attribute__((availability(ios,introduced=4_0)));


extern "C" AVMetadataKey const AVMetadataiTunesMetadataKeyAlbum __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataiTunesMetadataKeyArtist __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataiTunesMetadataKeyUserComment __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataiTunesMetadataKeyCoverArt __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataiTunesMetadataKeyCopyright __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataiTunesMetadataKeyReleaseDate __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataiTunesMetadataKeyEncodedBy __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataiTunesMetadataKeyPredefinedGenre __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataiTunesMetadataKeyUserGenre __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataiTunesMetadataKeySongName __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataiTunesMetadataKeyTrackSubTitle __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataiTunesMetadataKeyEncodingTool __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataiTunesMetadataKeyComposer __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataiTunesMetadataKeyAlbumArtist __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataiTunesMetadataKeyAccountKind __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataiTunesMetadataKeyAppleID __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataiTunesMetadataKeyArtistID __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataiTunesMetadataKeySongID __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataiTunesMetadataKeyDiscCompilation __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataiTunesMetadataKeyDiscNumber __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataiTunesMetadataKeyGenreID __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataiTunesMetadataKeyGrouping __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataiTunesMetadataKeyPlaylistID __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataiTunesMetadataKeyContentRating __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataiTunesMetadataKeyBeatsPerMin __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataiTunesMetadataKeyTrackNumber __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataiTunesMetadataKeyArtDirector __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataiTunesMetadataKeyArranger __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataiTunesMetadataKeyAuthor __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataiTunesMetadataKeyLyrics __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataiTunesMetadataKeyAcknowledgement __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataiTunesMetadataKeyConductor __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataiTunesMetadataKeyDescription __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataiTunesMetadataKeyDirector __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataiTunesMetadataKeyEQ __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataiTunesMetadataKeyLinerNotes __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataiTunesMetadataKeyRecordCompany __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataiTunesMetadataKeyOriginalArtist __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataiTunesMetadataKeyPhonogramRights __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataiTunesMetadataKeyProducer __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataiTunesMetadataKeyPerformer __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataiTunesMetadataKeyPublisher __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataiTunesMetadataKeySoundEngineer __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataiTunesMetadataKeySoloist __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataiTunesMetadataKeyCredits __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataiTunesMetadataKeyThanks __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataiTunesMetadataKeyOnlineExtras __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataiTunesMetadataKeyExecProducer __attribute__((availability(ios,introduced=4_0)));


extern "C" AVMetadataFormat const AVMetadataFormatID3Metadata __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKeySpace const AVMetadataKeySpaceID3 __attribute__((availability(ios,introduced=4_0)));


extern "C" AVMetadataKey const AVMetadataID3MetadataKeyAudioEncryption __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyAttachedPicture __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyAudioSeekPointIndex __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyComments __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyCommercial __attribute__((availability(ios,introduced=9_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyCommerical __attribute__((availability(ios,introduced=4_0,deprecated=9_0,message="" )));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyEncryption __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyEqualization __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyEqualization2 __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyEventTimingCodes __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyGeneralEncapsulatedObject __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyGroupIdentifier __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyInvolvedPeopleList_v23 __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyLink __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyMusicCDIdentifier __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyMPEGLocationLookupTable __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyOwnership __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyPrivate __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyPlayCounter __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyPopularimeter __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyPositionSynchronization __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyRecommendedBufferSize __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyRelativeVolumeAdjustment __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyRelativeVolumeAdjustment2 __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyReverb __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeySeek __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeySignature __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeySynchronizedLyric __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeySynchronizedTempoCodes __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyAlbumTitle __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyBeatsPerMinute __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyComposer __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyContentType __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyCopyright __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyDate __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyEncodingTime __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyPlaylistDelay __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyOriginalReleaseTime __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyRecordingTime __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyReleaseTime __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyTaggingTime __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyEncodedBy __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyLyricist __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyFileType __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyTime __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyInvolvedPeopleList_v24 __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyContentGroupDescription __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyTitleDescription __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeySubTitle __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyInitialKey __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyLanguage __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyLength __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyMusicianCreditsList __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyMediaType __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyMood __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyOriginalAlbumTitle __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyOriginalFilename __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyOriginalLyricist __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyOriginalArtist __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyOriginalReleaseYear __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyFileOwner __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyLeadPerformer __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyBand __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyConductor __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyModifiedBy __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyPartOfASet __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyProducedNotice __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyPublisher __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyTrackNumber __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyRecordingDates __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyInternetRadioStationName __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyInternetRadioStationOwner __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeySize __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyAlbumSortOrder __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyPerformerSortOrder __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyTitleSortOrder __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyInternationalStandardRecordingCode __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyEncodedWith __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeySetSubtitle __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyYear __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyUserText __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyUniqueFileIdentifier __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyTermsOfUse __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyUnsynchronizedLyric __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyCommercialInformation __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyCopyrightInformation __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyOfficialAudioFileWebpage __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyOfficialArtistWebpage __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyOfficialAudioSourceWebpage __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyOfficialInternetRadioStationHomepage __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyPayment __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyOfficialPublisherWebpage __attribute__((availability(ios,introduced=4_0)));
extern "C" AVMetadataKey const AVMetadataID3MetadataKeyUserURL __attribute__((availability(ios,introduced=4_0)));


extern "C" AVMetadataKeySpace const AVMetadataKeySpaceIcy __attribute__((availability(ios,introduced=8_0)));

extern "C" AVMetadataKey const AVMetadataIcyMetadataKeyStreamTitle __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataKey const AVMetadataIcyMetadataKeyStreamURL __attribute__((availability(ios,introduced=8_0)));


extern "C" AVMetadataFormat const AVMetadataFormatHLSMetadata __attribute__((availability(ios,introduced=8_0)));

extern "C" AVMetadataKeySpace const AVMetadataKeySpaceHLSDateRange __attribute__((availability(ios,introduced=9_3)));


extern "C" AVMetadataKeySpace const AVMetadataKeySpaceAudioFile __attribute__((availability(ios,introduced=11_0)));


extern "C" AVMetadataFormat const AVMetadataFormatUnknown __attribute__((availability(ios,introduced=11_0)));


typedef NSString * AVMetadataExtraAttributeKey __attribute__((swift_wrapper(struct)));






extern "C" AVMetadataExtraAttributeKey const AVMetadataExtraAttributeValueURIKey __attribute__((availability(ios,introduced=8_0)));






extern "C" AVMetadataExtraAttributeKey const AVMetadataExtraAttributeBaseURIKey __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataExtraAttributeKey const AVMetadataExtraAttributeInfoKey __attribute__((availability(ios,introduced=9_0)));











extern "C" {


#pragma pack(push, 4)
typedef signed long CMItemCount;
typedef signed long CMItemIndex;
 typedef uint64_t CMBaseClassVersion, CMStructVersion;
typedef int32_t CMPersistentTrackID;



enum

{
 kCMPersistentTrackID_Invalid = 0
};
#pragma pack(pop)


}



extern "C" {


#pragma pack(push, 4)







typedef int64_t CMTimeValue;
typedef int32_t CMTimeScale;






typedef int64_t CMTimeEpoch;
typedef uint32_t CMTimeFlags; enum {
 kCMTimeFlags_Valid = 1UL<<0,
 kCMTimeFlags_HasBeenRounded = 1UL<<1,
 kCMTimeFlags_PositiveInfinity = 1UL<<2,
 kCMTimeFlags_NegativeInfinity = 1UL<<3,
 kCMTimeFlags_Indefinite = 1UL<<4,
 kCMTimeFlags_ImpliedValueFlagsMask = kCMTimeFlags_PositiveInfinity | kCMTimeFlags_NegativeInfinity | kCMTimeFlags_Indefinite
};





typedef struct
{
 CMTimeValue value;
 CMTimeScale timescale;
 CMTimeFlags flags;
 CMTimeEpoch epoch;




} CMTime;
extern const CMTime kCMTimeInvalid





       __attribute__((availability(ios,introduced=4.0)));
extern const CMTime kCMTimeIndefinite




       __attribute__((availability(ios,introduced=4.0)));
extern const CMTime kCMTimePositiveInfinity




       __attribute__((availability(ios,introduced=4.0)));
extern const CMTime kCMTimeNegativeInfinity




       __attribute__((availability(ios,introduced=4.0)));
extern const CMTime kCMTimeZero




       __attribute__((availability(ios,introduced=4.0)));






extern
CMTime CMTimeMake(
    int64_t value,
    int32_t timescale)
       __attribute__((availability(ios,introduced=4.0)));






extern
CMTime CMTimeMakeWithEpoch(
    int64_t value,
    int32_t timescale,
    int64_t epoch)
       __attribute__((availability(ios,introduced=4.0)));
extern
CMTime CMTimeMakeWithSeconds(
    Float64 seconds,
    int32_t preferredTimescale)
       __attribute__((availability(ios,introduced=4.0)));
extern
Float64 CMTimeGetSeconds(
    CMTime time)
       __attribute__((availability(ios,introduced=4.0)));
typedef uint32_t CMTimeRoundingMethod; enum {
 kCMTimeRoundingMethod_RoundHalfAwayFromZero = 1,
 kCMTimeRoundingMethod_RoundTowardZero = 2,
 kCMTimeRoundingMethod_RoundAwayFromZero = 3,
 kCMTimeRoundingMethod_QuickTime = 4,
 kCMTimeRoundingMethod_RoundTowardPositiveInfinity = 5,
 kCMTimeRoundingMethod_RoundTowardNegativeInfinity = 6,

 kCMTimeRoundingMethod_Default = kCMTimeRoundingMethod_RoundHalfAwayFromZero
};
extern
CMTime CMTimeConvertScale(
    CMTime time,
    int32_t newTimescale,
    CMTimeRoundingMethod method)
       __attribute__((availability(ios,introduced=4.0)));
extern
CMTime CMTimeAdd(
    CMTime addend1,
    CMTime addend2)
       __attribute__((availability(ios,introduced=4.0)));
extern
CMTime CMTimeSubtract(
    CMTime minuend,
    CMTime subtrahend)
       __attribute__((availability(ios,introduced=4.0)));
extern
CMTime CMTimeMultiply(
    CMTime time,
    int32_t multiplier)
       __attribute__((availability(ios,introduced=4.0)));
extern
CMTime CMTimeMultiplyByFloat64(
    CMTime time,
    Float64 multiplier)
       __attribute__((availability(ios,introduced=4.0)));
extern
CMTime CMTimeMultiplyByRatio(
    CMTime time,
    int32_t multiplier,
    int32_t divisor)
       __attribute__((availability(ios,introduced=7.1)));
extern
int32_t CMTimeCompare(
    CMTime time1,
    CMTime time2)
       __attribute__((availability(ios,introduced=4.0)));
extern
CMTime CMTimeMinimum(
    CMTime time1,
    CMTime time2)
       __attribute__((availability(ios,introduced=4.0)));






extern
CMTime CMTimeMaximum(
    CMTime time1,
    CMTime time2)
       __attribute__((availability(ios,introduced=4.0)));






extern
CMTime CMTimeAbsoluteValue(
    CMTime time)
       __attribute__((availability(ios,introduced=4.0)));







extern
CFDictionaryRef _Nullable CMTimeCopyAsDictionary(
     CMTime time,
     CFAllocatorRef _Nullable allocator)


       __attribute__((availability(ios,introduced=4.0)));







extern
CMTime CMTimeMakeFromDictionary(
    CFDictionaryRef _Nullable dict)
       __attribute__((availability(ios,introduced=4.0)));

#pragma clang assume_nonnull begin





extern const CFStringRef kCMTimeValueKey
       __attribute__((availability(ios,introduced=4.0)));





extern const CFStringRef kCMTimeScaleKey
       __attribute__((availability(ios,introduced=4.0)));





extern const CFStringRef kCMTimeEpochKey
       __attribute__((availability(ios,introduced=4.0)));





extern const CFStringRef kCMTimeFlagsKey
       __attribute__((availability(ios,introduced=4.0)));
#pragma clang assume_nonnull end
extern
CFStringRef _Nullable CMTimeCopyDescription(
 CFAllocatorRef _Nullable allocator,

 CMTime time)
       __attribute__((availability(ios,introduced=4.0)));






extern
void CMTimeShow(
 CMTime time)
       __attribute__((availability(ios,introduced=4.0)));



#pragma pack(pop)


}
#pragma clang assume_nonnull begin

// @class AVAssetTrack;
#ifndef _REWRITER_typedef_AVAssetTrack
#define _REWRITER_typedef_AVAssetTrack
typedef struct objc_object AVAssetTrack;
typedef struct {} _objc_exc_AVAssetTrack;
#endif

// @class AVFragmentedAssetTrack;
#ifndef _REWRITER_typedef_AVFragmentedAssetTrack
#define _REWRITER_typedef_AVFragmentedAssetTrack
typedef struct objc_object AVFragmentedAssetTrack;
typedef struct {} _objc_exc_AVFragmentedAssetTrack;
#endif

// @class AVMetadataItem;
#ifndef _REWRITER_typedef_AVMetadataItem
#define _REWRITER_typedef_AVMetadataItem
typedef struct objc_object AVMetadataItem;
typedef struct {} _objc_exc_AVMetadataItem;
#endif

// @class AVMediaSelection;
#ifndef _REWRITER_typedef_AVMediaSelection
#define _REWRITER_typedef_AVMediaSelection
typedef struct objc_object AVMediaSelection;
typedef struct {} _objc_exc_AVMediaSelection;
#endif

// @class AVCompositionTrack;
#ifndef _REWRITER_typedef_AVCompositionTrack
#define _REWRITER_typedef_AVCompositionTrack
typedef struct objc_object AVCompositionTrack;
typedef struct {} _objc_exc_AVCompositionTrack;
#endif






// @class AVAssetInternal;
#ifndef _REWRITER_typedef_AVAssetInternal
#define _REWRITER_typedef_AVAssetInternal
typedef struct objc_object AVAssetInternal;
typedef struct {} _objc_exc_AVAssetInternal;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0)))

#ifndef _REWRITER_typedef_AVAsset
#define _REWRITER_typedef_AVAsset
typedef struct objc_object AVAsset;
typedef struct {} _objc_exc_AVAsset;
#endif

struct AVAsset_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVAssetInternal *__strong _asset;
};

// + (instancetype)assetWithURL:(NSURL *)URL;



// @property (nonatomic, readonly) CMTime duration;



// @property (nonatomic, readonly) float preferredRate;



// @property (nonatomic, readonly) float preferredVolume;



// @property (nonatomic, readonly) CGAffineTransform preferredTransform;



// @property (nonatomic, readonly) CGSize naturalSize __attribute__((availability(ios,introduced=4_0,deprecated=5_0,message="" )));
/* @end */



// @interface AVAsset (AVAssetAsynchronousLoading)



// @property (nonatomic, readonly) BOOL providesPreciseDurationAndTiming;






// - (void)cancelLoading;

/* @end */



// @interface AVAsset (AVAssetReferenceRestrictions)
typedef NSUInteger AVAssetReferenceRestrictions; enum {
 AVAssetReferenceRestrictionForbidNone = 0UL,
 AVAssetReferenceRestrictionForbidRemoteReferenceToLocal = (1UL << 0),
 AVAssetReferenceRestrictionForbidLocalReferenceToRemote = (1UL << 1),
 AVAssetReferenceRestrictionForbidCrossSiteReference = (1UL << 2),
 AVAssetReferenceRestrictionForbidLocalReferenceToLocal = (1UL << 3),
 AVAssetReferenceRestrictionForbidAll = 0xFFFFUL,
};







// @property (nonatomic, readonly) AVAssetReferenceRestrictions referenceRestrictions __attribute__((availability(ios,introduced=5_0)));

/* @end */



// @class AVAssetTrackGroup;
#ifndef _REWRITER_typedef_AVAssetTrackGroup
#define _REWRITER_typedef_AVAssetTrackGroup
typedef struct objc_object AVAssetTrackGroup;
typedef struct {} _objc_exc_AVAssetTrackGroup;
#endif


// @interface AVAsset (AVAssetTrackInspection)





// @property (nonatomic, readonly) NSArray<AVAssetTrack *> *tracks;
// - (nullable AVAssetTrack *)trackWithTrackID:(CMPersistentTrackID)trackID;
// - (NSArray<AVAssetTrack *> *)tracksWithMediaType:(AVMediaType)mediaType;
// - (NSArray<AVAssetTrack *> *)tracksWithMediaCharacteristic:(AVMediaCharacteristic)mediaCharacteristic;
// @property (nonatomic, readonly) NSArray<AVAssetTrackGroup *> *trackGroups __attribute__((availability(ios,introduced=7_0)));

/* @end */



// @interface AVAsset (AVAssetMetadataReading)





// @property (nonatomic, readonly, nullable) AVMetadataItem *creationDate __attribute__((availability(ios,introduced=5_0)));



// @property (nonatomic, readonly, nullable) NSString *lyrics;



// @property (nonatomic, readonly) NSArray<AVMetadataItem *> *commonMetadata;



// @property (nonatomic, readonly) NSArray<AVMetadataItem *> *metadata __attribute__((availability(ios,introduced=8_0)));



// @property (nonatomic, readonly) NSArray<AVMetadataFormat> *availableMetadataFormats;
// - (NSArray<AVMetadataItem *> *)metadataForFormat:(AVMetadataFormat)format;

/* @end */



// @class AVTimedMetadataGroup;
#ifndef _REWRITER_typedef_AVTimedMetadataGroup
#define _REWRITER_typedef_AVTimedMetadataGroup
typedef struct objc_object AVTimedMetadataGroup;
typedef struct {} _objc_exc_AVTimedMetadataGroup;
#endif


// @interface AVAsset (AVAssetChapterInspection)



// @property (readonly) NSArray<NSLocale *> *availableChapterLocales __attribute__((availability(ios,introduced=4_3)));
// - (NSArray<AVTimedMetadataGroup *> *)chapterMetadataGroupsWithTitleLocale:(NSLocale *)locale containingItemsWithCommonKeys:(nullable NSArray<AVMetadataKey> *)commonKeys __attribute__((availability(ios,introduced=4_3)));
// - (NSArray<AVTimedMetadataGroup *> *)chapterMetadataGroupsBestMatchingPreferredLanguages:(NSArray<NSString *> *)preferredLanguages __attribute__((availability(ios,introduced=6_0)));


/* @end */



// @class AVMediaSelectionGroup;
#ifndef _REWRITER_typedef_AVMediaSelectionGroup
#define _REWRITER_typedef_AVMediaSelectionGroup
typedef struct objc_object AVMediaSelectionGroup;
typedef struct {} _objc_exc_AVMediaSelectionGroup;
#endif


// @interface AVAsset (AVAssetMediaSelection)



// @property (nonatomic, readonly) NSArray<AVMediaCharacteristic> *availableMediaCharacteristicsWithMediaSelectionOptions __attribute__((availability(ios,introduced=5_0)));
// - (nullable AVMediaSelectionGroup *)mediaSelectionGroupForMediaCharacteristic:(AVMediaCharacteristic)mediaCharacteristic __attribute__((availability(ios,introduced=5_0)));





// @property (nonatomic, readonly) AVMediaSelection *preferredMediaSelection __attribute__((availability(ios,introduced=9_0)));







// @property (nonatomic, readonly) NSArray <AVMediaSelection *> *allMediaSelections __attribute__((availability(ios,introduced=11_0)));

/* @end */



// @interface AVAsset (AVAssetProtectedContent)






// @property (nonatomic, readonly) BOOL hasProtectedContent __attribute__((availability(ios,introduced=4_2)));

/* @end */



// @interface AVAsset (AVAssetFragments)







// @property (nonatomic, readonly) BOOL canContainFragments __attribute__((availability(ios,introduced=9_0)));






// @property (nonatomic, readonly) BOOL containsFragments __attribute__((availability(ios,introduced=9_0)));






// @property (nonatomic, readonly) CMTime overallDurationHint __attribute__((availability(ios,introduced=10_2)));

/* @end */



// @interface AVAsset (AVAssetUsability)






// @property (nonatomic, readonly, getter=isPlayable) BOOL playable __attribute__((availability(ios,introduced=4_3)));



// @property (nonatomic, readonly, getter=isExportable) BOOL exportable __attribute__((availability(ios,introduced=4_3)));



// @property (nonatomic, readonly, getter=isReadable) BOOL readable __attribute__((availability(ios,introduced=4_3)));



// @property (nonatomic, readonly, getter=isComposable) BOOL composable __attribute__((availability(ios,introduced=4_3)));





// @property (nonatomic, readonly, getter=isCompatibleWithSavedPhotosAlbum) BOOL compatibleWithSavedPhotosAlbum __attribute__((availability(ios,introduced=5_0)));
// @property (nonatomic, readonly, getter=isCompatibleWithAirPlayVideo) BOOL compatibleWithAirPlayVideo __attribute__((availability(ios,introduced=9_0)));

/* @end */

extern "C" NSString *const AVURLAssetPreferPreciseDurationAndTimingKey __attribute__((availability(ios,introduced=4_0)));
extern "C" NSString *const AVURLAssetReferenceRestrictionsKey __attribute__((availability(ios,introduced=5_0)));
extern "C" NSString *const AVURLAssetHTTPCookiesKey __attribute__((availability(ios,introduced=8_0)));







extern "C" NSString *const AVURLAssetAllowsCellularAccessKey __attribute__((availability(ios,introduced=10_0)));
// @class AVURLAssetInternal;
#ifndef _REWRITER_typedef_AVURLAssetInternal
#define _REWRITER_typedef_AVURLAssetInternal
typedef struct objc_object AVURLAssetInternal;
typedef struct {} _objc_exc_AVURLAssetInternal;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0)))

#ifndef _REWRITER_typedef_AVURLAsset
#define _REWRITER_typedef_AVURLAsset
typedef struct objc_object AVURLAsset;
typedef struct {} _objc_exc_AVURLAsset;
#endif

struct AVURLAsset_IMPL {
	struct AVAsset_IMPL AVAsset_IVARS;
	AVURLAssetInternal *__strong _URLAsset;
};

// - (instancetype)init __attribute__((unavailable)); // + (instancetype)new __attribute__((unavailable));






// + (NSArray<AVFileType> *)audiovisualTypes __attribute__((availability(ios,introduced=5_0)));






// + (NSArray<NSString *> *)audiovisualMIMETypes __attribute__((availability(ios,introduced=5_0)));







// + (BOOL)isPlayableExtendedMIMEType: (NSString *)extendedMIMEType __attribute__((availability(ios,introduced=5_0)));
// + (instancetype)URLAssetWithURL:(NSURL *)URL options:(nullable NSDictionary<NSString *, id> *)options;
// - (instancetype)initWithURL:(NSURL *)URL options:(nullable NSDictionary<NSString *, id> *)options __attribute__((objc_designated_initializer));



// @property (nonatomic, readonly, copy) NSURL *URL;

/* @end */



// @class AVAssetResourceLoader;
#ifndef _REWRITER_typedef_AVAssetResourceLoader
#define _REWRITER_typedef_AVAssetResourceLoader
typedef struct objc_object AVAssetResourceLoader;
typedef struct {} _objc_exc_AVAssetResourceLoader;
#endif


// @interface AVURLAsset (AVURLAssetURLHandling)
// @property (nonatomic, readonly) AVAssetResourceLoader *resourceLoader __attribute__((availability(ios,introduced=6_0)));

/* @end */


// @class AVAssetCache;
#ifndef _REWRITER_typedef_AVAssetCache
#define _REWRITER_typedef_AVAssetCache
typedef struct objc_object AVAssetCache;
typedef struct {} _objc_exc_AVAssetCache;
#endif


// @interface AVURLAsset (AVURLAssetCache)





// @property (nonatomic, readonly, nullable) AVAssetCache *assetCache __attribute__((availability(ios,introduced=10_0)));

/* @end */


// @interface AVURLAsset (AVAssetCompositionUtility )
// - (nullable AVAssetTrack *)compatibleTrackForCompositionTrack:(AVCompositionTrack *)compositionTrack;

/* @end */

extern "C" NSString *const AVAssetDurationDidChangeNotification __attribute__((availability(ios,introduced=9_0)));





extern "C" NSString *const AVAssetContainsFragmentsDidChangeNotification __attribute__((availability(ios,unavailable)));






extern "C" NSString *const AVAssetWasDefragmentedNotification __attribute__((availability(ios,unavailable)));





extern "C" NSString *const AVAssetChapterMetadataGroupsDidChangeNotification __attribute__((availability(ios,introduced=9_0)));





extern "C" NSString *const AVAssetMediaSelectionGroupsDidChangeNotification __attribute__((availability(ios,introduced=9_0)));
// @protocol AVFragmentMinding






// @property (nonatomic, readonly, getter=isAssociatedWithFragmentMinder) BOOL associatedWithFragmentMinder __attribute__((availability(ios,unavailable)));

/* @end */


// @class AVFragmentedAssetInternal;
#ifndef _REWRITER_typedef_AVFragmentedAssetInternal
#define _REWRITER_typedef_AVFragmentedAssetInternal
typedef struct objc_object AVFragmentedAssetInternal;
typedef struct {} _objc_exc_AVFragmentedAssetInternal;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=NA)))

#ifndef _REWRITER_typedef_AVFragmentedAsset
#define _REWRITER_typedef_AVFragmentedAsset
typedef struct objc_object AVFragmentedAsset;
typedef struct {} _objc_exc_AVFragmentedAsset;
#endif

struct AVFragmentedAsset_IMPL {
	struct AVURLAsset_IMPL AVURLAsset_IVARS;
	AVFragmentedAssetInternal *__strong _fragmentedAsset;
};

// + (instancetype)fragmentedAssetWithURL:(NSURL *)URL options:(nullable NSDictionary<NSString *, id> *)options;






// @property (nonatomic, readonly) NSArray<AVFragmentedAssetTrack *> *tracks;

/* @end */


// @interface AVFragmentedAsset (AVFragmentedAssetTrackInspection)
// - (nullable AVFragmentedAssetTrack *)trackWithTrackID:(CMPersistentTrackID)trackID;
// - (NSArray<AVFragmentedAssetTrack *> *)tracksWithMediaType:(AVMediaType)mediaType;
// - (NSArray<AVFragmentedAssetTrack *> *)tracksWithMediaCharacteristic:(AVMediaCharacteristic)mediaCharacteristic;

/* @end */








// @class AVFragmentedAssetMinderInternal;
#ifndef _REWRITER_typedef_AVFragmentedAssetMinderInternal
#define _REWRITER_typedef_AVFragmentedAssetMinderInternal
typedef struct objc_object AVFragmentedAssetMinderInternal;
typedef struct {} _objc_exc_AVFragmentedAssetMinderInternal;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=NA)))

#ifndef _REWRITER_typedef_AVFragmentedAssetMinder
#define _REWRITER_typedef_AVFragmentedAssetMinder
typedef struct objc_object AVFragmentedAssetMinder;
typedef struct {} _objc_exc_AVFragmentedAssetMinder;
#endif

struct AVFragmentedAssetMinder_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVFragmentedAssetMinderInternal *__strong _fragmentedAssetMinder;
};

// + (instancetype)fragmentedAssetMinderWithAsset:(AVAsset<AVFragmentMinding> *)asset mindingInterval:(NSTimeInterval)mindingInterval;





// @property (nonatomic) NSTimeInterval mindingInterval;





// @property (nonatomic, readonly) NSArray<AVAsset<AVFragmentMinding> *> *assets;







// - (void)addFragmentedAsset:(AVAsset<AVFragmentMinding> *)asset;







// - (void)removeFragmentedAsset:(AVAsset<AVFragmentMinding> *)asset;

/* @end */


// @interface AVURLAsset (AVURLAssetContentKeyEligibility) <AVContentKeyRecipient>





// @property (nonatomic, readonly) BOOL mayRequireContentKeysForMediaDataProcessing __attribute__((availability(macos,introduced=10.12.4))) __attribute__((availability(ios,introduced=10.3))) __attribute__((availability(tvos,introduced=10.2))) __attribute__((availability(watchos,introduced=3.3)));

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class AVMediaSelectionGroup;
#ifndef _REWRITER_typedef_AVMediaSelectionGroup
#define _REWRITER_typedef_AVMediaSelectionGroup
typedef struct objc_object AVMediaSelectionGroup;
typedef struct {} _objc_exc_AVMediaSelectionGroup;
#endif

// @class AVMediaSelectionOption;
#ifndef _REWRITER_typedef_AVMediaSelectionOption
#define _REWRITER_typedef_AVMediaSelectionOption
typedef struct objc_object AVMediaSelectionOption;
typedef struct {} _objc_exc_AVMediaSelectionOption;
#endif

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0)))

#ifndef _REWRITER_typedef_AVAssetCache
#define _REWRITER_typedef_AVAssetCache
typedef struct objc_object AVAssetCache;
typedef struct {} _objc_exc_AVAssetCache;
#endif

struct AVAssetCache_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};

// @property (nonatomic, readonly, getter=isPlayableOffline) BOOL playableOffline;






// - (NSArray<AVMediaSelectionOption *> *)mediaSelectionOptionsInMediaSelectionGroup:(AVMediaSelectionGroup *)mediaSelectionGroup;

// - (instancetype)init __attribute__((unavailable)); // + (instancetype)new __attribute__((unavailable));

/* @end */

#pragma clang assume_nonnull end
typedef NSString * AVAudioTimePitchAlgorithm __attribute__((swift_wrapper(enum)));
extern "C" AVAudioTimePitchAlgorithm const AVAudioTimePitchAlgorithmLowQualityZeroLatency __attribute__((availability(ios,introduced=7_0)));
extern "C" AVAudioTimePitchAlgorithm const AVAudioTimePitchAlgorithmTimeDomain __attribute__((availability(ios,introduced=7_0)));
extern "C" AVAudioTimePitchAlgorithm const AVAudioTimePitchAlgorithmSpectral __attribute__((availability(ios,introduced=7_0)));
extern "C" AVAudioTimePitchAlgorithm const AVAudioTimePitchAlgorithmVarispeed __attribute__((availability(ios,introduced=7_0)));


extern "C" {


#pragma pack(push, 4)







typedef struct
{
 CMTime start;
 CMTime duration;
} CMTimeRange;
extern const CMTimeRange kCMTimeRangeZero

       __attribute__((availability(ios,introduced=4.0)));

extern const CMTimeRange kCMTimeRangeInvalid

       __attribute__((availability(ios,introduced=4.0)));







extern CMTimeRange CMTimeRangeMake(
    CMTime start,
    CMTime duration)
       __attribute__((availability(ios,introduced=4.0)));
extern CMTimeRange CMTimeRangeGetUnion(
    CMTimeRange range1,
    CMTimeRange range2)
       __attribute__((availability(ios,introduced=4.0)));
extern CMTimeRange CMTimeRangeGetIntersection(
    CMTimeRange range1,
    CMTimeRange range2)
       __attribute__((availability(ios,introduced=4.0)));







extern Boolean CMTimeRangeEqual(
    CMTimeRange range1,
    CMTimeRange range2)
       __attribute__((availability(ios,introduced=4.0)));
extern Boolean CMTimeRangeContainsTime(
    CMTimeRange range,
    CMTime time)
       __attribute__((availability(ios,introduced=4.0)));
extern Boolean CMTimeRangeContainsTimeRange(
    CMTimeRange range1,
    CMTimeRange range2)
       __attribute__((availability(ios,introduced=4.0)));
extern CMTime CMTimeRangeGetEnd(
    CMTimeRange range)
       __attribute__((availability(ios,introduced=4.0)));
extern CMTime CMTimeMapTimeFromRangeToRange(
    CMTime t,
    CMTimeRange fromRange,
    CMTimeRange toRange )
       __attribute__((availability(ios,introduced=4.0)));
extern CMTime CMTimeClampToRange(
    CMTime time,
    CMTimeRange range )
       __attribute__((availability(ios,introduced=4.0)));
extern CMTime CMTimeMapDurationFromRangeToRange(
    CMTime dur,
    CMTimeRange fromRange,
    CMTimeRange toRange )
       __attribute__((availability(ios,introduced=4.0)));






extern CMTimeRange CMTimeRangeFromTimeToTime(
    CMTime start,
    CMTime end )
       __attribute__((availability(ios,introduced=4.0)));







extern CFDictionaryRef _Nullable CMTimeRangeCopyAsDictionary(
    CMTimeRange range,
    CFAllocatorRef _Nullable allocator)
       __attribute__((availability(ios,introduced=4.0)));
extern CMTimeRange CMTimeRangeMakeFromDictionary(
    CFDictionaryRef _Nonnull dict)
       __attribute__((availability(ios,introduced=4.0)));

#pragma clang assume_nonnull begin





extern const CFStringRef kCMTimeRangeStartKey
       __attribute__((availability(ios,introduced=4.0)));





extern const CFStringRef kCMTimeRangeDurationKey
       __attribute__((availability(ios,introduced=4.0)));
#pragma clang assume_nonnull end
extern CFStringRef _Nullable CMTimeRangeCopyDescription(
    CFAllocatorRef _Nullable allocator,
    CMTimeRange range)
       __attribute__((availability(ios,introduced=4.0)));






extern void CMTimeRangeShow(
    CMTimeRange range)
       __attribute__((availability(ios,introduced=4.0)));
typedef struct
{
 CMTimeRange source;
 CMTimeRange target;
} CMTimeMapping;
extern const CMTimeMapping kCMTimeMappingInvalid

       __attribute__((availability(ios,introduced=9.0)));







extern CMTimeMapping CMTimeMappingMake(
    CMTimeRange source,
    CMTimeRange target)
       __attribute__((availability(ios,introduced=9.0)));







extern CMTimeMapping CMTimeMappingMakeEmpty(
    CMTimeRange target)
       __attribute__((availability(ios,introduced=9.0)));







extern CFDictionaryRef _Nullable CMTimeMappingCopyAsDictionary(
    CMTimeMapping mapping,
    CFAllocatorRef _Nullable allocator)
       __attribute__((availability(ios,introduced=9.0)));
extern CMTimeMapping CMTimeMappingMakeFromDictionary(
    CFDictionaryRef _Nonnull dict)
       __attribute__((availability(ios,introduced=9.0)));
#pragma clang assume_nonnull begin




extern const CFStringRef kCMTimeMappingSourceKey
       __attribute__((availability(ios,introduced=9.0)));





extern const CFStringRef kCMTimeMappingTargetKey
       __attribute__((availability(ios,introduced=9.0)));
#pragma clang assume_nonnull end







extern CFStringRef _Nullable CMTimeMappingCopyDescription(
    CFAllocatorRef _Nullable allocator,
    CMTimeMapping mapping)
       __attribute__((availability(ios,introduced=9.0)));






extern void CMTimeMappingShow(
    CMTimeMapping mapping)
       __attribute__((availability(ios,introduced=9.0)));



#pragma pack(pop)


}




#pragma clang assume_nonnull begin
extern "C" NSString *const AVAssetExportPresetLowQuality __attribute__((availability(ios,introduced=4_0)));
extern "C" NSString *const AVAssetExportPresetMediumQuality __attribute__((availability(ios,introduced=4_0)));
extern "C" NSString *const AVAssetExportPresetHighestQuality __attribute__((availability(ios,introduced=4_0)));




extern "C" NSString *const AVAssetExportPresetHEVCHighestQuality __attribute__((availability(ios,introduced=11_0)));




extern "C" NSString *const AVAssetExportPreset640x480 __attribute__((availability(ios,introduced=4_0)));
extern "C" NSString *const AVAssetExportPreset960x540 __attribute__((availability(ios,introduced=4_0)));
extern "C" NSString *const AVAssetExportPreset1280x720 __attribute__((availability(ios,introduced=4_0)));
extern "C" NSString *const AVAssetExportPreset1920x1080 __attribute__((availability(ios,introduced=5_0)));
extern "C" NSString *const AVAssetExportPreset3840x2160 __attribute__((availability(ios,introduced=9_0)));




extern "C" NSString *const AVAssetExportPresetHEVC1920x1080 __attribute__((availability(ios,introduced=11_0)));
extern "C" NSString *const AVAssetExportPresetHEVC3840x2160 __attribute__((availability(ios,introduced=11_0)));


extern "C" NSString *const AVAssetExportPresetAppleM4A __attribute__((availability(ios,introduced=4_0)));




extern "C" NSString *const AVAssetExportPresetPassthrough __attribute__((availability(ios,introduced=4_0)));
// @class AVAsset;
#ifndef _REWRITER_typedef_AVAsset
#define _REWRITER_typedef_AVAsset
typedef struct objc_object AVAsset;
typedef struct {} _objc_exc_AVAsset;
#endif

// @class AVAssetExportSessionInternal;
#ifndef _REWRITER_typedef_AVAssetExportSessionInternal
#define _REWRITER_typedef_AVAssetExportSessionInternal
typedef struct objc_object AVAssetExportSessionInternal;
typedef struct {} _objc_exc_AVAssetExportSessionInternal;
#endif

// @class AVAudioMix;
#ifndef _REWRITER_typedef_AVAudioMix
#define _REWRITER_typedef_AVAudioMix
typedef struct objc_object AVAudioMix;
typedef struct {} _objc_exc_AVAudioMix;
#endif

// @class AVVideoComposition;
#ifndef _REWRITER_typedef_AVVideoComposition
#define _REWRITER_typedef_AVVideoComposition
typedef struct objc_object AVVideoComposition;
typedef struct {} _objc_exc_AVVideoComposition;
#endif

// @class AVMetadataItemFilter;
#ifndef _REWRITER_typedef_AVMetadataItemFilter
#define _REWRITER_typedef_AVMetadataItemFilter
typedef struct objc_object AVMetadataItemFilter;
typedef struct {} _objc_exc_AVMetadataItemFilter;
#endif

// @protocol AVVideoCompositing;
// @class AVMetadataItem;
#ifndef _REWRITER_typedef_AVMetadataItem
#define _REWRITER_typedef_AVMetadataItem
typedef struct objc_object AVMetadataItem;
typedef struct {} _objc_exc_AVMetadataItem;
#endif


typedef NSInteger AVAssetExportSessionStatus; enum {
 AVAssetExportSessionStatusUnknown,
    AVAssetExportSessionStatusWaiting,
    AVAssetExportSessionStatusExporting,
    AVAssetExportSessionStatusCompleted,
    AVAssetExportSessionStatusFailed,
    AVAssetExportSessionStatusCancelled
};

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0)))

#ifndef _REWRITER_typedef_AVAssetExportSession
#define _REWRITER_typedef_AVAssetExportSession
typedef struct objc_object AVAssetExportSession;
typedef struct {} _objc_exc_AVAssetExportSession;
#endif

struct AVAssetExportSession_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVAssetExportSessionInternal *__strong _exportSession;
};

// - (instancetype)init __attribute__((unavailable)); // + (instancetype)new __attribute__((unavailable));
// + (nullable instancetype)exportSessionWithAsset:(AVAsset *)asset presetName:(NSString *)presetName __attribute__((availability(ios,introduced=4_1)));
// - (nullable instancetype)initWithAsset:(AVAsset *)asset presetName:(NSString *)presetName __attribute__((objc_designated_initializer));




// @property (nonatomic, readonly) NSString *presetName;


// @property (nonatomic, retain, readonly) AVAsset *asset __attribute__((availability(ios,introduced=5_0)));




// @property (nonatomic, copy, nullable) AVFileType outputFileType;


// @property (nonatomic, copy, nullable) NSURL *outputURL;


// @property (nonatomic) BOOL shouldOptimizeForNetworkUse;


// @property (nonatomic, readonly) AVAssetExportSessionStatus status;


// @property (nonatomic, readonly, nullable) NSError *error;
// - (void)exportAsynchronouslyWithCompletionHandler:(void (^)(void))handler;


// @property (nonatomic, readonly) float progress;






// - (void)cancelExport;

/* @end */


// @interface AVAssetExportSession (AVAssetExportSessionPresets)
// + (NSArray<NSString *> *)allExportPresets;
// + (NSArray<NSString *> *)exportPresetsCompatibleWithAsset:(AVAsset *)asset;
// + (void)determineCompatibilityOfExportPreset:(NSString *)presetName withAsset:(AVAsset *)asset outputFileType:(nullable AVFileType)outputFileType completionHandler:(void (^)(BOOL compatible))handler __attribute__((availability(ios,introduced=6_0)));

/* @end */


// @interface AVAssetExportSession (AVAssetExportSessionFileTypes)



// @property (nonatomic, readonly) NSArray<AVFileType> *supportedFileTypes;
// - (void)determineCompatibleFileTypesWithCompletionHandler:(void (^)(NSArray<AVFileType> *compatibleFileTypes))handler __attribute__((availability(ios,introduced=6_0)));

/* @end */


// @interface AVAssetExportSession (AVAssetExportSessionDurationAndLength)


// @property (nonatomic) CMTimeRange timeRange;




// @property (nonatomic, readonly) CMTime maxDuration __attribute__((availability(ios,introduced=4_0)));




// @property (nonatomic, readonly) long long estimatedOutputFileLength __attribute__((availability(ios,introduced=5_0)));




// @property (nonatomic) long long fileLengthLimit __attribute__((availability(ios,introduced=4_0)));



/* @end */


// @interface AVAssetExportSession (AVAssetExportSessionMetadata)




// @property (nonatomic, copy, nullable) NSArray<AVMetadataItem *> *metadata;




// @property (nonatomic, retain, nullable) AVMetadataItemFilter *metadataItemFilter __attribute__((availability(ios,introduced=7_0)));

/* @end */


// @interface AVAssetExportSession (AVAssetExportSessionMediaProcessing)




// @property (nonatomic, copy) AVAudioTimePitchAlgorithm audioTimePitchAlgorithm __attribute__((availability(ios,introduced=7_0)));


// @property (nonatomic, copy, nullable) AVAudioMix *audioMix;


// @property (nonatomic, copy, nullable) AVVideoComposition *videoComposition;


// @property (nonatomic, readonly, nullable) id <AVVideoCompositing> customVideoCompositor __attribute__((availability(ios,introduced=7_0)));

/* @end */


// @interface AVAssetExportSession (AVAssetExportSessionMultipass)
// @property (nonatomic) BOOL canPerformMultiplePassesOverSourceMediaData __attribute__((availability(ios,introduced=8_0)));
// @property (nonatomic, copy, nullable) NSURL *directoryForTemporaryFiles __attribute__((availability(ios,introduced=8_0)));

/* @end */

#pragma clang assume_nonnull end
// @class AVAsset;
#ifndef _REWRITER_typedef_AVAsset
#define _REWRITER_typedef_AVAsset
typedef struct objc_object AVAsset;
typedef struct {} _objc_exc_AVAsset;
#endif

// @class AVVideoComposition;
#ifndef _REWRITER_typedef_AVVideoComposition
#define _REWRITER_typedef_AVVideoComposition
typedef struct objc_object AVVideoComposition;
typedef struct {} _objc_exc_AVVideoComposition;
#endif

// @class AVAssetImageGeneratorInternal;
#ifndef _REWRITER_typedef_AVAssetImageGeneratorInternal
#define _REWRITER_typedef_AVAssetImageGeneratorInternal
typedef struct objc_object AVAssetImageGeneratorInternal;
typedef struct {} _objc_exc_AVAssetImageGeneratorInternal;
#endif

// @protocol AVVideoCompositing;

#pragma clang assume_nonnull begin






typedef NSString * AVAssetImageGeneratorApertureMode __attribute__((swift_wrapper(enum)));







extern "C" AVAssetImageGeneratorApertureMode const AVAssetImageGeneratorApertureModeCleanAperture __attribute__((availability(ios,introduced=4_0)));







extern "C" AVAssetImageGeneratorApertureMode const AVAssetImageGeneratorApertureModeProductionAperture __attribute__((availability(ios,introduced=4_0)));







extern "C" AVAssetImageGeneratorApertureMode const AVAssetImageGeneratorApertureModeEncodedPixels __attribute__((availability(ios,introduced=4_0)));

typedef NSInteger AVAssetImageGeneratorResult; enum
{
 AVAssetImageGeneratorSucceeded,
 AVAssetImageGeneratorFailed,
 AVAssetImageGeneratorCancelled,
};

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0)))

#ifndef _REWRITER_typedef_AVAssetImageGenerator
#define _REWRITER_typedef_AVAssetImageGenerator
typedef struct objc_object AVAssetImageGenerator;
typedef struct {} _objc_exc_AVAssetImageGenerator;
#endif

struct AVAssetImageGenerator_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVAssetImageGeneratorInternal *__strong _priv;
};

// - (instancetype)init __attribute__((unavailable)); // + (instancetype)new __attribute__((unavailable));


// @property (nonatomic, readonly) AVAsset *asset __attribute__((availability(ios,introduced=6_0)));



// @property (nonatomic) BOOL appliesPreferredTrackTransform;




// @property (nonatomic) CGSize maximumSize;


// @property (nonatomic, copy, nullable) AVAssetImageGeneratorApertureMode apertureMode;




// @property (nonatomic, copy, nullable) AVVideoComposition *videoComposition;


// @property (nonatomic, readonly, nullable) id <AVVideoCompositing> customVideoCompositor __attribute__((availability(ios,introduced=7_0)));




// @property (nonatomic) CMTime requestedTimeToleranceBefore __attribute__((availability(ios,introduced=5_0)));
// @property (nonatomic) CMTime requestedTimeToleranceAfter __attribute__((availability(ios,introduced=5_0)));
// + (instancetype)assetImageGeneratorWithAsset:(AVAsset *)asset;
// - (instancetype)initWithAsset:(AVAsset *)asset __attribute__((objc_designated_initializer));
// - (nullable CGImageRef)copyCGImageAtTime:(CMTime)requestedTime actualTime:(nullable CMTime *)actualTime error:(NSError * _Nullable * _Nullable)outError __attribute__((cf_returns_retained));


typedef void (*AVAssetImageGeneratorCompletionHandler)(CMTime requestedTime, CGImageRef _Nullable image, CMTime actualTime, AVAssetImageGeneratorResult result, NSError * _Nullable error);
// - (void)generateCGImagesAsynchronouslyForTimes:(NSArray<NSValue *> *)requestedTimes completionHandler:(AVAssetImageGeneratorCompletionHandler)handler;







// - (void)cancelAllCGImageGeneration;

/* @end */

#pragma clang assume_nonnull end
extern "C" {


#pragma pack(push, 4)




typedef __attribute__((objc_bridge(id))) CFTypeRef CMAttachmentBearerRef;


typedef uint32_t CMAttachmentMode;



enum

{
 kCMAttachmentMode_ShouldNotPropagate = 0,
 kCMAttachmentMode_ShouldPropagate = 1
};
extern void CMSetAttachment(CMAttachmentBearerRef _Nonnull target, CFStringRef _Nonnull key, CFTypeRef _Nullable value, CMAttachmentMode attachmentMode) __attribute__((availability(ios,introduced=4.0)));
extern CFTypeRef _Nullable CMGetAttachment(CMAttachmentBearerRef _Nonnull target, CFStringRef _Nonnull key, CMAttachmentMode * _Nullable attachmentModeOut) __attribute__((availability(ios,introduced=4.0)));
extern void CMRemoveAttachment(CMAttachmentBearerRef _Nonnull target, CFStringRef _Nonnull key) __attribute__((availability(ios,introduced=4.0)));







extern void CMRemoveAllAttachments(CMAttachmentBearerRef _Nonnull target) __attribute__((availability(ios,introduced=4.0)));
extern CFDictionaryRef _Nullable CMCopyDictionaryOfAttachments(CFAllocatorRef _Nullable allocator, CMAttachmentBearerRef _Nonnull target, CMAttachmentMode attachmentMode) __attribute__((availability(ios,introduced=4.0)));







extern void CMSetAttachments(CMAttachmentBearerRef _Nonnull target, CFDictionaryRef _Nonnull theAttachments, CMAttachmentMode attachmentMode) __attribute__((availability(ios,introduced=4.0)));
extern void CMPropagateAttachments(CMAttachmentBearerRef _Nonnull source, CMAttachmentBearerRef _Nonnull destination) __attribute__((availability(ios,introduced=4.0)));



#pragma pack(pop)


}



extern "C" {


#pragma pack(push, 4)
enum

{
 kCMBlockBufferNoErr = 0,
 kCMBlockBufferStructureAllocationFailedErr = -12700,
 kCMBlockBufferBlockAllocationFailedErr = -12701,
 kCMBlockBufferBadCustomBlockSourceErr = -12702,
 kCMBlockBufferBadOffsetParameterErr = -12703,
 kCMBlockBufferBadLengthParameterErr = -12704,
 kCMBlockBufferBadPointerParameterErr = -12705,
 kCMBlockBufferEmptyBBufErr = -12706,
 kCMBlockBufferUnallocatedBlockErr = -12707,
 kCMBlockBufferInsufficientSpaceErr = -12708,
};





typedef uint32_t CMBlockBufferFlags;
enum

{
 kCMBlockBufferAssureMemoryNowFlag = (1L<<0),
 kCMBlockBufferAlwaysCopyDataFlag = (1L<<1),
 kCMBlockBufferDontOptimizeDepthFlag = (1L<<2),
 kCMBlockBufferPermitEmptyReferenceFlag = (1L<<3)
};







typedef struct __attribute__((objc_bridge(id))) OpaqueCMBlockBuffer *CMBlockBufferRef;
typedef struct {
 uint32_t version;
 void* _Nullable (* _Nullable AllocateBlock)(void* _Nullable refCon, size_t sizeInBytes);
 void (* _Nullable FreeBlock)(void* _Nullable refCon, void* _Nonnull doomedMemoryBlock, size_t sizeInBytes);
 void* _Nullable refCon;
} CMBlockBufferCustomBlockSource;




enum

{
 kCMBlockBufferCustomBlockSourceVersion = 0
};
extern OSStatus CMBlockBufferCreateEmpty(
  CFAllocatorRef _Nullable structureAllocator,
  uint32_t subBlockCapacity,
  CMBlockBufferFlags flags,
  __attribute__((cf_returns_retained)) CMBlockBufferRef _Nullable * _Nonnull newBBufOut)
       __attribute__((availability(ios,introduced=4.0)));
extern OSStatus CMBlockBufferCreateWithMemoryBlock(
  CFAllocatorRef _Nullable structureAllocator,
  void * _Nullable memoryBlock,
  size_t blockLength,
  CFAllocatorRef _Nullable blockAllocator,
  const CMBlockBufferCustomBlockSource * _Nullable customBlockSource,
  size_t offsetToData,
  size_t dataLength,
  CMBlockBufferFlags flags,
  __attribute__((cf_returns_retained)) CMBlockBufferRef _Nullable * _Nonnull newBBufOut)
       __attribute__((availability(ios,introduced=4.0)));
extern OSStatus CMBlockBufferCreateWithBufferReference(
  CFAllocatorRef _Nullable structureAllocator,
  CMBlockBufferRef _Nonnull targetBuffer,
  size_t offsetToData,
  size_t dataLength,
  CMBlockBufferFlags flags,
  __attribute__((cf_returns_retained)) CMBlockBufferRef _Nullable * _Nonnull newBBufOut)
       __attribute__((availability(ios,introduced=4.0)));
extern OSStatus CMBlockBufferCreateContiguous(
  CFAllocatorRef _Nullable structureAllocator,
  CMBlockBufferRef _Nonnull sourceBuffer,
  CFAllocatorRef _Nullable blockAllocator,
  const CMBlockBufferCustomBlockSource * _Nullable customBlockSource,
  size_t offsetToData,
  size_t dataLength,
  CMBlockBufferFlags flags,
  __attribute__((cf_returns_retained)) CMBlockBufferRef _Nullable * _Nonnull newBBufOut)
       __attribute__((availability(ios,introduced=4.0)));
extern CFTypeID CMBlockBufferGetTypeID(void) __attribute__((availability(ios,introduced=4.0)));
extern OSStatus CMBlockBufferAppendMemoryBlock(
  CMBlockBufferRef _Nonnull theBuffer,
  void * _Nullable memoryBlock,
  size_t blockLength,
  CFAllocatorRef _Nullable blockAllocator,
  const CMBlockBufferCustomBlockSource * _Nullable customBlockSource,
  size_t offsetToData,
  size_t dataLength,
  CMBlockBufferFlags flags)
       __attribute__((availability(ios,introduced=4.0)));
extern OSStatus CMBlockBufferAppendBufferReference(
  CMBlockBufferRef _Nonnull theBuffer,
  CMBlockBufferRef _Nonnull targetBBuf,
  size_t offsetToData,
  size_t dataLength,
  CMBlockBufferFlags flags)
       __attribute__((availability(ios,introduced=4.0)));
extern OSStatus CMBlockBufferAssureBlockMemory(CMBlockBufferRef _Nonnull theBuffer)
       __attribute__((availability(ios,introduced=4.0)));
extern OSStatus CMBlockBufferAccessDataBytes(
  CMBlockBufferRef _Nonnull theBuffer,
  size_t offset,
  size_t length,
  void * _Nonnull temporaryBlock,
  char * _Nullable * _Nonnull returnedPointer)
       __attribute__((availability(ios,introduced=4.0)));
extern OSStatus CMBlockBufferCopyDataBytes(
  CMBlockBufferRef _Nonnull theSourceBuffer,
  size_t offsetToData,
  size_t dataLength,
  void* _Nonnull destination)
       __attribute__((availability(ios,introduced=4.0)));
extern OSStatus CMBlockBufferReplaceDataBytes(
  const void* _Nonnull sourceBytes,
  CMBlockBufferRef _Nonnull destinationBuffer,
  size_t offsetIntoDestination,
  size_t dataLength)
       __attribute__((availability(ios,introduced=4.0)));
extern OSStatus CMBlockBufferFillDataBytes(
  char fillByte,
  CMBlockBufferRef _Nonnull destinationBuffer,
  size_t offsetIntoDestination,
  size_t dataLength)
       __attribute__((availability(ios,introduced=4.0)));
extern OSStatus CMBlockBufferGetDataPointer(
  CMBlockBufferRef _Nonnull theBuffer,
  size_t offset,
  size_t * _Nullable lengthAtOffset,
  size_t * _Nullable totalLength,
  char * _Nullable * _Nullable dataPointer)
       __attribute__((availability(ios,introduced=4.0)));
extern size_t CMBlockBufferGetDataLength(CMBlockBufferRef _Nonnull theBuffer)
       __attribute__((availability(ios,introduced=4.0)));
extern Boolean CMBlockBufferIsRangeContiguous(
  CMBlockBufferRef _Nonnull theBuffer,
  size_t offset,
  size_t length)
       __attribute__((availability(ios,introduced=4.0)));
extern Boolean CMBlockBufferIsEmpty(CMBlockBufferRef _Nonnull theBuffer)
       __attribute__((availability(ios,introduced=4.0)));

#pragma pack(pop)


}
extern "C"
{
enum
{
    kAudio_UnimplementedError = -4,
    kAudio_FileNotFoundError = -43,
    kAudio_FilePermissionError = -54,
    kAudio_TooManyFilesOpenError = -42,
    kAudio_BadFilePathError = '!pth',
    kAudio_ParamError = -50,
    kAudio_MemFullError = -108
};
struct AudioValueRange
{
    Float64 mMinimum;
    Float64 mMaximum;
};
typedef struct AudioValueRange AudioValueRange;
struct AudioValueTranslation
{
    void* _Nonnull mInputData;
    UInt32 mInputDataSize;
    void* _Nonnull mOutputData;
    UInt32 mOutputDataSize;
};
typedef struct AudioValueTranslation AudioValueTranslation;
struct AudioBuffer
{
    UInt32 mNumberChannels;
    UInt32 mDataByteSize;
    void* _Nullable mData;
};
typedef struct AudioBuffer AudioBuffer;
struct AudioBufferList
{
    UInt32 mNumberBuffers;
    AudioBuffer mBuffers[1];
};
typedef struct AudioBufferList AudioBufferList;
__attribute__((deprecated("The concept of canonical formats is deprecated"))) typedef SInt16 AudioSampleType;
__attribute__((deprecated("The concept of canonical formats is deprecated"))) typedef SInt32 AudioUnitSampleType;







typedef UInt32 AudioFormatID;





typedef UInt32 AudioFormatFlags;
struct AudioStreamBasicDescription
{
    Float64 mSampleRate;
    AudioFormatID mFormatID;
    AudioFormatFlags mFormatFlags;
    UInt32 mBytesPerPacket;
    UInt32 mFramesPerPacket;
    UInt32 mBytesPerFrame;
    UInt32 mChannelsPerFrame;
    UInt32 mBitsPerChannel;
    UInt32 mReserved;
};
typedef struct AudioStreamBasicDescription AudioStreamBasicDescription;







static const Float64 kAudioStreamAnyRate = 0.0;
enum
{
    kAudioFormatLinearPCM = 'lpcm',
    kAudioFormatAC3 = 'ac-3',
    kAudioFormat60958AC3 = 'cac3',
    kAudioFormatAppleIMA4 = 'ima4',
    kAudioFormatMPEG4AAC = 'aac ',
    kAudioFormatMPEG4CELP = 'celp',
    kAudioFormatMPEG4HVXC = 'hvxc',
    kAudioFormatMPEG4TwinVQ = 'twvq',
    kAudioFormatMACE3 = 'MAC3',
    kAudioFormatMACE6 = 'MAC6',
    kAudioFormatULaw = 'ulaw',
    kAudioFormatALaw = 'alaw',
    kAudioFormatQDesign = 'QDMC',
    kAudioFormatQDesign2 = 'QDM2',
    kAudioFormatQUALCOMM = 'Qclp',
    kAudioFormatMPEGLayer1 = '.mp1',
    kAudioFormatMPEGLayer2 = '.mp2',
    kAudioFormatMPEGLayer3 = '.mp3',
    kAudioFormatTimeCode = 'time',
    kAudioFormatMIDIStream = 'midi',
    kAudioFormatParameterValueStream = 'apvs',
    kAudioFormatAppleLossless = 'alac',
    kAudioFormatMPEG4AAC_HE = 'aach',
    kAudioFormatMPEG4AAC_LD = 'aacl',
    kAudioFormatMPEG4AAC_ELD = 'aace',
    kAudioFormatMPEG4AAC_ELD_SBR = 'aacf',
    kAudioFormatMPEG4AAC_ELD_V2 = 'aacg',
    kAudioFormatMPEG4AAC_HE_V2 = 'aacp',
    kAudioFormatMPEG4AAC_Spatial = 'aacs',
    kAudioFormatAMR = 'samr',
    kAudioFormatAMR_WB = 'sawb',
    kAudioFormatAudible = 'AUDB',
    kAudioFormatiLBC = 'ilbc',
    kAudioFormatDVIIntelIMA = 0x6D730011,
    kAudioFormatMicrosoftGSM = 0x6D730031,
    kAudioFormatAES3 = 'aes3',
    kAudioFormatEnhancedAC3 = 'ec-3',
    kAudioFormatFLAC = 'flac',
    kAudioFormatOpus = 'opus'
};
enum
{
    kAudioFormatFlagIsFloat = (1U << 0),
    kAudioFormatFlagIsBigEndian = (1U << 1),
    kAudioFormatFlagIsSignedInteger = (1U << 2),
    kAudioFormatFlagIsPacked = (1U << 3),
    kAudioFormatFlagIsAlignedHigh = (1U << 4),
    kAudioFormatFlagIsNonInterleaved = (1U << 5),
    kAudioFormatFlagIsNonMixable = (1U << 6),
    kAudioFormatFlagsAreAllClear = 0x80000000,

    kLinearPCMFormatFlagIsFloat = kAudioFormatFlagIsFloat,
    kLinearPCMFormatFlagIsBigEndian = kAudioFormatFlagIsBigEndian,
    kLinearPCMFormatFlagIsSignedInteger = kAudioFormatFlagIsSignedInteger,
    kLinearPCMFormatFlagIsPacked = kAudioFormatFlagIsPacked,
    kLinearPCMFormatFlagIsAlignedHigh = kAudioFormatFlagIsAlignedHigh,
    kLinearPCMFormatFlagIsNonInterleaved = kAudioFormatFlagIsNonInterleaved,
    kLinearPCMFormatFlagIsNonMixable = kAudioFormatFlagIsNonMixable,
    kLinearPCMFormatFlagsSampleFractionShift = 7,
    kLinearPCMFormatFlagsSampleFractionMask = (0x3F << kLinearPCMFormatFlagsSampleFractionShift),
    kLinearPCMFormatFlagsAreAllClear = kAudioFormatFlagsAreAllClear,

    kAppleLosslessFormatFlag_16BitSourceData = 1,
    kAppleLosslessFormatFlag_20BitSourceData = 2,
    kAppleLosslessFormatFlag_24BitSourceData = 3,
    kAppleLosslessFormatFlag_32BitSourceData = 4
};
enum
{



    kAudioFormatFlagsNativeEndian = 0,





    kAudioFormatFlagsCanonical __attribute__((deprecated("The concept of canonical formats is deprecated"))) = kAudioFormatFlagIsSignedInteger | kAudioFormatFlagsNativeEndian | kAudioFormatFlagIsPacked,
    kAudioFormatFlagsAudioUnitCanonical __attribute__((deprecated("The concept of canonical formats is deprecated"))) = kAudioFormatFlagIsSignedInteger | kAudioFormatFlagsNativeEndian | kAudioFormatFlagIsPacked | kAudioFormatFlagIsNonInterleaved | (24 << kLinearPCMFormatFlagsSampleFractionShift),

    kAudioFormatFlagsNativeFloatPacked = kAudioFormatFlagIsFloat | kAudioFormatFlagsNativeEndian | kAudioFormatFlagIsPacked
};
static inline bool IsAudioFormatNativeEndian(const AudioStreamBasicDescription& f) { return (f.mFormatID == kAudioFormatLinearPCM) && ((f.mFormatFlags & kAudioFormatFlagIsBigEndian) == kAudioFormatFlagsNativeEndian); }
static inline AudioFormatFlags CalculateLPCMFlags(UInt32 inValidBitsPerChannel, UInt32 inTotalBitsPerChannel, bool inIsFloat, bool inIsBigEndian, bool inIsNonInterleaved = false) { return (inIsFloat ? kAudioFormatFlagIsFloat : kAudioFormatFlagIsSignedInteger) | (inIsBigEndian ? ((UInt32)kAudioFormatFlagIsBigEndian) : 0) | ((inValidBitsPerChannel == inTotalBitsPerChannel) ? kAudioFormatFlagIsPacked : kAudioFormatFlagIsAlignedHigh) | (inIsNonInterleaved ? ((UInt32)kAudioFormatFlagIsNonInterleaved) : 0); }
static inline void FillOutASBDForLPCM(AudioStreamBasicDescription& outASBD, Float64 inSampleRate, UInt32 inChannelsPerFrame, UInt32 inValidBitsPerChannel, UInt32 inTotalBitsPerChannel, bool inIsFloat, bool inIsBigEndian, bool inIsNonInterleaved = false) { outASBD.mSampleRate = inSampleRate; outASBD.mFormatID = kAudioFormatLinearPCM; outASBD.mFormatFlags = CalculateLPCMFlags(inValidBitsPerChannel, inTotalBitsPerChannel, inIsFloat, inIsBigEndian, inIsNonInterleaved); outASBD.mBytesPerPacket = (inIsNonInterleaved ? 1 : inChannelsPerFrame) * (inTotalBitsPerChannel / 8); outASBD.mFramesPerPacket = 1; outASBD.mBytesPerFrame = (inIsNonInterleaved ? 1 : inChannelsPerFrame) * (inTotalBitsPerChannel / 8); outASBD.mChannelsPerFrame = inChannelsPerFrame; outASBD.mBitsPerChannel = inValidBitsPerChannel; }
struct AudioStreamPacketDescription
{
    SInt64 mStartOffset;
    UInt32 mVariableFramesInPacket;
    UInt32 mDataByteSize;
};
typedef struct AudioStreamPacketDescription AudioStreamPacketDescription;
typedef UInt32 SMPTETimeType; enum
{
    kSMPTETimeType24 = 0,
    kSMPTETimeType25 = 1,
    kSMPTETimeType30Drop = 2,
    kSMPTETimeType30 = 3,
    kSMPTETimeType2997 = 4,
    kSMPTETimeType2997Drop = 5,
    kSMPTETimeType60 = 6,
    kSMPTETimeType5994 = 7,
    kSMPTETimeType60Drop = 8,
    kSMPTETimeType5994Drop = 9,
    kSMPTETimeType50 = 10,
    kSMPTETimeType2398 = 11
};
typedef UInt32 SMPTETimeFlags; enum
{
    kSMPTETimeUnknown = 0,
    kSMPTETimeValid = (1U << 0),
    kSMPTETimeRunning = (1U << 1)
};
struct SMPTETime
{
    SInt16 mSubframes;
    SInt16 mSubframeDivisor;
    UInt32 mCounter;
    SMPTETimeType mType;
    SMPTETimeFlags mFlags;
    SInt16 mHours;
    SInt16 mMinutes;
    SInt16 mSeconds;
    SInt16 mFrames;
};
typedef struct SMPTETime SMPTETime;
typedef UInt32 AudioTimeStampFlags; enum
{
    kAudioTimeStampNothingValid = 0,
    kAudioTimeStampSampleTimeValid = (1U << 0),
    kAudioTimeStampHostTimeValid = (1U << 1),
    kAudioTimeStampRateScalarValid = (1U << 2),
    kAudioTimeStampWordClockTimeValid = (1U << 3),
    kAudioTimeStampSMPTETimeValid = (1U << 4),
    kAudioTimeStampSampleHostTimeValid = (kAudioTimeStampSampleTimeValid | kAudioTimeStampHostTimeValid)
};
struct AudioTimeStamp
{
    Float64 mSampleTime;
    UInt64 mHostTime;
    Float64 mRateScalar;
    UInt64 mWordClockTime;
    SMPTETime mSMPTETime;
    AudioTimeStampFlags mFlags;
    UInt32 mReserved;
};
typedef struct AudioTimeStamp AudioTimeStamp;
static inline void FillOutAudioTimeStampWithSampleTime(AudioTimeStamp& outATS, Float64 inSampleTime) { outATS.mSampleTime = inSampleTime; outATS.mHostTime = 0; outATS.mRateScalar = 0; outATS.mWordClockTime = 0; memset(&outATS.mSMPTETime, 0, sizeof(SMPTETime)); outATS.mFlags = kAudioTimeStampSampleTimeValid; }
static inline void FillOutAudioTimeStampWithHostTime(AudioTimeStamp& outATS, UInt64 inHostTime) { outATS.mSampleTime = 0; outATS.mHostTime = inHostTime; outATS.mRateScalar = 0; outATS.mWordClockTime = 0; memset(&outATS.mSMPTETime, 0, sizeof(SMPTETime)); outATS.mFlags = kAudioTimeStampHostTimeValid; }
static inline void FillOutAudioTimeStampWithSampleAndHostTime(AudioTimeStamp& outATS, Float64 inSampleTime, UInt64 inHostTime) { outATS.mSampleTime = inSampleTime; outATS.mHostTime = inHostTime; outATS.mRateScalar = 0; outATS.mWordClockTime = 0; memset(&outATS.mSMPTETime, 0, sizeof(SMPTETime)); outATS.mFlags = kAudioTimeStampSampleTimeValid | kAudioTimeStampHostTimeValid; }
struct AudioClassDescription {
    OSType mType;
    OSType mSubType;
    OSType mManufacturer;
};
typedef struct AudioClassDescription AudioClassDescription;
typedef UInt32 AudioChannelLabel;





typedef UInt32 AudioChannelLayoutTag;
enum
{
    kAudioChannelLabel_Unknown = 0xFFFFFFFF,
    kAudioChannelLabel_Unused = 0,
    kAudioChannelLabel_UseCoordinates = 100,

    kAudioChannelLabel_Left = 1,
    kAudioChannelLabel_Right = 2,
    kAudioChannelLabel_Center = 3,
    kAudioChannelLabel_LFEScreen = 4,
    kAudioChannelLabel_LeftSurround = 5,
    kAudioChannelLabel_RightSurround = 6,
    kAudioChannelLabel_LeftCenter = 7,
    kAudioChannelLabel_RightCenter = 8,
    kAudioChannelLabel_CenterSurround = 9,
    kAudioChannelLabel_LeftSurroundDirect = 10,
    kAudioChannelLabel_RightSurroundDirect = 11,
    kAudioChannelLabel_TopCenterSurround = 12,
    kAudioChannelLabel_VerticalHeightLeft = 13,
    kAudioChannelLabel_VerticalHeightCenter = 14,
    kAudioChannelLabel_VerticalHeightRight = 15,

    kAudioChannelLabel_TopBackLeft = 16,
    kAudioChannelLabel_TopBackCenter = 17,
    kAudioChannelLabel_TopBackRight = 18,

    kAudioChannelLabel_RearSurroundLeft = 33,
    kAudioChannelLabel_RearSurroundRight = 34,
    kAudioChannelLabel_LeftWide = 35,
    kAudioChannelLabel_RightWide = 36,
    kAudioChannelLabel_LFE2 = 37,
    kAudioChannelLabel_LeftTotal = 38,
    kAudioChannelLabel_RightTotal = 39,
    kAudioChannelLabel_HearingImpaired = 40,
    kAudioChannelLabel_Narration = 41,
    kAudioChannelLabel_Mono = 42,
    kAudioChannelLabel_DialogCentricMix = 43,

    kAudioChannelLabel_CenterSurroundDirect = 44,

    kAudioChannelLabel_Haptic = 45,


    kAudioChannelLabel_Ambisonic_W = 200,
    kAudioChannelLabel_Ambisonic_X = 201,
    kAudioChannelLabel_Ambisonic_Y = 202,
    kAudioChannelLabel_Ambisonic_Z = 203,


    kAudioChannelLabel_MS_Mid = 204,
    kAudioChannelLabel_MS_Side = 205,


    kAudioChannelLabel_XY_X = 206,
    kAudioChannelLabel_XY_Y = 207,


    kAudioChannelLabel_HeadphonesLeft = 301,
    kAudioChannelLabel_HeadphonesRight = 302,
    kAudioChannelLabel_ClickTrack = 304,
    kAudioChannelLabel_ForeignLanguage = 305,


    kAudioChannelLabel_Discrete = 400,


    kAudioChannelLabel_Discrete_0 = (1U<<16) | 0,
    kAudioChannelLabel_Discrete_1 = (1U<<16) | 1,
    kAudioChannelLabel_Discrete_2 = (1U<<16) | 2,
    kAudioChannelLabel_Discrete_3 = (1U<<16) | 3,
    kAudioChannelLabel_Discrete_4 = (1U<<16) | 4,
    kAudioChannelLabel_Discrete_5 = (1U<<16) | 5,
    kAudioChannelLabel_Discrete_6 = (1U<<16) | 6,
    kAudioChannelLabel_Discrete_7 = (1U<<16) | 7,
    kAudioChannelLabel_Discrete_8 = (1U<<16) | 8,
    kAudioChannelLabel_Discrete_9 = (1U<<16) | 9,
    kAudioChannelLabel_Discrete_10 = (1U<<16) | 10,
    kAudioChannelLabel_Discrete_11 = (1U<<16) | 11,
    kAudioChannelLabel_Discrete_12 = (1U<<16) | 12,
    kAudioChannelLabel_Discrete_13 = (1U<<16) | 13,
    kAudioChannelLabel_Discrete_14 = (1U<<16) | 14,
    kAudioChannelLabel_Discrete_15 = (1U<<16) | 15,
    kAudioChannelLabel_Discrete_65535 = (1U<<16) | 65535,


    kAudioChannelLabel_HOA_ACN = 500,


    kAudioChannelLabel_HOA_ACN_0 = (2U << 16) | 0,
    kAudioChannelLabel_HOA_ACN_1 = (2U << 16) | 1,
    kAudioChannelLabel_HOA_ACN_2 = (2U << 16) | 2,
    kAudioChannelLabel_HOA_ACN_3 = (2U << 16) | 3,
    kAudioChannelLabel_HOA_ACN_4 = (2U << 16) | 4,
    kAudioChannelLabel_HOA_ACN_5 = (2U << 16) | 5,
    kAudioChannelLabel_HOA_ACN_6 = (2U << 16) | 6,
    kAudioChannelLabel_HOA_ACN_7 = (2U << 16) | 7,
    kAudioChannelLabel_HOA_ACN_8 = (2U << 16) | 8,
    kAudioChannelLabel_HOA_ACN_9 = (2U << 16) | 9,
    kAudioChannelLabel_HOA_ACN_10 = (2U << 16) | 10,
    kAudioChannelLabel_HOA_ACN_11 = (2U << 16) | 11,
    kAudioChannelLabel_HOA_ACN_12 = (2U << 16) | 12,
    kAudioChannelLabel_HOA_ACN_13 = (2U << 16) | 13,
    kAudioChannelLabel_HOA_ACN_14 = (2U << 16) | 14,
    kAudioChannelLabel_HOA_ACN_15 = (2U << 16) | 15,
    kAudioChannelLabel_HOA_ACN_65024 = (2U << 16) | 65024
};






typedef UInt32 AudioChannelBitmap; enum
{
    kAudioChannelBit_Left = (1U<<0),
    kAudioChannelBit_Right = (1U<<1),
    kAudioChannelBit_Center = (1U<<2),
    kAudioChannelBit_LFEScreen = (1U<<3),
    kAudioChannelBit_LeftSurround = (1U<<4),
    kAudioChannelBit_RightSurround = (1U<<5),
    kAudioChannelBit_LeftCenter = (1U<<6),
    kAudioChannelBit_RightCenter = (1U<<7),
    kAudioChannelBit_CenterSurround = (1U<<8),
    kAudioChannelBit_LeftSurroundDirect = (1U<<9),
    kAudioChannelBit_RightSurroundDirect = (1U<<10),
    kAudioChannelBit_TopCenterSurround = (1U<<11),
    kAudioChannelBit_VerticalHeightLeft = (1U<<12),
    kAudioChannelBit_VerticalHeightCenter = (1U<<13),
    kAudioChannelBit_VerticalHeightRight = (1U<<14),
    kAudioChannelBit_TopBackLeft = (1U<<15),
    kAudioChannelBit_TopBackCenter = (1U<<16),
    kAudioChannelBit_TopBackRight = (1U<<17)
};
typedef UInt32 AudioChannelFlags; enum
{
    kAudioChannelFlags_AllOff = 0,
    kAudioChannelFlags_RectangularCoordinates = (1U<<0),
    kAudioChannelFlags_SphericalCoordinates = (1U<<1),
    kAudioChannelFlags_Meters = (1U<<2)
};
typedef UInt32 AudioChannelCoordinateIndex; enum
{
    kAudioChannelCoordinates_LeftRight = 0,
    kAudioChannelCoordinates_BackFront = 1,
    kAudioChannelCoordinates_DownUp = 2,
    kAudioChannelCoordinates_Azimuth = 0,
    kAudioChannelCoordinates_Elevation = 1,
    kAudioChannelCoordinates_Distance = 2
};






enum
{
    kAudioChannelLayoutTag_UseChannelDescriptions = (0U<<16) | 0,
    kAudioChannelLayoutTag_UseChannelBitmap = (1U<<16) | 0,

    kAudioChannelLayoutTag_Mono = (100U<<16) | 1,
    kAudioChannelLayoutTag_Stereo = (101U<<16) | 2,
    kAudioChannelLayoutTag_StereoHeadphones = (102U<<16) | 2,
    kAudioChannelLayoutTag_MatrixStereo = (103U<<16) | 2,
    kAudioChannelLayoutTag_MidSide = (104U<<16) | 2,
    kAudioChannelLayoutTag_XY = (105U<<16) | 2,
    kAudioChannelLayoutTag_Binaural = (106U<<16) | 2,
    kAudioChannelLayoutTag_Ambisonic_B_Format = (107U<<16) | 4,

    kAudioChannelLayoutTag_Quadraphonic = (108U<<16) | 4,
    kAudioChannelLayoutTag_Pentagonal = (109U<<16) | 5,
    kAudioChannelLayoutTag_Hexagonal = (110U<<16) | 6,
    kAudioChannelLayoutTag_Octagonal = (111U<<16) | 8,
    kAudioChannelLayoutTag_Cube = (112U<<16) | 8,



    kAudioChannelLayoutTag_MPEG_1_0 = kAudioChannelLayoutTag_Mono,
    kAudioChannelLayoutTag_MPEG_2_0 = kAudioChannelLayoutTag_Stereo,
    kAudioChannelLayoutTag_MPEG_3_0_A = (113U<<16) | 3,
    kAudioChannelLayoutTag_MPEG_3_0_B = (114U<<16) | 3,
    kAudioChannelLayoutTag_MPEG_4_0_A = (115U<<16) | 4,
    kAudioChannelLayoutTag_MPEG_4_0_B = (116U<<16) | 4,
    kAudioChannelLayoutTag_MPEG_5_0_A = (117U<<16) | 5,
    kAudioChannelLayoutTag_MPEG_5_0_B = (118U<<16) | 5,
    kAudioChannelLayoutTag_MPEG_5_0_C = (119U<<16) | 5,
    kAudioChannelLayoutTag_MPEG_5_0_D = (120U<<16) | 5,
    kAudioChannelLayoutTag_MPEG_5_1_A = (121U<<16) | 6,
    kAudioChannelLayoutTag_MPEG_5_1_B = (122U<<16) | 6,
    kAudioChannelLayoutTag_MPEG_5_1_C = (123U<<16) | 6,
    kAudioChannelLayoutTag_MPEG_5_1_D = (124U<<16) | 6,
    kAudioChannelLayoutTag_MPEG_6_1_A = (125U<<16) | 7,
    kAudioChannelLayoutTag_MPEG_7_1_A = (126U<<16) | 8,
    kAudioChannelLayoutTag_MPEG_7_1_B = (127U<<16) | 8,
    kAudioChannelLayoutTag_MPEG_7_1_C = (128U<<16) | 8,
    kAudioChannelLayoutTag_Emagic_Default_7_1 = (129U<<16) | 8,
    kAudioChannelLayoutTag_SMPTE_DTV = (130U<<16) | 8,



    kAudioChannelLayoutTag_ITU_1_0 = kAudioChannelLayoutTag_Mono,
    kAudioChannelLayoutTag_ITU_2_0 = kAudioChannelLayoutTag_Stereo,

    kAudioChannelLayoutTag_ITU_2_1 = (131U<<16) | 3,
    kAudioChannelLayoutTag_ITU_2_2 = (132U<<16) | 4,
    kAudioChannelLayoutTag_ITU_3_0 = kAudioChannelLayoutTag_MPEG_3_0_A,
    kAudioChannelLayoutTag_ITU_3_1 = kAudioChannelLayoutTag_MPEG_4_0_A,

    kAudioChannelLayoutTag_ITU_3_2 = kAudioChannelLayoutTag_MPEG_5_0_A,
    kAudioChannelLayoutTag_ITU_3_2_1 = kAudioChannelLayoutTag_MPEG_5_1_A,
    kAudioChannelLayoutTag_ITU_3_4_1 = kAudioChannelLayoutTag_MPEG_7_1_C,


    kAudioChannelLayoutTag_DVD_0 = kAudioChannelLayoutTag_Mono,
    kAudioChannelLayoutTag_DVD_1 = kAudioChannelLayoutTag_Stereo,
    kAudioChannelLayoutTag_DVD_2 = kAudioChannelLayoutTag_ITU_2_1,
    kAudioChannelLayoutTag_DVD_3 = kAudioChannelLayoutTag_ITU_2_2,
    kAudioChannelLayoutTag_DVD_4 = (133U<<16) | 3,
    kAudioChannelLayoutTag_DVD_5 = (134U<<16) | 4,
    kAudioChannelLayoutTag_DVD_6 = (135U<<16) | 5,
    kAudioChannelLayoutTag_DVD_7 = kAudioChannelLayoutTag_MPEG_3_0_A,
    kAudioChannelLayoutTag_DVD_8 = kAudioChannelLayoutTag_MPEG_4_0_A,
    kAudioChannelLayoutTag_DVD_9 = kAudioChannelLayoutTag_MPEG_5_0_A,
    kAudioChannelLayoutTag_DVD_10 = (136U<<16) | 4,
    kAudioChannelLayoutTag_DVD_11 = (137U<<16) | 5,
    kAudioChannelLayoutTag_DVD_12 = kAudioChannelLayoutTag_MPEG_5_1_A,

    kAudioChannelLayoutTag_DVD_13 = kAudioChannelLayoutTag_DVD_8,
    kAudioChannelLayoutTag_DVD_14 = kAudioChannelLayoutTag_DVD_9,
    kAudioChannelLayoutTag_DVD_15 = kAudioChannelLayoutTag_DVD_10,
    kAudioChannelLayoutTag_DVD_16 = kAudioChannelLayoutTag_DVD_11,
    kAudioChannelLayoutTag_DVD_17 = kAudioChannelLayoutTag_DVD_12,
    kAudioChannelLayoutTag_DVD_18 = (138U<<16) | 5,
    kAudioChannelLayoutTag_DVD_19 = kAudioChannelLayoutTag_MPEG_5_0_B,
    kAudioChannelLayoutTag_DVD_20 = kAudioChannelLayoutTag_MPEG_5_1_B,



    kAudioChannelLayoutTag_AudioUnit_4 = kAudioChannelLayoutTag_Quadraphonic,
    kAudioChannelLayoutTag_AudioUnit_5 = kAudioChannelLayoutTag_Pentagonal,
    kAudioChannelLayoutTag_AudioUnit_6 = kAudioChannelLayoutTag_Hexagonal,
    kAudioChannelLayoutTag_AudioUnit_8 = kAudioChannelLayoutTag_Octagonal,

    kAudioChannelLayoutTag_AudioUnit_5_0 = kAudioChannelLayoutTag_MPEG_5_0_B,
    kAudioChannelLayoutTag_AudioUnit_6_0 = (139U<<16) | 6,
    kAudioChannelLayoutTag_AudioUnit_7_0 = (140U<<16) | 7,
    kAudioChannelLayoutTag_AudioUnit_7_0_Front = (148U<<16) | 7,
    kAudioChannelLayoutTag_AudioUnit_5_1 = kAudioChannelLayoutTag_MPEG_5_1_A,
    kAudioChannelLayoutTag_AudioUnit_6_1 = kAudioChannelLayoutTag_MPEG_6_1_A,
    kAudioChannelLayoutTag_AudioUnit_7_1 = kAudioChannelLayoutTag_MPEG_7_1_C,
    kAudioChannelLayoutTag_AudioUnit_7_1_Front = kAudioChannelLayoutTag_MPEG_7_1_A,

    kAudioChannelLayoutTag_AAC_3_0 = kAudioChannelLayoutTag_MPEG_3_0_B,
    kAudioChannelLayoutTag_AAC_Quadraphonic = kAudioChannelLayoutTag_Quadraphonic,
    kAudioChannelLayoutTag_AAC_4_0 = kAudioChannelLayoutTag_MPEG_4_0_B,
    kAudioChannelLayoutTag_AAC_5_0 = kAudioChannelLayoutTag_MPEG_5_0_D,
    kAudioChannelLayoutTag_AAC_5_1 = kAudioChannelLayoutTag_MPEG_5_1_D,
    kAudioChannelLayoutTag_AAC_6_0 = (141U<<16) | 6,
    kAudioChannelLayoutTag_AAC_6_1 = (142U<<16) | 7,
    kAudioChannelLayoutTag_AAC_7_0 = (143U<<16) | 7,
    kAudioChannelLayoutTag_AAC_7_1 = kAudioChannelLayoutTag_MPEG_7_1_B,
    kAudioChannelLayoutTag_AAC_7_1_B = (183U<<16) | 8,
    kAudioChannelLayoutTag_AAC_7_1_C = (184U<<16) | 8,
    kAudioChannelLayoutTag_AAC_Octagonal = (144U<<16) | 8,

    kAudioChannelLayoutTag_TMH_10_2_std = (145U<<16) | 16,
    kAudioChannelLayoutTag_TMH_10_2_full = (146U<<16) | 21,

    kAudioChannelLayoutTag_AC3_1_0_1 = (149U<<16) | 2,
    kAudioChannelLayoutTag_AC3_3_0 = (150U<<16) | 3,
    kAudioChannelLayoutTag_AC3_3_1 = (151U<<16) | 4,
    kAudioChannelLayoutTag_AC3_3_0_1 = (152U<<16) | 4,
    kAudioChannelLayoutTag_AC3_2_1_1 = (153U<<16) | 4,
    kAudioChannelLayoutTag_AC3_3_1_1 = (154U<<16) | 5,

    kAudioChannelLayoutTag_EAC_6_0_A = (155U<<16) | 6,
    kAudioChannelLayoutTag_EAC_7_0_A = (156U<<16) | 7,

    kAudioChannelLayoutTag_EAC3_6_1_A = (157U<<16) | 7,
    kAudioChannelLayoutTag_EAC3_6_1_B = (158U<<16) | 7,
    kAudioChannelLayoutTag_EAC3_6_1_C = (159U<<16) | 7,
    kAudioChannelLayoutTag_EAC3_7_1_A = (160U<<16) | 8,
    kAudioChannelLayoutTag_EAC3_7_1_B = (161U<<16) | 8,
    kAudioChannelLayoutTag_EAC3_7_1_C = (162U<<16) | 8,
    kAudioChannelLayoutTag_EAC3_7_1_D = (163U<<16) | 8,
    kAudioChannelLayoutTag_EAC3_7_1_E = (164U<<16) | 8,

    kAudioChannelLayoutTag_EAC3_7_1_F = (165U<<16) | 8,
    kAudioChannelLayoutTag_EAC3_7_1_G = (166U<<16) | 8,
    kAudioChannelLayoutTag_EAC3_7_1_H = (167U<<16) | 8,

    kAudioChannelLayoutTag_DTS_3_1 = (168U<<16) | 4,
    kAudioChannelLayoutTag_DTS_4_1 = (169U<<16) | 5,
    kAudioChannelLayoutTag_DTS_6_0_A = (170U<<16) | 6,
    kAudioChannelLayoutTag_DTS_6_0_B = (171U<<16) | 6,
    kAudioChannelLayoutTag_DTS_6_0_C = (172U<<16) | 6,
    kAudioChannelLayoutTag_DTS_6_1_A = (173U<<16) | 7,
    kAudioChannelLayoutTag_DTS_6_1_B = (174U<<16) | 7,
    kAudioChannelLayoutTag_DTS_6_1_C = (175U<<16) | 7,
    kAudioChannelLayoutTag_DTS_7_0 = (176U<<16) | 7,
    kAudioChannelLayoutTag_DTS_7_1 = (177U<<16) | 8,
    kAudioChannelLayoutTag_DTS_8_0_A = (178U<<16) | 8,
    kAudioChannelLayoutTag_DTS_8_0_B = (179U<<16) | 8,
    kAudioChannelLayoutTag_DTS_8_1_A = (180U<<16) | 9,
    kAudioChannelLayoutTag_DTS_8_1_B = (181U<<16) | 9,
    kAudioChannelLayoutTag_DTS_6_1_D = (182U<<16) | 7,

    kAudioChannelLayoutTag_HOA_ACN_SN3D = (190U<<16) | 0,

    kAudioChannelLayoutTag_HOA_ACN_N3D = (191U<<16) | 0,


    kAudioChannelLayoutTag_DiscreteInOrder = (147U<<16) | 0,
    kAudioChannelLayoutTag_Unknown = 0xFFFF0000
};
struct AudioChannelDescription
{
    AudioChannelLabel mChannelLabel;
    AudioChannelFlags mChannelFlags;
    Float32 mCoordinates[3];
};
typedef struct AudioChannelDescription AudioChannelDescription;
struct AudioChannelLayout
{
    AudioChannelLayoutTag mChannelLayoutTag;
    AudioChannelBitmap mChannelBitmap;
    UInt32 mNumberChannelDescriptions;
    AudioChannelDescription mChannelDescriptions[1];
};
typedef struct AudioChannelLayout AudioChannelLayout;
    static __inline__ __attribute__((always_inline)) UInt32 AudioChannelLayoutTag_GetNumberOfChannels(AudioChannelLayoutTag inLayoutTag) { return (UInt32)(inLayoutTag & 0x0000FFFF); }
typedef long MPEG4ObjectID; enum
{
    kMPEG4Object_AAC_Main = 1,
    kMPEG4Object_AAC_LC = 2,
    kMPEG4Object_AAC_SSR = 3,
    kMPEG4Object_AAC_LTP = 4,
    kMPEG4Object_AAC_SBR = 5,
    kMPEG4Object_AAC_Scalable = 6,
    kMPEG4Object_TwinVQ = 7,
    kMPEG4Object_CELP = 8,
    kMPEG4Object_HVXC = 9
};




}
#pragma clang assume_nonnull begin


extern "C"
{
typedef UInt32 AudioFormatPropertyID;
typedef UInt32 AudioPanningMode; enum {
 kPanningMode_SoundField = 3,
 kPanningMode_VectorBasedPanning = 4
};
struct AudioPanningInfo {
 AudioPanningMode mPanningMode;
 UInt32 mCoordinateFlags;
 Float32 mCoordinates[3];
 Float32 mGainScale;
 const AudioChannelLayout * mOutputChannelMap;
};
typedef struct AudioPanningInfo AudioPanningInfo;
typedef UInt32 AudioBalanceFadeType; enum {
 kAudioBalanceFadeType_MaxUnityGain = 0,
 kAudioBalanceFadeType_EqualPower = 1
};
struct AudioBalanceFade
{
 Float32 mLeftRightBalance;
 Float32 mBackFrontFade;
 AudioBalanceFadeType mType;
 const AudioChannelLayout* mChannelLayout;
};
typedef struct AudioBalanceFade AudioBalanceFade;
struct AudioFormatInfo
{
 AudioStreamBasicDescription mASBD;
 const void* mMagicCookie;
 UInt32 mMagicCookieSize;
};
typedef struct AudioFormatInfo AudioFormatInfo;
struct ExtendedAudioFormatInfo
{
 AudioStreamBasicDescription mASBD;
 const void* _Nullable mMagicCookie;
 UInt32 mMagicCookieSize;
 AudioClassDescription mClassDescription;
};
typedef struct ExtendedAudioFormatInfo ExtendedAudioFormatInfo;
struct AudioFormatListItem
{
 AudioStreamBasicDescription mASBD;
 AudioChannelLayoutTag mChannelLayoutTag;
};
typedef struct AudioFormatListItem AudioFormatListItem;
enum
{



 kAudioFormatProperty_FormatInfo = 'fmti',
 kAudioFormatProperty_FormatName = 'fnam',
 kAudioFormatProperty_EncodeFormatIDs = 'acof',
 kAudioFormatProperty_DecodeFormatIDs = 'acif',
 kAudioFormatProperty_FormatList = 'flst',
    kAudioFormatProperty_ASBDFromESDS = 'essd',
    kAudioFormatProperty_ChannelLayoutFromESDS = 'escl',
 kAudioFormatProperty_OutputFormatList = 'ofls',
 kAudioFormatProperty_FirstPlayableFormatFromList = 'fpfl',
 kAudioFormatProperty_FormatIsVBR = 'fvbr',
 kAudioFormatProperty_FormatIsExternallyFramed = 'fexf',
 kAudioFormatProperty_FormatIsEncrypted = 'cryp',
 kAudioFormatProperty_Encoders = 'aven',
 kAudioFormatProperty_Decoders = 'avde',
 kAudioFormatProperty_AvailableEncodeBitRates = 'aebr',
 kAudioFormatProperty_AvailableEncodeSampleRates = 'aesr',
 kAudioFormatProperty_AvailableEncodeChannelLayoutTags = 'aecl',
 kAudioFormatProperty_AvailableEncodeNumberChannels = 'avnc',
 kAudioFormatProperty_ASBDFromMPEGPacket = 'admp',





 kAudioFormatProperty_BitmapForLayoutTag = 'bmtg',
 kAudioFormatProperty_MatrixMixMap = 'mmap',
    kAudioFormatProperty_ChannelMap = 'chmp',
 kAudioFormatProperty_NumberOfChannelsForLayout = 'nchm',
 kAudioFormatProperty_AreChannelLayoutsEquivalent = 'cheq',
    kAudioFormatProperty_ChannelLayoutHash = 'chha',
 kAudioFormatProperty_ValidateChannelLayout = 'vacl',
 kAudioFormatProperty_ChannelLayoutForTag = 'cmpl',
 kAudioFormatProperty_TagForChannelLayout = 'cmpt',
 kAudioFormatProperty_ChannelLayoutName = 'lonm',
 kAudioFormatProperty_ChannelLayoutSimpleName = 'lsnm',
 kAudioFormatProperty_ChannelLayoutForBitmap = 'cmpb',
 kAudioFormatProperty_ChannelName = 'cnam',
 kAudioFormatProperty_ChannelShortName = 'csnm',

 kAudioFormatProperty_TagsForNumberOfChannels = 'tagc',
 kAudioFormatProperty_PanningMatrix = 'panm',
 kAudioFormatProperty_BalanceFade = 'balf',





 kAudioFormatProperty_ID3TagSize = 'id3s',
 kAudioFormatProperty_ID3TagToDictionary = 'id3d'
};



enum {
 kAudioFormatProperty_HardwareCodecCapabilities = 'hwcc',
} __attribute__((deprecated));
enum
{
 kAudioDecoderComponentType = 'adec',
 kAudioEncoderComponentType = 'aenc',
};
enum
{
 kAppleSoftwareAudioCodecManufacturer = 'appl',
 kAppleHardwareAudioCodecManufacturer = 'aphw'
};
extern OSStatus
AudioFormatGetPropertyInfo( AudioFormatPropertyID inPropertyID,
       UInt32 inSpecifierSize,
       const void * _Nullable inSpecifier,
       UInt32 * outPropertyDataSize) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioFormatGetProperty( AudioFormatPropertyID inPropertyID,
      UInt32 inSpecifierSize,
      const void * _Nullable inSpecifier,
      UInt32 * _Nullable ioPropertyDataSize,
      void * _Nullable outPropertyData) __attribute__((availability(ios,introduced=2.0)));






enum
{
        kAudioFormatUnspecifiedError = 'what',
        kAudioFormatUnsupportedPropertyError = 'prop',
        kAudioFormatBadPropertySizeError = '!siz',
        kAudioFormatBadSpecifierSizeError = '!spc',
        kAudioFormatUnsupportedDataFormatError = 'fmt?',
        kAudioFormatUnknownFormatError = '!fmt'
};



}
#pragma clang assume_nonnull end





extern "C" {


#pragma pack(push, 4)
enum

{
 kCMFormatDescriptionError_InvalidParameter = -12710,
 kCMFormatDescriptionError_AllocationFailed = -12711,
 kCMFormatDescriptionError_ValueNotAvailable = -12718,
};





typedef const struct __attribute__((objc_bridge(id))) opaqueCMFormatDescription *CMFormatDescriptionRef;
typedef FourCharCode CMMediaType;



enum

{
 kCMMediaType_Video = 'vide',
 kCMMediaType_Audio = 'soun',
 kCMMediaType_Muxed = 'muxx',
 kCMMediaType_Text = 'text',
 kCMMediaType_ClosedCaption = 'clcp',
 kCMMediaType_Subtitle = 'sbtl',
 kCMMediaType_TimeCode = 'tmcd',
 kCMMediaType_Metadata = 'meta',
};
extern OSStatus
CMFormatDescriptionCreate(
 CFAllocatorRef _Nullable allocator,


 CMMediaType mediaType,

 FourCharCode mediaSubtype,

 CFDictionaryRef _Nullable extensions,

 __attribute__((cf_returns_retained)) CMFormatDescriptionRef _Nullable * _Nonnull descOut)

       __attribute__((availability(ios,introduced=4.0)));
extern
CFTypeID CMFormatDescriptionGetTypeID(void)
       __attribute__((availability(ios,introduced=4.0)));







extern
Boolean CMFormatDescriptionEqual(
 CMFormatDescriptionRef _Nullable desc1,

 CMFormatDescriptionRef _Nullable desc2)

       __attribute__((availability(ios,introduced=4.0)));
extern
Boolean CMFormatDescriptionEqualIgnoringExtensionKeys(
 CMFormatDescriptionRef _Nullable desc1,
 CMFormatDescriptionRef _Nullable desc2,
 CFTypeRef _Nullable formatDescriptionExtensionKeysToIgnore,
 CFTypeRef _Nullable sampleDescriptionExtensionAtomKeysToIgnore )
       __attribute__((availability(ios,introduced=4.3)));







extern
CMMediaType CMFormatDescriptionGetMediaType(
 CMFormatDescriptionRef _Nonnull desc)
       __attribute__((availability(ios,introduced=4.0)));
extern
FourCharCode CMFormatDescriptionGetMediaSubType(
 CMFormatDescriptionRef _Nonnull desc)
       __attribute__((availability(ios,introduced=4.0)));
extern
CFDictionaryRef _Nullable CMFormatDescriptionGetExtensions(
 CMFormatDescriptionRef _Nonnull desc)
       __attribute__((availability(ios,introduced=4.0)));

#pragma clang assume_nonnull begin
extern const CFStringRef kCMFormatDescriptionExtension_OriginalCompressionSettings
       __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kCMFormatDescriptionExtension_SampleDescriptionExtensionAtoms
       __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kCMFormatDescriptionExtension_VerbatimSampleDescription
       __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kCMFormatDescriptionExtension_VerbatimISOSampleEntry
       __attribute__((availability(ios,introduced=4.0)));
#pragma clang assume_nonnull end
extern
CFPropertyListRef _Nullable CMFormatDescriptionGetExtension(
 CMFormatDescriptionRef _Nonnull desc,
 CFStringRef _Nonnull extensionKey)
       __attribute__((availability(ios,introduced=4.0)));
typedef FourCharCode CMAudioCodecType;



enum

{
    kCMAudioCodecType_AAC_LCProtected = 'paac',
 kCMAudioCodecType_AAC_AudibleProtected = 'aaac'
};





typedef CMFormatDescriptionRef CMAudioFormatDescriptionRef;
extern
OSStatus CMAudioFormatDescriptionCreate(
 CFAllocatorRef _Nullable allocator,
 const AudioStreamBasicDescription * _Nonnull asbd,
 size_t layoutSize,
 const AudioChannelLayout * _Nullable layout,
 size_t magicCookieSize,
 const void * _Nullable magicCookie,
 CFDictionaryRef _Nullable extensions,


 __attribute__((cf_returns_retained)) CMAudioFormatDescriptionRef _Nullable * _Nonnull outDesc)
       __attribute__((availability(ios,introduced=4.0)));
extern
const AudioStreamBasicDescription * _Nullable CMAudioFormatDescriptionGetStreamBasicDescription(
 CMAudioFormatDescriptionRef _Nonnull desc)
       __attribute__((availability(ios,introduced=4.0)));
extern
const void * _Nullable CMAudioFormatDescriptionGetMagicCookie(
 CMAudioFormatDescriptionRef _Nonnull desc,
 size_t * _Nullable cookieSizeOut)
       __attribute__((availability(ios,introduced=4.0)));
extern
const AudioChannelLayout * _Nullable CMAudioFormatDescriptionGetChannelLayout(
 CMAudioFormatDescriptionRef _Nonnull desc,
 size_t * _Nullable layoutSize)

       __attribute__((availability(ios,introduced=4.0)));
extern
const AudioFormatListItem * _Nullable CMAudioFormatDescriptionGetFormatList(
 CMAudioFormatDescriptionRef _Nonnull desc,
 size_t * _Nullable formatListSize)

       __attribute__((availability(ios,introduced=4.0)));
extern
const AudioFormatListItem * _Nullable CMAudioFormatDescriptionGetRichestDecodableFormat(
 CMAudioFormatDescriptionRef _Nonnull desc)
       __attribute__((availability(ios,introduced=4.0)));
extern
const AudioFormatListItem * _Nullable CMAudioFormatDescriptionGetMostCompatibleFormat(
 CMAudioFormatDescriptionRef _Nonnull desc)
       __attribute__((availability(ios,introduced=4.0)));
extern OSStatus CMAudioFormatDescriptionCreateSummary(
  CFAllocatorRef _Nullable allocator,
  CFArrayRef _Nonnull formatDescriptionArray,
  uint32_t flags,
  __attribute__((cf_returns_retained)) CMAudioFormatDescriptionRef _Nullable * _Nonnull summaryFormatDescriptionOut )
       __attribute__((availability(ios,introduced=4.0)));
typedef uint32_t CMAudioFormatDescriptionMask;



enum

{
 kCMAudioFormatDescriptionMask_StreamBasicDescription = (1<<0),
 kCMAudioFormatDescriptionMask_MagicCookie = (1<<1),
 kCMAudioFormatDescriptionMask_ChannelLayout = (1<<2),
 kCMAudioFormatDescriptionMask_Extensions = (1<<3),
 kCMAudioFormatDescriptionMask_All = kCMAudioFormatDescriptionMask_StreamBasicDescription
               | kCMAudioFormatDescriptionMask_MagicCookie
               | kCMAudioFormatDescriptionMask_ChannelLayout
               | kCMAudioFormatDescriptionMask_Extensions
};
extern
Boolean CMAudioFormatDescriptionEqual(
 CMAudioFormatDescriptionRef _Nonnull desc1,
 CMAudioFormatDescriptionRef _Nonnull desc2,
 CMAudioFormatDescriptionMask equalityMask,
 CMAudioFormatDescriptionMask * _Nullable equalityMaskOut)


       __attribute__((availability(ios,introduced=4.0)));
typedef CMFormatDescriptionRef CMVideoFormatDescriptionRef;
typedef FourCharCode CMPixelFormatType;



enum

{
 kCMPixelFormat_32ARGB = 32,
 kCMPixelFormat_32BGRA = 'BGRA',
 kCMPixelFormat_24RGB = 24,
 kCMPixelFormat_16BE555 = 16,
 kCMPixelFormat_16BE565 = 'B565',
 kCMPixelFormat_16LE555 = 'L555',
 kCMPixelFormat_16LE565 = 'L565',
 kCMPixelFormat_16LE5551 = '5551',
 kCMPixelFormat_422YpCbCr8 = '2vuy',
 kCMPixelFormat_422YpCbCr8_yuvs = 'yuvs',
 kCMPixelFormat_444YpCbCr8 = 'v308',
 kCMPixelFormat_4444YpCbCrA8 = 'v408',
 kCMPixelFormat_422YpCbCr16 = 'v216',
 kCMPixelFormat_422YpCbCr10 = 'v210',
 kCMPixelFormat_444YpCbCr10 = 'v410',
 kCMPixelFormat_8IndexedGray_WhiteIsZero = 0x00000028,
};
typedef FourCharCode CMVideoCodecType;



enum

{
 kCMVideoCodecType_422YpCbCr8 = kCMPixelFormat_422YpCbCr8,
 kCMVideoCodecType_Animation = 'rle ',
 kCMVideoCodecType_Cinepak = 'cvid',
 kCMVideoCodecType_JPEG = 'jpeg',
 kCMVideoCodecType_JPEG_OpenDML = 'dmb1',
 kCMVideoCodecType_SorensonVideo = 'SVQ1',
 kCMVideoCodecType_SorensonVideo3 = 'SVQ3',
 kCMVideoCodecType_H263 = 'h263',
 kCMVideoCodecType_H264 = 'avc1',
 kCMVideoCodecType_HEVC = 'hvc1',
 kCMVideoCodecType_MPEG4Video = 'mp4v',
 kCMVideoCodecType_MPEG2Video = 'mp2v',
 kCMVideoCodecType_MPEG1Video = 'mp1v',

 kCMVideoCodecType_DVCNTSC = 'dvc ',
 kCMVideoCodecType_DVCPAL = 'dvcp',
 kCMVideoCodecType_DVCProPAL = 'dvpp',
 kCMVideoCodecType_DVCPro50NTSC = 'dv5n',
 kCMVideoCodecType_DVCPro50PAL = 'dv5p',
 kCMVideoCodecType_DVCPROHD720p60 = 'dvhp',
 kCMVideoCodecType_DVCPROHD720p50 = 'dvhq',
 kCMVideoCodecType_DVCPROHD1080i60 = 'dvh6',
 kCMVideoCodecType_DVCPROHD1080i50 = 'dvh5',
 kCMVideoCodecType_DVCPROHD1080p30 = 'dvh3',
 kCMVideoCodecType_DVCPROHD1080p25 = 'dvh2',

 kCMVideoCodecType_AppleProRes4444 = 'ap4h',
 kCMVideoCodecType_AppleProRes422HQ = 'apch',
 kCMVideoCodecType_AppleProRes422 = 'apcn',
 kCMVideoCodecType_AppleProRes422LT = 'apcs',
 kCMVideoCodecType_AppleProRes422Proxy = 'apco',
};





typedef struct {
 int32_t width;
 int32_t height;
} CMVideoDimensions;

#pragma clang assume_nonnull begin

extern const CFStringRef kCMFormatDescriptionExtension_FormatName
       __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kCMFormatDescriptionExtension_Depth
       __attribute__((availability(ios,introduced=4.0)));


extern const CFStringRef kCMFormatDescriptionExtension_CleanAperture __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kCMFormatDescriptionKey_CleanApertureWidth __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kCMFormatDescriptionKey_CleanApertureHeight __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kCMFormatDescriptionKey_CleanApertureHorizontalOffset __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kCMFormatDescriptionKey_CleanApertureVerticalOffset __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kCMFormatDescriptionKey_CleanApertureWidthRational
       __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kCMFormatDescriptionKey_CleanApertureHeightRational
       __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kCMFormatDescriptionKey_CleanApertureHorizontalOffsetRational
       __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kCMFormatDescriptionKey_CleanApertureVerticalOffsetRational
       __attribute__((availability(ios,introduced=4.0)));

extern const CFStringRef kCMFormatDescriptionExtension_FieldCount __attribute__((availability(ios,introduced=9.0)));


extern const CFStringRef kCMFormatDescriptionExtension_FieldDetail __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kCMFormatDescriptionFieldDetail_TemporalTopFirst __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kCMFormatDescriptionFieldDetail_TemporalBottomFirst __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kCMFormatDescriptionFieldDetail_SpatialFirstLineEarly __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kCMFormatDescriptionFieldDetail_SpatialFirstLineLate __attribute__((availability(ios,introduced=9.0)));






extern const CFStringRef kCMFormatDescriptionExtension_PixelAspectRatio __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kCMFormatDescriptionKey_PixelAspectRatioHorizontalSpacing __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kCMFormatDescriptionKey_PixelAspectRatioVerticalSpacing __attribute__((availability(ios,introduced=9.0)));




extern const CFStringRef kCMFormatDescriptionExtension_ColorPrimaries __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kCMFormatDescriptionColorPrimaries_ITU_R_709_2 __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kCMFormatDescriptionColorPrimaries_EBU_3213 __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kCMFormatDescriptionColorPrimaries_SMPTE_C __attribute__((availability(ios,introduced=9.0)));




extern const CFStringRef kCMFormatDescriptionColorPrimaries_DCI_P3
       __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kCMFormatDescriptionColorPrimaries_P3_D65
       __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kCMFormatDescriptionColorPrimaries_ITU_R_2020
       __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kCMFormatDescriptionColorPrimaries_P22
       __attribute__((availability(ios,introduced=6.0)));

extern const CFStringRef kCMFormatDescriptionExtension_TransferFunction __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kCMFormatDescriptionTransferFunction_ITU_R_709_2 __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kCMFormatDescriptionTransferFunction_SMPTE_240M_1995 __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kCMFormatDescriptionTransferFunction_UseGamma __attribute__((availability(ios,introduced=9.0)));




extern const CFStringRef kCMFormatDescriptionTransferFunction_ITU_R_2020
       __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kCMFormatDescriptionTransferFunction_SMPTE_ST_428_1
       __attribute__((availability(ios,introduced=10.0)));
extern const CFStringRef kCMFormatDescriptionTransferFunction_SMPTE_ST_2084_PQ
       __attribute__((availability(ios,introduced=11.0)));
extern const CFStringRef kCMFormatDescriptionTransferFunction_ITU_R_2100_HLG
       __attribute__((availability(ios,introduced=11.0)));

extern const CFStringRef kCMFormatDescriptionExtension_GammaLevel __attribute__((availability(ios,introduced=9.0)));


extern const CFStringRef kCMFormatDescriptionExtension_YCbCrMatrix __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kCMFormatDescriptionYCbCrMatrix_ITU_R_709_2 __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kCMFormatDescriptionYCbCrMatrix_ITU_R_601_4 __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kCMFormatDescriptionYCbCrMatrix_SMPTE_240M_1995 __attribute__((availability(ios,introduced=9.0)));




extern const CFStringRef kCMFormatDescriptionYCbCrMatrix_ITU_R_2020
       __attribute__((availability(ios,introduced=9.0)));

extern const CFStringRef kCMFormatDescriptionExtension_FullRangeVideo
       __attribute__((availability(ios,introduced=4.3)));

extern const CFStringRef kCMFormatDescriptionExtension_ICCProfile
       __attribute__((availability(ios,introduced=4.0)));

extern const CFStringRef kCMFormatDescriptionExtension_BytesPerRow
       __attribute__((availability(ios,introduced=4.0)));


extern const CFStringRef kCMFormatDescriptionExtension_ChromaLocationTopField __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kCMFormatDescriptionExtension_ChromaLocationBottomField __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kCMFormatDescriptionChromaLocation_Left __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kCMFormatDescriptionChromaLocation_Center __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kCMFormatDescriptionChromaLocation_TopLeft __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kCMFormatDescriptionChromaLocation_Top __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kCMFormatDescriptionChromaLocation_BottomLeft __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kCMFormatDescriptionChromaLocation_Bottom __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kCMFormatDescriptionChromaLocation_DV420 __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kCMFormatDescriptionConformsToMPEG2VideoProfile
       __attribute__((availability(ios,introduced=4.0)));




enum

{
 kCMMPEG2VideoProfile_HDV_720p30 = 'hdv1',
 kCMMPEG2VideoProfile_HDV_1080i60 = 'hdv2',
 kCMMPEG2VideoProfile_HDV_1080i50 = 'hdv3',
 kCMMPEG2VideoProfile_HDV_720p24 = 'hdv4',
 kCMMPEG2VideoProfile_HDV_720p25 = 'hdv5',
 kCMMPEG2VideoProfile_HDV_1080p24 = 'hdv6',
 kCMMPEG2VideoProfile_HDV_1080p25 = 'hdv7',
 kCMMPEG2VideoProfile_HDV_1080p30 = 'hdv8',
 kCMMPEG2VideoProfile_HDV_720p60 = 'hdv9',
 kCMMPEG2VideoProfile_HDV_720p50 = 'hdva',
 kCMMPEG2VideoProfile_XDCAM_HD_1080i60_VBR35 = 'xdv2',
 kCMMPEG2VideoProfile_XDCAM_HD_1080i50_VBR35 = 'xdv3',
 kCMMPEG2VideoProfile_XDCAM_HD_1080p24_VBR35 = 'xdv6',
 kCMMPEG2VideoProfile_XDCAM_HD_1080p25_VBR35 = 'xdv7',
 kCMMPEG2VideoProfile_XDCAM_HD_1080p30_VBR35 = 'xdv8',
 kCMMPEG2VideoProfile_XDCAM_EX_720p24_VBR35 = 'xdv4',
 kCMMPEG2VideoProfile_XDCAM_EX_720p25_VBR35 = 'xdv5',
 kCMMPEG2VideoProfile_XDCAM_EX_720p30_VBR35 = 'xdv1',
 kCMMPEG2VideoProfile_XDCAM_EX_720p50_VBR35 = 'xdva',
 kCMMPEG2VideoProfile_XDCAM_EX_720p60_VBR35 = 'xdv9',
 kCMMPEG2VideoProfile_XDCAM_EX_1080i60_VBR35 = 'xdvb',
 kCMMPEG2VideoProfile_XDCAM_EX_1080i50_VBR35 = 'xdvc',
 kCMMPEG2VideoProfile_XDCAM_EX_1080p24_VBR35 = 'xdvd',
 kCMMPEG2VideoProfile_XDCAM_EX_1080p25_VBR35 = 'xdve',
 kCMMPEG2VideoProfile_XDCAM_EX_1080p30_VBR35 = 'xdvf',
 kCMMPEG2VideoProfile_XDCAM_HD422_720p50_CBR50 = 'xd5a',
 kCMMPEG2VideoProfile_XDCAM_HD422_720p60_CBR50 = 'xd59',
 kCMMPEG2VideoProfile_XDCAM_HD422_1080i60_CBR50 = 'xd5b',
 kCMMPEG2VideoProfile_XDCAM_HD422_1080i50_CBR50 = 'xd5c',
 kCMMPEG2VideoProfile_XDCAM_HD422_1080p24_CBR50 = 'xd5d',
 kCMMPEG2VideoProfile_XDCAM_HD422_1080p25_CBR50 = 'xd5e',
 kCMMPEG2VideoProfile_XDCAM_HD422_1080p30_CBR50 = 'xd5f',
 kCMMPEG2VideoProfile_XDCAM_HD_540p = 'xdhd',
 kCMMPEG2VideoProfile_XDCAM_HD422_540p = 'xdh2',
 kCMMPEG2VideoProfile_XDCAM_HD422_720p24_CBR50 = 'xd54',
 kCMMPEG2VideoProfile_XDCAM_HD422_720p25_CBR50 = 'xd55',
 kCMMPEG2VideoProfile_XDCAM_HD422_720p30_CBR50 = 'xd51',
 kCMMPEG2VideoProfile_XF = 'xfz1',
};

extern const CFStringRef kCMFormatDescriptionExtension_TemporalQuality
       __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kCMFormatDescriptionExtension_SpatialQuality
       __attribute__((availability(ios,introduced=4.0)));

extern const CFStringRef kCMFormatDescriptionExtension_VerbatimImageDescription __attribute__((availability(ios,introduced=9.0)));


extern const CFStringRef kCMFormatDescriptionExtension_Version
       __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kCMFormatDescriptionExtension_RevisionLevel
       __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kCMFormatDescriptionExtension_Vendor
       __attribute__((availability(ios,introduced=4.0)));

extern const CFStringRef kCMFormatDescriptionVendor_Apple
       __attribute__((availability(ios,introduced=4.0)));

extern const CFStringRef kCMFormatDescriptionExtension_MasteringDisplayColorVolume
       __attribute__((availability(ios,introduced=11.0)));
extern const CFStringRef kCMFormatDescriptionExtension_ContentLightLevelInfo
       __attribute__((availability(ios,introduced=11.0)));
#pragma clang assume_nonnull end
extern
OSStatus CMVideoFormatDescriptionCreate(
 CFAllocatorRef _Nullable allocator,
 CMVideoCodecType codecType,
 int32_t width,
 int32_t height,
 CFDictionaryRef _Nullable extensions,


 __attribute__((cf_returns_retained)) CMVideoFormatDescriptionRef _Nullable * _Nonnull outDesc)
       __attribute__((availability(ios,introduced=4.0)));
extern
OSStatus CMVideoFormatDescriptionCreateForImageBuffer(
 CFAllocatorRef _Nullable allocator,

 CVImageBufferRef _Nonnull imageBuffer,

 __attribute__((cf_returns_retained)) CMVideoFormatDescriptionRef _Nullable * _Nonnull outDesc)

       __attribute__((availability(ios,introduced=4.0)));
extern
OSStatus CMVideoFormatDescriptionCreateFromH264ParameterSets(
 CFAllocatorRef _Nullable allocator,

  size_t parameterSetCount,

  const uint8_t * _Nonnull const * _Nonnull parameterSetPointers,

  const size_t * _Nonnull parameterSetSizes,

  int NALUnitHeaderLength,

 __attribute__((cf_returns_retained)) CMFormatDescriptionRef _Nullable * _Nonnull formatDescriptionOut )

       __attribute__((availability(ios,introduced=7.0)));
extern
OSStatus CMVideoFormatDescriptionCreateFromHEVCParameterSets(
 CFAllocatorRef _Nullable allocator,

 size_t parameterSetCount,

 const uint8_t * _Nonnull const * _Nonnull parameterSetPointers,

 const size_t * _Nonnull parameterSetSizes,

 int NALUnitHeaderLength,

 CFDictionaryRef _Nullable extensions,


 __attribute__((cf_returns_retained)) CMFormatDescriptionRef _Nullable * _Nonnull formatDescriptionOut )

       __attribute__((availability(ios,introduced=11.0)));
extern
OSStatus CMVideoFormatDescriptionGetH264ParameterSetAtIndex(
  CMFormatDescriptionRef _Nonnull videoDesc,

  size_t parameterSetIndex,

  const uint8_t * _Nullable * _Nullable parameterSetPointerOut,

  size_t * _Nullable parameterSetSizeOut,

  size_t * _Nullable parameterSetCountOut,

  int * _Nullable NALUnitHeaderLengthOut )

       __attribute__((availability(ios,introduced=7.0)));
extern
OSStatus CMVideoFormatDescriptionGetHEVCParameterSetAtIndex(
  CMFormatDescriptionRef _Nonnull videoDesc,

  size_t parameterSetIndex,

  const uint8_t * _Nullable * _Nullable parameterSetPointerOut,

  size_t * _Nullable parameterSetSizeOut,

  size_t * _Nullable parameterSetCountOut,

  int * _Nullable NALUnitHeaderLengthOut )

       __attribute__((availability(ios,introduced=11.0)));
extern
CMVideoDimensions CMVideoFormatDescriptionGetDimensions(
 CMVideoFormatDescriptionRef _Nonnull videoDesc)

       __attribute__((availability(ios,introduced=4.0)));







extern
CGSize CMVideoFormatDescriptionGetPresentationDimensions(
  CMVideoFormatDescriptionRef _Nonnull videoDesc,

  Boolean usePixelAspectRatio,

  Boolean useCleanAperture )

       __attribute__((availability(ios,introduced=4.0)));
extern
CGRect CMVideoFormatDescriptionGetCleanAperture(
  CMVideoFormatDescriptionRef _Nonnull videoDesc,

  Boolean originIsAtTopLeft )






       __attribute__((availability(ios,introduced=4.0)));
extern
CFArrayRef _Nonnull CMVideoFormatDescriptionGetExtensionKeysCommonWithImageBuffers(void)
       __attribute__((availability(ios,introduced=4.0)));
extern
Boolean CMVideoFormatDescriptionMatchesImageBuffer(
 CMVideoFormatDescriptionRef _Nonnull desc,
 CVImageBufferRef _Nonnull imageBuffer)
       __attribute__((availability(ios,introduced=4.0)));
typedef CMFormatDescriptionRef CMMuxedFormatDescriptionRef;
typedef FourCharCode CMMuxedStreamType;



enum

{
 kCMMuxedStreamType_MPEG1System = 'mp1s',
 kCMMuxedStreamType_MPEG2Transport = 'mp2t',
 kCMMuxedStreamType_MPEG2Program = 'mp2p',
 kCMMuxedStreamType_DV = 'dv  '
};
extern
OSStatus CMMuxedFormatDescriptionCreate(
 CFAllocatorRef _Nullable allocator,
 CMMuxedStreamType muxType,



 CFDictionaryRef _Nullable extensions,


 __attribute__((cf_returns_retained)) CMMuxedFormatDescriptionRef _Nullable * _Nonnull outDesc)
       __attribute__((availability(ios,introduced=4.0)));
typedef CMFormatDescriptionRef CMClosedCaptionFormatDescriptionRef;
typedef FourCharCode CMClosedCaptionFormatType;



enum

{
 kCMClosedCaptionFormatType_CEA608 = 'c608',
 kCMClosedCaptionFormatType_CEA708 = 'c708',
 kCMClosedCaptionFormatType_ATSC = 'atcc'
};
typedef CMFormatDescriptionRef CMTextFormatDescriptionRef;







typedef FourCharCode CMTextFormatType;



enum

{
    kCMTextFormatType_QTText = 'text',
    kCMTextFormatType_3GText = 'tx3g',
};
typedef uint32_t CMTextDisplayFlags;



enum

{
    kCMTextDisplayFlag_scrollIn = 0x00000020,
    kCMTextDisplayFlag_scrollOut = 0x00000040,
    kCMTextDisplayFlag_scrollDirectionMask = 0x00000180,
    kCMTextDisplayFlag_scrollDirection_bottomToTop = 0x00000000,
    kCMTextDisplayFlag_scrollDirection_rightToLeft = 0x00000080,
    kCMTextDisplayFlag_scrollDirection_topToBottom = 0x00000100,
    kCMTextDisplayFlag_scrollDirection_leftToRight = 0x00000180,
    kCMTextDisplayFlag_continuousKaraoke = 0x00000800,
    kCMTextDisplayFlag_writeTextVertically = 0x00020000,
    kCMTextDisplayFlag_fillTextRegion = 0x00040000,
    kCMTextDisplayFlag_obeySubtitleFormatting = 0x20000000,
    kCMTextDisplayFlag_forcedSubtitlesPresent = 0x40000000,
    kCMTextDisplayFlag_allSubtitlesForced = 0x80000000,
};
typedef int8_t CMTextJustificationValue;



enum

{
 kCMTextJustification_left_top = 0,
 kCMTextJustification_centered = 1,
 kCMTextJustification_bottom_right = -1
};

#pragma clang assume_nonnull begin


extern const CFStringRef kCMTextFormatDescriptionExtension_DisplayFlags
        __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kCMTextFormatDescriptionExtension_BackgroundColor
        __attribute__((availability(ios,introduced=4.0)));
    extern const CFStringRef kCMTextFormatDescriptionColor_Red
        __attribute__((availability(ios,introduced=4.0)));
    extern const CFStringRef kCMTextFormatDescriptionColor_Green
        __attribute__((availability(ios,introduced=4.0)));
    extern const CFStringRef kCMTextFormatDescriptionColor_Blue
        __attribute__((availability(ios,introduced=4.0)));
    extern const CFStringRef kCMTextFormatDescriptionColor_Alpha
        __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kCMTextFormatDescriptionExtension_DefaultTextBox
        __attribute__((availability(ios,introduced=4.0)));
    extern const CFStringRef kCMTextFormatDescriptionRect_Top
        __attribute__((availability(ios,introduced=4.0)));
    extern const CFStringRef kCMTextFormatDescriptionRect_Left
        __attribute__((availability(ios,introduced=4.0)));
    extern const CFStringRef kCMTextFormatDescriptionRect_Bottom
        __attribute__((availability(ios,introduced=4.0)));
    extern const CFStringRef kCMTextFormatDescriptionRect_Right
        __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kCMTextFormatDescriptionExtension_DefaultStyle
        __attribute__((availability(ios,introduced=4.0)));
    extern const CFStringRef kCMTextFormatDescriptionStyle_StartChar
        __attribute__((availability(ios,introduced=4.0)));
    extern const CFStringRef kCMTextFormatDescriptionStyle_Font
        __attribute__((availability(ios,introduced=4.0)));
    extern const CFStringRef kCMTextFormatDescriptionStyle_FontFace
        __attribute__((availability(ios,introduced=4.0)));
    extern const CFStringRef kCMTextFormatDescriptionStyle_ForegroundColor
        __attribute__((availability(ios,introduced=4.0)));
    extern const CFStringRef kCMTextFormatDescriptionStyle_FontSize
        __attribute__((availability(ios,introduced=4.0)));


extern const CFStringRef kCMTextFormatDescriptionExtension_HorizontalJustification
        __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kCMTextFormatDescriptionExtension_VerticalJustification
        __attribute__((availability(ios,introduced=4.0)));

    extern const CFStringRef kCMTextFormatDescriptionStyle_EndChar
        __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kCMTextFormatDescriptionExtension_FontTable
        __attribute__((availability(ios,introduced=4.0)));


extern const CFStringRef kCMTextFormatDescriptionExtension_TextJustification
        __attribute__((availability(ios,introduced=4.0)));

    extern const CFStringRef kCMTextFormatDescriptionStyle_Height
        __attribute__((availability(ios,introduced=4.0)));
    extern const CFStringRef kCMTextFormatDescriptionStyle_Ascent
        __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kCMTextFormatDescriptionExtension_DefaultFontName
        __attribute__((availability(ios,introduced=4.0)));
#pragma clang assume_nonnull end








extern
OSStatus CMTextFormatDescriptionGetDisplayFlags(
 CMFormatDescriptionRef _Nonnull desc,

 CMTextDisplayFlags * _Nonnull outDisplayFlags)

       __attribute__((availability(ios,introduced=4.0)));







extern
OSStatus CMTextFormatDescriptionGetJustification(
 CMFormatDescriptionRef _Nonnull desc,

 CMTextJustificationValue * _Nullable outHorizontalJust,

 CMTextJustificationValue * _Nullable outVerticalJust)

       __attribute__((availability(ios,introduced=4.0)));







extern
OSStatus CMTextFormatDescriptionGetDefaultTextBox(
 CMFormatDescriptionRef _Nonnull desc,

 Boolean originIsAtTopLeft,






 CGFloat heightOfTextTrack,



 CGRect * _Nonnull outDefaultTextBox)

       __attribute__((availability(ios,introduced=4.0)));







extern
OSStatus CMTextFormatDescriptionGetDefaultStyle(
 CMFormatDescriptionRef _Nonnull desc,

 uint16_t * _Nullable outLocalFontID,

 Boolean * _Nullable outBold,

 Boolean * _Nullable outItalic,

 Boolean * _Nullable outUnderline,

 CGFloat * _Nullable outFontSize,

 CGFloat outColorComponents[_Nullable 4])

       __attribute__((availability(ios,introduced=4.0)));
extern
OSStatus CMTextFormatDescriptionGetFontName(
 CMFormatDescriptionRef _Nonnull desc,

 uint16_t localFontID,

 __attribute__((cf_returns_not_retained)) CFStringRef _Nullable * _Nonnull outFontName)

       __attribute__((availability(ios,introduced=4.0)));





typedef FourCharCode CMSubtitleFormatType;




enum

{
    kCMSubtitleFormatType_3GText = 'tx3g',
 kCMSubtitleFormatType_WebVTT = 'wvtt',
};
typedef CMFormatDescriptionRef CMTimeCodeFormatDescriptionRef;
typedef FourCharCode CMTimeCodeFormatType;




enum

{
 kCMTimeCodeFormatType_TimeCode32 = 'tmcd',
 kCMTimeCodeFormatType_TimeCode64 = 'tc64',
 kCMTimeCodeFormatType_Counter32 = 'cn32',
 kCMTimeCodeFormatType_Counter64 = 'cn64'
};
enum

{
 kCMTimeCodeFlag_DropFrame = 1 << 0,
 kCMTimeCodeFlag_24HourMax = 1 << 1,
 kCMTimeCodeFlag_NegTimesOK = 1 << 2
};
extern
OSStatus CMTimeCodeFormatDescriptionCreate(
 CFAllocatorRef _Nullable allocator,

 CMTimeCodeFormatType timeCodeFormatType,

 CMTime frameDuration,

 uint32_t frameQuanta,

 uint32_t tcFlags,

 CFDictionaryRef _Nullable extensions,

 __attribute__((cf_returns_retained)) CMTimeCodeFormatDescriptionRef _Nullable * _Nonnull descOut)

       __attribute__((availability(ios,introduced=4.0)));







extern
CMTime CMTimeCodeFormatDescriptionGetFrameDuration(
 CMTimeCodeFormatDescriptionRef _Nonnull timeCodeFormatDescription)

       __attribute__((availability(ios,introduced=4.0)));





extern
uint32_t CMTimeCodeFormatDescriptionGetFrameQuanta(
 CMTimeCodeFormatDescriptionRef _Nonnull timeCodeFormatDescription)

       __attribute__((availability(ios,introduced=4.0)));





extern
uint32_t CMTimeCodeFormatDescriptionGetTimeCodeFlags(
 CMTimeCodeFormatDescriptionRef _Nonnull desc)

       __attribute__((availability(ios,introduced=4.0)));

#pragma clang assume_nonnull begin

extern const CFStringRef kCMTimeCodeFormatDescriptionExtension_SourceReferenceName
       __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kCMTimeCodeFormatDescriptionKey_Value
       __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kCMTimeCodeFormatDescriptionKey_LangCode
       __attribute__((availability(ios,introduced=4.0)));
#pragma clang assume_nonnull end
typedef CMFormatDescriptionRef CMMetadataFormatDescriptionRef;
typedef FourCharCode CMMetadataFormatType;



enum

{
 kCMMetadataFormatType_ICY = 'icy ',
 kCMMetadataFormatType_ID3 = 'id3 ',
 kCMMetadataFormatType_Boxed = 'mebx',
};

#pragma clang assume_nonnull begin

extern const CFStringRef kCMFormatDescriptionExtensionKey_MetadataKeyTable
       __attribute__((availability(ios,introduced=4.0)));
 extern const CFStringRef kCMMetadataFormatDescriptionKey_Namespace
       __attribute__((availability(ios,introduced=4.0)));
 extern const CFStringRef kCMMetadataFormatDescriptionKey_Value
       __attribute__((availability(ios,introduced=4.0)));
 extern const CFStringRef kCMMetadataFormatDescriptionKey_LocalID
       __attribute__((availability(ios,introduced=4.0)));
 extern const CFStringRef kCMMetadataFormatDescriptionKey_DataType
       __attribute__((availability(ios,introduced=8.0)));
 extern const CFStringRef kCMMetadataFormatDescriptionKey_DataTypeNamespace
       __attribute__((availability(ios,introduced=8.0)));
 extern const CFStringRef kCMMetadataFormatDescriptionKey_ConformingDataTypes
       __attribute__((availability(ios,introduced=8.0)));
 extern const CFStringRef kCMMetadataFormatDescriptionKey_LanguageTag
       __attribute__((availability(ios,introduced=8.0)));
 extern const CFStringRef kCMMetadataFormatDescriptionKey_StructuralDependency
       __attribute__((availability(ios,introduced=9.0)));
 extern const CFStringRef kCMMetadataFormatDescriptionKey_SetupData
       __attribute__((availability(ios,introduced=9.0)));

extern const CFStringRef kCMMetadataFormatDescription_StructuralDependencyKey_DependencyIsInvalidFlag
       __attribute__((availability(ios,introduced=9.0)));

extern const CFStringRef kCMMetadataFormatDescriptionMetadataSpecificationKey_Identifier
       __attribute__((availability(ios,introduced=8.0)));
extern const CFStringRef kCMMetadataFormatDescriptionMetadataSpecificationKey_DataType
       __attribute__((availability(ios,introduced=8.0)));
extern const CFStringRef kCMMetadataFormatDescriptionMetadataSpecificationKey_ExtendedLanguageTag
       __attribute__((availability(ios,introduced=8.0)));
extern const CFStringRef kCMMetadataFormatDescriptionMetadataSpecificationKey_StructuralDependency
       __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kCMMetadataFormatDescriptionMetadataSpecificationKey_SetupData
       __attribute__((availability(ios,introduced=9.0)));
#pragma clang assume_nonnull end



extern
OSStatus CMMetadataFormatDescriptionCreateWithKeys(
 CFAllocatorRef _Nullable allocator,
 CMMetadataFormatType metadataType,
 CFArrayRef _Nullable keys,






 __attribute__((cf_returns_retained)) CMMetadataFormatDescriptionRef _Nullable * _Nonnull outDesc)
       __attribute__((availability(ios,introduced=4.0)));

extern
OSStatus CMMetadataFormatDescriptionCreateWithMetadataSpecifications(
 CFAllocatorRef _Nullable allocator,
 CMMetadataFormatType metadataType,
 CFArrayRef _Nonnull metadataSpecifications,
 __attribute__((cf_returns_retained)) CMMetadataFormatDescriptionRef _Nullable * _Nonnull outDesc)
       __attribute__((availability(ios,introduced=8.0)));

extern
OSStatus CMMetadataFormatDescriptionCreateWithMetadataFormatDescriptionAndMetadataSpecifications(
 CFAllocatorRef _Nullable allocator,
 CMMetadataFormatDescriptionRef _Nonnull srcDesc,
 CFArrayRef _Nonnull metadataSpecifications,
 __attribute__((cf_returns_retained)) CMMetadataFormatDescriptionRef _Nullable * _Nonnull outDesc)
       __attribute__((availability(ios,introduced=8.0)));

extern
OSStatus CMMetadataFormatDescriptionCreateByMergingMetadataFormatDescriptions(
 CFAllocatorRef _Nullable allocator,
 CMMetadataFormatDescriptionRef _Nonnull srcDesc1,
 CMMetadataFormatDescriptionRef _Nonnull srcDesc2,
 __attribute__((cf_returns_retained)) CMMetadataFormatDescriptionRef _Nullable * _Nonnull outDesc)
       __attribute__((availability(ios,introduced=8.0)));



extern
CFDictionaryRef _Nullable CMMetadataFormatDescriptionGetKeyWithLocalID( CMMetadataFormatDescriptionRef _Nonnull desc, OSType localKeyID)
       __attribute__((availability(ios,introduced=4.0)));

extern
CFArrayRef _Nullable CMMetadataFormatDescriptionGetIdentifiers( CMMetadataFormatDescriptionRef _Nonnull desc)
       __attribute__((availability(ios,introduced=8.0)));



#pragma pack(pop)


}


extern "C" {


#pragma pack(push, 4)
enum

{
 kCMSampleBufferError_AllocationFailed = -12730,
 kCMSampleBufferError_RequiredParameterMissing = -12731,
 kCMSampleBufferError_AlreadyHasDataBuffer = -12732,
 kCMSampleBufferError_BufferNotReady = -12733,
 kCMSampleBufferError_SampleIndexOutOfRange = -12734,
 kCMSampleBufferError_BufferHasNoSampleSizes = -12735,
 kCMSampleBufferError_BufferHasNoSampleTimingInfo = -12736,
 kCMSampleBufferError_ArrayTooSmall = -12737,
 kCMSampleBufferError_InvalidEntryCount = -12738,
 kCMSampleBufferError_CannotSubdivide = -12739,
    kCMSampleBufferError_SampleTimingInfoInvalid = -12740,
    kCMSampleBufferError_InvalidMediaTypeForOperation = -12741,
 kCMSampleBufferError_InvalidSampleData = -12742,
    kCMSampleBufferError_InvalidMediaFormat = -12743,
 kCMSampleBufferError_Invalidated = -12744,
 kCMSampleBufferError_DataFailed = -16750,
 kCMSampleBufferError_DataCanceled = -16751,
};
enum

{
 kCMSampleBufferFlag_AudioBufferList_Assure16ByteAlignment = (1L<<0)
};







typedef struct __attribute__((objc_bridge(id))) opaqueCMSampleBuffer *CMSampleBufferRef;







typedef struct
{
 CMTime duration;


 CMTime presentationTimeStamp;




 CMTime decodeTimeStamp;


} CMSampleTimingInfo;

extern const CMSampleTimingInfo kCMTimingInfoInvalid


       __attribute__((availability(ios,introduced=4.0)));







typedef OSStatus (*CMSampleBufferMakeDataReadyCallback)
 (CMSampleBufferRef _Nonnull sbuf,

 void * _Nullable makeDataReadyRefcon);
extern
OSStatus CMSampleBufferCreate(
 CFAllocatorRef _Nullable allocator,


 CMBlockBufferRef _Nullable dataBuffer,




 Boolean dataReady,

 CMSampleBufferMakeDataReadyCallback _Nullable makeDataReadyCallback,



 void * _Nullable makeDataReadyRefcon,

 CMFormatDescriptionRef _Nullable formatDescription,

 CMItemCount numSamples,

 CMItemCount numSampleTimingEntries,

 const CMSampleTimingInfo * _Nullable sampleTimingArray,






 CMItemCount numSampleSizeEntries,

 const size_t * _Nullable sampleSizeArray,




 __attribute__((cf_returns_retained)) CMSampleBufferRef _Nullable * _Nonnull sBufOut)

       __attribute__((availability(ios,introduced=4.0)));
extern
OSStatus CMSampleBufferCreateReady(
 CFAllocatorRef _Nullable allocator,


 CMBlockBufferRef _Nullable dataBuffer,

 CMFormatDescriptionRef _Nullable formatDescription,

 CMItemCount numSamples,

 CMItemCount numSampleTimingEntries,

 const CMSampleTimingInfo * _Nullable sampleTimingArray,






 CMItemCount numSampleSizeEntries,

 const size_t * _Nullable sampleSizeArray,




 __attribute__((cf_returns_retained)) CMSampleBufferRef _Nullable * _Nonnull sBufOut)

       __attribute__((availability(ios,introduced=8.0)));
extern
OSStatus CMAudioSampleBufferCreateWithPacketDescriptions(
 CFAllocatorRef _Nullable allocator,


 CMBlockBufferRef _Nullable dataBuffer,




 Boolean dataReady,

 CMSampleBufferMakeDataReadyCallback _Nullable makeDataReadyCallback,



 void * _Nullable makeDataReadyRefcon,

 CMFormatDescriptionRef _Nonnull formatDescription,

 CMItemCount numSamples,

 CMTime sbufPTS,

 const AudioStreamPacketDescription * _Nullable packetDescriptions,



 __attribute__((cf_returns_retained)) CMSampleBufferRef _Nullable * _Nonnull sBufOut)

       __attribute__((availability(ios,introduced=4.0)));
extern
OSStatus CMAudioSampleBufferCreateReadyWithPacketDescriptions(
 CFAllocatorRef _Nullable allocator,


 CMBlockBufferRef _Nullable dataBuffer,

 CMFormatDescriptionRef _Nonnull formatDescription,

 CMItemCount numSamples,

 CMTime sbufPTS,

 const AudioStreamPacketDescription * _Nullable packetDescriptions,



 __attribute__((cf_returns_retained)) CMSampleBufferRef _Nullable * _Nonnull sBufOut)

       __attribute__((availability(ios,introduced=8.0)));
extern
OSStatus CMSampleBufferCreateForImageBuffer(
 CFAllocatorRef _Nullable allocator,


 CVImageBufferRef _Nonnull imageBuffer,



 Boolean dataReady,

 CMSampleBufferMakeDataReadyCallback _Nullable makeDataReadyCallback,



 void * _Nullable makeDataReadyRefcon,

 CMVideoFormatDescriptionRef _Nonnull formatDescription,


 const CMSampleTimingInfo * _Nonnull sampleTiming,


 __attribute__((cf_returns_retained)) CMSampleBufferRef _Nullable * _Nonnull sBufOut)

       __attribute__((availability(ios,introduced=4.0)));
extern
OSStatus CMSampleBufferCreateReadyWithImageBuffer(
 CFAllocatorRef _Nullable allocator,


 CVImageBufferRef _Nonnull imageBuffer,

 CMVideoFormatDescriptionRef _Nonnull formatDescription,


 const CMSampleTimingInfo * _Nonnull sampleTiming,


 __attribute__((cf_returns_retained)) CMSampleBufferRef _Nullable * _Nonnull sBufOut)

       __attribute__((availability(ios,introduced=8.0)));
extern
OSStatus CMSampleBufferCreateCopy(
 CFAllocatorRef _Nullable allocator,


 CMSampleBufferRef _Nonnull sbuf,

 __attribute__((cf_returns_retained)) CMSampleBufferRef _Nullable * _Nonnull sbufCopyOut)

       __attribute__((availability(ios,introduced=4.0)));
extern
OSStatus CMSampleBufferCreateCopyWithNewTiming(
  CFAllocatorRef _Nullable allocator,


  CMSampleBufferRef _Nonnull originalSBuf,


  CMItemCount numSampleTimingEntries,


  const CMSampleTimingInfo * _Nullable sampleTimingArray,






  __attribute__((cf_returns_retained)) CMSampleBufferRef _Nullable * _Nonnull sBufCopyOut)

       __attribute__((availability(ios,introduced=4.0)));






extern
OSStatus CMSampleBufferCopySampleBufferForRange(
  CFAllocatorRef _Nullable allocator,


  CMSampleBufferRef _Nonnull sbuf,


  CFRange sampleRange,

  __attribute__((cf_returns_retained)) CMSampleBufferRef _Nullable * _Nonnull sBufOut)

       __attribute__((availability(ios,introduced=4.0)));
extern
CFTypeID CMSampleBufferGetTypeID(void)
       __attribute__((availability(ios,introduced=4.0)));
extern
OSStatus CMSampleBufferSetDataBuffer(
 CMSampleBufferRef _Nonnull sbuf,

 CMBlockBufferRef _Nonnull dataBuffer)

       __attribute__((availability(ios,introduced=4.0)));
extern
CMBlockBufferRef _Nullable CMSampleBufferGetDataBuffer(
 CMSampleBufferRef _Nonnull sbuf)

       __attribute__((availability(ios,introduced=4.0)));
extern
CVImageBufferRef _Nullable CMSampleBufferGetImageBuffer(
 CMSampleBufferRef _Nonnull sbuf)

       __attribute__((availability(ios,introduced=4.0)));
extern
OSStatus CMSampleBufferSetDataBufferFromAudioBufferList(
 CMSampleBufferRef _Nonnull sbuf,

 CFAllocatorRef _Nullable bbufStructAllocator,

 CFAllocatorRef _Nullable bbufMemoryAllocator,

 uint32_t flags,

 const AudioBufferList * _Nonnull bufferList)

       __attribute__((availability(ios,introduced=4.0)));
extern
OSStatus CMSampleBufferGetAudioBufferListWithRetainedBlockBuffer(
 CMSampleBufferRef _Nonnull sbuf,

 size_t * _Nullable bufferListSizeNeededOut,


 AudioBufferList * _Nullable bufferListOut,



 size_t bufferListSize,



 CFAllocatorRef _Nullable bbufStructAllocator,

 CFAllocatorRef _Nullable bbufMemoryAllocator,

 uint32_t flags,

 __attribute__((cf_returns_retained)) CMBlockBufferRef _Nullable * _Nullable blockBufferOut)

       __attribute__((availability(ios,introduced=4.0)));
extern
OSStatus CMSampleBufferGetAudioStreamPacketDescriptions(
    CMSampleBufferRef _Nonnull sbuf,

    size_t packetDescriptionsSize,

     AudioStreamPacketDescription * _Nullable packetDescriptionsOut,




    size_t * _Nullable packetDescriptionsSizeNeededOut )

       __attribute__((availability(ios,introduced=4.0)));
extern
OSStatus CMSampleBufferGetAudioStreamPacketDescriptionsPtr(
    CMSampleBufferRef _Nonnull sbuf,
    const AudioStreamPacketDescription * _Nullable * _Nullable packetDescriptionsPtrOut,
    size_t * _Nullable packetDescriptionsSizeOut )
       __attribute__((availability(ios,introduced=4.0)));
extern
OSStatus CMSampleBufferCopyPCMDataIntoAudioBufferList(
 CMSampleBufferRef _Nonnull sbuf,
 int32_t frameOffset,
 int32_t numFrames,
 AudioBufferList * _Nonnull bufferList)
       __attribute__((availability(ios,introduced=7.0)));
extern
OSStatus CMSampleBufferSetDataReady(
 CMSampleBufferRef _Nonnull sbuf)

       __attribute__((availability(ios,introduced=4.0)));







extern
Boolean CMSampleBufferDataIsReady(
 CMSampleBufferRef _Nonnull sbuf)

       __attribute__((availability(ios,introduced=4.0)));





extern
OSStatus CMSampleBufferSetDataFailed(
 CMSampleBufferRef _Nonnull sbuf,

 OSStatus status)

       __attribute__((availability(ios,introduced=8.0)));





extern
Boolean CMSampleBufferHasDataFailed(
 CMSampleBufferRef _Nonnull sbuf,

 OSStatus * _Nullable statusOut)


       __attribute__((availability(ios,introduced=8.0)));
extern
OSStatus CMSampleBufferMakeDataReady(
 CMSampleBufferRef _Nonnull sbuf)

       __attribute__((availability(ios,introduced=4.0)));
extern
OSStatus CMSampleBufferTrackDataReadiness(
 CMSampleBufferRef _Nonnull sbuf,

 CMSampleBufferRef _Nonnull sbufToTrack)

       __attribute__((availability(ios,introduced=4.0)));
extern
OSStatus CMSampleBufferInvalidate(
 CMSampleBufferRef _Nonnull sbuf )

       __attribute__((availability(ios,introduced=4.0)));





typedef void (*CMSampleBufferInvalidateCallback)
 (CMSampleBufferRef _Nonnull sbuf,

 uint64_t invalidateRefCon);
extern OSStatus
CMSampleBufferSetInvalidateCallback(
 CMSampleBufferRef _Nonnull sbuf,

 CMSampleBufferInvalidateCallback _Nonnull invalidateCallback,

 uint64_t invalidateRefCon )

       __attribute__((availability(ios,introduced=4.0)));






typedef void (*CMSampleBufferInvalidateHandler)
 (CMSampleBufferRef _Nonnull sbuf);
extern OSStatus
CMSampleBufferSetInvalidateHandler(
 CMSampleBufferRef _Nonnull sbuf,

 CMSampleBufferInvalidateHandler _Nonnull invalidateHandler )

       __attribute__((availability(ios,introduced=8.0)));
extern
Boolean CMSampleBufferIsValid(
 CMSampleBufferRef _Nonnull sbuf )

       __attribute__((availability(ios,introduced=4.0)));

#pragma clang assume_nonnull begin





extern const CFStringRef kCMSampleBufferNotification_DataBecameReady
       __attribute__((availability(ios,introduced=4.0)));





extern const CFStringRef kCMSampleBufferNotification_DataFailed
       __attribute__((availability(ios,introduced=8.0)));
extern const CFStringRef kCMSampleBufferNotificationParameter_OSStatus
       __attribute__((availability(ios,introduced=8.0)));
extern const CFStringRef kCMSampleBufferConduitNotification_InhibitOutputUntil
       __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kCMSampleBufferConduitNotificationParameter_ResumeTag
       __attribute__((availability(ios,introduced=4.0)));





extern const CFStringRef kCMSampleBufferConduitNotification_ResetOutput
       __attribute__((availability(ios,introduced=4.0)));





extern const CFStringRef kCMSampleBufferConduitNotification_UpcomingOutputPTSRangeChanged
       __attribute__((availability(ios,introduced=4.3)));
extern const CFStringRef kCMSampleBufferConduitNotificationParameter_UpcomingOutputPTSRangeMayOverlapQueuedOutputPTSRange
       __attribute__((availability(ios,introduced=4.3)));
extern const CFStringRef kCMSampleBufferConduitNotificationParameter_MinUpcomingOutputPTS
       __attribute__((availability(ios,introduced=4.3)));
extern const CFStringRef kCMSampleBufferConduitNotificationParameter_MaxUpcomingOutputPTS
       __attribute__((availability(ios,introduced=5.0)));
extern const CFStringRef kCMSampleBufferConsumerNotification_BufferConsumed
       __attribute__((availability(ios,introduced=4.0)));
#pragma clang assume_nonnull end
extern
CMItemCount CMSampleBufferGetNumSamples(
 CMSampleBufferRef _Nonnull sbuf)

       __attribute__((availability(ios,introduced=4.0)));
extern
CMTime CMSampleBufferGetDuration(
 CMSampleBufferRef _Nonnull sbuf)

       __attribute__((availability(ios,introduced=4.0)));
extern
CMTime CMSampleBufferGetPresentationTimeStamp(
 CMSampleBufferRef _Nonnull sbuf)

       __attribute__((availability(ios,introduced=4.0)));
extern
CMTime CMSampleBufferGetDecodeTimeStamp(
 CMSampleBufferRef _Nonnull sbuf)

       __attribute__((availability(ios,introduced=4.0)));
extern
CMTime CMSampleBufferGetOutputDuration(
 CMSampleBufferRef _Nonnull sbuf)

       __attribute__((availability(ios,introduced=4.0)));
extern
CMTime CMSampleBufferGetOutputPresentationTimeStamp(
 CMSampleBufferRef _Nonnull sbuf)

       __attribute__((availability(ios,introduced=4.0)));
extern
OSStatus CMSampleBufferSetOutputPresentationTimeStamp(
 CMSampleBufferRef _Nonnull sbuf,

 CMTime outputPresentationTimeStamp)


       __attribute__((availability(ios,introduced=4.0)));
extern
CMTime CMSampleBufferGetOutputDecodeTimeStamp(
 CMSampleBufferRef _Nonnull sbuf)

       __attribute__((availability(ios,introduced=4.0)));
extern
OSStatus CMSampleBufferGetSampleTimingInfoArray(
 CMSampleBufferRef _Nonnull sbuf,

 CMItemCount timingArrayEntries,

 CMSampleTimingInfo * _Nullable timingArrayOut,


 CMItemCount * _Nullable timingArrayEntriesNeededOut)

       __attribute__((availability(ios,introduced=4.0)));
extern
OSStatus CMSampleBufferGetOutputSampleTimingInfoArray(
 CMSampleBufferRef _Nonnull sbuf,

 CMItemCount timingArrayEntries,

 CMSampleTimingInfo * _Nullable timingArrayOut,


 CMItemCount * _Nullable timingArrayEntriesNeededOut)

       __attribute__((availability(ios,introduced=4.0)));
extern
OSStatus CMSampleBufferGetSampleTimingInfo(
 CMSampleBufferRef _Nonnull sbuf,

 CMItemIndex sampleIndex,

 CMSampleTimingInfo * _Nonnull timingInfoOut)


       __attribute__((availability(ios,introduced=4.0)));
extern
OSStatus CMSampleBufferGetSampleSizeArray(
 CMSampleBufferRef _Nonnull sbuf,

 CMItemCount sizeArrayEntries,

 size_t * _Nullable sizeArrayOut,


 CMItemCount * _Nullable sizeArrayEntriesNeededOut)

       __attribute__((availability(ios,introduced=4.0)));
extern
size_t CMSampleBufferGetSampleSize(
 CMSampleBufferRef _Nonnull sbuf,

 CMItemIndex sampleIndex)

       __attribute__((availability(ios,introduced=4.0)));







extern
size_t CMSampleBufferGetTotalSampleSize(
 CMSampleBufferRef _Nonnull sbuf)

       __attribute__((availability(ios,introduced=4.0)));







extern
_Nullable CMFormatDescriptionRef CMSampleBufferGetFormatDescription(
 CMSampleBufferRef _Nonnull sbuf)

       __attribute__((availability(ios,introduced=4.0)));
extern
_Nullable CFArrayRef CMSampleBufferGetSampleAttachmentsArray(
 CMSampleBufferRef _Nonnull sbuf,

 Boolean createIfNecessary)


       __attribute__((availability(ios,introduced=4.0)));

#pragma clang assume_nonnull begin


extern const CFStringRef kCMSampleAttachmentKey_NotSync
       __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kCMSampleAttachmentKey_PartialSync
       __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kCMSampleAttachmentKey_HasRedundantCoding
       __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kCMSampleAttachmentKey_IsDependedOnByOthers
       __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kCMSampleAttachmentKey_DependsOnOthers
       __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kCMSampleAttachmentKey_EarlierDisplayTimesAllowed
       __attribute__((availability(ios,introduced=4.0)));


extern const CFStringRef kCMSampleAttachmentKey_DisplayImmediately
       __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kCMSampleAttachmentKey_DoNotDisplay
       __attribute__((availability(ios,introduced=4.0)));


extern const CFStringRef kCMSampleBufferAttachmentKey_ResetDecoderBeforeDecoding
       __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kCMSampleBufferAttachmentKey_DrainAfterDecoding
       __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kCMSampleBufferAttachmentKey_PostNotificationWhenConsumed
       __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kCMSampleBufferAttachmentKey_ResumeOutput
       __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kCMSampleAttachmentKey_HEVCTemporalLevelInfo
       __attribute__((availability(ios,introduced=11.0)));

extern const CFStringRef kCMHEVCTemporalLevelInfoKey_TemporalLevel
       __attribute__((availability(ios,introduced=11.0)));
extern const CFStringRef kCMHEVCTemporalLevelInfoKey_ProfileSpace
       __attribute__((availability(ios,introduced=11.0)));
extern const CFStringRef kCMHEVCTemporalLevelInfoKey_TierFlag
       __attribute__((availability(ios,introduced=11.0)));
extern const CFStringRef kCMHEVCTemporalLevelInfoKey_ProfileIndex
       __attribute__((availability(ios,introduced=11.0)));
extern const CFStringRef kCMHEVCTemporalLevelInfoKey_ProfileCompatibilityFlags
       __attribute__((availability(ios,introduced=11.0)));
extern const CFStringRef kCMHEVCTemporalLevelInfoKey_ConstraintIndicatorFlags
       __attribute__((availability(ios,introduced=11.0)));
extern const CFStringRef kCMHEVCTemporalLevelInfoKey_LevelIndex
       __attribute__((availability(ios,introduced=11.0)));

extern const CFStringRef kCMSampleAttachmentKey_HEVCTemporalSubLayerAccess
       __attribute__((availability(ios,introduced=11.0)));

extern const CFStringRef kCMSampleAttachmentKey_HEVCStepwiseTemporalSubLayerAccess
       __attribute__((availability(ios,introduced=11.0)));

extern const CFStringRef kCMSampleAttachmentKey_HEVCSyncSampleNALUnitType
       __attribute__((availability(ios,introduced=11.0)));
extern const CFStringRef kCMSampleBufferAttachmentKey_TransitionID
       __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kCMSampleBufferAttachmentKey_TrimDurationAtStart
       __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kCMSampleBufferAttachmentKey_TrimDurationAtEnd
       __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kCMSampleBufferAttachmentKey_SpeedMultiplier
       __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kCMSampleBufferAttachmentKey_Reverse
       __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kCMSampleBufferAttachmentKey_FillDiscontinuitiesWithSilence
       __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kCMSampleBufferAttachmentKey_EmptyMedia
       __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kCMSampleBufferAttachmentKey_PermanentEmptyMedia
       __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kCMSampleBufferAttachmentKey_DisplayEmptyMediaImmediately
       __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kCMSampleBufferAttachmentKey_EndsPreviousSampleDuration
       __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kCMSampleBufferAttachmentKey_SampleReferenceURL
       __attribute__((availability(ios,introduced=4.0)));
extern const CFStringRef kCMSampleBufferAttachmentKey_SampleReferenceByteOffset
       __attribute__((availability(ios,introduced=4.0)));







extern const CFStringRef kCMSampleBufferAttachmentKey_GradualDecoderRefresh
       __attribute__((availability(ios,introduced=4.3)));
extern const CFStringRef kCMSampleBufferAttachmentKey_DroppedFrameReason
       __attribute__((availability(ios,introduced=6.0)));
extern const CFStringRef kCMSampleBufferDroppedFrameReason_FrameWasLate
       __attribute__((availability(ios,introduced=6.0)));
extern const CFStringRef kCMSampleBufferDroppedFrameReason_OutOfBuffers
       __attribute__((availability(ios,introduced=6.0)));
extern const CFStringRef kCMSampleBufferDroppedFrameReason_Discontinuity
       __attribute__((availability(ios,introduced=6.0)));
extern const CFStringRef kCMSampleBufferAttachmentKey_DroppedFrameReasonInfo
       __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kCMSampleBufferDroppedFrameReasonInfo_CameraModeSwitch
       __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kCMSampleBufferAttachmentKey_StillImageLensStabilizationInfo
       __attribute__((availability(ios,introduced=9.0)));






extern const CFStringRef kCMSampleBufferLensStabilizationInfo_Active
       __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kCMSampleBufferLensStabilizationInfo_OutOfRange
       __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kCMSampleBufferLensStabilizationInfo_Unavailable
       __attribute__((availability(ios,introduced=9.0)));







extern const CFStringRef kCMSampleBufferLensStabilizationInfo_Off
       __attribute__((availability(ios,introduced=9.0)));
extern const CFStringRef kCMSampleBufferAttachmentKey_CameraIntrinsicMatrix
       __attribute__((availability(ios,introduced=11.0)));
extern const CFStringRef kCMSampleBufferAttachmentKey_ForceKeyFrame
       __attribute__((availability(ios,introduced=8.0)));
#pragma clang assume_nonnull end
extern OSStatus
CMSampleBufferCallForEachSample(
 CMSampleBufferRef _Nonnull sbuf,

 OSStatus (* _Nonnull callback)( CMSampleBufferRef _Nonnull sampleBuffer, CMItemCount index, void * _Nullable refcon ),


 void * _Nullable refcon )

       __attribute__((availability(ios,introduced=4.0)));
extern OSStatus
CMSampleBufferCallBlockForEachSample(
 CMSampleBufferRef _Nonnull sbuf,

 OSStatus (^ _Nonnull handler)( CMSampleBufferRef _Nonnull sampleBuffer, CMItemCount index ) )


       __attribute__((availability(ios,introduced=8.0)));




#pragma pack(pop)


}

// @class AVAsset;
#ifndef _REWRITER_typedef_AVAsset
#define _REWRITER_typedef_AVAsset
typedef struct objc_object AVAsset;
typedef struct {} _objc_exc_AVAsset;
#endif

// @class AVAssetReaderOutput;
#ifndef _REWRITER_typedef_AVAssetReaderOutput
#define _REWRITER_typedef_AVAssetReaderOutput
typedef struct objc_object AVAssetReaderOutput;
typedef struct {} _objc_exc_AVAssetReaderOutput;
#endif

// @class AVAssetReaderInternal;
#ifndef _REWRITER_typedef_AVAssetReaderInternal
#define _REWRITER_typedef_AVAssetReaderInternal
typedef struct objc_object AVAssetReaderInternal;
typedef struct {} _objc_exc_AVAssetReaderInternal;
#endif


#pragma clang assume_nonnull begin
typedef NSInteger AVAssetReaderStatus; enum {
    AVAssetReaderStatusUnknown = 0,
    AVAssetReaderStatusReading,
    AVAssetReaderStatusCompleted,
    AVAssetReaderStatusFailed,
    AVAssetReaderStatusCancelled,
};
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_1)))

#ifndef _REWRITER_typedef_AVAssetReader
#define _REWRITER_typedef_AVAssetReader
typedef struct objc_object AVAssetReader;
typedef struct {} _objc_exc_AVAssetReader;
#endif

struct AVAssetReader_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVAssetReaderInternal *__strong _priv;
};

// - (instancetype)init __attribute__((unavailable)); // + (instancetype)new __attribute__((unavailable));
// + (nullable instancetype)assetReaderWithAsset:(AVAsset *)asset error:(NSError * _Nullable * _Nullable)outError;
// - (nullable instancetype)initWithAsset:(AVAsset *)asset error:(NSError * _Nullable * _Nullable)outError __attribute__((objc_designated_initializer));
// @property (nonatomic, retain, readonly) AVAsset *asset;
// @property (readonly) AVAssetReaderStatus status;
// @property (readonly, nullable) NSError *error;
// @property (nonatomic) CMTimeRange timeRange;
// @property (nonatomic, readonly) NSArray<AVAssetReaderOutput *> *outputs;
// - (BOOL)canAddOutput:(AVAssetReaderOutput *)output;
// - (void)addOutput:(AVAssetReaderOutput *)output;
// - (BOOL)startReading;
// - (void)cancelReading;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

typedef struct {
 NSInteger horizontalSpacing;
 NSInteger verticalSpacing;
} AVPixelAspectRatio;

typedef struct {
 CGFloat left;
 CGFloat top;
 CGFloat right;
 CGFloat bottom;
} AVEdgeWidths;
// @class AVVideoComposition;
#ifndef _REWRITER_typedef_AVVideoComposition
#define _REWRITER_typedef_AVVideoComposition
typedef struct objc_object AVVideoComposition;
typedef struct {} _objc_exc_AVVideoComposition;
#endif

// @class AVAsynchronousVideoCompositionRequest;
#ifndef _REWRITER_typedef_AVAsynchronousVideoCompositionRequest
#define _REWRITER_typedef_AVAsynchronousVideoCompositionRequest
typedef struct objc_object AVAsynchronousVideoCompositionRequest;
typedef struct {} _objc_exc_AVAsynchronousVideoCompositionRequest;
#endif

// @protocol AVVideoCompositionInstruction;

// @class AVVideoCompositionRenderContextInternal;
#ifndef _REWRITER_typedef_AVVideoCompositionRenderContextInternal
#define _REWRITER_typedef_AVVideoCompositionRenderContextInternal
typedef struct objc_object AVVideoCompositionRenderContextInternal;
typedef struct {} _objc_exc_AVVideoCompositionRenderContextInternal;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0)))

#ifndef _REWRITER_typedef_AVVideoCompositionRenderContext
#define _REWRITER_typedef_AVVideoCompositionRenderContext
typedef struct objc_object AVVideoCompositionRenderContext;
typedef struct {} _objc_exc_AVVideoCompositionRenderContext;
#endif

struct AVVideoCompositionRenderContext_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVVideoCompositionRenderContextInternal *__strong _internal;
};



// @property (nonatomic, readonly) CGSize size;



// @property (nonatomic, readonly) CGAffineTransform renderTransform;


// @property (nonatomic, readonly) float renderScale;


// @property (nonatomic, readonly) AVPixelAspectRatio pixelAspectRatio;


// @property (nonatomic, readonly) AVEdgeWidths edgeWidths;



// @property (nonatomic, readonly) BOOL highQualityRendering;


// @property (nonatomic, readonly) AVVideoComposition *videoComposition;
// - (nullable CVPixelBufferRef)newPixelBuffer __attribute__((cf_returns_retained));

/* @end */

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0)))
// @protocol AVVideoCompositing<NSObject>

/* @required */
// @property (nonatomic, readonly, nullable) NSDictionary<NSString *, id> *sourcePixelBufferAttributes;
// @property (nonatomic, readonly) NSDictionary<NSString *, id> *requiredPixelBufferAttributesForRenderContext;
// - (void)renderContextChanged:(AVVideoCompositionRenderContext *)newRenderContext;
// - (void)startVideoCompositionRequest:(AVAsynchronousVideoCompositionRequest *)asyncVideoCompositionRequest;

/* @optional */
// - (void)cancelAllPendingVideoCompositionRequests;
// @property (nonatomic, readonly) BOOL supportsWideColorSourceFrames __attribute__((availability(ios,introduced=10_0)));

/* @end */








// @class AVAsynchronousVideoCompositionRequestInternal;
#ifndef _REWRITER_typedef_AVAsynchronousVideoCompositionRequestInternal
#define _REWRITER_typedef_AVAsynchronousVideoCompositionRequestInternal
typedef struct objc_object AVAsynchronousVideoCompositionRequestInternal;
typedef struct {} _objc_exc_AVAsynchronousVideoCompositionRequestInternal;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0)))

#ifndef _REWRITER_typedef_AVAsynchronousVideoCompositionRequest
#define _REWRITER_typedef_AVAsynchronousVideoCompositionRequest
typedef struct objc_object AVAsynchronousVideoCompositionRequest;
typedef struct {} _objc_exc_AVAsynchronousVideoCompositionRequest;
#endif

struct AVAsynchronousVideoCompositionRequest_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVAsynchronousVideoCompositionRequestInternal *__strong _internal;
};



// @property (nonatomic, readonly) AVVideoCompositionRenderContext *renderContext;


// @property (nonatomic, readonly) CMTime compositionTime;


// @property (nonatomic, readonly) NSArray<NSNumber *> *sourceTrackIDs;


// @property (nonatomic, readonly) id<AVVideoCompositionInstruction> videoCompositionInstruction;







// - (nullable CVPixelBufferRef)sourceFrameByTrackID:(CMPersistentTrackID)trackID __attribute__((cf_returns_not_retained));


// - (void)finishWithComposedVideoFrame:(CVPixelBufferRef)composedVideoFrame;


// - (void)finishWithError:(NSError *)error;


// - (void)finishCancelledRequest;

/* @end */








// @class AVAsynchronousCIImageFilteringRequestInternal;
#ifndef _REWRITER_typedef_AVAsynchronousCIImageFilteringRequestInternal
#define _REWRITER_typedef_AVAsynchronousCIImageFilteringRequestInternal
typedef struct objc_object AVAsynchronousCIImageFilteringRequestInternal;
typedef struct {} _objc_exc_AVAsynchronousCIImageFilteringRequestInternal;
#endif

// @class CIImage;
#ifndef _REWRITER_typedef_CIImage
#define _REWRITER_typedef_CIImage
typedef struct objc_object CIImage;
typedef struct {} _objc_exc_CIImage;
#endif

// @class CIContext;
#ifndef _REWRITER_typedef_CIContext
#define _REWRITER_typedef_CIContext
typedef struct objc_object CIContext;
typedef struct {} _objc_exc_CIContext;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0)))

#ifndef _REWRITER_typedef_AVAsynchronousCIImageFilteringRequest
#define _REWRITER_typedef_AVAsynchronousCIImageFilteringRequest
typedef struct objc_object AVAsynchronousCIImageFilteringRequest;
typedef struct {} _objc_exc_AVAsynchronousCIImageFilteringRequest;
#endif

struct AVAsynchronousCIImageFilteringRequest_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVAsynchronousCIImageFilteringRequestInternal *__strong _internal;
};



// @property (nonatomic, readonly) CGSize renderSize;


// @property (nonatomic, readonly) CMTime compositionTime;


// @property (nonatomic, readonly) CIImage *sourceImage;






// - (void)finishWithImage:(CIImage *)filteredImage context:(nullable CIContext *)context;


// - (void)finishWithError:(NSError *)error;

/* @end */








__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0)))
// @protocol AVVideoCompositionInstruction<NSObject>

/* @required */


// @property (nonatomic, readonly) CMTimeRange timeRange;



// @property (nonatomic, readonly) BOOL enablePostProcessing;




// @property (nonatomic, readonly) BOOL containsTweening;


// @property (nonatomic, readonly, nullable) NSArray<NSValue *> *requiredSourceTrackIDs;





// @property (nonatomic, readonly) CMPersistentTrackID passthroughTrackID;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class AVVideoCompositionCoreAnimationTool;
#ifndef _REWRITER_typedef_AVVideoCompositionCoreAnimationTool
#define _REWRITER_typedef_AVVideoCompositionCoreAnimationTool
typedef struct objc_object AVVideoCompositionCoreAnimationTool;
typedef struct {} _objc_exc_AVVideoCompositionCoreAnimationTool;
#endif

// @class AVVideoCompositionInternal;
#ifndef _REWRITER_typedef_AVVideoCompositionInternal
#define _REWRITER_typedef_AVVideoCompositionInternal
typedef struct objc_object AVVideoCompositionInternal;
typedef struct {} _objc_exc_AVVideoCompositionInternal;
#endif

// @class AVVideoCompositionLayerInstruction;
#ifndef _REWRITER_typedef_AVVideoCompositionLayerInstruction
#define _REWRITER_typedef_AVVideoCompositionLayerInstruction
typedef struct objc_object AVVideoCompositionLayerInstruction;
typedef struct {} _objc_exc_AVVideoCompositionLayerInstruction;
#endif

// @class AVVideoCompositionInstruction;
#ifndef _REWRITER_typedef_AVVideoCompositionInstruction
#define _REWRITER_typedef_AVVideoCompositionInstruction
typedef struct objc_object AVVideoCompositionInstruction;
typedef struct {} _objc_exc_AVVideoCompositionInstruction;
#endif

// @class CIContext;
#ifndef _REWRITER_typedef_CIContext
#define _REWRITER_typedef_CIContext
typedef struct objc_object CIContext;
typedef struct {} _objc_exc_CIContext;
#endif

// @class CIImage;
#ifndef _REWRITER_typedef_CIImage
#define _REWRITER_typedef_CIImage
typedef struct objc_object CIImage;
typedef struct {} _objc_exc_CIImage;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0)))

#ifndef _REWRITER_typedef_AVVideoComposition
#define _REWRITER_typedef_AVVideoComposition
typedef struct objc_object AVVideoComposition;
typedef struct {} _objc_exc_AVVideoComposition;
#endif

struct AVVideoComposition_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVVideoCompositionInternal *__strong _videoComposition;
};

// + (AVVideoComposition *)videoCompositionWithPropertiesOfAsset:(AVAsset *)asset __attribute__((availability(ios,introduced=6_0)));



// @property (nonatomic, readonly, nullable) Class<AVVideoCompositing> customVideoCompositorClass __attribute__((availability(ios,introduced=7_0)));


// @property (nonatomic, readonly) CMTime frameDuration;


// @property (nonatomic, readonly) CMPersistentTrackID sourceTrackIDForFrameTiming __attribute__((availability(ios,introduced=11_0)));


// @property (nonatomic, readonly) CGSize renderSize;




// @property (nonatomic, readonly) float renderScale;
// @property (nonatomic, readonly, copy) NSArray<id <AVVideoCompositionInstruction>> *instructions;


// @property (nonatomic, readonly, retain, nullable) AVVideoCompositionCoreAnimationTool *animationTool;

/* @end */

// @interface AVVideoComposition (AVVideoCompositionColorimetery)
// @property (nonatomic, readonly, nullable) NSString *colorPrimaries __attribute__((availability(ios,introduced=10_0)));
// @property (nonatomic, readonly, nullable) NSString *colorYCbCrMatrix __attribute__((availability(ios,introduced=10_0)));
// @property (nonatomic, readonly, nullable) NSString *colorTransferFunction __attribute__((availability(ios,introduced=10_0)));

/* @end */


// @interface AVVideoComposition (AVVideoCompositionFiltering)
#if 0
+ (AVVideoComposition *)videoCompositionWithAsset:(AVAsset *)asset
    applyingCIFiltersWithHandler:(void (^)(AVAsynchronousCIImageFilteringRequest *request))applier __attribute__((availability(ios,introduced=9_0)));
#endif


/* @end */

// @class AVMutableVideoCompositionInternal;
#ifndef _REWRITER_typedef_AVMutableVideoCompositionInternal
#define _REWRITER_typedef_AVMutableVideoCompositionInternal
typedef struct objc_object AVMutableVideoCompositionInternal;
typedef struct {} _objc_exc_AVMutableVideoCompositionInternal;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0)))

#ifndef _REWRITER_typedef_AVMutableVideoComposition
#define _REWRITER_typedef_AVMutableVideoComposition
typedef struct objc_object AVMutableVideoComposition;
typedef struct {} _objc_exc_AVMutableVideoComposition;
#endif

struct AVMutableVideoComposition_IMPL {
	struct AVVideoComposition_IMPL AVVideoComposition_IVARS;
	AVMutableVideoCompositionInternal *__strong _mutableVideoComposition;
};








// + (AVMutableVideoComposition *)videoComposition;
// + (AVMutableVideoComposition *)videoCompositionWithPropertiesOfAsset:(AVAsset *)asset __attribute__((availability(ios,introduced=6_0)));


// @property (nonatomic, retain, nullable) Class<AVVideoCompositing> customVideoCompositorClass __attribute__((availability(ios,introduced=7_0)));


// @property (nonatomic) CMTime frameDuration;


// @property (nonatomic) CMPersistentTrackID sourceTrackIDForFrameTiming __attribute__((availability(ios,introduced=11_0)));


// @property (nonatomic) CGSize renderSize;




// @property (nonatomic) float renderScale;
// @property (nonatomic, copy) NSArray<id <AVVideoCompositionInstruction>> *instructions;


// @property (nonatomic, retain, nullable) AVVideoCompositionCoreAnimationTool *animationTool;

/* @end */

// @interface AVMutableVideoComposition (AVMutableVideoCompositionColorimetery)
// @property (nonatomic, copy, nullable) NSString *colorPrimaries __attribute__((availability(ios,introduced=10_0)));
// @property (nonatomic, copy, nullable) NSString *colorYCbCrMatrix __attribute__((availability(ios,introduced=10_0)));
// @property (nonatomic, copy, nullable) NSString *colorTransferFunction __attribute__((availability(ios,introduced=10_0)));

/* @end */


// @interface AVMutableVideoComposition (AVMutableVideoCompositionFiltering)
#if 0
+ (AVMutableVideoComposition *)videoCompositionWithAsset:(AVAsset *)asset
    applyingCIFiltersWithHandler:(void (^)(AVAsynchronousCIImageFilteringRequest *request))applier __attribute__((availability(ios,introduced=9_0)));
#endif


/* @end */

// @class AVVideoCompositionInstructionInternal;
#ifndef _REWRITER_typedef_AVVideoCompositionInstructionInternal
#define _REWRITER_typedef_AVVideoCompositionInstructionInternal
typedef struct objc_object AVVideoCompositionInstructionInternal;
typedef struct {} _objc_exc_AVVideoCompositionInstructionInternal;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0)))

#ifndef _REWRITER_typedef_AVVideoCompositionInstruction
#define _REWRITER_typedef_AVVideoCompositionInstruction
typedef struct objc_object AVVideoCompositionInstruction;
typedef struct {} _objc_exc_AVVideoCompositionInstruction;
#endif

struct AVVideoCompositionInstruction_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVVideoCompositionInstructionInternal *__strong _instruction;
};



// @property (nonatomic, readonly) CMTimeRange timeRange;




// @property (nonatomic, readonly, retain, nullable) __attribute__((NSObject)) CGColorRef backgroundColor;





// @property (nonatomic, readonly, copy) NSArray<AVVideoCompositionLayerInstruction *> *layerInstructions;



// @property (nonatomic, readonly) BOOL enablePostProcessing;


// @property (nonatomic, readonly) NSArray<NSValue *> *requiredSourceTrackIDs __attribute__((availability(ios,introduced=7_0)));




// @property (nonatomic, readonly) CMPersistentTrackID passthroughTrackID __attribute__((availability(ios,introduced=7_0)));

/* @end */

// @class AVMutableVideoCompositionInstructionInternal;
#ifndef _REWRITER_typedef_AVMutableVideoCompositionInstructionInternal
#define _REWRITER_typedef_AVMutableVideoCompositionInstructionInternal
typedef struct objc_object AVMutableVideoCompositionInstructionInternal;
typedef struct {} _objc_exc_AVMutableVideoCompositionInstructionInternal;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0)))

#ifndef _REWRITER_typedef_AVMutableVideoCompositionInstruction
#define _REWRITER_typedef_AVMutableVideoCompositionInstruction
typedef struct objc_object AVMutableVideoCompositionInstruction;
typedef struct {} _objc_exc_AVMutableVideoCompositionInstruction;
#endif

struct AVMutableVideoCompositionInstruction_IMPL {
	struct AVVideoCompositionInstruction_IMPL AVVideoCompositionInstruction_IVARS;
	AVMutableVideoCompositionInstructionInternal *__strong _mutableInstruction;
};








// + (instancetype)videoCompositionInstruction;


// @property (nonatomic, assign) CMTimeRange timeRange;




// @property (nonatomic, retain, nullable) __attribute__((NSObject)) CGColorRef backgroundColor;





// @property (nonatomic, copy) NSArray<AVVideoCompositionLayerInstruction *> *layerInstructions;



// @property (nonatomic, assign) BOOL enablePostProcessing;

/* @end */








// @class AVVideoCompositionLayerInstructionInternal;
#ifndef _REWRITER_typedef_AVVideoCompositionLayerInstructionInternal
#define _REWRITER_typedef_AVVideoCompositionLayerInstructionInternal
typedef struct objc_object AVVideoCompositionLayerInstructionInternal;
typedef struct {} _objc_exc_AVVideoCompositionLayerInstructionInternal;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0)))

#ifndef _REWRITER_typedef_AVVideoCompositionLayerInstruction
#define _REWRITER_typedef_AVVideoCompositionLayerInstruction
typedef struct objc_object AVVideoCompositionLayerInstruction;
typedef struct {} _objc_exc_AVVideoCompositionLayerInstruction;
#endif

struct AVVideoCompositionLayerInstruction_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVVideoCompositionLayerInstructionInternal *__strong _layerInstruction;
};
;


// @property (nonatomic, readonly, assign) CMPersistentTrackID trackID;
// - (BOOL)getTransformRampForTime:(CMTime)time startTransform:(nullable CGAffineTransform *)startTransform endTransform:(nullable CGAffineTransform *)endTransform timeRange:(nullable CMTimeRange *)timeRange;
// - (BOOL)getOpacityRampForTime:(CMTime)time startOpacity:(nullable float *)startOpacity endOpacity:(nullable float *)endOpacity timeRange:(nullable CMTimeRange *)timeRange;
// - (BOOL)getCropRectangleRampForTime:(CMTime)time startCropRectangle:(nullable CGRect *)startCropRectangle endCropRectangle:(nullable CGRect *)endCropRectangle timeRange:(nullable CMTimeRange *)timeRange __attribute__((availability(ios,introduced=7_0)));

/* @end */








// @class AVMutableVideoCompositionLayerInstructionInternal;
#ifndef _REWRITER_typedef_AVMutableVideoCompositionLayerInstructionInternal
#define _REWRITER_typedef_AVMutableVideoCompositionLayerInstructionInternal
typedef struct objc_object AVMutableVideoCompositionLayerInstructionInternal;
typedef struct {} _objc_exc_AVMutableVideoCompositionLayerInstructionInternal;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0)))

#ifndef _REWRITER_typedef_AVMutableVideoCompositionLayerInstruction
#define _REWRITER_typedef_AVMutableVideoCompositionLayerInstruction
typedef struct objc_object AVMutableVideoCompositionLayerInstruction;
typedef struct {} _objc_exc_AVMutableVideoCompositionLayerInstruction;
#endif

struct AVMutableVideoCompositionLayerInstruction_IMPL {
	struct AVVideoCompositionLayerInstruction_IMPL AVVideoCompositionLayerInstruction_IVARS;
	AVMutableVideoCompositionLayerInstructionInternal *__strong _mutableLayerInstruction;
};
;







// + (instancetype)videoCompositionLayerInstructionWithAssetTrack:(AVAssetTrack *)track;





// + (instancetype)videoCompositionLayerInstruction;


// @property (nonatomic, assign) CMPersistentTrackID trackID;
// - (void)setTransformRampFromStartTransform:(CGAffineTransform)startTransform toEndTransform:(CGAffineTransform)endTransform timeRange:(CMTimeRange)timeRange;
// - (void)setTransform:(CGAffineTransform)transform atTime:(CMTime)time;
// - (void)setOpacityRampFromStartOpacity:(float)startOpacity toEndOpacity:(float)endOpacity timeRange:(CMTimeRange)timeRange;
// - (void)setOpacity:(float)opacity atTime:(CMTime)time;
// - (void)setCropRectangleRampFromStartCropRectangle:(CGRect)startCropRectangle toEndCropRectangle:(CGRect)endCropRectangle timeRange:(CMTimeRange)timeRange __attribute__((availability(ios,introduced=7_0)));
// - (void)setCropRectangle:(CGRect)cropRectangle atTime:(CMTime)time __attribute__((availability(ios,introduced=7_0)));

/* @end */

// @class CALayer;
#ifndef _REWRITER_typedef_CALayer
#define _REWRITER_typedef_CALayer
typedef struct objc_object CALayer;
typedef struct {} _objc_exc_CALayer;
#endif

// @class AVVideoCompositionCoreAnimationToolInternal;
#ifndef _REWRITER_typedef_AVVideoCompositionCoreAnimationToolInternal
#define _REWRITER_typedef_AVVideoCompositionCoreAnimationToolInternal
typedef struct objc_object AVVideoCompositionCoreAnimationToolInternal;
typedef struct {} _objc_exc_AVVideoCompositionCoreAnimationToolInternal;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0)))

#ifndef _REWRITER_typedef_AVVideoCompositionCoreAnimationTool
#define _REWRITER_typedef_AVVideoCompositionCoreAnimationTool
typedef struct objc_object AVVideoCompositionCoreAnimationTool;
typedef struct {} _objc_exc_AVVideoCompositionCoreAnimationTool;
#endif

struct AVVideoCompositionCoreAnimationTool_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVVideoCompositionCoreAnimationToolInternal *__strong _videoCompositionTool;
};

// + (instancetype)videoCompositionCoreAnimationToolWithAdditionalLayer:(CALayer *)layer asTrackID:(CMPersistentTrackID)trackID;
// + (instancetype)videoCompositionCoreAnimationToolWithPostProcessingAsVideoLayer:(CALayer *)videoLayer inLayer:(CALayer *)animationLayer;
// + (instancetype)videoCompositionCoreAnimationToolWithPostProcessingAsVideoLayers:(NSArray<CALayer *> *)videoLayers inLayer:(CALayer *)animationLayer __attribute__((availability(ios,introduced=7_0)));

/* @end */



// @interface AVAsset (AVAssetVideoCompositionUtility)

// - (CMPersistentTrackID)unusedTrackID;

/* @end */



// @protocol AVVideoCompositionValidationHandling;

// @interface AVVideoComposition (AVVideoCompositionValidation)
// - (BOOL)isValidForAsset:(nullable AVAsset *)asset timeRange:(CMTimeRange)timeRange validationDelegate:(nullable id<AVVideoCompositionValidationHandling>)validationDelegate __attribute__((availability(ios,introduced=5_0)));

/* @end */


// @protocol AVVideoCompositionValidationHandling <NSObject>

/* @optional */
// - (BOOL)videoComposition:(AVVideoComposition *)videoComposition shouldContinueValidatingAfterFindingInvalidValueForKey:(NSString *)key __attribute__((availability(ios,introduced=5_0)));
// - (BOOL)videoComposition:(AVVideoComposition *)videoComposition shouldContinueValidatingAfterFindingEmptyTimeRange:(CMTimeRange)timeRange __attribute__((availability(ios,introduced=5_0)));
// - (BOOL)videoComposition:(AVVideoComposition *)videoComposition shouldContinueValidatingAfterFindingInvalidTimeRangeInInstruction:(id<AVVideoCompositionInstruction>)videoCompositionInstruction __attribute__((availability(ios,introduced=5_0)));
// - (BOOL)videoComposition:(AVVideoComposition *)videoComposition shouldContinueValidatingAfterFindingInvalidTrackIDInInstruction:(id<AVVideoCompositionInstruction>)videoCompositionInstruction layerInstruction:(AVVideoCompositionLayerInstruction *)layerInstruction asset:(AVAsset *)asset __attribute__((availability(ios,introduced=5_0)));

/* @end */

#pragma clang assume_nonnull end




// @class AVAssetTrack;
#ifndef _REWRITER_typedef_AVAssetTrack
#define _REWRITER_typedef_AVAssetTrack
typedef struct objc_object AVAssetTrack;
typedef struct {} _objc_exc_AVAssetTrack;
#endif

// @class AVAudioMixInputParameters;
#ifndef _REWRITER_typedef_AVAudioMixInputParameters
#define _REWRITER_typedef_AVAudioMixInputParameters
typedef struct objc_object AVAudioMixInputParameters;
typedef struct {} _objc_exc_AVAudioMixInputParameters;
#endif

// @class AVAudioMix;
#ifndef _REWRITER_typedef_AVAudioMix
#define _REWRITER_typedef_AVAudioMix
typedef struct objc_object AVAudioMix;
typedef struct {} _objc_exc_AVAudioMix;
#endif

// @class AVVideoComposition;
#ifndef _REWRITER_typedef_AVVideoComposition
#define _REWRITER_typedef_AVVideoComposition
typedef struct objc_object AVVideoComposition;
typedef struct {} _objc_exc_AVVideoComposition;
#endif

// @class AVAssetReaderOutputInternal;
#ifndef _REWRITER_typedef_AVAssetReaderOutputInternal
#define _REWRITER_typedef_AVAssetReaderOutputInternal
typedef struct objc_object AVAssetReaderOutputInternal;
typedef struct {} _objc_exc_AVAssetReaderOutputInternal;
#endif


#pragma clang assume_nonnull begin
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_1)))

#ifndef _REWRITER_typedef_AVAssetReaderOutput
#define _REWRITER_typedef_AVAssetReaderOutput
typedef struct objc_object AVAssetReaderOutput;
typedef struct {} _objc_exc_AVAssetReaderOutput;
#endif

struct AVAssetReaderOutput_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVAssetReaderOutputInternal *__strong _internal;
};

// @property (nonatomic, readonly) NSString *mediaType;
// @property (nonatomic) BOOL alwaysCopiesSampleData __attribute__((availability(ios,introduced=5_0)));
// - (nullable CMSampleBufferRef)copyNextSampleBuffer __attribute__((cf_returns_retained));

/* @end */



// @interface AVAssetReaderOutput (AVAssetReaderOutputRandomAccess)
// @property (nonatomic) BOOL supportsRandomAccess __attribute__((availability(ios,introduced=8_0)));
// - (void)resetForReadingTimeRanges:(NSArray<NSValue *> *)timeRanges __attribute__((availability(ios,introduced=8_0)));
// - (void)markConfigurationAsFinal __attribute__((availability(ios,introduced=8_0)));

/* @end */


// @class AVAssetReaderTrackOutputInternal;
#ifndef _REWRITER_typedef_AVAssetReaderTrackOutputInternal
#define _REWRITER_typedef_AVAssetReaderTrackOutputInternal
typedef struct objc_object AVAssetReaderTrackOutputInternal;
typedef struct {} _objc_exc_AVAssetReaderTrackOutputInternal;
#endif

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_1)))

#ifndef _REWRITER_typedef_AVAssetReaderTrackOutput
#define _REWRITER_typedef_AVAssetReaderTrackOutput
typedef struct objc_object AVAssetReaderTrackOutput;
typedef struct {} _objc_exc_AVAssetReaderTrackOutput;
#endif

struct AVAssetReaderTrackOutput_IMPL {
	struct AVAssetReaderOutput_IMPL AVAssetReaderOutput_IVARS;
	AVAssetReaderTrackOutputInternal *__strong _trackOutputInternal;
};

// - (instancetype)init __attribute__((unavailable)); // + (instancetype)new __attribute__((unavailable));
// + (instancetype)assetReaderTrackOutputWithTrack:(AVAssetTrack *)track outputSettings:(nullable NSDictionary<NSString *, id> *)outputSettings;
// - (instancetype)initWithTrack:(AVAssetTrack *)track outputSettings:(nullable NSDictionary<NSString *, id> *)outputSettings __attribute__((objc_designated_initializer));
// @property (nonatomic, readonly) AVAssetTrack *track;
// @property (nonatomic, readonly, nullable) NSDictionary<NSString *, id> *outputSettings;
// @property (nonatomic, copy) AVAudioTimePitchAlgorithm audioTimePitchAlgorithm __attribute__((availability(ios,introduced=7_0)));

/* @end */



// @class AVAssetReaderAudioMixOutputInternal;
#ifndef _REWRITER_typedef_AVAssetReaderAudioMixOutputInternal
#define _REWRITER_typedef_AVAssetReaderAudioMixOutputInternal
typedef struct objc_object AVAssetReaderAudioMixOutputInternal;
typedef struct {} _objc_exc_AVAssetReaderAudioMixOutputInternal;
#endif

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_1)))

#ifndef _REWRITER_typedef_AVAssetReaderAudioMixOutput
#define _REWRITER_typedef_AVAssetReaderAudioMixOutput
typedef struct objc_object AVAssetReaderAudioMixOutput;
typedef struct {} _objc_exc_AVAssetReaderAudioMixOutput;
#endif

struct AVAssetReaderAudioMixOutput_IMPL {
	struct AVAssetReaderOutput_IMPL AVAssetReaderOutput_IVARS;
	AVAssetReaderAudioMixOutputInternal *__strong _audioMixOutputInternal;
};

// - (instancetype)init __attribute__((unavailable)); // + (instancetype)new __attribute__((unavailable));
// + (instancetype)assetReaderAudioMixOutputWithAudioTracks:(NSArray<AVAssetTrack *> *)audioTracks audioSettings:(nullable NSDictionary<NSString *, id> *)audioSettings;
// - (instancetype)initWithAudioTracks:(NSArray<AVAssetTrack *> *)audioTracks audioSettings:(nullable NSDictionary<NSString *, id> *)audioSettings __attribute__((objc_designated_initializer));
// @property (nonatomic, readonly) NSArray<AVAssetTrack *> *audioTracks;
// @property (nonatomic, readonly, nullable) NSDictionary<NSString *, id> *audioSettings;
// @property (nonatomic, copy, nullable) AVAudioMix *audioMix;
// @property (nonatomic, copy) AVAudioTimePitchAlgorithm audioTimePitchAlgorithm __attribute__((availability(ios,introduced=7_0)));

/* @end */



// @class AVAssetReaderVideoCompositionOutputInternal;
#ifndef _REWRITER_typedef_AVAssetReaderVideoCompositionOutputInternal
#define _REWRITER_typedef_AVAssetReaderVideoCompositionOutputInternal
typedef struct objc_object AVAssetReaderVideoCompositionOutputInternal;
typedef struct {} _objc_exc_AVAssetReaderVideoCompositionOutputInternal;
#endif

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_1)))

#ifndef _REWRITER_typedef_AVAssetReaderVideoCompositionOutput
#define _REWRITER_typedef_AVAssetReaderVideoCompositionOutput
typedef struct objc_object AVAssetReaderVideoCompositionOutput;
typedef struct {} _objc_exc_AVAssetReaderVideoCompositionOutput;
#endif

struct AVAssetReaderVideoCompositionOutput_IMPL {
	struct AVAssetReaderOutput_IMPL AVAssetReaderOutput_IVARS;
	AVAssetReaderVideoCompositionOutputInternal *__strong _videoCompositionOutputInternal;
};

// - (instancetype)init __attribute__((unavailable)); // + (instancetype)new __attribute__((unavailable));
// + (instancetype)assetReaderVideoCompositionOutputWithVideoTracks:(NSArray<AVAssetTrack *> *)videoTracks videoSettings:(nullable NSDictionary<NSString *, id> *)videoSettings;
// - (instancetype)initWithVideoTracks:(NSArray<AVAssetTrack *> *)videoTracks videoSettings:(nullable NSDictionary<NSString *, id> *)videoSettings __attribute__((objc_designated_initializer));
// @property (nonatomic, readonly) NSArray<AVAssetTrack *> *videoTracks;
// @property (nonatomic, readonly, nullable) NSDictionary<NSString *, id> *videoSettings;
// @property (nonatomic, copy, nullable) AVVideoComposition *videoComposition;
// @property (nonatomic, readonly, nullable) id <AVVideoCompositing> customVideoCompositor __attribute__((availability(ios,introduced=7_0)));

/* @end */



// @class AVTimedMetadataGroup;
#ifndef _REWRITER_typedef_AVTimedMetadataGroup
#define _REWRITER_typedef_AVTimedMetadataGroup
typedef struct objc_object AVTimedMetadataGroup;
typedef struct {} _objc_exc_AVTimedMetadataGroup;
#endif

// @class AVAssetReaderOutputMetadataAdaptorInternal;
#ifndef _REWRITER_typedef_AVAssetReaderOutputMetadataAdaptorInternal
#define _REWRITER_typedef_AVAssetReaderOutputMetadataAdaptorInternal
typedef struct objc_object AVAssetReaderOutputMetadataAdaptorInternal;
typedef struct {} _objc_exc_AVAssetReaderOutputMetadataAdaptorInternal;
#endif








__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))

#ifndef _REWRITER_typedef_AVAssetReaderOutputMetadataAdaptor
#define _REWRITER_typedef_AVAssetReaderOutputMetadataAdaptor
typedef struct objc_object AVAssetReaderOutputMetadataAdaptor;
typedef struct {} _objc_exc_AVAssetReaderOutputMetadataAdaptor;
#endif

struct AVAssetReaderOutputMetadataAdaptor_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVAssetReaderOutputMetadataAdaptorInternal *__strong _internal;
};

// - (instancetype)init __attribute__((unavailable)); // + (instancetype)new __attribute__((unavailable));
// + (instancetype)assetReaderOutputMetadataAdaptorWithAssetReaderTrackOutput:(AVAssetReaderTrackOutput *)trackOutput;
// - (instancetype)initWithAssetReaderTrackOutput:(AVAssetReaderTrackOutput *)trackOutput __attribute__((objc_designated_initializer));






// @property (nonatomic, readonly) AVAssetReaderTrackOutput *assetReaderTrackOutput;
// - (nullable AVTimedMetadataGroup *)nextTimedMetadataGroup;

/* @end */


// @class AVAssetReaderSampleReferenceOutputInternal;
#ifndef _REWRITER_typedef_AVAssetReaderSampleReferenceOutputInternal
#define _REWRITER_typedef_AVAssetReaderSampleReferenceOutputInternal
typedef struct objc_object AVAssetReaderSampleReferenceOutputInternal;
typedef struct {} _objc_exc_AVAssetReaderSampleReferenceOutputInternal;
#endif

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))

#ifndef _REWRITER_typedef_AVAssetReaderSampleReferenceOutput
#define _REWRITER_typedef_AVAssetReaderSampleReferenceOutput
typedef struct objc_object AVAssetReaderSampleReferenceOutput;
typedef struct {} _objc_exc_AVAssetReaderSampleReferenceOutput;
#endif

struct AVAssetReaderSampleReferenceOutput_IMPL {
	struct AVAssetReaderOutput_IMPL AVAssetReaderOutput_IVARS;
	AVAssetReaderSampleReferenceOutputInternal *__strong _sampleReferenceOutputInternal;
};

// - (instancetype)init __attribute__((unavailable)); // + (instancetype)new __attribute__((unavailable));
// + (instancetype)assetReaderSampleReferenceOutputWithTrack:(AVAssetTrack *)track;
// - (instancetype)initWithTrack:(AVAssetTrack *)track __attribute__((objc_designated_initializer));
// @property (nonatomic, readonly) AVAssetTrack *track;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @protocol AVAssetResourceLoaderDelegate;

// @class AVAssetResourceLoadingRequest;
#ifndef _REWRITER_typedef_AVAssetResourceLoadingRequest
#define _REWRITER_typedef_AVAssetResourceLoadingRequest
typedef struct objc_object AVAssetResourceLoadingRequest;
typedef struct {} _objc_exc_AVAssetResourceLoadingRequest;
#endif

// @class AVAssetResourceRenewalRequest;
#ifndef _REWRITER_typedef_AVAssetResourceRenewalRequest
#define _REWRITER_typedef_AVAssetResourceRenewalRequest
typedef struct objc_object AVAssetResourceRenewalRequest;
typedef struct {} _objc_exc_AVAssetResourceRenewalRequest;
#endif

// @class AVAssetResourceLoaderInternal;
#ifndef _REWRITER_typedef_AVAssetResourceLoaderInternal
#define _REWRITER_typedef_AVAssetResourceLoaderInternal
typedef struct objc_object AVAssetResourceLoaderInternal;
typedef struct {} _objc_exc_AVAssetResourceLoaderInternal;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0)))

#ifndef _REWRITER_typedef_AVAssetResourceLoader
#define _REWRITER_typedef_AVAssetResourceLoader
typedef struct objc_object AVAssetResourceLoader;
typedef struct {} _objc_exc_AVAssetResourceLoader;
#endif

struct AVAssetResourceLoader_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVAssetResourceLoaderInternal *__strong _resourceLoader;
};

// - (instancetype)init __attribute__((unavailable)); // + (instancetype)new __attribute__((unavailable));
// - (void)setDelegate:(nullable id <AVAssetResourceLoaderDelegate>)delegate queue:(nullable dispatch_queue_t)delegateQueue;







// @property (nonatomic, readonly, weak, nullable) id <AVAssetResourceLoaderDelegate> delegate;







// @property (nonatomic, readonly, nullable) dispatch_queue_t delegateQueue;

/* @end */







// @class NSURLAuthenticationChallenge;
#ifndef _REWRITER_typedef_NSURLAuthenticationChallenge
#define _REWRITER_typedef_NSURLAuthenticationChallenge
typedef struct objc_object NSURLAuthenticationChallenge;
typedef struct {} _objc_exc_NSURLAuthenticationChallenge;
#endif


// @protocol AVAssetResourceLoaderDelegate <NSObject>

/* @optional */
// - (BOOL)resourceLoader:(AVAssetResourceLoader *)resourceLoader shouldWaitForLoadingOfRequestedResource:(AVAssetResourceLoadingRequest *)loadingRequest __attribute__((availability(ios,introduced=6_0)));
// - (BOOL)resourceLoader:(AVAssetResourceLoader *)resourceLoader shouldWaitForRenewalOfRequestedResource:(AVAssetResourceRenewalRequest *)renewalRequest __attribute__((availability(ios,introduced=8_0)));
// - (void)resourceLoader:(AVAssetResourceLoader *)resourceLoader didCancelLoadingRequest:(AVAssetResourceLoadingRequest *)loadingRequest __attribute__((availability(ios,introduced=7_0)));
// - (BOOL)resourceLoader:(AVAssetResourceLoader *)resourceLoader shouldWaitForResponseToAuthenticationChallenge:(NSURLAuthenticationChallenge *)authenticationChallenge __attribute__((availability(ios,introduced=8_0)));







// - (void)resourceLoader:(AVAssetResourceLoader *)resourceLoader didCancelAuthenticationChallenge:(NSURLAuthenticationChallenge *)authenticationChallenge __attribute__((availability(ios,introduced=8_0)));

/* @end */

// @class AVAssetResourceLoadingRequestInternal;
#ifndef _REWRITER_typedef_AVAssetResourceLoadingRequestInternal
#define _REWRITER_typedef_AVAssetResourceLoadingRequestInternal
typedef struct objc_object AVAssetResourceLoadingRequestInternal;
typedef struct {} _objc_exc_AVAssetResourceLoadingRequestInternal;
#endif

// @class AVAssetResourceLoadingContentInformationRequest;
#ifndef _REWRITER_typedef_AVAssetResourceLoadingContentInformationRequest
#define _REWRITER_typedef_AVAssetResourceLoadingContentInformationRequest
typedef struct objc_object AVAssetResourceLoadingContentInformationRequest;
typedef struct {} _objc_exc_AVAssetResourceLoadingContentInformationRequest;
#endif

// @class AVAssetResourceLoadingDataRequest;
#ifndef _REWRITER_typedef_AVAssetResourceLoadingDataRequest
#define _REWRITER_typedef_AVAssetResourceLoadingDataRequest
typedef struct objc_object AVAssetResourceLoadingDataRequest;
typedef struct {} _objc_exc_AVAssetResourceLoadingDataRequest;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0)))

#ifndef _REWRITER_typedef_AVAssetResourceLoadingRequest
#define _REWRITER_typedef_AVAssetResourceLoadingRequest
typedef struct objc_object AVAssetResourceLoadingRequest;
typedef struct {} _objc_exc_AVAssetResourceLoadingRequest;
#endif

struct AVAssetResourceLoadingRequest_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVAssetResourceLoadingRequestInternal *__strong _loadingRequest;
};

// - (instancetype)init __attribute__((unavailable)); // + (instancetype)new __attribute__((unavailable));





// @property (nonatomic, readonly) NSURLRequest *request;






// @property (nonatomic, readonly, getter=isFinished) BOOL finished;






// @property (nonatomic, readonly, getter=isCancelled) BOOL cancelled __attribute__((availability(ios,introduced=7_0)));





// @property (nonatomic, readonly, nullable) AVAssetResourceLoadingContentInformationRequest *contentInformationRequest __attribute__((availability(ios,introduced=7_0)));





// @property (nonatomic, readonly, nullable) AVAssetResourceLoadingDataRequest *dataRequest __attribute__((availability(ios,introduced=7_0)));





// @property (nonatomic, copy, nullable) NSURLResponse *response __attribute__((availability(ios,introduced=7_0)));






// @property (nonatomic, copy, nullable) NSURLRequest *redirect __attribute__((availability(ios,introduced=7_0)));






// - (void)finishLoading __attribute__((availability(ios,introduced=7_0)));







// - (void)finishLoadingWithError:(nullable NSError *)error;

/* @end */

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))

#ifndef _REWRITER_typedef_AVAssetResourceRenewalRequest
#define _REWRITER_typedef_AVAssetResourceRenewalRequest
typedef struct objc_object AVAssetResourceRenewalRequest;
typedef struct {} _objc_exc_AVAssetResourceRenewalRequest;
#endif

struct AVAssetResourceRenewalRequest_IMPL {
	struct AVAssetResourceLoadingRequest_IMPL AVAssetResourceLoadingRequest_IVARS;
};


/* @end */

// @class AVAssetResourceLoadingContentInformationRequestInternal;
#ifndef _REWRITER_typedef_AVAssetResourceLoadingContentInformationRequestInternal
#define _REWRITER_typedef_AVAssetResourceLoadingContentInformationRequestInternal
typedef struct objc_object AVAssetResourceLoadingContentInformationRequestInternal;
typedef struct {} _objc_exc_AVAssetResourceLoadingContentInformationRequestInternal;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0)))

#ifndef _REWRITER_typedef_AVAssetResourceLoadingContentInformationRequest
#define _REWRITER_typedef_AVAssetResourceLoadingContentInformationRequest
typedef struct objc_object AVAssetResourceLoadingContentInformationRequest;
typedef struct {} _objc_exc_AVAssetResourceLoadingContentInformationRequest;
#endif

struct AVAssetResourceLoadingContentInformationRequest_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVAssetResourceLoadingContentInformationRequestInternal *__strong _contentInformationRequest;
};

// - (instancetype)init __attribute__((unavailable)); // + (instancetype)new __attribute__((unavailable));






// @property (nonatomic, copy, nullable) NSString *contentType;






// @property (nonatomic, readonly, nullable) NSArray <NSString *> *allowedContentTypes __attribute__((availability(ios,introduced=11.2))) __attribute__((availability(tvos,introduced=11.2))) __attribute__((availability(macos,introduced=10.13.2))) __attribute__((availability(watchos,introduced=4.2)));






// @property (nonatomic) long long contentLength;






// @property (nonatomic, getter=isByteRangeAccessSupported) BOOL byteRangeAccessSupported;






// @property (nonatomic, copy, nullable) NSDate *renewalDate __attribute__((availability(ios,introduced=8_0)));

/* @end */

// @class AVAssetResourceLoadingDataRequestInternal;
#ifndef _REWRITER_typedef_AVAssetResourceLoadingDataRequestInternal
#define _REWRITER_typedef_AVAssetResourceLoadingDataRequestInternal
typedef struct objc_object AVAssetResourceLoadingDataRequestInternal;
typedef struct {} _objc_exc_AVAssetResourceLoadingDataRequestInternal;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0)))

#ifndef _REWRITER_typedef_AVAssetResourceLoadingDataRequest
#define _REWRITER_typedef_AVAssetResourceLoadingDataRequest
typedef struct objc_object AVAssetResourceLoadingDataRequest;
typedef struct {} _objc_exc_AVAssetResourceLoadingDataRequest;
#endif

struct AVAssetResourceLoadingDataRequest_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVAssetResourceLoadingDataRequestInternal *__strong _dataRequest;
};

// - (instancetype)init __attribute__((unavailable)); // + (instancetype)new __attribute__((unavailable));





// @property (nonatomic, readonly) long long requestedOffset;
// @property (nonatomic, readonly) NSInteger requestedLength;






// @property (nonatomic, readonly) BOOL requestsAllDataToEndOfResource __attribute__((availability(ios,introduced=9_0)));





// @property (nonatomic, readonly) long long currentOffset;
// - (void)respondWithData:(NSData *)data;

/* @end */


// @interface AVAssetResourceLoader (AVAssetResourceLoaderContentKeySupport)






// @property (nonatomic) BOOL preloadsEligibleContentKeys __attribute__((availability(ios,introduced=9_0)));

/* @end */


// @interface AVAssetResourceLoadingRequest (AVAssetResourceLoadingRequestContentKeyRequestSupport)
// - (nullable NSData *)streamingContentKeyRequestDataForApp:(NSData *)appIdentifier contentIdentifier:(NSData *)contentIdentifier options:(nullable NSDictionary<NSString *, id> *)options error:(NSError * _Nullable * _Nullable)outError;
// - (nullable NSData *)persistentContentKeyFromKeyVendorResponse:(NSData *)keyVendorResponse options:(nullable NSDictionary<NSString *, id> *)options error:(NSError **)outError __attribute__((availability(ios,introduced=9_0)));

/* @end */







extern "C" NSString *const AVAssetResourceLoadingRequestStreamingContentKeyRequestRequiresPersistentKey __attribute__((availability(ios,introduced=9_0)));

// @interface AVAssetResourceLoadingRequest (AVAssetResourceLoadingRequestDeprecated)
// - (void)finishLoadingWithResponse:(nullable NSURLResponse *)response data:(nullable NSData *)data redirect:(nullable NSURLRequest *)redirect __attribute__((availability(ios,introduced=6_0,deprecated=7_0,message="" )));

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0)))

#ifndef _REWRITER_typedef_AVAssetTrackSegment
#define _REWRITER_typedef_AVAssetTrackSegment
typedef struct objc_object AVAssetTrackSegment;
typedef struct {} _objc_exc_AVAssetTrackSegment;
#endif

struct AVAssetTrackSegment_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	CMTimeMapping _timeMapping;
};

// - (instancetype)init __attribute__((unavailable)); // + (instancetype)new __attribute__((unavailable));


// @property (nonatomic, readonly) CMTimeMapping timeMapping;


// @property (nonatomic, readonly, getter=isEmpty) BOOL empty;

/* @end */

#pragma clang assume_nonnull end




#pragma clang assume_nonnull begin

// @class AVAssetTrackInternal;
#ifndef _REWRITER_typedef_AVAssetTrackInternal
#define _REWRITER_typedef_AVAssetTrackInternal
typedef struct objc_object AVAssetTrackInternal;
typedef struct {} _objc_exc_AVAssetTrackInternal;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0)))

#ifndef _REWRITER_typedef_AVAssetTrack
#define _REWRITER_typedef_AVAssetTrack
typedef struct objc_object AVAssetTrack;
typedef struct {} _objc_exc_AVAssetTrack;
#endif

struct AVAssetTrack_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVAssetTrackInternal *__strong _track;
};

// - (instancetype)init __attribute__((unavailable)); // + (instancetype)new __attribute__((unavailable));


// @property (nonatomic, readonly, weak) AVAsset *asset;


// @property (nonatomic, readonly) CMPersistentTrackID trackID;



/* @end */



// @interface AVAssetTrack (AVAssetTrackBasicPropertiesAndCharacteristics)


// @property (nonatomic, readonly) AVMediaType mediaType;





// @property (nonatomic, readonly) NSArray *formatDescriptions;


// @property (nonatomic, readonly, getter=isPlayable) BOOL playable __attribute__((availability(ios,introduced=5_0)));


// @property (nonatomic, readonly, getter=isDecodable) BOOL decodable __attribute__((availability(ios,introduced=11_0)));



// @property (nonatomic, readonly, getter=isEnabled) BOOL enabled;


// @property (nonatomic, readonly, getter=isSelfContained) BOOL selfContained;


// @property (nonatomic, readonly) long long totalSampleDataLength;
// - (BOOL)hasMediaCharacteristic:(AVMediaCharacteristic)mediaCharacteristic;

/* @end */



// @interface AVAssetTrack (AVAssetTrackTemporalProperties)



// @property (nonatomic, readonly) CMTimeRange timeRange;


// @property (nonatomic, readonly) CMTimeScale naturalTimeScale;


// @property (nonatomic, readonly) float estimatedDataRate;

/* @end */



// @interface AVAssetTrack (AVAssetTrackLanguageProperties)



// @property (nonatomic, readonly, nullable) NSString *languageCode;



// @property (nonatomic, readonly, nullable) NSString *extendedLanguageTag;

/* @end */



// @interface AVAssetTrack (AVAssetTrackPropertiesForVisualCharacteristic)


// @property (nonatomic, readonly) CGSize naturalSize;



// @property (nonatomic, readonly) CGAffineTransform preferredTransform;

/* @end */



// @interface AVAssetTrack (AVAssetTrackPropertiesForAudibleCharacteristic)


// @property (nonatomic, readonly) float preferredVolume;

/* @end */



// @interface AVAssetTrack (AVAssetTrackPropertiesForFrameBasedCharacteristic)






// @property (nonatomic, readonly) float nominalFrameRate;


// @property (nonatomic, readonly) CMTime minFrameDuration __attribute__((availability(ios,introduced=7_0)));





// @property (nonatomic, readonly) BOOL requiresFrameReordering __attribute__((availability(ios,introduced=8_0)));

/* @end */



// @interface AVAssetTrack (AVAssetTrackSegments)



// @property (nonatomic, copy, readonly) NSArray<AVAssetTrackSegment *> *segments;
// - (nullable AVAssetTrackSegment *)segmentForTrackTime:(CMTime)trackTime;
// - (CMTime)samplePresentationTimeForTrackTime:(CMTime)trackTime;

/* @end */



// @interface AVAssetTrack (AVAssetTrackMetadataReading)




// @property (nonatomic, readonly) NSArray<AVMetadataItem *> *commonMetadata;



// @property (nonatomic, readonly) NSArray<AVMetadataItem *> *metadata __attribute__((availability(ios,introduced=8_0)));



// @property (nonatomic, readonly) NSArray<AVMetadataFormat> *availableMetadataFormats;
// - (NSArray<AVMetadataItem *> *)metadataForFormat:(AVMetadataFormat)format;

/* @end */



// @interface AVAssetTrack (AVAssetTrackTrackAssociations)






typedef NSString * AVTrackAssociationType __attribute__((swift_wrapper(enum)));
extern "C" AVTrackAssociationType const AVTrackAssociationTypeAudioFallback __attribute__((availability(ios,introduced=7_0)));
extern "C" AVTrackAssociationType const AVTrackAssociationTypeChapterList __attribute__((availability(ios,introduced=7_0)));
extern "C" AVTrackAssociationType const AVTrackAssociationTypeForcedSubtitlesOnly __attribute__((availability(ios,introduced=7_0)));
extern "C" AVTrackAssociationType const AVTrackAssociationTypeSelectionFollower __attribute__((availability(ios,introduced=7_0)));
extern "C" AVTrackAssociationType const AVTrackAssociationTypeTimecode __attribute__((availability(ios,introduced=7_0)));
extern "C" AVTrackAssociationType const AVTrackAssociationTypeMetadataReferent __attribute__((availability(ios,introduced=8_0)));



// @property (nonatomic, readonly) NSArray<AVTrackAssociationType> *availableTrackAssociationTypes __attribute__((availability(ios,introduced=7_0)));
// - (NSArray<AVAssetTrack *> *)associatedTracksOfType:(AVTrackAssociationType)trackAssociationType __attribute__((availability(ios,introduced=7_0)));

/* @end */

extern "C" NSString *const AVAssetTrackTimeRangeDidChangeNotification __attribute__((availability(ios,introduced=9_0)));





extern "C" NSString *const AVAssetTrackSegmentsDidChangeNotification __attribute__((availability(ios,introduced=9_0)));





extern "C" NSString *const AVAssetTrackTrackAssociationsDidChangeNotification __attribute__((availability(ios,introduced=9_0)));
// @class AVFragmentedAssetTrackInternal;
#ifndef _REWRITER_typedef_AVFragmentedAssetTrackInternal
#define _REWRITER_typedef_AVFragmentedAssetTrackInternal
typedef struct objc_object AVFragmentedAssetTrackInternal;
typedef struct {} _objc_exc_AVFragmentedAssetTrackInternal;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=NA)))

#ifndef _REWRITER_typedef_AVFragmentedAssetTrack
#define _REWRITER_typedef_AVFragmentedAssetTrack
typedef struct objc_object AVFragmentedAssetTrack;
typedef struct {} _objc_exc_AVFragmentedAssetTrack;
#endif

struct AVFragmentedAssetTrack_IMPL {
	struct AVAssetTrack_IMPL AVAssetTrack_IVARS;
	AVFragmentedAssetTrackInternal *__strong _fragmentedAssetTrack;
};


/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class AVAssetTrackGroupInternal;
#ifndef _REWRITER_typedef_AVAssetTrackGroupInternal
#define _REWRITER_typedef_AVAssetTrackGroupInternal
typedef struct objc_object AVAssetTrackGroupInternal;
typedef struct {} _objc_exc_AVAssetTrackGroupInternal;
#endif

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0)))

#ifndef _REWRITER_typedef_AVAssetTrackGroup
#define _REWRITER_typedef_AVAssetTrackGroup
typedef struct objc_object AVAssetTrackGroup;
typedef struct {} _objc_exc_AVAssetTrackGroup;
#endif

struct AVAssetTrackGroup_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVAssetTrackGroupInternal *__strong _assetTrackGroup;
};

// @property (nonatomic, readonly) NSArray<NSNumber *> *trackIDs;

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

// @class AVMediaSelectionOption;
#ifndef _REWRITER_typedef_AVMediaSelectionOption
#define _REWRITER_typedef_AVMediaSelectionOption
typedef struct objc_object AVMediaSelectionOption;
typedef struct {} _objc_exc_AVMediaSelectionOption;
#endif

// @class AVMediaSelectionGroupInternal;
#ifndef _REWRITER_typedef_AVMediaSelectionGroupInternal
#define _REWRITER_typedef_AVMediaSelectionGroupInternal
typedef struct objc_object AVMediaSelectionGroupInternal;
typedef struct {} _objc_exc_AVMediaSelectionGroupInternal;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0)))

#ifndef _REWRITER_typedef_AVMediaSelectionGroup
#define _REWRITER_typedef_AVMediaSelectionGroup
typedef struct objc_object AVMediaSelectionGroup;
typedef struct {} _objc_exc_AVMediaSelectionGroup;
#endif

struct AVMediaSelectionGroup_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVMediaSelectionGroupInternal *__strong _mediaSelectionGroup;
};







// @property (nonatomic, readonly) NSArray<AVMediaSelectionOption *> *options;







// @property (nonatomic, readonly, nullable) AVMediaSelectionOption *defaultOption __attribute__((availability(ios,introduced=8_0)));
// @property (nonatomic, readonly) BOOL allowsEmptySelection;
// - (nullable AVMediaSelectionOption *)mediaSelectionOptionWithPropertyList:(id)plist;

/* @end */

// @interface AVMediaSelectionGroup (AVMediaSelectionOptionFiltering)
// + (NSArray<AVMediaSelectionOption *> *)playableMediaSelectionOptionsFromArray:(NSArray<AVMediaSelectionOption *> *)mediaSelectionOptions;
// + (NSArray<AVMediaSelectionOption *> *)mediaSelectionOptionsFromArray:(NSArray<AVMediaSelectionOption *> *)mediaSelectionOptions filteredAndSortedAccordingToPreferredLanguages:(NSArray<NSString *> *)preferredLanguages __attribute__((availability(ios,introduced=6_0)));
// + (NSArray<AVMediaSelectionOption *> *)mediaSelectionOptionsFromArray:(NSArray<AVMediaSelectionOption *> *)mediaSelectionOptions withLocale:(NSLocale *)locale;
// + (NSArray<AVMediaSelectionOption *> *)mediaSelectionOptionsFromArray:(NSArray<AVMediaSelectionOption *> *)mediaSelectionOptions withMediaCharacteristics:(NSArray<NSString *> *)mediaCharacteristics;
// + (NSArray<AVMediaSelectionOption *> *)mediaSelectionOptionsFromArray:(NSArray<AVMediaSelectionOption *> *)mediaSelectionOptions withoutMediaCharacteristics:(NSArray<NSString *> *)mediaCharacteristics;

/* @end */

// @class AVMediaSelectionOptionInternal;
#ifndef _REWRITER_typedef_AVMediaSelectionOptionInternal
#define _REWRITER_typedef_AVMediaSelectionOptionInternal
typedef struct objc_object AVMediaSelectionOptionInternal;
typedef struct {} _objc_exc_AVMediaSelectionOptionInternal;
#endif

// @class AVMetadataItem;
#ifndef _REWRITER_typedef_AVMetadataItem
#define _REWRITER_typedef_AVMetadataItem
typedef struct objc_object AVMetadataItem;
typedef struct {} _objc_exc_AVMetadataItem;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=5_0)))

#ifndef _REWRITER_typedef_AVMediaSelectionOption
#define _REWRITER_typedef_AVMediaSelectionOption
typedef struct objc_object AVMediaSelectionOption;
typedef struct {} _objc_exc_AVMediaSelectionOption;
#endif

struct AVMediaSelectionOption_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVMediaSelectionOptionInternal *__strong _mediaSelectionOption;
};






// @property (nonatomic, readonly) NSString *mediaType;
// @property (nonatomic, readonly) NSArray<NSNumber *> *mediaSubTypes;
// - (BOOL)hasMediaCharacteristic:(AVMediaCharacteristic)mediaCharacteristic;






// @property (nonatomic, readonly, getter=isPlayable) BOOL playable;





// @property (nonatomic, readonly, nullable) NSString *extendedLanguageTag __attribute__((availability(ios,introduced=7_0)));







// @property (nonatomic, readonly, nullable) NSLocale *locale;
// @property (nonatomic, readonly) NSArray<AVMetadataItem *> *commonMetadata;







// @property (nonatomic, readonly) NSArray<NSString *> *availableMetadataFormats;
// - (NSArray<AVMetadataItem *> *)metadataForFormat:(NSString *)format;
// - (nullable AVMediaSelectionOption *)associatedMediaSelectionOptionInMediaSelectionGroup:(AVMediaSelectionGroup *)mediaSelectionGroup;






// - (id)propertyList;
// - (NSString *)displayNameWithLocale:(NSLocale *)locale __attribute__((availability(ios,introduced=7_0)));
// @property (nonatomic, readonly) NSString *displayName __attribute__((availability(ios,introduced=7_0)));

/* @end */

#pragma clang assume_nonnull end





// @class AVAssetWriterInput;
#ifndef _REWRITER_typedef_AVAssetWriterInput
#define _REWRITER_typedef_AVAssetWriterInput
typedef struct objc_object AVAssetWriterInput;
typedef struct {} _objc_exc_AVAssetWriterInput;
#endif

// @class AVMetadataItem;
#ifndef _REWRITER_typedef_AVMetadataItem
#define _REWRITER_typedef_AVMetadataItem
typedef struct objc_object AVMetadataItem;
typedef struct {} _objc_exc_AVMetadataItem;
#endif


#pragma clang assume_nonnull begin
typedef NSInteger AVAssetWriterStatus; enum {
 AVAssetWriterStatusUnknown = 0,
 AVAssetWriterStatusWriting,
 AVAssetWriterStatusCompleted,
 AVAssetWriterStatusFailed,
 AVAssetWriterStatusCancelled
};

// @class AVAssetWriterInternal;
#ifndef _REWRITER_typedef_AVAssetWriterInternal
#define _REWRITER_typedef_AVAssetWriterInternal
typedef struct objc_object AVAssetWriterInternal;
typedef struct {} _objc_exc_AVAssetWriterInternal;
#endif

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_1)))

#ifndef _REWRITER_typedef_AVAssetWriter
#define _REWRITER_typedef_AVAssetWriter
typedef struct objc_object AVAssetWriter;
typedef struct {} _objc_exc_AVAssetWriter;
#endif

struct AVAssetWriter_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVAssetWriterInternal *__strong _internal;
};

// - (instancetype)init __attribute__((unavailable)); // + (instancetype)new __attribute__((unavailable));
// + (nullable instancetype)assetWriterWithURL:(NSURL *)outputURL fileType:(AVFileType)outputFileType error:(NSError * _Nullable * _Nullable)outError;
// - (nullable instancetype)initWithURL:(NSURL *)outputURL fileType:(AVFileType)outputFileType error:(NSError * _Nullable * _Nullable)outError __attribute__((objc_designated_initializer));
// @property (nonatomic, copy, readonly) NSURL *outputURL;






// @property (nonatomic, copy, readonly) AVFileType outputFileType;
// @property (nonatomic, readonly) NSArray<AVMediaType> *availableMediaTypes;
// @property (readonly) AVAssetWriterStatus status;
// @property (readonly, nullable) NSError *error;
// @property (nonatomic, copy) NSArray<AVMetadataItem *> *metadata;
// @property (nonatomic) BOOL shouldOptimizeForNetworkUse;
// @property (nonatomic, copy, nullable) NSURL *directoryForTemporaryFiles __attribute__((availability(ios,introduced=8_0)));
// @property (nonatomic, readonly) NSArray<AVAssetWriterInput *> *inputs;
// - (BOOL)canApplyOutputSettings:(nullable NSDictionary<NSString *, id> *)outputSettings forMediaType:(AVMediaType)mediaType;
// - (BOOL)canAddInput:(AVAssetWriterInput *)input;
// - (void)addInput:(AVAssetWriterInput *)input;
// - (BOOL)startWriting;
// - (void)startSessionAtSourceTime:(CMTime)startTime;
// - (void)endSessionAtSourceTime:(CMTime)endTime;
// - (void)cancelWriting;
// - (BOOL)finishWriting __attribute__((availability(ios,introduced=4_1,deprecated=6_0,message="" )));
// - (void)finishWritingWithCompletionHandler:(void (^)(void))handler __attribute__((availability(ios,introduced=6_0)));

/* @end */



// @interface AVAssetWriter (AVAssetWriterFileTypeSpecificProperties)
// @property (nonatomic) CMTime movieFragmentInterval;
// @property (nonatomic) CMTime overallDurationHint;
// @property (nonatomic) CMTimeScale movieTimeScale __attribute__((availability(ios,introduced=4_3)));

/* @end */



// @class AVAssetWriterInputGroup;
#ifndef _REWRITER_typedef_AVAssetWriterInputGroup
#define _REWRITER_typedef_AVAssetWriterInputGroup
typedef struct objc_object AVAssetWriterInputGroup;
typedef struct {} _objc_exc_AVAssetWriterInputGroup;
#endif


// @interface AVAssetWriter (AVAssetWriterInputGroups)
// - (BOOL)canAddInputGroup:(AVAssetWriterInputGroup *)inputGroup __attribute__((availability(ios,introduced=7_0)));
// - (void)addInputGroup:(AVAssetWriterInputGroup *)inputGroup __attribute__((availability(ios,introduced=7_0)));
// @property (nonatomic, readonly) NSArray<AVAssetWriterInputGroup *> *inputGroups __attribute__((availability(ios,introduced=7_0)));

/* @end */



// @class AVAssetWriterInputGroupInternal;
#ifndef _REWRITER_typedef_AVAssetWriterInputGroupInternal
#define _REWRITER_typedef_AVAssetWriterInputGroupInternal
typedef struct objc_object AVAssetWriterInputGroupInternal;
typedef struct {} _objc_exc_AVAssetWriterInputGroupInternal;
#endif

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0)))

#ifndef _REWRITER_typedef_AVAssetWriterInputGroup
#define _REWRITER_typedef_AVAssetWriterInputGroup
typedef struct objc_object AVAssetWriterInputGroup;
typedef struct {} _objc_exc_AVAssetWriterInputGroup;
#endif

struct AVAssetWriterInputGroup_IMPL {
	struct AVMediaSelectionGroup_IMPL AVMediaSelectionGroup_IVARS;
	AVAssetWriterInputGroupInternal *__strong _internal;
};

// - (instancetype)init __attribute__((unavailable)); // + (instancetype)new __attribute__((unavailable));
// + (instancetype)assetWriterInputGroupWithInputs:(NSArray<AVAssetWriterInput *> *)inputs defaultInput:(nullable AVAssetWriterInput *)defaultInput;
// - (instancetype)initWithInputs:(NSArray<AVAssetWriterInput *> *)inputs defaultInput:(nullable AVAssetWriterInput *)defaultInput __attribute__((objc_designated_initializer));
// @property (nonatomic, readonly) NSArray<AVAssetWriterInput *> *inputs;
// @property (nonatomic, readonly, nullable) AVAssetWriterInput *defaultInput;

/* @end */

#pragma clang assume_nonnull end
// @class AVMetadataItem;
#ifndef _REWRITER_typedef_AVMetadataItem
#define _REWRITER_typedef_AVMetadataItem
typedef struct objc_object AVMetadataItem;
typedef struct {} _objc_exc_AVMetadataItem;
#endif

// @class AVAssetWriterInputInternal;
#ifndef _REWRITER_typedef_AVAssetWriterInputInternal
#define _REWRITER_typedef_AVAssetWriterInputInternal
typedef struct objc_object AVAssetWriterInputInternal;
typedef struct {} _objc_exc_AVAssetWriterInputInternal;
#endif


#pragma clang assume_nonnull begin
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_1)))

#ifndef _REWRITER_typedef_AVAssetWriterInput
#define _REWRITER_typedef_AVAssetWriterInput
typedef struct objc_object AVAssetWriterInput;
typedef struct {} _objc_exc_AVAssetWriterInput;
#endif

struct AVAssetWriterInput_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVAssetWriterInputInternal *__strong _internal;
};

// - (instancetype)init __attribute__((unavailable)); // + (instancetype)new __attribute__((unavailable));
// + (instancetype)assetWriterInputWithMediaType:(AVMediaType)mediaType outputSettings:(nullable NSDictionary<NSString *, id> *)outputSettings;
// + (instancetype)assetWriterInputWithMediaType:(AVMediaType)mediaType outputSettings:(nullable NSDictionary<NSString *, id> *)outputSettings sourceFormatHint:(nullable CMFormatDescriptionRef)sourceFormatHint __attribute__((availability(ios,introduced=6_0)));
// - (instancetype)initWithMediaType:(AVMediaType)mediaType outputSettings:(nullable NSDictionary<NSString *, id> *)outputSettings;
// - (instancetype)initWithMediaType:(AVMediaType)mediaType outputSettings:(nullable NSDictionary<NSString *, id> *)outputSettings sourceFormatHint:(nullable CMFormatDescriptionRef)sourceFormatHint __attribute__((availability(ios,introduced=6_0))) __attribute__((objc_designated_initializer));
// @property (nonatomic, readonly) AVMediaType mediaType;
// @property (nonatomic, readonly, nullable) NSDictionary<NSString *, id> *outputSettings;
// @property (nonatomic, readonly, nullable) __attribute__((NSObject)) CMFormatDescriptionRef sourceFormatHint __attribute__((availability(ios,introduced=6_0)));
// @property (nonatomic, copy) NSArray<AVMetadataItem *> *metadata;
// @property (nonatomic, readonly, getter=isReadyForMoreMediaData) BOOL readyForMoreMediaData;
// @property (nonatomic) BOOL expectsMediaDataInRealTime;
// - (void)requestMediaDataWhenReadyOnQueue:(dispatch_queue_t)queue usingBlock:(void (^)(void))block;
// - (BOOL)appendSampleBuffer:(CMSampleBufferRef)sampleBuffer;
// - (void)markAsFinished;

/* @end */



// @interface AVAssetWriterInput (AVAssetWriterInputLanguageProperties)
// @property (nonatomic, copy, nullable) NSString *languageCode __attribute__((availability(ios,introduced=7_0)));
// @property (nonatomic, copy, nullable) NSString *extendedLanguageTag __attribute__((availability(ios,introduced=7_0)));

/* @end */



// @interface AVAssetWriterInput (AVAssetWriterInputPropertiesForVisualCharacteristic)
// @property (nonatomic) CGSize naturalSize __attribute__((availability(ios,introduced=7_0)));
// @property (nonatomic) CGAffineTransform transform;

/* @end */



// @interface AVAssetWriterInput (AVAssetWriterInputPropertiesForAudibleCharacteristic)
// @property (nonatomic) float preferredVolume __attribute__((availability(ios,introduced=7_0)));

/* @end */



// @interface AVAssetWriterInput (AVAssetWriterInputFileTypeSpecificProperties)
// @property (nonatomic) BOOL marksOutputTrackAsEnabled __attribute__((availability(ios,introduced=7_0)));
// @property (nonatomic) CMTimeScale mediaTimeScale __attribute__((availability(ios,introduced=4_3)));
// @property (nonatomic) CMTime preferredMediaChunkDuration __attribute__((availability(ios,introduced=8_0)));
// @property (nonatomic) NSInteger preferredMediaChunkAlignment __attribute__((availability(ios,introduced=8_0)));
// @property (nonatomic, copy, nullable) NSURL *sampleReferenceBaseURL __attribute__((availability(ios,introduced=8_0)));

typedef NSString *AVAssetWriterInputMediaDataLocation __attribute__((swift_wrapper(enum))) __attribute__((availability(ios,introduced=11_0)));





extern "C" AVAssetWriterInputMediaDataLocation const AVAssetWriterInputMediaDataLocationInterleavedWithMainMediaData __attribute__((availability(ios,introduced=11_0)));





extern "C" AVAssetWriterInputMediaDataLocation const AVAssetWriterInputMediaDataLocationBeforeMainMediaDataNotInterleaved __attribute__((availability(ios,introduced=11_0)));
// @property (nonatomic, copy) AVAssetWriterInputMediaDataLocation mediaDataLocation __attribute__((availability(ios,introduced=11_0)));

/* @end */



// @interface AVAssetWriterInput (AVAssetWriterInputTrackAssociations)
// - (BOOL)canAddTrackAssociationWithTrackOfInput:(AVAssetWriterInput *)input type:(NSString *)trackAssociationType __attribute__((availability(ios,introduced=7_0)));
// - (void)addTrackAssociationWithTrackOfInput:(AVAssetWriterInput *)input type:(NSString *)trackAssociationType __attribute__((availability(ios,introduced=7_0)));

/* @end */



// @class AVAssetWriterInputPassDescription;
#ifndef _REWRITER_typedef_AVAssetWriterInputPassDescription
#define _REWRITER_typedef_AVAssetWriterInputPassDescription
typedef struct objc_object AVAssetWriterInputPassDescription;
typedef struct {} _objc_exc_AVAssetWriterInputPassDescription;
#endif


// @interface AVAssetWriterInput (AVAssetWriterInputMultiPass)
// @property (nonatomic) BOOL performsMultiPassEncodingIfSupported __attribute__((availability(ios,introduced=8_0)));
// @property (nonatomic, readonly) BOOL canPerformMultiplePasses __attribute__((availability(ios,introduced=8_0)));
// @property (readonly, nullable) AVAssetWriterInputPassDescription *currentPassDescription __attribute__((availability(ios,introduced=8_0)));
// - (void)respondToEachPassDescriptionOnQueue:(dispatch_queue_t)queue usingBlock:(dispatch_block_t)block __attribute__((availability(ios,introduced=8_0)));
// - (void)markCurrentPassAsFinished __attribute__((availability(ios,introduced=8_0)));

/* @end */



// @class AVAssetWriterInputPassDescriptionInternal;
#ifndef _REWRITER_typedef_AVAssetWriterInputPassDescriptionInternal
#define _REWRITER_typedef_AVAssetWriterInputPassDescriptionInternal
typedef struct objc_object AVAssetWriterInputPassDescriptionInternal;
typedef struct {} _objc_exc_AVAssetWriterInputPassDescriptionInternal;
#endif







__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))

#ifndef _REWRITER_typedef_AVAssetWriterInputPassDescription
#define _REWRITER_typedef_AVAssetWriterInputPassDescription
typedef struct objc_object AVAssetWriterInputPassDescription;
typedef struct {} _objc_exc_AVAssetWriterInputPassDescription;
#endif

struct AVAssetWriterInputPassDescription_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVAssetWriterInputPassDescriptionInternal *__strong _internal;
};

// - (instancetype)init __attribute__((unavailable)); // + (instancetype)new __attribute__((unavailable));
// @property (nonatomic, readonly) NSArray<NSValue *> *sourceTimeRanges;

/* @end */



// @class AVAssetWriterInputPixelBufferAdaptorInternal;
#ifndef _REWRITER_typedef_AVAssetWriterInputPixelBufferAdaptorInternal
#define _REWRITER_typedef_AVAssetWriterInputPixelBufferAdaptorInternal
typedef struct objc_object AVAssetWriterInputPixelBufferAdaptorInternal;
typedef struct {} _objc_exc_AVAssetWriterInputPixelBufferAdaptorInternal;
#endif

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_1)))

#ifndef _REWRITER_typedef_AVAssetWriterInputPixelBufferAdaptor
#define _REWRITER_typedef_AVAssetWriterInputPixelBufferAdaptor
typedef struct objc_object AVAssetWriterInputPixelBufferAdaptor;
typedef struct {} _objc_exc_AVAssetWriterInputPixelBufferAdaptor;
#endif

struct AVAssetWriterInputPixelBufferAdaptor_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVAssetWriterInputPixelBufferAdaptorInternal *__strong _internal;
};

// - (instancetype)init __attribute__((unavailable)); // + (instancetype)new __attribute__((unavailable));
// + (instancetype)assetWriterInputPixelBufferAdaptorWithAssetWriterInput:(AVAssetWriterInput *)input sourcePixelBufferAttributes:(nullable NSDictionary<NSString *, id> *)sourcePixelBufferAttributes;
// - (instancetype)initWithAssetWriterInput:(AVAssetWriterInput *)input sourcePixelBufferAttributes:(nullable NSDictionary<NSString *, id> *)sourcePixelBufferAttributes __attribute__((objc_designated_initializer));






// @property (nonatomic, readonly) AVAssetWriterInput *assetWriterInput;
// @property (nonatomic, readonly, nullable) NSDictionary<NSString *, id> *sourcePixelBufferAttributes;
// @property (nonatomic, readonly, nullable) CVPixelBufferPoolRef pixelBufferPool;
// - (BOOL)appendPixelBuffer:(CVPixelBufferRef)pixelBuffer withPresentationTime:(CMTime)presentationTime;

/* @end */



// @class AVTimedMetadataGroup;
#ifndef _REWRITER_typedef_AVTimedMetadataGroup
#define _REWRITER_typedef_AVTimedMetadataGroup
typedef struct objc_object AVTimedMetadataGroup;
typedef struct {} _objc_exc_AVTimedMetadataGroup;
#endif

// @class AVAssetWriterInputMetadataAdaptorInternal;
#ifndef _REWRITER_typedef_AVAssetWriterInputMetadataAdaptorInternal
#define _REWRITER_typedef_AVAssetWriterInputMetadataAdaptorInternal
typedef struct objc_object AVAssetWriterInputMetadataAdaptorInternal;
typedef struct {} _objc_exc_AVAssetWriterInputMetadataAdaptorInternal;
#endif








__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))

#ifndef _REWRITER_typedef_AVAssetWriterInputMetadataAdaptor
#define _REWRITER_typedef_AVAssetWriterInputMetadataAdaptor
typedef struct objc_object AVAssetWriterInputMetadataAdaptor;
typedef struct {} _objc_exc_AVAssetWriterInputMetadataAdaptor;
#endif

struct AVAssetWriterInputMetadataAdaptor_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVAssetWriterInputMetadataAdaptorInternal *__strong _internal;
};

// - (instancetype)init __attribute__((unavailable)); // + (instancetype)new __attribute__((unavailable));
// + (instancetype)assetWriterInputMetadataAdaptorWithAssetWriterInput:(AVAssetWriterInput *)input;
// - (instancetype)initWithAssetWriterInput:(AVAssetWriterInput *)input __attribute__((objc_designated_initializer));






// @property (nonatomic, readonly) AVAssetWriterInput *assetWriterInput;
// - (BOOL)appendTimedMetadataGroup:(AVTimedMetadataGroup *)timedMetadataGroup;

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin
typedef UInt32 AudioComponentFlags; enum {
    kAudioComponentFlag_Unsearchable __attribute__((availability(ios,introduced=5_0))) = 1,
    kAudioComponentFlag_SandboxSafe __attribute__((availability(ios,introduced=6_0))) = 2,
    kAudioComponentFlag_IsV3AudioUnit __attribute__((availability(ios,introduced=9_0))) = 4,
    kAudioComponentFlag_RequiresAsyncInstantiation __attribute__((availability(ios,introduced=9_0))) = 8,
 kAudioComponentFlag_CanLoadInProcess __attribute__((availability(ios,introduced=9_0))) = 0x10
};
typedef UInt32 AudioComponentInstantiationOptions; enum {
    kAudioComponentInstantiation_LoadOutOfProcess __attribute__((availability(ios,introduced=9_0))) = 1,
    kAudioComponentInstantiation_LoadInProcess __attribute__((availability(ios,introduced=NA))) = 2
};
#pragma pack(push, 4)
typedef struct AudioComponentDescription {
    OSType componentType;
    OSType componentSubType;
    OSType componentManufacturer;
    UInt32 componentFlags;
    UInt32 componentFlagsMask;
} AudioComponentDescription;
#pragma pack(pop)
typedef struct OpaqueAudioComponent * AudioComponent;
    typedef struct OpaqueAudioComponentInstance * AudioComponentInstance;
typedef OSStatus (*AudioComponentMethod)(void *self,...);
typedef struct AudioComponentPlugInInterface {
 OSStatus (*Open)(void *self, AudioComponentInstance mInstance);
 OSStatus (*Close)(void *self);
 AudioComponentMethod _Nullable (* _Nonnull Lookup)(SInt16 selector);
 void * _Nullable reserved;
} AudioComponentPlugInInterface;
typedef AudioComponentPlugInInterface * _Nullable (*AudioComponentFactoryFunction)(const AudioComponentDescription *inDesc);





extern "C" {
extern AudioComponent _Nullable
AudioComponentFindNext ( AudioComponent _Nullable inComponent,
                            const AudioComponentDescription * inDesc)
                                                                            __attribute__((availability(ios,introduced=2.0)));
extern UInt32
AudioComponentCount ( const AudioComponentDescription * inDesc)
                                                                            __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioComponentCopyName ( AudioComponent inComponent,
                            CFStringRef _Nullable * _Nonnull outName)
                                                                            __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioComponentGetDescription( AudioComponent inComponent,
                                AudioComponentDescription * outDesc)
                                                                            __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioComponentGetVersion( AudioComponent inComponent,
                            UInt32 * outVersion)
                                                                            __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioComponentInstanceNew( AudioComponent inComponent,
                                AudioComponentInstance _Nullable * _Nonnull outInstance)
                                                                            __attribute__((availability(ios,introduced=2.0)));
extern void
AudioComponentInstantiate( AudioComponent inComponent,
                                AudioComponentInstantiationOptions inOptions,
                                void (^inCompletionHandler)(AudioComponentInstance _Nullable, OSStatus))
                                                                            __attribute__((availability(ios,introduced=9.0)));
extern OSStatus
AudioComponentInstanceDispose( AudioComponentInstance inInstance)
                                                                            __attribute__((availability(ios,introduced=2.0)));
extern AudioComponent
AudioComponentInstanceGetComponent ( AudioComponentInstance inInstance)
                                                                            __attribute__((availability(ios,introduced=2.0)));
extern Boolean
AudioComponentInstanceCanDo ( AudioComponentInstance inInstance,
                                SInt16 inSelectorID)
                                                                            __attribute__((availability(ios,introduced=3.0)));
extern AudioComponent
AudioComponentRegister( const AudioComponentDescription * inDesc,
                            CFStringRef inName,
                            UInt32 inVersion,
                            AudioComponentFactoryFunction inFactory)
                                                    __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
AudioComponentCopyConfigurationInfo( AudioComponent inComponent,
                                        CFDictionaryRef _Nullable * _Nonnull outConfigurationInfo)
                                                    __attribute__((availability(ios,unavailable)));
typedef UInt32 AudioComponentValidationResult; enum
{
 kAudioComponentValidationResult_Unknown = 0,
 kAudioComponentValidationResult_Passed,
 kAudioComponentValidationResult_Failed,
 kAudioComponentValidationResult_TimedOut,
 kAudioComponentValidationResult_UnauthorizedError_Open,
 kAudioComponentValidationResult_UnauthorizedError_Init
};
extern OSStatus
AudioComponentValidate( AudioComponent inComponent,
      CFDictionaryRef _Nullable inValidationParameters,
      AudioComponentValidationResult *outValidationResult)
             __attribute__((availability(ios,unavailable)));
}
#pragma clang assume_nonnull end






#pragma clang assume_nonnull begin


extern "C" {
typedef AudioComponentInstance AudioUnit;
enum {
 kAudioUnitType_Output = 'auou',
 kAudioUnitType_MusicDevice = 'aumu',
 kAudioUnitType_MusicEffect = 'aumf',
 kAudioUnitType_FormatConverter = 'aufc',
 kAudioUnitType_Effect = 'aufx',
 kAudioUnitType_Mixer = 'aumx',
 kAudioUnitType_Panner = 'aupn',
 kAudioUnitType_Generator = 'augn',
 kAudioUnitType_OfflineEffect = 'auol',
 kAudioUnitType_MIDIProcessor = 'aumi'
};
enum {
    kAudioUnitType_RemoteEffect = 'aurx',
    kAudioUnitType_RemoteGenerator = 'aurg',
    kAudioUnitType_RemoteInstrument = 'auri',
    kAudioUnitType_RemoteMusicEffect = 'aurm'
};
enum {
 kAudioUnitManufacturer_Apple = 'appl'
};
enum {
 kAudioUnitSubType_GenericOutput = 'genr',
 kAudioUnitSubType_VoiceProcessingIO = 'vpio'
};
enum {
 kAudioUnitSubType_RemoteIO = 'rioc',
};
enum {



 kAudioUnitSubType_Sampler = 'samp',
 kAudioUnitSubType_MIDISynth = 'msyn'
};
enum {
 kAudioUnitSubType_AUConverter = 'conv',
 kAudioUnitSubType_Varispeed = 'vari',
 kAudioUnitSubType_DeferredRenderer = 'defr',
 kAudioUnitSubType_Splitter = 'splt',
 kAudioUnitSubType_MultiSplitter = 'mspl',
 kAudioUnitSubType_Merger = 'merg',
 kAudioUnitSubType_NewTimePitch = 'nutp',
 kAudioUnitSubType_AUiPodTimeOther = 'ipto',
 kAudioUnitSubType_RoundTripAAC = 'raac',
};
enum {
 kAudioUnitSubType_AUiPodTime = 'iptm'
};
enum {
 kAudioUnitSubType_PeakLimiter = 'lmtr',
 kAudioUnitSubType_DynamicsProcessor = 'dcmp',
 kAudioUnitSubType_LowPassFilter = 'lpas',
 kAudioUnitSubType_HighPassFilter = 'hpas',
 kAudioUnitSubType_BandPassFilter = 'bpas',
 kAudioUnitSubType_HighShelfFilter = 'hshf',
 kAudioUnitSubType_LowShelfFilter = 'lshf',
 kAudioUnitSubType_ParametricEQ = 'pmeq',
 kAudioUnitSubType_Distortion = 'dist',
 kAudioUnitSubType_Delay = 'dely',
 kAudioUnitSubType_SampleDelay = 'sdly',
 kAudioUnitSubType_NBandEQ = 'nbeq'
};
enum {
 kAudioUnitSubType_Reverb2 = 'rvb2',
 kAudioUnitSubType_AUiPodEQ = 'ipeq'
};
enum {
 kAudioUnitSubType_MultiChannelMixer = 'mcmx',
 kAudioUnitSubType_MatrixMixer = 'mxmx',
    kAudioUnitSubType_SpatialMixer = '3dem',
};
enum {
 kAudioUnitSubType_AU3DMixerEmbedded __attribute__((deprecated("renamed to kAudioUnitSubType_SpatialMixer")))
           = '3dem'
};
enum {



 kAudioUnitSubType_ScheduledSoundPlayer = 'sspl',
 kAudioUnitSubType_AudioFilePlayer = 'afpl'
};
typedef UInt32 AudioUnitRenderActionFlags; enum
{
 kAudioUnitRenderAction_PreRender = (1UL << 2),
 kAudioUnitRenderAction_PostRender = (1UL << 3),
 kAudioUnitRenderAction_OutputIsSilence = (1UL << 4),
 kAudioOfflineUnitRenderAction_Preflight = (1UL << 5),
 kAudioOfflineUnitRenderAction_Render = (1UL << 6),
 kAudioOfflineUnitRenderAction_Complete = (1UL << 7),
 kAudioUnitRenderAction_PostRenderError = (1UL << 8),
 kAudioUnitRenderAction_DoNotCheckRenderArgs = (1UL << 9)
};
enum {
 kAudioUnitErr_InvalidProperty = -10879,
 kAudioUnitErr_InvalidParameter = -10878,
 kAudioUnitErr_InvalidElement = -10877,
 kAudioUnitErr_NoConnection = -10876,
 kAudioUnitErr_FailedInitialization = -10875,
 kAudioUnitErr_TooManyFramesToProcess = -10874,
 kAudioUnitErr_InvalidFile = -10871,
 kAudioUnitErr_UnknownFileType = -10870,
 kAudioUnitErr_FileNotSpecified = -10869,
 kAudioUnitErr_FormatNotSupported = -10868,
 kAudioUnitErr_Uninitialized = -10867,
 kAudioUnitErr_InvalidScope = -10866,
 kAudioUnitErr_PropertyNotWritable = -10865,
 kAudioUnitErr_CannotDoInCurrentContext = -10863,
 kAudioUnitErr_InvalidPropertyValue = -10851,
 kAudioUnitErr_PropertyNotInUse = -10850,
 kAudioUnitErr_Initialized = -10849,
 kAudioUnitErr_InvalidOfflineRender = -10848,
 kAudioUnitErr_Unauthorized = -10847,
    kAudioUnitErr_MIDIOutputBufferFull = -66753,
    kAudioComponentErr_InstanceInvalidated = -66749,
 kAudioUnitErr_RenderTimeout = -66745,
 kAudioUnitErr_ExtensionNotFound = -66744,
 kAudioUnitErr_InvalidParameterValue = -66743,
};
enum {
    kAudioComponentErr_DuplicateDescription = -66752,
    kAudioComponentErr_UnsupportedType = -66751,
    kAudioComponentErr_TooManyInstances = -66750,
    kAudioComponentErr_NotPermitted = -66748,
 kAudioComponentErr_InitializationTimedOut = -66747,
 kAudioComponentErr_InvalidFormat = -66746
};
typedef UInt32 AudioUnitPropertyID;







typedef UInt32 AudioUnitScope;







typedef UInt32 AudioUnitElement;






typedef UInt32 AudioUnitParameterID;






typedef Float32 AudioUnitParameterValue;
typedef UInt32 AUParameterEventType; enum
{
 kParameterEvent_Immediate = 1,
 kParameterEvent_Ramped = 2
};
struct AudioUnitParameterEvent
{
 AudioUnitScope scope;
 AudioUnitElement element;
 AudioUnitParameterID parameter;

 AUParameterEventType eventType;

 union
 {
  struct
  {
   SInt32 startBufferOffset;
   UInt32 durationInFrames;
   AudioUnitParameterValue startValue;
   AudioUnitParameterValue endValue;
  } ramp;

  struct
  {
   UInt32 bufferOffset;
   AudioUnitParameterValue value;
  } immediate;

 } eventValues;
};
typedef struct AudioUnitParameterEvent AudioUnitParameterEvent;
struct AudioUnitParameter
{
 AudioUnit mAudioUnit;
 AudioUnitParameterID mParameterID;
 AudioUnitScope mScope;
 AudioUnitElement mElement;
};
typedef struct AudioUnitParameter AudioUnitParameter;
struct AudioUnitProperty
{
 AudioUnit mAudioUnit;
 AudioUnitPropertyID mPropertyID;
 AudioUnitScope mScope;
 AudioUnitElement mElement;
};
typedef struct AudioUnitProperty AudioUnitProperty;
typedef OSStatus
(*AURenderCallback)( void * inRefCon,
      AudioUnitRenderActionFlags * ioActionFlags,
      const AudioTimeStamp * inTimeStamp,
      UInt32 inBusNumber,
      UInt32 inNumberFrames,
      AudioBufferList * _Nullable ioData);
typedef void
(*AudioUnitPropertyListenerProc)( void * inRefCon,
         AudioUnit inUnit,
         AudioUnitPropertyID inID,
         AudioUnitScope inScope,
         AudioUnitElement inElement);
typedef void
(*AUInputSamplesInOutputCallback)( void * inRefCon,
         const AudioTimeStamp * inOutputTimeStamp,
         Float64 inInputSample,
         Float64 inNumberInputSamples);
extern const CFStringRef kAudioComponentRegistrationsChangedNotification
            __attribute__((availability(ios,introduced=7.0)));
extern const CFStringRef kAudioComponentInstanceInvalidationNotification
            __attribute__((availability(ios,introduced=9.0)));
extern OSStatus
AudioUnitInitialize( AudioUnit inUnit)
            __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioUnitUninitialize( AudioUnit inUnit)
            __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioUnitGetPropertyInfo( AudioUnit inUnit,
         AudioUnitPropertyID inID,
         AudioUnitScope inScope,
         AudioUnitElement inElement,
         UInt32 * _Nullable outDataSize,
         Boolean * _Nullable outWritable)
            __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioUnitGetProperty( AudioUnit inUnit,
         AudioUnitPropertyID inID,
         AudioUnitScope inScope,
         AudioUnitElement inElement,
         void * outData,
         UInt32 * ioDataSize)
            __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioUnitSetProperty( AudioUnit inUnit,
         AudioUnitPropertyID inID,
         AudioUnitScope inScope,
         AudioUnitElement inElement,
         const void * _Nullable inData,
         UInt32 inDataSize)
            __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioUnitAddPropertyListener( AudioUnit inUnit,
         AudioUnitPropertyID inID,
         AudioUnitPropertyListenerProc inProc,
         void * _Nullable inProcUserData)
            __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioUnitRemovePropertyListenerWithUserData(
         AudioUnit inUnit,
         AudioUnitPropertyID inID,
         AudioUnitPropertyListenerProc inProc,
         void * _Nullable inProcUserData)
            __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioUnitAddRenderNotify( AudioUnit inUnit,
         AURenderCallback inProc,
         void * _Nullable inProcUserData)
            __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioUnitRemoveRenderNotify( AudioUnit inUnit,
         AURenderCallback inProc,
         void * _Nullable inProcUserData)
            __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioUnitGetParameter( AudioUnit inUnit,
         AudioUnitParameterID inID,
         AudioUnitScope inScope,
         AudioUnitElement inElement,
         AudioUnitParameterValue * outValue)
            __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioUnitSetParameter( AudioUnit inUnit,
         AudioUnitParameterID inID,
         AudioUnitScope inScope,
         AudioUnitElement inElement,
         AudioUnitParameterValue inValue,
         UInt32 inBufferOffsetInFrames)
            __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioUnitScheduleParameters( AudioUnit inUnit,
         const AudioUnitParameterEvent * inParameterEvent,
         UInt32 inNumParamEvents)
            __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioUnitRender( AudioUnit inUnit,
         AudioUnitRenderActionFlags * _Nullable ioActionFlags,
         const AudioTimeStamp * inTimeStamp,
         UInt32 inOutputBusNumber,
         UInt32 inNumberFrames,
         AudioBufferList * ioData)
            __attribute__((availability(ios,introduced=2.0)));

extern OSStatus
AudioUnitProcess ( AudioUnit inUnit,
         AudioUnitRenderActionFlags * _Nullable ioActionFlags,
         const AudioTimeStamp * inTimeStamp,
         UInt32 inNumberFrames,
         AudioBufferList * ioData)
            __attribute__((availability(ios,introduced=6.0)));

extern OSStatus
AudioUnitProcessMultiple( AudioUnit inUnit,
         AudioUnitRenderActionFlags * _Nullable ioActionFlags,
         const AudioTimeStamp * inTimeStamp,
         UInt32 inNumberFrames,
         UInt32 inNumberInputBufferLists,
         const AudioBufferList * _Nonnull * _Nonnull inInputBufferLists,
         UInt32 inNumberOutputBufferLists,
         AudioBufferList * _Nonnull * _Nonnull ioOutputBufferLists)
            __attribute__((availability(ios,introduced=6.0)));
extern OSStatus
AudioUnitReset( AudioUnit inUnit,
         AudioUnitScope inScope,
         AudioUnitElement inElement)
            __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioOutputUnitPublish( const AudioComponentDescription * inDesc,
                                CFStringRef inName,
                                UInt32 inVersion,
        AudioUnit inOutputUnit)
                                                __attribute__((availability(ios,introduced=7.0)));



// @class UIImage;
#ifndef _REWRITER_typedef_UIImage
#define _REWRITER_typedef_UIImage
typedef struct objc_object UIImage;
typedef struct {} _objc_exc_UIImage;
#endif


extern UIImage * _Nullable
AudioOutputUnitGetHostIcon(AudioUnit au, float desiredPointSize)
                                                __attribute__((availability(ios,introduced=7.0)));
extern UIImage * _Nullable
AudioComponentGetIcon(AudioComponent comp, float desiredPointSize)
                                                __attribute__((availability(ios,introduced=7.0)));
extern CFAbsoluteTime
AudioComponentGetLastActiveTime(AudioComponent comp)
                                                __attribute__((availability(ios,introduced=7.0)));
extern OSStatus
AudioUnitExtensionSetComponentList(CFStringRef extensionIdentifier, _Nullable CFArrayRef audioComponentInfo)
        __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0)))
        __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
extern _Nullable CFArrayRef
AudioUnitExtensionCopyComponentList(CFStringRef extensionIdentifier)
        __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0)))
        __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
enum {
 kAudioUnitRange = 0x0000,
 kAudioUnitInitializeSelect = 0x0001,
 kAudioUnitUninitializeSelect = 0x0002,
 kAudioUnitGetPropertyInfoSelect = 0x0003,
 kAudioUnitGetPropertySelect = 0x0004,
 kAudioUnitSetPropertySelect = 0x0005,
 kAudioUnitAddPropertyListenerSelect = 0x000A,
 kAudioUnitRemovePropertyListenerSelect = 0x000B,
 kAudioUnitRemovePropertyListenerWithUserDataSelect = 0x0012,
 kAudioUnitAddRenderNotifySelect = 0x000F,
 kAudioUnitRemoveRenderNotifySelect = 0x0010,
 kAudioUnitGetParameterSelect = 0x0006,
 kAudioUnitSetParameterSelect = 0x0007,
 kAudioUnitScheduleParametersSelect = 0x0011,
 kAudioUnitRenderSelect = 0x000E,
 kAudioUnitResetSelect = 0x0009,
 kAudioUnitComplexRenderSelect = 0x0013,
 kAudioUnitProcessSelect = 0x0014,
 kAudioUnitProcessMultipleSelect = 0x0015
};





typedef OSStatus
(*AudioUnitInitializeProc) (void *self);

typedef OSStatus
(*AudioUnitUninitializeProc) (void *self);

typedef OSStatus
(*AudioUnitGetPropertyInfoProc) (void *self, AudioUnitPropertyID prop, AudioUnitScope scope,
         AudioUnitElement elem, UInt32 * _Nullable outDataSize, Boolean * _Nullable outWritable);

typedef OSStatus
(*AudioUnitGetPropertyProc) (void *self, AudioUnitPropertyID inID, AudioUnitScope inScope,
         AudioUnitElement inElement, void *outData, UInt32 *ioDataSize);

typedef OSStatus
(*AudioUnitSetPropertyProc) (void *self, AudioUnitPropertyID inID, AudioUnitScope inScope,
         AudioUnitElement inElement, const void *inData, UInt32 inDataSize);

typedef OSStatus
(*AudioUnitAddPropertyListenerProc) (void *self, AudioUnitPropertyID prop,
         AudioUnitPropertyListenerProc proc, void *userData);

typedef OSStatus
(*AudioUnitRemovePropertyListenerProc) (void *self, AudioUnitPropertyID prop,
         AudioUnitPropertyListenerProc proc);

typedef OSStatus
(*AudioUnitRemovePropertyListenerWithUserDataProc) (void *self, AudioUnitPropertyID prop,
         AudioUnitPropertyListenerProc proc, void * _Nullable userData);

typedef OSStatus
(*AudioUnitAddRenderNotifyProc) (void *self, AURenderCallback proc, void * _Nullable userData);

typedef OSStatus
(*AudioUnitRemoveRenderNotifyProc) (void *self, AURenderCallback proc, void * _Nullable userData);

typedef OSStatus
(*AudioUnitScheduleParametersProc) (void *self, const AudioUnitParameterEvent *events, UInt32 numEvents);

typedef OSStatus
(*AudioUnitResetProc) (void *self, AudioUnitScope inScope, AudioUnitElement inElement);

typedef OSStatus
(*AudioUnitComplexRenderProc) (void *self, AudioUnitRenderActionFlags * _Nullable ioActionFlags, const AudioTimeStamp *inTimeStamp,
         UInt32 inOutputBusNumber, UInt32 inNumberOfPackets, UInt32 *outNumberOfPackets,
         AudioStreamPacketDescription *outPacketDescriptions, AudioBufferList *ioData,
         void *outMetadata, UInt32 *outMetadataByteSize);

typedef OSStatus
(*AudioUnitProcessProc) (void *self, AudioUnitRenderActionFlags * _Nullable ioActionFlags, const AudioTimeStamp *inTimeStamp,
         UInt32 inNumberFrames, AudioBufferList *ioData);

typedef OSStatus
(*AudioUnitProcessMultipleProc) (void *self, AudioUnitRenderActionFlags * _Nullable ioActionFlags, const AudioTimeStamp *inTimeStamp,
         UInt32 inNumberFrames, UInt32 inNumberInputBufferLists, const AudioBufferList * _Nonnull * _Nonnull inInputBufferLists,
         UInt32 inNumberOutputBufferLists, AudioBufferList * _Nonnull * _Nonnull ioOutputBufferLists);
typedef OSStatus
(*AudioUnitGetParameterProc)( void * inComponentStorage,
        AudioUnitParameterID inID,
        AudioUnitScope inScope,
        AudioUnitElement inElement,
        AudioUnitParameterValue * outValue);
typedef OSStatus
(*AudioUnitSetParameterProc)( void * inComponentStorage,
        AudioUnitParameterID inID,
        AudioUnitScope inScope,
        AudioUnitElement inElement,
        AudioUnitParameterValue inValue,
        UInt32 inBufferOffsetInFrames);
typedef OSStatus
(*AudioUnitRenderProc)( void * inComponentStorage,
        AudioUnitRenderActionFlags * _Nullable ioActionFlags,
        const AudioTimeStamp * inTimeStamp,
        UInt32 inOutputBusNumber,
        UInt32 inNumberFrames,
        AudioBufferList * ioData);
enum {
 kAudioUnitErr_IllegalInstrument = -10873,
 kAudioUnitErr_InstrumentTypeNotFound = -10872,
} __attribute__((deprecated));
}
#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin


extern "C" {





extern OSStatus
AudioOutputUnitStart( AudioUnit ci) __attribute__((availability(ios,introduced=2.0)));

extern OSStatus
AudioOutputUnitStop( AudioUnit ci) __attribute__((availability(ios,introduced=2.0)));




enum {
 kAudioOutputUnitRange = 0x0200,
 kAudioOutputUnitStartSelect = 0x0201,
 kAudioOutputUnitStopSelect = 0x0202
};



typedef OSStatus (*AudioOutputUnitStartProc) (void *self);



typedef OSStatus (*AudioOutputUnitStopProc) (void *self);



}
#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin
enum {
 kAudioUnitScope_Global = 0,
 kAudioUnitScope_Input = 1,
 kAudioUnitScope_Output = 2,
 kAudioUnitScope_Group = 3,
 kAudioUnitScope_Part = 4,
 kAudioUnitScope_Note = 5,
 kAudioUnitScope_Layer = 6,
 kAudioUnitScope_LayerItem = 7
};
enum
{

 kAudioUnitProperty_ClassInfo = 0,
 kAudioUnitProperty_MakeConnection = 1,
 kAudioUnitProperty_SampleRate = 2,
 kAudioUnitProperty_ParameterList = 3,
 kAudioUnitProperty_ParameterInfo = 4,
 kAudioUnitProperty_CPULoad = 6,
 kAudioUnitProperty_StreamFormat = 8,
 kAudioUnitProperty_ElementCount = 11,
 kAudioUnitProperty_Latency = 12,
 kAudioUnitProperty_SupportedNumChannels = 13,
 kAudioUnitProperty_MaximumFramesPerSlice = 14,
 kAudioUnitProperty_ParameterValueStrings = 16,
 kAudioUnitProperty_AudioChannelLayout = 19,
 kAudioUnitProperty_TailTime = 20,
 kAudioUnitProperty_BypassEffect = 21,
 kAudioUnitProperty_LastRenderError = 22,
 kAudioUnitProperty_SetRenderCallback = 23,
 kAudioUnitProperty_FactoryPresets = 24,
 kAudioUnitProperty_RenderQuality = 26,
 kAudioUnitProperty_HostCallbacks = 27,
 kAudioUnitProperty_InPlaceProcessing = 29,
 kAudioUnitProperty_ElementName = 30,
 kAudioUnitProperty_SupportedChannelLayoutTags = 32,
 kAudioUnitProperty_PresentPreset = 36,
 kAudioUnitProperty_DependentParameters = 45,
 kAudioUnitProperty_InputSamplesInOutput = 49,
 kAudioUnitProperty_ShouldAllocateBuffer = 51,
 kAudioUnitProperty_FrequencyResponse = 52,
 kAudioUnitProperty_ParameterHistoryInfo = 53,
 kAudioUnitProperty_NickName = 54,
    kAudioUnitProperty_OfflineRender = 37,
 kAudioUnitProperty_ParameterIDName = 34,
 kAudioUnitProperty_ParameterStringFromValue = 33,
 kAudioUnitProperty_ParameterClumpName = 35,
 kAudioUnitProperty_ParameterValueFromString = 38,
 kAudioUnitProperty_ContextName = 25,
 kAudioUnitProperty_PresentationLatency = 40,
 kAudioUnitProperty_ClassInfoFromDocument = 50,
 kAudioUnitProperty_RequestViewController = 56,
 kAudioUnitProperty_ParametersForOverview = 57,
 kAudioUnitProperty_SupportsMPE = 58,
 kAudioUnitProperty_MIDIOutputCallbackInfo = 47,
 kAudioUnitProperty_MIDIOutputCallback = 48,
};
enum
{
 kAudioUnitProperty_RemoteControlEventListener = 100,
 kAudioUnitProperty_IsInterAppConnected = 101,
 kAudioUnitProperty_PeerURL = 102
};
typedef struct AudioUnitConnection {
 AudioUnit _Nullable sourceAudioUnit;
 UInt32 sourceOutputNumber;
 UInt32 destInputNumber;
} AudioUnitConnection;





typedef struct AUChannelInfo {
 SInt16 inChannels;
 SInt16 outChannels;
} AUChannelInfo;





typedef struct AudioUnitExternalBuffer {
 Byte * buffer;
 UInt32 size;
} AudioUnitExternalBuffer;





typedef struct AURenderCallbackStruct {
 AURenderCallback _Nullable inputProc;
 void * _Nullable inputProcRefCon;
} AURenderCallbackStruct;
typedef struct AUPreset {
 SInt32 presetNumber;
 CFStringRef _Nullable presetName;
} AUPreset;







enum {
 kRenderQuality_Max = 127,
 kRenderQuality_High = 96,
 kRenderQuality_Medium = 64,
 kRenderQuality_Low = 32,
 kRenderQuality_Min = 0
};
enum {
 kNumberOfResponseFrequencies = 1024
};
typedef struct AudioUnitFrequencyResponseBin
{
 Float64 mFrequency;
 Float64 mMagnitude;
} AudioUnitFrequencyResponseBin;
typedef OSStatus (*HostCallback_GetBeatAndTempo)(void * _Nullable inHostUserData,
           Float64 * _Nullable outCurrentBeat,
           Float64 * _Nullable outCurrentTempo);
typedef OSStatus (*HostCallback_GetMusicalTimeLocation)(void * _Nullable inHostUserData,
            UInt32 * _Nullable outDeltaSampleOffsetToNextBeat,
            Float32 * _Nullable outTimeSig_Numerator,
            UInt32 * _Nullable outTimeSig_Denominator,
            Float64 * _Nullable outCurrentMeasureDownBeat);
typedef OSStatus (*HostCallback_GetTransportState)(void * _Nullable inHostUserData,
          Boolean * _Nullable outIsPlaying,
          Boolean * _Nullable outTransportStateChanged,
          Float64 * _Nullable outCurrentSampleInTimeLine,
          Boolean * _Nullable outIsCycling,
          Float64 * _Nullable outCycleStartBeat,
          Float64 * _Nullable outCycleEndBeat);
typedef OSStatus (*HostCallback_GetTransportState2)(void * _Nullable inHostUserData,
          Boolean * _Nullable outIsPlaying,
          Boolean * _Nullable outIsRecording,
          Boolean * _Nullable outTransportStateChanged,
          Float64 * _Nullable outCurrentSampleInTimeLine,
          Boolean * _Nullable outIsCycling,
          Float64 * _Nullable outCycleStartBeat,
          Float64 * _Nullable outCycleEndBeat);







typedef struct HostCallbackInfo {
 void * _Nullable hostUserData;
 HostCallback_GetBeatAndTempo _Nullable beatAndTempoProc;
    HostCallback_GetMusicalTimeLocation _Nullable musicalTimeLocationProc;
 HostCallback_GetTransportState _Nullable transportStateProc;
 HostCallback_GetTransportState2 _Nullable transportStateProc2;
} HostCallbackInfo;






typedef struct AUDependentParameter {
 AudioUnitScope mScope;
 AudioUnitParameterID mParameterID;
} AUDependentParameter;
struct MIDIPacketList;





typedef OSStatus
(*AUMIDIOutputCallback)(void * _Nullable userData,
      const AudioTimeStamp * timeStamp,
      UInt32 midiOutNum,
      const struct MIDIPacketList * pktlist);






typedef struct AUMIDIOutputCallbackStruct {
 AUMIDIOutputCallback midiOutputCallback;
 void * _Nullable userData;
} AUMIDIOutputCallbackStruct;






typedef struct AUInputSamplesInOutputCallbackStruct {
 AUInputSamplesInOutputCallback inputToOutputCallback;
 void * _Nullable userData;
} AUInputSamplesInOutputCallbackStruct;
typedef struct AudioUnitParameterHistoryInfo
{
 Float32 updatesPerSecond;
 Float32 historyDurationInSeconds;
} AudioUnitParameterHistoryInfo;
typedef UInt32 AudioUnitParameterUnit; enum
{
 kAudioUnitParameterUnit_Generic = 0,
 kAudioUnitParameterUnit_Indexed = 1,
 kAudioUnitParameterUnit_Boolean = 2,
 kAudioUnitParameterUnit_Percent = 3,
 kAudioUnitParameterUnit_Seconds = 4,
 kAudioUnitParameterUnit_SampleFrames = 5,
 kAudioUnitParameterUnit_Phase = 6,
 kAudioUnitParameterUnit_Rate = 7,
 kAudioUnitParameterUnit_Hertz = 8,
 kAudioUnitParameterUnit_Cents = 9,
 kAudioUnitParameterUnit_RelativeSemiTones = 10,
 kAudioUnitParameterUnit_MIDINoteNumber = 11,
 kAudioUnitParameterUnit_MIDIController = 12,
 kAudioUnitParameterUnit_Decibels = 13,
 kAudioUnitParameterUnit_LinearGain = 14,
 kAudioUnitParameterUnit_Degrees = 15,
 kAudioUnitParameterUnit_EqualPowerCrossfade = 16,
 kAudioUnitParameterUnit_MixerFaderCurve1 = 17,
 kAudioUnitParameterUnit_Pan = 18,
 kAudioUnitParameterUnit_Meters = 19,
 kAudioUnitParameterUnit_AbsoluteCents = 20,
 kAudioUnitParameterUnit_Octaves = 21,
 kAudioUnitParameterUnit_BPM = 22,
    kAudioUnitParameterUnit_Beats = 23,
 kAudioUnitParameterUnit_Milliseconds = 24,
 kAudioUnitParameterUnit_Ratio = 25,
 kAudioUnitParameterUnit_CustomUnit = 26
};
typedef UInt32 AudioUnitParameterOptions; enum
{
 kAudioUnitParameterFlag_CFNameRelease = (1UL << 4),

 kAudioUnitParameterFlag_OmitFromPresets = (1UL << 13),
 kAudioUnitParameterFlag_PlotHistory = (1UL << 14),
 kAudioUnitParameterFlag_MeterReadOnly = (1UL << 15),


 kAudioUnitParameterFlag_DisplayMask = (7UL << 16) | (1UL << 22),
 kAudioUnitParameterFlag_DisplaySquareRoot = (1UL << 16),
 kAudioUnitParameterFlag_DisplaySquared = (2UL << 16),
 kAudioUnitParameterFlag_DisplayCubed = (3UL << 16),
 kAudioUnitParameterFlag_DisplayCubeRoot = (4UL << 16),
 kAudioUnitParameterFlag_DisplayExponential = (5UL << 16),

 kAudioUnitParameterFlag_HasClump = (1UL << 20),
 kAudioUnitParameterFlag_ValuesHaveStrings = (1UL << 21),

 kAudioUnitParameterFlag_DisplayLogarithmic = (1UL << 22),

 kAudioUnitParameterFlag_IsHighResolution = (1UL << 23),
 kAudioUnitParameterFlag_NonRealTime = (1UL << 24),
 kAudioUnitParameterFlag_CanRamp = (1UL << 25),
 kAudioUnitParameterFlag_ExpertMode = (1UL << 26),
 kAudioUnitParameterFlag_HasCFNameString = (1UL << 27),
 kAudioUnitParameterFlag_IsGlobalMeta = (1UL << 28),
 kAudioUnitParameterFlag_IsElementMeta = (1UL << 29),
 kAudioUnitParameterFlag_IsReadable = (1UL << 30),
 kAudioUnitParameterFlag_IsWritable = (1UL << 31)
};
typedef struct AudioUnitParameterInfo
{
 char name[52];
 CFStringRef _Nullable unitName;
 UInt32 clumpID;
 CFStringRef _Nullable cfNameString;
 AudioUnitParameterUnit unit;
 AudioUnitParameterValue minValue;
 AudioUnitParameterValue maxValue;
 AudioUnitParameterValue defaultValue;
 AudioUnitParameterOptions flags;
} AudioUnitParameterInfo;





enum {
 kAudioUnitClumpID_System = 0
};



static __inline__ __attribute__((always_inline)) AudioUnitParameterOptions GetAudioUnitParameterDisplayType(AudioUnitParameterOptions flags)
{
 return flags & kAudioUnitParameterFlag_DisplayMask;
}

static __inline__ __attribute__((always_inline)) AudioUnitParameterOptions SetAudioUnitParameterDisplayType(AudioUnitParameterOptions flags, AudioUnitParameterOptions displayType)
{
 return (flags & ~kAudioUnitParameterFlag_DisplayMask) | displayType;
}
enum {
 kAudioUnitParameterName_Full = -1
};





typedef struct AudioUnitParameterNameInfo {
 AudioUnitParameterID inID;
 SInt32 inDesiredLength;
 CFStringRef _Nullable outName;
} AudioUnitParameterIDName;





typedef struct AudioUnitParameterStringFromValue {
 AudioUnitParameterID inParamID;
 const AudioUnitParameterValue * inValue;
 CFStringRef _Nullable outString;
} AudioUnitParameterStringFromValue;





typedef struct AudioUnitParameterValueFromString {
 AudioUnitParameterID inParamID;
 CFStringRef inString;
 AudioUnitParameterValue outValue;
} AudioUnitParameterValueFromString;







typedef UInt32 AudioUnitRemoteControlEvent; enum {
 kAudioUnitRemoteControlEvent_TogglePlayPause = 1,
 kAudioUnitRemoteControlEvent_ToggleRecord = 2,
 kAudioUnitRemoteControlEvent_Rewind = 3
};




typedef void (*AudioUnitRemoteControlEventListener)(AudioUnitRemoteControlEvent event);
enum {

 kAudioOutputUnitProperty_IsRunning = 2001
};
enum {
 kAudioUnitProperty_SampleRateConverterComplexity = 3014
};
enum {
 kAudioUnitSampleRateConverterComplexity_Linear = 'line',
 kAudioUnitSampleRateConverterComplexity_Normal = 'norm',
 kAudioUnitSampleRateConverterComplexity_Mastering = 'bats'
};
enum {
 kAudioOutputUnitProperty_CurrentDevice = 2000,
 kAudioOutputUnitProperty_ChannelMap = 2002,
 kAudioOutputUnitProperty_EnableIO = 2003,
 kAudioOutputUnitProperty_StartTime = 2004,
 kAudioOutputUnitProperty_SetInputCallback = 2005,
 kAudioOutputUnitProperty_HasIO = 2006,
 kAudioOutputUnitProperty_StartTimestampsAtZero = 2007
};
enum {
 kAudioOutputUnitProperty_MIDICallbacks = 2010,
 kAudioOutputUnitProperty_HostReceivesRemoteControlEvents
             = 2011,
 kAudioOutputUnitProperty_RemoteControlToHost = 2012,
 kAudioOutputUnitProperty_HostTransportState = 2013,
 kAudioOutputUnitProperty_NodeComponentDescription = 2014
};
typedef struct {
 void * _Nullable userData;


 void (*MIDIEventProc)(void * _Nullable userData, UInt32 inStatus, UInt32 inData1, UInt32 inData2, UInt32 inOffsetSampleFrame);
 void (*MIDISysExProc)(void * _Nullable userData, const UInt8 *inData, UInt32 inLength);
} AudioOutputUnitMIDICallbacks;





typedef struct AudioOutputUnitStartAtTimeParams {

 AudioTimeStamp mTimestamp;
 UInt32 mFlags;
} AudioOutputUnitStartAtTimeParams;
enum {
 kAUVoiceIOProperty_BypassVoiceProcessing = 2100,
 kAUVoiceIOProperty_VoiceProcessingEnableAGC = 2101,
 kAUVoiceIOProperty_MuteOutput = 2104

};
enum {
 kAUVoiceIOProperty_DuckNonVoiceAudio = 2102
} __attribute__((availability(ios,introduced=3.0,deprecated=7.0)));
enum {
 kAUVoiceIOProperty_VoiceProcessingQuality = 2103
} __attribute__((availability(ios,introduced=3.0,deprecated=7.0)));
enum {
 kAUNBandEQProperty_NumberOfBands = 2200,
 kAUNBandEQProperty_MaxNumberOfBands = 2201,
 kAUNBandEQProperty_BiquadCoefficients = 2203
};
enum {

 kAudioUnitProperty_MeteringMode = 3007,


 kAudioUnitProperty_MatrixLevels = 3006,
 kAudioUnitProperty_MatrixDimensions = 3009,
 kAudioUnitProperty_MeterClipping = 3011,


 kAudioUnitProperty_InputAnchorTimeStamp = 3016
};
typedef struct AudioUnitMeterClipping
{
 Float32 peakValueSinceLastCall;
 Boolean sawInfinity;
 Boolean sawNotANumber;
} AudioUnitMeterClipping;
enum {
 kAudioUnitProperty_ReverbRoomType = 10,
 kAudioUnitProperty_UsesInternalReverb = 1005,
 kAudioUnitProperty_SpatializationAlgorithm = 3000,
 kAudioUnitProperty_SpatialMixerDistanceParams = 3010,
 kAudioUnitProperty_SpatialMixerAttenuationCurve = 3013,
 kAudioUnitProperty_SpatialMixerRenderingFlags = 3003,
};




typedef UInt32 AUSpatializationAlgorithm; enum {
 kSpatializationAlgorithm_EqualPowerPanning = 0,
 kSpatializationAlgorithm_SphericalHead = 1,
 kSpatializationAlgorithm_HRTF = 2,
 kSpatializationAlgorithm_SoundField = 3,
 kSpatializationAlgorithm_VectorBasedPanning = 4,
 kSpatializationAlgorithm_StereoPassThrough = 5,
    kSpatializationAlgorithm_HRTFHQ = 6
};






typedef UInt32 AUReverbRoomType; enum {
 kReverbRoomType_SmallRoom = 0,
 kReverbRoomType_MediumRoom = 1,
 kReverbRoomType_LargeRoom = 2,
 kReverbRoomType_MediumHall = 3,
 kReverbRoomType_LargeHall = 4,
 kReverbRoomType_Plate = 5,
 kReverbRoomType_MediumChamber = 6,
 kReverbRoomType_LargeChamber = 7,
 kReverbRoomType_Cathedral = 8,
 kReverbRoomType_LargeRoom2 = 9,
 kReverbRoomType_MediumHall2 = 10,
 kReverbRoomType_MediumHall3 = 11,
 kReverbRoomType_LargeHall2 = 12
};




typedef UInt32 AUSpatialMixerAttenuationCurve; enum {
 kSpatialMixerAttenuationCurve_Power = 0,
    kSpatialMixerAttenuationCurve_Exponential = 1,
    kSpatialMixerAttenuationCurve_Inverse = 2,
    kSpatialMixerAttenuationCurve_Linear = 3
};




typedef struct MixerDistanceParams {
 Float32 mReferenceDistance;
 Float32 mMaxDistance;
 Float32 mMaxAttenuation;
} MixerDistanceParams;




typedef UInt32 AUSpatialMixerRenderingFlags; enum {
 kSpatialMixerRenderingFlags_InterAuralDelay = (1L << 0),
 kSpatialMixerRenderingFlags_DistanceAttenuation = (1L << 2),
};
enum {
 kAudioUnitProperty_3DMixerDistanceParams = 3010,
 kAudioUnitProperty_3DMixerAttenuationCurve = 3013,
 kAudioUnitProperty_DopplerShift = 3002,
 kAudioUnitProperty_3DMixerRenderingFlags = 3003,
 kAudioUnitProperty_3DMixerDistanceAtten = 3004,
 kAudioUnitProperty_ReverbPreset = 3012
} __attribute__((availability(ios,introduced=3.0,deprecated=9.0)));




typedef UInt32 AU3DMixerRenderingFlags; enum {
 k3DMixerRenderingFlags_InterAuralDelay = (1L << 0),
 k3DMixerRenderingFlags_DopplerShift = (1L << 1),
 k3DMixerRenderingFlags_DistanceAttenuation = (1L << 2),
 k3DMixerRenderingFlags_DistanceFilter = (1L << 3),
 k3DMixerRenderingFlags_DistanceDiffusion = (1L << 4),
 k3DMixerRenderingFlags_LinearDistanceAttenuation = (1L << 5),
 k3DMixerRenderingFlags_ConstantReverbBlend = (1L << 6)
};




typedef UInt32 AU3DMixerAttenuationCurve; enum {
 k3DMixerAttenuationCurve_Power = 0,
    k3DMixerAttenuationCurve_Exponential = 1,
    k3DMixerAttenuationCurve_Inverse = 2,
    k3DMixerAttenuationCurve_Linear = 3
};
enum {
 kAudioUnitProperty_ScheduleAudioSlice = 3300,
 kAudioUnitProperty_ScheduleStartTimeStamp = 3301,
 kAudioUnitProperty_CurrentPlayTime = 3302
};
typedef UInt32 AUScheduledAudioSliceFlags; enum {
    kScheduledAudioSliceFlag_Complete = 0x01,
    kScheduledAudioSliceFlag_BeganToRender = 0x02,
    kScheduledAudioSliceFlag_BeganToRenderLate = 0x04,

    kScheduledAudioSliceFlag_Loop = 0x08,
    kScheduledAudioSliceFlag_Interrupt = 0x10,
    kScheduledAudioSliceFlag_InterruptAtLoop = 0x20
};

typedef struct ScheduledAudioSlice ScheduledAudioSlice;



typedef void (*ScheduledAudioSliceCompletionProc)(void * _Nullable userData, ScheduledAudioSlice *bufferList);
struct ScheduledAudioSlice {
 AudioTimeStamp mTimeStamp;
 ScheduledAudioSliceCompletionProc _Nullable mCompletionProc;
 void * mCompletionProcUserData;
 AUScheduledAudioSliceFlags mFlags;
 UInt32 mReserved;
 void * _Nullable mReserved2;
 UInt32 mNumberFrames;
 AudioBufferList * mBufferList;
};
enum {
 kAudioUnitProperty_ScheduledFileIDs = 3310,
 kAudioUnitProperty_ScheduledFileRegion = 3311,
 kAudioUnitProperty_ScheduledFilePrime = 3312,
 kAudioUnitProperty_ScheduledFileBufferSizeFrames = 3313,
 kAudioUnitProperty_ScheduledFileNumberBuffers = 3314
};

typedef struct ScheduledAudioFileRegion ScheduledAudioFileRegion;



typedef void (*ScheduledAudioFileRegionCompletionProc)(void * _Nullable userData,
    ScheduledAudioFileRegion *fileRegion, OSStatus result);
struct ScheduledAudioFileRegion {
 AudioTimeStamp mTimeStamp;
 ScheduledAudioFileRegionCompletionProc _Nullable mCompletionProc;
 void * _Nullable mCompletionProcUserData;
 struct OpaqueAudioFileID * mAudioFile;
 UInt32 mLoopCount;
 SInt64 mStartFrame;
 UInt32 mFramesToPlay;
};
enum {
 kMusicDeviceProperty_InstrumentName = 1001,
 kMusicDeviceProperty_InstrumentNumber = 1004
};
enum {
 kMusicDeviceProperty_InstrumentCount = 1000,
 kMusicDeviceProperty_BankName = 1007,
 kMusicDeviceProperty_SoundBankURL = 1100
};
enum {
 kAUMIDISynthProperty_EnablePreload = 4119
};
enum {

 kAUSamplerProperty_LoadInstrument = 4102,
 kAUSamplerProperty_LoadAudioFiles = 4101
};
typedef struct AUSamplerInstrumentData {
 CFURLRef fileURL;
 UInt8 instrumentType;
 UInt8 bankMSB;
 UInt8 bankLSB;
 UInt8 presetID;
} AUSamplerInstrumentData;
enum
{
 kInstrumentType_DLSPreset = 1,
 kInstrumentType_SF2Preset = kInstrumentType_DLSPreset,
 kInstrumentType_AUPreset = 2,
 kInstrumentType_Audiofile = 3,
 kInstrumentType_EXS24 = 4
};

enum
{
 kAUSampler_DefaultPercussionBankMSB = 0x78,
 kAUSampler_DefaultMelodicBankMSB = 0x79,
 kAUSampler_DefaultBankLSB = 0x00
};
enum {
 kAudioUnitProperty_DeferredRendererPullSize = 3320,
 kAudioUnitProperty_DeferredRendererExtraLatency = 3321,
 kAudioUnitProperty_DeferredRendererWaitFrames = 3322
};
typedef struct AUSamplerBankPresetData {
 CFURLRef bankURL;
 UInt8 bankMSB;
 UInt8 bankLSB;
 UInt8 presetID;
 UInt8 reserved;
} AUSamplerBankPresetData;

enum {
 kAUSamplerProperty_LoadPresetFromBank = 4100,
 kAUSamplerProperty_BankAndPreset = kAUSamplerProperty_LoadPresetFromBank
};
#pragma clang assume_nonnull end
enum {
 kAUGroupParameterID_Volume = 7,
 kAUGroupParameterID_Sustain = 64,
 kAUGroupParameterID_Sostenuto = 66,
 kAUGroupParameterID_AllNotesOff = 123,
 kAUGroupParameterID_ModWheel = 1,
 kAUGroupParameterID_PitchBend = 0xE0,
 kAUGroupParameterID_AllSoundOff = 120,
 kAUGroupParameterID_ResetAllControllers = 121,
 kAUGroupParameterID_Pan = 10,
 kAUGroupParameterID_Foot = 4,
 kAUGroupParameterID_ChannelPressure = 0xD0,
 kAUGroupParameterID_KeyPressure = 0xA0,
 kAUGroupParameterID_Expression = 11,
 kAUGroupParameterID_DataEntry = 6,

 kAUGroupParameterID_Volume_LSB = kAUGroupParameterID_Volume + 32,
 kAUGroupParameterID_ModWheel_LSB = kAUGroupParameterID_ModWheel + 32,
 kAUGroupParameterID_Pan_LSB = kAUGroupParameterID_Pan + 32,
 kAUGroupParameterID_Foot_LSB = kAUGroupParameterID_Foot + 32,
 kAUGroupParameterID_Expression_LSB = kAUGroupParameterID_Expression + 32,
 kAUGroupParameterID_DataEntry_LSB = kAUGroupParameterID_DataEntry + 32,

 kAUGroupParameterID_KeyPressure_FirstKey = 256,
 kAUGroupParameterID_KeyPressure_LastKey = 383
};
enum {

    kSpatialMixerParam_Azimuth = 0,


    kSpatialMixerParam_Elevation = 1,


    kSpatialMixerParam_Distance = 2,


    kSpatialMixerParam_Gain = 3,


    kSpatialMixerParam_PlaybackRate = 4,


    kSpatialMixerParam_Enable = 5,


    kSpatialMixerParam_MinGain = 6,


    kSpatialMixerParam_MaxGain = 7,


    kSpatialMixerParam_ReverbBlend = 8,


    kSpatialMixerParam_GlobalReverbGain = 9,




    kSpatialMixerParam_OcclusionAttenuation = 10,




    kSpatialMixerParam_ObstructionAttenuation = 11
};


enum {

 kReverbParam_FilterFrequency = 14,


 kReverbParam_FilterBandwidth = 15,


 kReverbParam_FilterGain = 16,


    kReverbParam_FilterType = 17,


    kReverbParam_FilterEnable = 18
};



enum {

    k3DMixerParam_Azimuth = 0,


    k3DMixerParam_Elevation = 1,


    k3DMixerParam_Distance = 2,


    k3DMixerParam_Gain = 3,


    k3DMixerParam_PlaybackRate = 4,





    k3DMixerParam_Enable = 5,


    k3DMixerParam_MinGain = 6,


    k3DMixerParam_MaxGain = 7,


    k3DMixerParam_ReverbBlend = 8,


    k3DMixerParam_GlobalReverbGain = 9,




    k3DMixerParam_OcclusionAttenuation = 10,




    k3DMixerParam_ObstructionAttenuation = 11
};




enum {

 kMultiChannelMixerParam_Volume = 0,

 kMultiChannelMixerParam_Enable = 1,

 kMultiChannelMixerParam_Pan = 2,





 kMultiChannelMixerParam_PreAveragePower = 1000,
 kMultiChannelMixerParam_PrePeakHoldLevel = 2000,
 kMultiChannelMixerParam_PostAveragePower = 3000,
 kMultiChannelMixerParam_PostPeakHoldLevel = 4000
};



enum {
 kMatrixMixerParam_Volume = 0,
 kMatrixMixerParam_Enable = 1,



 kMatrixMixerParam_PreAveragePower = 1000,
 kMatrixMixerParam_PrePeakHoldLevel = 2000,
 kMatrixMixerParam_PostAveragePower = 3000,
 kMatrixMixerParam_PostPeakHoldLevel = 4000,


 kMatrixMixerParam_PreAveragePowerLinear = 5000,
 kMatrixMixerParam_PrePeakHoldLevelLinear = 6000,
 kMatrixMixerParam_PostAveragePowerLinear = 7000,
 kMatrixMixerParam_PostPeakHoldLevelLinear = 8000
};




enum {

 kHALOutputParam_Volume = 14
};


enum {
 kTimePitchParam_Rate = 0,




};


enum {


 kNewTimePitchParam_Rate = 0,



 kNewTimePitchParam_Pitch = 1,





 kNewTimePitchParam_Overlap = 4,






 kNewTimePitchParam_EnablePeakLocking = 6
};


enum {

 kAUSamplerParam_Gain = 900,


 kAUSamplerParam_CoarseTuning = 901,


 kAUSamplerParam_FineTuning = 902,


 kAUSamplerParam_Pan = 903
};







enum {

 kBandpassParam_CenterFrequency = 0,


 kBandpassParam_Bandwidth = 1
};


enum {

 kHipassParam_CutoffFrequency = 0,


 kHipassParam_Resonance = 1
};


enum {

 kLowPassParam_CutoffFrequency = 0,


 kLowPassParam_Resonance = 1
};


enum {

 kHighShelfParam_CutOffFrequency = 0,


 kHighShelfParam_Gain = 1
};


enum {

 kAULowShelfParam_CutoffFrequency = 0,


 kAULowShelfParam_Gain = 1
};


enum {

    kParametricEQParam_CenterFreq = 0,


    kParametricEQParam_Q = 1,


    kParametricEQParam_Gain = 2
};


enum {

 kLimiterParam_AttackTime = 0,


 kLimiterParam_DecayTime = 1,


 kLimiterParam_PreGain = 2
};







enum {

 kDynamicsProcessorParam_Threshold = 0,


 kDynamicsProcessorParam_HeadRoom = 1,


 kDynamicsProcessorParam_ExpansionRatio = 2,


 kDynamicsProcessorParam_ExpansionThreshold = 3,


 kDynamicsProcessorParam_AttackTime = 4,


 kDynamicsProcessorParam_ReleaseTime = 5,


 kDynamicsProcessorParam_MasterGain = 6,


 kDynamicsProcessorParam_CompressionAmount = 1000,
 kDynamicsProcessorParam_InputAmplitude = 2000,
 kDynamicsProcessorParam_OutputAmplitude = 3000
};



enum {

 kVarispeedParam_PlaybackRate = 0,

 kVarispeedParam_PlaybackCents = 1
};



enum {

 kDistortionParam_Delay = 0,

 kDistortionParam_Decay = 1,

 kDistortionParam_DelayMix = 2,


 kDistortionParam_Decimation = 3,

 kDistortionParam_Rounding = 4,

 kDistortionParam_DecimationMix = 5,


 kDistortionParam_LinearTerm = 6,

 kDistortionParam_SquaredTerm = 7,

 kDistortionParam_CubicTerm = 8,

 kDistortionParam_PolynomialMix = 9,


 kDistortionParam_RingModFreq1 = 10,

 kDistortionParam_RingModFreq2 = 11,

 kDistortionParam_RingModBalance = 12,

 kDistortionParam_RingModMix = 13,


 kDistortionParam_SoftClipGain = 14,


 kDistortionParam_FinalMix = 15
};


enum {

 kDelayParam_WetDryMix = 0,


 kDelayParam_DelayTime = 1,


 kDelayParam_Feedback = 2,


 kDelayParam_LopassCutoff = 3
};
enum {

 kAUNBandEQParam_GlobalGain = 0,


 kAUNBandEQParam_BypassBand = 1000,


 kAUNBandEQParam_FilterType = 2000,


 kAUNBandEQParam_Frequency = 3000,


 kAUNBandEQParam_Gain = 4000,


 kAUNBandEQParam_Bandwidth = 5000
};
enum {
 kAUNBandEQFilterType_Parametric = 0,
 kAUNBandEQFilterType_2ndOrderButterworthLowPass = 1,
 kAUNBandEQFilterType_2ndOrderButterworthHighPass = 2,
 kAUNBandEQFilterType_ResonantLowPass = 3,
 kAUNBandEQFilterType_ResonantHighPass = 4,
 kAUNBandEQFilterType_BandPass = 5,
 kAUNBandEQFilterType_BandStop = 6,
 kAUNBandEQFilterType_LowShelf = 7,
 kAUNBandEQFilterType_HighShelf = 8,
 kAUNBandEQFilterType_ResonantLowShelf = 9,
 kAUNBandEQFilterType_ResonantHighShelf = 10,

 kNumAUNBandEQFilterTypes = 11
};



enum {

 kRoundTripAACParam_Format = 0,


 kRoundTripAACParam_EncodingStrategy = 1,


 kRoundTripAACParam_RateOrQuality = 2,







};
enum {
 kRandomParam_BoundA = 0,
 kRandomParam_BoundB = 1,
 kRandomParam_Curve = 2
};






enum {

 kReverb2Param_DryWetMix = 0,

 kReverb2Param_Gain = 1,


 kReverb2Param_MinDelayTime = 2,

 kReverb2Param_MaxDelayTime = 3,

 kReverb2Param_DecayTimeAt0Hz = 4,

 kReverb2Param_DecayTimeAtNyquist = 5,

 kReverb2Param_RandomizeReflections = 6,
};
#pragma clang assume_nonnull begin


extern "C" {
typedef UInt32 MusicDeviceInstrumentID;
struct MusicDeviceStdNoteParams
{
 UInt32 argCount;
 Float32 mPitch;
 Float32 mVelocity;
};
typedef struct MusicDeviceStdNoteParams MusicDeviceStdNoteParams;
struct NoteParamsControlValue
{
 AudioUnitParameterID mID;
 AudioUnitParameterValue mValue;
};
typedef struct NoteParamsControlValue NoteParamsControlValue;
struct MusicDeviceNoteParams
{
 UInt32 argCount;
 Float32 mPitch;
 Float32 mVelocity;
 NoteParamsControlValue mControls[1];
};
typedef struct MusicDeviceNoteParams MusicDeviceNoteParams;
enum {
 kMusicNoteEvent_UseGroupInstrument = 0xFFFFFFFF,
 kMusicNoteEvent_Unused = 0xFFFFFFFF
};






typedef UInt32 MusicDeviceGroupID;
typedef UInt32 NoteInstanceID;





typedef AudioComponentInstance MusicDeviceComponent;
extern OSStatus
MusicDeviceMIDIEvent( MusicDeviceComponent inUnit,
      UInt32 inStatus,
      UInt32 inData1,
      UInt32 inData2,
      UInt32 inOffsetSampleFrame) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicDeviceSysEx( MusicDeviceComponent inUnit,
      const UInt8 * inData,
      UInt32 inLength) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicDeviceStartNote( MusicDeviceComponent inUnit,
      MusicDeviceInstrumentID inInstrument,
      MusicDeviceGroupID inGroupID,
      NoteInstanceID * outNoteInstanceID,
      UInt32 inOffsetSampleFrame,
      const MusicDeviceNoteParams * inParams) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicDeviceStopNote( MusicDeviceComponent inUnit,
      MusicDeviceGroupID inGroupID,
      NoteInstanceID inNoteInstanceID,
      UInt32 inOffsetSampleFrame) __attribute__((availability(ios,introduced=5.0)));
enum {
  kMusicDeviceRange = 0x0100,
  kMusicDeviceMIDIEventSelect = 0x0101,
  kMusicDeviceSysExSelect = 0x0102,
  kMusicDevicePrepareInstrumentSelect = 0x0103,
  kMusicDeviceReleaseInstrumentSelect = 0x0104,
  kMusicDeviceStartNoteSelect = 0x0105,
  kMusicDeviceStopNoteSelect = 0x0106
};
typedef OSStatus
(*MusicDeviceMIDIEventProc)( void * self,
        UInt32 inStatus,
        UInt32 inData1,
        UInt32 inData2,
        UInt32 inOffsetSampleFrame);
typedef OSStatus
(*MusicDeviceSysExProc)( void * self,
       const UInt8 * inData,
       UInt32 inLength);
typedef OSStatus
(*MusicDeviceStartNoteProc)( void * self,
      MusicDeviceInstrumentID inInstrument,
      MusicDeviceGroupID inGroupID,
      NoteInstanceID * outNoteInstanceID,
      UInt32 inOffsetSampleFrame,
      const MusicDeviceNoteParams * inParams);
typedef OSStatus
(*MusicDeviceStopNoteProc)( void * self,
      MusicDeviceGroupID inGroupID,
      NoteInstanceID inNoteInstanceID,
      UInt32 inOffsetSampleFrame);
extern OSStatus
MusicDevicePrepareInstrument( MusicDeviceComponent inUnit,
        MusicDeviceInstrumentID inInstrument)
          __attribute__((availability(ios,unavailable)));


extern OSStatus
MusicDeviceReleaseInstrument( MusicDeviceComponent inUnit,
        MusicDeviceInstrumentID inInstrument)
          __attribute__((availability(ios,unavailable)));



}
#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin

// @class AUParameter;
#ifndef _REWRITER_typedef_AUParameter
#define _REWRITER_typedef_AUParameter
typedef struct objc_object AUParameter;
typedef struct {} _objc_exc_AUParameter;
#endif








typedef float AUValue;
typedef uint64_t AUParameterAddress;
typedef uint32_t AUParameterAutomationEventType; enum {
 AUParameterAutomationEventTypeValue = 0,
 AUParameterAutomationEventTypeTouch = 1,
 AUParameterAutomationEventTypeRelease = 2
};




typedef struct AURecordedParameterEvent {
 uint64_t hostTime;
 AUParameterAddress address;
 AUValue value;
} AURecordedParameterEvent;





typedef struct AUParameterAutomationEvent {
 uint64_t hostTime;
 AUParameterAddress address;
 AUValue value;
 AUParameterAutomationEventType eventType;
 uint64_t reserved;
} AUParameterAutomationEvent;
typedef void (*AUParameterObserver)(AUParameterAddress address, AUValue value);
typedef void (*AUParameterRecordingObserver)(NSInteger numberEvents, const AURecordedParameterEvent *events);
typedef void (*AUParameterAutomationObserver)(NSInteger numberEvents, const AUParameterAutomationEvent *events);





typedef void *AUParameterObserverToken;
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0)))

#ifndef _REWRITER_typedef_AUParameterNode
#define _REWRITER_typedef_AUParameterNode
typedef struct objc_object AUParameterNode;
typedef struct {} _objc_exc_AUParameterNode;
#endif

struct AUParameterNode_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};

// @property (nonatomic, readonly, copy) NSString *identifier;
// @property (nonatomic, readonly, copy) NSString *keyPath;




// @property (nonatomic, readonly, copy) NSString *displayName;






// - (NSString *)displayNameWithLength:(NSInteger)maximumLength;
// - (AUParameterObserverToken)tokenByAddingParameterObserver:(AUParameterObserver)observer;
// - (AUParameterObserverToken)tokenByAddingParameterRecordingObserver:(AUParameterRecordingObserver)observer;
// - (AUParameterObserverToken)tokenByAddingParameterAutomationObserver:(AUParameterAutomationObserver)observer __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
// - (void)removeParameterObserver:(AUParameterObserverToken)token;

/* @end */

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0)))

#ifndef _REWRITER_typedef_AUParameterGroup
#define _REWRITER_typedef_AUParameterGroup
typedef struct objc_object AUParameterGroup;
typedef struct {} _objc_exc_AUParameterGroup;
#endif

struct AUParameterGroup_IMPL {
	struct AUParameterNode_IMPL AUParameterNode_IVARS;
};



// @property (nonatomic, readonly) NSArray<AUParameterNode *> *children;


// @property (nonatomic, readonly) NSArray<AUParameter *> *allParameters;

/* @end */

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0)))

#ifndef _REWRITER_typedef_AUParameterTree
#define _REWRITER_typedef_AUParameterTree
typedef struct objc_object AUParameterTree;
typedef struct {} _objc_exc_AUParameterTree;
#endif

struct AUParameterTree_IMPL {
	struct AUParameterGroup_IMPL AUParameterGroup_IVARS;
};







// - (AUParameter *_Nullable)parameterWithAddress:(AUParameterAddress)address;
// - (AUParameter *_Nullable)parameterWithID:(AudioUnitParameterID)paramID scope:(AudioUnitScope)scope element:(AudioUnitElement)element;

/* @end */








__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0)))

#ifndef _REWRITER_typedef_AUParameter
#define _REWRITER_typedef_AUParameter
typedef struct objc_object AUParameter;
typedef struct {} _objc_exc_AUParameter;
#endif

struct AUParameter_IMPL {
	struct AUParameterNode_IMPL AUParameterNode_IVARS;
};



// @property (nonatomic, readonly) AUValue minValue;


// @property (nonatomic, readonly) AUValue maxValue;


// @property (nonatomic, readonly) AudioUnitParameterUnit unit;


// @property (nonatomic, readonly, copy, nullable) NSString *unitName;


// @property (nonatomic, readonly) AudioUnitParameterOptions flags;


// @property (nonatomic, readonly) AUParameterAddress address;



// @property (nonatomic, readonly, copy, nullable) NSArray<NSString *> *valueStrings;






// @property (nonatomic, readonly, copy, nullable) NSArray<NSNumber *> *dependentParameters;


// @property (nonatomic) AUValue value;


// - (void)setValue:(AUValue)value originator:(AUParameterObserverToken _Nullable)originator;


// - (void)setValue:(AUValue)value originator:(AUParameterObserverToken _Nullable)originator atHostTime:(uint64_t)hostTime;
// - (void)setValue:(AUValue)value originator:(AUParameterObserverToken _Nullable)originator atHostTime:(uint64_t)hostTime eventType:(AUParameterAutomationEventType)eventType __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));







// - (NSString *)stringFromValue:(const AUValue *_Nullable)value;






// - (AUValue)valueFromString:(NSString *)string;

/* @end */

#pragma clang assume_nonnull end







#pragma clang assume_nonnull begin


// @class AVAudioFormat;
#ifndef _REWRITER_typedef_AVAudioFormat
#define _REWRITER_typedef_AVAudioFormat
typedef struct objc_object AVAudioFormat;
typedef struct {} _objc_exc_AVAudioFormat;
#endif

// @class AUAudioUnitBusArray;
#ifndef _REWRITER_typedef_AUAudioUnitBusArray
#define _REWRITER_typedef_AUAudioUnitBusArray
typedef struct objc_object AUAudioUnitBusArray;
typedef struct {} _objc_exc_AUAudioUnitBusArray;
#endif

// @class AUAudioUnitBus;
#ifndef _REWRITER_typedef_AUAudioUnitBus
#define _REWRITER_typedef_AUAudioUnitBus
typedef struct objc_object AUAudioUnitBus;
typedef struct {} _objc_exc_AUAudioUnitBus;
#endif

// @class AUAudioUnitPreset;
#ifndef _REWRITER_typedef_AUAudioUnitPreset
#define _REWRITER_typedef_AUAudioUnitPreset
typedef struct objc_object AUAudioUnitPreset;
typedef struct {} _objc_exc_AUAudioUnitPreset;
#endif

// @protocol AUAudioUnitFactory;






typedef OSStatus AUAudioUnitStatus;







typedef int64_t AUEventSampleTime;
enum : AUEventSampleTime {
 AUEventSampleTimeImmediate = (AUEventSampleTime)0xffffffff00000000LL
};







typedef uint32_t AUAudioFrameCount;







typedef uint32_t AUAudioChannelCount;






typedef NSInteger AUAudioUnitBusType; enum {
 AUAudioUnitBusTypeInput = 1,
 AUAudioUnitBusTypeOutput = 2
};
typedef AUAudioUnitStatus (*AURenderPullInputBlock)(AudioUnitRenderActionFlags *actionFlags, const AudioTimeStamp *timestamp, AUAudioFrameCount frameCount, NSInteger inputBusNumber, AudioBufferList *inputData);
typedef AUAudioUnitStatus (*AURenderBlock)(AudioUnitRenderActionFlags *actionFlags, const AudioTimeStamp *timestamp, AUAudioFrameCount frameCount, NSInteger outputBusNumber, AudioBufferList *outputData, AURenderPullInputBlock _Nullable pullInputBlock);
typedef void (*AURenderObserver)(AudioUnitRenderActionFlags actionFlags, const AudioTimeStamp *timestamp, AUAudioFrameCount frameCount, NSInteger outputBusNumber);
typedef void (*AUScheduleParameterBlock)(AUEventSampleTime eventSampleTime, AUAudioFrameCount rampDurationSampleFrames, AUParameterAddress parameterAddress, AUValue value);
typedef void (*AUScheduleMIDIEventBlock)(AUEventSampleTime eventSampleTime, uint8_t cable, NSInteger length, const uint8_t *midiBytes);
typedef OSStatus (*AUMIDIOutputEventBlock)(AUEventSampleTime eventSampleTime, uint8_t cable, NSInteger length, const uint8_t *midiBytes);
typedef BOOL (*AUHostMusicalContextBlock)(double * _Nullable currentTempo, double * _Nullable timeSignatureNumerator, NSInteger * _Nullable timeSignatureDenominator, double * _Nullable currentBeatPosition, NSInteger * _Nullable sampleOffsetToNextBeat, double * _Nullable currentMeasureDownbeatPosition);
typedef NSUInteger AUHostTransportStateFlags; enum {
 AUHostTransportStateChanged = 1,
 AUHostTransportStateMoving = 2,
 AUHostTransportStateRecording = 4,
 AUHostTransportStateCycling = 8
};
typedef BOOL (*AUHostTransportStateBlock)(AUHostTransportStateFlags * _Nullable transportStateFlags, double * _Nullable currentSamplePosition, double * _Nullable cycleStartBeatPosition, double * _Nullable cycleEndBeatPosition);
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0)))

#ifndef _REWRITER_typedef_AUAudioUnit
#define _REWRITER_typedef_AUAudioUnit
typedef struct objc_object AUAudioUnit;
typedef struct {} _objc_exc_AUAudioUnit;
#endif

struct AUAudioUnit_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)init __attribute__((unavailable));
// - (nullable instancetype)initWithComponentDescription:(AudioComponentDescription)componentDescription options:(AudioComponentInstantiationOptions)options error:(NSError **)outError __attribute__((objc_designated_initializer));




// - (nullable instancetype)initWithComponentDescription:(AudioComponentDescription)componentDescription error:(NSError **)outError;
// + (void)instantiateWithComponentDescription:(AudioComponentDescription)componentDescription options:(AudioComponentInstantiationOptions)options completionHandler:(void (^)(AUAudioUnit * _Nullable audioUnit, NSError * _Nullable error))completionHandler;




// @property (nonatomic, readonly) AudioComponentDescription componentDescription;





// @property (nonatomic, readonly) AudioComponent component;
// @property (nonatomic, readonly, copy, nullable) NSString *componentName;




// @property (nonatomic, readonly, copy, nullable) NSString *audioUnitName;




// @property (nonatomic, readonly, copy, nullable) NSString *manufacturerName;
// @property (nonatomic, readonly, copy, nullable) NSString *audioUnitShortName __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));




// @property (nonatomic, readonly) uint32_t componentVersion;
// - (BOOL)allocateRenderResourcesAndReturnError:(NSError **)outError;
// - (void)deallocateRenderResources;




// @property (nonatomic, readonly) BOOL renderResourcesAllocated;
// - (void)reset;







// @property (nonatomic, readonly) AUAudioUnitBusArray *inputBusses;







// @property (nonatomic, readonly) AUAudioUnitBusArray *outputBusses;
// @property (nonatomic, readonly) AURenderBlock renderBlock;
// @property (nonatomic, readonly) AUScheduleParameterBlock scheduleParameterBlock;
// - (NSInteger)tokenByAddingRenderObserver:(AURenderObserver)observer;
// - (void)removeRenderObserver:(NSInteger)token;
// @property (nonatomic) AUAudioFrameCount maximumFramesToRender;
// @property (nonatomic, readonly, nullable) AUParameterTree *parameterTree;
// - (NSArray<NSNumber *> *)parametersForOverviewWithCount:(NSInteger)count;

// @property (nonatomic, readonly) BOOL allParameterValues;







// @property (nonatomic, readonly, getter=isMusicDeviceOrEffect) BOOL musicDeviceOrEffect;







// @property (nonatomic, readonly) NSInteger virtualMIDICableCount;
// @property (nonatomic, readonly, nullable) AUScheduleMIDIEventBlock scheduleMIDIEventBlock;
// @property (nonatomic, readonly, copy) NSArray<NSString *> *MIDIOutputNames __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
// @property (nonatomic, readonly) BOOL providesUserInterface __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
// @property (nonatomic, copy, nullable) AUMIDIOutputEventBlock MIDIOutputEventBlock __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
// @property (nonatomic, copy, nullable) NSDictionary<NSString *, id> *fullState;
// @property (nonatomic, copy, nullable) NSDictionary<NSString *, id> *fullStateForDocument;
// @property (nonatomic, readonly, copy, nullable) NSArray<AUAudioUnitPreset *> *factoryPresets;
// @property (nonatomic, retain, nullable) AUAudioUnitPreset *currentPreset;
// @property (nonatomic, readonly) NSTimeInterval latency;
// @property (nonatomic, readonly) NSTimeInterval tailTime;
// @property (nonatomic) NSInteger renderQuality;






// @property (nonatomic) BOOL shouldBypassEffect;
// @property (nonatomic, readonly) BOOL canProcessInPlace;
// @property (nonatomic, getter=isRenderingOffline) BOOL renderingOffline;
// @property (nonatomic, readonly, copy, nullable) NSArray<NSNumber *> *channelCapabilities;
// @property (nonatomic, copy, nullable) AUHostMusicalContextBlock musicalContextBlock;
// @property (nonatomic, copy, nullable) AUHostTransportStateBlock transportStateBlock;
// @property (nonatomic, copy, nullable) NSString *contextName;






// @property (nonatomic, readonly) BOOL supportsMPE __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
// @property (nonatomic, copy, nullable) NSArray<NSNumber *> *channelMap __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

/* @end */

typedef void (*AUInputHandler)(AudioUnitRenderActionFlags *actionFlags, const AudioTimeStamp *timestamp, AUAudioFrameCount frameCount, NSInteger inputBusNumber);




// @interface AUAudioUnit (AUAudioInputOutputUnit)




// @property (nonatomic, readonly) BOOL canPerformInput;




// @property (nonatomic, readonly) BOOL canPerformOutput;






// @property (nonatomic, getter=isInputEnabled) BOOL inputEnabled;






// @property (nonatomic, getter=isOutputEnabled) BOOL outputEnabled;





// @property (nonatomic, copy, nullable) AURenderPullInputBlock outputProvider;





// @property (nonatomic, copy, nullable) AUInputHandler inputHandler;
// @property (nonatomic, readonly, getter=isRunning) BOOL running __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));






// - (BOOL)startHardwareAndReturnError:(NSError **)outError;




// - (void)stopHardware;

/* @end */

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0)))

#ifndef _REWRITER_typedef_AUAudioUnitBusArray
#define _REWRITER_typedef_AUAudioUnitBusArray
typedef struct objc_object AUAudioUnitBusArray;
typedef struct {} _objc_exc_AUAudioUnitBusArray;
#endif

struct AUAudioUnitBusArray_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)init __attribute__((unavailable));




// - (instancetype)initWithAudioUnit:(AUAudioUnit *)owner busType:(AUAudioUnitBusType)busType busses:(NSArray <AUAudioUnitBus *> *)busArray __attribute__((objc_designated_initializer));




// - (instancetype)initWithAudioUnit:(AUAudioUnit *)owner busType:(AUAudioUnitBusType)busType;



// @property (nonatomic, readonly) NSUInteger count;



// - (AUAudioUnitBus *)objectAtIndexedSubscript:(NSUInteger)index;






// @property (nonatomic, readonly, getter=isCountChangeable) BOOL countChangeable;




// - (BOOL)setBusCount:(NSUInteger)count error:(NSError **)outError;




// - (void)addObserverToAllBusses:(NSObject *)observer forKeyPath:(NSString *)keyPath options:(NSKeyValueObservingOptions)options context:(void * _Nullable)context;




// - (void)removeObserverFromAllBusses:(NSObject *)observer forKeyPath:(NSString *)keyPath context:(void * _Nullable)context;


// @property (nonatomic, readonly, assign) AUAudioUnit *ownerAudioUnit;


// @property (nonatomic, readonly) AUAudioUnitBusType busType;

/* @end */







__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0)))

#ifndef _REWRITER_typedef_AUAudioUnitBus
#define _REWRITER_typedef_AUAudioUnitBus
typedef struct objc_object AUAudioUnitBus;
typedef struct {} _objc_exc_AUAudioUnitBus;
#endif

struct AUAudioUnitBus_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};







// @property (nonatomic, readonly) AVAudioFormat *format;
// - (BOOL)setFormat:(AVAudioFormat *)format error:(NSError **)outError;
// @property (nonatomic) BOOL shouldAllocateBuffer __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
// @property (nonatomic, getter=isEnabled) BOOL enabled;




// @property (nonatomic, copy, nullable) NSString *name;




// @property (nonatomic, readonly) NSUInteger index;




// @property (nonatomic, readonly) AUAudioUnitBusType busType;




// @property (nonatomic, readonly, assign) AUAudioUnit *ownerAudioUnit;





// @property (nonatomic, readonly, copy, nullable) NSArray<NSNumber *> *supportedChannelLayoutTags;
// @property (nonatomic) NSTimeInterval contextPresentationLatency;

/* @end */








__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0)))

#ifndef _REWRITER_typedef_AUAudioUnitPreset
#define _REWRITER_typedef_AUAudioUnitPreset
typedef struct objc_object AUAudioUnitPreset;
typedef struct {} _objc_exc_AUAudioUnitPreset;
#endif

struct AUAudioUnitPreset_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};





// @property (nonatomic) NSInteger number;




// @property (nonatomic, copy) NSString *name;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin


union AURenderEvent;





typedef uint8_t AURenderEventType; enum {
 AURenderEventParameter = 1,
 AURenderEventParameterRamp = 2,
 AURenderEventMIDI = 8,
 AURenderEventMIDISysEx = 9
};

#pragma pack(4)

typedef struct AURenderEventHeader {
 union AURenderEvent *_Nullable next;
 AUEventSampleTime eventSampleTime;
 AURenderEventType eventType;
 uint8_t reserved;
} AURenderEventHeader;


typedef struct AUParameterEvent {
 union AURenderEvent *_Nullable next;
 AUEventSampleTime eventSampleTime;
 AURenderEventType eventType;
 uint8_t reserved[3];
 AUAudioFrameCount rampDurationSampleFrames;


 AUParameterAddress parameterAddress;
 AUValue value;


} AUParameterEvent;


typedef struct AUMIDIEvent {
 union AURenderEvent *_Nullable next;
 AUEventSampleTime eventSampleTime;
 AURenderEventType eventType;
 uint8_t reserved;
 uint16_t length;


 uint8_t cable;
 uint8_t data[3];
} AUMIDIEvent;







typedef union AURenderEvent {
 AURenderEventHeader head;
 AUParameterEvent parameter;
 AUMIDIEvent MIDI;
} AURenderEvent;
#pragma pack()
typedef AUAudioUnitStatus (*AUInternalRenderBlock)(
 AudioUnitRenderActionFlags * actionFlags,
 const AudioTimeStamp * timestamp,
 AUAudioFrameCount frameCount,
 NSInteger outputBusNumber,
 AudioBufferList * outputData,
 const AURenderEvent *_Nullable realtimeEventListHead,
 AURenderPullInputBlock _Nullable pullInputBlock);




// @interface AUAudioUnit (AUAudioUnitImplementation)
// + (void)registerSubclass:(Class)cls asComponentDescription:(AudioComponentDescription)componentDescription name:(NSString *)name version:(UInt32)version;


// @property (nonatomic, readonly) AUInternalRenderBlock internalRenderBlock;
// @property (nonatomic) NSInteger MIDIOutputBufferSizeHint __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
// - (BOOL)shouldChangeToFormat:(AVAudioFormat *)format forBus:(AUAudioUnitBus *)bus;






// - (void)setRenderResourcesAllocated:(BOOL)flag;

/* @end */





// @interface AUAudioUnitBus (AUAudioUnitImplementation)






// - (nullable instancetype)initWithFormat:(AVAudioFormat *)format error:(NSError **)outError;
// @property (nonatomic, retain, nullable) NSArray<NSNumber *> *supportedChannelCounts;
// @property (nonatomic) AUAudioChannelCount maximumChannelCount;

/* @end */






// @interface AUAudioUnitBusArray (AUAudioUnitBusImplementation)


// - (void)replaceBusses:(NSArray <AUAudioUnitBus *> *)busArray;

/* @end */

// @interface AUParameterTree (Factory)



// + (AUParameter *)createParameterWithIdentifier:(NSString *)identifier name:(NSString *)name address:(AUParameterAddress)address min:(AUValue)min max:(AUValue)max unit:(AudioUnitParameterUnit)unit unitName:(NSString * _Nullable)unitName flags:(AudioUnitParameterOptions)flags valueStrings:(NSArray<NSString *> *_Nullable)valueStrings dependentParameters:(NSArray<NSNumber *> *_Nullable)dependentParameters;






// + (AUParameterGroup *)createGroupWithIdentifier:(NSString *)identifier name:(NSString *)name children:(NSArray<AUParameterNode *> *)children;
// + (AUParameterGroup *)createGroupTemplate:(NSArray<AUParameterNode *> *)children;
// + (AUParameterGroup *)createGroupFromTemplate:(AUParameterGroup *)templateGroup identifier:(NSString *)identifier name:(NSString *)name addressOffset:(AUParameterAddress)addressOffset;




// + (AUParameterTree *)createTreeWithChildren:(NSArray<AUParameterNode *> *)children;

/* @end */





typedef void (*AUImplementorValueObserver)(AUParameter *param, AUValue value);


typedef AUValue (*AUImplementorValueProvider)(AUParameter *param);


typedef NSString *_Nonnull (*AUImplementorStringFromValueCallback)(AUParameter *param, const AUValue *_Nullable value);


typedef AUValue (*AUImplementorValueFromStringCallback)(AUParameter *param, NSString *string);


typedef NSString *_Nonnull (*AUImplementorDisplayNameWithLengthCallback)(AUParameterNode *node, NSInteger desiredLength);


// @interface AUParameterNode (AUParameterNodeImplementation)






// @property (nonatomic, copy) AUImplementorValueObserver implementorValueObserver;







// @property (nonatomic, copy) AUImplementorValueProvider implementorValueProvider;



// @property (nonatomic, copy) AUImplementorStringFromValueCallback implementorStringFromValueCallback;


// @property (nonatomic, copy) AUImplementorValueFromStringCallback implementorValueFromStringCallback;


// @property (nonatomic, copy) AUImplementorDisplayNameWithLengthCallback implementorDisplayNameWithLengthCallback;
/* @end */

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0)))

#ifndef _REWRITER_typedef_AUAudioUnitV2Bridge
#define _REWRITER_typedef_AUAudioUnitV2Bridge
typedef struct objc_object AUAudioUnitV2Bridge;
typedef struct {} _objc_exc_AUAudioUnitV2Bridge;
#endif

struct AUAudioUnitV2Bridge_IMPL {
	struct AUAudioUnit_IMPL AUAudioUnit_IVARS;
};

/* @end */

// @protocol AUAudioUnitFactory <NSExtensionRequestHandling>
// - (nullable AUAudioUnit *)createAudioUnitWithComponentDescription:(AudioComponentDescription)desc error:(NSError **)error;
/* @end */

#pragma clang assume_nonnull end





#pragma clang assume_nonnull begin


extern "C"
{






typedef struct OpaqueAUGraph *AUGraph;





typedef SInt32 AUNode;
enum
{
 kAUGraphErr_NodeNotFound = -10860,
 kAUGraphErr_InvalidConnection = -10861,
 kAUGraphErr_OutputNodeErr = -10862,
 kAUGraphErr_CannotDoInCurrentContext = -10863,
 kAUGraphErr_InvalidAudioUnit = -10864
};
extern OSStatus
NewAUGraph( AUGraph _Nullable * _Nonnull outGraph) __attribute__((availability(ios,introduced=2.0)));







extern OSStatus
DisposeAUGraph( AUGraph inGraph) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AUGraphAddNode( AUGraph inGraph,
     const AudioComponentDescription * inDescription,
     AUNode * outNode) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AUGraphRemoveNode( AUGraph inGraph,
     AUNode inNode) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AUGraphGetNodeCount(AUGraph inGraph,
     UInt32 *outNumberOfNodes) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AUGraphGetIndNode( AUGraph inGraph,
     UInt32 inIndex,
     AUNode *outNode) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AUGraphNodeInfo( AUGraph inGraph,
     AUNode inNode,
     AudioComponentDescription * _Nullable outDescription,
     AudioUnit _Nullable * _Nullable outAudioUnit) __attribute__((availability(ios,introduced=2.0)));
enum {
 kAUNodeInteraction_Connection = 1,
 kAUNodeInteraction_InputCallback = 2
};
struct AudioUnitNodeConnection
{
 AUNode sourceNode;
 UInt32 sourceOutputNumber;
 AUNode destNode;
 UInt32 destInputNumber;
};
typedef struct AudioUnitNodeConnection AudioUnitNodeConnection;
typedef struct AudioUnitNodeConnection AUNodeConnection;
struct AUNodeRenderCallback
{
 AUNode destNode;
 AudioUnitElement destInputNumber;
 AURenderCallbackStruct cback;
};
typedef struct AUNodeRenderCallback AUNodeRenderCallback;
struct AUNodeInteraction
{
 UInt32 nodeInteractionType;

 union
 {
  AUNodeConnection connection;
  AUNodeRenderCallback inputCallback;

 } nodeInteraction;
};
typedef struct AUNodeInteraction AUNodeInteraction;





extern OSStatus
AUGraphConnectNodeInput( AUGraph inGraph,
       AUNode inSourceNode,
       UInt32 inSourceOutputNumber,
       AUNode inDestNode,
       UInt32 inDestInputNumber) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AUGraphSetNodeInputCallback (AUGraph inGraph,
       AUNode inDestNode,
       UInt32 inDestInputNumber,
       const AURenderCallbackStruct * inInputCallback)
                 __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AUGraphDisconnectNodeInput( AUGraph inGraph,
       AUNode inDestNode,
       UInt32 inDestInputNumber) __attribute__((availability(ios,introduced=2.0)));







extern OSStatus
AUGraphClearConnections( AUGraph inGraph) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AUGraphGetNumberOfInteractions( AUGraph inGraph,
        UInt32 * outNumInteractions) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AUGraphGetInteractionInfo( AUGraph inGraph,
       UInt32 inInteractionIndex,
       AUNodeInteraction * outInteraction) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AUGraphCountNodeInteractions( AUGraph inGraph,
        AUNode inNode,
        UInt32 * outNumInteractions) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AUGraphGetNodeInteractions( AUGraph inGraph,
       AUNode inNode,
       UInt32 * ioNumInteractions,
       AUNodeInteraction * outInteractions) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AUGraphUpdate( AUGraph inGraph,
     Boolean * _Nullable outIsUpdated) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AUGraphOpen( AUGraph inGraph) __attribute__((availability(ios,introduced=2.0)));







extern OSStatus
AUGraphClose( AUGraph inGraph) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AUGraphInitialize( AUGraph inGraph) __attribute__((availability(ios,introduced=2.0)));







extern OSStatus
AUGraphUninitialize( AUGraph inGraph) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AUGraphStart( AUGraph inGraph) __attribute__((availability(ios,introduced=2.0)));






extern OSStatus
AUGraphStop( AUGraph inGraph) __attribute__((availability(ios,introduced=2.0)));






extern OSStatus
AUGraphIsOpen( AUGraph inGraph,
      Boolean *outIsOpen) __attribute__((availability(ios,introduced=2.0)));





extern OSStatus
AUGraphIsInitialized( AUGraph inGraph,
      Boolean *outIsInitialized) __attribute__((availability(ios,introduced=2.0)));





extern OSStatus
AUGraphIsRunning( AUGraph inGraph,
      Boolean *outIsRunning) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AUGraphGetCPULoad( AUGraph inGraph,
      Float32 *outAverageCPULoad) __attribute__((availability(ios,introduced=2.0)));







extern OSStatus
AUGraphGetMaxCPULoad( AUGraph inGraph,
      Float32 *outMaxLoad) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AUGraphAddRenderNotify( AUGraph inGraph,
        AURenderCallback inCallback,
        void * _Nullable inRefCon) __attribute__((availability(ios,introduced=2.0)));







extern OSStatus
AUGraphRemoveRenderNotify( AUGraph inGraph,
        AURenderCallback inCallback,
        void * _Nullable inRefCon) __attribute__((availability(ios,introduced=2.0)));
}
#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin


extern "C"
{
typedef struct OpaqueAudioConverter * AudioConverterRef;

typedef UInt32 AudioConverterPropertyID;
enum
{
    kAudioConverterPropertyMinimumInputBufferSize = 'mibs',
    kAudioConverterPropertyMinimumOutputBufferSize = 'mobs',
    kAudioConverterPropertyMaximumInputBufferSize = 'xibs',
    kAudioConverterPropertyMaximumInputPacketSize = 'xips',
    kAudioConverterPropertyMaximumOutputPacketSize = 'xops',
    kAudioConverterPropertyCalculateInputBufferSize = 'cibs',
    kAudioConverterPropertyCalculateOutputBufferSize = 'cobs',
    kAudioConverterPropertyInputCodecParameters = 'icdp',
    kAudioConverterPropertyOutputCodecParameters = 'ocdp',
    kAudioConverterSampleRateConverterAlgorithm = 'srci',
    kAudioConverterSampleRateConverterComplexity = 'srca',
    kAudioConverterSampleRateConverterQuality = 'srcq',
    kAudioConverterSampleRateConverterInitialPhase = 'srcp',
    kAudioConverterCodecQuality = 'cdqu',
    kAudioConverterPrimeMethod = 'prmm',
    kAudioConverterPrimeInfo = 'prim',
    kAudioConverterChannelMap = 'chmp',
    kAudioConverterDecompressionMagicCookie = 'dmgc',
    kAudioConverterCompressionMagicCookie = 'cmgc',
    kAudioConverterEncodeBitRate = 'brat',
    kAudioConverterEncodeAdjustableSampleRate = 'ajsr',
    kAudioConverterInputChannelLayout = 'icl ',
    kAudioConverterOutputChannelLayout = 'ocl ',
    kAudioConverterApplicableEncodeBitRates = 'aebr',
    kAudioConverterAvailableEncodeBitRates = 'vebr',
    kAudioConverterApplicableEncodeSampleRates = 'aesr',
    kAudioConverterAvailableEncodeSampleRates = 'vesr',
    kAudioConverterAvailableEncodeChannelLayoutTags = 'aecl',
    kAudioConverterCurrentOutputStreamDescription = 'acod',
    kAudioConverterCurrentInputStreamDescription = 'acid',
    kAudioConverterPropertySettings = 'acps',
    kAudioConverterPropertyBitDepthHint = 'acbd',
    kAudioConverterPropertyFormatList = 'flst'
};
enum
{
    kAudioConverterPropertyCanResumeFromInterruption = 'crfi'
};
enum
{
    kAudioConverterQuality_Max = 0x7F,
    kAudioConverterQuality_High = 0x60,
    kAudioConverterQuality_Medium = 0x40,
    kAudioConverterQuality_Low = 0x20,
    kAudioConverterQuality_Min = 0
};
enum
{
    kAudioConverterSampleRateConverterComplexity_Linear = 'line',
    kAudioConverterSampleRateConverterComplexity_Normal = 'norm',
    kAudioConverterSampleRateConverterComplexity_Mastering = 'bats',
    kAudioConverterSampleRateConverterComplexity_MinimumPhase = 'minp'
};
enum
{
    kConverterPrimeMethod_Pre = 0,
    kConverterPrimeMethod_Normal = 1,
    kConverterPrimeMethod_None = 2
};
struct AudioConverterPrimeInfo {
    UInt32 leadingFrames;
    UInt32 trailingFrames;
};
typedef struct AudioConverterPrimeInfo AudioConverterPrimeInfo;





enum
{
    kAudioConverterErr_FormatNotSupported = 'fmt?',
    kAudioConverterErr_OperationNotSupported = 0x6F703F3F,
    kAudioConverterErr_PropertyNotSupported = 'prop',
    kAudioConverterErr_InvalidInputSize = 'insz',
    kAudioConverterErr_InvalidOutputSize = 'otsz',

    kAudioConverterErr_UnspecifiedError = 'what',
    kAudioConverterErr_BadPropertySizeError = '!siz',
    kAudioConverterErr_RequiresPacketDescriptionsError = '!pkd',
    kAudioConverterErr_InputSampleRateOutOfRange = '!isr',
    kAudioConverterErr_OutputSampleRateOutOfRange = '!osr'
};
enum
{
    kAudioConverterErr_HardwareInUse = 'hwiu',
    kAudioConverterErr_NoHardwarePermission = 'perm'
};
extern OSStatus
AudioConverterNew( const AudioStreamBasicDescription * inSourceFormat,
                        const AudioStreamBasicDescription * inDestinationFormat,
                        AudioConverterRef _Nullable * _Nonnull outAudioConverter) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioConverterNewSpecific( const AudioStreamBasicDescription * inSourceFormat,
                            const AudioStreamBasicDescription * inDestinationFormat,
                            UInt32 inNumberClassDescriptions,
                            const AudioClassDescription * inClassDescriptions,
                            AudioConverterRef _Nullable * _Nonnull outAudioConverter)
                                                                                __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioConverterDispose( AudioConverterRef inAudioConverter) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioConverterReset( AudioConverterRef inAudioConverter) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioConverterGetPropertyInfo( AudioConverterRef inAudioConverter,
                                AudioConverterPropertyID inPropertyID,
                                UInt32 * _Nullable outSize,
                                Boolean * _Nullable outWritable) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioConverterGetProperty( AudioConverterRef inAudioConverter,
                            AudioConverterPropertyID inPropertyID,
                            UInt32 * ioPropertyDataSize,
                            void * outPropertyData) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioConverterSetProperty( AudioConverterRef inAudioConverter,
                            AudioConverterPropertyID inPropertyID,
                            UInt32 inPropertyDataSize,
                            const void * inPropertyData) __attribute__((availability(ios,introduced=2.0)));
typedef OSStatus
(*AudioConverterInputDataProc)( AudioConverterRef inAudioConverter,
                                UInt32 * ioDataSize,
                                void * _Nonnull * _Nonnull outData,
                                void * _Nullable inUserData);
extern OSStatus
AudioConverterConvertBuffer( AudioConverterRef inAudioConverter,
                                UInt32 inInputDataSize,
                                const void * inInputData,
                                UInt32 * ioOutputDataSize,
                                void * outOutputData) __attribute__((availability(ios,introduced=2.0)));
typedef OSStatus
(*AudioConverterComplexInputDataProc)( AudioConverterRef inAudioConverter,
                                        UInt32 * ioNumberDataPackets,
                                        AudioBufferList * ioData,
                                        AudioStreamPacketDescription * _Nullable * _Nullable outDataPacketDescription,
                                        void * _Nullable inUserData);
extern OSStatus
AudioConverterFillComplexBuffer( AudioConverterRef inAudioConverter,
                                    AudioConverterComplexInputDataProc inInputDataProc,
                                    void * _Nullable inInputDataProcUserData,
                                    UInt32 * ioOutputDataPacketSize,
                                    AudioBufferList * outOutputData,
                                    AudioStreamPacketDescription * _Nullable outPacketDescription)
                                                                                __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioConverterConvertComplexBuffer( AudioConverterRef inAudioConverter,
                                    UInt32 inNumberPCMFrames,
                                    const AudioBufferList * inInputData,
                                    AudioBufferList * outOutputData)
                                                                                __attribute__((availability(ios,introduced=5.0)));


}
#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin


extern "C"
{






typedef UInt32 AudioFileTypeID;
enum {
        kAudioFileAIFFType = 'AIFF',
        kAudioFileAIFCType = 'AIFC',
        kAudioFileWAVEType = 'WAVE',
        kAudioFileRF64Type = 'RF64',
        kAudioFileSoundDesigner2Type = 'Sd2f',
        kAudioFileNextType = 'NeXT',
        kAudioFileMP3Type = 'MPG3',
        kAudioFileMP2Type = 'MPG2',
        kAudioFileMP1Type = 'MPG1',
  kAudioFileAC3Type = 'ac-3',
        kAudioFileAAC_ADTSType = 'adts',
        kAudioFileMPEG4Type = 'mp4f',
        kAudioFileM4AType = 'm4af',
        kAudioFileM4BType = 'm4bf',
  kAudioFileCAFType = 'caff',
  kAudioFile3GPType = '3gpp',
  kAudioFile3GP2Type = '3gp2',
  kAudioFileAMRType = 'amrf',
  kAudioFileFLACType = 'flac'
};
enum {
        kAudioFileUnspecifiedError = 'wht?',
        kAudioFileUnsupportedFileTypeError = 'typ?',
        kAudioFileUnsupportedDataFormatError = 'fmt?',
        kAudioFileUnsupportedPropertyError = 'pty?',
        kAudioFileBadPropertySizeError = '!siz',
        kAudioFilePermissionsError = 'prm?',
        kAudioFileNotOptimizedError = 'optm',

        kAudioFileInvalidChunkError = 'chk?',
        kAudioFileDoesNotAllow64BitDataSizeError = 'off?',
        kAudioFileInvalidPacketOffsetError = 'pck?',
        kAudioFileInvalidFileError = 'dta?',
  kAudioFileOperationNotSupportedError = 0x6F703F3F,

  kAudioFileNotOpenError = -38,
  kAudioFileEndOfFileError = -39,
  kAudioFilePositionError = -40,
  kAudioFileFileNotFoundError = -43
};
typedef UInt32 AudioFileFlags; enum {
 kAudioFileFlags_EraseFile = 1,
 kAudioFileFlags_DontPageAlignAudioData = 2
};

typedef SInt8 AudioFilePermissions; enum {
 kAudioFileReadPermission = 0x01,
 kAudioFileWritePermission = 0x02,
 kAudioFileReadWritePermission = 0x03
};
typedef struct OpaqueAudioFileID *AudioFileID;




typedef UInt32 AudioFilePropertyID;
enum {
 kAudioFileLoopDirection_NoLooping = 0,
 kAudioFileLoopDirection_Forward = 1,
 kAudioFileLoopDirection_ForwardAndBackward = 2,
 kAudioFileLoopDirection_Backward = 3
};
struct AudioFile_SMPTE_Time
{
 SInt8 mHours;
 UInt8 mMinutes;
 UInt8 mSeconds;
 UInt8 mFrames;
 UInt32 mSubFrameSampleOffset;
};
typedef struct AudioFile_SMPTE_Time AudioFile_SMPTE_Time;







enum {
 kAudioFileMarkerType_Generic = 0,
};
struct AudioFileMarker
{
 Float64 mFramePosition;

 CFStringRef _Nullable mName;
 SInt32 mMarkerID;

 AudioFile_SMPTE_Time mSMPTETime;
 UInt32 mType;
 UInt16 mReserved;
 UInt16 mChannel;
};
typedef struct AudioFileMarker AudioFileMarker;
struct AudioFileMarkerList
{
 UInt32 mSMPTE_TimeType;
 UInt32 mNumberMarkers;
 AudioFileMarker mMarkers[1];
};
typedef struct AudioFileMarkerList AudioFileMarkerList;
static __inline__ __attribute__((always_inline)) size_t NumBytesToNumAudioFileMarkers(size_t inNumBytes)
{
 return (inNumBytes<__builtin_offsetof(AudioFileMarkerList, mMarkers[0]) ? 0 : (inNumBytes - __builtin_offsetof(AudioFileMarkerList, mMarkers[0])) / sizeof(AudioFileMarker));
}
static __inline__ __attribute__((always_inline)) size_t NumAudioFileMarkersToNumBytes(size_t inNumMarkers)
{
 return (__builtin_offsetof(AudioFileMarkerList, mMarkers) + (inNumMarkers) * sizeof(AudioFileMarker));
}
typedef UInt32 AudioFileRegionFlags; enum {
 kAudioFileRegionFlag_LoopEnable = 1,
 kAudioFileRegionFlag_PlayForward = 2,
 kAudioFileRegionFlag_PlayBackward = 4
};
struct AudioFileRegion
{
 UInt32 mRegionID;
 CFStringRef mName;
 AudioFileRegionFlags mFlags;
 UInt32 mNumberMarkers;
 AudioFileMarker mMarkers[1];
};
typedef struct AudioFileRegion AudioFileRegion;
struct AudioFileRegionList
{
 UInt32 mSMPTE_TimeType;
 UInt32 mNumberRegions;
 AudioFileRegion mRegions[1];
};
typedef struct AudioFileRegionList AudioFileRegionList;
static __inline__ __attribute__((always_inline)) AudioFileRegion *NextAudioFileRegion(const AudioFileRegion *inAFRegionPtr)
{
 return ((AudioFileRegion*)((char*)inAFRegionPtr + __builtin_offsetof(AudioFileRegion, mMarkers) + (inAFRegionPtr->mNumberMarkers)*sizeof(AudioFileMarker)));
}
struct AudioFramePacketTranslation
{
 SInt64 mFrame;
 SInt64 mPacket;
 UInt32 mFrameOffsetInPacket;
};
typedef struct AudioFramePacketTranslation AudioFramePacketTranslation;
typedef UInt32 AudioBytePacketTranslationFlags; enum {
 kBytePacketTranslationFlag_IsEstimate = 1
};
struct AudioBytePacketTranslation
{
 SInt64 mByte;
 SInt64 mPacket;
 UInt32 mByteOffsetInPacket;
 AudioBytePacketTranslationFlags mFlags;
};
typedef struct AudioBytePacketTranslation AudioBytePacketTranslation;
struct AudioFilePacketTableInfo
{
        SInt64 mNumberValidFrames;
        SInt32 mPrimingFrames;
        SInt32 mRemainderFrames;
};
typedef struct AudioFilePacketTableInfo AudioFilePacketTableInfo;
extern OSStatus
AudioFileCreateWithURL (CFURLRef inFileRef,
                    AudioFileTypeID inFileType,
                    const AudioStreamBasicDescription *inFormat,
                    AudioFileFlags inFlags,
                    AudioFileID _Nullable * _Nonnull outAudioFile) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioFileOpenURL ( CFURLRef inFileRef,
     AudioFilePermissions inPermissions,
     AudioFileTypeID inFileTypeHint,
     AudioFileID _Nullable * _Nonnull outAudioFile) __attribute__((availability(ios,introduced=2.0)));
typedef OSStatus (*AudioFile_ReadProc)(
        void * inClientData,
        SInt64 inPosition,
        UInt32 requestCount,
        void * buffer,
        UInt32 * actualCount);
typedef OSStatus (*AudioFile_WriteProc)(
        void * inClientData,
        SInt64 inPosition,
        UInt32 requestCount,
        const void *buffer,
        UInt32 * actualCount);
typedef SInt64 (*AudioFile_GetSizeProc)(
        void * inClientData);
typedef OSStatus (*AudioFile_SetSizeProc)(
        void * inClientData,
        SInt64 inSize);
extern OSStatus
AudioFileInitializeWithCallbacks (
      void * inClientData,
      AudioFile_ReadProc inReadFunc,
      AudioFile_WriteProc inWriteFunc,
      AudioFile_GetSizeProc inGetSizeFunc,
      AudioFile_SetSizeProc inSetSizeFunc,
                        AudioFileTypeID inFileType,
                        const AudioStreamBasicDescription *inFormat,
                        AudioFileFlags inFlags,
                        AudioFileID _Nullable * _Nonnull outAudioFile) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioFileOpenWithCallbacks (
    void * inClientData,
    AudioFile_ReadProc inReadFunc,
    AudioFile_WriteProc _Nullable inWriteFunc,
    AudioFile_GetSizeProc inGetSizeFunc,
    AudioFile_SetSizeProc _Nullable inSetSizeFunc,
                AudioFileTypeID inFileTypeHint,
                AudioFileID _Nullable * _Nonnull outAudioFile) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioFileClose (AudioFileID inAudioFile) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioFileOptimize (AudioFileID inAudioFile) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioFileReadBytes ( AudioFileID inAudioFile,
                        Boolean inUseCache,
                        SInt64 inStartingByte,
                        UInt32 *ioNumBytes,
                        void *outBuffer) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioFileWriteBytes ( AudioFileID inAudioFile,
                        Boolean inUseCache,
                        SInt64 inStartingByte,
                        UInt32 *ioNumBytes,
                        const void *inBuffer) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioFileReadPacketData ( AudioFileID inAudioFile,
                         Boolean inUseCache,
                         UInt32 * ioNumBytes,
                         AudioStreamPacketDescription * _Nullable outPacketDescriptions,
                         SInt64 inStartingPacket,
                         UInt32 * ioNumPackets,
                         void * _Nullable outBuffer) __attribute__((availability(ios,introduced=2.2)));
extern OSStatus
AudioFileReadPackets ( AudioFileID inAudioFile,
                        Boolean inUseCache,
                        UInt32 * outNumBytes,
                        AudioStreamPacketDescription * _Nullable outPacketDescriptions,
                        SInt64 inStartingPacket,
                        UInt32 * ioNumPackets,
                        void * _Nullable outBuffer) __attribute__((availability(ios,introduced=2.0,deprecated=8.0)));
extern OSStatus
AudioFileWritePackets ( AudioFileID inAudioFile,
                        Boolean inUseCache,
                        UInt32 inNumBytes,
                        const AudioStreamPacketDescription * _Nullable inPacketDescriptions,
                        SInt64 inStartingPacket,
                        UInt32 *ioNumPackets,
                        const void *inBuffer) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioFileCountUserData ( AudioFileID inAudioFile,
       UInt32 inUserDataID,
       UInt32 *outNumberItems) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioFileGetUserDataSize ( AudioFileID inAudioFile,
       UInt32 inUserDataID,
       UInt32 inIndex,
       UInt32 *outUserDataSize) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioFileGetUserData ( AudioFileID inAudioFile,
      UInt32 inUserDataID,
      UInt32 inIndex,
      UInt32 *ioUserDataSize,
      void *outUserData) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioFileSetUserData ( AudioFileID inAudioFile,
      UInt32 inUserDataID,
      UInt32 inIndex,
      UInt32 inUserDataSize,
      const void *inUserData) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioFileRemoveUserData ( AudioFileID inAudioFile,
      UInt32 inUserDataID,
      UInt32 inIndex) __attribute__((availability(ios,introduced=2.0)));
enum
{
 kAudioFilePropertyFileFormat = 'ffmt',
 kAudioFilePropertyDataFormat = 'dfmt',
 kAudioFilePropertyIsOptimized = 'optm',
 kAudioFilePropertyMagicCookieData = 'mgic',
 kAudioFilePropertyAudioDataByteCount = 'bcnt',
 kAudioFilePropertyAudioDataPacketCount = 'pcnt',
 kAudioFilePropertyMaximumPacketSize = 'psze',
 kAudioFilePropertyDataOffset = 'doff',
 kAudioFilePropertyChannelLayout = 'cmap',
 kAudioFilePropertyDeferSizeUpdates = 'dszu',
 kAudioFilePropertyDataFormatName = 'fnme',
 kAudioFilePropertyMarkerList = 'mkls',
 kAudioFilePropertyRegionList = 'rgls',
 kAudioFilePropertyPacketToFrame = 'pkfr',
 kAudioFilePropertyFrameToPacket = 'frpk',
 kAudioFilePropertyPacketToByte = 'pkby',
 kAudioFilePropertyByteToPacket = 'bypk',
 kAudioFilePropertyChunkIDs = 'chid',
 kAudioFilePropertyInfoDictionary = 'info',
 kAudioFilePropertyPacketTableInfo = 'pnfo',
 kAudioFilePropertyFormatList = 'flst',
 kAudioFilePropertyPacketSizeUpperBound = 'pkub',
 kAudioFilePropertyReserveDuration = 'rsrv',
 kAudioFilePropertyEstimatedDuration = 'edur',
 kAudioFilePropertyBitRate = 'brat',
 kAudioFilePropertyID3Tag = 'id3t',
 kAudioFilePropertySourceBitDepth = 'sbtd',
 kAudioFilePropertyAlbumArtwork = 'aart',
    kAudioFilePropertyAudioTrackCount = 'atct',
 kAudioFilePropertyUseAudioTrack = 'uatk'
};
extern OSStatus
AudioFileGetPropertyInfo( AudioFileID inAudioFile,
                                AudioFilePropertyID inPropertyID,
                                UInt32 * _Nullable outDataSize,
                                UInt32 * _Nullable isWritable) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioFileGetProperty( AudioFileID inAudioFile,
                        AudioFilePropertyID inPropertyID,
                        UInt32 *ioDataSize,
                        void *outPropertyData) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioFileSetProperty( AudioFileID inAudioFile,
                        AudioFilePropertyID inPropertyID,
                        UInt32 inDataSize,
                        const void *inPropertyData) __attribute__((availability(ios,introduced=2.0)));
enum
{
 kAudioFileGlobalInfo_ReadableTypes = 'afrf',
 kAudioFileGlobalInfo_WritableTypes = 'afwf',
 kAudioFileGlobalInfo_FileTypeName = 'ftnm',
 kAudioFileGlobalInfo_AvailableStreamDescriptionsForFormat = 'sdid',
 kAudioFileGlobalInfo_AvailableFormatIDs = 'fmid',

 kAudioFileGlobalInfo_AllExtensions = 'alxt',
 kAudioFileGlobalInfo_AllHFSTypeCodes = 'ahfs',
 kAudioFileGlobalInfo_AllUTIs = 'auti',
 kAudioFileGlobalInfo_AllMIMETypes = 'amim',

 kAudioFileGlobalInfo_ExtensionsForType = 'fext',
 kAudioFileGlobalInfo_HFSTypeCodesForType = 'fhfs',
 kAudioFileGlobalInfo_UTIsForType = 'futi',
 kAudioFileGlobalInfo_MIMETypesForType = 'fmim',

 kAudioFileGlobalInfo_TypesForMIMEType = 'tmim',
 kAudioFileGlobalInfo_TypesForUTI = 'tuti',
 kAudioFileGlobalInfo_TypesForHFSTypeCode = 'thfs',
 kAudioFileGlobalInfo_TypesForExtension = 'text'
};
struct AudioFileTypeAndFormatID
{
 AudioFileTypeID mFileType;
 UInt32 mFormatID;
};
typedef struct AudioFileTypeAndFormatID AudioFileTypeAndFormatID;
extern OSStatus
AudioFileGetGlobalInfoSize( AudioFilePropertyID inPropertyID,
                                UInt32 inSpecifierSize,
                                void * _Nullable inSpecifier,
                                UInt32 *outDataSize) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioFileGetGlobalInfo( AudioFilePropertyID inPropertyID,
        UInt32 inSpecifierSize,
                                void * _Nullable inSpecifier,
                          UInt32 *ioDataSize,
                          void *outPropertyData) __attribute__((availability(ios,introduced=2.0)));
}
#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin


extern "C"
{
typedef UInt32 AudioFileStreamPropertyFlags; enum {
 kAudioFileStreamPropertyFlag_PropertyIsCached = 1,
 kAudioFileStreamPropertyFlag_CacheProperty = 2
};







typedef UInt32 AudioFileStreamParseFlags; enum {
 kAudioFileStreamParseFlag_Discontinuity = 1
};





typedef UInt32 AudioFileStreamSeekFlags; enum {
 kAudioFileStreamSeekFlag_OffsetIsEstimated = 1
};






typedef UInt32 AudioFileStreamPropertyID;
typedef struct OpaqueAudioFileStreamID *AudioFileStreamID;

typedef void (*AudioFileStream_PropertyListenerProc)(
           void * inClientData,
           AudioFileStreamID inAudioFileStream,
           AudioFileStreamPropertyID inPropertyID,
           AudioFileStreamPropertyFlags * ioFlags);

typedef void (*AudioFileStream_PacketsProc)(
           void * inClientData,
           UInt32 inNumberBytes,
           UInt32 inNumberPackets,
           const void * inInputData,
           AudioStreamPacketDescription *inPacketDescriptions);
enum
{
 kAudioFileStreamError_UnsupportedFileType = 'typ?',
 kAudioFileStreamError_UnsupportedDataFormat = 'fmt?',
 kAudioFileStreamError_UnsupportedProperty = 'pty?',
 kAudioFileStreamError_BadPropertySize = '!siz',
 kAudioFileStreamError_NotOptimized = 'optm',
 kAudioFileStreamError_InvalidPacketOffset = 'pck?',
 kAudioFileStreamError_InvalidFile = 'dta?',
 kAudioFileStreamError_ValueUnknown = 'unk?',
 kAudioFileStreamError_DataUnavailable = 'more',
 kAudioFileStreamError_IllegalOperation = 'nope',
 kAudioFileStreamError_UnspecifiedError = 'wht?',
 kAudioFileStreamError_DiscontinuityCantRecover = 'dsc!'
};
enum
{
 kAudioFileStreamProperty_ReadyToProducePackets = 'redy',
 kAudioFileStreamProperty_FileFormat = 'ffmt',
 kAudioFileStreamProperty_DataFormat = 'dfmt',
 kAudioFileStreamProperty_FormatList = 'flst',
 kAudioFileStreamProperty_MagicCookieData = 'mgic',
 kAudioFileStreamProperty_AudioDataByteCount = 'bcnt',
 kAudioFileStreamProperty_AudioDataPacketCount = 'pcnt',
 kAudioFileStreamProperty_MaximumPacketSize = 'psze',
 kAudioFileStreamProperty_DataOffset = 'doff',
 kAudioFileStreamProperty_ChannelLayout = 'cmap',
 kAudioFileStreamProperty_PacketToFrame = 'pkfr',
 kAudioFileStreamProperty_FrameToPacket = 'frpk',
 kAudioFileStreamProperty_PacketToByte = 'pkby',
 kAudioFileStreamProperty_ByteToPacket = 'bypk',
 kAudioFileStreamProperty_PacketTableInfo = 'pnfo',
 kAudioFileStreamProperty_PacketSizeUpperBound = 'pkub',
 kAudioFileStreamProperty_AverageBytesPerPacket = 'abpp',
 kAudioFileStreamProperty_BitRate = 'brat',
    kAudioFileStreamProperty_InfoDictionary = 'info'
};
extern OSStatus
AudioFileStreamOpen (
       void * _Nullable inClientData,
       AudioFileStream_PropertyListenerProc inPropertyListenerProc,
       AudioFileStream_PacketsProc inPacketsProc,
                   AudioFileTypeID inFileTypeHint,
                   AudioFileStreamID _Nullable * _Nonnull outAudioFileStream)
                  __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioFileStreamParseBytes(
        AudioFileStreamID inAudioFileStream,
        UInt32 inDataByteSize,
        const void * _Nullable inData,
        AudioFileStreamParseFlags inFlags)
                  __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioFileStreamSeek(
        AudioFileStreamID inAudioFileStream,
        SInt64 inPacketOffset,
        SInt64 * outDataByteOffset,
        AudioFileStreamSeekFlags * ioFlags)
                  __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioFileStreamGetPropertyInfo(
        AudioFileStreamID inAudioFileStream,
        AudioFileStreamPropertyID inPropertyID,
        UInt32 * _Nullable outPropertyDataSize,
        Boolean * _Nullable outWritable)
                  __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioFileStreamGetProperty(
       AudioFileStreamID inAudioFileStream,
       AudioFileStreamPropertyID inPropertyID,
       UInt32 * ioPropertyDataSize,
       void * outPropertyData)
                  __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioFileStreamSetProperty(
       AudioFileStreamID inAudioFileStream,
       AudioFileStreamPropertyID inPropertyID,
       UInt32 inPropertyDataSize,
       const void * inPropertyData)
                  __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioFileStreamClose( AudioFileStreamID inAudioFileStream)
                  __attribute__((availability(ios,introduced=2.0)));



}
#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin


extern "C" {
typedef UInt32 AudioQueuePropertyID;





typedef UInt32 AudioQueueParameterID;





typedef Float32 AudioQueueParameterValue;





typedef struct OpaqueAudioQueue * AudioQueueRef;
typedef struct OpaqueAudioQueueTimeline * AudioQueueTimelineRef;
enum {
    kAudioQueueErr_InvalidBuffer = -66687,
    kAudioQueueErr_BufferEmpty = -66686,
    kAudioQueueErr_DisposalPending = -66685,
    kAudioQueueErr_InvalidProperty = -66684,
    kAudioQueueErr_InvalidPropertySize = -66683,
    kAudioQueueErr_InvalidParameter = -66682,
    kAudioQueueErr_CannotStart = -66681,
    kAudioQueueErr_InvalidDevice = -66680,
    kAudioQueueErr_BufferInQueue = -66679,
    kAudioQueueErr_InvalidRunState = -66678,
    kAudioQueueErr_InvalidQueueType = -66677,
    kAudioQueueErr_Permissions = -66676,
    kAudioQueueErr_InvalidPropertyValue = -66675,
    kAudioQueueErr_PrimeTimedOut = -66674,
    kAudioQueueErr_CodecNotFound = -66673,
    kAudioQueueErr_InvalidCodecAccess = -66672,
    kAudioQueueErr_QueueInvalidated = -66671,
    kAudioQueueErr_TooManyTaps = -66670,
    kAudioQueueErr_InvalidTapContext = -66669,
    kAudioQueueErr_RecordUnderrun = -66668,
    kAudioQueueErr_InvalidTapType = -66667,
    kAudioQueueErr_BufferEnqueuedTwice = -66666,
    kAudioQueueErr_CannotStartYet = -66665,
    kAudioQueueErr_EnqueueDuringReset = -66632,
    kAudioQueueErr_InvalidOfflineMode = -66626,
};
enum {
    kAudioQueueProperty_IsRunning = 'aqrn',

    kAudioQueueDeviceProperty_SampleRate = 'aqsr',
    kAudioQueueDeviceProperty_NumberChannels = 'aqdc',
    kAudioQueueProperty_CurrentDevice = 'aqcd',

    kAudioQueueProperty_MagicCookie = 'aqmc',
    kAudioQueueProperty_MaximumOutputPacketSize = 'xops',
    kAudioQueueProperty_StreamDescription = 'aqft',

    kAudioQueueProperty_ChannelLayout = 'aqcl',
    kAudioQueueProperty_EnableLevelMetering = 'aqme',
    kAudioQueueProperty_CurrentLevelMeter = 'aqmv',
    kAudioQueueProperty_CurrentLevelMeterDB = 'aqmd',

    kAudioQueueProperty_DecodeBufferSizeFrames = 'dcbf',
    kAudioQueueProperty_ConverterError = 'qcve',

    kAudioQueueProperty_EnableTimePitch = 'q_tp',
    kAudioQueueProperty_TimePitchAlgorithm = 'qtpa',
    kAudioQueueProperty_TimePitchBypass = 'qtpb',
};
enum {
    kAudioQueueTimePitchAlgorithm_Spectral = 'spec',
    kAudioQueueTimePitchAlgorithm_TimeDomain = 'tido',
    kAudioQueueTimePitchAlgorithm_Varispeed = 'vspd'
};







enum {
    kAudioQueueTimePitchAlgorithm_LowQualityZeroLatency = 'lqzl',
};
enum {
    kAudioQueueProperty_HardwareCodecPolicy = 'aqcp'
};
enum {
    kAudioQueueHardwareCodecPolicy_Default = 0,
    kAudioQueueHardwareCodecPolicy_UseSoftwareOnly = 1,
    kAudioQueueHardwareCodecPolicy_UseHardwareOnly = 2,
    kAudioQueueHardwareCodecPolicy_PreferSoftware = 3,
    kAudioQueueHardwareCodecPolicy_PreferHardware = 4
};
enum {
    kAudioQueueProperty_ChannelAssignments = 'aqca'
} __attribute__((availability(ios,introduced=6.0)));
enum
{
    kAudioQueueParam_Volume = 1,
    kAudioQueueParam_PlayRate = 2,
    kAudioQueueParam_Pitch = 3,
    kAudioQueueParam_VolumeRampTime = 4,
    kAudioQueueParam_Pan = 13
};
typedef UInt32 AudioQueueProcessingTapFlags; enum {

    kAudioQueueProcessingTap_PreEffects = (1 << 0),
    kAudioQueueProcessingTap_PostEffects = (1 << 1),
    kAudioQueueProcessingTap_Siphon = (1 << 2),


    kAudioQueueProcessingTap_StartOfStream = (1 << 8),
    kAudioQueueProcessingTap_EndOfStream = (1 << 9),
};
typedef struct AudioQueueBuffer {
    const UInt32 mAudioDataBytesCapacity;
    void * const mAudioData;
    UInt32 mAudioDataByteSize;
    void * _Nullable mUserData;

    const UInt32 mPacketDescriptionCapacity;
    AudioStreamPacketDescription * const _Nullable mPacketDescriptions;
    UInt32 mPacketDescriptionCount;

    AudioQueueBuffer() : mAudioDataBytesCapacity(0), mAudioData(0), mPacketDescriptionCapacity(0), mPacketDescriptions(0) { }

} AudioQueueBuffer;





typedef AudioQueueBuffer *AudioQueueBufferRef;
struct AudioQueueParameterEvent {
    AudioQueueParameterID mID;
    AudioQueueParameterValue mValue;
};
typedef struct AudioQueueParameterEvent AudioQueueParameterEvent;
typedef struct AudioQueueLevelMeterState {
    Float32 mAveragePower;
    Float32 mPeakPower;
} AudioQueueLevelMeterState;





typedef struct OpaqueAudioQueueProcessingTap * AudioQueueProcessingTapRef;
typedef struct AudioQueueChannelAssignment {
    CFStringRef mDeviceUID;
    UInt32 mChannelNumber;
} AudioQueueChannelAssignment;
typedef void (*AudioQueueOutputCallbackBlock)(
                                    AudioQueueRef inAQ,
                                    AudioQueueBufferRef inBuffer);
typedef void (*AudioQueueInputCallbackBlock)(
                                    AudioQueueRef inAQ,
                                    AudioQueueBufferRef inBuffer,
                                    const AudioTimeStamp * inStartTime,
                                    UInt32 inNumberPacketDescriptions,
                                    const AudioStreamPacketDescription * _Nullable inPacketDescs);
typedef void (*AudioQueueOutputCallback)(
                                    void * _Nullable inUserData,
                                    AudioQueueRef inAQ,
                                    AudioQueueBufferRef inBuffer);
typedef void (*AudioQueueInputCallback)(
                                    void * _Nullable inUserData,
                                    AudioQueueRef inAQ,
                                    AudioQueueBufferRef inBuffer,
                                    const AudioTimeStamp * inStartTime,
                                    UInt32 inNumberPacketDescriptions,
                                    const AudioStreamPacketDescription * _Nullable inPacketDescs);
typedef void (*AudioQueuePropertyListenerProc)(
                                    void * _Nullable inUserData,
                                    AudioQueueRef inAQ,
                                    AudioQueuePropertyID inID);
typedef void (*AudioQueueProcessingTapCallback)(
                                    void * inClientData,
                                    AudioQueueProcessingTapRef inAQTap,
                                    UInt32 inNumberFrames,
                                    AudioTimeStamp * ioTimeStamp,
                                    AudioQueueProcessingTapFlags * ioFlags,
                                    UInt32 * outNumberFrames,
                                    AudioBufferList * ioData);
extern OSStatus
AudioQueueNewOutput( const AudioStreamBasicDescription *inFormat,
                                    AudioQueueOutputCallback inCallbackProc,
                                    void * _Nullable inUserData,
                                    CFRunLoopRef _Nullable inCallbackRunLoop,
                                    CFStringRef _Nullable inCallbackRunLoopMode,
                                    UInt32 inFlags,
                                    AudioQueueRef _Nullable * _Nonnull outAQ) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioQueueNewInput( const AudioStreamBasicDescription *inFormat,
                                    AudioQueueInputCallback inCallbackProc,
                                    void * _Nullable inUserData,
                                    CFRunLoopRef _Nullable inCallbackRunLoop,
                                    CFStringRef _Nullable inCallbackRunLoopMode,
                                    UInt32 inFlags,
                                    AudioQueueRef _Nullable * _Nonnull outAQ) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioQueueNewOutputWithDispatchQueue(AudioQueueRef _Nullable * _Nonnull outAQ,
                                    const AudioStreamBasicDescription *inFormat,
                                    UInt32 inFlags,
                                    dispatch_queue_t inCallbackDispatchQueue,
                                    AudioQueueOutputCallbackBlock inCallbackBlock)
          __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
extern OSStatus
AudioQueueNewInputWithDispatchQueue(AudioQueueRef _Nullable * _Nonnull outAQ,
                                    const AudioStreamBasicDescription *inFormat,
                                    UInt32 inFlags,
                                    dispatch_queue_t inCallbackDispatchQueue,
                                    AudioQueueInputCallbackBlock inCallbackBlock)
          __attribute__((availability(macos,introduced=10.6))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));
extern OSStatus
AudioQueueDispose( AudioQueueRef inAQ,
                                    Boolean inImmediate) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioQueueAllocateBuffer( AudioQueueRef inAQ,
                                    UInt32 inBufferByteSize,
                                    AudioQueueBufferRef _Nullable * _Nonnull outBuffer) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioQueueAllocateBufferWithPacketDescriptions(
                                    AudioQueueRef inAQ,
                                    UInt32 inBufferByteSize,
                                    UInt32 inNumberPacketDescriptions,
                                    AudioQueueBufferRef _Nullable * _Nonnull outBuffer) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioQueueFreeBuffer( AudioQueueRef inAQ,
                                    AudioQueueBufferRef inBuffer) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioQueueEnqueueBuffer( AudioQueueRef inAQ,
                                    AudioQueueBufferRef inBuffer,
                                    UInt32 inNumPacketDescs,
                                    const AudioStreamPacketDescription * _Nullable inPacketDescs) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioQueueEnqueueBufferWithParameters(
                                    AudioQueueRef inAQ,
                                    AudioQueueBufferRef inBuffer,
                                    UInt32 inNumPacketDescs,
                                    const AudioStreamPacketDescription * _Nullable inPacketDescs,
                                    UInt32 inTrimFramesAtStart,
                                    UInt32 inTrimFramesAtEnd,
                                    UInt32 inNumParamValues,
                                    const AudioQueueParameterEvent * _Nullable inParamValues,
                                    const AudioTimeStamp * _Nullable inStartTime,
                                    AudioTimeStamp * _Nullable outActualStartTime) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioQueueStart( AudioQueueRef inAQ,
                                    const AudioTimeStamp * _Nullable inStartTime) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioQueuePrime( AudioQueueRef inAQ,
                                    UInt32 inNumberOfFramesToPrepare,
                                    UInt32 * _Nullable outNumberOfFramesPrepared) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioQueueStop( AudioQueueRef inAQ,
                                    Boolean inImmediate) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioQueuePause( AudioQueueRef inAQ) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioQueueFlush( AudioQueueRef inAQ) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioQueueReset( AudioQueueRef inAQ) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioQueueGetParameter( AudioQueueRef inAQ,
                                    AudioQueueParameterID inParamID,
                                    AudioQueueParameterValue * outValue) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioQueueSetParameter( AudioQueueRef inAQ,
                                    AudioQueueParameterID inParamID,
                                    AudioQueueParameterValue inValue) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioQueueGetProperty( AudioQueueRef inAQ,
                                    AudioQueuePropertyID inID,
                                    void * outData,
                                    UInt32 * ioDataSize) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioQueueSetProperty( AudioQueueRef inAQ,
                                    AudioQueuePropertyID inID,
                                    const void * inData,
                                    UInt32 inDataSize) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioQueueGetPropertySize( AudioQueueRef inAQ,
                                    AudioQueuePropertyID inID,
                                    UInt32 * outDataSize) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioQueueAddPropertyListener( AudioQueueRef inAQ,
                                    AudioQueuePropertyID inID,
                                    AudioQueuePropertyListenerProc inProc,
                                    void * _Nullable inUserData) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioQueueRemovePropertyListener( AudioQueueRef inAQ,
                                    AudioQueuePropertyID inID,
                                    AudioQueuePropertyListenerProc inProc,
                                    void * _Nullable inUserData) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioQueueCreateTimeline( AudioQueueRef inAQ,
                                    AudioQueueTimelineRef _Nullable * _Nonnull outTimeline) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioQueueDisposeTimeline( AudioQueueRef inAQ,
                                    AudioQueueTimelineRef inTimeline) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioQueueGetCurrentTime( AudioQueueRef inAQ,
                                    AudioQueueTimelineRef _Nullable inTimeline,
                                    AudioTimeStamp * _Nullable outTimeStamp,
                                    Boolean * _Nullable outTimelineDiscontinuity) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioQueueDeviceGetCurrentTime( AudioQueueRef inAQ,
                                    AudioTimeStamp * outTimeStamp) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioQueueDeviceTranslateTime( AudioQueueRef inAQ,
                                    const AudioTimeStamp * inTime,
                                    AudioTimeStamp * outTime) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioQueueDeviceGetNearestStartTime(AudioQueueRef inAQ,
                                    AudioTimeStamp * ioRequestedStartTime,
                                    UInt32 inFlags) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioQueueSetOfflineRenderFormat( AudioQueueRef inAQ,
                                    const AudioStreamBasicDescription * _Nullable inFormat,
                                    const AudioChannelLayout * _Nullable inLayout)
                  __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioQueueOfflineRender( AudioQueueRef inAQ,
                                    const AudioTimeStamp * inTimestamp,
                                    AudioQueueBufferRef ioBuffer,
                                    UInt32 inNumberFrames) __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioQueueProcessingTapNew( AudioQueueRef inAQ,
                                    AudioQueueProcessingTapCallback inCallback,
                                    void * _Nullable inClientData,
                                    AudioQueueProcessingTapFlags inFlags,
                                    UInt32 * outMaxFrames,
                                    AudioStreamBasicDescription * outProcessingFormat,
                                    AudioQueueProcessingTapRef _Nullable * _Nonnull outAQTap)
                                        __attribute__((availability(ios,introduced=6.0)));
extern OSStatus
AudioQueueProcessingTapDispose( AudioQueueProcessingTapRef inAQTap)
                                        __attribute__((availability(ios,introduced=6.0)));
extern OSStatus
AudioQueueProcessingTapGetSourceAudio(
                                    AudioQueueProcessingTapRef inAQTap,
                                    UInt32 inNumberFrames,
                                    AudioTimeStamp * ioTimeStamp,
                                    AudioQueueProcessingTapFlags * outFlags,
                                    UInt32 * outNumberFrames,
                                    AudioBufferList * ioData)
                                        __attribute__((availability(ios,introduced=6.0)));
extern OSStatus
AudioQueueProcessingTapGetQueueTime( AudioQueueProcessingTapRef inAQTap,
                                        Float64 * outQueueSampleTime,
                                        UInt32 * outQueueFrameCount)
                                        __attribute__((availability(ios,introduced=6.0)));


}
#pragma clang assume_nonnull end
extern "C"
{
 enum
 {
  kAudioSessionNoError = 0,
  kAudioSessionNotInitialized = '!ini',
  kAudioSessionAlreadyInitialized = 'init',
  kAudioSessionInitializationError = 'ini?',
  kAudioSessionUnsupportedPropertyError = 'pty?',
  kAudioSessionBadPropertySizeError = '!siz',
  kAudioSessionNotActiveError = '!act',
  kAudioServicesNoHardwareError = 'nohw',
  kAudioSessionNoCategorySet = '?cat',
  kAudioSessionIncompatibleCategory = '!cat',
  kAudioSessionUnspecifiedError = 'what'
 };
 typedef UInt32 AudioSessionPropertyID;
 enum {
  kAudioSessionBeginInterruption = 1,
  kAudioSessionEndInterruption = 0
 };
 enum {
  kAudioSessionCategory_AmbientSound = 'ambi',
  kAudioSessionCategory_SoloAmbientSound = 'solo',
  kAudioSessionCategory_MediaPlayback = 'medi',
  kAudioSessionCategory_RecordAudio = 'reca',
  kAudioSessionCategory_PlayAndRecord = 'plar',
  kAudioSessionCategory_AudioProcessing = 'proc'
 };
 enum {
  kAudioSessionOverrideAudioRoute_None = 0,
  kAudioSessionOverrideAudioRoute_Speaker = 'spkr'
 };
 enum {
  kAudioSessionRouteChangeReason_Unknown = 0,
  kAudioSessionRouteChangeReason_NewDeviceAvailable = 1,
  kAudioSessionRouteChangeReason_OldDeviceUnavailable = 2,
  kAudioSessionRouteChangeReason_CategoryChange = 3,
  kAudioSessionRouteChangeReason_Override = 4,
  kAudioSessionRouteChangeReason_WakeFromSleep = 6,
  kAudioSessionRouteChangeReason_NoSuitableRouteForCategory = 7,
  kAudioSessionRouteChangeReason_RouteConfigurationChange = 8
 };
 extern const CFStringRef kAudioSession_RouteChangeKey_Reason __attribute__((availability(ios,introduced=5.0,deprecated=7.0)));



 extern const CFStringRef kAudioSession_AudioRouteChangeKey_PreviousRouteDescription __attribute__((availability(ios,introduced=5.0,deprecated=7.0)));
 extern const CFStringRef kAudioSession_AudioRouteChangeKey_CurrentRouteDescription __attribute__((availability(ios,introduced=5.0,deprecated=7.0)));



 extern const CFStringRef kAudioSession_AudioRouteKey_Inputs __attribute__((availability(ios,introduced=5.0,deprecated=7.0)));
 extern const CFStringRef kAudioSession_AudioRouteKey_Outputs __attribute__((availability(ios,introduced=5.0,deprecated=7.0)));




 extern const CFStringRef kAudioSession_AudioRouteKey_Type __attribute__((availability(ios,introduced=5.0,deprecated=7.0)));
 extern const CFStringRef kAudioSessionInputRoute_LineIn __attribute__((availability(ios,introduced=5.0,deprecated=7.0)));
 extern const CFStringRef kAudioSessionInputRoute_BuiltInMic __attribute__((availability(ios,introduced=5.0,deprecated=7.0)));
 extern const CFStringRef kAudioSessionInputRoute_HeadsetMic __attribute__((availability(ios,introduced=5.0,deprecated=7.0)));
 extern const CFStringRef kAudioSessionInputRoute_BluetoothHFP __attribute__((availability(ios,introduced=5.0,deprecated=7.0)));
 extern const CFStringRef kAudioSessionInputRoute_USBAudio __attribute__((availability(ios,introduced=5.0,deprecated=7.0)));
 extern const CFStringRef kAudioSessionOutputRoute_LineOut __attribute__((availability(ios,introduced=5.0,deprecated=7.0)));
 extern const CFStringRef kAudioSessionOutputRoute_Headphones __attribute__((availability(ios,introduced=5.0,deprecated=7.0)));
 extern const CFStringRef kAudioSessionOutputRoute_BluetoothHFP __attribute__((availability(ios,introduced=5.0,deprecated=7.0)));
 extern const CFStringRef kAudioSessionOutputRoute_BluetoothA2DP __attribute__((availability(ios,introduced=5.0,deprecated=7.0)));
 extern const CFStringRef kAudioSessionOutputRoute_BuiltInReceiver __attribute__((availability(ios,introduced=5.0,deprecated=7.0)));
 extern const CFStringRef kAudioSessionOutputRoute_BuiltInSpeaker __attribute__((availability(ios,introduced=5.0,deprecated=7.0)));
 extern const CFStringRef kAudioSessionOutputRoute_USBAudio __attribute__((availability(ios,introduced=5.0,deprecated=7.0)));
 extern const CFStringRef kAudioSessionOutputRoute_HDMI __attribute__((availability(ios,introduced=5.0,deprecated=7.0)));
 extern const CFStringRef kAudioSessionOutputRoute_AirPlay __attribute__((availability(ios,introduced=5.0,deprecated=7.0)));



 extern const CFStringRef kAudioSession_InputSourceKey_ID __attribute__((availability(ios,introduced=5.0,deprecated=7.0)));
 extern const CFStringRef kAudioSession_InputSourceKey_Description __attribute__((availability(ios,introduced=5.0,deprecated=7.0)));


 extern const CFStringRef kAudioSession_OutputDestinationKey_ID __attribute__((availability(ios,introduced=5.0,deprecated=7.0)));
 extern const CFStringRef kAudioSession_OutputDestinationKey_Description __attribute__((availability(ios,introduced=5.0,deprecated=7.0)));
 enum {
  kAudioSessionInterruptionType_ShouldResume = 'irsm',
  kAudioSessionInterruptionType_ShouldNotResume = '!rsm'
 };
 typedef UInt32 AudioSessionInterruptionType;
 enum {
  kAudioSessionMode_Default = 'dflt',
  kAudioSessionMode_VoiceChat = 'vcct',
  kAudioSessionMode_VideoRecording = 'vrcd',
  kAudioSessionMode_Measurement = 'msmt',
  kAudioSessionMode_GameChat = 'gmct'
 };
 enum {
  kAudioSessionProperty_PreferredHardwareSampleRate = 'hwsr',
  kAudioSessionProperty_PreferredHardwareIOBufferDuration = 'iobd',
  kAudioSessionProperty_AudioCategory = 'acat',
  kAudioSessionProperty_AudioRouteChange = 'roch',
  kAudioSessionProperty_CurrentHardwareSampleRate = 'chsr',
  kAudioSessionProperty_CurrentHardwareInputNumberChannels = 'chic',
  kAudioSessionProperty_CurrentHardwareOutputNumberChannels = 'choc',
  kAudioSessionProperty_CurrentHardwareOutputVolume = 'chov',
  kAudioSessionProperty_CurrentHardwareInputLatency = 'cilt',
  kAudioSessionProperty_CurrentHardwareOutputLatency = 'colt',
  kAudioSessionProperty_CurrentHardwareIOBufferDuration = 'chbd',
  kAudioSessionProperty_OtherAudioIsPlaying = 'othr',
  kAudioSessionProperty_OverrideAudioRoute = 'ovrd',
  kAudioSessionProperty_AudioInputAvailable = 'aiav',
  kAudioSessionProperty_ServerDied = 'died',
  kAudioSessionProperty_OtherMixableAudioShouldDuck = 'duck',
  kAudioSessionProperty_OverrideCategoryMixWithOthers = 'cmix',
  kAudioSessionProperty_OverrideCategoryDefaultToSpeaker = 'cspk',
  kAudioSessionProperty_OverrideCategoryEnableBluetoothInput = 'cblu',
  kAudioSessionProperty_InterruptionType = 'type',
  kAudioSessionProperty_Mode = 'mode',
  kAudioSessionProperty_InputSources = 'srcs',
  kAudioSessionProperty_OutputDestinations = 'dsts',
  kAudioSessionProperty_InputSource = 'isrc',
  kAudioSessionProperty_OutputDestination = 'odst',
  kAudioSessionProperty_InputGainAvailable = 'igav',
  kAudioSessionProperty_InputGainScalar = 'igsc',
  kAudioSessionProperty_AudioRouteDescription = 'crar'
 };
 typedef void (*AudioSessionInterruptionListener)(
              void * inClientData,
              UInt32 inInterruptionState);
 typedef void (*AudioSessionPropertyListener)(
             void * inClientData,
             AudioSessionPropertyID inID,
             UInt32 inDataSize,
             const void * inData);
 extern OSStatus
 AudioSessionInitialize( CFRunLoopRef inRunLoop,
         CFStringRef inRunLoopMode,
         AudioSessionInterruptionListener inInterruptionListener,
         void *inClientData)
 __attribute__((availability(ios,introduced=2.0,deprecated=7.0)));
 extern OSStatus
 AudioSessionSetActive( Boolean active)
 __attribute__((availability(ios,introduced=2.0,deprecated=7.0)));
 enum {
  kAudioSessionSetActiveFlag_NotifyOthersOnDeactivation = (1 << 0)
 };
 extern OSStatus
 AudioSessionSetActiveWithFlags( Boolean active,
           UInt32 inFlags)
 __attribute__((availability(ios,introduced=4.0,deprecated=7.0)));
 extern OSStatus
 AudioSessionGetProperty( AudioSessionPropertyID inID,
       UInt32 *ioDataSize,
       void *outData)
 __attribute__((availability(ios,introduced=2.0,deprecated=7.0)));
 extern OSStatus
 AudioSessionSetProperty( AudioSessionPropertyID inID,
       UInt32 inDataSize,
       const void *inData)
 __attribute__((availability(ios,introduced=2.0,deprecated=7.0)));
 extern OSStatus
 AudioSessionGetPropertySize( AudioSessionPropertyID inID,
        UInt32 *outDataSize)
 __attribute__((availability(ios,introduced=2.0,deprecated=7.0)));
 extern OSStatus
 AudioSessionAddPropertyListener( AudioSessionPropertyID inID,
                                    AudioSessionPropertyListener inProc,
                                    void *inClientData)
 __attribute__((availability(ios,introduced=2.0,deprecated=7.0)));






 extern OSStatus
 AudioSessionRemovePropertyListener( AudioSessionPropertyID inID)
 __attribute__((availability(ios,introduced=2.0,deprecated=2.0)));
 extern OSStatus
 AudioSessionRemovePropertyListenerWithUserData( AudioSessionPropertyID inID,
               AudioSessionPropertyListener inProc,
               void *inClientData)
 __attribute__((availability(ios,introduced=2.1,deprecated=7.0)));
 enum {
  kAudioSessionCategory_UserInterfaceSoundEffects = 'uifx',
  kAudioSessionCategory_LiveAudio = 'live'
 };







 enum {
  kAudioSessionProperty_AudioRoute = 'rout',
 };
}
#pragma clang assume_nonnull begin


extern "C"
{
enum
{
 kAudioServicesNoError = 0,
 kAudioServicesUnsupportedPropertyError = 'pty?',
 kAudioServicesBadPropertySizeError = '!siz',
 kAudioServicesBadSpecifierSizeError = '!spc',

 kAudioServicesSystemSoundUnspecifiedError = -1500,
 kAudioServicesSystemSoundClientTimedOutError = -1501,
    kAudioServicesSystemSoundExceededMaximumDurationError = -1502
};
typedef UInt32 SystemSoundID;





typedef UInt32 AudioServicesPropertyID;
typedef void
(*AudioServicesSystemSoundCompletionProc)( SystemSoundID ssID,
                                         void* _Nullable clientData);
enum
{
    kSystemSoundID_Vibrate = 0x00000FFF
};
enum
{
    kAudioServicesPropertyIsUISound = 'isui',
    kAudioServicesPropertyCompletePlaybackIfAppDies = 'ifdi'
};
extern OSStatus
AudioServicesCreateSystemSoundID( CFURLRef inFileURL,
                                    SystemSoundID* outSystemSoundID)
                                                                __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioServicesDisposeSystemSoundID(SystemSoundID inSystemSoundID)
                                                                __attribute__((availability(ios,introduced=2.0)));
extern void
AudioServicesPlayAlertSoundWithCompletion( SystemSoundID inSystemSoundID,
                                            void (^_Nullable inCompletionBlock)(void))
                                                                    __attribute__((availability(ios,introduced=9.0)));
extern void
AudioServicesPlaySystemSoundWithCompletion( SystemSoundID inSystemSoundID,
                                                void (^_Nullable inCompletionBlock)(void))
                                                                        __attribute__((availability(ios,introduced=9.0)));
extern OSStatus
AudioServicesGetPropertyInfo( AudioServicesPropertyID inPropertyID,
                              UInt32 inSpecifierSize,
                              const void * _Nullable inSpecifier,
                              UInt32 * _Nullable outPropertyDataSize,
                              Boolean * _Nullable outWritable)
                                                                    __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioServicesGetProperty( AudioServicesPropertyID inPropertyID,
                            UInt32 inSpecifierSize,
                            const void * _Nullable inSpecifier,
                            UInt32 * ioPropertyDataSize,
                            void * _Nullable outPropertyData)
                                                                __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioServicesSetProperty( AudioServicesPropertyID inPropertyID,
                            UInt32 inSpecifierSize,
                            const void * _Nullable inSpecifier,
                            UInt32 inPropertyDataSize,
                            const void * inPropertyData)
                                                                __attribute__((availability(ios,introduced=2.0)));
extern void
AudioServicesPlayAlertSound(SystemSoundID inSystemSoundID)
                                                                __attribute__((availability(ios,introduced=2.0)));
extern void
AudioServicesPlaySystemSound(SystemSoundID inSystemSoundID)
                                                                __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
AudioServicesAddSystemSoundCompletion( SystemSoundID inSystemSoundID,
                                     CFRunLoopRef _Nullable inRunLoop,
                                     CFStringRef _Nullable inRunLoopMode,
                                     AudioServicesSystemSoundCompletionProc inCompletionRoutine,
                                     void * _Nullable inClientData)
                                                                    __attribute__((availability(ios,introduced=2.0)));
extern void
AudioServicesRemoveSystemSoundCompletion(SystemSoundID inSystemSoundID)
                                                                    __attribute__((availability(ios,introduced=2.0)));
#pragma clang assume_nonnull end



}


enum {
 kCAF_FileType = 'caff',
 kCAF_FileVersion_Initial = 1
};


enum {
 kCAF_StreamDescriptionChunkID = 'desc',
 kCAF_AudioDataChunkID = 'data',
 kCAF_ChannelLayoutChunkID = 'chan',
 kCAF_FillerChunkID = 'free',
 kCAF_MarkerChunkID = 'mark',
 kCAF_RegionChunkID = 'regn',
 kCAF_InstrumentChunkID = 'inst',
 kCAF_MagicCookieID = 'kuki',
 kCAF_InfoStringsChunkID = 'info',
 kCAF_EditCommentsChunkID = 'edct',
 kCAF_PacketTableChunkID = 'pakt',
 kCAF_StringsChunkID = 'strg',
 kCAF_UUIDChunkID = 'uuid',
 kCAF_PeakChunkID = 'peak',
 kCAF_OverviewChunkID = 'ovvw',
 kCAF_MIDIChunkID = 'midi',
 kCAF_UMIDChunkID = 'umid',
 kCAF_FormatListID = 'ldsc',
 kCAF_iXMLChunkID = 'iXML'
};


struct CAFFileHeader
{
        UInt32 mFileType;
  UInt16 mFileVersion;
  UInt16 mFileFlags;
} __attribute__((__packed__));
typedef struct CAFFileHeader CAFFileHeader;


struct CAFChunkHeader
{
        UInt32 mChunkType;
        SInt64 mChunkSize;


} __attribute__((__packed__));

typedef struct CAFChunkHeader CAFChunkHeader;

struct CAF_UUID_ChunkHeader
{
        CAFChunkHeader mHeader;
        UInt8 mUUID[16];
} __attribute__((__packed__));
typedef struct CAF_UUID_ChunkHeader CAF_UUID_ChunkHeader;





typedef UInt32 CAFFormatFlags; enum
{
    kCAFLinearPCMFormatFlagIsFloat = (1L << 0),
    kCAFLinearPCMFormatFlagIsLittleEndian = (1L << 1)
};


struct CAFAudioDescription
{
        Float64 mSampleRate;
        UInt32 mFormatID;
        CAFFormatFlags mFormatFlags;
        UInt32 mBytesPerPacket;
        UInt32 mFramesPerPacket;
        UInt32 mChannelsPerFrame;
        UInt32 mBitsPerChannel;
} __attribute__((__packed__));
typedef struct CAFAudioDescription CAFAudioDescription;







struct CAFAudioFormatListItem
{
 CAFAudioDescription mFormat;
 UInt32 mChannelLayoutTag;
} __attribute__((__packed__));
struct CAFPacketTableHeader
{
        SInt64 mNumberPackets;
        SInt64 mNumberValidFrames;
        SInt32 mPrimingFrames;
        SInt32 mRemainderFrames;

  UInt8 mPacketDescriptions[1];
} __attribute__((__packed__));
typedef struct CAFPacketTableHeader CAFPacketTableHeader;

struct CAFDataChunk
{
  UInt32 mEditCount;
  UInt8 mData[1];
} __attribute__((__packed__));
typedef struct CAFDataChunk CAFDataChunk;


enum {
 kCAFMarkerType_Generic = 0,
 kCAFMarkerType_ProgramStart = 'pbeg',
 kCAFMarkerType_ProgramEnd = 'pend',
 kCAFMarkerType_TrackStart = 'tbeg',
 kCAFMarkerType_TrackEnd = 'tend',
 kCAFMarkerType_Index = 'indx',
 kCAFMarkerType_RegionStart = 'rbeg',
 kCAFMarkerType_RegionEnd = 'rend',
 kCAFMarkerType_RegionSyncPoint = 'rsyc',
 kCAFMarkerType_SelectionStart = 'sbeg',
 kCAFMarkerType_SelectionEnd = 'send',
 kCAFMarkerType_EditSourceBegin = 'cbeg',
 kCAFMarkerType_EditSourceEnd = 'cend',
 kCAFMarkerType_EditDestinationBegin = 'dbeg',
 kCAFMarkerType_EditDestinationEnd = 'dend',
 kCAFMarkerType_SustainLoopStart = 'slbg',
 kCAFMarkerType_SustainLoopEnd = 'slen',
 kCAFMarkerType_ReleaseLoopStart = 'rlbg',
 kCAFMarkerType_ReleaseLoopEnd = 'rlen',
 kCAFMarkerType_SavedPlayPosition = 'sply',
 kCAFMarkerType_Tempo = 'tmpo',
 kCAFMarkerType_TimeSignature = 'tsig',
 kCAFMarkerType_KeySignature = 'ksig'
};

enum
{
    kCAF_SMPTE_TimeTypeNone = 0,
    kCAF_SMPTE_TimeType24 = 1,
    kCAF_SMPTE_TimeType25 = 2,
    kCAF_SMPTE_TimeType30Drop = 3,
    kCAF_SMPTE_TimeType30 = 4,
    kCAF_SMPTE_TimeType2997 = 5,
    kCAF_SMPTE_TimeType2997Drop = 6,
    kCAF_SMPTE_TimeType60 = 7,
    kCAF_SMPTE_TimeType5994 = 8,
    kCAF_SMPTE_TimeType60Drop = 9,
    kCAF_SMPTE_TimeType5994Drop = 10,
    kCAF_SMPTE_TimeType50 = 11,
    kCAF_SMPTE_TimeType2398 = 12
};

struct CAF_SMPTE_Time
{
 SInt8 mHours;
 SInt8 mMinutes;
 SInt8 mSeconds;
 SInt8 mFrames;
 UInt32 mSubFrameSampleOffset;
} __attribute__((__packed__));
typedef struct CAF_SMPTE_Time CAF_SMPTE_Time;

struct CAFMarker
{
        UInt32 mType;
        Float64 mFramePosition;
        UInt32 mMarkerID;
        CAF_SMPTE_Time mSMPTETime;
        UInt32 mChannel;
} __attribute__((__packed__));
typedef struct CAFMarker CAFMarker;

struct CAFMarkerChunk
{
        UInt32 mSMPTE_TimeType;
        UInt32 mNumberMarkers;
        CAFMarker mMarkers[1];
} __attribute__((__packed__));
typedef struct CAFMarkerChunk CAFMarkerChunk;



typedef UInt32 CAFRegionFlags; enum {
 kCAFRegionFlag_LoopEnable = 1,
 kCAFRegionFlag_PlayForward = 2,
 kCAFRegionFlag_PlayBackward = 4
};

struct CAFRegion
{
        UInt32 mRegionID;
        CAFRegionFlags mFlags;
        UInt32 mNumberMarkers;
        CAFMarker mMarkers[1];
} __attribute__((__packed__));
typedef struct CAFRegion CAFRegion;






struct CAFRegionChunk
{
        UInt32 mSMPTE_TimeType;
        UInt32 mNumberRegions;
        CAFRegion mRegions[1];
} __attribute__((__packed__));
typedef struct CAFRegionChunk CAFRegionChunk;



struct CAFInstrumentChunk
{
        Float32 mBaseNote;
        UInt8 mMIDILowNote;
        UInt8 mMIDIHighNote;
        UInt8 mMIDILowVelocity;
        UInt8 mMIDIHighVelocity;
        Float32 mdBGain;
        UInt32 mStartRegionID;
        UInt32 mSustainRegionID;
        UInt32 mReleaseRegionID;
        UInt32 mInstrumentID;
} __attribute__((__packed__));
typedef struct CAFInstrumentChunk CAFInstrumentChunk;



struct CAFStringID {
        UInt32 mStringID;
        SInt64 mStringStartByteOffset;
} __attribute__((__packed__));
typedef struct CAFStringID CAFStringID;

struct CAFStrings
{
        UInt32 mNumEntries;
  CAFStringID mStringsIDs[1];


} __attribute__((__packed__));
typedef struct CAFStrings CAFStrings;


struct CAFInfoStrings
{
        UInt32 mNumEntries;






} __attribute__((__packed__));
typedef struct CAFInfoStrings CAFInfoStrings;


struct CAFPositionPeak
{
        Float32 mValue;
        UInt64 mFrameNumber;
} __attribute__((__packed__));
typedef struct CAFPositionPeak CAFPositionPeak;

struct CAFPeakChunk
{
 UInt32 mEditCount;
 CAFPositionPeak mPeaks[1];
} __attribute__((__packed__));
typedef struct CAFPeakChunk CAFPeakChunk;


struct CAFOverviewSample
{
        SInt16 mMinValue;
        SInt16 mMaxValue;
} __attribute__((__packed__));
typedef struct CAFOverviewSample CAFOverviewSample;

struct CAFOverviewChunk
{
        UInt32 mEditCount;
        UInt32 mNumFramesPerOVWSample;
        CAFOverviewSample mData[1];
} __attribute__((__packed__));
typedef struct CAFOverviewChunk CAFOverviewChunk;

struct CAFUMIDChunk
{
 UInt8 mBytes[64];
} __attribute__((__packed__));
typedef struct CAFUMIDChunk CAFUMIDChunk;
extern "C" {


#pragma clang assume_nonnull begin








typedef struct OpaqueExtAudioFile * ExtAudioFileRef;





typedef UInt32 ExtAudioFilePropertyID;
enum {
 kExtAudioFileProperty_FileDataFormat = 'ffmt',
 kExtAudioFileProperty_FileChannelLayout = 'fclo',
 kExtAudioFileProperty_ClientDataFormat = 'cfmt',
 kExtAudioFileProperty_ClientChannelLayout = 'cclo',
 kExtAudioFileProperty_CodecManufacturer = 'cman',


 kExtAudioFileProperty_AudioConverter = 'acnv',
 kExtAudioFileProperty_AudioFile = 'afil',
 kExtAudioFileProperty_FileMaxPacketSize = 'fmps',
 kExtAudioFileProperty_ClientMaxPacketSize = 'cmps',
 kExtAudioFileProperty_FileLengthFrames = '#frm',


 kExtAudioFileProperty_ConverterConfig = 'accf',
 kExtAudioFileProperty_IOBufferSizeBytes = 'iobs',
 kExtAudioFileProperty_IOBuffer = 'iobf',
 kExtAudioFileProperty_PacketTable = 'xpti'
};

enum {
 kExtAudioFileError_InvalidProperty = -66561,
 kExtAudioFileError_InvalidPropertySize = -66562,
 kExtAudioFileError_NonPCMClientFormat = -66563,
 kExtAudioFileError_InvalidChannelMap = -66564,
 kExtAudioFileError_InvalidOperationOrder = -66565,
 kExtAudioFileError_InvalidDataFormat = -66566,
 kExtAudioFileError_MaxPacketSizeUnknown = -66567,
 kExtAudioFileError_InvalidSeek = -66568,
 kExtAudioFileError_AsyncWriteTooLarge = -66569,
 kExtAudioFileError_AsyncWriteBufferOverflow = -66570
};
enum {
 kExtAudioFileError_CodecUnavailableInputConsumed = -66559,
 kExtAudioFileError_CodecUnavailableInputNotConsumed = -66560,
};
extern OSStatus
ExtAudioFileOpenURL( CFURLRef inURL,
       ExtAudioFileRef _Nullable * _Nonnull outExtAudioFile) __attribute__((availability(ios,introduced=2.1)));
extern OSStatus
ExtAudioFileWrapAudioFileID(AudioFileID inFileID,
       Boolean inForWriting,
       ExtAudioFileRef _Nullable * _Nonnull outExtAudioFile)
                   __attribute__((availability(ios,introduced=2.1)));
extern OSStatus
ExtAudioFileCreateWithURL( CFURLRef inURL,
       AudioFileTypeID inFileType,
       const AudioStreamBasicDescription * inStreamDesc,
       const AudioChannelLayout * _Nullable inChannelLayout,
                      UInt32 inFlags,
       ExtAudioFileRef _Nullable * _Nonnull outExtAudioFile)
                   __attribute__((availability(ios,introduced=2.1)));
extern OSStatus
ExtAudioFileDispose( ExtAudioFileRef inExtAudioFile)
                   __attribute__((availability(ios,introduced=2.1)));
extern OSStatus
ExtAudioFileRead( ExtAudioFileRef inExtAudioFile,
       UInt32 * ioNumberFrames,
       AudioBufferList * ioData)
                   __attribute__((availability(ios,introduced=2.1)));
extern OSStatus
ExtAudioFileWrite( ExtAudioFileRef inExtAudioFile,
       UInt32 inNumberFrames,
       const AudioBufferList * ioData)
                   __attribute__((availability(ios,introduced=2.1)));
extern OSStatus
ExtAudioFileWriteAsync( ExtAudioFileRef inExtAudioFile,
       UInt32 inNumberFrames,
       const AudioBufferList * _Nullable ioData)
                   __attribute__((availability(ios,introduced=2.1)));
extern OSStatus
ExtAudioFileSeek( ExtAudioFileRef inExtAudioFile,
       SInt64 inFrameOffset)
                   __attribute__((availability(ios,introduced=2.1)));
extern OSStatus
ExtAudioFileTell( ExtAudioFileRef inExtAudioFile,
       SInt64 * outFrameOffset)
                   __attribute__((availability(ios,introduced=2.1)));
extern OSStatus
ExtAudioFileGetPropertyInfo(ExtAudioFileRef inExtAudioFile,
       ExtAudioFilePropertyID inPropertyID,
       UInt32 * _Nullable outSize,
       Boolean * _Nullable outWritable)
                   __attribute__((availability(ios,introduced=2.1)));
extern OSStatus
ExtAudioFileGetProperty( ExtAudioFileRef inExtAudioFile,
       ExtAudioFilePropertyID inPropertyID,
       UInt32 * ioPropertyDataSize,
       void * outPropertyData)
                   __attribute__((availability(ios,introduced=2.1)));
extern OSStatus
ExtAudioFileSetProperty( ExtAudioFileRef inExtAudioFile,
       ExtAudioFilePropertyID inPropertyID,
       UInt32 inPropertyDataSize,
       const void * inPropertyData)
                   __attribute__((availability(ios,introduced=2.1)));
#pragma clang assume_nonnull end



}


#pragma clang assume_nonnull begin


extern "C" {
enum {
 kMIDIInvalidClient = -10830,
 kMIDIInvalidPort = -10831,
 kMIDIWrongEndpointType = -10832,
 kMIDINoConnection = -10833,
 kMIDIUnknownEndpoint = -10834,
 kMIDIUnknownProperty = -10835,
 kMIDIWrongPropertyType = -10836,
 kMIDINoCurrentSetup = -10837,
 kMIDIMessageSendErr = -10838,
 kMIDIServerStartErr = -10839,
 kMIDISetupFormatErr = -10840,
 kMIDIWrongThread = -10841,
 kMIDIObjectNotFound = -10842,
 kMIDIIDNotUnique = -10843,
 kMIDINotPermitted = -10844
};
typedef UInt32 MIDIObjectRef;
typedef MIDIObjectRef MIDIClientRef;
typedef MIDIObjectRef MIDIPortRef;
typedef MIDIObjectRef MIDIDeviceRef;
typedef MIDIObjectRef MIDIEntityRef;
typedef MIDIObjectRef MIDIEndpointRef;
typedef UInt64 MIDITimeStamp;







typedef SInt32 MIDIObjectType; enum {
 kMIDIObjectType_Other = -1,
 kMIDIObjectType_Device = 0,
 kMIDIObjectType_Entity = 1,
 kMIDIObjectType_Source = 2,
 kMIDIObjectType_Destination = 3,

 kMIDIObjectType_ExternalDevice = 0x10 | kMIDIObjectType_Device,
 kMIDIObjectType_ExternalEntity = 0x10 | kMIDIObjectType_Entity,
 kMIDIObjectType_ExternalSource = 0x10 | kMIDIObjectType_Source,
 kMIDIObjectType_ExternalDestination = 0x10 | kMIDIObjectType_Destination
};
static const MIDIObjectType kMIDIObjectType_ExternalMask = (MIDIObjectType)0x10;







typedef SInt32 MIDIUniqueID;

enum {
 kMIDIInvalidUniqueID = 0
};



typedef struct MIDIPacketList MIDIPacketList;
typedef struct MIDISysexSendRequest MIDISysexSendRequest;
typedef struct MIDINotification MIDINotification;
typedef void
(*MIDINotifyProc)(const MIDINotification *message, void * _Nullable refCon);
typedef void
(*MIDINotifyBlock)(const MIDINotification *message);
typedef void
(*MIDIReadProc)(const MIDIPacketList *pktlist, void * _Nullable readProcRefCon, void * _Nullable srcConnRefCon);
typedef void
(*MIDIReadBlock)(const MIDIPacketList *pktlist, void * _Nullable srcConnRefCon);
typedef void
(*MIDICompletionProc)(MIDISysexSendRequest *request);




#pragma pack(push, 4)
struct MIDIPacket
{
 MIDITimeStamp timeStamp;
 UInt16 length;
 Byte data[256];
};
typedef struct MIDIPacket MIDIPacket;
struct MIDIPacketList
{
 UInt32 numPackets;
 MIDIPacket packet[1];
};
#pragma pack(pop)
struct MIDISysexSendRequest
{
 MIDIEndpointRef destination;
 const Byte * data;
 UInt32 bytesToSend;
 Boolean complete;
 Byte reserved[3];
 MIDICompletionProc completionProc;
 void * _Nullable completionRefCon;
};
typedef SInt32 MIDINotificationMessageID; enum {
 kMIDIMsgSetupChanged = 1,
 kMIDIMsgObjectAdded = 2,
 kMIDIMsgObjectRemoved = 3,
 kMIDIMsgPropertyChanged = 4,
 kMIDIMsgThruConnectionsChanged = 5,
 kMIDIMsgSerialPortOwnerChanged = 6,
 kMIDIMsgIOError = 7
};
struct MIDINotification
{
 MIDINotificationMessageID messageID;
 UInt32 messageSize;

};
struct MIDIObjectAddRemoveNotification
{
 MIDINotificationMessageID messageID;
 UInt32 messageSize;
 MIDIObjectRef parent;
 MIDIObjectType parentType;
 MIDIObjectRef child;
 MIDIObjectType childType;
};
typedef struct MIDIObjectAddRemoveNotification MIDIObjectAddRemoveNotification;
struct MIDIObjectPropertyChangeNotification
{
 MIDINotificationMessageID messageID;
 UInt32 messageSize;
 MIDIObjectRef object;
 MIDIObjectType objectType;
 CFStringRef propertyName;
};
typedef struct MIDIObjectPropertyChangeNotification MIDIObjectPropertyChangeNotification;

struct MIDIIOErrorNotification
{
 MIDINotificationMessageID messageID;
 UInt32 messageSize;
 MIDIDeviceRef driverDevice;
 OSStatus errorCode;
};
typedef struct MIDIIOErrorNotification MIDIIOErrorNotification;
extern const CFStringRef kMIDIPropertyName __attribute__((availability(ios,introduced=4.2)));
extern const CFStringRef kMIDIPropertyManufacturer __attribute__((availability(ios,introduced=4.2)));
extern const CFStringRef kMIDIPropertyModel __attribute__((availability(ios,introduced=4.2)));
extern const CFStringRef kMIDIPropertyUniqueID __attribute__((availability(ios,introduced=4.2)));
extern const CFStringRef kMIDIPropertyDeviceID __attribute__((availability(ios,introduced=4.2)));
extern const CFStringRef kMIDIPropertyReceiveChannels __attribute__((availability(ios,introduced=4.2)));
extern const CFStringRef kMIDIPropertyTransmitChannels __attribute__((availability(ios,introduced=4.2)));
extern const CFStringRef kMIDIPropertyMaxSysExSpeed __attribute__((availability(ios,introduced=4.2)));
extern const CFStringRef kMIDIPropertyAdvanceScheduleTimeMuSec __attribute__((availability(ios,introduced=4.2)));
extern const CFStringRef kMIDIPropertyIsEmbeddedEntity __attribute__((availability(ios,introduced=4.2)));
extern const CFStringRef kMIDIPropertyIsBroadcast __attribute__((availability(ios,introduced=4.2)));
extern const CFStringRef kMIDIPropertySingleRealtimeEntity __attribute__((availability(ios,introduced=4.2)));
extern const CFStringRef kMIDIPropertyConnectionUniqueID __attribute__((availability(ios,introduced=4.2)));
extern const CFStringRef kMIDIPropertyOffline __attribute__((availability(ios,introduced=4.2)));
extern const CFStringRef kMIDIPropertyPrivate __attribute__((availability(ios,introduced=4.2)));
extern const CFStringRef kMIDIPropertyDriverOwner __attribute__((availability(ios,introduced=4.2)));
extern const CFStringRef kMIDIPropertyFactoryPatchNameFile __attribute__((availability(ios,unavailable)));
extern const CFStringRef kMIDIPropertyUserPatchNameFile __attribute__((availability(ios,unavailable)));
extern const CFStringRef kMIDIPropertyNameConfiguration __attribute__((availability(ios,introduced=4.2)));
extern const CFStringRef kMIDIPropertyImage __attribute__((availability(ios,introduced=4.2)));
extern const CFStringRef kMIDIPropertyDriverVersion __attribute__((availability(ios,introduced=4.2)));







extern const CFStringRef kMIDIPropertySupportsGeneralMIDI __attribute__((availability(ios,introduced=4.2)));







extern const CFStringRef kMIDIPropertySupportsMMC __attribute__((availability(ios,introduced=4.2)));
extern const CFStringRef kMIDIPropertyCanRoute __attribute__((availability(ios,introduced=4.2)));







extern const CFStringRef kMIDIPropertyReceivesClock __attribute__((availability(ios,introduced=4.2)));







extern const CFStringRef kMIDIPropertyReceivesMTC __attribute__((availability(ios,introduced=4.2)));







extern const CFStringRef kMIDIPropertyReceivesNotes __attribute__((availability(ios,introduced=4.2)));







extern const CFStringRef kMIDIPropertyReceivesProgramChanges __attribute__((availability(ios,introduced=4.2)));







extern const CFStringRef kMIDIPropertyReceivesBankSelectMSB __attribute__((availability(ios,introduced=4.2)));







extern const CFStringRef kMIDIPropertyReceivesBankSelectLSB __attribute__((availability(ios,introduced=4.2)));







extern const CFStringRef kMIDIPropertyTransmitsClock __attribute__((availability(ios,introduced=4.2)));







extern const CFStringRef kMIDIPropertyTransmitsMTC __attribute__((availability(ios,introduced=4.2)));







extern const CFStringRef kMIDIPropertyTransmitsNotes __attribute__((availability(ios,introduced=4.2)));







extern const CFStringRef kMIDIPropertyTransmitsProgramChanges __attribute__((availability(ios,introduced=4.2)));







extern const CFStringRef kMIDIPropertyTransmitsBankSelectMSB __attribute__((availability(ios,introduced=4.2)));







extern const CFStringRef kMIDIPropertyTransmitsBankSelectLSB __attribute__((availability(ios,introduced=4.2)));
extern const CFStringRef kMIDIPropertyPanDisruptsStereo __attribute__((availability(ios,introduced=4.2)));







extern const CFStringRef kMIDIPropertyIsSampler __attribute__((availability(ios,introduced=4.2)));







extern const CFStringRef kMIDIPropertyIsDrumMachine __attribute__((availability(ios,introduced=4.2)));







extern const CFStringRef kMIDIPropertyIsMixer __attribute__((availability(ios,introduced=4.2)));







extern const CFStringRef kMIDIPropertyIsEffectUnit __attribute__((availability(ios,introduced=4.2)));
extern const CFStringRef kMIDIPropertyMaxReceiveChannels __attribute__((availability(ios,introduced=4.2)));
extern const CFStringRef kMIDIPropertyMaxTransmitChannels __attribute__((availability(ios,introduced=4.2)));
extern const CFStringRef kMIDIPropertyDriverDeviceEditorApp __attribute__((availability(ios,introduced=4.2)));







extern const CFStringRef kMIDIPropertySupportsShowControl __attribute__((availability(ios,introduced=4.2)));
extern const CFStringRef kMIDIPropertyDisplayName __attribute__((availability(ios,introduced=4.2)));
extern OSStatus
MIDIClientCreate( CFStringRef name,
     MIDINotifyProc _Nullable notifyProc,
     void * _Nullable notifyRefCon,
     MIDIClientRef * outClient ) __attribute__((availability(ios,introduced=4.2)));
extern OSStatus
MIDIClientCreateWithBlock(
     CFStringRef name,
     MIDIClientRef * outClient,
     MIDINotifyBlock _Nullable notifyBlock ) __attribute__((availability(ios,introduced=9.0)));
extern OSStatus
MIDIClientDispose( MIDIClientRef client ) __attribute__((availability(ios,introduced=4.2)));
extern OSStatus
MIDIInputPortCreate( MIDIClientRef client,
      CFStringRef portName,
      MIDIReadProc readProc,
      void * _Nullable refCon,
      MIDIPortRef * outPort ) __attribute__((availability(ios,introduced=4.2)));
extern OSStatus
MIDIInputPortCreateWithBlock( MIDIClientRef client,
        CFStringRef portName,
        MIDIPortRef * outPort,
        MIDIReadBlock readBlock ) __attribute__((availability(ios,introduced=9.0)));
extern OSStatus
MIDIOutputPortCreate( MIDIClientRef client,
      CFStringRef portName,
      MIDIPortRef * outPort ) __attribute__((availability(ios,introduced=4.2)));
extern OSStatus
MIDIPortDispose( MIDIPortRef port ) __attribute__((availability(ios,introduced=4.2)));
extern OSStatus
MIDIPortConnectSource( MIDIPortRef port,
      MIDIEndpointRef source,
      void * _Nullable connRefCon ) __attribute__((availability(ios,introduced=4.2)));
extern OSStatus
MIDIPortDisconnectSource( MIDIPortRef port,
       MIDIEndpointRef source ) __attribute__((availability(ios,introduced=4.2)));
extern ItemCount
MIDIGetNumberOfDevices(void) __attribute__((availability(ios,introduced=4.2)));
extern MIDIDeviceRef
MIDIGetDevice( ItemCount deviceIndex0 ) __attribute__((availability(ios,introduced=4.2)));
extern ItemCount
MIDIDeviceGetNumberOfEntities( MIDIDeviceRef device ) __attribute__((availability(ios,introduced=4.2)));
extern MIDIEntityRef
MIDIDeviceGetEntity( MIDIDeviceRef device,
      ItemCount entityIndex0 ) __attribute__((availability(ios,introduced=4.2)));
extern ItemCount
MIDIEntityGetNumberOfSources( MIDIEntityRef entity ) __attribute__((availability(ios,introduced=4.2)));
extern MIDIEndpointRef
MIDIEntityGetSource( MIDIEntityRef entity,
      ItemCount sourceIndex0 ) __attribute__((availability(ios,introduced=4.2)));
extern ItemCount
MIDIEntityGetNumberOfDestinations( MIDIEntityRef entity ) __attribute__((availability(ios,introduced=4.2)));
extern MIDIEndpointRef
MIDIEntityGetDestination( MIDIEntityRef entity,
       ItemCount destIndex0 ) __attribute__((availability(ios,introduced=4.2)));
extern OSStatus
MIDIEntityGetDevice( MIDIEntityRef inEntity,
       MIDIDeviceRef * _Nullable outDevice) __attribute__((availability(ios,introduced=4.2)));
extern ItemCount
MIDIGetNumberOfSources(void) __attribute__((availability(ios,introduced=4.2)));
extern MIDIEndpointRef
MIDIGetSource( ItemCount sourceIndex0 ) __attribute__((availability(ios,introduced=4.2)));
extern ItemCount
MIDIGetNumberOfDestinations(void) __attribute__((availability(ios,introduced=4.2)));
extern MIDIEndpointRef
MIDIGetDestination( ItemCount destIndex0 ) __attribute__((availability(ios,introduced=4.2)));
extern OSStatus
MIDIEndpointGetEntity( MIDIEndpointRef inEndpoint,
       MIDIEntityRef * _Nullable outEntity) __attribute__((availability(ios,introduced=4.2)));
extern OSStatus
MIDIDestinationCreate( MIDIClientRef client,
      CFStringRef name,
      MIDIReadProc readProc,
      void * _Nullable refCon,
      MIDIEndpointRef * outDest ) __attribute__((availability(ios,introduced=4.2)));
extern OSStatus
MIDIDestinationCreateWithBlock( MIDIClientRef client,
        CFStringRef name,
        MIDIEndpointRef * outDest,
        MIDIReadBlock readBlock ) __attribute__((availability(ios,introduced=9.0)));
extern OSStatus
MIDISourceCreate( MIDIClientRef client,
     CFStringRef name,
     MIDIEndpointRef * outSrc ) __attribute__((availability(ios,introduced=4.2)));
extern OSStatus
MIDIEndpointDispose( MIDIEndpointRef endpt ) __attribute__((availability(ios,introduced=4.2)));
extern ItemCount
MIDIGetNumberOfExternalDevices(void) __attribute__((availability(ios,introduced=4.2)));
extern MIDIDeviceRef
MIDIGetExternalDevice( ItemCount deviceIndex0 ) __attribute__((availability(ios,introduced=4.2)));
extern OSStatus
MIDIObjectGetIntegerProperty( MIDIObjectRef obj,
        CFStringRef propertyID,
        SInt32 * outValue ) __attribute__((availability(ios,introduced=4.2)));
extern OSStatus
MIDIObjectSetIntegerProperty( MIDIObjectRef obj,
        CFStringRef propertyID,
        SInt32 value ) __attribute__((availability(ios,introduced=4.2)));
extern OSStatus
MIDIObjectGetStringProperty( MIDIObjectRef obj,
        CFStringRef propertyID,
        CFStringRef _Nullable * _Nonnull str ) __attribute__((availability(ios,introduced=4.2)));
extern OSStatus
MIDIObjectSetStringProperty( MIDIObjectRef obj,
        CFStringRef propertyID,
        CFStringRef str ) __attribute__((availability(ios,introduced=4.2)));
extern OSStatus
MIDIObjectGetDataProperty( MIDIObjectRef obj,
        CFStringRef propertyID,
        CFDataRef _Nullable * _Nonnull outData ) __attribute__((availability(ios,introduced=4.2)));
extern OSStatus
MIDIObjectSetDataProperty( MIDIObjectRef obj,
        CFStringRef propertyID,
        CFDataRef data ) __attribute__((availability(ios,introduced=4.2)));
extern OSStatus
MIDIObjectGetDictionaryProperty( MIDIObjectRef obj,
         CFStringRef propertyID,
         CFDictionaryRef _Nullable * _Nonnull outDict )
               __attribute__((availability(ios,introduced=4.2)));
extern OSStatus
MIDIObjectSetDictionaryProperty(MIDIObjectRef obj,
        CFStringRef propertyID,
        CFDictionaryRef dict ) __attribute__((availability(ios,introduced=4.2)));
extern OSStatus
MIDIObjectGetProperties( MIDIObjectRef obj,
        CFPropertyListRef _Nullable * _Nonnull outProperties,
        Boolean deep ) __attribute__((availability(ios,introduced=4.2)));
extern OSStatus
MIDIObjectRemoveProperty( MIDIObjectRef obj,
        CFStringRef propertyID )
               __attribute__((availability(ios,introduced=4.2)));
extern OSStatus
MIDIObjectFindByUniqueID( MIDIUniqueID inUniqueID,
       MIDIObjectRef * _Nullable outObject,
       MIDIObjectType * _Nullable outObjectType)

               __attribute__((availability(ios,introduced=4.2)));
extern OSStatus
MIDISend( MIDIPortRef port,
   MIDIEndpointRef dest,
   const MIDIPacketList * pktlist ) __attribute__((availability(ios,introduced=4.2)));
extern OSStatus
MIDISendSysex( MIDISysexSendRequest *request ) __attribute__((availability(ios,introduced=4.2)));
extern OSStatus
MIDIReceived( MIDIEndpointRef src,
    const MIDIPacketList * pktlist ) __attribute__((availability(ios,introduced=4.2)));
extern OSStatus
MIDIFlushOutput( MIDIEndpointRef dest ) __attribute__((availability(ios,introduced=4.2)));
extern OSStatus
MIDIRestart(void) __attribute__((availability(ios,introduced=4.2)));
static __inline__ __attribute__((always_inline)) MIDIPacket *MIDIPacketNext(const MIDIPacket *pkt)
{


  return (MIDIPacket *)(((uintptr_t)(&pkt->data[pkt->length]) + 3) & ~3);



}
extern MIDIPacket *
MIDIPacketListInit( MIDIPacketList *pktlist ) __attribute__((availability(ios,introduced=4.2)));
extern MIDIPacket *
MIDIPacketListAdd( MIDIPacketList * pktlist,
     ByteCount listSize,
     MIDIPacket * curPacket,
     MIDITimeStamp time,
     ByteCount nData,
     const Byte * data) __attribute__((availability(ios,introduced=4.2)));



}
#pragma clang assume_nonnull end





#pragma clang assume_nonnull begin


extern "C"
{
enum
{
 kMusicEventType_NULL = 0,
 kMusicEventType_ExtendedNote = 1,
 kMusicEventType_ExtendedTempo = 3,
 kMusicEventType_User = 4,
 kMusicEventType_Meta = 5,
 kMusicEventType_MIDINoteMessage = 6,
 kMusicEventType_MIDIChannelMessage = 7,
 kMusicEventType_MIDIRawData = 8,
 kMusicEventType_Parameter = 9,
 kMusicEventType_AUPreset = 10
};
typedef UInt32 MusicEventType;
typedef UInt32 MusicSequenceLoadFlags; enum
{
 kMusicSequenceLoadSMF_PreserveTracks = 0,
 kMusicSequenceLoadSMF_ChannelsToTracks = (1 << 0)
};
typedef UInt32 MusicSequenceType; enum {
 kMusicSequenceType_Beats = 'beat',
 kMusicSequenceType_Seconds = 'secs',
 kMusicSequenceType_Samples = 'samp'
};
typedef UInt32 MusicSequenceFileTypeID; enum {
 kMusicSequenceFile_AnyType = 0,
 kMusicSequenceFile_MIDIType = 'midi',
 kMusicSequenceFile_iMelodyType = 'imel'
};
typedef UInt32 MusicSequenceFileFlags; enum {
 kMusicSequenceFileFlags_Default = 0,
 kMusicSequenceFileFlags_EraseFile = 1
};






typedef Float64 MusicTimeStamp;
typedef struct MIDINoteMessage
{
 UInt8 channel;
 UInt8 note;
 UInt8 velocity;
 UInt8 releaseVelocity;
 Float32 duration;
} MIDINoteMessage;





typedef struct MIDIChannelMessage
{
 UInt8 status;


 UInt8 data1;
 UInt8 data2;
 UInt8 reserved;
} MIDIChannelMessage;





typedef struct MIDIRawData
{
 UInt32 length;
 UInt8 data[1];
} MIDIRawData;





typedef struct MIDIMetaEvent
{
 UInt8 metaEventType;
 UInt8 unused1;
 UInt8 unused2;
 UInt8 unused3;
 UInt32 dataLength;
 UInt8 data[1];
} MIDIMetaEvent;
typedef struct MusicEventUserData
{
 UInt32 length;
 UInt8 data[1];
} MusicEventUserData;





typedef struct ExtendedNoteOnEvent
{
 MusicDeviceInstrumentID instrumentID;
 MusicDeviceGroupID groupID;
 Float32 duration;
 MusicDeviceNoteParams extendedParams;
} ExtendedNoteOnEvent;





typedef struct ParameterEvent
{
 AudioUnitParameterID parameterID;
 AudioUnitScope scope;
    AudioUnitElement element;
 AudioUnitParameterValue value;
} ParameterEvent;





typedef struct ExtendedTempoEvent
{
 Float64 bpm;
} ExtendedTempoEvent;





typedef struct AUPresetEvent
{
 AudioUnitScope scope;
    AudioUnitElement element;
 CFPropertyListRef preset;
} AUPresetEvent;
struct CABarBeatTime {
 SInt32 bar;
 UInt16 beat;
 UInt16 subbeat;
 UInt16 subbeatDivisor;
 UInt16 reserved;
};
typedef struct CABarBeatTime CABarBeatTime;






typedef struct OpaqueMusicPlayer *MusicPlayer;
typedef struct OpaqueMusicSequence *MusicSequence;
typedef struct OpaqueMusicTrack *MusicTrack;
typedef struct OpaqueMusicEventIterator *MusicEventIterator;





typedef void (*MusicSequenceUserCallback)( void * _Nullable inClientData,
           MusicSequence inSequence,
           MusicTrack inTrack,
           MusicTimeStamp inEventTime,
           const MusicEventUserData * inEventData,
           MusicTimeStamp inStartSliceBeat,
           MusicTimeStamp inEndSliceBeat);
enum
{
 kAudioToolboxErr_InvalidSequenceType = -10846,
 kAudioToolboxErr_TrackIndexError = -10859,
 kAudioToolboxErr_TrackNotFound = -10858,
 kAudioToolboxErr_EndOfTrack = -10857,
 kAudioToolboxErr_StartOfTrack = -10856,
    kAudioToolboxErr_IllegalTrackDestination = -10855,
    kAudioToolboxErr_NoSequence = -10854,
 kAudioToolboxErr_InvalidEventType = -10853,
 kAudioToolboxErr_InvalidPlayerState = -10852,
 kAudioToolboxErr_CannotDoInCurrentContext = -10863,
 kAudioToolboxError_NoTrackDestination = -66720
};
enum
{
 kSequenceTrackProperty_LoopInfo = 0,
 kSequenceTrackProperty_OffsetTime = 1,
 kSequenceTrackProperty_MuteStatus = 2,
 kSequenceTrackProperty_SoloStatus = 3,

 kSequenceTrackProperty_AutomatedParameters = 4,

 kSequenceTrackProperty_TrackLength = 5,

 kSequenceTrackProperty_TimeResolution = 6
};






typedef struct MusicTrackLoopInfo
{
 MusicTimeStamp loopDuration;
 SInt32 numberOfLoops;
} MusicTrackLoopInfo;
extern OSStatus
NewMusicPlayer( MusicPlayer _Nullable * _Nonnull outPlayer) __attribute__((availability(ios,introduced=5.0)));






extern OSStatus
DisposeMusicPlayer( MusicPlayer inPlayer) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicPlayerSetSequence( MusicPlayer inPlayer,
      MusicSequence _Nullable inSequence) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicPlayerGetSequence( MusicPlayer inPlayer,
      MusicSequence _Nullable * _Nonnull outSequence) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicPlayerSetTime( MusicPlayer inPlayer,
      MusicTimeStamp inTime) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicPlayerGetTime( MusicPlayer inPlayer,
      MusicTimeStamp *outTime) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicPlayerGetHostTimeForBeats( MusicPlayer inPlayer,
        MusicTimeStamp inBeats,
        UInt64 * outHostTime) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicPlayerGetBeatsForHostTime( MusicPlayer inPlayer,
        UInt64 inHostTime,
        MusicTimeStamp *outBeats) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicPlayerPreroll( MusicPlayer inPlayer) __attribute__((availability(ios,introduced=5.0)));







extern OSStatus
MusicPlayerStart( MusicPlayer inPlayer) __attribute__((availability(ios,introduced=5.0)));






extern OSStatus
MusicPlayerStop( MusicPlayer inPlayer) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicPlayerIsPlaying( MusicPlayer inPlayer,
      Boolean * outIsPlaying) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicPlayerSetPlayRateScalar( MusicPlayer inPlayer,
        Float64 inScaleRate) __attribute__((availability(ios,introduced=5.0)));







extern OSStatus
MusicPlayerGetPlayRateScalar( MusicPlayer inPlayer,
        Float64 * outScaleRate) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
NewMusicSequence( MusicSequence _Nullable * _Nonnull outSequence) __attribute__((availability(ios,introduced=5.0)));







extern OSStatus
DisposeMusicSequence( MusicSequence inSequence) __attribute__((availability(ios,introduced=5.0)));







extern OSStatus
MusicSequenceNewTrack( MusicSequence inSequence,
       MusicTrack _Nullable * _Nonnull outTrack) __attribute__((availability(ios,introduced=5.0)));







extern OSStatus
MusicSequenceDisposeTrack( MusicSequence inSequence,
       MusicTrack inTrack) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicSequenceGetTrackCount( MusicSequence inSequence,
       UInt32 *outNumberOfTracks) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicSequenceGetIndTrack( MusicSequence inSequence,
       UInt32 inTrackIndex,
       MusicTrack _Nullable * _Nonnull outTrack) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicSequenceGetTrackIndex( MusicSequence inSequence,
       MusicTrack inTrack,
       UInt32 *outTrackIndex) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicSequenceGetTempoTrack( MusicSequence inSequence,
       MusicTrack _Nullable * _Nonnull outTrack) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicSequenceSetAUGraph( MusicSequence inSequence,
       AUGraph _Nullable inGraph) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicSequenceGetAUGraph( MusicSequence inSequence,
       AUGraph _Nullable * _Nonnull outGraph) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicSequenceSetMIDIEndpoint( MusicSequence inSequence,
        MIDIEndpointRef inEndpoint) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern OSStatus
MusicSequenceSetSequenceType( MusicSequence inSequence,
       MusicSequenceType inType) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicSequenceGetSequenceType( MusicSequence inSequence,
       MusicSequenceType * outType) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicSequenceFileLoad (MusicSequence inSequence,
      CFURLRef inFileRef,
      MusicSequenceFileTypeID inFileTypeHint,
      MusicSequenceLoadFlags inFlags) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicSequenceFileLoadData (MusicSequence inSequence,
      CFDataRef inData,
      MusicSequenceFileTypeID inFileTypeHint,
      MusicSequenceLoadFlags inFlags) __attribute__((availability(ios,introduced=5.0)));
static __inline__ __attribute__((always_inline)) SInt16
MusicSequenceSetSMPTEResolution (SignedByte fps, Byte ticks)
{
 SInt8 res8 = fps < 0 ? fps : -fps;
 SInt16 res = (SInt16) (res8 << 8);
 res += ticks;
 return res;
}
static __inline__ __attribute__((always_inline)) void
MusicSequenceGetSMPTEResolution (SInt16 inRes, SignedByte * fps, Byte * ticks)
{
 *fps = (SignedByte)((0xFF00 & inRes) >> 8);
 *ticks = 0x7F & inRes;
}
extern OSStatus
MusicSequenceFileCreate (MusicSequence inSequence,
      CFURLRef inFileRef,
      MusicSequenceFileTypeID inFileType,
      MusicSequenceFileFlags inFlags,
      SInt16 inResolution) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicSequenceFileCreateData (MusicSequence inSequence,
      MusicSequenceFileTypeID inFileType,
      MusicSequenceFileFlags inFlags,
      SInt16 inResolution,
      CFDataRef _Nullable * _Nonnull outData) __attribute__((availability(ios,introduced=5.0)));







extern OSStatus
MusicSequenceReverse( MusicSequence inSequence) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicSequenceGetSecondsForBeats( MusicSequence inSequence,
         MusicTimeStamp inBeats,
         Float64 * outSeconds) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicSequenceGetBeatsForSeconds( MusicSequence inSequence,
         Float64 inSeconds,
         MusicTimeStamp * outBeats) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicSequenceSetUserCallback( MusicSequence inSequence,
        MusicSequenceUserCallback _Nullable inCallback,
        void * _Nullable inClientData) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicSequenceBeatsToBarBeatTime(MusicSequence inSequence,
        MusicTimeStamp inBeats,
        UInt32 inSubbeatDivisor,
        CABarBeatTime * outBarBeatTime) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicSequenceBarBeatTimeToBeats(MusicSequence inSequence,
        const CABarBeatTime * inBarBeatTime,
        MusicTimeStamp * outBeats) __attribute__((availability(ios,introduced=5.0)));
extern CFDictionaryRef
MusicSequenceGetInfoDictionary( MusicSequence inSequence) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicTrackGetSequence( MusicTrack inTrack,
      MusicSequence _Nullable * _Nonnull outSequence) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicTrackSetDestNode( MusicTrack inTrack,
      AUNode inNode) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicTrackSetDestMIDIEndpoint( MusicTrack inTrack,
        MIDIEndpointRef inEndpoint) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern OSStatus
MusicTrackGetDestNode( MusicTrack inTrack,
        AUNode * outNode) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicTrackGetDestMIDIEndpoint( MusicTrack inTrack,
        MIDIEndpointRef * outEndpoint) __attribute__((availability(ios,introduced=5.0))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
extern OSStatus
MusicTrackSetProperty( MusicTrack inTrack,
      UInt32 inPropertyID,
      void *inData,
      UInt32 inLength) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicTrackGetProperty( MusicTrack inTrack,
      UInt32 inPropertyID,
      void *outData,
      UInt32 *ioLength) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicTrackMoveEvents( MusicTrack inTrack,
      MusicTimeStamp inStartTime,
      MusicTimeStamp inEndTime,
      MusicTimeStamp inMoveTime) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicTrackClear( MusicTrack inTrack,
      MusicTimeStamp inStartTime,
      MusicTimeStamp inEndTime) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicTrackCut( MusicTrack inTrack,
      MusicTimeStamp inStartTime,
      MusicTimeStamp inEndTime) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicTrackCopyInsert( MusicTrack inSourceTrack,
      MusicTimeStamp inSourceStartTime,
      MusicTimeStamp inSourceEndTime,
      MusicTrack inDestTrack,
      MusicTimeStamp inDestInsertTime) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicTrackMerge( MusicTrack inSourceTrack,
      MusicTimeStamp inSourceStartTime,
      MusicTimeStamp inSourceEndTime,
      MusicTrack inDestTrack,
      MusicTimeStamp inDestInsertTime) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicTrackNewMIDINoteEvent( MusicTrack inTrack,
         MusicTimeStamp inTimeStamp,
         const MIDINoteMessage * inMessage) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicTrackNewMIDIChannelEvent( MusicTrack inTrack,
         MusicTimeStamp inTimeStamp,
         const MIDIChannelMessage * inMessage) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicTrackNewMIDIRawDataEvent( MusicTrack inTrack,
         MusicTimeStamp inTimeStamp,
         const MIDIRawData * inRawData) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicTrackNewExtendedNoteEvent( MusicTrack inTrack,
         MusicTimeStamp inTimeStamp,
         const ExtendedNoteOnEvent *inInfo) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicTrackNewParameterEvent( MusicTrack inTrack,
         MusicTimeStamp inTimeStamp,
         const ParameterEvent * inInfo) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicTrackNewExtendedTempoEvent( MusicTrack inTrack,
         MusicTimeStamp inTimeStamp,
         Float64 inBPM) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicTrackNewMetaEvent( MusicTrack inTrack,
         MusicTimeStamp inTimeStamp,
         const MIDIMetaEvent * inMetaEvent) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicTrackNewUserEvent( MusicTrack inTrack,
         MusicTimeStamp inTimeStamp,
         const MusicEventUserData * inUserData) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicTrackNewAUPresetEvent( MusicTrack inTrack,
         MusicTimeStamp inTimeStamp,
         const AUPresetEvent * inPresetEvent) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
NewMusicEventIterator( MusicTrack inTrack,
       MusicEventIterator _Nullable * _Nonnull outIterator) __attribute__((availability(ios,introduced=5.0)));






extern OSStatus
DisposeMusicEventIterator( MusicEventIterator inIterator) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicEventIteratorSeek( MusicEventIterator inIterator,
         MusicTimeStamp inTimeStamp) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicEventIteratorNextEvent( MusicEventIterator inIterator) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicEventIteratorPreviousEvent( MusicEventIterator inIterator) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicEventIteratorGetEventInfo( MusicEventIterator inIterator,
         MusicTimeStamp * outTimeStamp,
         MusicEventType * outEventType,
         const void * _Nullable * _Nonnull outEventData,
         UInt32 * outEventDataSize) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicEventIteratorSetEventInfo( MusicEventIterator inIterator,
         MusicEventType inEventType,
         const void * inEventData) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicEventIteratorSetEventTime( MusicEventIterator inIterator,
         MusicTimeStamp inTimeStamp) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicEventIteratorDeleteEvent( MusicEventIterator inIterator) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicEventIteratorHasPreviousEvent( MusicEventIterator inIterator,
         Boolean * outHasPrevEvent) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicEventIteratorHasNextEvent( MusicEventIterator inIterator,
         Boolean * outHasNextEvent) __attribute__((availability(ios,introduced=5.0)));







extern OSStatus
MusicEventIteratorHasCurrentEvent( MusicEventIterator inIterator,
         Boolean * outHasCurEvent) __attribute__((availability(ios,introduced=5.0)));
extern OSStatus
MusicSequenceLoadSMFWithFlags( MusicSequence inSequence,
         const struct FSRef * inFileRef,
         MusicSequenceLoadFlags inFlags) __attribute__((availability(ios,unavailable)));

extern OSStatus
MusicSequenceLoadSMFDataWithFlags( MusicSequence inSequence,
         CFDataRef inData,
         MusicSequenceLoadFlags inFlags) __attribute__((availability(ios,unavailable)));

extern OSStatus
MusicSequenceSaveMIDIFile( MusicSequence inSequence,
       const struct FSRef *inParentDirectory,
       CFStringRef inFileName,
       UInt16 inResolution,
       UInt32 inFlags) __attribute__((availability(ios,unavailable)));

extern OSStatus
MusicSequenceSaveSMFData( MusicSequence inSequence,
       CFDataRef _Nullable * _Nonnull outData,
       UInt16 inResolution) __attribute__((availability(ios,unavailable)));

extern OSStatus
NewMusicTrackFrom( MusicTrack inSourceTrack,
      MusicTimeStamp inSourceStartTime,
      MusicTimeStamp inSourceEndTime,
      MusicTrack _Nullable * _Nonnull outNewTrack) __attribute__((availability(ios,unavailable)));
}
#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin


extern "C"
{



extern void CAShow (void* inObject)
           __attribute__((availability(ios,introduced=2.0)));


extern void CAShowFile (void* inObject, FILE* inFile)
           __attribute__((availability(ios,introduced=2.0)));
extern OSStatus
CopyNameFromSoundBank (CFURLRef inURL, CFStringRef _Nullable * _Nonnull outName)
           __attribute__((availability(ios,introduced=7.0)));
extern OSStatus CopyInstrumentInfoFromSoundBank (CFURLRef inURL, CFArrayRef _Nullable * _Nonnull outInstrumentInfo)
              __attribute__((availability(ios,introduced=7.0)));







}
#pragma clang assume_nonnull end


extern "C"
{


#pragma pack(push, 4)

typedef const struct __attribute__((objc_bridge(id))) opaqueMTAudioProcessingTap *MTAudioProcessingTapRef;

extern CFTypeID MTAudioProcessingTapGetTypeID(void) __attribute__((availability(ios,introduced=6.0)));
typedef uint32_t MTAudioProcessingTapCreationFlags;



enum

{
 kMTAudioProcessingTapCreationFlag_PreEffects = (1 << 0),
 kMTAudioProcessingTapCreationFlag_PostEffects = (1 << 1),
};
typedef uint32_t MTAudioProcessingTapFlags;



enum

{

 kMTAudioProcessingTapFlag_StartOfStream = (1 << 8),
    kMTAudioProcessingTapFlag_EndOfStream = (1 << 9),
};
typedef void (*MTAudioProcessingTapInitCallback)(
  MTAudioProcessingTapRef _Nonnull tap,
  void * _Nullable clientInfo,
  void * _Nullable * _Nonnull tapStorageOut);
typedef void (*MTAudioProcessingTapFinalizeCallback)(MTAudioProcessingTapRef _Nonnull tap);
typedef void (*MTAudioProcessingTapPrepareCallback)(
  MTAudioProcessingTapRef _Nonnull tap,
  CMItemCount maxFrames,
  const AudioStreamBasicDescription * _Nonnull processingFormat);
typedef void (*MTAudioProcessingTapUnprepareCallback)(MTAudioProcessingTapRef _Nonnull tap);
typedef void (*MTAudioProcessingTapProcessCallback)(
  MTAudioProcessingTapRef _Nonnull tap,
  CMItemCount numberFrames,
  MTAudioProcessingTapFlags flags,
  AudioBufferList * _Nonnull bufferListInOut,
  CMItemCount * _Nonnull numberFramesOut,
  MTAudioProcessingTapFlags * _Nonnull flagsOut);




enum

{
 kMTAudioProcessingTapCallbacksVersion_0 = 0,
};
typedef struct {
 int version;
 void* _Nullable clientInfo;
 MTAudioProcessingTapInitCallback _Nullable init;
 MTAudioProcessingTapFinalizeCallback _Nullable finalize;
 MTAudioProcessingTapPrepareCallback _Nullable prepare;
 MTAudioProcessingTapUnprepareCallback _Nullable unprepare;
 MTAudioProcessingTapProcessCallback _Nonnull process;
} MTAudioProcessingTapCallbacks;
extern OSStatus MTAudioProcessingTapCreate(
  CFAllocatorRef _Nullable allocator,
  const MTAudioProcessingTapCallbacks * _Nonnull callbacks,
  MTAudioProcessingTapCreationFlags flags,
  MTAudioProcessingTapRef _Nullable * _Nonnull tapOut) __attribute__((availability(ios,introduced=6.0)));
extern void* _Nonnull MTAudioProcessingTapGetStorage(_Nonnull MTAudioProcessingTapRef tap) __attribute__((availability(ios,introduced=6.0)));
extern OSStatus MTAudioProcessingTapGetSourceAudio(
  MTAudioProcessingTapRef _Nonnull tap,
  CMItemCount numberFrames,
  AudioBufferList * _Nonnull bufferListInOut,
  MTAudioProcessingTapFlags * _Nullable flagsOut,
  CMTimeRange * _Nullable timeRangeOut,
  CMItemCount * _Nullable numberFramesOut) __attribute__((availability(ios,introduced=6.0)));

#pragma pack(pop)


}
// @class AVAudioMixInternal;
#ifndef _REWRITER_typedef_AVAudioMixInternal
#define _REWRITER_typedef_AVAudioMixInternal
typedef struct objc_object AVAudioMixInternal;
typedef struct {} _objc_exc_AVAudioMixInternal;
#endif

// @class AVAudioMixInputParameters;
#ifndef _REWRITER_typedef_AVAudioMixInputParameters
#define _REWRITER_typedef_AVAudioMixInputParameters
typedef struct objc_object AVAudioMixInputParameters;
typedef struct {} _objc_exc_AVAudioMixInputParameters;
#endif


#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0)))

#ifndef _REWRITER_typedef_AVAudioMix
#define _REWRITER_typedef_AVAudioMix
typedef struct objc_object AVAudioMix;
typedef struct {} _objc_exc_AVAudioMix;
#endif

struct AVAudioMix_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVAudioMixInternal *__strong _audioMix;
};



// @property (nonatomic, readonly, copy) NSArray<AVAudioMixInputParameters *> *inputParameters;

/* @end */



// @class AVMutableAudioMixInternal;
#ifndef _REWRITER_typedef_AVMutableAudioMixInternal
#define _REWRITER_typedef_AVMutableAudioMixInternal
typedef struct objc_object AVMutableAudioMixInternal;
typedef struct {} _objc_exc_AVMutableAudioMixInternal;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0)))

#ifndef _REWRITER_typedef_AVMutableAudioMix
#define _REWRITER_typedef_AVMutableAudioMix
typedef struct objc_object AVMutableAudioMix;
typedef struct {} _objc_exc_AVMutableAudioMix;
#endif

struct AVMutableAudioMix_IMPL {
	struct AVAudioMix_IMPL AVAudioMix_IVARS;
	AVMutableAudioMixInternal *__strong _mutableAudioMix;
};






// + (instancetype)audioMix;






// @property (nonatomic, copy) NSArray<AVAudioMixInputParameters *> *inputParameters;

/* @end */

// @class AVAudioMixInputParametersInternal;
#ifndef _REWRITER_typedef_AVAudioMixInputParametersInternal
#define _REWRITER_typedef_AVAudioMixInputParametersInternal
typedef struct objc_object AVAudioMixInputParametersInternal;
typedef struct {} _objc_exc_AVAudioMixInputParametersInternal;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0)))

#ifndef _REWRITER_typedef_AVAudioMixInputParameters
#define _REWRITER_typedef_AVAudioMixInputParameters
typedef struct objc_object AVAudioMixInputParameters;
typedef struct {} _objc_exc_AVAudioMixInputParameters;
#endif

struct AVAudioMixInputParameters_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVAudioMixInputParametersInternal *__strong _inputParameters;
};






// @property (nonatomic, readonly) CMPersistentTrackID trackID;
// @property (nonatomic, readonly, copy, nullable) AVAudioTimePitchAlgorithm audioTimePitchAlgorithm __attribute__((availability(ios,introduced=7_0)));





// @property (nonatomic, readonly, retain, nullable) __attribute__((NSObject)) MTAudioProcessingTapRef audioTapProcessor __attribute__((availability(ios,introduced=6_0)));
// - (BOOL)getVolumeRampForTime:(CMTime)time startVolume:(nullable float *)startVolume endVolume:(nullable float *)endVolume timeRange:(nullable CMTimeRange *)timeRange;

/* @end */



// @class AVAssetTrack;
#ifndef _REWRITER_typedef_AVAssetTrack
#define _REWRITER_typedef_AVAssetTrack
typedef struct objc_object AVAssetTrack;
typedef struct {} _objc_exc_AVAssetTrack;
#endif

// @class AVPlayerItemTrack;
#ifndef _REWRITER_typedef_AVPlayerItemTrack
#define _REWRITER_typedef_AVPlayerItemTrack
typedef struct objc_object AVPlayerItemTrack;
typedef struct {} _objc_exc_AVPlayerItemTrack;
#endif

// @class AVMutableAudioMixInputParametersInternal;
#ifndef _REWRITER_typedef_AVMutableAudioMixInputParametersInternal
#define _REWRITER_typedef_AVMutableAudioMixInputParametersInternal
typedef struct objc_object AVMutableAudioMixInputParametersInternal;
typedef struct {} _objc_exc_AVMutableAudioMixInputParametersInternal;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0)))

#ifndef _REWRITER_typedef_AVMutableAudioMixInputParameters
#define _REWRITER_typedef_AVMutableAudioMixInputParameters
typedef struct objc_object AVMutableAudioMixInputParameters;
typedef struct {} _objc_exc_AVMutableAudioMixInputParameters;
#endif

struct AVMutableAudioMixInputParameters_IMPL {
	struct AVAudioMixInputParameters_IMPL AVAudioMixInputParameters_IVARS;
	AVMutableAudioMixInputParametersInternal *__strong _mutableInputParameters;
};








// + (instancetype)audioMixInputParametersWithTrack:(nullable AVAssetTrack *)track;





// + (instancetype)audioMixInputParameters;





// @property (nonatomic) CMPersistentTrackID trackID;
// @property (nonatomic, copy, nullable) AVAudioTimePitchAlgorithm audioTimePitchAlgorithm __attribute__((availability(ios,introduced=7_0)));





// @property (nonatomic, retain, nullable) __attribute__((NSObject)) MTAudioProcessingTapRef audioTapProcessor __attribute__((availability(ios,introduced=6_0)));





// - (void)setVolumeRampFromStartVolume:(float)startVolume toEndVolume:(float)endVolume timeRange:(CMTimeRange)timeRange;





// - (void)setVolume:(float)volume atTime:(CMTime)time;

/* @end */

#pragma clang assume_nonnull end



#pragma clang assume_nonnull begin

// @class AVMediaSelectionInternal;
#ifndef _REWRITER_typedef_AVMediaSelectionInternal
#define _REWRITER_typedef_AVMediaSelectionInternal
typedef struct objc_object AVMediaSelectionInternal;
typedef struct {} _objc_exc_AVMediaSelectionInternal;
#endif

// @class AVMutableMediaSelectionInternal;
#ifndef _REWRITER_typedef_AVMutableMediaSelectionInternal
#define _REWRITER_typedef_AVMutableMediaSelectionInternal
typedef struct objc_object AVMutableMediaSelectionInternal;
typedef struct {} _objc_exc_AVMutableMediaSelectionInternal;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0)))

#ifndef _REWRITER_typedef_AVMediaSelection
#define _REWRITER_typedef_AVMediaSelection
typedef struct objc_object AVMediaSelection;
typedef struct {} _objc_exc_AVMediaSelection;
#endif

struct AVMediaSelection_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVMediaSelectionInternal *__strong _mediaSelection;
};






// @property (nonatomic, readonly, weak) AVAsset *asset;
// - (nullable AVMediaSelectionOption *)selectedMediaOptionInMediaSelectionGroup:(AVMediaSelectionGroup *)mediaSelectionGroup;
// - (BOOL)mediaSelectionCriteriaCanBeAppliedAutomaticallyToMediaSelectionGroup:(AVMediaSelectionGroup *)mediaSelectionGroup;

/* @end */


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0)))

#ifndef _REWRITER_typedef_AVMutableMediaSelection
#define _REWRITER_typedef_AVMutableMediaSelection
typedef struct objc_object AVMutableMediaSelection;
typedef struct {} _objc_exc_AVMutableMediaSelection;
#endif

struct AVMutableMediaSelection_IMPL {
	struct AVMediaSelection_IMPL AVMediaSelection_IVARS;
};

// - (void)selectMediaOption:(nullable AVMediaSelectionOption *)mediaSelectionOption inMediaSelectionGroup:(AVMediaSelectionGroup *)mediaSelectionGroup;

/* @end */

#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin
extern "C" NSString *const AVAssetDownloadTaskMinimumRequiredMediaBitrateKey __attribute__((availability(ios,introduced=9_0)));







extern "C" NSString *const AVAssetDownloadTaskMediaSelectionKey __attribute__((availability(ios,introduced=9_0)));







__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_AVAssetDownloadTask
#define _REWRITER_typedef_AVAssetDownloadTask
typedef struct objc_object AVAssetDownloadTask;
typedef struct {} _objc_exc_AVAssetDownloadTask;
#endif

struct AVAssetDownloadTask_IMPL {
	struct NSURLSessionTask_IMPL NSURLSessionTask_IVARS;
};






// @property (nonatomic, readonly) AVURLAsset *URLAsset;






// @property (nonatomic, readonly) NSURL *destinationURL __attribute__((availability(ios,introduced=9_0,deprecated=10_0,message="" )));





// @property (nonatomic, readonly, nullable) NSDictionary<NSString *, id> *options;






// @property (nonatomic, readonly) NSArray<NSValue *> *loadedTimeRanges;


// - (instancetype)init __attribute__((unavailable)); // + (instancetype)new __attribute__((unavailable));
// @property (readonly, copy) NSURLRequest *originalRequest __attribute__((unavailable));
// @property (readonly, copy) NSURLRequest *currentRequest __attribute__((unavailable));
// @property (readonly, copy) NSURLResponse *response __attribute__((unavailable));

/* @end */







__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=11_0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_AVAggregateAssetDownloadTask
#define _REWRITER_typedef_AVAggregateAssetDownloadTask
typedef struct objc_object AVAggregateAssetDownloadTask;
typedef struct {} _objc_exc_AVAggregateAssetDownloadTask;
#endif

struct AVAggregateAssetDownloadTask_IMPL {
	struct NSURLSessionTask_IMPL NSURLSessionTask_IVARS;
};






// @property (nonatomic, readonly) AVURLAsset *URLAsset;


// - (instancetype)init __attribute__((unavailable)); // + (instancetype)new __attribute__((unavailable));
// @property (readonly, copy) NSURLRequest *originalRequest __attribute__((unavailable));
// @property (readonly, copy) NSURLRequest *currentRequest __attribute__((unavailable));
// @property (readonly, copy) NSURLResponse *response __attribute__((unavailable));

/* @end */







__attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))
// @protocol AVAssetDownloadDelegate <NSURLSessionTaskDelegate>
/* @optional */
// - (void)URLSession:(NSURLSession *)session assetDownloadTask:(AVAssetDownloadTask *)assetDownloadTask didFinishDownloadingToURL:(NSURL *)location __attribute__((availability(ios,introduced=10_0)));
// - (void)URLSession:(NSURLSession *)session assetDownloadTask:(AVAssetDownloadTask *)assetDownloadTask didLoadTimeRange:(CMTimeRange)timeRange totalTimeRangesLoaded:(NSArray<NSValue *> *)loadedTimeRanges timeRangeExpectedToLoad:(CMTimeRange)timeRangeExpectedToLoad __attribute__((availability(ios,introduced=9_0)));
// - (void)URLSession:(NSURLSession *)session assetDownloadTask:(AVAssetDownloadTask *)assetDownloadTask didResolveMediaSelection:(AVMediaSelection *)resolvedMediaSelection __attribute__((availability(ios,introduced=9_0)));
// - (void)URLSession:(NSURLSession *)session aggregateAssetDownloadTask:(AVAggregateAssetDownloadTask *)aggregateAssetDownloadTask willDownloadToURL:(NSURL *)location __attribute__((availability(ios,introduced=11_0)));
// - (void)URLSession:(NSURLSession *)session aggregateAssetDownloadTask:(AVAggregateAssetDownloadTask *)aggregateAssetDownloadTask didCompleteForMediaSelection:(AVMediaSelection *)mediaSelection __attribute__((availability(ios,introduced=11_0)));
// - (void)URLSession:(NSURLSession *)session aggregateAssetDownloadTask:(AVAggregateAssetDownloadTask *)aggregateAssetDownloadTask didLoadTimeRange:(CMTimeRange)timeRange totalTimeRangesLoaded:(NSArray<NSValue *> *)loadedTimeRanges timeRangeExpectedToLoad:(CMTimeRange)timeRangeExpectedToLoad forMediaSelection:(AVMediaSelection *)mediaSelection __attribute__((availability(ios,introduced=11_0)));

/* @end */







__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_AVAssetDownloadURLSession
#define _REWRITER_typedef_AVAssetDownloadURLSession
typedef struct objc_object AVAssetDownloadURLSession;
typedef struct {} _objc_exc_AVAssetDownloadURLSession;
#endif

struct AVAssetDownloadURLSession_IMPL {
	struct NSURLSession_IMPL NSURLSession_IVARS;
};

// + (AVAssetDownloadURLSession *)sessionWithConfiguration:(NSURLSessionConfiguration *)configuration assetDownloadDelegate:(nullable id <AVAssetDownloadDelegate>)delegate delegateQueue:(nullable NSOperationQueue *)delegateQueue;
// - (nullable AVAssetDownloadTask *)assetDownloadTaskWithURLAsset:(AVURLAsset *)URLAsset destinationURL:(NSURL *)destinationURL options:(nullable NSDictionary<NSString *, id> *)options __attribute__((availability(ios,introduced=9_0,deprecated=10_0,message="" )));
// - (nullable AVAssetDownloadTask *)assetDownloadTaskWithURLAsset:(AVURLAsset *)URLAsset assetTitle:(NSString *)title assetArtworkData:(nullable NSData *)artworkData options:(nullable NSDictionary<NSString *, id> *)options __attribute__((availability(ios,introduced=10_0)));
// - (nullable AVAggregateAssetDownloadTask *)aggregateAssetDownloadTaskWithURLAsset:(AVURLAsset *)URLAsset mediaSelections:(NSArray <AVMediaSelection *> *)mediaSelections assetTitle:(NSString *)title assetArtworkData:(nullable NSData *)artworkData options:(nullable NSDictionary<NSString *, id> *)options __attribute__((availability(ios,introduced=11_0)));


// - (instancetype)init __attribute__((unavailable)); // + (instancetype)new __attribute__((unavailable));
// + (NSURLSession *)sharedSession __attribute__((unavailable));
// + (NSURLSession *)sessionWithConfiguration:(NSURLSessionConfiguration *)configuration __attribute__((unavailable));
// + (NSURLSession *)sessionWithConfiguration:(NSURLSessionConfiguration *)configuration delegate:(nullable id <NSURLSessionDelegate>)delegate delegateQueue:(nullable NSOperationQueue *)queue __attribute__((unavailable));
// - (NSURLSessionDataTask *)dataTaskWithRequest:(NSURLRequest *)request __attribute__((unavailable));
// - (NSURLSessionDataTask *)dataTaskWithURL:(NSURL *)url __attribute__((unavailable));
// - (NSURLSessionUploadTask *)uploadTaskWithRequest:(NSURLRequest *)request fromFile:(NSURL *)fileURL __attribute__((unavailable));
// - (NSURLSessionUploadTask *)uploadTaskWithRequest:(NSURLRequest *)request fromData:(NSData *)bodyData __attribute__((unavailable));
// - (NSURLSessionUploadTask *)uploadTaskWithStreamedRequest:(NSURLRequest *)request __attribute__((unavailable));
// - (NSURLSessionDownloadTask *)downloadTaskWithRequest:(NSURLRequest *)request __attribute__((unavailable));
// - (NSURLSessionDownloadTask *)downloadTaskWithURL:(NSURL *)url __attribute__((unavailable));
// - (NSURLSessionDownloadTask *)downloadTaskWithResumeData:(NSData *)resumeData __attribute__((unavailable));
// - (NSURLSessionDataTask *)dataTaskWithRequest:(NSURLRequest *)request completionHandler:(void (^)(NSData *data, NSURLResponse *response, NSError *error))completionHandler __attribute__((unavailable));
// - (NSURLSessionDataTask *)dataTaskWithURL:(NSURL *)url completionHandler:(void (^)(NSData *data, NSURLResponse *response, NSError *error))completionHandler __attribute__((unavailable));
// - (NSURLSessionUploadTask *)uploadTaskWithRequest:(NSURLRequest *)request fromFile:(NSURL *)fileURL completionHandler:(void (^)(NSData *data, NSURLResponse *response, NSError *error))completionHandler __attribute__((unavailable));
// - (NSURLSessionUploadTask *)uploadTaskWithRequest:(NSURLRequest *)request fromData:(nullable NSData *)bodyData completionHandler:(void (^)(NSData *data, NSURLResponse *response, NSError *error))completionHandler __attribute__((unavailable));
// - (NSURLSessionDownloadTask *)downloadTaskWithRequest:(NSURLRequest *)request completionHandler:(void (^)(NSURL *location, NSURLResponse *response, NSError *error))completionHandler __attribute__((unavailable));
// - (NSURLSessionDownloadTask *)downloadTaskWithURL:(NSURL *)url completionHandler:(void (^)(NSURL *location, NSURLResponse *response, NSError *error))completionHandler __attribute__((unavailable));
// - (NSURLSessionDownloadTask *)downloadTaskWithResumeData:(NSData *)resumeData completionHandler:(void (^)(NSURL *location, NSURLResponse *response, NSError *error))completionHandler __attribute__((unavailable));

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class AVAssetDownloadStorageManagementPolicy;
#ifndef _REWRITER_typedef_AVAssetDownloadStorageManagementPolicy
#define _REWRITER_typedef_AVAssetDownloadStorageManagementPolicy
typedef struct objc_object AVAssetDownloadStorageManagementPolicy;
typedef struct {} _objc_exc_AVAssetDownloadStorageManagementPolicy;
#endif





typedef NSString *AVAssetDownloadedAssetEvictionPriority __attribute__((swift_wrapper(enum))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
extern "C" AVAssetDownloadedAssetEvictionPriority const AVAssetDownloadedAssetEvictionPriorityImportant __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
extern "C" AVAssetDownloadedAssetEvictionPriority const AVAssetDownloadedAssetEvictionPriorityDefault __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));

__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_AVAssetDownloadStorageManager
#define _REWRITER_typedef_AVAssetDownloadStorageManager
typedef struct objc_object AVAssetDownloadStorageManager;
typedef struct {} _objc_exc_AVAssetDownloadStorageManager;
#endif

struct AVAssetDownloadStorageManager_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};






// + (AVAssetDownloadStorageManager *)sharedDownloadStorageManager;







// - (void)setStorageManagementPolicy:(AVAssetDownloadStorageManagementPolicy *)storageManagementPolicy forURL:(NSURL *)downloadStorageURL;
// - (nullable AVAssetDownloadStorageManagementPolicy *)storageManagementPolicyForURL:(NSURL *)downloadStorageURL;

/* @end */

// @class AVAssetDownloadStorageManagementPolicyInternal;
#ifndef _REWRITER_typedef_AVAssetDownloadStorageManagementPolicyInternal
#define _REWRITER_typedef_AVAssetDownloadStorageManagementPolicyInternal
typedef struct objc_object AVAssetDownloadStorageManagementPolicyInternal;
typedef struct {} _objc_exc_AVAssetDownloadStorageManagementPolicyInternal;
#endif


__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_AVAssetDownloadStorageManagementPolicy
#define _REWRITER_typedef_AVAssetDownloadStorageManagementPolicy
typedef struct objc_object AVAssetDownloadStorageManagementPolicy;
typedef struct {} _objc_exc_AVAssetDownloadStorageManagementPolicy;
#endif

struct AVAssetDownloadStorageManagementPolicy_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVAssetDownloadStorageManagementPolicyInternal *__strong _storageManagementPolicy;
};








// @property (nonatomic, readonly, copy) AVAssetDownloadedAssetEvictionPriority priority;





// @property (nonatomic, readonly, copy) NSDate *expirationDate;

/* @end */








__attribute__((availability(ios,introduced=11.0))) __attribute__((availability(macos,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_AVMutableAssetDownloadStorageManagementPolicy
#define _REWRITER_typedef_AVMutableAssetDownloadStorageManagementPolicy
typedef struct objc_object AVMutableAssetDownloadStorageManagementPolicy;
typedef struct {} _objc_exc_AVMutableAssetDownloadStorageManagementPolicy;
#endif

struct AVMutableAssetDownloadStorageManagementPolicy_IMPL {
	struct AVAssetDownloadStorageManagementPolicy_IMPL AVAssetDownloadStorageManagementPolicy_IVARS;
};








// @property (nonatomic, copy) AVAssetDownloadedAssetEvictionPriority priority;





// @property (nonatomic, copy) NSDate *expirationDate;

/* @end */

#pragma clang assume_nonnull end



















#pragma clang assume_nonnull begin







typedef NSString * AVCaptureSessionPreset __attribute__((swift_wrapper(enum))) __attribute__((availability(ios,introduced=4_0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
extern "C" AVCaptureSessionPreset const AVCaptureSessionPresetPhoto __attribute__((availability(ios,introduced=4_0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
extern "C" AVCaptureSessionPreset const AVCaptureSessionPresetHigh __attribute__((availability(ios,introduced=4_0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
extern "C" AVCaptureSessionPreset const AVCaptureSessionPresetMedium __attribute__((availability(ios,introduced=4_0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
extern "C" AVCaptureSessionPreset const AVCaptureSessionPresetLow __attribute__((availability(ios,introduced=4_0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
extern "C" AVCaptureSessionPreset const AVCaptureSessionPreset320x240 __attribute__((availability(ios,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
extern "C" AVCaptureSessionPreset const AVCaptureSessionPreset352x288 __attribute__((availability(ios,introduced=5_0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
extern "C" AVCaptureSessionPreset const AVCaptureSessionPreset640x480 __attribute__((availability(ios,introduced=4_0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
extern "C" AVCaptureSessionPreset const AVCaptureSessionPreset960x540 __attribute__((availability(ios,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
extern "C" AVCaptureSessionPreset const AVCaptureSessionPreset1280x720 __attribute__((availability(ios,introduced=4_0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
extern "C" AVCaptureSessionPreset const AVCaptureSessionPreset1920x1080 __attribute__((availability(ios,introduced=5_0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
extern "C" AVCaptureSessionPreset const AVCaptureSessionPreset3840x2160 __attribute__((availability(ios,introduced=9_0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
extern "C" AVCaptureSessionPreset const AVCaptureSessionPresetiFrame960x540 __attribute__((availability(ios,introduced=5_0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
extern "C" AVCaptureSessionPreset const AVCaptureSessionPresetiFrame1280x720 __attribute__((availability(ios,introduced=5_0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
extern "C" AVCaptureSessionPreset const AVCaptureSessionPresetInputPriority __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
#pragma clang assume_nonnull end






#pragma clang assume_nonnull begin
extern "C" NSString *const AVCaptureDeviceWasConnectedNotification __attribute__((availability(ios,introduced=4_0))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString *const AVCaptureDeviceWasDisconnectedNotification __attribute__((availability(ios,introduced=4_0))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString *const AVCaptureDeviceSubjectAreaDidChangeNotification __attribute__((availability(ios,introduced=5_0))) __attribute__((availability(tvos,unavailable)));




// @class AVCaptureDeviceFormat;
#ifndef _REWRITER_typedef_AVCaptureDeviceFormat
#define _REWRITER_typedef_AVCaptureDeviceFormat
typedef struct objc_object AVCaptureDeviceFormat;
typedef struct {} _objc_exc_AVCaptureDeviceFormat;
#endif

// @class AVCaptureDeviceInputSource;
#ifndef _REWRITER_typedef_AVCaptureDeviceInputSource
#define _REWRITER_typedef_AVCaptureDeviceInputSource
typedef struct objc_object AVCaptureDeviceInputSource;
typedef struct {} _objc_exc_AVCaptureDeviceInputSource;
#endif

// @class AVCaptureSystemPressureState;
#ifndef _REWRITER_typedef_AVCaptureSystemPressureState
#define _REWRITER_typedef_AVCaptureSystemPressureState
typedef struct objc_object AVCaptureSystemPressureState;
typedef struct {} _objc_exc_AVCaptureSystemPressureState;
#endif

// @class AVCaptureDeviceInternal;
#ifndef _REWRITER_typedef_AVCaptureDeviceInternal
#define _REWRITER_typedef_AVCaptureDeviceInternal
typedef struct objc_object AVCaptureDeviceInternal;
typedef struct {} _objc_exc_AVCaptureDeviceInternal;
#endif

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_AVCaptureDevice
#define _REWRITER_typedef_AVCaptureDevice
typedef struct objc_object AVCaptureDevice;
typedef struct {} _objc_exc_AVCaptureDevice;
#endif

struct AVCaptureDevice_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVCaptureDeviceInternal *__strong _internal;
};


// - (instancetype)init __attribute__((unavailable)); // + (instancetype)new __attribute__((unavailable));
// + (NSArray<AVCaptureDevice *> *)devices __attribute__((availability(ios,introduced=4_0,deprecated=10_0,message="" "Use AVCaptureDeviceDiscoverySession instead.")));
// + (NSArray<AVCaptureDevice *> *)devicesWithMediaType:(AVMediaType)mediaType __attribute__((availability(ios,introduced=4_0,deprecated=10_0,message="" "Use AVCaptureDeviceDiscoverySession instead.")));
// + (nullable AVCaptureDevice *)defaultDeviceWithMediaType:(AVMediaType)mediaType;
// + (nullable AVCaptureDevice *)deviceWithUniqueID:(NSString *)deviceUniqueID;
// @property(nonatomic, readonly) NSString *uniqueID;
// @property(nonatomic, readonly) NSString *modelID;
// @property(nonatomic, readonly) NSString *localizedName;
// - (BOOL)hasMediaType:(AVMediaType)mediaType;
// - (BOOL)lockForConfiguration:(NSError * _Nullable * _Nullable)outError;
// - (void)unlockForConfiguration;
// - (BOOL)supportsAVCaptureSessionPreset:(AVCaptureSessionPreset)preset;
// @property(nonatomic, readonly, getter=isConnected) BOOL connected;
// @property(nonatomic, readonly) NSArray<AVCaptureDeviceFormat *> *formats __attribute__((availability(ios,introduced=7_0)));
// @property(nonatomic, retain) AVCaptureDeviceFormat *activeFormat __attribute__((availability(ios,introduced=7_0)));
// @property(nonatomic) CMTime activeVideoMinFrameDuration __attribute__((availability(ios,introduced=7_0)));
// @property(nonatomic) CMTime activeVideoMaxFrameDuration __attribute__((availability(ios,introduced=7_0)));
/* @end */

typedef NSInteger AVCaptureDevicePosition; enum {
    AVCaptureDevicePositionUnspecified = 0,
    AVCaptureDevicePositionBack = 1,
    AVCaptureDevicePositionFront = 2,
} __attribute__((availability(ios,introduced=4_0))) __attribute__((availability(tvos,unavailable)));


// @interface AVCaptureDevice (AVCaptureDevicePosition)
// @property(nonatomic, readonly) AVCaptureDevicePosition position;

/* @end */

typedef NSString *AVCaptureDeviceType __attribute__((swift_wrapper(enum))) __attribute__((availability(ios,introduced=10_0))) __attribute__((availability(tvos,unavailable)));





extern "C" AVCaptureDeviceType const AVCaptureDeviceTypeBuiltInMicrophone __attribute__((availability(ios,introduced=10_0))) __attribute__((availability(tvos,unavailable)));





extern "C" AVCaptureDeviceType const AVCaptureDeviceTypeBuiltInWideAngleCamera __attribute__((availability(ios,introduced=10_0))) __attribute__((availability(tvos,unavailable)));





extern "C" AVCaptureDeviceType const AVCaptureDeviceTypeBuiltInTelephotoCamera __attribute__((availability(ios,introduced=10_0))) __attribute__((availability(tvos,unavailable)));
extern "C" AVCaptureDeviceType const AVCaptureDeviceTypeBuiltInDualCamera __attribute__((availability(ios,introduced=10_2))) __attribute__((availability(tvos,unavailable)));





extern "C" AVCaptureDeviceType const AVCaptureDeviceTypeBuiltInTrueDepthCamera __attribute__((availability(ios,introduced=11_1))) __attribute__((availability(tvos,unavailable)));





extern "C" AVCaptureDeviceType const AVCaptureDeviceTypeBuiltInDuoCamera __attribute__((availability(ios,introduced=10_0,deprecated=10_2,message="" "Use AVCaptureDeviceTypeBuiltInDualCamera instead"))) __attribute__((availability(tvos,unavailable)));


// @interface AVCaptureDevice (AVCaptureDeviceType)
// @property(nonatomic, readonly) AVCaptureDeviceType deviceType __attribute__((availability(ios,introduced=10_0))) __attribute__((availability(tvos,unavailable)));
// + (nullable AVCaptureDevice *)defaultDeviceWithDeviceType:(AVCaptureDeviceType)deviceType mediaType:(nullable AVMediaType)mediaType position:(AVCaptureDevicePosition)position __attribute__((availability(ios,introduced=10_0))) __attribute__((availability(tvos,unavailable)));

/* @end */



// @interface AVCaptureDevice (AVCaptureDeviceSystemPressure)
// @property(nonatomic, readonly) AVCaptureSystemPressureState *systemPressureState __attribute__((availability(ios,introduced=11.1))) __attribute__((availability(macos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

/* @end */

typedef NSInteger AVCaptureFlashMode; enum {
    AVCaptureFlashModeOff = 0,
    AVCaptureFlashModeOn = 1,
    AVCaptureFlashModeAuto = 2,
} __attribute__((availability(ios,introduced=4_0))) __attribute__((availability(tvos,unavailable)));


// @interface AVCaptureDevice (AVCaptureDeviceFlash)
// @property(nonatomic, readonly) BOOL hasFlash;
// @property(nonatomic, readonly, getter=isFlashAvailable) BOOL flashAvailable __attribute__((availability(ios,introduced=5_0)));
// @property(nonatomic, readonly, getter=isFlashActive) BOOL flashActive __attribute__((availability(ios,introduced=5_0,deprecated=10_0,message="" "Use AVCapturePhotoOutput's -isFlashScene instead.")));
// - (BOOL)isFlashModeSupported:(AVCaptureFlashMode)flashMode __attribute__((availability(ios,introduced=4_0,deprecated=10_0,message="" "Use AVCapturePhotoOutput's -supportedFlashModes instead.")));
// @property(nonatomic) AVCaptureFlashMode flashMode __attribute__((availability(ios,introduced=4_0,deprecated=10_0,message="" "Use AVCapturePhotoSettings.flashMode instead.")));

/* @end */

typedef NSInteger AVCaptureTorchMode; enum {
    AVCaptureTorchModeOff = 0,
    AVCaptureTorchModeOn = 1,
    AVCaptureTorchModeAuto = 2,
} __attribute__((availability(ios,introduced=4_0))) __attribute__((availability(tvos,unavailable)));






extern "C" const float AVCaptureMaxAvailableTorchLevel __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(tvos,unavailable)));


// @interface AVCaptureDevice (AVCaptureDeviceTorch)
// @property(nonatomic, readonly) BOOL hasTorch;
// @property(nonatomic, readonly, getter=isTorchAvailable) BOOL torchAvailable __attribute__((availability(ios,introduced=5_0)));
// @property(nonatomic, readonly, getter=isTorchActive) BOOL torchActive __attribute__((availability(ios,introduced=6_0)));
// @property(nonatomic, readonly) float torchLevel __attribute__((availability(ios,introduced=5_0)));
// - (BOOL)isTorchModeSupported:(AVCaptureTorchMode)torchMode;
// @property(nonatomic) AVCaptureTorchMode torchMode;
// - (BOOL)setTorchModeOnWithLevel:(float)torchLevel error:(NSError * _Nullable * _Nullable)outError __attribute__((availability(ios,introduced=6_0)));

/* @end */

typedef NSInteger AVCaptureFocusMode; enum {
    AVCaptureFocusModeLocked = 0,
    AVCaptureFocusModeAutoFocus = 1,
    AVCaptureFocusModeContinuousAutoFocus = 2,
} __attribute__((availability(ios,introduced=4_0))) __attribute__((availability(tvos,unavailable)));
typedef NSInteger AVCaptureAutoFocusRangeRestriction; enum {
    AVCaptureAutoFocusRangeRestrictionNone = 0,
    AVCaptureAutoFocusRangeRestrictionNear = 1,
    AVCaptureAutoFocusRangeRestrictionFar = 2,
} __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));


// @interface AVCaptureDevice (AVCaptureDeviceFocus)
// - (BOOL)isFocusModeSupported:(AVCaptureFocusMode)focusMode;
// @property(nonatomic, readonly, getter=isLockingFocusWithCustomLensPositionSupported) BOOL lockingFocusWithCustomLensPositionSupported __attribute__((availability(ios,introduced=10_0)));
// @property(nonatomic) AVCaptureFocusMode focusMode;
// @property(nonatomic, readonly, getter=isFocusPointOfInterestSupported) BOOL focusPointOfInterestSupported;
// @property(nonatomic) CGPoint focusPointOfInterest;
// @property(nonatomic, readonly, getter=isAdjustingFocus) BOOL adjustingFocus;
// @property(nonatomic, readonly, getter=isAutoFocusRangeRestrictionSupported) BOOL autoFocusRangeRestrictionSupported __attribute__((availability(ios,introduced=7_0)));
// @property(nonatomic) AVCaptureAutoFocusRangeRestriction autoFocusRangeRestriction __attribute__((availability(ios,introduced=7_0)));
// @property(nonatomic, readonly, getter=isSmoothAutoFocusSupported) BOOL smoothAutoFocusSupported __attribute__((availability(ios,introduced=7_0)));
// @property(nonatomic, getter=isSmoothAutoFocusEnabled) BOOL smoothAutoFocusEnabled __attribute__((availability(ios,introduced=7_0)));
// @property(nonatomic, readonly) float lensPosition __attribute__((availability(ios,introduced=8_0)));





extern "C" const float AVCaptureLensPositionCurrent __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable)));
// - (void)setFocusModeLockedWithLensPosition:(float)lensPosition completionHandler:(nullable void (^)(CMTime syncTime))handler __attribute__((availability(ios,introduced=8_0)));

/* @end */

typedef NSInteger AVCaptureExposureMode; enum {
    AVCaptureExposureModeLocked = 0,
    AVCaptureExposureModeAutoExpose = 1,
    AVCaptureExposureModeContinuousAutoExposure = 2,
    AVCaptureExposureModeCustom __attribute__((availability(ios,introduced=8_0))) = 3,
} __attribute__((availability(ios,introduced=4_0))) __attribute__((availability(tvos,unavailable)));


// @interface AVCaptureDevice (AVCaptureDeviceExposure)
// - (BOOL)isExposureModeSupported:(AVCaptureExposureMode)exposureMode;
// @property(nonatomic) AVCaptureExposureMode exposureMode;
// @property(nonatomic, readonly, getter=isExposurePointOfInterestSupported) BOOL exposurePointOfInterestSupported;
// @property(nonatomic) CGPoint exposurePointOfInterest;
// @property(nonatomic, readonly, getter=isAdjustingExposure) BOOL adjustingExposure;
// @property(nonatomic, readonly) float lensAperture __attribute__((availability(ios,introduced=8_0)));
// @property(nonatomic, readonly) CMTime exposureDuration __attribute__((availability(ios,introduced=8_0)));
// @property(nonatomic, readonly) float ISO __attribute__((availability(ios,introduced=8_0)));





extern "C" const CMTime AVCaptureExposureDurationCurrent __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable)));





extern "C" const float AVCaptureISOCurrent __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable)));
// - (void)setExposureModeCustomWithDuration:(CMTime)duration ISO:(float)ISO completionHandler:(nullable void (^)(CMTime syncTime))handler __attribute__((availability(ios,introduced=8_0)));
// @property(nonatomic, readonly) float exposureTargetOffset __attribute__((availability(ios,introduced=8_0)));
// @property(nonatomic, readonly) float exposureTargetBias __attribute__((availability(ios,introduced=8_0)));
// @property(nonatomic, readonly) float minExposureTargetBias __attribute__((availability(ios,introduced=8_0)));
// @property(nonatomic, readonly) float maxExposureTargetBias __attribute__((availability(ios,introduced=8_0)));





extern "C" const float AVCaptureExposureTargetBiasCurrent __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable)));
// - (void)setExposureTargetBias:(float)bias completionHandler:(nullable void (^)(CMTime syncTime))handler __attribute__((availability(ios,introduced=8_0)));

/* @end */

typedef NSInteger AVCaptureWhiteBalanceMode; enum {
    AVCaptureWhiteBalanceModeLocked = 0,
    AVCaptureWhiteBalanceModeAutoWhiteBalance = 1,
    AVCaptureWhiteBalanceModeContinuousAutoWhiteBalance = 2,
} __attribute__((availability(ios,introduced=4_0))) __attribute__((availability(tvos,unavailable)));







typedef struct {
    float redGain;
    float greenGain;
    float blueGain;
} AVCaptureWhiteBalanceGains __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable)));







typedef struct {
    float x;
    float y;
} AVCaptureWhiteBalanceChromaticityValues __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable)));







typedef struct {
    float temperature;
    float tint;
} AVCaptureWhiteBalanceTemperatureAndTintValues __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable)));


// @interface AVCaptureDevice (AVCaptureDeviceWhiteBalance)
// - (BOOL)isWhiteBalanceModeSupported:(AVCaptureWhiteBalanceMode)whiteBalanceMode;
// @property(nonatomic, readonly, getter=isLockingWhiteBalanceWithCustomDeviceGainsSupported) BOOL lockingWhiteBalanceWithCustomDeviceGainsSupported __attribute__((availability(ios,introduced=10_0)));
// @property(nonatomic) AVCaptureWhiteBalanceMode whiteBalanceMode;
// @property(nonatomic, readonly, getter=isAdjustingWhiteBalance) BOOL adjustingWhiteBalance;
// @property(nonatomic, readonly) AVCaptureWhiteBalanceGains deviceWhiteBalanceGains __attribute__((availability(ios,introduced=8_0)));
// @property(nonatomic, readonly) AVCaptureWhiteBalanceGains grayWorldDeviceWhiteBalanceGains __attribute__((availability(ios,introduced=8_0)));
// @property(nonatomic, readonly) float maxWhiteBalanceGain __attribute__((availability(ios,introduced=8_0)));





extern "C" const AVCaptureWhiteBalanceGains AVCaptureWhiteBalanceGainsCurrent __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable)));
// - (void)setWhiteBalanceModeLockedWithDeviceWhiteBalanceGains:(AVCaptureWhiteBalanceGains)whiteBalanceGains completionHandler:(nullable void (^)(CMTime syncTime))handler __attribute__((availability(ios,introduced=8_0)));
// - (AVCaptureWhiteBalanceChromaticityValues)chromaticityValuesForDeviceWhiteBalanceGains:(AVCaptureWhiteBalanceGains)whiteBalanceGains __attribute__((availability(ios,introduced=8_0)));
// - (AVCaptureWhiteBalanceGains)deviceWhiteBalanceGainsForChromaticityValues:(AVCaptureWhiteBalanceChromaticityValues)chromaticityValues __attribute__((availability(ios,introduced=8_0)));
// - (AVCaptureWhiteBalanceTemperatureAndTintValues)temperatureAndTintValuesForDeviceWhiteBalanceGains:(AVCaptureWhiteBalanceGains)whiteBalanceGains __attribute__((availability(ios,introduced=8_0)));
// - (AVCaptureWhiteBalanceGains)deviceWhiteBalanceGainsForTemperatureAndTintValues:(AVCaptureWhiteBalanceTemperatureAndTintValues)tempAndTintValues __attribute__((availability(ios,introduced=8_0)));

/* @end */



// @interface AVCaptureDevice (AVCaptureDeviceSubjectAreaChangeMonitoring)
// @property(nonatomic, getter=isSubjectAreaChangeMonitoringEnabled) BOOL subjectAreaChangeMonitoringEnabled __attribute__((availability(ios,introduced=5_0)));

/* @end */



// @interface AVCaptureDevice (AVCaptureDeviceLowLightBoost)
// @property(nonatomic, readonly, getter=isLowLightBoostSupported) BOOL lowLightBoostSupported __attribute__((availability(ios,introduced=6_0)));
// @property(nonatomic, readonly, getter=isLowLightBoostEnabled) BOOL lowLightBoostEnabled __attribute__((availability(ios,introduced=6_0)));
// @property(nonatomic) BOOL automaticallyEnablesLowLightBoostWhenAvailable __attribute__((availability(ios,introduced=6_0)));

/* @end */



// @interface AVCaptureDevice (AVCaptureDeviceVideoZoom)
// @property(nonatomic) CGFloat videoZoomFactor __attribute__((availability(ios,introduced=7_0)));
// - (void)rampToVideoZoomFactor:(CGFloat)factor withRate:(float)rate __attribute__((availability(ios,introduced=7_0)));
// @property(nonatomic, readonly, getter=isRampingVideoZoom) BOOL rampingVideoZoom __attribute__((availability(ios,introduced=7_0)));
// - (void)cancelVideoZoomRamp __attribute__((availability(ios,introduced=7_0)));
// @property(atomic, readonly) CGFloat dualCameraSwitchOverVideoZoomFactor __attribute__((availability(ios,introduced=11_0)));

/* @end */

typedef NSInteger AVAuthorizationStatus; enum {
    AVAuthorizationStatusNotDetermined = 0,
    AVAuthorizationStatusRestricted = 1,
    AVAuthorizationStatusDenied = 2,
    AVAuthorizationStatusAuthorized = 3,
} __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));


// @interface AVCaptureDevice (AVCaptureDeviceAuthorization)
// + (AVAuthorizationStatus)authorizationStatusForMediaType:(AVMediaType)mediaType __attribute__((availability(ios,introduced=7_0)));
// + (void)requestAccessForMediaType:(AVMediaType)mediaType completionHandler:(void (^)(BOOL granted))handler __attribute__((availability(ios,introduced=7_0)));

/* @end */








typedef float AVCaptureDeviceTransportControlsSpeed __attribute__((availability(ios,unavailable))) __attribute__((availability(tvos,unavailable)));
typedef NSInteger AVCaptureDeviceTransportControlsPlaybackMode; enum {
    AVCaptureDeviceTransportControlsNotPlayingMode = 0,
    AVCaptureDeviceTransportControlsPlayingMode = 1,
} __attribute__((availability(ios,unavailable))) __attribute__((availability(tvos,unavailable)));


// @interface AVCaptureDevice (AVCaptureDeviceTransportControls)
// @property(nonatomic, readonly) BOOL transportControlsSupported __attribute__((availability(ios,unavailable)));
// @property(nonatomic, readonly) AVCaptureDeviceTransportControlsPlaybackMode transportControlsPlaybackMode __attribute__((availability(ios,unavailable)));
// @property(nonatomic, readonly) AVCaptureDeviceTransportControlsSpeed transportControlsSpeed __attribute__((availability(ios,unavailable)));
// - (void)setTransportControlsPlaybackMode:(AVCaptureDeviceTransportControlsPlaybackMode)mode speed:(AVCaptureDeviceTransportControlsSpeed)speed __attribute__((availability(ios,unavailable)));

/* @end */



// @interface AVCaptureDevice (AVCaptureDeviceHighDynamicRangeSupport)
// @property(nonatomic) BOOL automaticallyAdjustsVideoHDREnabled __attribute__((availability(ios,introduced=8_0)));
// @property(nonatomic, getter=isVideoHDREnabled) BOOL videoHDREnabled __attribute__((availability(ios,introduced=8_0)));

/* @end */

typedef NSInteger AVCaptureColorSpace; enum {
    AVCaptureColorSpace_sRGB = 0,
    AVCaptureColorSpace_P3_D65 = 1,
} __attribute__((availability(ios,introduced=10_0))) __attribute__((availability(tvos,unavailable)));


// @interface AVCaptureDevice (AVCaptureDeviceColorSpaceSupport)
// @property(nonatomic) AVCaptureColorSpace activeColorSpace __attribute__((availability(ios,introduced=10_0)));

/* @end */



// @interface AVCaptureDevice (AVCaptureDeviceDepthSupport)
// @property(nonatomic, retain, nullable) AVCaptureDeviceFormat *activeDepthDataFormat __attribute__((availability(ios,introduced=11_0)));
// @property(nonatomic, readonly) CGFloat minAvailableVideoZoomFactor __attribute__((availability(ios,introduced=11_0)));
// @property(nonatomic, readonly) CGFloat maxAvailableVideoZoomFactor __attribute__((availability(ios,introduced=11_0)));

/* @end */

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_AVCaptureDeviceDiscoverySession
#define _REWRITER_typedef_AVCaptureDeviceDiscoverySession
typedef struct objc_object AVCaptureDeviceDiscoverySession;
typedef struct {} _objc_exc_AVCaptureDeviceDiscoverySession;
#endif

struct AVCaptureDeviceDiscoverySession_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)init __attribute__((unavailable)); // + (instancetype)new __attribute__((unavailable));
// + (instancetype)discoverySessionWithDeviceTypes:(NSArray<AVCaptureDeviceType> *)deviceTypes mediaType:(nullable AVMediaType)mediaType position:(AVCaptureDevicePosition)position;
// @property(nonatomic, readonly) NSArray<AVCaptureDevice *> *devices;

/* @end */





// @class AVFrameRateRangeInternal;
#ifndef _REWRITER_typedef_AVFrameRateRangeInternal
#define _REWRITER_typedef_AVFrameRateRangeInternal
typedef struct objc_object AVFrameRateRangeInternal;
typedef struct {} _objc_exc_AVFrameRateRangeInternal;
#endif

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_AVFrameRateRange
#define _REWRITER_typedef_AVFrameRateRange
typedef struct objc_object AVFrameRateRange;
typedef struct {} _objc_exc_AVFrameRateRange;
#endif

struct AVFrameRateRange_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVFrameRateRangeInternal *__strong _internal;
};


// - (instancetype)init __attribute__((unavailable)); // + (instancetype)new __attribute__((unavailable));
// @property(readonly) Float64 minFrameRate;
// @property(readonly) Float64 maxFrameRate;
// @property(readonly) CMTime maxFrameDuration;
// @property(readonly) CMTime minFrameDuration;

/* @end */

typedef NSInteger AVCaptureVideoStabilizationMode; enum {
    AVCaptureVideoStabilizationModeOff = 0,
    AVCaptureVideoStabilizationModeStandard = 1,
    AVCaptureVideoStabilizationModeCinematic = 2,
    AVCaptureVideoStabilizationModeAuto = -1,
} __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable)));
typedef NSInteger AVCaptureAutoFocusSystem; enum {
    AVCaptureAutoFocusSystemNone = 0,
    AVCaptureAutoFocusSystemContrastDetection = 1,
    AVCaptureAutoFocusSystemPhaseDetection = 2,
} __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable)));




// @class AVCaptureOutput;
#ifndef _REWRITER_typedef_AVCaptureOutput
#define _REWRITER_typedef_AVCaptureOutput
typedef struct objc_object AVCaptureOutput;
typedef struct {} _objc_exc_AVCaptureOutput;
#endif

// @class AVCaptureDeviceFormatInternal;
#ifndef _REWRITER_typedef_AVCaptureDeviceFormatInternal
#define _REWRITER_typedef_AVCaptureDeviceFormatInternal
typedef struct objc_object AVCaptureDeviceFormatInternal;
typedef struct {} _objc_exc_AVCaptureDeviceFormatInternal;
#endif

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_AVCaptureDeviceFormat
#define _REWRITER_typedef_AVCaptureDeviceFormat
typedef struct objc_object AVCaptureDeviceFormat;
typedef struct {} _objc_exc_AVCaptureDeviceFormat;
#endif

struct AVCaptureDeviceFormat_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVCaptureDeviceFormatInternal *__strong _internal;
};


// - (instancetype)init __attribute__((unavailable)); // + (instancetype)new __attribute__((unavailable));
// @property(nonatomic, readonly) AVMediaType mediaType;
// @property(nonatomic, readonly) CMFormatDescriptionRef formatDescription;
// @property(nonatomic, readonly) NSArray<AVFrameRateRange *> *videoSupportedFrameRateRanges;
// @property(nonatomic, readonly) float videoFieldOfView __attribute__((availability(ios,introduced=7_0)));
// @property(nonatomic, readonly, getter=isVideoBinned) BOOL videoBinned __attribute__((availability(ios,introduced=7_0)));
// - (BOOL)isVideoStabilizationModeSupported:(AVCaptureVideoStabilizationMode)videoStabilizationMode __attribute__((availability(ios,introduced=8_0)));
// @property(nonatomic, readonly, getter=isVideoStabilizationSupported) BOOL videoStabilizationSupported __attribute__((availability(ios,introduced=7_0,deprecated=8_0,message="" "Use isVideoStabilizationModeSupported: instead.")));
// @property(nonatomic, readonly) CGFloat videoMaxZoomFactor __attribute__((availability(ios,introduced=7_0)));
// @property(nonatomic, readonly) CGFloat videoZoomFactorUpscaleThreshold __attribute__((availability(ios,introduced=7_0)));
// @property(nonatomic, readonly) CMTime minExposureDuration __attribute__((availability(ios,introduced=8_0)));
// @property(nonatomic, readonly) CMTime maxExposureDuration __attribute__((availability(ios,introduced=8_0)));
// @property(nonatomic, readonly) float minISO __attribute__((availability(ios,introduced=8_0)));
// @property(nonatomic, readonly) float maxISO __attribute__((availability(ios,introduced=8_0)));
// @property(nonatomic, readonly, getter=isVideoHDRSupported) BOOL videoHDRSupported __attribute__((availability(ios,introduced=8_0)));
// @property(nonatomic, readonly) CMVideoDimensions highResolutionStillImageDimensions __attribute__((availability(ios,introduced=8_0)));
// @property(nonatomic, readonly) AVCaptureAutoFocusSystem autoFocusSystem __attribute__((availability(ios,introduced=8_0)));
// @property(nonatomic, readonly) NSArray<NSNumber *> *supportedColorSpaces __attribute__((availability(ios,introduced=10_0)));
// @property(nonatomic, readonly) CGFloat videoMinZoomFactorForDepthDataDelivery __attribute__((availability(ios,introduced=11_0)));
// @property(nonatomic, readonly) CGFloat videoMaxZoomFactorForDepthDataDelivery __attribute__((availability(ios,introduced=11_0)));
// @property(nonatomic, readonly) NSArray<AVCaptureDeviceFormat *> *supportedDepthDataFormats __attribute__((availability(ios,introduced=11_0)));
// @property(nonatomic, readonly) NSArray<Class> *unsupportedCaptureOutputClasses __attribute__((availability(ios,introduced=11_0)));



/* @end */





// @class AVCaptureDeviceInputSourceInternal;
#ifndef _REWRITER_typedef_AVCaptureDeviceInputSourceInternal
#define _REWRITER_typedef_AVCaptureDeviceInputSourceInternal
typedef struct objc_object AVCaptureDeviceInputSourceInternal;
typedef struct {} _objc_exc_AVCaptureDeviceInputSourceInternal;
#endif

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=NA))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_AVCaptureDeviceInputSource
#define _REWRITER_typedef_AVCaptureDeviceInputSource
typedef struct objc_object AVCaptureDeviceInputSource;
typedef struct {} _objc_exc_AVCaptureDeviceInputSource;
#endif

struct AVCaptureDeviceInputSource_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVCaptureDeviceInputSourceInternal *__strong _internal;
};


// - (instancetype)init __attribute__((unavailable)); // + (instancetype)new __attribute__((unavailable));
// @property(nonatomic, readonly) NSString *inputSourceID;
// @property(nonatomic, readonly) NSString *localizedName;

/* @end */

#pragma clang assume_nonnull end



extern "C" {


#pragma pack(push, 4)
typedef struct __attribute__((objc_bridge(id))) OpaqueCMClock* CMClockRef;
typedef struct __attribute__((objc_bridge(id))) OpaqueCMTimebase* CMTimebaseRef;

typedef __attribute__((objc_bridge(id))) CFTypeRef CMClockOrTimebaseRef;






enum

{
 kCMClockError_MissingRequiredParameter = -12745,
 kCMClockError_InvalidParameter = -12746,
 kCMClockError_AllocationFailed = -12747,
 kCMClockError_UnsupportedOperation = -12756,
};





enum

{
 kCMTimebaseError_MissingRequiredParameter = -12748,
 kCMTimebaseError_InvalidParameter = -12749,
 kCMTimebaseError_AllocationFailed = -12750,
 kCMTimebaseError_TimerIntervalTooShort = -12751,
 kCMTimebaseError_ReadOnly = -12757,
};





enum

{
 kCMSyncError_MissingRequiredParameter = -12752,
 kCMSyncError_InvalidParameter = -12753,
 kCMSyncError_AllocationFailed = -12754,
 kCMSyncError_RateMustBeNonZero = -12755,
};





extern CFTypeID
CMClockGetTypeID( void )
 __attribute__((availability(ios,introduced=6.0)));
extern CMClockRef _Nonnull
CMClockGetHostTimeClock( void )
 __attribute__((availability(ios,introduced=6.0)));
extern uint64_t
CMClockConvertHostTimeToSystemUnits( CMTime hostTime )
 __attribute__((availability(ios,introduced=6.0)));
extern CMTime
CMClockMakeHostTimeFromSystemUnits( uint64_t hostTime )
 __attribute__((availability(ios,introduced=6.0)));





extern CMTime
CMClockGetTime(
  CMClockRef _Nonnull clock )
 __attribute__((availability(ios,introduced=6.0)));






extern OSStatus
CMClockGetAnchorTime(
  CMClockRef _Nonnull clock,
  CMTime * _Nonnull outClockTime,
  CMTime * _Nonnull outReferenceClockTime )
   __attribute__((availability(ios,introduced=6.0)));





extern Boolean
CMClockMightDrift(
  CMClockRef _Nonnull clock,
  CMClockRef _Nonnull otherClock )
   __attribute__((availability(ios,introduced=6.0)));
extern void
CMClockInvalidate(
  CMClockRef _Nonnull clock )
   __attribute__((availability(ios,introduced=6.0)));






extern CFTypeID
CMTimebaseGetTypeID( void )
 __attribute__((availability(ios,introduced=6.0)));
extern OSStatus
CMTimebaseCreateWithMasterClock(
  CFAllocatorRef _Nullable allocator,
  CMClockRef _Nonnull masterClock,
  __attribute__((cf_returns_retained)) CMTimebaseRef _Nullable * _Nonnull timebaseOut )
   __attribute__((availability(ios,introduced=6.0)));







extern OSStatus
CMTimebaseCreateWithMasterTimebase(
  CFAllocatorRef _Nullable allocator,
  CMTimebaseRef _Nonnull masterTimebase,
  __attribute__((cf_returns_retained)) CMTimebaseRef _Nullable * _Nonnull timebaseOut )
   __attribute__((availability(ios,introduced=6.0)));
extern CMTimebaseRef _Nullable
CMTimebaseCopyMasterTimebase(
  CMTimebaseRef _Nonnull timebase )
   __attribute__((availability(ios,introduced=9.0)));







extern CMClockRef _Nullable
CMTimebaseCopyMasterClock(
  CMTimebaseRef _Nonnull timebase )
   __attribute__((availability(ios,introduced=9.0)));







extern CMClockOrTimebaseRef _Nullable
CMTimebaseCopyMaster(
  CMTimebaseRef _Nonnull timebase )
   __attribute__((availability(ios,introduced=9.0)));





extern CMClockRef _Nullable
CMTimebaseCopyUltimateMasterClock(
  CMTimebaseRef _Nonnull timebase )
   __attribute__((availability(ios,introduced=9.0)));
extern CMTimebaseRef _Nullable
CMTimebaseGetMasterTimebase(
  CMTimebaseRef _Nonnull timebase )
   __attribute__((availability(ios,introduced=6.0,deprecated=9.0)));
extern CMClockRef _Nullable
CMTimebaseGetMasterClock(
  CMTimebaseRef _Nonnull timebase )
   __attribute__((availability(ios,introduced=6.0,deprecated=9.0)));
extern CMClockOrTimebaseRef _Nullable
CMTimebaseGetMaster(
  CMTimebaseRef _Nonnull timebase )
   __attribute__((availability(ios,introduced=6.0,deprecated=9.0)));







extern CMClockRef _Nullable
CMTimebaseGetUltimateMasterClock(
  CMTimebaseRef _Nonnull timebase )
   __attribute__((availability(ios,introduced=6.0,deprecated=9.0)));





extern CMTime
CMTimebaseGetTime(
  CMTimebaseRef _Nonnull timebase )
   __attribute__((availability(ios,introduced=6.0)));





extern CMTime
CMTimebaseGetTimeWithTimeScale(
  CMTimebaseRef _Nonnull timebase,
  CMTimeScale timescale,
  CMTimeRoundingMethod method)
   __attribute__((availability(ios,introduced=6.0)));





extern OSStatus
CMTimebaseSetTime(
  CMTimebaseRef _Nonnull timebase,
  CMTime time )
   __attribute__((availability(ios,introduced=6.0)));
extern OSStatus
CMTimebaseSetAnchorTime(
  CMTimebaseRef _Nonnull timebase,
  CMTime timebaseTime,
  CMTime immediateMasterTime)
   __attribute__((availability(ios,introduced=6.0)));
extern Float64
CMTimebaseGetRate(
  CMTimebaseRef _Nonnull timebase )
   __attribute__((availability(ios,introduced=6.0)));
extern OSStatus
CMTimebaseGetTimeAndRate(
  CMTimebaseRef _Nonnull timebase,
  CMTime * _Nullable outTime,
  Float64 * _Nullable outRate )
   __attribute__((availability(ios,introduced=6.0)));





extern OSStatus
CMTimebaseSetRate(
  CMTimebaseRef _Nonnull timebase,
  Float64 rate )
   __attribute__((availability(ios,introduced=6.0)));
extern OSStatus
CMTimebaseSetRateAndAnchorTime(
  CMTimebaseRef _Nonnull timebase,
  Float64 rate,
  CMTime timebaseTime,
  CMTime immediateMasterTime)
   __attribute__((availability(ios,introduced=6.0)));
extern Float64
CMTimebaseGetEffectiveRate(
  CMTimebaseRef _Nonnull timebase )
   __attribute__((availability(ios,introduced=6.0)));
extern OSStatus
CMTimebaseAddTimer(
  CMTimebaseRef _Nonnull timebase,
  CFRunLoopTimerRef _Nonnull timer,
  CFRunLoopRef _Nonnull runloop )
   __attribute__((availability(ios,introduced=6.0)));
extern OSStatus
CMTimebaseRemoveTimer(
  CMTimebaseRef _Nonnull timebase,
  CFRunLoopTimerRef _Nonnull timer )
   __attribute__((availability(ios,introduced=6.0)));
extern OSStatus
CMTimebaseSetTimerNextFireTime(
  CMTimebaseRef _Nonnull timebase,
  CFRunLoopTimerRef _Nonnull timer,
  CMTime fireTime,
  uint32_t flags )
   __attribute__((availability(ios,introduced=6.0)));
extern OSStatus
CMTimebaseSetTimerToFireImmediately(
  CMTimebaseRef _Nonnull timebase,
  CFRunLoopTimerRef _Nonnull timer )
   __attribute__((availability(ios,introduced=6.0)));
extern OSStatus
CMTimebaseAddTimerDispatchSource(
  CMTimebaseRef _Nonnull timebase,
  dispatch_source_t _Nonnull timerSource )
   __attribute__((availability(ios,introduced=6.0)));
extern OSStatus
CMTimebaseRemoveTimerDispatchSource(
  CMTimebaseRef _Nonnull timebase,
  dispatch_source_t _Nonnull timerSource )
   __attribute__((availability(ios,introduced=6.0)));
extern OSStatus
CMTimebaseSetTimerDispatchSourceNextFireTime(
  CMTimebaseRef _Nonnull timebase,
  dispatch_source_t _Nonnull timerSource,
  CMTime fireTime,
  uint32_t flags )
   __attribute__((availability(ios,introduced=6.0)));
extern OSStatus
CMTimebaseSetTimerDispatchSourceToFireImmediately(
  CMTimebaseRef _Nonnull timebase,
  dispatch_source_t _Nonnull timerSource )
   __attribute__((availability(ios,introduced=6.0)));
extern Float64
CMSyncGetRelativeRate(
  CMClockOrTimebaseRef _Nonnull ofClockOrTimebase,
  CMClockOrTimebaseRef _Nonnull relativeToClockOrTimebase )
   __attribute__((availability(ios,introduced=6.0)));
extern OSStatus
CMSyncGetRelativeRateAndAnchorTime(
  CMClockOrTimebaseRef _Nonnull ofClockOrTimebase,
  CMClockOrTimebaseRef _Nonnull relativeToClockOrTimebase,
  Float64* _Nullable outRelativeRate,
  CMTime* _Nullable outOfClockOrTimebaseAnchorTime,
  CMTime* _Nullable outRelativeToClockOrTimebaseAnchorTime)
   __attribute__((availability(ios,introduced=6.0)));
extern CMTime
CMSyncConvertTime(
  CMTime time,
  CMClockOrTimebaseRef _Nonnull fromClockOrTimebase,
  CMClockOrTimebaseRef _Nonnull toClockOrTimebase )
   __attribute__((availability(ios,introduced=6.0)));
extern Boolean
CMSyncMightDrift(
  CMClockOrTimebaseRef _Nonnull clockOrTimebase1,
  CMClockOrTimebaseRef _Nonnull clockOrTimebase2 )
   __attribute__((availability(ios,introduced=6.0)));
extern CMTime
CMSyncGetTime(
  CMClockOrTimebaseRef _Nonnull clockOrTimebase )
   __attribute__((availability(ios,introduced=6.0)));





extern OSStatus CMTimebaseNotificationBarrier(CMTimebaseRef _Nonnull timebase )
      __attribute__((availability(ios,introduced=6.0)));

#pragma clang assume_nonnull begin


extern const CFStringRef kCMTimebaseNotification_EffectiveRateChanged
        __attribute__((availability(ios,introduced=6.0)));


extern const CFStringRef kCMTimebaseNotification_TimeJumped
        __attribute__((availability(ios,introduced=6.0)));


extern const CFStringRef kCMTimebaseNotificationKey_EventTime
        __attribute__((availability(ios,introduced=7.0)));
#pragma clang assume_nonnull end



#pragma pack(pop)


}

#pragma clang assume_nonnull begin
extern "C" NSString *const AVCaptureSessionRuntimeErrorNotification __attribute__((availability(ios,introduced=4_0))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString *const AVCaptureSessionErrorKey __attribute__((availability(ios,introduced=4_0))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString *const AVCaptureSessionDidStartRunningNotification __attribute__((availability(ios,introduced=4_0))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString *const AVCaptureSessionDidStopRunningNotification __attribute__((availability(ios,introduced=4_0))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString *const AVCaptureSessionWasInterruptedNotification __attribute__((availability(ios,introduced=4_0))) __attribute__((availability(tvos,unavailable)));
typedef NSInteger AVCaptureSessionInterruptionReason; enum {
    AVCaptureSessionInterruptionReasonVideoDeviceNotAvailableInBackground = 1,
    AVCaptureSessionInterruptionReasonAudioDeviceInUseByAnotherClient = 2,
    AVCaptureSessionInterruptionReasonVideoDeviceInUseByAnotherClient = 3,
    AVCaptureSessionInterruptionReasonVideoDeviceNotAvailableWithMultipleForegroundApps = 4,
    AVCaptureSessionInterruptionReasonVideoDeviceNotAvailableDueToSystemPressure __attribute__((availability(ios,introduced=11_1))) = 5,
} __attribute__((availability(ios,introduced=9_0))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString *const AVCaptureSessionInterruptionReasonKey __attribute__((availability(ios,introduced=9_0))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString *const AVCaptureSessionInterruptionSystemPressureStateKey __attribute__((availability(ios,introduced=11_1))) __attribute__((availability(tvos,unavailable)));
extern "C" NSString *const AVCaptureSessionInterruptionEndedNotification __attribute__((availability(ios,introduced=4_0))) __attribute__((availability(tvos,unavailable)));
typedef NSInteger AVCaptureVideoOrientation; enum {
    AVCaptureVideoOrientationPortrait = 1,
    AVCaptureVideoOrientationPortraitUpsideDown = 2,
    AVCaptureVideoOrientationLandscapeRight = 3,
    AVCaptureVideoOrientationLandscapeLeft = 4,
} __attribute__((availability(ios,introduced=4_0))) __attribute__((availability(tvos,unavailable)));




// @class AVCaptureInput;
#ifndef _REWRITER_typedef_AVCaptureInput
#define _REWRITER_typedef_AVCaptureInput
typedef struct objc_object AVCaptureInput;
typedef struct {} _objc_exc_AVCaptureInput;
#endif

// @class AVCaptureOutput;
#ifndef _REWRITER_typedef_AVCaptureOutput
#define _REWRITER_typedef_AVCaptureOutput
typedef struct objc_object AVCaptureOutput;
typedef struct {} _objc_exc_AVCaptureOutput;
#endif

// @class AVCaptureConnection;
#ifndef _REWRITER_typedef_AVCaptureConnection
#define _REWRITER_typedef_AVCaptureConnection
typedef struct objc_object AVCaptureConnection;
typedef struct {} _objc_exc_AVCaptureConnection;
#endif

// @class AVCaptureSessionInternal;
#ifndef _REWRITER_typedef_AVCaptureSessionInternal
#define _REWRITER_typedef_AVCaptureSessionInternal
typedef struct objc_object AVCaptureSessionInternal;
typedef struct {} _objc_exc_AVCaptureSessionInternal;
#endif

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_AVCaptureSession
#define _REWRITER_typedef_AVCaptureSession
typedef struct objc_object AVCaptureSession;
typedef struct {} _objc_exc_AVCaptureSession;
#endif

struct AVCaptureSession_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVCaptureSessionInternal *__strong _internal;
};

// - (BOOL)canSetSessionPreset:(AVCaptureSessionPreset)preset;
// @property(nonatomic, copy) AVCaptureSessionPreset sessionPreset;
// @property(nonatomic, readonly) NSArray<__kindof AVCaptureInput *> *inputs;
// - (BOOL)canAddInput:(AVCaptureInput *)input;
// - (void)addInput:(AVCaptureInput *)input;
// - (void)removeInput:(AVCaptureInput *)input;
// @property(nonatomic, readonly) NSArray<__kindof AVCaptureOutput *> *outputs;
// - (BOOL)canAddOutput:(AVCaptureOutput *)output;
// - (void)addOutput:(AVCaptureOutput *)output;
// - (void)removeOutput:(AVCaptureOutput *)output;
// - (void)addInputWithNoConnections:(AVCaptureInput *)input __attribute__((availability(ios,introduced=8_0)));
// - (void)addOutputWithNoConnections:(AVCaptureOutput *)output __attribute__((availability(ios,introduced=8_0)));
// - (BOOL)canAddConnection:(AVCaptureConnection *)connection __attribute__((availability(ios,introduced=8_0)));
// - (void)addConnection:(AVCaptureConnection *)connection __attribute__((availability(ios,introduced=8_0)));
// - (void)removeConnection:(AVCaptureConnection *)connection __attribute__((availability(ios,introduced=8_0)));
// - (void)beginConfiguration;
// - (void)commitConfiguration;
// @property(nonatomic, readonly, getter=isRunning) BOOL running;
// @property(nonatomic, readonly, getter=isInterrupted) BOOL interrupted __attribute__((availability(ios,introduced=4_0)));
// @property(nonatomic) BOOL usesApplicationAudioSession __attribute__((availability(ios,introduced=7_0)));
// @property(nonatomic) BOOL automaticallyConfiguresApplicationAudioSession __attribute__((availability(ios,introduced=7_0)));
// @property(nonatomic) BOOL automaticallyConfiguresCaptureDeviceForWideColor __attribute__((availability(ios,introduced=10_0)));
// - (void)startRunning;
// - (void)stopRunning;
// @property(nonatomic, readonly, nullable) __attribute__((NSObject)) CMClockRef masterClock __attribute__((availability(ios,introduced=7_0)));

/* @end */

typedef NSInteger AVVideoFieldMode; enum {
    AVVideoFieldModeBoth = 0,
    AVVideoFieldModeTopOnly = 1,
    AVVideoFieldModeBottomOnly = 2,
    AVVideoFieldModeDeinterlace = 3,
} __attribute__((availability(ios,unavailable))) __attribute__((availability(tvos,unavailable)));




// @class AVCaptureAudioChannel;
#ifndef _REWRITER_typedef_AVCaptureAudioChannel
#define _REWRITER_typedef_AVCaptureAudioChannel
typedef struct objc_object AVCaptureAudioChannel;
typedef struct {} _objc_exc_AVCaptureAudioChannel;
#endif

// @class AVCaptureVideoPreviewLayer;
#ifndef _REWRITER_typedef_AVCaptureVideoPreviewLayer
#define _REWRITER_typedef_AVCaptureVideoPreviewLayer
typedef struct objc_object AVCaptureVideoPreviewLayer;
typedef struct {} _objc_exc_AVCaptureVideoPreviewLayer;
#endif

// @class AVCaptureInputPort;
#ifndef _REWRITER_typedef_AVCaptureInputPort
#define _REWRITER_typedef_AVCaptureInputPort
typedef struct objc_object AVCaptureInputPort;
typedef struct {} _objc_exc_AVCaptureInputPort;
#endif

// @class AVCaptureConnectionInternal;
#ifndef _REWRITER_typedef_AVCaptureConnectionInternal
#define _REWRITER_typedef_AVCaptureConnectionInternal
typedef struct objc_object AVCaptureConnectionInternal;
typedef struct {} _objc_exc_AVCaptureConnectionInternal;
#endif

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_AVCaptureConnection
#define _REWRITER_typedef_AVCaptureConnection
typedef struct objc_object AVCaptureConnection;
typedef struct {} _objc_exc_AVCaptureConnection;
#endif

struct AVCaptureConnection_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVCaptureConnectionInternal *__strong _internal;
};

// + (instancetype)connectionWithInputPorts:(NSArray<AVCaptureInputPort *> *)ports output:(AVCaptureOutput *)output __attribute__((availability(ios,introduced=8_0)));
// + (instancetype)connectionWithInputPort:(AVCaptureInputPort *)port videoPreviewLayer:(AVCaptureVideoPreviewLayer *)layer __attribute__((availability(ios,introduced=8_0)));
// - (instancetype)initWithInputPorts:(NSArray<AVCaptureInputPort *> *)ports output:(AVCaptureOutput *)output __attribute__((availability(ios,introduced=8_0)));
// - (instancetype)initWithInputPort:(AVCaptureInputPort *)port videoPreviewLayer:(AVCaptureVideoPreviewLayer *)layer __attribute__((availability(ios,introduced=8_0)));
// @property(nonatomic, readonly) NSArray<AVCaptureInputPort *> *inputPorts;
// @property(nonatomic, readonly) AVCaptureOutput *output;
// @property(nonatomic, readonly) AVCaptureVideoPreviewLayer *videoPreviewLayer __attribute__((availability(ios,introduced=6_0)));
// @property(nonatomic, getter=isEnabled) BOOL enabled;
// @property(nonatomic, readonly, getter=isActive) BOOL active;
// @property(nonatomic, readonly) NSArray<AVCaptureAudioChannel *> *audioChannels;
// @property(nonatomic, readonly, getter=isVideoMirroringSupported) BOOL supportsVideoMirroring;
// @property(nonatomic, getter=isVideoMirrored) BOOL videoMirrored;
// @property(nonatomic) BOOL automaticallyAdjustsVideoMirroring __attribute__((availability(ios,introduced=6_0)));
// @property(nonatomic, readonly, getter=isVideoOrientationSupported) BOOL supportsVideoOrientation;
// @property(nonatomic) AVCaptureVideoOrientation videoOrientation;
// @property(nonatomic, readonly, getter=isVideoMinFrameDurationSupported) BOOL supportsVideoMinFrameDuration __attribute__((availability(ios,introduced=5_0,deprecated=7_0,message="" "Use AVCaptureDevice's activeFormat.videoSupportedFrameRateRanges instead.")));
// @property(nonatomic) CMTime videoMinFrameDuration __attribute__((availability(ios,introduced=5_0,deprecated=7_0,message="" "Use AVCaptureDevice's activeVideoMinFrameDuration instead.")));
// @property(nonatomic, readonly, getter=isVideoMaxFrameDurationSupported) BOOL supportsVideoMaxFrameDuration __attribute__((availability(ios,introduced=5_0,deprecated=7_0,message="" "Use AVCaptureDevice's activeFormat.videoSupportedFrameRateRanges instead.")));
// @property(nonatomic) CMTime videoMaxFrameDuration __attribute__((availability(ios,introduced=5_0,deprecated=7_0,message="" "Use AVCaptureDevice's activeVideoMaxFrameDuration instead.")));
// @property(nonatomic, readonly) CGFloat videoMaxScaleAndCropFactor __attribute__((availability(ios,introduced=5_0)));
// @property(nonatomic) CGFloat videoScaleAndCropFactor __attribute__((availability(ios,introduced=5_0)));
// @property(nonatomic) AVCaptureVideoStabilizationMode preferredVideoStabilizationMode __attribute__((availability(ios,introduced=8_0)));
// @property(nonatomic, readonly) AVCaptureVideoStabilizationMode activeVideoStabilizationMode __attribute__((availability(ios,introduced=8_0)));
// @property(nonatomic, readonly, getter=isVideoStabilizationSupported) BOOL supportsVideoStabilization __attribute__((availability(ios,introduced=6_0)));
// @property(nonatomic, readonly, getter=isVideoStabilizationEnabled) BOOL videoStabilizationEnabled __attribute__((availability(ios,introduced=6_0,deprecated=8_0,message="" "Use activeVideoStabilizationMode instead.")));
// @property(nonatomic) BOOL enablesVideoStabilizationWhenAvailable __attribute__((availability(ios,introduced=6_0,deprecated=8_0,message="" "Use preferredVideoStabilizationMode instead.")));
// @property(nonatomic, readonly, getter=isCameraIntrinsicMatrixDeliverySupported) BOOL cameraIntrinsicMatrixDeliverySupported __attribute__((availability(ios,introduced=11_0)));
// @property(nonatomic, getter=isCameraIntrinsicMatrixDeliveryEnabled) BOOL cameraIntrinsicMatrixDeliveryEnabled __attribute__((availability(ios,introduced=11_0)));



/* @end */





// @class AVCaptureAudioChannelInternal;
#ifndef _REWRITER_typedef_AVCaptureAudioChannelInternal
#define _REWRITER_typedef_AVCaptureAudioChannelInternal
typedef struct objc_object AVCaptureAudioChannelInternal;
typedef struct {} _objc_exc_AVCaptureAudioChannelInternal;
#endif

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_AVCaptureAudioChannel
#define _REWRITER_typedef_AVCaptureAudioChannel
typedef struct objc_object AVCaptureAudioChannel;
typedef struct {} _objc_exc_AVCaptureAudioChannel;
#endif

struct AVCaptureAudioChannel_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVCaptureAudioChannelInternal *__strong _internal;
};

// @property(nonatomic, readonly) float averagePowerLevel;
// @property(nonatomic, readonly) float peakHoldLevel;
/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin



// @class AVMetadataObject;
#ifndef _REWRITER_typedef_AVMetadataObject
#define _REWRITER_typedef_AVMetadataObject
typedef struct objc_object AVMetadataObject;
typedef struct {} _objc_exc_AVMetadataObject;
#endif

// @class AVCaptureOutputInternal;
#ifndef _REWRITER_typedef_AVCaptureOutputInternal
#define _REWRITER_typedef_AVCaptureOutputInternal
typedef struct objc_object AVCaptureOutputInternal;
typedef struct {} _objc_exc_AVCaptureOutputInternal;
#endif

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_AVCaptureOutput
#define _REWRITER_typedef_AVCaptureOutput
typedef struct objc_object AVCaptureOutput;
typedef struct {} _objc_exc_AVCaptureOutput;
#endif

struct AVCaptureOutput_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVCaptureOutputInternal *__strong _outputInternal;
};


// - (instancetype)init __attribute__((unavailable)); // + (instancetype)new __attribute__((unavailable));
// @property(nonatomic, readonly) NSArray<AVCaptureConnection *> *connections;
// - (nullable AVCaptureConnection *)connectionWithMediaType:(AVMediaType)mediaType __attribute__((availability(ios,introduced=5_0)));
// - (nullable AVMetadataObject *)transformedMetadataObjectForMetadataObject:(AVMetadataObject *)metadataObject connection:(AVCaptureConnection *)connection __attribute__((availability(ios,introduced=6_0)));
// - (CGRect)metadataOutputRectOfInterestForRect:(CGRect)rectInOutputCoordinates __attribute__((availability(ios,introduced=7_0)));
// - (CGRect)rectForMetadataOutputRectOfInterest:(CGRect)rectInMetadataOutputCoordinates __attribute__((availability(ios,introduced=7_0)));

/* @end */

typedef NSInteger AVCaptureOutputDataDroppedReason; enum {
    AVCaptureOutputDataDroppedReasonNone = 0,
    AVCaptureOutputDataDroppedReasonLateData = 1,
    AVCaptureOutputDataDroppedReasonOutOfBuffers = 2,
    AVCaptureOutputDataDroppedReasonDiscontinuity = 3,
} __attribute__((availability(ios,introduced=11_0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
#pragma clang assume_nonnull end



#pragma clang assume_nonnull begin



// @class AVCaptureAudioDataOutputInternal;
#ifndef _REWRITER_typedef_AVCaptureAudioDataOutputInternal
#define _REWRITER_typedef_AVCaptureAudioDataOutputInternal
typedef struct objc_object AVCaptureAudioDataOutputInternal;
typedef struct {} _objc_exc_AVCaptureAudioDataOutputInternal;
#endif

// @protocol AVCaptureAudioDataOutputSampleBufferDelegate;
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_AVCaptureAudioDataOutput
#define _REWRITER_typedef_AVCaptureAudioDataOutput
typedef struct objc_object AVCaptureAudioDataOutput;
typedef struct {} _objc_exc_AVCaptureAudioDataOutput;
#endif

struct AVCaptureAudioDataOutput_IMPL {
	struct AVCaptureOutput_IMPL AVCaptureOutput_IVARS;
	AVCaptureAudioDataOutputInternal *__strong _internal;
};


// - (instancetype)init;

// + (instancetype)new;
// - (void)setSampleBufferDelegate:(nullable id<AVCaptureAudioDataOutputSampleBufferDelegate>)sampleBufferDelegate queue:(nullable dispatch_queue_t)sampleBufferCallbackQueue;
// @property(nonatomic, readonly, nullable) id<AVCaptureAudioDataOutputSampleBufferDelegate> sampleBufferDelegate;
// @property(nonatomic, readonly, nullable) dispatch_queue_t sampleBufferCallbackQueue;
// - (nullable NSDictionary *)recommendedAudioSettingsForAssetWriterWithOutputFileType:(AVFileType)outputFileType __attribute__((availability(ios,introduced=7_0)));

/* @end */








__attribute__((availability(ios,introduced=4_0))) __attribute__((availability(tvos,unavailable)))
// @protocol AVCaptureAudioDataOutputSampleBufferDelegate <NSObject>

/* @optional */
// - (void)captureOutput:(AVCaptureOutput *)output didOutputSampleBuffer:(CMSampleBufferRef)sampleBuffer fromConnection:(AVCaptureConnection *)connection;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin



// @class AVCaptureAudioPreviewOutputInternal;
#ifndef _REWRITER_typedef_AVCaptureAudioPreviewOutputInternal
#define _REWRITER_typedef_AVCaptureAudioPreviewOutputInternal
typedef struct objc_object AVCaptureAudioPreviewOutputInternal;
typedef struct {} _objc_exc_AVCaptureAudioPreviewOutputInternal;
#endif

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=NA))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_AVCaptureAudioPreviewOutput
#define _REWRITER_typedef_AVCaptureAudioPreviewOutput
typedef struct objc_object AVCaptureAudioPreviewOutput;
typedef struct {} _objc_exc_AVCaptureAudioPreviewOutput;
#endif

struct AVCaptureAudioPreviewOutput_IMPL {
	struct AVCaptureOutput_IMPL AVCaptureOutput_IVARS;
	AVCaptureAudioPreviewOutputInternal *__strong _internal;
};


// - (instancetype)init;

// + (instancetype)new;
// @property(nonatomic, copy, nullable) NSString *outputDeviceUniqueID;
// @property(nonatomic) float volume;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin



// @class AVDepthData;
#ifndef _REWRITER_typedef_AVDepthData
#define _REWRITER_typedef_AVDepthData
typedef struct objc_object AVDepthData;
typedef struct {} _objc_exc_AVDepthData;
#endif


// @class AVCaptureDepthDataOutputInternal;
#ifndef _REWRITER_typedef_AVCaptureDepthDataOutputInternal
#define _REWRITER_typedef_AVCaptureDepthDataOutputInternal
typedef struct objc_object AVCaptureDepthDataOutputInternal;
typedef struct {} _objc_exc_AVCaptureDepthDataOutputInternal;
#endif

// @protocol AVCaptureDepthDataOutputDelegate;
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=11_0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_AVCaptureDepthDataOutput
#define _REWRITER_typedef_AVCaptureDepthDataOutput
typedef struct objc_object AVCaptureDepthDataOutput;
typedef struct {} _objc_exc_AVCaptureDepthDataOutput;
#endif

struct AVCaptureDepthDataOutput_IMPL {
	struct AVCaptureOutput_IMPL AVCaptureOutput_IVARS;
	AVCaptureDepthDataOutputInternal *__strong _internal;
};


// - (instancetype)init;

// + (instancetype)new;
// - (void)setDelegate:(id<AVCaptureDepthDataOutputDelegate>)delegate callbackQueue:(dispatch_queue_t)callbackQueue;
// @property(nonatomic, readonly) id<AVCaptureDepthDataOutputDelegate> delegate;
// @property(nonatomic, readonly) dispatch_queue_t delegateCallbackQueue;
// @property(nonatomic) BOOL alwaysDiscardsLateDepthData;
// @property(nonatomic, getter=isFilteringEnabled) BOOL filteringEnabled;

/* @end */








__attribute__((availability(ios,introduced=11_0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))
// @protocol AVCaptureDepthDataOutputDelegate <NSObject>

/* @optional */
// - (void)depthDataOutput:(AVCaptureDepthDataOutput *)output didOutputDepthData:(AVDepthData *)depthData timestamp:(CMTime)timestamp connection:(AVCaptureConnection *)connection;
// - (void)depthDataOutput:(AVCaptureDepthDataOutput *)output didDropDepthData:(AVDepthData *)depthData timestamp:(CMTime)timestamp connection:(AVCaptureConnection *)connection reason:(AVCaptureOutputDataDroppedReason)reason;

/* @end */

#pragma clang assume_nonnull end
extern "C" NSString *const AVVideoCodecKey __attribute__((availability(ios,introduced=4_0)));





typedef NSString * AVVideoCodecType __attribute__((swift_wrapper(enum)));

 extern "C" AVVideoCodecType const AVVideoCodecTypeHEVC __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,unavailable)));
 extern "C" AVVideoCodecType const AVVideoCodecTypeH264 __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,unavailable)));
 extern "C" AVVideoCodecType const AVVideoCodecTypeJPEG __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,unavailable)));
 extern "C" AVVideoCodecType const AVVideoCodecTypeAppleProRes4444 __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,unavailable)));
 extern "C" AVVideoCodecType const AVVideoCodecTypeAppleProRes422 __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,unavailable)));

 extern "C" NSString *const AVVideoCodecHEVC __attribute__((availability(macos,introduced=10.13,deprecated=10.13,replacement="AVVideoCodecTypeHEVC"))) __attribute__((availability(ios,introduced=11.0,deprecated=11.0,replacement="AVVideoCodecTypeHEVC"))) __attribute__((availability(tvos,introduced=11.0,deprecated=11.0,replacement="AVVideoCodecTypeHEVC"))) __attribute__((availability(watchos,unavailable)));
 extern "C" NSString *const AVVideoCodecH264 __attribute__((availability(macos,introduced=10.7,deprecated=10.13,replacement="AVVideoCodecTypeH264"))) __attribute__((availability(ios,introduced=4.0,deprecated=11.0,replacement="AVVideoCodecTypeH264"))) __attribute__((availability(tvos,introduced=9.0,deprecated=11.0,replacement="AVVideoCodecTypeH264"))) __attribute__((availability(watchos,unavailable)));
 extern "C" NSString *const AVVideoCodecJPEG __attribute__((availability(macos,introduced=10.7,deprecated=10.13,replacement="AVVideoCodecTypeJPEG"))) __attribute__((availability(ios,introduced=4.0,deprecated=11.0,replacement="AVVideoCodecTypeJPEG"))) __attribute__((availability(tvos,introduced=9.0,deprecated=11.0,replacement="AVVideoCodecTypeJPEG"))) __attribute__((availability(watchos,unavailable)));
 extern "C" NSString *const AVVideoCodecAppleProRes4444 __attribute__((availability(macos,introduced=10.7,deprecated=10.13,replacement="AVVideoCodecTypeAppleProRes4444"))) __attribute__((availability(ios,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
 extern "C" NSString *const AVVideoCodecAppleProRes422 __attribute__((availability(macos,introduced=10.7,deprecated=10.13,replacement="AVVideoCodecTypeAppleProRes422"))) __attribute__((availability(ios,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));


extern "C" NSString *const AVVideoWidthKey __attribute__((availability(ios,introduced=4_0)));
extern "C" NSString *const AVVideoHeightKey __attribute__((availability(ios,introduced=4_0)));
extern "C" NSString *const AVVideoPixelAspectRatioKey __attribute__((availability(ios,introduced=4_0)));
 extern "C" NSString *const AVVideoPixelAspectRatioHorizontalSpacingKey __attribute__((availability(ios,introduced=4_0)));
 extern "C" NSString *const AVVideoPixelAspectRatioVerticalSpacingKey __attribute__((availability(ios,introduced=4_0)));
extern "C" NSString *const AVVideoCleanApertureKey __attribute__((availability(ios,introduced=4_0)));
 extern "C" NSString *const AVVideoCleanApertureWidthKey __attribute__((availability(ios,introduced=4_0)));
 extern "C" NSString *const AVVideoCleanApertureHeightKey __attribute__((availability(ios,introduced=4_0)));
 extern "C" NSString *const AVVideoCleanApertureHorizontalOffsetKey __attribute__((availability(ios,introduced=4_0)));
 extern "C" NSString *const AVVideoCleanApertureVerticalOffsetKey __attribute__((availability(ios,introduced=4_0)));

extern "C" NSString *const AVVideoScalingModeKey __attribute__((availability(ios,introduced=5_0)));

 extern "C" NSString *const AVVideoScalingModeFit __attribute__((availability(ios,introduced=5_0)));

 extern "C" NSString *const AVVideoScalingModeResize __attribute__((availability(ios,introduced=5_0)));

 extern "C" NSString *const AVVideoScalingModeResizeAspect __attribute__((availability(ios,introduced=5_0)));

 extern "C" NSString *const AVVideoScalingModeResizeAspectFill __attribute__((availability(ios,introduced=5_0)));
extern "C" NSString *const AVVideoColorPropertiesKey __attribute__((availability(ios,introduced=10_0)));
 extern "C" NSString *const AVVideoColorPrimariesKey __attribute__((availability(ios,introduced=10_0)));
  extern "C" NSString *const AVVideoColorPrimaries_ITU_R_709_2 __attribute__((availability(ios,introduced=10_0)));
  extern "C" NSString *const AVVideoColorPrimaries_EBU_3213 __attribute__((availability(ios,introduced=NA)));
  extern "C" NSString *const AVVideoColorPrimaries_SMPTE_C __attribute__((availability(ios,introduced=10_0)));
  extern "C" NSString *const AVVideoColorPrimaries_P3_D65 __attribute__((availability(ios,introduced=10_0)));
  extern "C" NSString *const AVVideoColorPrimaries_ITU_R_2020 __attribute__((availability(ios,introduced=11_0)));
 extern "C" NSString *const AVVideoTransferFunctionKey __attribute__((availability(ios,introduced=10_0)));
  extern "C" NSString *const AVVideoTransferFunction_ITU_R_709_2 __attribute__((availability(ios,introduced=10_0)));
  extern "C" NSString *const AVVideoTransferFunction_SMPTE_240M_1995 __attribute__((availability(ios,introduced=NA)));
  extern "C" NSString *const AVVideoTransferFunction_SMPTE_ST_2084_PQ __attribute__((availability(ios,introduced=11_0)));
  extern "C" NSString *const AVVideoTransferFunction_ITU_R_2100_HLG __attribute__((availability(ios,introduced=11_0)));
 extern "C" NSString *const AVVideoYCbCrMatrixKey __attribute__((availability(ios,introduced=10_0)));
  extern "C" NSString *const AVVideoYCbCrMatrix_ITU_R_709_2 __attribute__((availability(ios,introduced=10_0)));
  extern "C" NSString *const AVVideoYCbCrMatrix_ITU_R_601_4 __attribute__((availability(ios,introduced=10_0)));
  extern "C" NSString *const AVVideoYCbCrMatrix_SMPTE_240M_1995 __attribute__((availability(ios,introduced=NA)));
  extern "C" NSString *const AVVideoYCbCrMatrix_ITU_R_2020 __attribute__((availability(ios,introduced=11_0)));
extern "C" NSString *const AVVideoAllowWideColorKey __attribute__((availability(ios,introduced=10_0)));
extern "C" NSString *const AVVideoCompressionPropertiesKey __attribute__((availability(ios,introduced=4_0)));
 extern "C" NSString *const AVVideoAverageBitRateKey __attribute__((availability(ios,introduced=4_0)));
 extern "C" NSString *const AVVideoQualityKey __attribute__((availability(ios,introduced=5_0)));
 extern "C" NSString *const AVVideoMaxKeyFrameIntervalKey __attribute__((availability(ios,introduced=4_0)));
 extern "C" NSString *const AVVideoMaxKeyFrameIntervalDurationKey __attribute__((availability(ios,introduced=7_0)));
 extern "C" NSString *const AVVideoAllowFrameReorderingKey __attribute__((availability(ios,introduced=7_0)));

 extern "C" NSString *const AVVideoProfileLevelKey __attribute__((availability(ios,introduced=4_0)));



  extern "C" NSString *const AVVideoProfileLevelH264Baseline30 __attribute__((availability(ios,introduced=4_0)));
  extern "C" NSString *const AVVideoProfileLevelH264Baseline31 __attribute__((availability(ios,introduced=4_0)));
        extern "C" NSString *const AVVideoProfileLevelH264Baseline41 __attribute__((availability(ios,introduced=5_0)));
  extern "C" NSString *const AVVideoProfileLevelH264BaselineAutoLevel __attribute__((availability(ios,introduced=7_0)));
  extern "C" NSString *const AVVideoProfileLevelH264Main30 __attribute__((availability(ios,introduced=4_0)));
  extern "C" NSString *const AVVideoProfileLevelH264Main31 __attribute__((availability(ios,introduced=4_0)));
  extern "C" NSString *const AVVideoProfileLevelH264Main32 __attribute__((availability(ios,introduced=5_0)));
  extern "C" NSString *const AVVideoProfileLevelH264Main41 __attribute__((availability(ios,introduced=5_0)));
  extern "C" NSString *const AVVideoProfileLevelH264MainAutoLevel __attribute__((availability(ios,introduced=7_0)));
  extern "C" NSString *const AVVideoProfileLevelH264High40 __attribute__((availability(ios,introduced=6_0)));
  extern "C" NSString *const AVVideoProfileLevelH264High41 __attribute__((availability(ios,introduced=6_0)));
  extern "C" NSString *const AVVideoProfileLevelH264HighAutoLevel __attribute__((availability(ios,introduced=7_0)));
 extern "C" NSString *const AVVideoH264EntropyModeKey __attribute__((availability(ios,introduced=7_0)));
  extern "C" NSString *const AVVideoH264EntropyModeCAVLC __attribute__((availability(ios,introduced=7_0)));
  extern "C" NSString *const AVVideoH264EntropyModeCABAC __attribute__((availability(ios,introduced=7_0)));
 extern "C" NSString *const AVVideoExpectedSourceFrameRateKey __attribute__((availability(ios,introduced=7_0)));
 extern "C" NSString *const AVVideoAverageNonDroppableFrameRateKey __attribute__((availability(ios,introduced=7_0)));
extern "C" NSString *const AVVideoDecompressionPropertiesKey __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
extern "C" NSString *const AVVideoEncoderSpecificationKey __attribute__((availability(ios,introduced=NA)));

typedef NSString * AVVideoApertureMode __attribute__((swift_wrapper(enum)));







extern "C" AVVideoApertureMode const AVVideoApertureModeCleanAperture __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,unavailable)));







extern "C" AVVideoApertureMode const AVVideoApertureModeProductionAperture __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,unavailable)));







extern "C" AVVideoApertureMode const AVVideoApertureModeEncodedPixels __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,unavailable)));


#pragma clang assume_nonnull begin



// @class AVCaptureFileOutputInternal;
#ifndef _REWRITER_typedef_AVCaptureFileOutputInternal
#define _REWRITER_typedef_AVCaptureFileOutputInternal
typedef struct objc_object AVCaptureFileOutputInternal;
typedef struct {} _objc_exc_AVCaptureFileOutputInternal;
#endif

// @class AVMetadataItem;
#ifndef _REWRITER_typedef_AVMetadataItem
#define _REWRITER_typedef_AVMetadataItem
typedef struct objc_object AVMetadataItem;
typedef struct {} _objc_exc_AVMetadataItem;
#endif

// @protocol AVCaptureFileOutputDelegate;
// @protocol AVCaptureFileOutputRecordingDelegate;
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_AVCaptureFileOutput
#define _REWRITER_typedef_AVCaptureFileOutput
typedef struct objc_object AVCaptureFileOutput;
typedef struct {} _objc_exc_AVCaptureFileOutput;
#endif

struct AVCaptureFileOutput_IMPL {
	struct AVCaptureOutput_IMPL AVCaptureOutput_IVARS;
	AVCaptureFileOutputInternal *__strong _fileOutputInternal;
};

// @property(nonatomic, readonly, nullable) NSURL *outputFileURL;
// - (void)startRecordingToOutputFileURL:(NSURL *)outputFileURL recordingDelegate:(id<AVCaptureFileOutputRecordingDelegate>)delegate;
// - (void)stopRecording;
// @property(nonatomic, readonly, getter=isRecording) BOOL recording;
// @property(nonatomic, readonly) CMTime recordedDuration;
// @property(nonatomic, readonly) int64_t recordedFileSize;
// @property(nonatomic) CMTime maxRecordedDuration;
// @property(nonatomic) int64_t maxRecordedFileSize;
// @property(nonatomic) int64_t minFreeDiskSpaceLimit;

/* @end */








__attribute__((availability(ios,introduced=4_0))) __attribute__((availability(tvos,unavailable)))
// @protocol AVCaptureFileOutputRecordingDelegate <NSObject>

/* @optional */
// - (void)captureOutput:(AVCaptureFileOutput *)output didStartRecordingToOutputFileAtURL:(NSURL *)fileURL fromConnections:(NSArray<AVCaptureConnection *> *)connections;
// - (void)captureOutput:(AVCaptureFileOutput *)output didPauseRecordingToOutputFileAtURL:(NSURL *)fileURL fromConnections:(NSArray<AVCaptureConnection *> *)connections __attribute__((availability(ios,unavailable)));
// - (void)captureOutput:(AVCaptureFileOutput *)output didResumeRecordingToOutputFileAtURL:(NSURL *)fileURL fromConnections:(NSArray<AVCaptureConnection *> *)connections __attribute__((availability(ios,unavailable)));
// - (void)captureOutput:(AVCaptureFileOutput *)output willFinishRecordingToOutputFileAtURL:(NSURL *)fileURL fromConnections:(NSArray<AVCaptureConnection *> *)connections error:(nullable NSError *)error __attribute__((availability(ios,unavailable)));

/* @required */
// - (void)captureOutput:(AVCaptureFileOutput *)output didFinishRecordingToOutputFileAtURL:(NSURL *)outputFileURL fromConnections:(NSArray<AVCaptureConnection *> *)connections error:(nullable NSError *)error;

/* @end */








__attribute__((availability(ios,unavailable))) __attribute__((availability(tvos,unavailable)))
// @protocol AVCaptureFileOutputDelegate <NSObject>

/* @required */
// - (BOOL)captureOutputShouldProvideSampleAccurateRecordingStart:(AVCaptureOutput *)output __attribute__((availability(ios,unavailable)));

/* @optional */
// - (void)captureOutput:(AVCaptureFileOutput *)output didOutputSampleBuffer:(CMSampleBufferRef)sampleBuffer fromConnection:(AVCaptureConnection *)connection;

/* @end */





// @class AVCaptureMovieFileOutputInternal;
#ifndef _REWRITER_typedef_AVCaptureMovieFileOutputInternal
#define _REWRITER_typedef_AVCaptureMovieFileOutputInternal
typedef struct objc_object AVCaptureMovieFileOutputInternal;
typedef struct {} _objc_exc_AVCaptureMovieFileOutputInternal;
#endif

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_AVCaptureMovieFileOutput
#define _REWRITER_typedef_AVCaptureMovieFileOutput
typedef struct objc_object AVCaptureMovieFileOutput;
typedef struct {} _objc_exc_AVCaptureMovieFileOutput;
#endif

struct AVCaptureMovieFileOutput_IMPL {
	struct AVCaptureFileOutput_IMPL AVCaptureFileOutput_IVARS;
	AVCaptureMovieFileOutputInternal *__strong _internal;
};


// - (instancetype)init;

// + (instancetype)new;
// @property(nonatomic) CMTime movieFragmentInterval;
// @property(nonatomic, copy, nullable) NSArray<AVMetadataItem *> *metadata;
// @property(nonatomic, readonly) NSArray<AVVideoCodecType> *availableVideoCodecTypes __attribute__((availability(ios,introduced=10_0)));
// - (NSDictionary<NSString *, id> *)outputSettingsForConnection:(AVCaptureConnection *)connection __attribute__((availability(ios,introduced=10_0)));
// - (void)setOutputSettings:(nullable NSDictionary<NSString *, id> *)outputSettings forConnection:(AVCaptureConnection *)connection __attribute__((availability(ios,introduced=10_0)));
// - (BOOL)recordsVideoOrientationAndMirroringChangesAsMetadataTrackForConnection:(AVCaptureConnection *)connection __attribute__((availability(ios,introduced=9_0)));
// - (void)setRecordsVideoOrientationAndMirroringChanges:(BOOL)doRecordChanges asMetadataTrackForConnection:(AVCaptureConnection *)connection __attribute__((availability(ios,introduced=9_0)));

/* @end */





// @class AVCaptureAudioFileOutputInternal;
#ifndef _REWRITER_typedef_AVCaptureAudioFileOutputInternal
#define _REWRITER_typedef_AVCaptureAudioFileOutputInternal
typedef struct objc_object AVCaptureAudioFileOutputInternal;
typedef struct {} _objc_exc_AVCaptureAudioFileOutputInternal;
#endif

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=NA))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_AVCaptureAudioFileOutput
#define _REWRITER_typedef_AVCaptureAudioFileOutput
typedef struct objc_object AVCaptureAudioFileOutput;
typedef struct {} _objc_exc_AVCaptureAudioFileOutput;
#endif

struct AVCaptureAudioFileOutput_IMPL {
	struct AVCaptureFileOutput_IMPL AVCaptureFileOutput_IVARS;
	AVCaptureAudioFileOutputInternal *__strong _internal;
};


// - (instancetype)init;

// + (instancetype)new;
// + (NSArray<AVFileType> *)availableOutputFileTypes;
// - (void)startRecordingToOutputFileURL:(NSURL *)outputFileURL outputFileType:(AVFileType)fileType recordingDelegate:(id<AVCaptureFileOutputRecordingDelegate>)delegate;
// @property(nonatomic, copy) NSArray<AVMetadataItem *> *metadata;
// @property(nonatomic, copy, nullable) NSDictionary<NSString *, id> *audioSettings;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin







typedef NSString * AVMetadataObjectType __attribute__((swift_wrapper(enum))) __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(tvos,unavailable)));




// @class AVMetadataObjectInternal;
#ifndef _REWRITER_typedef_AVMetadataObjectInternal
#define _REWRITER_typedef_AVMetadataObjectInternal
typedef struct objc_object AVMetadataObjectInternal;
typedef struct {} _objc_exc_AVMetadataObjectInternal;
#endif

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_AVMetadataObject
#define _REWRITER_typedef_AVMetadataObject
typedef struct objc_object AVMetadataObject;
typedef struct {} _objc_exc_AVMetadataObject;
#endif

struct AVMetadataObject_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVMetadataObjectInternal *__strong _objectInternal;
};


// - (instancetype)init __attribute__((unavailable)); // + (instancetype)new __attribute__((unavailable));
// @property(readonly) CMTime time;
// @property(readonly) CMTime duration;
// @property(readonly) CGRect bounds;
// @property(readonly) AVMetadataObjectType type;

/* @end */

extern "C" AVMetadataObjectType const AVMetadataObjectTypeFace __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(tvos,unavailable)));




// @class AVMetadataFaceObjectInternal;
#ifndef _REWRITER_typedef_AVMetadataFaceObjectInternal
#define _REWRITER_typedef_AVMetadataFaceObjectInternal
typedef struct objc_object AVMetadataFaceObjectInternal;
typedef struct {} _objc_exc_AVMetadataFaceObjectInternal;
#endif

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_AVMetadataFaceObject
#define _REWRITER_typedef_AVMetadataFaceObject
typedef struct objc_object AVMetadataFaceObject;
typedef struct {} _objc_exc_AVMetadataFaceObject;
#endif

struct AVMetadataFaceObject_IMPL {
	struct AVMetadataObject_IMPL AVMetadataObject_IVARS;
	AVMetadataFaceObjectInternal *__strong _internal;
};

// @property(readonly) NSInteger faceID;






// @property(readonly) BOOL hasRollAngle;
// @property(readonly) CGFloat rollAngle;






// @property(readonly) BOOL hasYawAngle;
// @property(readonly) CGFloat yawAngle;

/* @end */

extern "C" AVMetadataObjectType const AVMetadataObjectTypeUPCECode __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));
extern "C" AVMetadataObjectType const AVMetadataObjectTypeCode39Code __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));
extern "C" AVMetadataObjectType const AVMetadataObjectTypeCode39Mod43Code __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));
extern "C" AVMetadataObjectType const AVMetadataObjectTypeEAN13Code __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));
extern "C" AVMetadataObjectType const AVMetadataObjectTypeEAN8Code __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));
extern "C" AVMetadataObjectType const AVMetadataObjectTypeCode93Code __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));
extern "C" AVMetadataObjectType const AVMetadataObjectTypeCode128Code __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));
extern "C" AVMetadataObjectType const AVMetadataObjectTypePDF417Code __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));
extern "C" AVMetadataObjectType const AVMetadataObjectTypeQRCode __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));
extern "C" AVMetadataObjectType const AVMetadataObjectTypeAztecCode __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)));
extern "C" AVMetadataObjectType const AVMetadataObjectTypeInterleaved2of5Code __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable)));
extern "C" AVMetadataObjectType const AVMetadataObjectTypeITF14Code __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable)));
extern "C" AVMetadataObjectType const AVMetadataObjectTypeDataMatrixCode __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable)));




// @class AVMetadataMachineReadableCodeObjectInternal;
#ifndef _REWRITER_typedef_AVMetadataMachineReadableCodeObjectInternal
#define _REWRITER_typedef_AVMetadataMachineReadableCodeObjectInternal
typedef struct objc_object AVMetadataMachineReadableCodeObjectInternal;
typedef struct {} _objc_exc_AVMetadataMachineReadableCodeObjectInternal;
#endif

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_AVMetadataMachineReadableCodeObject
#define _REWRITER_typedef_AVMetadataMachineReadableCodeObject
typedef struct objc_object AVMetadataMachineReadableCodeObject;
typedef struct {} _objc_exc_AVMetadataMachineReadableCodeObject;
#endif

struct AVMetadataMachineReadableCodeObject_IMPL {
	struct AVMetadataObject_IMPL AVMetadataObject_IVARS;
	AVMetadataMachineReadableCodeObjectInternal *__strong _internal;
};

// @property(readonly) NSArray<NSDictionary *> *corners;
// @property(readonly, nullable) NSString *stringValue;

/* @end */



// @class CIBarcodeDescriptor;
#ifndef _REWRITER_typedef_CIBarcodeDescriptor
#define _REWRITER_typedef_CIBarcodeDescriptor
typedef struct objc_object CIBarcodeDescriptor;
typedef struct {} _objc_exc_CIBarcodeDescriptor;
#endif


// @interface AVMetadataMachineReadableCodeObject (AVMetadataMachineReadableCodeDescriptor)
// @property(readonly, nullable) CIBarcodeDescriptor *descriptor __attribute__((availability(ios,introduced=11_0))) __attribute__((availability(tvos,unavailable)));

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin



// @class AVCaptureMetadataOutputInternal;
#ifndef _REWRITER_typedef_AVCaptureMetadataOutputInternal
#define _REWRITER_typedef_AVCaptureMetadataOutputInternal
typedef struct objc_object AVCaptureMetadataOutputInternal;
typedef struct {} _objc_exc_AVCaptureMetadataOutputInternal;
#endif

// @protocol AVCaptureMetadataOutputObjectsDelegate;
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_AVCaptureMetadataOutput
#define _REWRITER_typedef_AVCaptureMetadataOutput
typedef struct objc_object AVCaptureMetadataOutput;
typedef struct {} _objc_exc_AVCaptureMetadataOutput;
#endif

struct AVCaptureMetadataOutput_IMPL {
	struct AVCaptureOutput_IMPL AVCaptureOutput_IVARS;
	AVCaptureMetadataOutputInternal *__strong _internal;
};


// - (instancetype)init;

// + (instancetype)new;
// - (void)setMetadataObjectsDelegate:(nullable id<AVCaptureMetadataOutputObjectsDelegate>)objectsDelegate queue:(nullable dispatch_queue_t)objectsCallbackQueue;
// @property(nonatomic, readonly, nullable) id<AVCaptureMetadataOutputObjectsDelegate> metadataObjectsDelegate;
// @property(nonatomic, readonly, nullable) dispatch_queue_t metadataObjectsCallbackQueue;
// @property(nonatomic, readonly) NSArray<AVMetadataObjectType> *availableMetadataObjectTypes;
// @property(nonatomic, copy, null_resettable) NSArray<AVMetadataObjectType> *metadataObjectTypes;
// @property(nonatomic) CGRect rectOfInterest __attribute__((availability(ios,introduced=7_0)));

/* @end */








__attribute__((availability(ios,introduced=6_0))) __attribute__((availability(tvos,unavailable)))
// @protocol AVCaptureMetadataOutputObjectsDelegate <NSObject>

/* @optional */
// - (void)captureOutput:(AVCaptureOutput *)output didOutputMetadataObjects:(NSArray<__kindof AVMetadataObject *> *)metadataObjects fromConnection:(AVCaptureConnection *)connection;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin



// @class AVCapturePhotoSettings;
#ifndef _REWRITER_typedef_AVCapturePhotoSettings
#define _REWRITER_typedef_AVCapturePhotoSettings
typedef struct objc_object AVCapturePhotoSettings;
typedef struct {} _objc_exc_AVCapturePhotoSettings;
#endif

// @class AVCapturePhotoBracketSettings;
#ifndef _REWRITER_typedef_AVCapturePhotoBracketSettings
#define _REWRITER_typedef_AVCapturePhotoBracketSettings
typedef struct objc_object AVCapturePhotoBracketSettings;
typedef struct {} _objc_exc_AVCapturePhotoBracketSettings;
#endif

// @class AVCaptureResolvedPhotoSettings;
#ifndef _REWRITER_typedef_AVCaptureResolvedPhotoSettings
#define _REWRITER_typedef_AVCaptureResolvedPhotoSettings
typedef struct objc_object AVCaptureResolvedPhotoSettings;
typedef struct {} _objc_exc_AVCaptureResolvedPhotoSettings;
#endif

// @class AVCaptureBracketedStillImageSettings;
#ifndef _REWRITER_typedef_AVCaptureBracketedStillImageSettings
#define _REWRITER_typedef_AVCaptureBracketedStillImageSettings
typedef struct objc_object AVCaptureBracketedStillImageSettings;
typedef struct {} _objc_exc_AVCaptureBracketedStillImageSettings;
#endif

// @class AVMetadataItem;
#ifndef _REWRITER_typedef_AVMetadataItem
#define _REWRITER_typedef_AVMetadataItem
typedef struct objc_object AVMetadataItem;
typedef struct {} _objc_exc_AVMetadataItem;
#endif

// @class AVCapturePhotoOutputInternal;
#ifndef _REWRITER_typedef_AVCapturePhotoOutputInternal
#define _REWRITER_typedef_AVCapturePhotoOutputInternal
typedef struct objc_object AVCapturePhotoOutputInternal;
typedef struct {} _objc_exc_AVCapturePhotoOutputInternal;
#endif


// @protocol AVCapturePhotoCaptureDelegate;
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_AVCapturePhotoOutput
#define _REWRITER_typedef_AVCapturePhotoOutput
typedef struct objc_object AVCapturePhotoOutput;
typedef struct {} _objc_exc_AVCapturePhotoOutput;
#endif

struct AVCapturePhotoOutput_IMPL {
	struct AVCaptureOutput_IMPL AVCaptureOutput_IVARS;
	AVCapturePhotoOutputInternal *__strong _internal;
};


// - (instancetype)init;

// + (instancetype)new;
// - (void)capturePhotoWithSettings:(AVCapturePhotoSettings *)settings delegate:(id<AVCapturePhotoCaptureDelegate>)delegate;
// @property(nonatomic, readonly) NSArray<AVCapturePhotoSettings *> *preparedPhotoSettingsArray;
// - (void)setPreparedPhotoSettingsArray:(NSArray<AVCapturePhotoSettings *> *)preparedPhotoSettingsArray completionHandler:(nullable void (^)(BOOL prepared, NSError * _Nullable error))completionHandler;
// @property(nonatomic, readonly) NSArray<NSNumber *> *availablePhotoPixelFormatTypes;
// @property(nonatomic, readonly) NSArray<AVVideoCodecType> *availablePhotoCodecTypes;
// @property(nonatomic, readonly) NSArray<NSNumber *> *availableRawPhotoPixelFormatTypes;
// @property(nonatomic, readonly) NSArray<AVFileType> *availablePhotoFileTypes __attribute__((availability(ios,introduced=11_0)));
// @property(nonatomic, readonly) NSArray<AVFileType> *availableRawPhotoFileTypes __attribute__((availability(ios,introduced=11_0)));
// - (NSArray<NSNumber *> *)supportedPhotoPixelFormatTypesForFileType:(AVFileType)fileType __attribute__((availability(ios,introduced=11_0)));
// - (NSArray<AVVideoCodecType> *)supportedPhotoCodecTypesForFileType:(AVFileType)fileType __attribute__((availability(ios,introduced=11_0)));
// - (NSArray<NSNumber *> *)supportedRawPhotoPixelFormatTypesForFileType:(AVFileType)fileType __attribute__((availability(ios,introduced=11_0)));
// @property(nonatomic, readonly, getter=isStillImageStabilizationSupported) BOOL stillImageStabilizationSupported;
// @property(nonatomic, readonly) BOOL isStillImageStabilizationScene;
// @property(nonatomic, readonly, getter=isDualCameraFusionSupported) BOOL dualCameraFusionSupported __attribute__((availability(ios,introduced=10_2)));
// @property(nonatomic, readonly, getter=isDualCameraDualPhotoDeliverySupported) BOOL dualCameraDualPhotoDeliverySupported __attribute__((availability(ios,introduced=11_0)));
// @property(nonatomic, getter=isDualCameraDualPhotoDeliveryEnabled) BOOL dualCameraDualPhotoDeliveryEnabled __attribute__((availability(ios,introduced=11_0)));
// @property(nonatomic, readonly, getter=isCameraCalibrationDataDeliverySupported) BOOL cameraCalibrationDataDeliverySupported __attribute__((availability(ios,introduced=11_0)));
// @property(nonatomic, readonly) NSArray<NSNumber *> *supportedFlashModes;
// @property(nonatomic, readonly) BOOL isFlashScene;
// @property(nonatomic, copy, nullable) AVCapturePhotoSettings *photoSettingsForSceneMonitoring;
// @property(nonatomic, getter=isHighResolutionCaptureEnabled) BOOL highResolutionCaptureEnabled;
// @property(nonatomic, readonly) NSUInteger maxBracketedCapturePhotoCount;
// @property(nonatomic, readonly, getter=isLensStabilizationDuringBracketedCaptureSupported) BOOL lensStabilizationDuringBracketedCaptureSupported;
// @property(nonatomic, readonly, getter=isLivePhotoCaptureSupported) BOOL livePhotoCaptureSupported;
// @property(nonatomic, getter=isLivePhotoCaptureEnabled) BOOL livePhotoCaptureEnabled;
// @property(nonatomic, getter=isLivePhotoCaptureSuspended) BOOL livePhotoCaptureSuspended;
// @property(nonatomic, getter=isLivePhotoAutoTrimmingEnabled) BOOL livePhotoAutoTrimmingEnabled;
// @property(nonatomic, readonly) NSArray<AVVideoCodecType> *availableLivePhotoVideoCodecTypes __attribute__((availability(ios,introduced=11_0)));
// + (nullable NSData *)JPEGPhotoDataRepresentationForJPEGSampleBuffer:(CMSampleBufferRef)JPEGSampleBuffer previewPhotoSampleBuffer:(nullable CMSampleBufferRef)previewPhotoSampleBuffer __attribute__((availability(ios,introduced=10_0,deprecated=11_0,message="" "Use -[AVCapturePhoto fileDataRepresentation] instead.")));
// + (nullable NSData *)DNGPhotoDataRepresentationForRawSampleBuffer:(CMSampleBufferRef)rawSampleBuffer previewPhotoSampleBuffer:(nullable CMSampleBufferRef)previewPhotoSampleBuffer __attribute__((availability(ios,introduced=10_0,deprecated=11_0,message="" "Use -[AVCapturePhoto fileDataRepresentation] instead.")));

/* @end */



// @class AVCapturePhoto;
#ifndef _REWRITER_typedef_AVCapturePhoto
#define _REWRITER_typedef_AVCapturePhoto
typedef struct objc_object AVCapturePhoto;
typedef struct {} _objc_exc_AVCapturePhoto;
#endif


// @interface AVCapturePhotoOutput (AVCapturePhotoOutputDepthDataDeliverySupport)
// @property(nonatomic, readonly, getter=isDepthDataDeliverySupported) BOOL depthDataDeliverySupported __attribute__((availability(ios,introduced=11_0)));
// @property(nonatomic, getter=isDepthDataDeliveryEnabled) BOOL depthDataDeliveryEnabled __attribute__((availability(ios,introduced=11_0)));

/* @end */

__attribute__((availability(ios,introduced=10_0))) __attribute__((availability(tvos,unavailable)))
// @protocol AVCapturePhotoCaptureDelegate <NSObject>

/* @optional */
// - (void)captureOutput:(AVCapturePhotoOutput *)output willBeginCaptureForResolvedSettings:(AVCaptureResolvedPhotoSettings *)resolvedSettings;
// - (void)captureOutput:(AVCapturePhotoOutput *)output willCapturePhotoForResolvedSettings:(AVCaptureResolvedPhotoSettings *)resolvedSettings;
// - (void)captureOutput:(AVCapturePhotoOutput *)output didCapturePhotoForResolvedSettings:(AVCaptureResolvedPhotoSettings *)resolvedSettings;
// - (void)captureOutput:(AVCapturePhotoOutput *)output didFinishProcessingPhoto:(AVCapturePhoto *)photo error:(nullable NSError *)error __attribute__((availability(ios,introduced=11_0)));
// - (void)captureOutput:(AVCapturePhotoOutput *)output didFinishProcessingPhotoSampleBuffer:(nullable CMSampleBufferRef)photoSampleBuffer previewPhotoSampleBuffer:(nullable CMSampleBufferRef)previewPhotoSampleBuffer resolvedSettings:(AVCaptureResolvedPhotoSettings *)resolvedSettings bracketSettings:(nullable AVCaptureBracketedStillImageSettings *)bracketSettings error:(nullable NSError *)error __attribute__((availability(ios,introduced=10_0,deprecated=11_0,message="" "Use -captureOutput:didFinishProcessingPhoto:error: instead.")));
// - (void)captureOutput:(AVCapturePhotoOutput *)output didFinishProcessingRawPhotoSampleBuffer:(nullable CMSampleBufferRef)rawSampleBuffer previewPhotoSampleBuffer:(nullable CMSampleBufferRef)previewPhotoSampleBuffer resolvedSettings:(AVCaptureResolvedPhotoSettings *)resolvedSettings bracketSettings:(nullable AVCaptureBracketedStillImageSettings *)bracketSettings error:(nullable NSError *)error __attribute__((availability(ios,introduced=10_0,deprecated=11_0,message="" "Use -captureOutput:didFinishProcessingPhoto:error: instead")));
// - (void)captureOutput:(AVCapturePhotoOutput *)output didFinishRecordingLivePhotoMovieForEventualFileAtURL:(NSURL *)outputFileURL resolvedSettings:(AVCaptureResolvedPhotoSettings *)resolvedSettings;
// - (void)captureOutput:(AVCapturePhotoOutput *)output didFinishProcessingLivePhotoToMovieFileAtURL:(NSURL *)outputFileURL duration:(CMTime)duration photoDisplayTime:(CMTime)photoDisplayTime resolvedSettings:(AVCaptureResolvedPhotoSettings *)resolvedSettings error:(nullable NSError *)error;
// - (void)captureOutput:(AVCapturePhotoOutput *)output didFinishCaptureForResolvedSettings:(AVCaptureResolvedPhotoSettings *)resolvedSettings error:(nullable NSError *)error;

/* @end */





// @class AVCapturePhotoSettingsInternal;
#ifndef _REWRITER_typedef_AVCapturePhotoSettingsInternal
#define _REWRITER_typedef_AVCapturePhotoSettingsInternal
typedef struct objc_object AVCapturePhotoSettingsInternal;
typedef struct {} _objc_exc_AVCapturePhotoSettingsInternal;
#endif

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_AVCapturePhotoSettings
#define _REWRITER_typedef_AVCapturePhotoSettings
typedef struct objc_object AVCapturePhotoSettings;
typedef struct {} _objc_exc_AVCapturePhotoSettings;
#endif

struct AVCapturePhotoSettings_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVCapturePhotoSettingsInternal *__strong _internal;
};

// + (instancetype)photoSettings;
// + (instancetype)photoSettingsWithFormat:(nullable NSDictionary<NSString *, id> *)format;
// + (instancetype)photoSettingsWithRawPixelFormatType:(OSType)rawPixelFormatType;
// + (instancetype)photoSettingsWithRawPixelFormatType:(OSType)rawPixelFormatType processedFormat:(nullable NSDictionary<NSString *, id> *)processedFormat;
// + (instancetype)photoSettingsWithRawPixelFormatType:(OSType)rawPixelFormatType rawFileType:(nullable AVFileType)rawFileType processedFormat:(nullable NSDictionary<NSString *, id> *)processedFormat processedFileType:(nullable AVFileType)processedFileType __attribute__((availability(ios,introduced=11_0)));
// + (instancetype)photoSettingsFromPhotoSettings:(AVCapturePhotoSettings *)photoSettings;
// @property(readonly) int64_t uniqueID;
// @property(readonly, copy, nullable) NSDictionary<NSString *, id> *format;
// @property(nullable, readonly) AVFileType processedFileType __attribute__((availability(ios,introduced=11_0)));
// @property(readonly) OSType rawPhotoPixelFormatType;
// @property(nullable, readonly) AVFileType rawFileType __attribute__((availability(ios,introduced=11_0)));
// @property(nonatomic) AVCaptureFlashMode flashMode;
// @property(nonatomic, getter=isAutoStillImageStabilizationEnabled) BOOL autoStillImageStabilizationEnabled;
// @property(nonatomic, getter=isAutoDualCameraFusionEnabled) BOOL autoDualCameraFusionEnabled __attribute__((availability(ios,introduced=10_2)));
// @property(nonatomic, getter=isDualCameraDualPhotoDeliveryEnabled) BOOL dualCameraDualPhotoDeliveryEnabled __attribute__((availability(ios,introduced=11_0)));
// @property(nonatomic, getter=isHighResolutionPhotoEnabled) BOOL highResolutionPhotoEnabled;
// @property(nonatomic, getter=isDepthDataDeliveryEnabled) BOOL depthDataDeliveryEnabled __attribute__((availability(ios,introduced=11_0)));
// @property(nonatomic) BOOL embedsDepthDataInPhoto __attribute__((availability(ios,introduced=11_0)));
// @property(nonatomic, getter=isDepthDataFiltered) BOOL depthDataFiltered __attribute__((availability(ios,introduced=11_0)));
// @property(nonatomic, getter=isCameraCalibrationDataDeliveryEnabled) BOOL cameraCalibrationDataDeliveryEnabled __attribute__((availability(ios,introduced=11_0)));
// @property(nonatomic, copy) NSDictionary<NSString *, id> *metadata __attribute__((availability(ios,introduced=11_0)));
// @property(nonatomic, copy, nullable) NSURL *livePhotoMovieFileURL;
// @property(nonatomic, copy) AVVideoCodecType livePhotoVideoCodecType __attribute__((availability(ios,introduced=11_0)));
// @property(nonatomic, copy, null_resettable) NSArray<AVMetadataItem *> *livePhotoMovieMetadata;
// @property(nonatomic, readonly) NSArray<NSNumber *> *availablePreviewPhotoPixelFormatTypes;
// @property(nonatomic, copy, nullable) NSDictionary<NSString *, id> *previewPhotoFormat;
// @property(nonatomic, readonly) NSArray<AVVideoCodecType> *availableEmbeddedThumbnailPhotoCodecTypes __attribute__((availability(ios,introduced=11_0)));
// @property(nonatomic, copy, nullable) NSDictionary<NSString *, id> *embeddedThumbnailPhotoFormat __attribute__((availability(ios,introduced=11_0)));

/* @end */





// @class AVCapturePhotoBracketSettingsInternal;
#ifndef _REWRITER_typedef_AVCapturePhotoBracketSettingsInternal
#define _REWRITER_typedef_AVCapturePhotoBracketSettingsInternal
typedef struct objc_object AVCapturePhotoBracketSettingsInternal;
typedef struct {} _objc_exc_AVCapturePhotoBracketSettingsInternal;
#endif

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_AVCapturePhotoBracketSettings
#define _REWRITER_typedef_AVCapturePhotoBracketSettings
typedef struct objc_object AVCapturePhotoBracketSettings;
typedef struct {} _objc_exc_AVCapturePhotoBracketSettings;
#endif

struct AVCapturePhotoBracketSettings_IMPL {
	struct AVCapturePhotoSettings_IMPL AVCapturePhotoSettings_IVARS;
	AVCapturePhotoBracketSettingsInternal *__strong _bracketSettingsInternal;
};

// + (instancetype)photoBracketSettingsWithRawPixelFormatType:(OSType)rawPixelFormatType processedFormat:(nullable NSDictionary<NSString *, id> *)processedFormat bracketedSettings:(NSArray<__kindof AVCaptureBracketedStillImageSettings *> *)bracketedSettings;
// + (instancetype)photoBracketSettingsWithRawPixelFormatType:(OSType)rawPixelFormatType rawFileType:(nullable AVFileType)rawFileType processedFormat:(nullable NSDictionary<NSString *, id> *)processedFormat processedFileType:(nullable AVFileType)processedFileType bracketedSettings:(NSArray<AVCaptureBracketedStillImageSettings *> *)bracketedSettings __attribute__((availability(ios,introduced=11_0)));
// @property(nonatomic, readonly) NSArray<__kindof AVCaptureBracketedStillImageSettings *> *bracketedSettings;
// @property(nonatomic, getter=isLensStabilizationEnabled) BOOL lensStabilizationEnabled;

/* @end */





// @class AVCaptureResolvedPhotoSettingsInternal;
#ifndef _REWRITER_typedef_AVCaptureResolvedPhotoSettingsInternal
#define _REWRITER_typedef_AVCaptureResolvedPhotoSettingsInternal
typedef struct objc_object AVCaptureResolvedPhotoSettingsInternal;
typedef struct {} _objc_exc_AVCaptureResolvedPhotoSettingsInternal;
#endif

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_AVCaptureResolvedPhotoSettings
#define _REWRITER_typedef_AVCaptureResolvedPhotoSettings
typedef struct objc_object AVCaptureResolvedPhotoSettings;
typedef struct {} _objc_exc_AVCaptureResolvedPhotoSettings;
#endif

struct AVCaptureResolvedPhotoSettings_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVCaptureResolvedPhotoSettingsInternal *__strong _internal;
};


// - (instancetype)init __attribute__((unavailable)); // + (instancetype)new __attribute__((unavailable));






// @property(readonly) int64_t uniqueID;
// @property(readonly) CMVideoDimensions photoDimensions;
// @property(readonly) CMVideoDimensions rawPhotoDimensions;
// @property(readonly) CMVideoDimensions previewDimensions;
// @property(readonly) CMVideoDimensions embeddedThumbnailDimensions __attribute__((availability(ios,introduced=11_0)));
// @property(readonly) CMVideoDimensions livePhotoMovieDimensions;
// @property(readonly, getter=isFlashEnabled) BOOL flashEnabled;






// @property(readonly, getter=isStillImageStabilizationEnabled) BOOL stillImageStabilizationEnabled;






// @property(readonly, getter=isDualCameraFusionEnabled) BOOL dualCameraFusionEnabled __attribute__((availability(ios,introduced=10_2)));






// @property(readonly) NSUInteger expectedPhotoCount __attribute__((availability(ios,introduced=11_0)));

/* @end */





// @class AVCapturePhotoInternal;
#ifndef _REWRITER_typedef_AVCapturePhotoInternal
#define _REWRITER_typedef_AVCapturePhotoInternal
typedef struct objc_object AVCapturePhotoInternal;
typedef struct {} _objc_exc_AVCapturePhotoInternal;
#endif

// @class AVDepthData;
#ifndef _REWRITER_typedef_AVDepthData
#define _REWRITER_typedef_AVDepthData
typedef struct objc_object AVDepthData;
typedef struct {} _objc_exc_AVDepthData;
#endif

// @class AVCameraCalibrationData;
#ifndef _REWRITER_typedef_AVCameraCalibrationData
#define _REWRITER_typedef_AVCameraCalibrationData
typedef struct objc_object AVCameraCalibrationData;
typedef struct {} _objc_exc_AVCameraCalibrationData;
#endif

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=11_0))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_AVCapturePhoto
#define _REWRITER_typedef_AVCapturePhoto
typedef struct objc_object AVCapturePhoto;
typedef struct {} _objc_exc_AVCapturePhoto;
#endif

struct AVCapturePhoto_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVCapturePhotoInternal *__strong _internal;
};


// - (instancetype)init __attribute__((unavailable)); // + (instancetype)new __attribute__((unavailable));
// @property(readonly) CMTime timestamp;
// @property(readonly, getter=isRawPhoto) BOOL rawPhoto;
// @property(nullable, readonly) CVPixelBufferRef pixelBuffer __attribute__((objc_returns_inner_pointer));
// @property(nullable, readonly) CVPixelBufferRef previewPixelBuffer __attribute__((objc_returns_inner_pointer));
// @property(nullable, readonly) NSDictionary<NSString *, id> *embeddedThumbnailPhotoFormat;
// @property(nullable, readonly) AVDepthData *depthData;
// @property(readonly) NSDictionary<NSString *, id> *metadata;
// @property(nullable, readonly) AVCameraCalibrationData *cameraCalibrationData;
// @property(readonly) AVCaptureResolvedPhotoSettings *resolvedSettings;
// @property(readonly) NSInteger photoCount;
// @property(nullable, readonly) AVCaptureDeviceType sourceDeviceType;

/* @end */



// @interface AVCapturePhoto (AVCapturePhotoConversions)
// - (nullable NSData *)fileDataRepresentation __attribute__((availability(ios,introduced=11_0)));
// - (nullable NSData *)fileDataRepresentationWithReplacementMetadata:(nullable NSDictionary<NSString *, id> *)replacementMetadata replacementEmbeddedThumbnailPhotoFormat:(nullable NSDictionary<NSString *, id> *)replacementEmbeddedThumbnailPhotoFormat replacementEmbeddedThumbnailPixelBuffer:(nullable CVPixelBufferRef)replacementEmbeddedThumbnailPixelBuffer replacementDepthData:(nullable AVDepthData *)replacementDepthData __attribute__((availability(ios,introduced=11_0)));
// - (nullable CGImageRef)CGImageRepresentation __attribute__((availability(ios,introduced=11_0)));
// - (nullable CGImageRef)previewCGImageRepresentation __attribute__((availability(ios,introduced=11_0)));

/* @end */

typedef NSInteger AVCaptureLensStabilizationStatus; enum {
    AVCaptureLensStabilizationStatusUnsupported = 0,
    AVCaptureLensStabilizationStatusOff = 1,
    AVCaptureLensStabilizationStatusActive = 2,
    AVCaptureLensStabilizationStatusOutOfRange = 3,
    AVCaptureLensStabilizationStatusUnavailable = 4,
} __attribute__((availability(ios,introduced=11_0))) __attribute__((availability(tvos,unavailable)));

// @interface AVCapturePhoto (AVCapturePhotoBracketedCapture)
// @property(nullable, readonly) AVCaptureBracketedStillImageSettings *bracketSettings __attribute__((availability(ios,introduced=11_0)));
// @property(readonly) NSInteger sequenceCount __attribute__((availability(ios,introduced=11_0)));
// @property(readonly) AVCaptureLensStabilizationStatus lensStabilizationStatus __attribute__((availability(ios,introduced=11_0)));

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin



// @class AVCaptureStillImageOutputInternal;
#ifndef _REWRITER_typedef_AVCaptureStillImageOutputInternal
#define _REWRITER_typedef_AVCaptureStillImageOutputInternal
typedef struct objc_object AVCaptureStillImageOutputInternal;
typedef struct {} _objc_exc_AVCaptureStillImageOutputInternal;
#endif

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0,deprecated=10_0,message="" "Use AVCapturePhotoOutput instead"))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_AVCaptureStillImageOutput
#define _REWRITER_typedef_AVCaptureStillImageOutput
typedef struct objc_object AVCaptureStillImageOutput;
typedef struct {} _objc_exc_AVCaptureStillImageOutput;
#endif

struct AVCaptureStillImageOutput_IMPL {
	struct AVCaptureOutput_IMPL AVCaptureOutput_IVARS;
	AVCaptureStillImageOutputInternal *__strong _internal;
};


// - (instancetype)init;

// + (instancetype)new;
// @property(nonatomic, copy) NSDictionary<NSString *, id> *outputSettings;
// @property(nonatomic, readonly) NSArray<NSNumber *> *availableImageDataCVPixelFormatTypes;
// @property(nonatomic, readonly) NSArray<AVVideoCodecType> *availableImageDataCodecTypes;
// @property(nonatomic, readonly, getter=isStillImageStabilizationSupported) BOOL stillImageStabilizationSupported __attribute__((availability(ios,introduced=7_0)));
// @property(nonatomic) BOOL automaticallyEnablesStillImageStabilizationWhenAvailable __attribute__((availability(ios,introduced=7_0)));
// @property(nonatomic, readonly, getter=isStillImageStabilizationActive) BOOL stillImageStabilizationActive __attribute__((availability(ios,introduced=7_0)));
// @property(nonatomic, getter=isHighResolutionStillImageOutputEnabled) BOOL highResolutionStillImageOutputEnabled __attribute__((availability(ios,introduced=8_0)));
// @property(readonly, getter=isCapturingStillImage) BOOL capturingStillImage __attribute__((availability(ios,introduced=5_0)));
// - (void)captureStillImageAsynchronouslyFromConnection:(AVCaptureConnection *)connection completionHandler:(void (^)(CMSampleBufferRef _Nullable imageDataSampleBuffer, NSError * _Nullable error))handler;
// + (nullable NSData *)jpegStillImageNSDataRepresentation:(CMSampleBufferRef)jpegSampleBuffer;

/* @end */

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_AVCaptureBracketedStillImageSettings
#define _REWRITER_typedef_AVCaptureBracketedStillImageSettings
typedef struct objc_object AVCaptureBracketedStillImageSettings;
typedef struct {} _objc_exc_AVCaptureBracketedStillImageSettings;
#endif

struct AVCaptureBracketedStillImageSettings_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// - (instancetype)init __attribute__((unavailable)); // + (instancetype)new __attribute__((unavailable));

/* @end */

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_AVCaptureManualExposureBracketedStillImageSettings
#define _REWRITER_typedef_AVCaptureManualExposureBracketedStillImageSettings
typedef struct objc_object AVCaptureManualExposureBracketedStillImageSettings;
typedef struct {} _objc_exc_AVCaptureManualExposureBracketedStillImageSettings;
#endif

struct AVCaptureManualExposureBracketedStillImageSettings_IMPL {
	struct AVCaptureBracketedStillImageSettings_IMPL AVCaptureBracketedStillImageSettings_IVARS;
};

// + (instancetype)manualExposureSettingsWithExposureDuration:(CMTime)duration ISO:(float)ISO;






// @property(readonly) CMTime exposureDuration;






// @property(readonly) float ISO;

/* @end */

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_AVCaptureAutoExposureBracketedStillImageSettings
#define _REWRITER_typedef_AVCaptureAutoExposureBracketedStillImageSettings
typedef struct objc_object AVCaptureAutoExposureBracketedStillImageSettings;
typedef struct {} _objc_exc_AVCaptureAutoExposureBracketedStillImageSettings;
#endif

struct AVCaptureAutoExposureBracketedStillImageSettings_IMPL {
	struct AVCaptureBracketedStillImageSettings_IMPL AVCaptureBracketedStillImageSettings_IVARS;
};

// + (instancetype)autoExposureSettingsWithExposureTargetBias:(float)exposureTargetBias;






// @property(readonly) float exposureTargetBias;

/* @end */

// @interface AVCaptureStillImageOutput (AVCaptureStillImageOutputBracketedCapture)
// @property(nonatomic, readonly) NSUInteger maxBracketedCaptureStillImageCount __attribute__((availability(ios,introduced=8_0,deprecated=10_0,message="" "Use AVCapturePhotoOutput maxBracketedCapturePhotoCount instead")));
// @property(nonatomic, readonly, getter=isLensStabilizationDuringBracketedCaptureSupported) BOOL lensStabilizationDuringBracketedCaptureSupported __attribute__((availability(ios,introduced=9_0,deprecated=10_0,message="" "Use AVCapturePhotoOutput lensStabilizationDuringBracketedCaptureSupported instead")));
// @property(nonatomic, getter=isLensStabilizationDuringBracketedCaptureEnabled) BOOL lensStabilizationDuringBracketedCaptureEnabled __attribute__((availability(ios,introduced=9_0,deprecated=10_0,message="" "Use AVCapturePhotoOutput with AVCapturePhotoBracketSettings instead")));
// - (void)prepareToCaptureStillImageBracketFromConnection:(AVCaptureConnection *)connection withSettingsArray:(NSArray<__kindof AVCaptureBracketedStillImageSettings *> *)settings completionHandler:(void (^)(BOOL prepared, NSError * _Nullable error))handler __attribute__((availability(ios,introduced=8_0,deprecated=10_0,message="" "Use AVCapturePhotoOutput setPreparedPhotoSettingsArray:completionHandler: instead")));
// - (void)captureStillImageBracketAsynchronouslyFromConnection:(AVCaptureConnection *)connection withSettingsArray:(NSArray<__kindof AVCaptureBracketedStillImageSettings *> *)settings completionHandler:(void (^)(CMSampleBufferRef _Nullable sampleBuffer, AVCaptureBracketedStillImageSettings * _Nullable stillImageSettings, NSError * _Nullable error))handler __attribute__((availability(ios,introduced=8_0,deprecated=10_0,message="" "Use AVCapturePhotoOutput capturePhotoWithSettings:delegate: instead")));

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin



// @class AVCaptureVideoDataOutputInternal;
#ifndef _REWRITER_typedef_AVCaptureVideoDataOutputInternal
#define _REWRITER_typedef_AVCaptureVideoDataOutputInternal
typedef struct objc_object AVCaptureVideoDataOutputInternal;
typedef struct {} _objc_exc_AVCaptureVideoDataOutputInternal;
#endif

// @protocol AVCaptureVideoDataOutputSampleBufferDelegate;
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_AVCaptureVideoDataOutput
#define _REWRITER_typedef_AVCaptureVideoDataOutput
typedef struct objc_object AVCaptureVideoDataOutput;
typedef struct {} _objc_exc_AVCaptureVideoDataOutput;
#endif

struct AVCaptureVideoDataOutput_IMPL {
	struct AVCaptureOutput_IMPL AVCaptureOutput_IVARS;
	AVCaptureVideoDataOutputInternal *__strong _internal;
};


// - (instancetype)init;

// + (instancetype)new;
// - (void)setSampleBufferDelegate:(nullable id<AVCaptureVideoDataOutputSampleBufferDelegate>)sampleBufferDelegate queue:(nullable dispatch_queue_t)sampleBufferCallbackQueue;
// @property(nonatomic, readonly, nullable) id<AVCaptureVideoDataOutputSampleBufferDelegate> sampleBufferDelegate;
// @property(nonatomic, readonly, nullable) dispatch_queue_t sampleBufferCallbackQueue;
// @property(nonatomic, copy, null_resettable) NSDictionary<NSString *, id> *videoSettings;
// - (nullable NSDictionary<NSString *, id> *)recommendedVideoSettingsForAssetWriterWithOutputFileType:(AVFileType)outputFileType __attribute__((availability(ios,introduced=7_0)));
// - (NSArray<AVVideoCodecType> *)availableVideoCodecTypesForAssetWriterWithOutputFileType:(AVFileType)outputFileType __attribute__((availability(ios,introduced=11_0)));
// - (nullable NSDictionary *)recommendedVideoSettingsForVideoCodecType:(AVVideoCodecType)videoCodecType assetWriterOutputFileType:(AVFileType)outputFileType __attribute__((availability(ios,introduced=11_0)));
// @property(nonatomic, readonly) NSArray<NSNumber *> *availableVideoCVPixelFormatTypes __attribute__((availability(ios,introduced=5_0)));
// @property(nonatomic, readonly) NSArray<AVVideoCodecType> *availableVideoCodecTypes __attribute__((availability(ios,introduced=5_0)));
// @property(nonatomic) CMTime minFrameDuration __attribute__((availability(ios,introduced=4_0,deprecated=5_0,message="" "Use AVCaptureConnection's videoMinFrameDuration property instead.")));
// @property(nonatomic) BOOL alwaysDiscardsLateVideoFrames;

/* @end */








__attribute__((availability(ios,introduced=4_0))) __attribute__((availability(tvos,unavailable)))
// @protocol AVCaptureVideoDataOutputSampleBufferDelegate <NSObject>

/* @optional */
// - (void)captureOutput:(AVCaptureOutput *)output didOutputSampleBuffer:(CMSampleBufferRef)sampleBuffer fromConnection:(AVCaptureConnection *)connection;
// - (void)captureOutput:(AVCaptureOutput *)output didDropSampleBuffer:(CMSampleBufferRef)sampleBuffer fromConnection:(AVCaptureConnection *)connection __attribute__((availability(ios,introduced=6_0)));

/* @end */

#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin



// @class AVCaptureDataOutputSynchronizerInternal;
#ifndef _REWRITER_typedef_AVCaptureDataOutputSynchronizerInternal
#define _REWRITER_typedef_AVCaptureDataOutputSynchronizerInternal
typedef struct objc_object AVCaptureDataOutputSynchronizerInternal;
typedef struct {} _objc_exc_AVCaptureDataOutputSynchronizerInternal;
#endif

// @class AVCaptureSynchronizedDataCollection;
#ifndef _REWRITER_typedef_AVCaptureSynchronizedDataCollection
#define _REWRITER_typedef_AVCaptureSynchronizedDataCollection
typedef struct objc_object AVCaptureSynchronizedDataCollection;
typedef struct {} _objc_exc_AVCaptureSynchronizedDataCollection;
#endif

// @protocol AVCaptureDataOutputSynchronizerDelegate;
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=11_0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_AVCaptureDataOutputSynchronizer
#define _REWRITER_typedef_AVCaptureDataOutputSynchronizer
typedef struct objc_object AVCaptureDataOutputSynchronizer;
typedef struct {} _objc_exc_AVCaptureDataOutputSynchronizer;
#endif

struct AVCaptureDataOutputSynchronizer_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVCaptureDataOutputSynchronizerInternal *__strong _internal;
};


// - (instancetype)init __attribute__((unavailable)); // + (instancetype)new __attribute__((unavailable));
// - (instancetype)initWithDataOutputs:(NSArray<AVCaptureOutput *> *)dataOutputs;






// @property(readonly, retain) NSArray<AVCaptureOutput *> *dataOutputs;
// - (void)setDelegate:(nullable id<AVCaptureDataOutputSynchronizerDelegate>)delegate queue:(nullable dispatch_queue_t)delegateCallbackQueue;
// @property(nullable, nonatomic, readonly) id<AVCaptureDataOutputSynchronizerDelegate> delegate;
// @property(nullable, nonatomic, readonly) dispatch_queue_t delegateCallbackQueue;

/* @end */



__attribute__((availability(ios,introduced=11_0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))
// @protocol AVCaptureDataOutputSynchronizerDelegate <NSObject>

/* @required */
// - (void)dataOutputSynchronizer:(AVCaptureDataOutputSynchronizer *)synchronizer didOutputSynchronizedDataCollection:(AVCaptureSynchronizedDataCollection *)synchronizedDataCollection;

/* @end */





// @class AVCaptureSynchronizedData;
#ifndef _REWRITER_typedef_AVCaptureSynchronizedData
#define _REWRITER_typedef_AVCaptureSynchronizedData
typedef struct objc_object AVCaptureSynchronizedData;
typedef struct {} _objc_exc_AVCaptureSynchronizedData;
#endif

// @class AVCaptureSynchronizedDataCollectionInternal;
#ifndef _REWRITER_typedef_AVCaptureSynchronizedDataCollectionInternal
#define _REWRITER_typedef_AVCaptureSynchronizedDataCollectionInternal
typedef struct objc_object AVCaptureSynchronizedDataCollectionInternal;
typedef struct {} _objc_exc_AVCaptureSynchronizedDataCollectionInternal;
#endif

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=11_0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_AVCaptureSynchronizedDataCollection
#define _REWRITER_typedef_AVCaptureSynchronizedDataCollection
typedef struct objc_object AVCaptureSynchronizedDataCollection;
typedef struct {} _objc_exc_AVCaptureSynchronizedDataCollection;
#endif

struct AVCaptureSynchronizedDataCollection_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVCaptureSynchronizedDataCollectionInternal *__strong _internal;
};


// - (instancetype)init __attribute__((unavailable)); // + (instancetype)new __attribute__((unavailable));
// - (nullable AVCaptureSynchronizedData *)synchronizedDataForCaptureOutput:(AVCaptureOutput *)captureOutput;
// - (nullable AVCaptureSynchronizedData *)objectForKeyedSubscript:(AVCaptureOutput *)key;
// @property(readonly) NSUInteger count;

/* @end */





// @class AVCaptureSynchronizedDataInternal;
#ifndef _REWRITER_typedef_AVCaptureSynchronizedDataInternal
#define _REWRITER_typedef_AVCaptureSynchronizedDataInternal
typedef struct objc_object AVCaptureSynchronizedDataInternal;
typedef struct {} _objc_exc_AVCaptureSynchronizedDataInternal;
#endif

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=11_0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_AVCaptureSynchronizedData
#define _REWRITER_typedef_AVCaptureSynchronizedData
typedef struct objc_object AVCaptureSynchronizedData;
typedef struct {} _objc_exc_AVCaptureSynchronizedData;
#endif

struct AVCaptureSynchronizedData_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVCaptureSynchronizedDataInternal *__strong _synchronizedDataInternal;
};


// - (instancetype)init __attribute__((unavailable)); // + (instancetype)new __attribute__((unavailable));
// @property(readonly) CMTime timestamp;

/* @end */





// @class AVCaptureSynchronizedSampleBufferDataInternal;
#ifndef _REWRITER_typedef_AVCaptureSynchronizedSampleBufferDataInternal
#define _REWRITER_typedef_AVCaptureSynchronizedSampleBufferDataInternal
typedef struct objc_object AVCaptureSynchronizedSampleBufferDataInternal;
typedef struct {} _objc_exc_AVCaptureSynchronizedSampleBufferDataInternal;
#endif

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=11_0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_AVCaptureSynchronizedSampleBufferData
#define _REWRITER_typedef_AVCaptureSynchronizedSampleBufferData
typedef struct objc_object AVCaptureSynchronizedSampleBufferData;
typedef struct {} _objc_exc_AVCaptureSynchronizedSampleBufferData;
#endif

struct AVCaptureSynchronizedSampleBufferData_IMPL {
	struct AVCaptureSynchronizedData_IMPL AVCaptureSynchronizedData_IVARS;
	AVCaptureSynchronizedSampleBufferDataInternal *__strong _internal;
};

// @property(readonly) CMSampleBufferRef sampleBuffer;
// @property(readonly) BOOL sampleBufferWasDropped;
// @property(readonly) AVCaptureOutputDataDroppedReason droppedReason;

/* @end */





// @class AVCaptureSynchronizedMetadataObjectDataInternal;
#ifndef _REWRITER_typedef_AVCaptureSynchronizedMetadataObjectDataInternal
#define _REWRITER_typedef_AVCaptureSynchronizedMetadataObjectDataInternal
typedef struct objc_object AVCaptureSynchronizedMetadataObjectDataInternal;
typedef struct {} _objc_exc_AVCaptureSynchronizedMetadataObjectDataInternal;
#endif

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=11_0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_AVCaptureSynchronizedMetadataObjectData
#define _REWRITER_typedef_AVCaptureSynchronizedMetadataObjectData
typedef struct objc_object AVCaptureSynchronizedMetadataObjectData;
typedef struct {} _objc_exc_AVCaptureSynchronizedMetadataObjectData;
#endif

struct AVCaptureSynchronizedMetadataObjectData_IMPL {
	struct AVCaptureSynchronizedData_IMPL AVCaptureSynchronizedData_IVARS;
	AVCaptureSynchronizedMetadataObjectDataInternal *__strong _internal;
};

// @property(readonly) NSArray<AVMetadataObject *> *metadataObjects;

/* @end */





// @class AVCaptureSynchronizedDepthDataInternal;
#ifndef _REWRITER_typedef_AVCaptureSynchronizedDepthDataInternal
#define _REWRITER_typedef_AVCaptureSynchronizedDepthDataInternal
typedef struct objc_object AVCaptureSynchronizedDepthDataInternal;
typedef struct {} _objc_exc_AVCaptureSynchronizedDepthDataInternal;
#endif

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=11_0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_AVCaptureSynchronizedDepthData
#define _REWRITER_typedef_AVCaptureSynchronizedDepthData
typedef struct objc_object AVCaptureSynchronizedDepthData;
typedef struct {} _objc_exc_AVCaptureSynchronizedDepthData;
#endif

struct AVCaptureSynchronizedDepthData_IMPL {
	struct AVCaptureSynchronizedData_IMPL AVCaptureSynchronizedData_IVARS;
	AVCaptureSynchronizedDepthDataInternal *__strong _internal;
};

// @property(readonly) AVDepthData *depthData;
// @property(readonly) BOOL depthDataWasDropped;
// @property(readonly) AVCaptureOutputDataDroppedReason droppedReason;

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin



// @class AVCaptureInputPort;
#ifndef _REWRITER_typedef_AVCaptureInputPort
#define _REWRITER_typedef_AVCaptureInputPort
typedef struct objc_object AVCaptureInputPort;
typedef struct {} _objc_exc_AVCaptureInputPort;
#endif

// @class AVCaptureInputInternal;
#ifndef _REWRITER_typedef_AVCaptureInputInternal
#define _REWRITER_typedef_AVCaptureInputInternal
typedef struct objc_object AVCaptureInputInternal;
typedef struct {} _objc_exc_AVCaptureInputInternal;
#endif

// @class AVTimedMetadataGroup;
#ifndef _REWRITER_typedef_AVTimedMetadataGroup
#define _REWRITER_typedef_AVTimedMetadataGroup
typedef struct objc_object AVTimedMetadataGroup;
typedef struct {} _objc_exc_AVTimedMetadataGroup;
#endif

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_AVCaptureInput
#define _REWRITER_typedef_AVCaptureInput
typedef struct objc_object AVCaptureInput;
typedef struct {} _objc_exc_AVCaptureInput;
#endif

struct AVCaptureInput_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVCaptureInputInternal *__strong _inputInternal;
};


// - (instancetype)init __attribute__((unavailable)); // + (instancetype)new __attribute__((unavailable));
// @property(nonatomic, readonly) NSArray<AVCaptureInputPort *> *ports;

/* @end */

extern "C" NSString *const AVCaptureInputPortFormatDescriptionDidChangeNotification __attribute__((availability(ios,introduced=4_0))) __attribute__((availability(tvos,unavailable)));




// @class AVCaptureInputPortInternal;
#ifndef _REWRITER_typedef_AVCaptureInputPortInternal
#define _REWRITER_typedef_AVCaptureInputPortInternal
typedef struct objc_object AVCaptureInputPortInternal;
typedef struct {} _objc_exc_AVCaptureInputPortInternal;
#endif

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_AVCaptureInputPort
#define _REWRITER_typedef_AVCaptureInputPort
typedef struct objc_object AVCaptureInputPort;
typedef struct {} _objc_exc_AVCaptureInputPort;
#endif

struct AVCaptureInputPort_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVCaptureInputPortInternal *__strong _internal;
};


// - (instancetype)init __attribute__((unavailable)); // + (instancetype)new __attribute__((unavailable));
// @property(nonatomic, readonly) AVCaptureInput *input;
// @property(nonatomic, readonly) AVMediaType mediaType;
// @property(nonatomic, readonly, nullable) __attribute__((NSObject)) CMFormatDescriptionRef formatDescription;
// @property(nonatomic, getter=isEnabled) BOOL enabled;
// @property(nonatomic, readonly, nullable) __attribute__((NSObject)) CMClockRef clock __attribute__((availability(ios,introduced=7_0)));

/* @end */





// @class AVCaptureDevice;
#ifndef _REWRITER_typedef_AVCaptureDevice
#define _REWRITER_typedef_AVCaptureDevice
typedef struct objc_object AVCaptureDevice;
typedef struct {} _objc_exc_AVCaptureDevice;
#endif

// @class AVCaptureDeviceInputInternal;
#ifndef _REWRITER_typedef_AVCaptureDeviceInputInternal
#define _REWRITER_typedef_AVCaptureDeviceInputInternal
typedef struct objc_object AVCaptureDeviceInputInternal;
typedef struct {} _objc_exc_AVCaptureDeviceInputInternal;
#endif

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_AVCaptureDeviceInput
#define _REWRITER_typedef_AVCaptureDeviceInput
typedef struct objc_object AVCaptureDeviceInput;
typedef struct {} _objc_exc_AVCaptureDeviceInput;
#endif

struct AVCaptureDeviceInput_IMPL {
	struct AVCaptureInput_IMPL AVCaptureInput_IVARS;
	AVCaptureDeviceInputInternal *__strong _internal;
};

// + (nullable instancetype)deviceInputWithDevice:(AVCaptureDevice *)device error:(NSError * _Nullable * _Nullable)outError;
// - (nullable instancetype)initWithDevice:(AVCaptureDevice *)device error:(NSError * _Nullable * _Nullable)outError;
// @property(nonatomic, readonly) AVCaptureDevice *device;

/* @end */





// @class AVCaptureScreenInputInternal;
#ifndef _REWRITER_typedef_AVCaptureScreenInputInternal
#define _REWRITER_typedef_AVCaptureScreenInputInternal
typedef struct objc_object AVCaptureScreenInputInternal;
typedef struct {} _objc_exc_AVCaptureScreenInputInternal;
#endif

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=NA))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_AVCaptureScreenInput
#define _REWRITER_typedef_AVCaptureScreenInput
typedef struct objc_object AVCaptureScreenInput;
typedef struct {} _objc_exc_AVCaptureScreenInput;
#endif

struct AVCaptureScreenInput_IMPL {
	struct AVCaptureInput_IMPL AVCaptureInput_IVARS;
	AVCaptureScreenInputInternal *__strong _internal;
};

// - (instancetype)init;

// + (instancetype)new;
// @property(nonatomic) CMTime minFrameDuration;
// @property(nonatomic) CGRect cropRect;
// @property(nonatomic) CGFloat scaleFactor;
// @property(nonatomic) BOOL capturesMouseClicks;
// @property(nonatomic) BOOL capturesCursor __attribute__((availability(ios,unavailable)));
// @property(nonatomic) BOOL removesDuplicateFrames __attribute__((availability(ios,unavailable)));

/* @end */





// @class AVCaptureMetadataInputInternal;
#ifndef _REWRITER_typedef_AVCaptureMetadataInputInternal
#define _REWRITER_typedef_AVCaptureMetadataInputInternal
typedef struct objc_object AVCaptureMetadataInputInternal;
typedef struct {} _objc_exc_AVCaptureMetadataInputInternal;
#endif

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_AVCaptureMetadataInput
#define _REWRITER_typedef_AVCaptureMetadataInput
typedef struct objc_object AVCaptureMetadataInput;
typedef struct {} _objc_exc_AVCaptureMetadataInput;
#endif

struct AVCaptureMetadataInput_IMPL {
	struct AVCaptureInput_IMPL AVCaptureInput_IVARS;
	AVCaptureMetadataInputInternal *__strong _internal;
};

// + (instancetype)metadataInputWithFormatDescription:(CMMetadataFormatDescriptionRef)desc clock:(CMClockRef)clock;
// - (instancetype)initWithFormatDescription:(CMMetadataFormatDescriptionRef)desc clock:(CMClockRef)clock;
// - (BOOL)appendTimedMetadataGroup:(AVTimedMetadataGroup *)metadata error:(NSError * _Nullable * _Nullable)outError;

/* @end */

#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin







typedef NSString *AVCaptureSystemPressureLevel __attribute__((swift_wrapper(enum))) __attribute__((availability(ios,introduced=11.1))) __attribute__((availability(macos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));





extern "C" AVCaptureSystemPressureLevel const AVCaptureSystemPressureLevelNominal __attribute__((availability(ios,introduced=11.1))) __attribute__((availability(macos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));





extern "C" AVCaptureSystemPressureLevel const AVCaptureSystemPressureLevelFair __attribute__((availability(ios,introduced=11.1))) __attribute__((availability(macos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));





extern "C" AVCaptureSystemPressureLevel const AVCaptureSystemPressureLevelSerious __attribute__((availability(ios,introduced=11.1))) __attribute__((availability(macos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));





extern "C" AVCaptureSystemPressureLevel const AVCaptureSystemPressureLevelCritical __attribute__((availability(ios,introduced=11.1))) __attribute__((availability(macos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));





extern "C" AVCaptureSystemPressureLevel const AVCaptureSystemPressureLevelShutdown __attribute__((availability(ios,introduced=11.1))) __attribute__((availability(macos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));
typedef NSUInteger AVCaptureSystemPressureFactors; enum {
    AVCaptureSystemPressureFactorNone = 0UL,
    AVCaptureSystemPressureFactorSystemTemperature = (1UL << 0),
    AVCaptureSystemPressureFactorPeakPower = (1UL << 1),
    AVCaptureSystemPressureFactorDepthModuleTemperature = (1UL << 2),
} __attribute__((availability(ios,introduced=11.1))) __attribute__((availability(macos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));

// @class AVCaptureSystemPressureStateInternal;
#ifndef _REWRITER_typedef_AVCaptureSystemPressureStateInternal
#define _REWRITER_typedef_AVCaptureSystemPressureStateInternal
typedef struct objc_object AVCaptureSystemPressureStateInternal;
typedef struct {} _objc_exc_AVCaptureSystemPressureStateInternal;
#endif

__attribute__((availability(ios,introduced=11.1))) __attribute__((availability(macos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_AVCaptureSystemPressureState
#define _REWRITER_typedef_AVCaptureSystemPressureState
typedef struct objc_object AVCaptureSystemPressureState;
typedef struct {} _objc_exc_AVCaptureSystemPressureState;
#endif

struct AVCaptureSystemPressureState_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVCaptureSystemPressureStateInternal *__strong _internal;
};


// - (instancetype)init __attribute__((unavailable)); // + (instancetype)new __attribute__((unavailable));






// @property(atomic, readonly) AVCaptureSystemPressureLevel level;






// @property(atomic, readonly) AVCaptureSystemPressureFactors factors;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin



// @class AVMetadataObject;
#ifndef _REWRITER_typedef_AVMetadataObject
#define _REWRITER_typedef_AVMetadataObject
typedef struct objc_object AVMetadataObject;
typedef struct {} _objc_exc_AVMetadataObject;
#endif

// @class AVCaptureVideoPreviewLayerInternal;
#ifndef _REWRITER_typedef_AVCaptureVideoPreviewLayerInternal
#define _REWRITER_typedef_AVCaptureVideoPreviewLayerInternal
typedef struct objc_object AVCaptureVideoPreviewLayerInternal;
typedef struct {} _objc_exc_AVCaptureVideoPreviewLayerInternal;
#endif

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_AVCaptureVideoPreviewLayer
#define _REWRITER_typedef_AVCaptureVideoPreviewLayer
typedef struct objc_object AVCaptureVideoPreviewLayer;
typedef struct {} _objc_exc_AVCaptureVideoPreviewLayer;
#endif

struct AVCaptureVideoPreviewLayer_IMPL {
	struct CALayer_IMPL CALayer_IVARS;
	AVCaptureVideoPreviewLayerInternal *__strong _internal;
};

// + (instancetype)layerWithSession:(AVCaptureSession *)session;
// - (instancetype)initWithSession:(AVCaptureSession *)session;
// + (instancetype)layerWithSessionWithNoConnection:(AVCaptureSession *)session __attribute__((availability(ios,introduced=8_0)));
// - (instancetype)initWithSessionWithNoConnection:(AVCaptureSession *)session __attribute__((availability(ios,introduced=8_0)));
// @property(nonatomic, retain, nullable) AVCaptureSession *session;
// - (void)setSessionWithNoConnection:(AVCaptureSession *)session __attribute__((availability(ios,introduced=8_0)));
// @property(nonatomic, readonly, nullable) AVCaptureConnection *connection __attribute__((availability(ios,introduced=6_0)));
// @property(copy) AVLayerVideoGravity videoGravity;
// - (CGPoint)captureDevicePointOfInterestForPoint:(CGPoint)pointInLayer __attribute__((availability(ios,introduced=6_0)));
// - (CGPoint)pointForCaptureDevicePointOfInterest:(CGPoint)captureDevicePointOfInterest __attribute__((availability(ios,introduced=6_0)));
// - (CGRect)metadataOutputRectOfInterestForRect:(CGRect)rectInLayerCoordinates __attribute__((availability(ios,introduced=7_0)));
// - (CGRect)rectForMetadataOutputRectOfInterest:(CGRect)rectInMetadataOutputCoordinates __attribute__((availability(ios,introduced=7_0)));
// - (nullable AVMetadataObject *)transformedMetadataObjectForMetadataObject:(AVMetadataObject *)metadataObject __attribute__((availability(ios,introduced=6_0)));
// @property(nonatomic, readonly, getter=isOrientationSupported) BOOL orientationSupported __attribute__((availability(ios,introduced=4_0,deprecated=6_0,message="" "Use AVCaptureConnection's isVideoOrientationSupported instead.")));
// @property(nonatomic) AVCaptureVideoOrientation orientation __attribute__((availability(ios,introduced=4_0,deprecated=6_0,message="" "Use AVCaptureConnection's videoOrientation instead.")));
// @property(nonatomic, readonly, getter=isMirroringSupported) BOOL mirroringSupported __attribute__((availability(ios,introduced=4_0,deprecated=6_0,message="" "Use AVCaptureConnection's isVideoMirroringSupported instead.")));
// @property(nonatomic) BOOL automaticallyAdjustsMirroring __attribute__((availability(ios,introduced=4_0,deprecated=6_0,message="" "Use AVCaptureConnection's automaticallyAdjustsVideoMirroring instead.")));
// @property(nonatomic, getter=isMirrored) BOOL mirrored __attribute__((availability(ios,introduced=4_0,deprecated=6_0,message="" "Use AVCaptureConnection's videoMirrored instead.")));



/* @end */

#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin

// @class AVAsset;
#ifndef _REWRITER_typedef_AVAsset
#define _REWRITER_typedef_AVAsset
typedef struct objc_object AVAsset;
typedef struct {} _objc_exc_AVAsset;
#endif

// @class AVComposition;
#ifndef _REWRITER_typedef_AVComposition
#define _REWRITER_typedef_AVComposition
typedef struct objc_object AVComposition;
typedef struct {} _objc_exc_AVComposition;
#endif








// @class AVCompositionTrackInternal;
#ifndef _REWRITER_typedef_AVCompositionTrackInternal
#define _REWRITER_typedef_AVCompositionTrackInternal
typedef struct objc_object AVCompositionTrackInternal;
typedef struct {} _objc_exc_AVCompositionTrackInternal;
#endif

// @class AVCompositionTrackSegment;
#ifndef _REWRITER_typedef_AVCompositionTrackSegment
#define _REWRITER_typedef_AVCompositionTrackSegment
typedef struct objc_object AVCompositionTrackSegment;
typedef struct {} _objc_exc_AVCompositionTrackSegment;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0)))

#ifndef _REWRITER_typedef_AVCompositionTrack
#define _REWRITER_typedef_AVCompositionTrack
typedef struct objc_object AVCompositionTrack;
typedef struct {} _objc_exc_AVCompositionTrack;
#endif

struct AVCompositionTrack_IMPL {
	struct AVAssetTrack_IMPL AVAssetTrack_IVARS;
	AVCompositionTrackInternal *__strong _priv;
};

// @property (nonatomic, readonly, copy) NSArray<AVCompositionTrackSegment *> *segments;
// - (nullable AVCompositionTrackSegment *)segmentForTrackTime:(CMTime)trackTime;

/* @end */

// @class AVMutableCompositionTrackInternal;
#ifndef _REWRITER_typedef_AVMutableCompositionTrackInternal
#define _REWRITER_typedef_AVMutableCompositionTrackInternal
typedef struct objc_object AVMutableCompositionTrackInternal;
typedef struct {} _objc_exc_AVMutableCompositionTrackInternal;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0)))

#ifndef _REWRITER_typedef_AVMutableCompositionTrack
#define _REWRITER_typedef_AVMutableCompositionTrack
typedef struct objc_object AVMutableCompositionTrack;
typedef struct {} _objc_exc_AVMutableCompositionTrack;
#endif

struct AVMutableCompositionTrack_IMPL {
	struct AVCompositionTrack_IMPL AVCompositionTrack_IVARS;
	AVMutableCompositionTrackInternal *__strong _mutablePriv;
};

// @property (nonatomic) CMTimeScale naturalTimeScale;







// @property (nonatomic, copy, nullable) NSString *languageCode;







// @property (nonatomic, copy, nullable) NSString *extendedLanguageTag;







// @property (nonatomic) CGAffineTransform preferredTransform;







// @property (nonatomic) float preferredVolume;
// @property (nonatomic, copy, null_resettable) NSArray<AVCompositionTrackSegment *> *segments;
// - (BOOL)insertTimeRange:(CMTimeRange)timeRange ofTrack:(AVAssetTrack *)track atTime:(CMTime)startTime error:(NSError * _Nullable * _Nullable)outError;
// - (BOOL)insertTimeRanges:(NSArray<NSValue *> *)timeRanges ofTracks:(NSArray<AVAssetTrack *> *)tracks atTime:(CMTime)startTime error:(NSError * _Nullable * _Nullable)outError __attribute__((availability(ios,introduced=5_0)));
// - (void)insertEmptyTimeRange:(CMTimeRange)timeRange;
// - (void)removeTimeRange:(CMTimeRange)timeRange;
// - (void)scaleTimeRange:(CMTimeRange)timeRange toDuration:(CMTime)duration;
// - (BOOL)validateTrackSegments:(NSArray<AVCompositionTrackSegment *> *)trackSegments error:(NSError * _Nullable * _Nullable)outError;

/* @end */

#pragma clang assume_nonnull end



#pragma clang assume_nonnull begin

// @class AVCompositionInternal;
#ifndef _REWRITER_typedef_AVCompositionInternal
#define _REWRITER_typedef_AVCompositionInternal
typedef struct objc_object AVCompositionInternal;
typedef struct {} _objc_exc_AVCompositionInternal;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0)))

#ifndef _REWRITER_typedef_AVComposition
#define _REWRITER_typedef_AVComposition
typedef struct objc_object AVComposition;
typedef struct {} _objc_exc_AVComposition;
#endif

struct AVComposition_IMPL {
	struct AVAsset_IMPL AVAsset_IVARS;
	AVCompositionInternal *__strong _priv;
};






// @property (nonatomic, readonly) NSArray<AVCompositionTrack *> *tracks;





// @property (nonatomic, readonly) CGSize naturalSize;
// @property (nonatomic, readonly, copy) NSDictionary<NSString *, id> *URLAssetInitializationOptions __attribute__((availability(ios,introduced=9_0)));

/* @end */


// @interface AVComposition (AVCompositionTrackInspection)
// - (nullable AVCompositionTrack *)trackWithTrackID:(CMPersistentTrackID)trackID;
// - (NSArray<AVCompositionTrack *> *)tracksWithMediaType:(AVMediaType)mediaType;
// - (NSArray<AVCompositionTrack *> *)tracksWithMediaCharacteristic:(AVMediaCharacteristic)mediaCharacteristic;

/* @end */



// @class AVMutableCompositionInternal;
#ifndef _REWRITER_typedef_AVMutableCompositionInternal
#define _REWRITER_typedef_AVMutableCompositionInternal
typedef struct objc_object AVMutableCompositionInternal;
typedef struct {} _objc_exc_AVMutableCompositionInternal;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0)))

#ifndef _REWRITER_typedef_AVMutableComposition
#define _REWRITER_typedef_AVMutableComposition
typedef struct objc_object AVMutableComposition;
typedef struct {} _objc_exc_AVMutableComposition;
#endif

struct AVMutableComposition_IMPL {
	struct AVComposition_IMPL AVComposition_IVARS;
	AVMutableCompositionInternal *__strong _mutablePriv;
};






// @property (nonatomic, readonly) NSArray<AVMutableCompositionTrack *> *tracks;







// @property (nonatomic) CGSize naturalSize;





// + (instancetype)composition;
// + (instancetype)compositionWithURLAssetInitializationOptions:(nullable NSDictionary<NSString *, id> *)URLAssetInitializationOptions __attribute__((availability(ios,introduced=9_0)));

/* @end */



// @interface AVMutableComposition (AVMutableCompositionCompositionLevelEditing)
// - (BOOL)insertTimeRange:(CMTimeRange)timeRange ofAsset:(AVAsset *)asset atTime:(CMTime)startTime error:(NSError * _Nullable * _Nullable)outError;
// - (void)insertEmptyTimeRange:(CMTimeRange)timeRange;
// - (void)removeTimeRange:(CMTimeRange)timeRange;
// - (void)scaleTimeRange:(CMTimeRange)timeRange toDuration:(CMTime)duration;

/* @end */



// @interface AVMutableComposition (AVMutableCompositionTrackLevelEditing)
// - (nullable AVMutableCompositionTrack *)addMutableTrackWithMediaType:(AVMediaType)mediaType preferredTrackID:(CMPersistentTrackID)preferredTrackID;
// - (void)removeTrack:(AVCompositionTrack *)track;
// - (nullable AVMutableCompositionTrack *)mutableTrackCompatibleWithTrack:(AVAssetTrack *)track;

/* @end */


// @interface AVMutableComposition (AVMutableCompositionTrackInspection)
// - (nullable AVMutableCompositionTrack *)trackWithTrackID:(CMPersistentTrackID)trackID;
// - (NSArray<AVMutableCompositionTrack *> *)tracksWithMediaType:(AVMediaType)mediaType;
// - (NSArray<AVMutableCompositionTrack *> *)tracksWithMediaCharacteristic:(AVMediaCharacteristic)mediaCharacteristic;

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

// @class AVCompositionTrackSegmentInternal;
#ifndef _REWRITER_typedef_AVCompositionTrackSegmentInternal
#define _REWRITER_typedef_AVCompositionTrackSegmentInternal
typedef struct objc_object AVCompositionTrackSegmentInternal;
typedef struct {} _objc_exc_AVCompositionTrackSegmentInternal;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0)))

#ifndef _REWRITER_typedef_AVCompositionTrackSegment
#define _REWRITER_typedef_AVCompositionTrackSegment
typedef struct objc_object AVCompositionTrackSegment;
typedef struct {} _objc_exc_AVCompositionTrackSegment;
#endif

struct AVCompositionTrackSegment_IMPL {
	struct AVAssetTrackSegment_IMPL AVAssetTrackSegment_IVARS;
	AVCompositionTrackSegmentInternal *__strong _priv;
};

// + (instancetype)compositionTrackSegmentWithURL:(NSURL *)URL trackID:(CMPersistentTrackID)trackID sourceTimeRange:(CMTimeRange)sourceTimeRange targetTimeRange:(CMTimeRange)targetTimeRange;
// + (instancetype)compositionTrackSegmentWithTimeRange:(CMTimeRange)timeRange;
// - (instancetype)initWithURL:(NSURL *)URL trackID:(CMPersistentTrackID)trackID sourceTimeRange:(CMTimeRange)sourceTimeRange targetTimeRange:(CMTimeRange)targetTimeRange __attribute__((objc_designated_initializer));
// - (instancetype)initWithTimeRange:(CMTimeRange)timeRange __attribute__((objc_designated_initializer));



// @property (nonatomic, readonly, getter=isEmpty) BOOL empty;


// @property (nonatomic, readonly, nullable) NSURL *sourceURL;


// @property (nonatomic, readonly) CMPersistentTrackID sourceTrackID;

/* @end */

#pragma clang assume_nonnull end







typedef float float32_t;
typedef __fp16 float16_t;

typedef double float64_t;



typedef uint8_t poly8_t;
typedef uint16_t poly16_t;
typedef uint64_t poly64_t;
typedef __uint128_t poly128_t;




typedef __attribute__((neon_vector_type(8))) int8_t int8x8_t;
typedef __attribute__((neon_vector_type(16))) int8_t int8x16_t;
typedef __attribute__((neon_vector_type(4))) int16_t int16x4_t;
typedef __attribute__((neon_vector_type(8))) int16_t int16x8_t;
typedef __attribute__((neon_vector_type(2))) int32_t int32x2_t;
typedef __attribute__((neon_vector_type(4))) int32_t int32x4_t;
typedef __attribute__((neon_vector_type(1))) int64_t int64x1_t;
typedef __attribute__((neon_vector_type(2))) int64_t int64x2_t;
typedef __attribute__((neon_vector_type(8))) uint8_t uint8x8_t;
typedef __attribute__((neon_vector_type(16))) uint8_t uint8x16_t;
typedef __attribute__((neon_vector_type(4))) uint16_t uint16x4_t;
typedef __attribute__((neon_vector_type(8))) uint16_t uint16x8_t;
typedef __attribute__((neon_vector_type(2))) uint32_t uint32x2_t;
typedef __attribute__((neon_vector_type(4))) uint32_t uint32x4_t;
typedef __attribute__((neon_vector_type(1))) uint64_t uint64x1_t;
typedef __attribute__((neon_vector_type(2))) uint64_t uint64x2_t;
typedef __attribute__((neon_vector_type(4))) float16_t float16x4_t;
typedef __attribute__((neon_vector_type(8))) float16_t float16x8_t;
typedef __attribute__((neon_vector_type(2))) float32_t float32x2_t;
typedef __attribute__((neon_vector_type(4))) float32_t float32x4_t;

typedef __attribute__((neon_vector_type(1))) float64_t float64x1_t;
typedef __attribute__((neon_vector_type(2))) float64_t float64x2_t;

typedef __attribute__((neon_polyvector_type(8))) poly8_t poly8x8_t;
typedef __attribute__((neon_polyvector_type(16))) poly8_t poly8x16_t;
typedef __attribute__((neon_polyvector_type(4))) poly16_t poly16x4_t;
typedef __attribute__((neon_polyvector_type(8))) poly16_t poly16x8_t;

typedef __attribute__((neon_polyvector_type(1))) poly64_t poly64x1_t;
typedef __attribute__((neon_polyvector_type(2))) poly64_t poly64x2_t;


typedef struct int8x8x2_t {
  int8x8_t val[2];
} int8x8x2_t;

typedef struct int8x16x2_t {
  int8x16_t val[2];
} int8x16x2_t;

typedef struct int16x4x2_t {
  int16x4_t val[2];
} int16x4x2_t;

typedef struct int16x8x2_t {
  int16x8_t val[2];
} int16x8x2_t;

typedef struct int32x2x2_t {
  int32x2_t val[2];
} int32x2x2_t;

typedef struct int32x4x2_t {
  int32x4_t val[2];
} int32x4x2_t;

typedef struct int64x1x2_t {
  int64x1_t val[2];
} int64x1x2_t;

typedef struct int64x2x2_t {
  int64x2_t val[2];
} int64x2x2_t;

typedef struct uint8x8x2_t {
  uint8x8_t val[2];
} uint8x8x2_t;

typedef struct uint8x16x2_t {
  uint8x16_t val[2];
} uint8x16x2_t;

typedef struct uint16x4x2_t {
  uint16x4_t val[2];
} uint16x4x2_t;

typedef struct uint16x8x2_t {
  uint16x8_t val[2];
} uint16x8x2_t;

typedef struct uint32x2x2_t {
  uint32x2_t val[2];
} uint32x2x2_t;

typedef struct uint32x4x2_t {
  uint32x4_t val[2];
} uint32x4x2_t;

typedef struct uint64x1x2_t {
  uint64x1_t val[2];
} uint64x1x2_t;

typedef struct uint64x2x2_t {
  uint64x2_t val[2];
} uint64x2x2_t;

typedef struct float16x4x2_t {
  float16x4_t val[2];
} float16x4x2_t;

typedef struct float16x8x2_t {
  float16x8_t val[2];
} float16x8x2_t;

typedef struct float32x2x2_t {
  float32x2_t val[2];
} float32x2x2_t;

typedef struct float32x4x2_t {
  float32x4_t val[2];
} float32x4x2_t;


typedef struct float64x1x2_t {
  float64x1_t val[2];
} float64x1x2_t;

typedef struct float64x2x2_t {
  float64x2_t val[2];
} float64x2x2_t;


typedef struct poly8x8x2_t {
  poly8x8_t val[2];
} poly8x8x2_t;

typedef struct poly8x16x2_t {
  poly8x16_t val[2];
} poly8x16x2_t;

typedef struct poly16x4x2_t {
  poly16x4_t val[2];
} poly16x4x2_t;

typedef struct poly16x8x2_t {
  poly16x8_t val[2];
} poly16x8x2_t;


typedef struct poly64x1x2_t {
  poly64x1_t val[2];
} poly64x1x2_t;

typedef struct poly64x2x2_t {
  poly64x2_t val[2];
} poly64x2x2_t;


typedef struct int8x8x3_t {
  int8x8_t val[3];
} int8x8x3_t;

typedef struct int8x16x3_t {
  int8x16_t val[3];
} int8x16x3_t;

typedef struct int16x4x3_t {
  int16x4_t val[3];
} int16x4x3_t;

typedef struct int16x8x3_t {
  int16x8_t val[3];
} int16x8x3_t;

typedef struct int32x2x3_t {
  int32x2_t val[3];
} int32x2x3_t;

typedef struct int32x4x3_t {
  int32x4_t val[3];
} int32x4x3_t;

typedef struct int64x1x3_t {
  int64x1_t val[3];
} int64x1x3_t;

typedef struct int64x2x3_t {
  int64x2_t val[3];
} int64x2x3_t;

typedef struct uint8x8x3_t {
  uint8x8_t val[3];
} uint8x8x3_t;

typedef struct uint8x16x3_t {
  uint8x16_t val[3];
} uint8x16x3_t;

typedef struct uint16x4x3_t {
  uint16x4_t val[3];
} uint16x4x3_t;

typedef struct uint16x8x3_t {
  uint16x8_t val[3];
} uint16x8x3_t;

typedef struct uint32x2x3_t {
  uint32x2_t val[3];
} uint32x2x3_t;

typedef struct uint32x4x3_t {
  uint32x4_t val[3];
} uint32x4x3_t;

typedef struct uint64x1x3_t {
  uint64x1_t val[3];
} uint64x1x3_t;

typedef struct uint64x2x3_t {
  uint64x2_t val[3];
} uint64x2x3_t;

typedef struct float16x4x3_t {
  float16x4_t val[3];
} float16x4x3_t;

typedef struct float16x8x3_t {
  float16x8_t val[3];
} float16x8x3_t;

typedef struct float32x2x3_t {
  float32x2_t val[3];
} float32x2x3_t;

typedef struct float32x4x3_t {
  float32x4_t val[3];
} float32x4x3_t;


typedef struct float64x1x3_t {
  float64x1_t val[3];
} float64x1x3_t;

typedef struct float64x2x3_t {
  float64x2_t val[3];
} float64x2x3_t;


typedef struct poly8x8x3_t {
  poly8x8_t val[3];
} poly8x8x3_t;

typedef struct poly8x16x3_t {
  poly8x16_t val[3];
} poly8x16x3_t;

typedef struct poly16x4x3_t {
  poly16x4_t val[3];
} poly16x4x3_t;

typedef struct poly16x8x3_t {
  poly16x8_t val[3];
} poly16x8x3_t;


typedef struct poly64x1x3_t {
  poly64x1_t val[3];
} poly64x1x3_t;

typedef struct poly64x2x3_t {
  poly64x2_t val[3];
} poly64x2x3_t;


typedef struct int8x8x4_t {
  int8x8_t val[4];
} int8x8x4_t;

typedef struct int8x16x4_t {
  int8x16_t val[4];
} int8x16x4_t;

typedef struct int16x4x4_t {
  int16x4_t val[4];
} int16x4x4_t;

typedef struct int16x8x4_t {
  int16x8_t val[4];
} int16x8x4_t;

typedef struct int32x2x4_t {
  int32x2_t val[4];
} int32x2x4_t;

typedef struct int32x4x4_t {
  int32x4_t val[4];
} int32x4x4_t;

typedef struct int64x1x4_t {
  int64x1_t val[4];
} int64x1x4_t;

typedef struct int64x2x4_t {
  int64x2_t val[4];
} int64x2x4_t;

typedef struct uint8x8x4_t {
  uint8x8_t val[4];
} uint8x8x4_t;

typedef struct uint8x16x4_t {
  uint8x16_t val[4];
} uint8x16x4_t;

typedef struct uint16x4x4_t {
  uint16x4_t val[4];
} uint16x4x4_t;

typedef struct uint16x8x4_t {
  uint16x8_t val[4];
} uint16x8x4_t;

typedef struct uint32x2x4_t {
  uint32x2_t val[4];
} uint32x2x4_t;

typedef struct uint32x4x4_t {
  uint32x4_t val[4];
} uint32x4x4_t;

typedef struct uint64x1x4_t {
  uint64x1_t val[4];
} uint64x1x4_t;

typedef struct uint64x2x4_t {
  uint64x2_t val[4];
} uint64x2x4_t;

typedef struct float16x4x4_t {
  float16x4_t val[4];
} float16x4x4_t;

typedef struct float16x8x4_t {
  float16x8_t val[4];
} float16x8x4_t;

typedef struct float32x2x4_t {
  float32x2_t val[4];
} float32x2x4_t;

typedef struct float32x4x4_t {
  float32x4_t val[4];
} float32x4x4_t;


typedef struct float64x1x4_t {
  float64x1_t val[4];
} float64x1x4_t;

typedef struct float64x2x4_t {
  float64x2_t val[4];
} float64x2x4_t;


typedef struct poly8x8x4_t {
  poly8x8_t val[4];
} poly8x8x4_t;

typedef struct poly8x16x4_t {
  poly8x16_t val[4];
} poly8x16x4_t;

typedef struct poly16x4x4_t {
  poly16x4_t val[4];
} poly16x4x4_t;

typedef struct poly16x8x4_t {
  poly16x8_t val[4];
} poly16x8x4_t;


typedef struct poly64x1x4_t {
  poly64x1_t val[4];
} poly64x1x4_t;

typedef struct poly64x2x4_t {
  poly64x2_t val[4];
} poly64x2x4_t;






static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vabdq_u8(uint8x16_t __p0, uint8x16_t __p1) {
  uint8x16_t __ret;
  __ret = (uint8x16_t) __builtin_neon_vabdq_v((int8x16_t)__p0, (int8x16_t)__p1, 48);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vabdq_u32(uint32x4_t __p0, uint32x4_t __p1) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vabdq_v((int8x16_t)__p0, (int8x16_t)__p1, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vabdq_u16(uint16x8_t __p0, uint16x8_t __p1) {
  uint16x8_t __ret;
  __ret = (uint16x8_t) __builtin_neon_vabdq_v((int8x16_t)__p0, (int8x16_t)__p1, 49);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vabdq_s8(int8x16_t __p0, int8x16_t __p1) {
  int8x16_t __ret;
  __ret = (int8x16_t) __builtin_neon_vabdq_v((int8x16_t)__p0, (int8x16_t)__p1, 32);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vabdq_f32(float32x4_t __p0, float32x4_t __p1) {
  float32x4_t __ret;
  __ret = (float32x4_t) __builtin_neon_vabdq_v((int8x16_t)__p0, (int8x16_t)__p1, 41);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vabdq_s32(int32x4_t __p0, int32x4_t __p1) {
  int32x4_t __ret;
  __ret = (int32x4_t) __builtin_neon_vabdq_v((int8x16_t)__p0, (int8x16_t)__p1, 34);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vabdq_s16(int16x8_t __p0, int16x8_t __p1) {
  int16x8_t __ret;
  __ret = (int16x8_t) __builtin_neon_vabdq_v((int8x16_t)__p0, (int8x16_t)__p1, 33);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vabd_u8(uint8x8_t __p0, uint8x8_t __p1) {
  uint8x8_t __ret;
  __ret = (uint8x8_t) __builtin_neon_vabd_v((int8x8_t)__p0, (int8x8_t)__p1, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vabd_u32(uint32x2_t __p0, uint32x2_t __p1) {
  uint32x2_t __ret;
  __ret = (uint32x2_t) __builtin_neon_vabd_v((int8x8_t)__p0, (int8x8_t)__p1, 18);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vabd_u16(uint16x4_t __p0, uint16x4_t __p1) {
  uint16x4_t __ret;
  __ret = (uint16x4_t) __builtin_neon_vabd_v((int8x8_t)__p0, (int8x8_t)__p1, 17);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vabd_s8(int8x8_t __p0, int8x8_t __p1) {
  int8x8_t __ret;
  __ret = (int8x8_t) __builtin_neon_vabd_v((int8x8_t)__p0, (int8x8_t)__p1, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vabd_f32(float32x2_t __p0, float32x2_t __p1) {
  float32x2_t __ret;
  __ret = (float32x2_t) __builtin_neon_vabd_v((int8x8_t)__p0, (int8x8_t)__p1, 9);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vabd_s32(int32x2_t __p0, int32x2_t __p1) {
  int32x2_t __ret;
  __ret = (int32x2_t) __builtin_neon_vabd_v((int8x8_t)__p0, (int8x8_t)__p1, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vabd_s16(int16x4_t __p0, int16x4_t __p1) {
  int16x4_t __ret;
  __ret = (int16x4_t) __builtin_neon_vabd_v((int8x8_t)__p0, (int8x8_t)__p1, 1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vabsq_s8(int8x16_t __p0) {
  int8x16_t __ret;
  __ret = (int8x16_t) __builtin_neon_vabsq_v((int8x16_t)__p0, 32);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vabsq_f32(float32x4_t __p0) {
  float32x4_t __ret;
  __ret = (float32x4_t) __builtin_neon_vabsq_v((int8x16_t)__p0, 41);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vabsq_s32(int32x4_t __p0) {
  int32x4_t __ret;
  __ret = (int32x4_t) __builtin_neon_vabsq_v((int8x16_t)__p0, 34);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vabsq_s16(int16x8_t __p0) {
  int16x8_t __ret;
  __ret = (int16x8_t) __builtin_neon_vabsq_v((int8x16_t)__p0, 33);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vabs_s8(int8x8_t __p0) {
  int8x8_t __ret;
  __ret = (int8x8_t) __builtin_neon_vabs_v((int8x8_t)__p0, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vabs_f32(float32x2_t __p0) {
  float32x2_t __ret;
  __ret = (float32x2_t) __builtin_neon_vabs_v((int8x8_t)__p0, 9);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vabs_s32(int32x2_t __p0) {
  int32x2_t __ret;
  __ret = (int32x2_t) __builtin_neon_vabs_v((int8x8_t)__p0, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vabs_s16(int16x4_t __p0) {
  int16x4_t __ret;
  __ret = (int16x4_t) __builtin_neon_vabs_v((int8x8_t)__p0, 1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vaddq_u8(uint8x16_t __p0, uint8x16_t __p1) {
  uint8x16_t __ret;
  __ret = __p0 + __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vaddq_u32(uint32x4_t __p0, uint32x4_t __p1) {
  uint32x4_t __ret;
  __ret = __p0 + __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vaddq_u64(uint64x2_t __p0, uint64x2_t __p1) {
  uint64x2_t __ret;
  __ret = __p0 + __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vaddq_u16(uint16x8_t __p0, uint16x8_t __p1) {
  uint16x8_t __ret;
  __ret = __p0 + __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vaddq_s8(int8x16_t __p0, int8x16_t __p1) {
  int8x16_t __ret;
  __ret = __p0 + __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vaddq_f32(float32x4_t __p0, float32x4_t __p1) {
  float32x4_t __ret;
  __ret = __p0 + __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vaddq_s32(int32x4_t __p0, int32x4_t __p1) {
  int32x4_t __ret;
  __ret = __p0 + __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vaddq_s64(int64x2_t __p0, int64x2_t __p1) {
  int64x2_t __ret;
  __ret = __p0 + __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vaddq_s16(int16x8_t __p0, int16x8_t __p1) {
  int16x8_t __ret;
  __ret = __p0 + __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vadd_u8(uint8x8_t __p0, uint8x8_t __p1) {
  uint8x8_t __ret;
  __ret = __p0 + __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vadd_u32(uint32x2_t __p0, uint32x2_t __p1) {
  uint32x2_t __ret;
  __ret = __p0 + __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vadd_u64(uint64x1_t __p0, uint64x1_t __p1) {
  uint64x1_t __ret;
  __ret = __p0 + __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vadd_u16(uint16x4_t __p0, uint16x4_t __p1) {
  uint16x4_t __ret;
  __ret = __p0 + __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vadd_s8(int8x8_t __p0, int8x8_t __p1) {
  int8x8_t __ret;
  __ret = __p0 + __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vadd_f32(float32x2_t __p0, float32x2_t __p1) {
  float32x2_t __ret;
  __ret = __p0 + __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vadd_s32(int32x2_t __p0, int32x2_t __p1) {
  int32x2_t __ret;
  __ret = __p0 + __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x1_t vadd_s64(int64x1_t __p0, int64x1_t __p1) {
  int64x1_t __ret;
  __ret = __p0 + __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vadd_s16(int16x4_t __p0, int16x4_t __p1) {
  int16x4_t __ret;
  __ret = __p0 + __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vaddhn_u32(uint32x4_t __p0, uint32x4_t __p1) {
  uint16x4_t __ret;
  __ret = (uint16x4_t) __builtin_neon_vaddhn_v((int8x16_t)__p0, (int8x16_t)__p1, 17);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vaddhn_u64(uint64x2_t __p0, uint64x2_t __p1) {
  uint32x2_t __ret;
  __ret = (uint32x2_t) __builtin_neon_vaddhn_v((int8x16_t)__p0, (int8x16_t)__p1, 18);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vaddhn_u16(uint16x8_t __p0, uint16x8_t __p1) {
  uint8x8_t __ret;
  __ret = (uint8x8_t) __builtin_neon_vaddhn_v((int8x16_t)__p0, (int8x16_t)__p1, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vaddhn_s32(int32x4_t __p0, int32x4_t __p1) {
  int16x4_t __ret;
  __ret = (int16x4_t) __builtin_neon_vaddhn_v((int8x16_t)__p0, (int8x16_t)__p1, 1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vaddhn_s64(int64x2_t __p0, int64x2_t __p1) {
  int32x2_t __ret;
  __ret = (int32x2_t) __builtin_neon_vaddhn_v((int8x16_t)__p0, (int8x16_t)__p1, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vaddhn_s16(int16x8_t __p0, int16x8_t __p1) {
  int8x8_t __ret;
  __ret = (int8x8_t) __builtin_neon_vaddhn_v((int8x16_t)__p0, (int8x16_t)__p1, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vandq_u8(uint8x16_t __p0, uint8x16_t __p1) {
  uint8x16_t __ret;
  __ret = __p0 & __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vandq_u32(uint32x4_t __p0, uint32x4_t __p1) {
  uint32x4_t __ret;
  __ret = __p0 & __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vandq_u64(uint64x2_t __p0, uint64x2_t __p1) {
  uint64x2_t __ret;
  __ret = __p0 & __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vandq_u16(uint16x8_t __p0, uint16x8_t __p1) {
  uint16x8_t __ret;
  __ret = __p0 & __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vandq_s8(int8x16_t __p0, int8x16_t __p1) {
  int8x16_t __ret;
  __ret = __p0 & __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vandq_s32(int32x4_t __p0, int32x4_t __p1) {
  int32x4_t __ret;
  __ret = __p0 & __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vandq_s64(int64x2_t __p0, int64x2_t __p1) {
  int64x2_t __ret;
  __ret = __p0 & __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vandq_s16(int16x8_t __p0, int16x8_t __p1) {
  int16x8_t __ret;
  __ret = __p0 & __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vand_u8(uint8x8_t __p0, uint8x8_t __p1) {
  uint8x8_t __ret;
  __ret = __p0 & __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vand_u32(uint32x2_t __p0, uint32x2_t __p1) {
  uint32x2_t __ret;
  __ret = __p0 & __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vand_u64(uint64x1_t __p0, uint64x1_t __p1) {
  uint64x1_t __ret;
  __ret = __p0 & __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vand_u16(uint16x4_t __p0, uint16x4_t __p1) {
  uint16x4_t __ret;
  __ret = __p0 & __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vand_s8(int8x8_t __p0, int8x8_t __p1) {
  int8x8_t __ret;
  __ret = __p0 & __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vand_s32(int32x2_t __p0, int32x2_t __p1) {
  int32x2_t __ret;
  __ret = __p0 & __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x1_t vand_s64(int64x1_t __p0, int64x1_t __p1) {
  int64x1_t __ret;
  __ret = __p0 & __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vand_s16(int16x4_t __p0, int16x4_t __p1) {
  int16x4_t __ret;
  __ret = __p0 & __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vbicq_u8(uint8x16_t __p0, uint8x16_t __p1) {
  uint8x16_t __ret;
  __ret = __p0 & ~__p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vbicq_u32(uint32x4_t __p0, uint32x4_t __p1) {
  uint32x4_t __ret;
  __ret = __p0 & ~__p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vbicq_u64(uint64x2_t __p0, uint64x2_t __p1) {
  uint64x2_t __ret;
  __ret = __p0 & ~__p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vbicq_u16(uint16x8_t __p0, uint16x8_t __p1) {
  uint16x8_t __ret;
  __ret = __p0 & ~__p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vbicq_s8(int8x16_t __p0, int8x16_t __p1) {
  int8x16_t __ret;
  __ret = __p0 & ~__p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vbicq_s32(int32x4_t __p0, int32x4_t __p1) {
  int32x4_t __ret;
  __ret = __p0 & ~__p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vbicq_s64(int64x2_t __p0, int64x2_t __p1) {
  int64x2_t __ret;
  __ret = __p0 & ~__p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vbicq_s16(int16x8_t __p0, int16x8_t __p1) {
  int16x8_t __ret;
  __ret = __p0 & ~__p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vbic_u8(uint8x8_t __p0, uint8x8_t __p1) {
  uint8x8_t __ret;
  __ret = __p0 & ~__p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vbic_u32(uint32x2_t __p0, uint32x2_t __p1) {
  uint32x2_t __ret;
  __ret = __p0 & ~__p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vbic_u64(uint64x1_t __p0, uint64x1_t __p1) {
  uint64x1_t __ret;
  __ret = __p0 & ~__p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vbic_u16(uint16x4_t __p0, uint16x4_t __p1) {
  uint16x4_t __ret;
  __ret = __p0 & ~__p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vbic_s8(int8x8_t __p0, int8x8_t __p1) {
  int8x8_t __ret;
  __ret = __p0 & ~__p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vbic_s32(int32x2_t __p0, int32x2_t __p1) {
  int32x2_t __ret;
  __ret = __p0 & ~__p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x1_t vbic_s64(int64x1_t __p0, int64x1_t __p1) {
  int64x1_t __ret;
  __ret = __p0 & ~__p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vbic_s16(int16x4_t __p0, int16x4_t __p1) {
  int16x4_t __ret;
  __ret = __p0 & ~__p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x8_t vbsl_p8(uint8x8_t __p0, poly8x8_t __p1, poly8x8_t __p2) {
  poly8x8_t __ret;
  __ret = (poly8x8_t) __builtin_neon_vbsl_v((int8x8_t)__p0, (int8x8_t)__p1, (int8x8_t)__p2, 4);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x4_t vbsl_p16(uint16x4_t __p0, poly16x4_t __p1, poly16x4_t __p2) {
  poly16x4_t __ret;
  __ret = (poly16x4_t) __builtin_neon_vbsl_v((int8x8_t)__p0, (int8x8_t)__p1, (int8x8_t)__p2, 5);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x16_t vbslq_p8(uint8x16_t __p0, poly8x16_t __p1, poly8x16_t __p2) {
  poly8x16_t __ret;
  __ret = (poly8x16_t) __builtin_neon_vbslq_v((int8x16_t)__p0, (int8x16_t)__p1, (int8x16_t)__p2, 36);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x8_t vbslq_p16(uint16x8_t __p0, poly16x8_t __p1, poly16x8_t __p2) {
  poly16x8_t __ret;
  __ret = (poly16x8_t) __builtin_neon_vbslq_v((int8x16_t)__p0, (int8x16_t)__p1, (int8x16_t)__p2, 37);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vbslq_u8(uint8x16_t __p0, uint8x16_t __p1, uint8x16_t __p2) {
  uint8x16_t __ret;
  __ret = (uint8x16_t) __builtin_neon_vbslq_v((int8x16_t)__p0, (int8x16_t)__p1, (int8x16_t)__p2, 48);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vbslq_u32(uint32x4_t __p0, uint32x4_t __p1, uint32x4_t __p2) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vbslq_v((int8x16_t)__p0, (int8x16_t)__p1, (int8x16_t)__p2, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vbslq_u64(uint64x2_t __p0, uint64x2_t __p1, uint64x2_t __p2) {
  uint64x2_t __ret;
  __ret = (uint64x2_t) __builtin_neon_vbslq_v((int8x16_t)__p0, (int8x16_t)__p1, (int8x16_t)__p2, 51);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vbslq_u16(uint16x8_t __p0, uint16x8_t __p1, uint16x8_t __p2) {
  uint16x8_t __ret;
  __ret = (uint16x8_t) __builtin_neon_vbslq_v((int8x16_t)__p0, (int8x16_t)__p1, (int8x16_t)__p2, 49);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vbslq_s8(uint8x16_t __p0, int8x16_t __p1, int8x16_t __p2) {
  int8x16_t __ret;
  __ret = (int8x16_t) __builtin_neon_vbslq_v((int8x16_t)__p0, (int8x16_t)__p1, (int8x16_t)__p2, 32);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vbslq_f32(uint32x4_t __p0, float32x4_t __p1, float32x4_t __p2) {
  float32x4_t __ret;
  __ret = (float32x4_t) __builtin_neon_vbslq_v((int8x16_t)__p0, (int8x16_t)__p1, (int8x16_t)__p2, 41);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vbslq_s32(uint32x4_t __p0, int32x4_t __p1, int32x4_t __p2) {
  int32x4_t __ret;
  __ret = (int32x4_t) __builtin_neon_vbslq_v((int8x16_t)__p0, (int8x16_t)__p1, (int8x16_t)__p2, 34);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vbslq_s64(uint64x2_t __p0, int64x2_t __p1, int64x2_t __p2) {
  int64x2_t __ret;
  __ret = (int64x2_t) __builtin_neon_vbslq_v((int8x16_t)__p0, (int8x16_t)__p1, (int8x16_t)__p2, 35);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vbslq_s16(uint16x8_t __p0, int16x8_t __p1, int16x8_t __p2) {
  int16x8_t __ret;
  __ret = (int16x8_t) __builtin_neon_vbslq_v((int8x16_t)__p0, (int8x16_t)__p1, (int8x16_t)__p2, 33);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vbsl_u8(uint8x8_t __p0, uint8x8_t __p1, uint8x8_t __p2) {
  uint8x8_t __ret;
  __ret = (uint8x8_t) __builtin_neon_vbsl_v((int8x8_t)__p0, (int8x8_t)__p1, (int8x8_t)__p2, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vbsl_u32(uint32x2_t __p0, uint32x2_t __p1, uint32x2_t __p2) {
  uint32x2_t __ret;
  __ret = (uint32x2_t) __builtin_neon_vbsl_v((int8x8_t)__p0, (int8x8_t)__p1, (int8x8_t)__p2, 18);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vbsl_u64(uint64x1_t __p0, uint64x1_t __p1, uint64x1_t __p2) {
  uint64x1_t __ret;
  __ret = (uint64x1_t) __builtin_neon_vbsl_v((int8x8_t)__p0, (int8x8_t)__p1, (int8x8_t)__p2, 19);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vbsl_u16(uint16x4_t __p0, uint16x4_t __p1, uint16x4_t __p2) {
  uint16x4_t __ret;
  __ret = (uint16x4_t) __builtin_neon_vbsl_v((int8x8_t)__p0, (int8x8_t)__p1, (int8x8_t)__p2, 17);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vbsl_s8(uint8x8_t __p0, int8x8_t __p1, int8x8_t __p2) {
  int8x8_t __ret;
  __ret = (int8x8_t) __builtin_neon_vbsl_v((int8x8_t)__p0, (int8x8_t)__p1, (int8x8_t)__p2, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vbsl_f32(uint32x2_t __p0, float32x2_t __p1, float32x2_t __p2) {
  float32x2_t __ret;
  __ret = (float32x2_t) __builtin_neon_vbsl_v((int8x8_t)__p0, (int8x8_t)__p1, (int8x8_t)__p2, 9);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vbsl_s32(uint32x2_t __p0, int32x2_t __p1, int32x2_t __p2) {
  int32x2_t __ret;
  __ret = (int32x2_t) __builtin_neon_vbsl_v((int8x8_t)__p0, (int8x8_t)__p1, (int8x8_t)__p2, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x1_t vbsl_s64(uint64x1_t __p0, int64x1_t __p1, int64x1_t __p2) {
  int64x1_t __ret;
  __ret = (int64x1_t) __builtin_neon_vbsl_v((int8x8_t)__p0, (int8x8_t)__p1, (int8x8_t)__p2, 3);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vbsl_s16(uint16x4_t __p0, int16x4_t __p1, int16x4_t __p2) {
  int16x4_t __ret;
  __ret = (int16x4_t) __builtin_neon_vbsl_v((int8x8_t)__p0, (int8x8_t)__p1, (int8x8_t)__p2, 1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vcageq_f32(float32x4_t __p0, float32x4_t __p1) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vcageq_v((int8x16_t)__p0, (int8x16_t)__p1, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vcage_f32(float32x2_t __p0, float32x2_t __p1) {
  uint32x2_t __ret;
  __ret = (uint32x2_t) __builtin_neon_vcage_v((int8x8_t)__p0, (int8x8_t)__p1, 18);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vcagtq_f32(float32x4_t __p0, float32x4_t __p1) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vcagtq_v((int8x16_t)__p0, (int8x16_t)__p1, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vcagt_f32(float32x2_t __p0, float32x2_t __p1) {
  uint32x2_t __ret;
  __ret = (uint32x2_t) __builtin_neon_vcagt_v((int8x8_t)__p0, (int8x8_t)__p1, 18);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vcaleq_f32(float32x4_t __p0, float32x4_t __p1) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vcaleq_v((int8x16_t)__p0, (int8x16_t)__p1, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vcale_f32(float32x2_t __p0, float32x2_t __p1) {
  uint32x2_t __ret;
  __ret = (uint32x2_t) __builtin_neon_vcale_v((int8x8_t)__p0, (int8x8_t)__p1, 18);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vcaltq_f32(float32x4_t __p0, float32x4_t __p1) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vcaltq_v((int8x16_t)__p0, (int8x16_t)__p1, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vcalt_f32(float32x2_t __p0, float32x2_t __p1) {
  uint32x2_t __ret;
  __ret = (uint32x2_t) __builtin_neon_vcalt_v((int8x8_t)__p0, (int8x8_t)__p1, 18);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vceq_p8(poly8x8_t __p0, poly8x8_t __p1) {
  uint8x8_t __ret;
  __ret = (uint8x8_t)(__p0 == __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vceqq_p8(poly8x16_t __p0, poly8x16_t __p1) {
  uint8x16_t __ret;
  __ret = (uint8x16_t)(__p0 == __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vceqq_u8(uint8x16_t __p0, uint8x16_t __p1) {
  uint8x16_t __ret;
  __ret = (uint8x16_t)(__p0 == __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vceqq_u32(uint32x4_t __p0, uint32x4_t __p1) {
  uint32x4_t __ret;
  __ret = (uint32x4_t)(__p0 == __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vceqq_u16(uint16x8_t __p0, uint16x8_t __p1) {
  uint16x8_t __ret;
  __ret = (uint16x8_t)(__p0 == __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vceqq_s8(int8x16_t __p0, int8x16_t __p1) {
  uint8x16_t __ret;
  __ret = (uint8x16_t)(__p0 == __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vceqq_f32(float32x4_t __p0, float32x4_t __p1) {
  uint32x4_t __ret;
  __ret = (uint32x4_t)(__p0 == __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vceqq_s32(int32x4_t __p0, int32x4_t __p1) {
  uint32x4_t __ret;
  __ret = (uint32x4_t)(__p0 == __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vceqq_s16(int16x8_t __p0, int16x8_t __p1) {
  uint16x8_t __ret;
  __ret = (uint16x8_t)(__p0 == __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vceq_u8(uint8x8_t __p0, uint8x8_t __p1) {
  uint8x8_t __ret;
  __ret = (uint8x8_t)(__p0 == __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vceq_u32(uint32x2_t __p0, uint32x2_t __p1) {
  uint32x2_t __ret;
  __ret = (uint32x2_t)(__p0 == __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vceq_u16(uint16x4_t __p0, uint16x4_t __p1) {
  uint16x4_t __ret;
  __ret = (uint16x4_t)(__p0 == __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vceq_s8(int8x8_t __p0, int8x8_t __p1) {
  uint8x8_t __ret;
  __ret = (uint8x8_t)(__p0 == __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vceq_f32(float32x2_t __p0, float32x2_t __p1) {
  uint32x2_t __ret;
  __ret = (uint32x2_t)(__p0 == __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vceq_s32(int32x2_t __p0, int32x2_t __p1) {
  uint32x2_t __ret;
  __ret = (uint32x2_t)(__p0 == __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vceq_s16(int16x4_t __p0, int16x4_t __p1) {
  uint16x4_t __ret;
  __ret = (uint16x4_t)(__p0 == __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vcgeq_u8(uint8x16_t __p0, uint8x16_t __p1) {
  uint8x16_t __ret;
  __ret = (uint8x16_t)(__p0 >= __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vcgeq_u32(uint32x4_t __p0, uint32x4_t __p1) {
  uint32x4_t __ret;
  __ret = (uint32x4_t)(__p0 >= __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vcgeq_u16(uint16x8_t __p0, uint16x8_t __p1) {
  uint16x8_t __ret;
  __ret = (uint16x8_t)(__p0 >= __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vcgeq_s8(int8x16_t __p0, int8x16_t __p1) {
  uint8x16_t __ret;
  __ret = (uint8x16_t)(__p0 >= __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vcgeq_f32(float32x4_t __p0, float32x4_t __p1) {
  uint32x4_t __ret;
  __ret = (uint32x4_t)(__p0 >= __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vcgeq_s32(int32x4_t __p0, int32x4_t __p1) {
  uint32x4_t __ret;
  __ret = (uint32x4_t)(__p0 >= __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vcgeq_s16(int16x8_t __p0, int16x8_t __p1) {
  uint16x8_t __ret;
  __ret = (uint16x8_t)(__p0 >= __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vcge_u8(uint8x8_t __p0, uint8x8_t __p1) {
  uint8x8_t __ret;
  __ret = (uint8x8_t)(__p0 >= __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vcge_u32(uint32x2_t __p0, uint32x2_t __p1) {
  uint32x2_t __ret;
  __ret = (uint32x2_t)(__p0 >= __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vcge_u16(uint16x4_t __p0, uint16x4_t __p1) {
  uint16x4_t __ret;
  __ret = (uint16x4_t)(__p0 >= __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vcge_s8(int8x8_t __p0, int8x8_t __p1) {
  uint8x8_t __ret;
  __ret = (uint8x8_t)(__p0 >= __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vcge_f32(float32x2_t __p0, float32x2_t __p1) {
  uint32x2_t __ret;
  __ret = (uint32x2_t)(__p0 >= __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vcge_s32(int32x2_t __p0, int32x2_t __p1) {
  uint32x2_t __ret;
  __ret = (uint32x2_t)(__p0 >= __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vcge_s16(int16x4_t __p0, int16x4_t __p1) {
  uint16x4_t __ret;
  __ret = (uint16x4_t)(__p0 >= __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vcgtq_u8(uint8x16_t __p0, uint8x16_t __p1) {
  uint8x16_t __ret;
  __ret = (uint8x16_t)(__p0 > __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vcgtq_u32(uint32x4_t __p0, uint32x4_t __p1) {
  uint32x4_t __ret;
  __ret = (uint32x4_t)(__p0 > __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vcgtq_u16(uint16x8_t __p0, uint16x8_t __p1) {
  uint16x8_t __ret;
  __ret = (uint16x8_t)(__p0 > __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vcgtq_s8(int8x16_t __p0, int8x16_t __p1) {
  uint8x16_t __ret;
  __ret = (uint8x16_t)(__p0 > __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vcgtq_f32(float32x4_t __p0, float32x4_t __p1) {
  uint32x4_t __ret;
  __ret = (uint32x4_t)(__p0 > __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vcgtq_s32(int32x4_t __p0, int32x4_t __p1) {
  uint32x4_t __ret;
  __ret = (uint32x4_t)(__p0 > __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vcgtq_s16(int16x8_t __p0, int16x8_t __p1) {
  uint16x8_t __ret;
  __ret = (uint16x8_t)(__p0 > __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vcgt_u8(uint8x8_t __p0, uint8x8_t __p1) {
  uint8x8_t __ret;
  __ret = (uint8x8_t)(__p0 > __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vcgt_u32(uint32x2_t __p0, uint32x2_t __p1) {
  uint32x2_t __ret;
  __ret = (uint32x2_t)(__p0 > __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vcgt_u16(uint16x4_t __p0, uint16x4_t __p1) {
  uint16x4_t __ret;
  __ret = (uint16x4_t)(__p0 > __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vcgt_s8(int8x8_t __p0, int8x8_t __p1) {
  uint8x8_t __ret;
  __ret = (uint8x8_t)(__p0 > __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vcgt_f32(float32x2_t __p0, float32x2_t __p1) {
  uint32x2_t __ret;
  __ret = (uint32x2_t)(__p0 > __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vcgt_s32(int32x2_t __p0, int32x2_t __p1) {
  uint32x2_t __ret;
  __ret = (uint32x2_t)(__p0 > __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vcgt_s16(int16x4_t __p0, int16x4_t __p1) {
  uint16x4_t __ret;
  __ret = (uint16x4_t)(__p0 > __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vcleq_u8(uint8x16_t __p0, uint8x16_t __p1) {
  uint8x16_t __ret;
  __ret = (uint8x16_t)(__p0 <= __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vcleq_u32(uint32x4_t __p0, uint32x4_t __p1) {
  uint32x4_t __ret;
  __ret = (uint32x4_t)(__p0 <= __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vcleq_u16(uint16x8_t __p0, uint16x8_t __p1) {
  uint16x8_t __ret;
  __ret = (uint16x8_t)(__p0 <= __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vcleq_s8(int8x16_t __p0, int8x16_t __p1) {
  uint8x16_t __ret;
  __ret = (uint8x16_t)(__p0 <= __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vcleq_f32(float32x4_t __p0, float32x4_t __p1) {
  uint32x4_t __ret;
  __ret = (uint32x4_t)(__p0 <= __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vcleq_s32(int32x4_t __p0, int32x4_t __p1) {
  uint32x4_t __ret;
  __ret = (uint32x4_t)(__p0 <= __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vcleq_s16(int16x8_t __p0, int16x8_t __p1) {
  uint16x8_t __ret;
  __ret = (uint16x8_t)(__p0 <= __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vcle_u8(uint8x8_t __p0, uint8x8_t __p1) {
  uint8x8_t __ret;
  __ret = (uint8x8_t)(__p0 <= __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vcle_u32(uint32x2_t __p0, uint32x2_t __p1) {
  uint32x2_t __ret;
  __ret = (uint32x2_t)(__p0 <= __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vcle_u16(uint16x4_t __p0, uint16x4_t __p1) {
  uint16x4_t __ret;
  __ret = (uint16x4_t)(__p0 <= __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vcle_s8(int8x8_t __p0, int8x8_t __p1) {
  uint8x8_t __ret;
  __ret = (uint8x8_t)(__p0 <= __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vcle_f32(float32x2_t __p0, float32x2_t __p1) {
  uint32x2_t __ret;
  __ret = (uint32x2_t)(__p0 <= __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vcle_s32(int32x2_t __p0, int32x2_t __p1) {
  uint32x2_t __ret;
  __ret = (uint32x2_t)(__p0 <= __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vcle_s16(int16x4_t __p0, int16x4_t __p1) {
  uint16x4_t __ret;
  __ret = (uint16x4_t)(__p0 <= __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vclsq_s8(int8x16_t __p0) {
  int8x16_t __ret;
  __ret = (int8x16_t) __builtin_neon_vclsq_v((int8x16_t)__p0, 32);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vclsq_s32(int32x4_t __p0) {
  int32x4_t __ret;
  __ret = (int32x4_t) __builtin_neon_vclsq_v((int8x16_t)__p0, 34);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vclsq_s16(int16x8_t __p0) {
  int16x8_t __ret;
  __ret = (int16x8_t) __builtin_neon_vclsq_v((int8x16_t)__p0, 33);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vcls_s8(int8x8_t __p0) {
  int8x8_t __ret;
  __ret = (int8x8_t) __builtin_neon_vcls_v((int8x8_t)__p0, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vcls_s32(int32x2_t __p0) {
  int32x2_t __ret;
  __ret = (int32x2_t) __builtin_neon_vcls_v((int8x8_t)__p0, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vcls_s16(int16x4_t __p0) {
  int16x4_t __ret;
  __ret = (int16x4_t) __builtin_neon_vcls_v((int8x8_t)__p0, 1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vcltq_u8(uint8x16_t __p0, uint8x16_t __p1) {
  uint8x16_t __ret;
  __ret = (uint8x16_t)(__p0 < __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vcltq_u32(uint32x4_t __p0, uint32x4_t __p1) {
  uint32x4_t __ret;
  __ret = (uint32x4_t)(__p0 < __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vcltq_u16(uint16x8_t __p0, uint16x8_t __p1) {
  uint16x8_t __ret;
  __ret = (uint16x8_t)(__p0 < __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vcltq_s8(int8x16_t __p0, int8x16_t __p1) {
  uint8x16_t __ret;
  __ret = (uint8x16_t)(__p0 < __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vcltq_f32(float32x4_t __p0, float32x4_t __p1) {
  uint32x4_t __ret;
  __ret = (uint32x4_t)(__p0 < __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vcltq_s32(int32x4_t __p0, int32x4_t __p1) {
  uint32x4_t __ret;
  __ret = (uint32x4_t)(__p0 < __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vcltq_s16(int16x8_t __p0, int16x8_t __p1) {
  uint16x8_t __ret;
  __ret = (uint16x8_t)(__p0 < __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vclt_u8(uint8x8_t __p0, uint8x8_t __p1) {
  uint8x8_t __ret;
  __ret = (uint8x8_t)(__p0 < __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vclt_u32(uint32x2_t __p0, uint32x2_t __p1) {
  uint32x2_t __ret;
  __ret = (uint32x2_t)(__p0 < __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vclt_u16(uint16x4_t __p0, uint16x4_t __p1) {
  uint16x4_t __ret;
  __ret = (uint16x4_t)(__p0 < __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vclt_s8(int8x8_t __p0, int8x8_t __p1) {
  uint8x8_t __ret;
  __ret = (uint8x8_t)(__p0 < __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vclt_f32(float32x2_t __p0, float32x2_t __p1) {
  uint32x2_t __ret;
  __ret = (uint32x2_t)(__p0 < __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vclt_s32(int32x2_t __p0, int32x2_t __p1) {
  uint32x2_t __ret;
  __ret = (uint32x2_t)(__p0 < __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vclt_s16(int16x4_t __p0, int16x4_t __p1) {
  uint16x4_t __ret;
  __ret = (uint16x4_t)(__p0 < __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vclzq_u8(uint8x16_t __p0) {
  uint8x16_t __ret;
  __ret = (uint8x16_t) __builtin_neon_vclzq_v((int8x16_t)__p0, 48);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vclzq_u32(uint32x4_t __p0) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vclzq_v((int8x16_t)__p0, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vclzq_u16(uint16x8_t __p0) {
  uint16x8_t __ret;
  __ret = (uint16x8_t) __builtin_neon_vclzq_v((int8x16_t)__p0, 49);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vclzq_s8(int8x16_t __p0) {
  int8x16_t __ret;
  __ret = (int8x16_t) __builtin_neon_vclzq_v((int8x16_t)__p0, 32);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vclzq_s32(int32x4_t __p0) {
  int32x4_t __ret;
  __ret = (int32x4_t) __builtin_neon_vclzq_v((int8x16_t)__p0, 34);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vclzq_s16(int16x8_t __p0) {
  int16x8_t __ret;
  __ret = (int16x8_t) __builtin_neon_vclzq_v((int8x16_t)__p0, 33);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vclz_u8(uint8x8_t __p0) {
  uint8x8_t __ret;
  __ret = (uint8x8_t) __builtin_neon_vclz_v((int8x8_t)__p0, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vclz_u32(uint32x2_t __p0) {
  uint32x2_t __ret;
  __ret = (uint32x2_t) __builtin_neon_vclz_v((int8x8_t)__p0, 18);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vclz_u16(uint16x4_t __p0) {
  uint16x4_t __ret;
  __ret = (uint16x4_t) __builtin_neon_vclz_v((int8x8_t)__p0, 17);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vclz_s8(int8x8_t __p0) {
  int8x8_t __ret;
  __ret = (int8x8_t) __builtin_neon_vclz_v((int8x8_t)__p0, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vclz_s32(int32x2_t __p0) {
  int32x2_t __ret;
  __ret = (int32x2_t) __builtin_neon_vclz_v((int8x8_t)__p0, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vclz_s16(int16x4_t __p0) {
  int16x4_t __ret;
  __ret = (int16x4_t) __builtin_neon_vclz_v((int8x8_t)__p0, 1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x8_t vcnt_p8(poly8x8_t __p0) {
  poly8x8_t __ret;
  __ret = (poly8x8_t) __builtin_neon_vcnt_v((int8x8_t)__p0, 4);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x16_t vcntq_p8(poly8x16_t __p0) {
  poly8x16_t __ret;
  __ret = (poly8x16_t) __builtin_neon_vcntq_v((int8x16_t)__p0, 36);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vcntq_u8(uint8x16_t __p0) {
  uint8x16_t __ret;
  __ret = (uint8x16_t) __builtin_neon_vcntq_v((int8x16_t)__p0, 48);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vcntq_s8(int8x16_t __p0) {
  int8x16_t __ret;
  __ret = (int8x16_t) __builtin_neon_vcntq_v((int8x16_t)__p0, 32);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vcnt_u8(uint8x8_t __p0) {
  uint8x8_t __ret;
  __ret = (uint8x8_t) __builtin_neon_vcnt_v((int8x8_t)__p0, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vcnt_s8(int8x8_t __p0) {
  int8x8_t __ret;
  __ret = (int8x8_t) __builtin_neon_vcnt_v((int8x8_t)__p0, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x16_t vcombine_p8(poly8x8_t __p0, poly8x8_t __p1) {
  poly8x16_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x8_t vcombine_p16(poly16x4_t __p0, poly16x4_t __p1) {
  poly16x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 1, 2, 3, 4, 5, 6, 7);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vcombine_u8(uint8x8_t __p0, uint8x8_t __p1) {
  uint8x16_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vcombine_u32(uint32x2_t __p0, uint32x2_t __p1) {
  uint32x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 1, 2, 3);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vcombine_u64(uint64x1_t __p0, uint64x1_t __p1) {
  uint64x2_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vcombine_u16(uint16x4_t __p0, uint16x4_t __p1) {
  uint16x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 1, 2, 3, 4, 5, 6, 7);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vcombine_s8(int8x8_t __p0, int8x8_t __p1) {
  int8x16_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vcombine_f32(float32x2_t __p0, float32x2_t __p1) {
  float32x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 1, 2, 3);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float16x8_t vcombine_f16(float16x4_t __p0, float16x4_t __p1) {
  float16x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 1, 2, 3, 4, 5, 6, 7);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vcombine_s32(int32x2_t __p0, int32x2_t __p1) {
  int32x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 1, 2, 3);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vcombine_s64(int64x1_t __p0, int64x1_t __p1) {
  int64x2_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vcombine_s16(int16x4_t __p0, int16x4_t __p1) {
  int16x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 1, 2, 3, 4, 5, 6, 7);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x8_t vcreate_p8(uint64_t __p0) {
  poly8x8_t __ret;
  __ret = (poly8x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x4_t vcreate_p16(uint64_t __p0) {
  poly16x4_t __ret;
  __ret = (poly16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vcreate_u8(uint64_t __p0) {
  uint8x8_t __ret;
  __ret = (uint8x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vcreate_u32(uint64_t __p0) {
  uint32x2_t __ret;
  __ret = (uint32x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vcreate_u64(uint64_t __p0) {
  uint64x1_t __ret;
  __ret = (uint64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vcreate_u16(uint64_t __p0) {
  uint16x4_t __ret;
  __ret = (uint16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vcreate_s8(uint64_t __p0) {
  int8x8_t __ret;
  __ret = (int8x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vcreate_f32(uint64_t __p0) {
  float32x2_t __ret;
  __ret = (float32x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float16x4_t vcreate_f16(uint64_t __p0) {
  float16x4_t __ret;
  __ret = (float16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vcreate_s32(uint64_t __p0) {
  int32x2_t __ret;
  __ret = (int32x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x1_t vcreate_s64(uint64_t __p0) {
  int64x1_t __ret;
  __ret = (int64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vcreate_s16(uint64_t __p0) {
  int16x4_t __ret;
  __ret = (int16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vcvtq_f32_u32(uint32x4_t __p0) {
  float32x4_t __ret;
  __ret = (float32x4_t) __builtin_neon_vcvtq_f32_v((int8x16_t)__p0, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vcvtq_f32_s32(int32x4_t __p0) {
  float32x4_t __ret;
  __ret = (float32x4_t) __builtin_neon_vcvtq_f32_v((int8x16_t)__p0, 34);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vcvt_f32_u32(uint32x2_t __p0) {
  float32x2_t __ret;
  __ret = (float32x2_t) __builtin_neon_vcvt_f32_v((int8x8_t)__p0, 18);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vcvt_f32_s32(int32x2_t __p0) {
  float32x2_t __ret;
  __ret = (float32x2_t) __builtin_neon_vcvt_f32_v((int8x8_t)__p0, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vcvtq_s32_f32(float32x4_t __p0) {
  int32x4_t __ret;
  __ret = (int32x4_t) __builtin_neon_vcvtq_s32_v((int8x16_t)__p0, 34);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vcvt_s32_f32(float32x2_t __p0) {
  int32x2_t __ret;
  __ret = (int32x2_t) __builtin_neon_vcvt_s32_v((int8x8_t)__p0, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vcvtq_u32_f32(float32x4_t __p0) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vcvtq_u32_v((int8x16_t)__p0, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vcvt_u32_f32(float32x2_t __p0) {
  uint32x2_t __ret;
  __ret = (uint32x2_t) __builtin_neon_vcvt_u32_v((int8x8_t)__p0, 18);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x8_t vdup_n_p8(poly8_t __p0) {
  poly8x8_t __ret;
  __ret = (poly8x8_t) {__p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x4_t vdup_n_p16(poly16_t __p0) {
  poly16x4_t __ret;
  __ret = (poly16x4_t) {__p0, __p0, __p0, __p0};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x16_t vdupq_n_p8(poly8_t __p0) {
  poly8x16_t __ret;
  __ret = (poly8x16_t) {__p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x8_t vdupq_n_p16(poly16_t __p0) {
  poly16x8_t __ret;
  __ret = (poly16x8_t) {__p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vdupq_n_u8(uint8_t __p0) {
  uint8x16_t __ret;
  __ret = (uint8x16_t) {__p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vdupq_n_u32(uint32_t __p0) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) {__p0, __p0, __p0, __p0};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vdupq_n_u64(uint64_t __p0) {
  uint64x2_t __ret;
  __ret = (uint64x2_t) {__p0, __p0};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vdupq_n_u16(uint16_t __p0) {
  uint16x8_t __ret;
  __ret = (uint16x8_t) {__p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vdupq_n_s8(int8_t __p0) {
  int8x16_t __ret;
  __ret = (int8x16_t) {__p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vdupq_n_f32(float32_t __p0) {
  float32x4_t __ret;
  __ret = (float32x4_t) {__p0, __p0, __p0, __p0};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vdupq_n_s32(int32_t __p0) {
  int32x4_t __ret;
  __ret = (int32x4_t) {__p0, __p0, __p0, __p0};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vdupq_n_s64(int64_t __p0) {
  int64x2_t __ret;
  __ret = (int64x2_t) {__p0, __p0};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vdupq_n_s16(int16_t __p0) {
  int16x8_t __ret;
  __ret = (int16x8_t) {__p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vdup_n_u8(uint8_t __p0) {
  uint8x8_t __ret;
  __ret = (uint8x8_t) {__p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vdup_n_u32(uint32_t __p0) {
  uint32x2_t __ret;
  __ret = (uint32x2_t) {__p0, __p0};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vdup_n_u64(uint64_t __p0) {
  uint64x1_t __ret;
  __ret = (uint64x1_t) {__p0};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vdup_n_u16(uint16_t __p0) {
  uint16x4_t __ret;
  __ret = (uint16x4_t) {__p0, __p0, __p0, __p0};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vdup_n_s8(int8_t __p0) {
  int8x8_t __ret;
  __ret = (int8x8_t) {__p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vdup_n_f32(float32_t __p0) {
  float32x2_t __ret;
  __ret = (float32x2_t) {__p0, __p0};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vdup_n_s32(int32_t __p0) {
  int32x2_t __ret;
  __ret = (int32x2_t) {__p0, __p0};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x1_t vdup_n_s64(int64_t __p0) {
  int64x1_t __ret;
  __ret = (int64x1_t) {__p0};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vdup_n_s16(int16_t __p0) {
  int16x4_t __ret;
  __ret = (int16x4_t) {__p0, __p0, __p0, __p0};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t veorq_u8(uint8x16_t __p0, uint8x16_t __p1) {
  uint8x16_t __ret;
  __ret = __p0 ^ __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t veorq_u32(uint32x4_t __p0, uint32x4_t __p1) {
  uint32x4_t __ret;
  __ret = __p0 ^ __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t veorq_u64(uint64x2_t __p0, uint64x2_t __p1) {
  uint64x2_t __ret;
  __ret = __p0 ^ __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t veorq_u16(uint16x8_t __p0, uint16x8_t __p1) {
  uint16x8_t __ret;
  __ret = __p0 ^ __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t veorq_s8(int8x16_t __p0, int8x16_t __p1) {
  int8x16_t __ret;
  __ret = __p0 ^ __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t veorq_s32(int32x4_t __p0, int32x4_t __p1) {
  int32x4_t __ret;
  __ret = __p0 ^ __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t veorq_s64(int64x2_t __p0, int64x2_t __p1) {
  int64x2_t __ret;
  __ret = __p0 ^ __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t veorq_s16(int16x8_t __p0, int16x8_t __p1) {
  int16x8_t __ret;
  __ret = __p0 ^ __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t veor_u8(uint8x8_t __p0, uint8x8_t __p1) {
  uint8x8_t __ret;
  __ret = __p0 ^ __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t veor_u32(uint32x2_t __p0, uint32x2_t __p1) {
  uint32x2_t __ret;
  __ret = __p0 ^ __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t veor_u64(uint64x1_t __p0, uint64x1_t __p1) {
  uint64x1_t __ret;
  __ret = __p0 ^ __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t veor_u16(uint16x4_t __p0, uint16x4_t __p1) {
  uint16x4_t __ret;
  __ret = __p0 ^ __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t veor_s8(int8x8_t __p0, int8x8_t __p1) {
  int8x8_t __ret;
  __ret = __p0 ^ __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t veor_s32(int32x2_t __p0, int32x2_t __p1) {
  int32x2_t __ret;
  __ret = __p0 ^ __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x1_t veor_s64(int64x1_t __p0, int64x1_t __p1) {
  int64x1_t __ret;
  __ret = __p0 ^ __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t veor_s16(int16x4_t __p0, int16x4_t __p1) {
  int16x4_t __ret;
  __ret = __p0 ^ __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x8_t vget_high_p8(poly8x16_t __p0) {
  poly8x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 8, 9, 10, 11, 12, 13, 14, 15);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x4_t vget_high_p16(poly16x8_t __p0) {
  poly16x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 4, 5, 6, 7);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vget_high_u8(uint8x16_t __p0) {
  uint8x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 8, 9, 10, 11, 12, 13, 14, 15);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vget_high_u32(uint32x4_t __p0) {
  uint32x2_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 2, 3);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vget_high_u64(uint64x2_t __p0) {
  uint64x1_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vget_high_u16(uint16x8_t __p0) {
  uint16x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 4, 5, 6, 7);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vget_high_s8(int8x16_t __p0) {
  int8x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 8, 9, 10, 11, 12, 13, 14, 15);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vget_high_f32(float32x4_t __p0) {
  float32x2_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 2, 3);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float16x4_t vget_high_f16(float16x8_t __p0) {
  float16x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 4, 5, 6, 7);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vget_high_s32(int32x4_t __p0) {
  int32x2_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 2, 3);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x1_t vget_high_s64(int64x2_t __p0) {
  int64x1_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vget_high_s16(int16x8_t __p0) {
  int16x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 4, 5, 6, 7);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x8_t vget_low_p8(poly8x16_t __p0) {
  poly8x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 0, 1, 2, 3, 4, 5, 6, 7);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x4_t vget_low_p16(poly16x8_t __p0) {
  poly16x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 0, 1, 2, 3);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vget_low_u8(uint8x16_t __p0) {
  uint8x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 0, 1, 2, 3, 4, 5, 6, 7);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vget_low_u32(uint32x4_t __p0) {
  uint32x2_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 0, 1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vget_low_u64(uint64x2_t __p0) {
  uint64x1_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vget_low_u16(uint16x8_t __p0) {
  uint16x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 0, 1, 2, 3);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vget_low_s8(int8x16_t __p0) {
  int8x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 0, 1, 2, 3, 4, 5, 6, 7);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vget_low_f32(float32x4_t __p0) {
  float32x2_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 0, 1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float16x4_t vget_low_f16(float16x8_t __p0) {
  float16x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 0, 1, 2, 3);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vget_low_s32(int32x4_t __p0) {
  int32x2_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 0, 1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x1_t vget_low_s64(int64x2_t __p0) {
  int64x1_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vget_low_s16(int16x8_t __p0) {
  int16x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 0, 1, 2, 3);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vhaddq_u8(uint8x16_t __p0, uint8x16_t __p1) {
  uint8x16_t __ret;
  __ret = (uint8x16_t) __builtin_neon_vhaddq_v((int8x16_t)__p0, (int8x16_t)__p1, 48);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vhaddq_u32(uint32x4_t __p0, uint32x4_t __p1) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vhaddq_v((int8x16_t)__p0, (int8x16_t)__p1, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vhaddq_u16(uint16x8_t __p0, uint16x8_t __p1) {
  uint16x8_t __ret;
  __ret = (uint16x8_t) __builtin_neon_vhaddq_v((int8x16_t)__p0, (int8x16_t)__p1, 49);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vhaddq_s8(int8x16_t __p0, int8x16_t __p1) {
  int8x16_t __ret;
  __ret = (int8x16_t) __builtin_neon_vhaddq_v((int8x16_t)__p0, (int8x16_t)__p1, 32);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vhaddq_s32(int32x4_t __p0, int32x4_t __p1) {
  int32x4_t __ret;
  __ret = (int32x4_t) __builtin_neon_vhaddq_v((int8x16_t)__p0, (int8x16_t)__p1, 34);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vhaddq_s16(int16x8_t __p0, int16x8_t __p1) {
  int16x8_t __ret;
  __ret = (int16x8_t) __builtin_neon_vhaddq_v((int8x16_t)__p0, (int8x16_t)__p1, 33);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vhadd_u8(uint8x8_t __p0, uint8x8_t __p1) {
  uint8x8_t __ret;
  __ret = (uint8x8_t) __builtin_neon_vhadd_v((int8x8_t)__p0, (int8x8_t)__p1, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vhadd_u32(uint32x2_t __p0, uint32x2_t __p1) {
  uint32x2_t __ret;
  __ret = (uint32x2_t) __builtin_neon_vhadd_v((int8x8_t)__p0, (int8x8_t)__p1, 18);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vhadd_u16(uint16x4_t __p0, uint16x4_t __p1) {
  uint16x4_t __ret;
  __ret = (uint16x4_t) __builtin_neon_vhadd_v((int8x8_t)__p0, (int8x8_t)__p1, 17);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vhadd_s8(int8x8_t __p0, int8x8_t __p1) {
  int8x8_t __ret;
  __ret = (int8x8_t) __builtin_neon_vhadd_v((int8x8_t)__p0, (int8x8_t)__p1, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vhadd_s32(int32x2_t __p0, int32x2_t __p1) {
  int32x2_t __ret;
  __ret = (int32x2_t) __builtin_neon_vhadd_v((int8x8_t)__p0, (int8x8_t)__p1, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vhadd_s16(int16x4_t __p0, int16x4_t __p1) {
  int16x4_t __ret;
  __ret = (int16x4_t) __builtin_neon_vhadd_v((int8x8_t)__p0, (int8x8_t)__p1, 1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vhsubq_u8(uint8x16_t __p0, uint8x16_t __p1) {
  uint8x16_t __ret;
  __ret = (uint8x16_t) __builtin_neon_vhsubq_v((int8x16_t)__p0, (int8x16_t)__p1, 48);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vhsubq_u32(uint32x4_t __p0, uint32x4_t __p1) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vhsubq_v((int8x16_t)__p0, (int8x16_t)__p1, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vhsubq_u16(uint16x8_t __p0, uint16x8_t __p1) {
  uint16x8_t __ret;
  __ret = (uint16x8_t) __builtin_neon_vhsubq_v((int8x16_t)__p0, (int8x16_t)__p1, 49);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vhsubq_s8(int8x16_t __p0, int8x16_t __p1) {
  int8x16_t __ret;
  __ret = (int8x16_t) __builtin_neon_vhsubq_v((int8x16_t)__p0, (int8x16_t)__p1, 32);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vhsubq_s32(int32x4_t __p0, int32x4_t __p1) {
  int32x4_t __ret;
  __ret = (int32x4_t) __builtin_neon_vhsubq_v((int8x16_t)__p0, (int8x16_t)__p1, 34);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vhsubq_s16(int16x8_t __p0, int16x8_t __p1) {
  int16x8_t __ret;
  __ret = (int16x8_t) __builtin_neon_vhsubq_v((int8x16_t)__p0, (int8x16_t)__p1, 33);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vhsub_u8(uint8x8_t __p0, uint8x8_t __p1) {
  uint8x8_t __ret;
  __ret = (uint8x8_t) __builtin_neon_vhsub_v((int8x8_t)__p0, (int8x8_t)__p1, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vhsub_u32(uint32x2_t __p0, uint32x2_t __p1) {
  uint32x2_t __ret;
  __ret = (uint32x2_t) __builtin_neon_vhsub_v((int8x8_t)__p0, (int8x8_t)__p1, 18);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vhsub_u16(uint16x4_t __p0, uint16x4_t __p1) {
  uint16x4_t __ret;
  __ret = (uint16x4_t) __builtin_neon_vhsub_v((int8x8_t)__p0, (int8x8_t)__p1, 17);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vhsub_s8(int8x8_t __p0, int8x8_t __p1) {
  int8x8_t __ret;
  __ret = (int8x8_t) __builtin_neon_vhsub_v((int8x8_t)__p0, (int8x8_t)__p1, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vhsub_s32(int32x2_t __p0, int32x2_t __p1) {
  int32x2_t __ret;
  __ret = (int32x2_t) __builtin_neon_vhsub_v((int8x8_t)__p0, (int8x8_t)__p1, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vhsub_s16(int16x4_t __p0, int16x4_t __p1) {
  int16x4_t __ret;
  __ret = (int16x4_t) __builtin_neon_vhsub_v((int8x8_t)__p0, (int8x8_t)__p1, 1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vmaxq_u8(uint8x16_t __p0, uint8x16_t __p1) {
  uint8x16_t __ret;
  __ret = (uint8x16_t) __builtin_neon_vmaxq_v((int8x16_t)__p0, (int8x16_t)__p1, 48);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vmaxq_u32(uint32x4_t __p0, uint32x4_t __p1) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vmaxq_v((int8x16_t)__p0, (int8x16_t)__p1, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vmaxq_u16(uint16x8_t __p0, uint16x8_t __p1) {
  uint16x8_t __ret;
  __ret = (uint16x8_t) __builtin_neon_vmaxq_v((int8x16_t)__p0, (int8x16_t)__p1, 49);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vmaxq_s8(int8x16_t __p0, int8x16_t __p1) {
  int8x16_t __ret;
  __ret = (int8x16_t) __builtin_neon_vmaxq_v((int8x16_t)__p0, (int8x16_t)__p1, 32);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vmaxq_f32(float32x4_t __p0, float32x4_t __p1) {
  float32x4_t __ret;
  __ret = (float32x4_t) __builtin_neon_vmaxq_v((int8x16_t)__p0, (int8x16_t)__p1, 41);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vmaxq_s32(int32x4_t __p0, int32x4_t __p1) {
  int32x4_t __ret;
  __ret = (int32x4_t) __builtin_neon_vmaxq_v((int8x16_t)__p0, (int8x16_t)__p1, 34);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vmaxq_s16(int16x8_t __p0, int16x8_t __p1) {
  int16x8_t __ret;
  __ret = (int16x8_t) __builtin_neon_vmaxq_v((int8x16_t)__p0, (int8x16_t)__p1, 33);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vmax_u8(uint8x8_t __p0, uint8x8_t __p1) {
  uint8x8_t __ret;
  __ret = (uint8x8_t) __builtin_neon_vmax_v((int8x8_t)__p0, (int8x8_t)__p1, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vmax_u32(uint32x2_t __p0, uint32x2_t __p1) {
  uint32x2_t __ret;
  __ret = (uint32x2_t) __builtin_neon_vmax_v((int8x8_t)__p0, (int8x8_t)__p1, 18);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vmax_u16(uint16x4_t __p0, uint16x4_t __p1) {
  uint16x4_t __ret;
  __ret = (uint16x4_t) __builtin_neon_vmax_v((int8x8_t)__p0, (int8x8_t)__p1, 17);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vmax_s8(int8x8_t __p0, int8x8_t __p1) {
  int8x8_t __ret;
  __ret = (int8x8_t) __builtin_neon_vmax_v((int8x8_t)__p0, (int8x8_t)__p1, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vmax_f32(float32x2_t __p0, float32x2_t __p1) {
  float32x2_t __ret;
  __ret = (float32x2_t) __builtin_neon_vmax_v((int8x8_t)__p0, (int8x8_t)__p1, 9);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vmax_s32(int32x2_t __p0, int32x2_t __p1) {
  int32x2_t __ret;
  __ret = (int32x2_t) __builtin_neon_vmax_v((int8x8_t)__p0, (int8x8_t)__p1, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vmax_s16(int16x4_t __p0, int16x4_t __p1) {
  int16x4_t __ret;
  __ret = (int16x4_t) __builtin_neon_vmax_v((int8x8_t)__p0, (int8x8_t)__p1, 1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vminq_u8(uint8x16_t __p0, uint8x16_t __p1) {
  uint8x16_t __ret;
  __ret = (uint8x16_t) __builtin_neon_vminq_v((int8x16_t)__p0, (int8x16_t)__p1, 48);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vminq_u32(uint32x4_t __p0, uint32x4_t __p1) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vminq_v((int8x16_t)__p0, (int8x16_t)__p1, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vminq_u16(uint16x8_t __p0, uint16x8_t __p1) {
  uint16x8_t __ret;
  __ret = (uint16x8_t) __builtin_neon_vminq_v((int8x16_t)__p0, (int8x16_t)__p1, 49);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vminq_s8(int8x16_t __p0, int8x16_t __p1) {
  int8x16_t __ret;
  __ret = (int8x16_t) __builtin_neon_vminq_v((int8x16_t)__p0, (int8x16_t)__p1, 32);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vminq_f32(float32x4_t __p0, float32x4_t __p1) {
  float32x4_t __ret;
  __ret = (float32x4_t) __builtin_neon_vminq_v((int8x16_t)__p0, (int8x16_t)__p1, 41);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vminq_s32(int32x4_t __p0, int32x4_t __p1) {
  int32x4_t __ret;
  __ret = (int32x4_t) __builtin_neon_vminq_v((int8x16_t)__p0, (int8x16_t)__p1, 34);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vminq_s16(int16x8_t __p0, int16x8_t __p1) {
  int16x8_t __ret;
  __ret = (int16x8_t) __builtin_neon_vminq_v((int8x16_t)__p0, (int8x16_t)__p1, 33);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vmin_u8(uint8x8_t __p0, uint8x8_t __p1) {
  uint8x8_t __ret;
  __ret = (uint8x8_t) __builtin_neon_vmin_v((int8x8_t)__p0, (int8x8_t)__p1, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vmin_u32(uint32x2_t __p0, uint32x2_t __p1) {
  uint32x2_t __ret;
  __ret = (uint32x2_t) __builtin_neon_vmin_v((int8x8_t)__p0, (int8x8_t)__p1, 18);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vmin_u16(uint16x4_t __p0, uint16x4_t __p1) {
  uint16x4_t __ret;
  __ret = (uint16x4_t) __builtin_neon_vmin_v((int8x8_t)__p0, (int8x8_t)__p1, 17);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vmin_s8(int8x8_t __p0, int8x8_t __p1) {
  int8x8_t __ret;
  __ret = (int8x8_t) __builtin_neon_vmin_v((int8x8_t)__p0, (int8x8_t)__p1, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vmin_f32(float32x2_t __p0, float32x2_t __p1) {
  float32x2_t __ret;
  __ret = (float32x2_t) __builtin_neon_vmin_v((int8x8_t)__p0, (int8x8_t)__p1, 9);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vmin_s32(int32x2_t __p0, int32x2_t __p1) {
  int32x2_t __ret;
  __ret = (int32x2_t) __builtin_neon_vmin_v((int8x8_t)__p0, (int8x8_t)__p1, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vmin_s16(int16x4_t __p0, int16x4_t __p1) {
  int16x4_t __ret;
  __ret = (int16x4_t) __builtin_neon_vmin_v((int8x8_t)__p0, (int8x8_t)__p1, 1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vmlaq_u8(uint8x16_t __p0, uint8x16_t __p1, uint8x16_t __p2) {
  uint8x16_t __ret;
  __ret = __p0 + __p1 * __p2;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vmlaq_u32(uint32x4_t __p0, uint32x4_t __p1, uint32x4_t __p2) {
  uint32x4_t __ret;
  __ret = __p0 + __p1 * __p2;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vmlaq_u16(uint16x8_t __p0, uint16x8_t __p1, uint16x8_t __p2) {
  uint16x8_t __ret;
  __ret = __p0 + __p1 * __p2;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vmlaq_s8(int8x16_t __p0, int8x16_t __p1, int8x16_t __p2) {
  int8x16_t __ret;
  __ret = __p0 + __p1 * __p2;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vmlaq_f32(float32x4_t __p0, float32x4_t __p1, float32x4_t __p2) {
  float32x4_t __ret;
  __ret = __p0 + __p1 * __p2;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vmlaq_s32(int32x4_t __p0, int32x4_t __p1, int32x4_t __p2) {
  int32x4_t __ret;
  __ret = __p0 + __p1 * __p2;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vmlaq_s16(int16x8_t __p0, int16x8_t __p1, int16x8_t __p2) {
  int16x8_t __ret;
  __ret = __p0 + __p1 * __p2;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vmla_u8(uint8x8_t __p0, uint8x8_t __p1, uint8x8_t __p2) {
  uint8x8_t __ret;
  __ret = __p0 + __p1 * __p2;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vmla_u32(uint32x2_t __p0, uint32x2_t __p1, uint32x2_t __p2) {
  uint32x2_t __ret;
  __ret = __p0 + __p1 * __p2;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vmla_u16(uint16x4_t __p0, uint16x4_t __p1, uint16x4_t __p2) {
  uint16x4_t __ret;
  __ret = __p0 + __p1 * __p2;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vmla_s8(int8x8_t __p0, int8x8_t __p1, int8x8_t __p2) {
  int8x8_t __ret;
  __ret = __p0 + __p1 * __p2;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vmla_f32(float32x2_t __p0, float32x2_t __p1, float32x2_t __p2) {
  float32x2_t __ret;
  __ret = __p0 + __p1 * __p2;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vmla_s32(int32x2_t __p0, int32x2_t __p1, int32x2_t __p2) {
  int32x2_t __ret;
  __ret = __p0 + __p1 * __p2;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vmla_s16(int16x4_t __p0, int16x4_t __p1, int16x4_t __p2) {
  int16x4_t __ret;
  __ret = __p0 + __p1 * __p2;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vmlaq_n_u32(uint32x4_t __p0, uint32x4_t __p1, uint32_t __p2) {
  uint32x4_t __ret;
  __ret = __p0 + __p1 * (uint32x4_t) {__p2, __p2, __p2, __p2};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vmlaq_n_u16(uint16x8_t __p0, uint16x8_t __p1, uint16_t __p2) {
  uint16x8_t __ret;
  __ret = __p0 + __p1 * (uint16x8_t) {__p2, __p2, __p2, __p2, __p2, __p2, __p2, __p2};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vmlaq_n_f32(float32x4_t __p0, float32x4_t __p1, float32_t __p2) {
  float32x4_t __ret;
  __ret = __p0 + __p1 * (float32x4_t) {__p2, __p2, __p2, __p2};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vmlaq_n_s32(int32x4_t __p0, int32x4_t __p1, int32_t __p2) {
  int32x4_t __ret;
  __ret = __p0 + __p1 * (int32x4_t) {__p2, __p2, __p2, __p2};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vmlaq_n_s16(int16x8_t __p0, int16x8_t __p1, int16_t __p2) {
  int16x8_t __ret;
  __ret = __p0 + __p1 * (int16x8_t) {__p2, __p2, __p2, __p2, __p2, __p2, __p2, __p2};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vmla_n_u32(uint32x2_t __p0, uint32x2_t __p1, uint32_t __p2) {
  uint32x2_t __ret;
  __ret = __p0 + __p1 * (uint32x2_t) {__p2, __p2};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vmla_n_u16(uint16x4_t __p0, uint16x4_t __p1, uint16_t __p2) {
  uint16x4_t __ret;
  __ret = __p0 + __p1 * (uint16x4_t) {__p2, __p2, __p2, __p2};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vmla_n_f32(float32x2_t __p0, float32x2_t __p1, float32_t __p2) {
  float32x2_t __ret;
  __ret = __p0 + __p1 * (float32x2_t) {__p2, __p2};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vmla_n_s32(int32x2_t __p0, int32x2_t __p1, int32_t __p2) {
  int32x2_t __ret;
  __ret = __p0 + __p1 * (int32x2_t) {__p2, __p2};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vmla_n_s16(int16x4_t __p0, int16x4_t __p1, int16_t __p2) {
  int16x4_t __ret;
  __ret = __p0 + __p1 * (int16x4_t) {__p2, __p2, __p2, __p2};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vmlsq_u8(uint8x16_t __p0, uint8x16_t __p1, uint8x16_t __p2) {
  uint8x16_t __ret;
  __ret = __p0 - __p1 * __p2;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vmlsq_u32(uint32x4_t __p0, uint32x4_t __p1, uint32x4_t __p2) {
  uint32x4_t __ret;
  __ret = __p0 - __p1 * __p2;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vmlsq_u16(uint16x8_t __p0, uint16x8_t __p1, uint16x8_t __p2) {
  uint16x8_t __ret;
  __ret = __p0 - __p1 * __p2;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vmlsq_s8(int8x16_t __p0, int8x16_t __p1, int8x16_t __p2) {
  int8x16_t __ret;
  __ret = __p0 - __p1 * __p2;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vmlsq_f32(float32x4_t __p0, float32x4_t __p1, float32x4_t __p2) {
  float32x4_t __ret;
  __ret = __p0 - __p1 * __p2;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vmlsq_s32(int32x4_t __p0, int32x4_t __p1, int32x4_t __p2) {
  int32x4_t __ret;
  __ret = __p0 - __p1 * __p2;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vmlsq_s16(int16x8_t __p0, int16x8_t __p1, int16x8_t __p2) {
  int16x8_t __ret;
  __ret = __p0 - __p1 * __p2;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vmls_u8(uint8x8_t __p0, uint8x8_t __p1, uint8x8_t __p2) {
  uint8x8_t __ret;
  __ret = __p0 - __p1 * __p2;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vmls_u32(uint32x2_t __p0, uint32x2_t __p1, uint32x2_t __p2) {
  uint32x2_t __ret;
  __ret = __p0 - __p1 * __p2;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vmls_u16(uint16x4_t __p0, uint16x4_t __p1, uint16x4_t __p2) {
  uint16x4_t __ret;
  __ret = __p0 - __p1 * __p2;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vmls_s8(int8x8_t __p0, int8x8_t __p1, int8x8_t __p2) {
  int8x8_t __ret;
  __ret = __p0 - __p1 * __p2;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vmls_f32(float32x2_t __p0, float32x2_t __p1, float32x2_t __p2) {
  float32x2_t __ret;
  __ret = __p0 - __p1 * __p2;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vmls_s32(int32x2_t __p0, int32x2_t __p1, int32x2_t __p2) {
  int32x2_t __ret;
  __ret = __p0 - __p1 * __p2;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vmls_s16(int16x4_t __p0, int16x4_t __p1, int16x4_t __p2) {
  int16x4_t __ret;
  __ret = __p0 - __p1 * __p2;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vmlsq_n_u32(uint32x4_t __p0, uint32x4_t __p1, uint32_t __p2) {
  uint32x4_t __ret;
  __ret = __p0 - __p1 * (uint32x4_t) {__p2, __p2, __p2, __p2};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vmlsq_n_u16(uint16x8_t __p0, uint16x8_t __p1, uint16_t __p2) {
  uint16x8_t __ret;
  __ret = __p0 - __p1 * (uint16x8_t) {__p2, __p2, __p2, __p2, __p2, __p2, __p2, __p2};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vmlsq_n_f32(float32x4_t __p0, float32x4_t __p1, float32_t __p2) {
  float32x4_t __ret;
  __ret = __p0 - __p1 * (float32x4_t) {__p2, __p2, __p2, __p2};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vmlsq_n_s32(int32x4_t __p0, int32x4_t __p1, int32_t __p2) {
  int32x4_t __ret;
  __ret = __p0 - __p1 * (int32x4_t) {__p2, __p2, __p2, __p2};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vmlsq_n_s16(int16x8_t __p0, int16x8_t __p1, int16_t __p2) {
  int16x8_t __ret;
  __ret = __p0 - __p1 * (int16x8_t) {__p2, __p2, __p2, __p2, __p2, __p2, __p2, __p2};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vmls_n_u32(uint32x2_t __p0, uint32x2_t __p1, uint32_t __p2) {
  uint32x2_t __ret;
  __ret = __p0 - __p1 * (uint32x2_t) {__p2, __p2};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vmls_n_u16(uint16x4_t __p0, uint16x4_t __p1, uint16_t __p2) {
  uint16x4_t __ret;
  __ret = __p0 - __p1 * (uint16x4_t) {__p2, __p2, __p2, __p2};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vmls_n_f32(float32x2_t __p0, float32x2_t __p1, float32_t __p2) {
  float32x2_t __ret;
  __ret = __p0 - __p1 * (float32x2_t) {__p2, __p2};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vmls_n_s32(int32x2_t __p0, int32x2_t __p1, int32_t __p2) {
  int32x2_t __ret;
  __ret = __p0 - __p1 * (int32x2_t) {__p2, __p2};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vmls_n_s16(int16x4_t __p0, int16x4_t __p1, int16_t __p2) {
  int16x4_t __ret;
  __ret = __p0 - __p1 * (int16x4_t) {__p2, __p2, __p2, __p2};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x8_t vmov_n_p8(poly8_t __p0) {
  poly8x8_t __ret;
  __ret = (poly8x8_t) {__p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x4_t vmov_n_p16(poly16_t __p0) {
  poly16x4_t __ret;
  __ret = (poly16x4_t) {__p0, __p0, __p0, __p0};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x16_t vmovq_n_p8(poly8_t __p0) {
  poly8x16_t __ret;
  __ret = (poly8x16_t) {__p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x8_t vmovq_n_p16(poly16_t __p0) {
  poly16x8_t __ret;
  __ret = (poly16x8_t) {__p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vmovq_n_u8(uint8_t __p0) {
  uint8x16_t __ret;
  __ret = (uint8x16_t) {__p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vmovq_n_u32(uint32_t __p0) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) {__p0, __p0, __p0, __p0};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vmovq_n_u64(uint64_t __p0) {
  uint64x2_t __ret;
  __ret = (uint64x2_t) {__p0, __p0};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vmovq_n_u16(uint16_t __p0) {
  uint16x8_t __ret;
  __ret = (uint16x8_t) {__p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vmovq_n_s8(int8_t __p0) {
  int8x16_t __ret;
  __ret = (int8x16_t) {__p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vmovq_n_f32(float32_t __p0) {
  float32x4_t __ret;
  __ret = (float32x4_t) {__p0, __p0, __p0, __p0};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vmovq_n_s32(int32_t __p0) {
  int32x4_t __ret;
  __ret = (int32x4_t) {__p0, __p0, __p0, __p0};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vmovq_n_s64(int64_t __p0) {
  int64x2_t __ret;
  __ret = (int64x2_t) {__p0, __p0};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vmovq_n_s16(int16_t __p0) {
  int16x8_t __ret;
  __ret = (int16x8_t) {__p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vmov_n_u8(uint8_t __p0) {
  uint8x8_t __ret;
  __ret = (uint8x8_t) {__p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vmov_n_u32(uint32_t __p0) {
  uint32x2_t __ret;
  __ret = (uint32x2_t) {__p0, __p0};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vmov_n_u64(uint64_t __p0) {
  uint64x1_t __ret;
  __ret = (uint64x1_t) {__p0};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vmov_n_u16(uint16_t __p0) {
  uint16x4_t __ret;
  __ret = (uint16x4_t) {__p0, __p0, __p0, __p0};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vmov_n_s8(int8_t __p0) {
  int8x8_t __ret;
  __ret = (int8x8_t) {__p0, __p0, __p0, __p0, __p0, __p0, __p0, __p0};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vmov_n_f32(float32_t __p0) {
  float32x2_t __ret;
  __ret = (float32x2_t) {__p0, __p0};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vmov_n_s32(int32_t __p0) {
  int32x2_t __ret;
  __ret = (int32x2_t) {__p0, __p0};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x1_t vmov_n_s64(int64_t __p0) {
  int64x1_t __ret;
  __ret = (int64x1_t) {__p0};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vmov_n_s16(int16_t __p0) {
  int16x4_t __ret;
  __ret = (int16x4_t) {__p0, __p0, __p0, __p0};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vmovl_u8(uint8x8_t __p0) {
  uint16x8_t __ret;
  __ret = (uint16x8_t) __builtin_neon_vmovl_v((int8x8_t)__p0, 49);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vmovl_u32(uint32x2_t __p0) {
  uint64x2_t __ret;
  __ret = (uint64x2_t) __builtin_neon_vmovl_v((int8x8_t)__p0, 51);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vmovl_u16(uint16x4_t __p0) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vmovl_v((int8x8_t)__p0, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vmovl_s8(int8x8_t __p0) {
  int16x8_t __ret;
  __ret = (int16x8_t) __builtin_neon_vmovl_v((int8x8_t)__p0, 33);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vmovl_s32(int32x2_t __p0) {
  int64x2_t __ret;
  __ret = (int64x2_t) __builtin_neon_vmovl_v((int8x8_t)__p0, 35);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vmovl_s16(int16x4_t __p0) {
  int32x4_t __ret;
  __ret = (int32x4_t) __builtin_neon_vmovl_v((int8x8_t)__p0, 34);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vmovn_u32(uint32x4_t __p0) {
  uint16x4_t __ret;
  __ret = (uint16x4_t) __builtin_neon_vmovn_v((int8x16_t)__p0, 17);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vmovn_u64(uint64x2_t __p0) {
  uint32x2_t __ret;
  __ret = (uint32x2_t) __builtin_neon_vmovn_v((int8x16_t)__p0, 18);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vmovn_u16(uint16x8_t __p0) {
  uint8x8_t __ret;
  __ret = (uint8x8_t) __builtin_neon_vmovn_v((int8x16_t)__p0, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vmovn_s32(int32x4_t __p0) {
  int16x4_t __ret;
  __ret = (int16x4_t) __builtin_neon_vmovn_v((int8x16_t)__p0, 1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vmovn_s64(int64x2_t __p0) {
  int32x2_t __ret;
  __ret = (int32x2_t) __builtin_neon_vmovn_v((int8x16_t)__p0, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vmovn_s16(int16x8_t __p0) {
  int8x8_t __ret;
  __ret = (int8x8_t) __builtin_neon_vmovn_v((int8x16_t)__p0, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vmulq_u8(uint8x16_t __p0, uint8x16_t __p1) {
  uint8x16_t __ret;
  __ret = __p0 * __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vmulq_u32(uint32x4_t __p0, uint32x4_t __p1) {
  uint32x4_t __ret;
  __ret = __p0 * __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vmulq_u16(uint16x8_t __p0, uint16x8_t __p1) {
  uint16x8_t __ret;
  __ret = __p0 * __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vmulq_s8(int8x16_t __p0, int8x16_t __p1) {
  int8x16_t __ret;
  __ret = __p0 * __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vmulq_f32(float32x4_t __p0, float32x4_t __p1) {
  float32x4_t __ret;
  __ret = __p0 * __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vmulq_s32(int32x4_t __p0, int32x4_t __p1) {
  int32x4_t __ret;
  __ret = __p0 * __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vmulq_s16(int16x8_t __p0, int16x8_t __p1) {
  int16x8_t __ret;
  __ret = __p0 * __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vmul_u8(uint8x8_t __p0, uint8x8_t __p1) {
  uint8x8_t __ret;
  __ret = __p0 * __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vmul_u32(uint32x2_t __p0, uint32x2_t __p1) {
  uint32x2_t __ret;
  __ret = __p0 * __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vmul_u16(uint16x4_t __p0, uint16x4_t __p1) {
  uint16x4_t __ret;
  __ret = __p0 * __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vmul_s8(int8x8_t __p0, int8x8_t __p1) {
  int8x8_t __ret;
  __ret = __p0 * __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vmul_f32(float32x2_t __p0, float32x2_t __p1) {
  float32x2_t __ret;
  __ret = __p0 * __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vmul_s32(int32x2_t __p0, int32x2_t __p1) {
  int32x2_t __ret;
  __ret = __p0 * __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vmul_s16(int16x4_t __p0, int16x4_t __p1) {
  int16x4_t __ret;
  __ret = __p0 * __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x8_t vmul_p8(poly8x8_t __p0, poly8x8_t __p1) {
  poly8x8_t __ret;
  __ret = (poly8x8_t) __builtin_neon_vmul_v((int8x8_t)__p0, (int8x8_t)__p1, 4);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x16_t vmulq_p8(poly8x16_t __p0, poly8x16_t __p1) {
  poly8x16_t __ret;
  __ret = (poly8x16_t) __builtin_neon_vmulq_v((int8x16_t)__p0, (int8x16_t)__p1, 36);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vmulq_n_u32(uint32x4_t __p0, uint32_t __p1) {
  uint32x4_t __ret;
  __ret = __p0 * (uint32x4_t) {__p1, __p1, __p1, __p1};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vmulq_n_u16(uint16x8_t __p0, uint16_t __p1) {
  uint16x8_t __ret;
  __ret = __p0 * (uint16x8_t) {__p1, __p1, __p1, __p1, __p1, __p1, __p1, __p1};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vmulq_n_f32(float32x4_t __p0, float32_t __p1) {
  float32x4_t __ret;
  __ret = __p0 * (float32x4_t) {__p1, __p1, __p1, __p1};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vmulq_n_s32(int32x4_t __p0, int32_t __p1) {
  int32x4_t __ret;
  __ret = __p0 * (int32x4_t) {__p1, __p1, __p1, __p1};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vmulq_n_s16(int16x8_t __p0, int16_t __p1) {
  int16x8_t __ret;
  __ret = __p0 * (int16x8_t) {__p1, __p1, __p1, __p1, __p1, __p1, __p1, __p1};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vmul_n_u32(uint32x2_t __p0, uint32_t __p1) {
  uint32x2_t __ret;
  __ret = __p0 * (uint32x2_t) {__p1, __p1};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vmul_n_u16(uint16x4_t __p0, uint16_t __p1) {
  uint16x4_t __ret;
  __ret = __p0 * (uint16x4_t) {__p1, __p1, __p1, __p1};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vmul_n_f32(float32x2_t __p0, float32_t __p1) {
  float32x2_t __ret;
  __ret = __p0 * (float32x2_t) {__p1, __p1};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vmul_n_s32(int32x2_t __p0, int32_t __p1) {
  int32x2_t __ret;
  __ret = __p0 * (int32x2_t) {__p1, __p1};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vmul_n_s16(int16x4_t __p0, int16_t __p1) {
  int16x4_t __ret;
  __ret = __p0 * (int16x4_t) {__p1, __p1, __p1, __p1};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x8_t vmull_p8(poly8x8_t __p0, poly8x8_t __p1) {
  poly16x8_t __ret;
  __ret = (poly16x8_t) __builtin_neon_vmull_v((int8x8_t)__p0, (int8x8_t)__p1, 37);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vmull_u8(uint8x8_t __p0, uint8x8_t __p1) {
  uint16x8_t __ret;
  __ret = (uint16x8_t) __builtin_neon_vmull_v((int8x8_t)__p0, (int8x8_t)__p1, 49);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vmull_u32(uint32x2_t __p0, uint32x2_t __p1) {
  uint64x2_t __ret;
  __ret = (uint64x2_t) __builtin_neon_vmull_v((int8x8_t)__p0, (int8x8_t)__p1, 51);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vmull_u16(uint16x4_t __p0, uint16x4_t __p1) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vmull_v((int8x8_t)__p0, (int8x8_t)__p1, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vmull_s8(int8x8_t __p0, int8x8_t __p1) {
  int16x8_t __ret;
  __ret = (int16x8_t) __builtin_neon_vmull_v((int8x8_t)__p0, (int8x8_t)__p1, 33);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vmull_s32(int32x2_t __p0, int32x2_t __p1) {
  int64x2_t __ret;
  __ret = (int64x2_t) __builtin_neon_vmull_v((int8x8_t)__p0, (int8x8_t)__p1, 35);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vmull_s16(int16x4_t __p0, int16x4_t __p1) {
  int32x4_t __ret;
  __ret = (int32x4_t) __builtin_neon_vmull_v((int8x8_t)__p0, (int8x8_t)__p1, 34);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vmull_n_u32(uint32x2_t __p0, uint32_t __p1) {
  uint64x2_t __ret;
  __ret = (uint64x2_t) __builtin_neon_vmull_v((int8x8_t)__p0, (int8x8_t)(uint32x2_t) {__p1, __p1}, 51);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vmull_n_u16(uint16x4_t __p0, uint16_t __p1) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vmull_v((int8x8_t)__p0, (int8x8_t)(uint16x4_t) {__p1, __p1, __p1, __p1}, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vmull_n_s32(int32x2_t __p0, int32_t __p1) {
  int64x2_t __ret;
  __ret = (int64x2_t) __builtin_neon_vmull_v((int8x8_t)__p0, (int8x8_t)(int32x2_t) {__p1, __p1}, 35);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vmull_n_s16(int16x4_t __p0, int16_t __p1) {
  int32x4_t __ret;
  __ret = (int32x4_t) __builtin_neon_vmull_v((int8x8_t)__p0, (int8x8_t)(int16x4_t) {__p1, __p1, __p1, __p1}, 34);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x8_t vmvn_p8(poly8x8_t __p0) {
  poly8x8_t __ret;
  __ret = ~__p0;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x16_t vmvnq_p8(poly8x16_t __p0) {
  poly8x16_t __ret;
  __ret = ~__p0;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vmvnq_u8(uint8x16_t __p0) {
  uint8x16_t __ret;
  __ret = ~__p0;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vmvnq_u32(uint32x4_t __p0) {
  uint32x4_t __ret;
  __ret = ~__p0;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vmvnq_u16(uint16x8_t __p0) {
  uint16x8_t __ret;
  __ret = ~__p0;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vmvnq_s8(int8x16_t __p0) {
  int8x16_t __ret;
  __ret = ~__p0;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vmvnq_s32(int32x4_t __p0) {
  int32x4_t __ret;
  __ret = ~__p0;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vmvnq_s16(int16x8_t __p0) {
  int16x8_t __ret;
  __ret = ~__p0;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vmvn_u8(uint8x8_t __p0) {
  uint8x8_t __ret;
  __ret = ~__p0;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vmvn_u32(uint32x2_t __p0) {
  uint32x2_t __ret;
  __ret = ~__p0;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vmvn_u16(uint16x4_t __p0) {
  uint16x4_t __ret;
  __ret = ~__p0;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vmvn_s8(int8x8_t __p0) {
  int8x8_t __ret;
  __ret = ~__p0;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vmvn_s32(int32x2_t __p0) {
  int32x2_t __ret;
  __ret = ~__p0;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vmvn_s16(int16x4_t __p0) {
  int16x4_t __ret;
  __ret = ~__p0;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vnegq_s8(int8x16_t __p0) {
  int8x16_t __ret;
  __ret = -__p0;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vnegq_f32(float32x4_t __p0) {
  float32x4_t __ret;
  __ret = -__p0;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vnegq_s32(int32x4_t __p0) {
  int32x4_t __ret;
  __ret = -__p0;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vnegq_s16(int16x8_t __p0) {
  int16x8_t __ret;
  __ret = -__p0;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vneg_s8(int8x8_t __p0) {
  int8x8_t __ret;
  __ret = -__p0;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vneg_f32(float32x2_t __p0) {
  float32x2_t __ret;
  __ret = -__p0;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vneg_s32(int32x2_t __p0) {
  int32x2_t __ret;
  __ret = -__p0;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vneg_s16(int16x4_t __p0) {
  int16x4_t __ret;
  __ret = -__p0;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vornq_u8(uint8x16_t __p0, uint8x16_t __p1) {
  uint8x16_t __ret;
  __ret = __p0 | ~__p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vornq_u32(uint32x4_t __p0, uint32x4_t __p1) {
  uint32x4_t __ret;
  __ret = __p0 | ~__p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vornq_u64(uint64x2_t __p0, uint64x2_t __p1) {
  uint64x2_t __ret;
  __ret = __p0 | ~__p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vornq_u16(uint16x8_t __p0, uint16x8_t __p1) {
  uint16x8_t __ret;
  __ret = __p0 | ~__p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vornq_s8(int8x16_t __p0, int8x16_t __p1) {
  int8x16_t __ret;
  __ret = __p0 | ~__p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vornq_s32(int32x4_t __p0, int32x4_t __p1) {
  int32x4_t __ret;
  __ret = __p0 | ~__p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vornq_s64(int64x2_t __p0, int64x2_t __p1) {
  int64x2_t __ret;
  __ret = __p0 | ~__p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vornq_s16(int16x8_t __p0, int16x8_t __p1) {
  int16x8_t __ret;
  __ret = __p0 | ~__p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vorn_u8(uint8x8_t __p0, uint8x8_t __p1) {
  uint8x8_t __ret;
  __ret = __p0 | ~__p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vorn_u32(uint32x2_t __p0, uint32x2_t __p1) {
  uint32x2_t __ret;
  __ret = __p0 | ~__p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vorn_u64(uint64x1_t __p0, uint64x1_t __p1) {
  uint64x1_t __ret;
  __ret = __p0 | ~__p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vorn_u16(uint16x4_t __p0, uint16x4_t __p1) {
  uint16x4_t __ret;
  __ret = __p0 | ~__p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vorn_s8(int8x8_t __p0, int8x8_t __p1) {
  int8x8_t __ret;
  __ret = __p0 | ~__p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vorn_s32(int32x2_t __p0, int32x2_t __p1) {
  int32x2_t __ret;
  __ret = __p0 | ~__p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x1_t vorn_s64(int64x1_t __p0, int64x1_t __p1) {
  int64x1_t __ret;
  __ret = __p0 | ~__p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vorn_s16(int16x4_t __p0, int16x4_t __p1) {
  int16x4_t __ret;
  __ret = __p0 | ~__p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vorrq_u8(uint8x16_t __p0, uint8x16_t __p1) {
  uint8x16_t __ret;
  __ret = __p0 | __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vorrq_u32(uint32x4_t __p0, uint32x4_t __p1) {
  uint32x4_t __ret;
  __ret = __p0 | __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vorrq_u64(uint64x2_t __p0, uint64x2_t __p1) {
  uint64x2_t __ret;
  __ret = __p0 | __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vorrq_u16(uint16x8_t __p0, uint16x8_t __p1) {
  uint16x8_t __ret;
  __ret = __p0 | __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vorrq_s8(int8x16_t __p0, int8x16_t __p1) {
  int8x16_t __ret;
  __ret = __p0 | __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vorrq_s32(int32x4_t __p0, int32x4_t __p1) {
  int32x4_t __ret;
  __ret = __p0 | __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vorrq_s64(int64x2_t __p0, int64x2_t __p1) {
  int64x2_t __ret;
  __ret = __p0 | __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vorrq_s16(int16x8_t __p0, int16x8_t __p1) {
  int16x8_t __ret;
  __ret = __p0 | __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vorr_u8(uint8x8_t __p0, uint8x8_t __p1) {
  uint8x8_t __ret;
  __ret = __p0 | __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vorr_u32(uint32x2_t __p0, uint32x2_t __p1) {
  uint32x2_t __ret;
  __ret = __p0 | __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vorr_u64(uint64x1_t __p0, uint64x1_t __p1) {
  uint64x1_t __ret;
  __ret = __p0 | __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vorr_u16(uint16x4_t __p0, uint16x4_t __p1) {
  uint16x4_t __ret;
  __ret = __p0 | __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vorr_s8(int8x8_t __p0, int8x8_t __p1) {
  int8x8_t __ret;
  __ret = __p0 | __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vorr_s32(int32x2_t __p0, int32x2_t __p1) {
  int32x2_t __ret;
  __ret = __p0 | __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x1_t vorr_s64(int64x1_t __p0, int64x1_t __p1) {
  int64x1_t __ret;
  __ret = __p0 | __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vorr_s16(int16x4_t __p0, int16x4_t __p1) {
  int16x4_t __ret;
  __ret = __p0 | __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vpadalq_u8(uint16x8_t __p0, uint8x16_t __p1) {
  uint16x8_t __ret;
  __ret = (uint16x8_t) __builtin_neon_vpadalq_v((int8x16_t)__p0, (int8x16_t)__p1, 49);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vpadalq_u32(uint64x2_t __p0, uint32x4_t __p1) {
  uint64x2_t __ret;
  __ret = (uint64x2_t) __builtin_neon_vpadalq_v((int8x16_t)__p0, (int8x16_t)__p1, 51);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vpadalq_u16(uint32x4_t __p0, uint16x8_t __p1) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vpadalq_v((int8x16_t)__p0, (int8x16_t)__p1, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vpadalq_s8(int16x8_t __p0, int8x16_t __p1) {
  int16x8_t __ret;
  __ret = (int16x8_t) __builtin_neon_vpadalq_v((int8x16_t)__p0, (int8x16_t)__p1, 33);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vpadalq_s32(int64x2_t __p0, int32x4_t __p1) {
  int64x2_t __ret;
  __ret = (int64x2_t) __builtin_neon_vpadalq_v((int8x16_t)__p0, (int8x16_t)__p1, 35);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vpadalq_s16(int32x4_t __p0, int16x8_t __p1) {
  int32x4_t __ret;
  __ret = (int32x4_t) __builtin_neon_vpadalq_v((int8x16_t)__p0, (int8x16_t)__p1, 34);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vpadal_u8(uint16x4_t __p0, uint8x8_t __p1) {
  uint16x4_t __ret;
  __ret = (uint16x4_t) __builtin_neon_vpadal_v((int8x8_t)__p0, (int8x8_t)__p1, 17);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vpadal_u32(uint64x1_t __p0, uint32x2_t __p1) {
  uint64x1_t __ret;
  __ret = (uint64x1_t) __builtin_neon_vpadal_v((int8x8_t)__p0, (int8x8_t)__p1, 19);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vpadal_u16(uint32x2_t __p0, uint16x4_t __p1) {
  uint32x2_t __ret;
  __ret = (uint32x2_t) __builtin_neon_vpadal_v((int8x8_t)__p0, (int8x8_t)__p1, 18);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vpadal_s8(int16x4_t __p0, int8x8_t __p1) {
  int16x4_t __ret;
  __ret = (int16x4_t) __builtin_neon_vpadal_v((int8x8_t)__p0, (int8x8_t)__p1, 1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x1_t vpadal_s32(int64x1_t __p0, int32x2_t __p1) {
  int64x1_t __ret;
  __ret = (int64x1_t) __builtin_neon_vpadal_v((int8x8_t)__p0, (int8x8_t)__p1, 3);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vpadal_s16(int32x2_t __p0, int16x4_t __p1) {
  int32x2_t __ret;
  __ret = (int32x2_t) __builtin_neon_vpadal_v((int8x8_t)__p0, (int8x8_t)__p1, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vpadd_u8(uint8x8_t __p0, uint8x8_t __p1) {
  uint8x8_t __ret;
  __ret = (uint8x8_t) __builtin_neon_vpadd_v((int8x8_t)__p0, (int8x8_t)__p1, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vpadd_u32(uint32x2_t __p0, uint32x2_t __p1) {
  uint32x2_t __ret;
  __ret = (uint32x2_t) __builtin_neon_vpadd_v((int8x8_t)__p0, (int8x8_t)__p1, 18);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vpadd_u16(uint16x4_t __p0, uint16x4_t __p1) {
  uint16x4_t __ret;
  __ret = (uint16x4_t) __builtin_neon_vpadd_v((int8x8_t)__p0, (int8x8_t)__p1, 17);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vpadd_s8(int8x8_t __p0, int8x8_t __p1) {
  int8x8_t __ret;
  __ret = (int8x8_t) __builtin_neon_vpadd_v((int8x8_t)__p0, (int8x8_t)__p1, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vpadd_f32(float32x2_t __p0, float32x2_t __p1) {
  float32x2_t __ret;
  __ret = (float32x2_t) __builtin_neon_vpadd_v((int8x8_t)__p0, (int8x8_t)__p1, 9);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vpadd_s32(int32x2_t __p0, int32x2_t __p1) {
  int32x2_t __ret;
  __ret = (int32x2_t) __builtin_neon_vpadd_v((int8x8_t)__p0, (int8x8_t)__p1, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vpadd_s16(int16x4_t __p0, int16x4_t __p1) {
  int16x4_t __ret;
  __ret = (int16x4_t) __builtin_neon_vpadd_v((int8x8_t)__p0, (int8x8_t)__p1, 1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vpaddlq_u8(uint8x16_t __p0) {
  uint16x8_t __ret;
  __ret = (uint16x8_t) __builtin_neon_vpaddlq_v((int8x16_t)__p0, 49);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vpaddlq_u32(uint32x4_t __p0) {
  uint64x2_t __ret;
  __ret = (uint64x2_t) __builtin_neon_vpaddlq_v((int8x16_t)__p0, 51);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vpaddlq_u16(uint16x8_t __p0) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vpaddlq_v((int8x16_t)__p0, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vpaddlq_s8(int8x16_t __p0) {
  int16x8_t __ret;
  __ret = (int16x8_t) __builtin_neon_vpaddlq_v((int8x16_t)__p0, 33);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vpaddlq_s32(int32x4_t __p0) {
  int64x2_t __ret;
  __ret = (int64x2_t) __builtin_neon_vpaddlq_v((int8x16_t)__p0, 35);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vpaddlq_s16(int16x8_t __p0) {
  int32x4_t __ret;
  __ret = (int32x4_t) __builtin_neon_vpaddlq_v((int8x16_t)__p0, 34);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vpaddl_u8(uint8x8_t __p0) {
  uint16x4_t __ret;
  __ret = (uint16x4_t) __builtin_neon_vpaddl_v((int8x8_t)__p0, 17);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vpaddl_u32(uint32x2_t __p0) {
  uint64x1_t __ret;
  __ret = (uint64x1_t) __builtin_neon_vpaddl_v((int8x8_t)__p0, 19);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vpaddl_u16(uint16x4_t __p0) {
  uint32x2_t __ret;
  __ret = (uint32x2_t) __builtin_neon_vpaddl_v((int8x8_t)__p0, 18);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vpaddl_s8(int8x8_t __p0) {
  int16x4_t __ret;
  __ret = (int16x4_t) __builtin_neon_vpaddl_v((int8x8_t)__p0, 1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x1_t vpaddl_s32(int32x2_t __p0) {
  int64x1_t __ret;
  __ret = (int64x1_t) __builtin_neon_vpaddl_v((int8x8_t)__p0, 3);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vpaddl_s16(int16x4_t __p0) {
  int32x2_t __ret;
  __ret = (int32x2_t) __builtin_neon_vpaddl_v((int8x8_t)__p0, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vpmax_u8(uint8x8_t __p0, uint8x8_t __p1) {
  uint8x8_t __ret;
  __ret = (uint8x8_t) __builtin_neon_vpmax_v((int8x8_t)__p0, (int8x8_t)__p1, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vpmax_u32(uint32x2_t __p0, uint32x2_t __p1) {
  uint32x2_t __ret;
  __ret = (uint32x2_t) __builtin_neon_vpmax_v((int8x8_t)__p0, (int8x8_t)__p1, 18);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vpmax_u16(uint16x4_t __p0, uint16x4_t __p1) {
  uint16x4_t __ret;
  __ret = (uint16x4_t) __builtin_neon_vpmax_v((int8x8_t)__p0, (int8x8_t)__p1, 17);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vpmax_s8(int8x8_t __p0, int8x8_t __p1) {
  int8x8_t __ret;
  __ret = (int8x8_t) __builtin_neon_vpmax_v((int8x8_t)__p0, (int8x8_t)__p1, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vpmax_f32(float32x2_t __p0, float32x2_t __p1) {
  float32x2_t __ret;
  __ret = (float32x2_t) __builtin_neon_vpmax_v((int8x8_t)__p0, (int8x8_t)__p1, 9);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vpmax_s32(int32x2_t __p0, int32x2_t __p1) {
  int32x2_t __ret;
  __ret = (int32x2_t) __builtin_neon_vpmax_v((int8x8_t)__p0, (int8x8_t)__p1, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vpmax_s16(int16x4_t __p0, int16x4_t __p1) {
  int16x4_t __ret;
  __ret = (int16x4_t) __builtin_neon_vpmax_v((int8x8_t)__p0, (int8x8_t)__p1, 1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vpmin_u8(uint8x8_t __p0, uint8x8_t __p1) {
  uint8x8_t __ret;
  __ret = (uint8x8_t) __builtin_neon_vpmin_v((int8x8_t)__p0, (int8x8_t)__p1, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vpmin_u32(uint32x2_t __p0, uint32x2_t __p1) {
  uint32x2_t __ret;
  __ret = (uint32x2_t) __builtin_neon_vpmin_v((int8x8_t)__p0, (int8x8_t)__p1, 18);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vpmin_u16(uint16x4_t __p0, uint16x4_t __p1) {
  uint16x4_t __ret;
  __ret = (uint16x4_t) __builtin_neon_vpmin_v((int8x8_t)__p0, (int8x8_t)__p1, 17);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vpmin_s8(int8x8_t __p0, int8x8_t __p1) {
  int8x8_t __ret;
  __ret = (int8x8_t) __builtin_neon_vpmin_v((int8x8_t)__p0, (int8x8_t)__p1, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vpmin_f32(float32x2_t __p0, float32x2_t __p1) {
  float32x2_t __ret;
  __ret = (float32x2_t) __builtin_neon_vpmin_v((int8x8_t)__p0, (int8x8_t)__p1, 9);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vpmin_s32(int32x2_t __p0, int32x2_t __p1) {
  int32x2_t __ret;
  __ret = (int32x2_t) __builtin_neon_vpmin_v((int8x8_t)__p0, (int8x8_t)__p1, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vpmin_s16(int16x4_t __p0, int16x4_t __p1) {
  int16x4_t __ret;
  __ret = (int16x4_t) __builtin_neon_vpmin_v((int8x8_t)__p0, (int8x8_t)__p1, 1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vqabsq_s8(int8x16_t __p0) {
  int8x16_t __ret;
  __ret = (int8x16_t) __builtin_neon_vqabsq_v((int8x16_t)__p0, 32);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vqabsq_s32(int32x4_t __p0) {
  int32x4_t __ret;
  __ret = (int32x4_t) __builtin_neon_vqabsq_v((int8x16_t)__p0, 34);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vqabsq_s16(int16x8_t __p0) {
  int16x8_t __ret;
  __ret = (int16x8_t) __builtin_neon_vqabsq_v((int8x16_t)__p0, 33);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vqabs_s8(int8x8_t __p0) {
  int8x8_t __ret;
  __ret = (int8x8_t) __builtin_neon_vqabs_v((int8x8_t)__p0, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vqabs_s32(int32x2_t __p0) {
  int32x2_t __ret;
  __ret = (int32x2_t) __builtin_neon_vqabs_v((int8x8_t)__p0, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vqabs_s16(int16x4_t __p0) {
  int16x4_t __ret;
  __ret = (int16x4_t) __builtin_neon_vqabs_v((int8x8_t)__p0, 1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vqaddq_u8(uint8x16_t __p0, uint8x16_t __p1) {
  uint8x16_t __ret;
  __ret = (uint8x16_t) __builtin_neon_vqaddq_v((int8x16_t)__p0, (int8x16_t)__p1, 48);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vqaddq_u32(uint32x4_t __p0, uint32x4_t __p1) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vqaddq_v((int8x16_t)__p0, (int8x16_t)__p1, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vqaddq_u64(uint64x2_t __p0, uint64x2_t __p1) {
  uint64x2_t __ret;
  __ret = (uint64x2_t) __builtin_neon_vqaddq_v((int8x16_t)__p0, (int8x16_t)__p1, 51);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vqaddq_u16(uint16x8_t __p0, uint16x8_t __p1) {
  uint16x8_t __ret;
  __ret = (uint16x8_t) __builtin_neon_vqaddq_v((int8x16_t)__p0, (int8x16_t)__p1, 49);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vqaddq_s8(int8x16_t __p0, int8x16_t __p1) {
  int8x16_t __ret;
  __ret = (int8x16_t) __builtin_neon_vqaddq_v((int8x16_t)__p0, (int8x16_t)__p1, 32);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vqaddq_s32(int32x4_t __p0, int32x4_t __p1) {
  int32x4_t __ret;
  __ret = (int32x4_t) __builtin_neon_vqaddq_v((int8x16_t)__p0, (int8x16_t)__p1, 34);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vqaddq_s64(int64x2_t __p0, int64x2_t __p1) {
  int64x2_t __ret;
  __ret = (int64x2_t) __builtin_neon_vqaddq_v((int8x16_t)__p0, (int8x16_t)__p1, 35);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vqaddq_s16(int16x8_t __p0, int16x8_t __p1) {
  int16x8_t __ret;
  __ret = (int16x8_t) __builtin_neon_vqaddq_v((int8x16_t)__p0, (int8x16_t)__p1, 33);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vqadd_u8(uint8x8_t __p0, uint8x8_t __p1) {
  uint8x8_t __ret;
  __ret = (uint8x8_t) __builtin_neon_vqadd_v((int8x8_t)__p0, (int8x8_t)__p1, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vqadd_u32(uint32x2_t __p0, uint32x2_t __p1) {
  uint32x2_t __ret;
  __ret = (uint32x2_t) __builtin_neon_vqadd_v((int8x8_t)__p0, (int8x8_t)__p1, 18);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vqadd_u64(uint64x1_t __p0, uint64x1_t __p1) {
  uint64x1_t __ret;
  __ret = (uint64x1_t) __builtin_neon_vqadd_v((int8x8_t)__p0, (int8x8_t)__p1, 19);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vqadd_u16(uint16x4_t __p0, uint16x4_t __p1) {
  uint16x4_t __ret;
  __ret = (uint16x4_t) __builtin_neon_vqadd_v((int8x8_t)__p0, (int8x8_t)__p1, 17);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vqadd_s8(int8x8_t __p0, int8x8_t __p1) {
  int8x8_t __ret;
  __ret = (int8x8_t) __builtin_neon_vqadd_v((int8x8_t)__p0, (int8x8_t)__p1, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vqadd_s32(int32x2_t __p0, int32x2_t __p1) {
  int32x2_t __ret;
  __ret = (int32x2_t) __builtin_neon_vqadd_v((int8x8_t)__p0, (int8x8_t)__p1, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x1_t vqadd_s64(int64x1_t __p0, int64x1_t __p1) {
  int64x1_t __ret;
  __ret = (int64x1_t) __builtin_neon_vqadd_v((int8x8_t)__p0, (int8x8_t)__p1, 3);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vqadd_s16(int16x4_t __p0, int16x4_t __p1) {
  int16x4_t __ret;
  __ret = (int16x4_t) __builtin_neon_vqadd_v((int8x8_t)__p0, (int8x8_t)__p1, 1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vqdmlal_s32(int64x2_t __p0, int32x2_t __p1, int32x2_t __p2) {
  int64x2_t __ret;
  __ret = (int64x2_t) __builtin_neon_vqdmlal_v((int8x16_t)__p0, (int8x8_t)__p1, (int8x8_t)__p2, 35);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vqdmlal_s16(int32x4_t __p0, int16x4_t __p1, int16x4_t __p2) {
  int32x4_t __ret;
  __ret = (int32x4_t) __builtin_neon_vqdmlal_v((int8x16_t)__p0, (int8x8_t)__p1, (int8x8_t)__p2, 34);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vqdmlal_n_s32(int64x2_t __p0, int32x2_t __p1, int32_t __p2) {
  int64x2_t __ret;
  __ret = (int64x2_t) __builtin_neon_vqdmlal_v((int8x16_t)__p0, (int8x8_t)__p1, (int8x8_t)(int32x2_t) {__p2, __p2}, 35);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vqdmlal_n_s16(int32x4_t __p0, int16x4_t __p1, int16_t __p2) {
  int32x4_t __ret;
  __ret = (int32x4_t) __builtin_neon_vqdmlal_v((int8x16_t)__p0, (int8x8_t)__p1, (int8x8_t)(int16x4_t) {__p2, __p2, __p2, __p2}, 34);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vqdmlsl_s32(int64x2_t __p0, int32x2_t __p1, int32x2_t __p2) {
  int64x2_t __ret;
  __ret = (int64x2_t) __builtin_neon_vqdmlsl_v((int8x16_t)__p0, (int8x8_t)__p1, (int8x8_t)__p2, 35);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vqdmlsl_s16(int32x4_t __p0, int16x4_t __p1, int16x4_t __p2) {
  int32x4_t __ret;
  __ret = (int32x4_t) __builtin_neon_vqdmlsl_v((int8x16_t)__p0, (int8x8_t)__p1, (int8x8_t)__p2, 34);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vqdmlsl_n_s32(int64x2_t __p0, int32x2_t __p1, int32_t __p2) {
  int64x2_t __ret;
  __ret = (int64x2_t) __builtin_neon_vqdmlsl_v((int8x16_t)__p0, (int8x8_t)__p1, (int8x8_t)(int32x2_t) {__p2, __p2}, 35);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vqdmlsl_n_s16(int32x4_t __p0, int16x4_t __p1, int16_t __p2) {
  int32x4_t __ret;
  __ret = (int32x4_t) __builtin_neon_vqdmlsl_v((int8x16_t)__p0, (int8x8_t)__p1, (int8x8_t)(int16x4_t) {__p2, __p2, __p2, __p2}, 34);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vqdmulhq_s32(int32x4_t __p0, int32x4_t __p1) {
  int32x4_t __ret;
  __ret = (int32x4_t) __builtin_neon_vqdmulhq_v((int8x16_t)__p0, (int8x16_t)__p1, 34);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vqdmulhq_s16(int16x8_t __p0, int16x8_t __p1) {
  int16x8_t __ret;
  __ret = (int16x8_t) __builtin_neon_vqdmulhq_v((int8x16_t)__p0, (int8x16_t)__p1, 33);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vqdmulh_s32(int32x2_t __p0, int32x2_t __p1) {
  int32x2_t __ret;
  __ret = (int32x2_t) __builtin_neon_vqdmulh_v((int8x8_t)__p0, (int8x8_t)__p1, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vqdmulh_s16(int16x4_t __p0, int16x4_t __p1) {
  int16x4_t __ret;
  __ret = (int16x4_t) __builtin_neon_vqdmulh_v((int8x8_t)__p0, (int8x8_t)__p1, 1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vqdmulhq_n_s32(int32x4_t __p0, int32_t __p1) {
  int32x4_t __ret;
  __ret = (int32x4_t) __builtin_neon_vqdmulhq_v((int8x16_t)__p0, (int8x16_t)(int32x4_t) {__p1, __p1, __p1, __p1}, 34);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vqdmulhq_n_s16(int16x8_t __p0, int16_t __p1) {
  int16x8_t __ret;
  __ret = (int16x8_t) __builtin_neon_vqdmulhq_v((int8x16_t)__p0, (int8x16_t)(int16x8_t) {__p1, __p1, __p1, __p1, __p1, __p1, __p1, __p1}, 33);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vqdmulh_n_s32(int32x2_t __p0, int32_t __p1) {
  int32x2_t __ret;
  __ret = (int32x2_t) __builtin_neon_vqdmulh_v((int8x8_t)__p0, (int8x8_t)(int32x2_t) {__p1, __p1}, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vqdmulh_n_s16(int16x4_t __p0, int16_t __p1) {
  int16x4_t __ret;
  __ret = (int16x4_t) __builtin_neon_vqdmulh_v((int8x8_t)__p0, (int8x8_t)(int16x4_t) {__p1, __p1, __p1, __p1}, 1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vqdmull_s32(int32x2_t __p0, int32x2_t __p1) {
  int64x2_t __ret;
  __ret = (int64x2_t) __builtin_neon_vqdmull_v((int8x8_t)__p0, (int8x8_t)__p1, 35);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vqdmull_s16(int16x4_t __p0, int16x4_t __p1) {
  int32x4_t __ret;
  __ret = (int32x4_t) __builtin_neon_vqdmull_v((int8x8_t)__p0, (int8x8_t)__p1, 34);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vqdmull_n_s32(int32x2_t __p0, int32_t __p1) {
  int64x2_t __ret;
  __ret = (int64x2_t) __builtin_neon_vqdmull_v((int8x8_t)__p0, (int8x8_t)(int32x2_t) {__p1, __p1}, 35);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vqdmull_n_s16(int16x4_t __p0, int16_t __p1) {
  int32x4_t __ret;
  __ret = (int32x4_t) __builtin_neon_vqdmull_v((int8x8_t)__p0, (int8x8_t)(int16x4_t) {__p1, __p1, __p1, __p1}, 34);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vqmovn_u32(uint32x4_t __p0) {
  uint16x4_t __ret;
  __ret = (uint16x4_t) __builtin_neon_vqmovn_v((int8x16_t)__p0, 17);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vqmovn_u64(uint64x2_t __p0) {
  uint32x2_t __ret;
  __ret = (uint32x2_t) __builtin_neon_vqmovn_v((int8x16_t)__p0, 18);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vqmovn_u16(uint16x8_t __p0) {
  uint8x8_t __ret;
  __ret = (uint8x8_t) __builtin_neon_vqmovn_v((int8x16_t)__p0, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vqmovn_s32(int32x4_t __p0) {
  int16x4_t __ret;
  __ret = (int16x4_t) __builtin_neon_vqmovn_v((int8x16_t)__p0, 1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vqmovn_s64(int64x2_t __p0) {
  int32x2_t __ret;
  __ret = (int32x2_t) __builtin_neon_vqmovn_v((int8x16_t)__p0, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vqmovn_s16(int16x8_t __p0) {
  int8x8_t __ret;
  __ret = (int8x8_t) __builtin_neon_vqmovn_v((int8x16_t)__p0, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vqmovun_s32(int32x4_t __p0) {
  uint16x4_t __ret;
  __ret = (uint16x4_t) __builtin_neon_vqmovun_v((int8x16_t)__p0, 17);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vqmovun_s64(int64x2_t __p0) {
  uint32x2_t __ret;
  __ret = (uint32x2_t) __builtin_neon_vqmovun_v((int8x16_t)__p0, 18);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vqmovun_s16(int16x8_t __p0) {
  uint8x8_t __ret;
  __ret = (uint8x8_t) __builtin_neon_vqmovun_v((int8x16_t)__p0, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vqnegq_s8(int8x16_t __p0) {
  int8x16_t __ret;
  __ret = (int8x16_t) __builtin_neon_vqnegq_v((int8x16_t)__p0, 32);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vqnegq_s32(int32x4_t __p0) {
  int32x4_t __ret;
  __ret = (int32x4_t) __builtin_neon_vqnegq_v((int8x16_t)__p0, 34);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vqnegq_s16(int16x8_t __p0) {
  int16x8_t __ret;
  __ret = (int16x8_t) __builtin_neon_vqnegq_v((int8x16_t)__p0, 33);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vqneg_s8(int8x8_t __p0) {
  int8x8_t __ret;
  __ret = (int8x8_t) __builtin_neon_vqneg_v((int8x8_t)__p0, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vqneg_s32(int32x2_t __p0) {
  int32x2_t __ret;
  __ret = (int32x2_t) __builtin_neon_vqneg_v((int8x8_t)__p0, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vqneg_s16(int16x4_t __p0) {
  int16x4_t __ret;
  __ret = (int16x4_t) __builtin_neon_vqneg_v((int8x8_t)__p0, 1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vqrdmulhq_s32(int32x4_t __p0, int32x4_t __p1) {
  int32x4_t __ret;
  __ret = (int32x4_t) __builtin_neon_vqrdmulhq_v((int8x16_t)__p0, (int8x16_t)__p1, 34);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vqrdmulhq_s16(int16x8_t __p0, int16x8_t __p1) {
  int16x8_t __ret;
  __ret = (int16x8_t) __builtin_neon_vqrdmulhq_v((int8x16_t)__p0, (int8x16_t)__p1, 33);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vqrdmulh_s32(int32x2_t __p0, int32x2_t __p1) {
  int32x2_t __ret;
  __ret = (int32x2_t) __builtin_neon_vqrdmulh_v((int8x8_t)__p0, (int8x8_t)__p1, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vqrdmulh_s16(int16x4_t __p0, int16x4_t __p1) {
  int16x4_t __ret;
  __ret = (int16x4_t) __builtin_neon_vqrdmulh_v((int8x8_t)__p0, (int8x8_t)__p1, 1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vqrdmulhq_n_s32(int32x4_t __p0, int32_t __p1) {
  int32x4_t __ret;
  __ret = (int32x4_t) __builtin_neon_vqrdmulhq_v((int8x16_t)__p0, (int8x16_t)(int32x4_t) {__p1, __p1, __p1, __p1}, 34);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vqrdmulhq_n_s16(int16x8_t __p0, int16_t __p1) {
  int16x8_t __ret;
  __ret = (int16x8_t) __builtin_neon_vqrdmulhq_v((int8x16_t)__p0, (int8x16_t)(int16x8_t) {__p1, __p1, __p1, __p1, __p1, __p1, __p1, __p1}, 33);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vqrdmulh_n_s32(int32x2_t __p0, int32_t __p1) {
  int32x2_t __ret;
  __ret = (int32x2_t) __builtin_neon_vqrdmulh_v((int8x8_t)__p0, (int8x8_t)(int32x2_t) {__p1, __p1}, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vqrdmulh_n_s16(int16x4_t __p0, int16_t __p1) {
  int16x4_t __ret;
  __ret = (int16x4_t) __builtin_neon_vqrdmulh_v((int8x8_t)__p0, (int8x8_t)(int16x4_t) {__p1, __p1, __p1, __p1}, 1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vqrshlq_u8(uint8x16_t __p0, int8x16_t __p1) {
  uint8x16_t __ret;
  __ret = (uint8x16_t) __builtin_neon_vqrshlq_v((int8x16_t)__p0, (int8x16_t)__p1, 48);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vqrshlq_u32(uint32x4_t __p0, int32x4_t __p1) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vqrshlq_v((int8x16_t)__p0, (int8x16_t)__p1, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vqrshlq_u64(uint64x2_t __p0, int64x2_t __p1) {
  uint64x2_t __ret;
  __ret = (uint64x2_t) __builtin_neon_vqrshlq_v((int8x16_t)__p0, (int8x16_t)__p1, 51);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vqrshlq_u16(uint16x8_t __p0, int16x8_t __p1) {
  uint16x8_t __ret;
  __ret = (uint16x8_t) __builtin_neon_vqrshlq_v((int8x16_t)__p0, (int8x16_t)__p1, 49);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vqrshlq_s8(int8x16_t __p0, int8x16_t __p1) {
  int8x16_t __ret;
  __ret = (int8x16_t) __builtin_neon_vqrshlq_v((int8x16_t)__p0, (int8x16_t)__p1, 32);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vqrshlq_s32(int32x4_t __p0, int32x4_t __p1) {
  int32x4_t __ret;
  __ret = (int32x4_t) __builtin_neon_vqrshlq_v((int8x16_t)__p0, (int8x16_t)__p1, 34);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vqrshlq_s64(int64x2_t __p0, int64x2_t __p1) {
  int64x2_t __ret;
  __ret = (int64x2_t) __builtin_neon_vqrshlq_v((int8x16_t)__p0, (int8x16_t)__p1, 35);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vqrshlq_s16(int16x8_t __p0, int16x8_t __p1) {
  int16x8_t __ret;
  __ret = (int16x8_t) __builtin_neon_vqrshlq_v((int8x16_t)__p0, (int8x16_t)__p1, 33);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vqrshl_u8(uint8x8_t __p0, int8x8_t __p1) {
  uint8x8_t __ret;
  __ret = (uint8x8_t) __builtin_neon_vqrshl_v((int8x8_t)__p0, (int8x8_t)__p1, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vqrshl_u32(uint32x2_t __p0, int32x2_t __p1) {
  uint32x2_t __ret;
  __ret = (uint32x2_t) __builtin_neon_vqrshl_v((int8x8_t)__p0, (int8x8_t)__p1, 18);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vqrshl_u64(uint64x1_t __p0, int64x1_t __p1) {
  uint64x1_t __ret;
  __ret = (uint64x1_t) __builtin_neon_vqrshl_v((int8x8_t)__p0, (int8x8_t)__p1, 19);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vqrshl_u16(uint16x4_t __p0, int16x4_t __p1) {
  uint16x4_t __ret;
  __ret = (uint16x4_t) __builtin_neon_vqrshl_v((int8x8_t)__p0, (int8x8_t)__p1, 17);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vqrshl_s8(int8x8_t __p0, int8x8_t __p1) {
  int8x8_t __ret;
  __ret = (int8x8_t) __builtin_neon_vqrshl_v((int8x8_t)__p0, (int8x8_t)__p1, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vqrshl_s32(int32x2_t __p0, int32x2_t __p1) {
  int32x2_t __ret;
  __ret = (int32x2_t) __builtin_neon_vqrshl_v((int8x8_t)__p0, (int8x8_t)__p1, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x1_t vqrshl_s64(int64x1_t __p0, int64x1_t __p1) {
  int64x1_t __ret;
  __ret = (int64x1_t) __builtin_neon_vqrshl_v((int8x8_t)__p0, (int8x8_t)__p1, 3);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vqrshl_s16(int16x4_t __p0, int16x4_t __p1) {
  int16x4_t __ret;
  __ret = (int16x4_t) __builtin_neon_vqrshl_v((int8x8_t)__p0, (int8x8_t)__p1, 1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vqshlq_u8(uint8x16_t __p0, int8x16_t __p1) {
  uint8x16_t __ret;
  __ret = (uint8x16_t) __builtin_neon_vqshlq_v((int8x16_t)__p0, (int8x16_t)__p1, 48);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vqshlq_u32(uint32x4_t __p0, int32x4_t __p1) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vqshlq_v((int8x16_t)__p0, (int8x16_t)__p1, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vqshlq_u64(uint64x2_t __p0, int64x2_t __p1) {
  uint64x2_t __ret;
  __ret = (uint64x2_t) __builtin_neon_vqshlq_v((int8x16_t)__p0, (int8x16_t)__p1, 51);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vqshlq_u16(uint16x8_t __p0, int16x8_t __p1) {
  uint16x8_t __ret;
  __ret = (uint16x8_t) __builtin_neon_vqshlq_v((int8x16_t)__p0, (int8x16_t)__p1, 49);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vqshlq_s8(int8x16_t __p0, int8x16_t __p1) {
  int8x16_t __ret;
  __ret = (int8x16_t) __builtin_neon_vqshlq_v((int8x16_t)__p0, (int8x16_t)__p1, 32);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vqshlq_s32(int32x4_t __p0, int32x4_t __p1) {
  int32x4_t __ret;
  __ret = (int32x4_t) __builtin_neon_vqshlq_v((int8x16_t)__p0, (int8x16_t)__p1, 34);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vqshlq_s64(int64x2_t __p0, int64x2_t __p1) {
  int64x2_t __ret;
  __ret = (int64x2_t) __builtin_neon_vqshlq_v((int8x16_t)__p0, (int8x16_t)__p1, 35);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vqshlq_s16(int16x8_t __p0, int16x8_t __p1) {
  int16x8_t __ret;
  __ret = (int16x8_t) __builtin_neon_vqshlq_v((int8x16_t)__p0, (int8x16_t)__p1, 33);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vqshl_u8(uint8x8_t __p0, int8x8_t __p1) {
  uint8x8_t __ret;
  __ret = (uint8x8_t) __builtin_neon_vqshl_v((int8x8_t)__p0, (int8x8_t)__p1, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vqshl_u32(uint32x2_t __p0, int32x2_t __p1) {
  uint32x2_t __ret;
  __ret = (uint32x2_t) __builtin_neon_vqshl_v((int8x8_t)__p0, (int8x8_t)__p1, 18);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vqshl_u64(uint64x1_t __p0, int64x1_t __p1) {
  uint64x1_t __ret;
  __ret = (uint64x1_t) __builtin_neon_vqshl_v((int8x8_t)__p0, (int8x8_t)__p1, 19);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vqshl_u16(uint16x4_t __p0, int16x4_t __p1) {
  uint16x4_t __ret;
  __ret = (uint16x4_t) __builtin_neon_vqshl_v((int8x8_t)__p0, (int8x8_t)__p1, 17);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vqshl_s8(int8x8_t __p0, int8x8_t __p1) {
  int8x8_t __ret;
  __ret = (int8x8_t) __builtin_neon_vqshl_v((int8x8_t)__p0, (int8x8_t)__p1, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vqshl_s32(int32x2_t __p0, int32x2_t __p1) {
  int32x2_t __ret;
  __ret = (int32x2_t) __builtin_neon_vqshl_v((int8x8_t)__p0, (int8x8_t)__p1, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x1_t vqshl_s64(int64x1_t __p0, int64x1_t __p1) {
  int64x1_t __ret;
  __ret = (int64x1_t) __builtin_neon_vqshl_v((int8x8_t)__p0, (int8x8_t)__p1, 3);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vqshl_s16(int16x4_t __p0, int16x4_t __p1) {
  int16x4_t __ret;
  __ret = (int16x4_t) __builtin_neon_vqshl_v((int8x8_t)__p0, (int8x8_t)__p1, 1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vqsubq_u8(uint8x16_t __p0, uint8x16_t __p1) {
  uint8x16_t __ret;
  __ret = (uint8x16_t) __builtin_neon_vqsubq_v((int8x16_t)__p0, (int8x16_t)__p1, 48);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vqsubq_u32(uint32x4_t __p0, uint32x4_t __p1) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vqsubq_v((int8x16_t)__p0, (int8x16_t)__p1, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vqsubq_u64(uint64x2_t __p0, uint64x2_t __p1) {
  uint64x2_t __ret;
  __ret = (uint64x2_t) __builtin_neon_vqsubq_v((int8x16_t)__p0, (int8x16_t)__p1, 51);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vqsubq_u16(uint16x8_t __p0, uint16x8_t __p1) {
  uint16x8_t __ret;
  __ret = (uint16x8_t) __builtin_neon_vqsubq_v((int8x16_t)__p0, (int8x16_t)__p1, 49);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vqsubq_s8(int8x16_t __p0, int8x16_t __p1) {
  int8x16_t __ret;
  __ret = (int8x16_t) __builtin_neon_vqsubq_v((int8x16_t)__p0, (int8x16_t)__p1, 32);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vqsubq_s32(int32x4_t __p0, int32x4_t __p1) {
  int32x4_t __ret;
  __ret = (int32x4_t) __builtin_neon_vqsubq_v((int8x16_t)__p0, (int8x16_t)__p1, 34);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vqsubq_s64(int64x2_t __p0, int64x2_t __p1) {
  int64x2_t __ret;
  __ret = (int64x2_t) __builtin_neon_vqsubq_v((int8x16_t)__p0, (int8x16_t)__p1, 35);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vqsubq_s16(int16x8_t __p0, int16x8_t __p1) {
  int16x8_t __ret;
  __ret = (int16x8_t) __builtin_neon_vqsubq_v((int8x16_t)__p0, (int8x16_t)__p1, 33);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vqsub_u8(uint8x8_t __p0, uint8x8_t __p1) {
  uint8x8_t __ret;
  __ret = (uint8x8_t) __builtin_neon_vqsub_v((int8x8_t)__p0, (int8x8_t)__p1, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vqsub_u32(uint32x2_t __p0, uint32x2_t __p1) {
  uint32x2_t __ret;
  __ret = (uint32x2_t) __builtin_neon_vqsub_v((int8x8_t)__p0, (int8x8_t)__p1, 18);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vqsub_u64(uint64x1_t __p0, uint64x1_t __p1) {
  uint64x1_t __ret;
  __ret = (uint64x1_t) __builtin_neon_vqsub_v((int8x8_t)__p0, (int8x8_t)__p1, 19);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vqsub_u16(uint16x4_t __p0, uint16x4_t __p1) {
  uint16x4_t __ret;
  __ret = (uint16x4_t) __builtin_neon_vqsub_v((int8x8_t)__p0, (int8x8_t)__p1, 17);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vqsub_s8(int8x8_t __p0, int8x8_t __p1) {
  int8x8_t __ret;
  __ret = (int8x8_t) __builtin_neon_vqsub_v((int8x8_t)__p0, (int8x8_t)__p1, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vqsub_s32(int32x2_t __p0, int32x2_t __p1) {
  int32x2_t __ret;
  __ret = (int32x2_t) __builtin_neon_vqsub_v((int8x8_t)__p0, (int8x8_t)__p1, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x1_t vqsub_s64(int64x1_t __p0, int64x1_t __p1) {
  int64x1_t __ret;
  __ret = (int64x1_t) __builtin_neon_vqsub_v((int8x8_t)__p0, (int8x8_t)__p1, 3);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vqsub_s16(int16x4_t __p0, int16x4_t __p1) {
  int16x4_t __ret;
  __ret = (int16x4_t) __builtin_neon_vqsub_v((int8x8_t)__p0, (int8x8_t)__p1, 1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vraddhn_u32(uint32x4_t __p0, uint32x4_t __p1) {
  uint16x4_t __ret;
  __ret = (uint16x4_t) __builtin_neon_vraddhn_v((int8x16_t)__p0, (int8x16_t)__p1, 17);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vraddhn_u64(uint64x2_t __p0, uint64x2_t __p1) {
  uint32x2_t __ret;
  __ret = (uint32x2_t) __builtin_neon_vraddhn_v((int8x16_t)__p0, (int8x16_t)__p1, 18);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vraddhn_u16(uint16x8_t __p0, uint16x8_t __p1) {
  uint8x8_t __ret;
  __ret = (uint8x8_t) __builtin_neon_vraddhn_v((int8x16_t)__p0, (int8x16_t)__p1, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vraddhn_s32(int32x4_t __p0, int32x4_t __p1) {
  int16x4_t __ret;
  __ret = (int16x4_t) __builtin_neon_vraddhn_v((int8x16_t)__p0, (int8x16_t)__p1, 1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vraddhn_s64(int64x2_t __p0, int64x2_t __p1) {
  int32x2_t __ret;
  __ret = (int32x2_t) __builtin_neon_vraddhn_v((int8x16_t)__p0, (int8x16_t)__p1, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vraddhn_s16(int16x8_t __p0, int16x8_t __p1) {
  int8x8_t __ret;
  __ret = (int8x8_t) __builtin_neon_vraddhn_v((int8x16_t)__p0, (int8x16_t)__p1, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vrecpeq_u32(uint32x4_t __p0) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vrecpeq_v((int8x16_t)__p0, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vrecpeq_f32(float32x4_t __p0) {
  float32x4_t __ret;
  __ret = (float32x4_t) __builtin_neon_vrecpeq_v((int8x16_t)__p0, 41);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vrecpe_u32(uint32x2_t __p0) {
  uint32x2_t __ret;
  __ret = (uint32x2_t) __builtin_neon_vrecpe_v((int8x8_t)__p0, 18);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vrecpe_f32(float32x2_t __p0) {
  float32x2_t __ret;
  __ret = (float32x2_t) __builtin_neon_vrecpe_v((int8x8_t)__p0, 9);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vrecpsq_f32(float32x4_t __p0, float32x4_t __p1) {
  float32x4_t __ret;
  __ret = (float32x4_t) __builtin_neon_vrecpsq_v((int8x16_t)__p0, (int8x16_t)__p1, 41);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vrecps_f32(float32x2_t __p0, float32x2_t __p1) {
  float32x2_t __ret;
  __ret = (float32x2_t) __builtin_neon_vrecps_v((int8x8_t)__p0, (int8x8_t)__p1, 9);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x8_t vrev16_p8(poly8x8_t __p0) {
  poly8x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 1, 0, 3, 2, 5, 4, 7, 6);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x16_t vrev16q_p8(poly8x16_t __p0) {
  poly8x16_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vrev16q_u8(uint8x16_t __p0) {
  uint8x16_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vrev16q_s8(int8x16_t __p0) {
  int8x16_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vrev16_u8(uint8x8_t __p0) {
  uint8x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 1, 0, 3, 2, 5, 4, 7, 6);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vrev16_s8(int8x8_t __p0) {
  int8x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 1, 0, 3, 2, 5, 4, 7, 6);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x8_t vrev32_p8(poly8x8_t __p0) {
  poly8x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 3, 2, 1, 0, 7, 6, 5, 4);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x4_t vrev32_p16(poly16x4_t __p0) {
  poly16x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 1, 0, 3, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x16_t vrev32q_p8(poly8x16_t __p0) {
  poly8x16_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 3, 2, 1, 0, 7, 6, 5, 4, 11, 10, 9, 8, 15, 14, 13, 12);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x8_t vrev32q_p16(poly16x8_t __p0) {
  poly16x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 1, 0, 3, 2, 5, 4, 7, 6);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vrev32q_u8(uint8x16_t __p0) {
  uint8x16_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 3, 2, 1, 0, 7, 6, 5, 4, 11, 10, 9, 8, 15, 14, 13, 12);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vrev32q_u16(uint16x8_t __p0) {
  uint16x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 1, 0, 3, 2, 5, 4, 7, 6);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vrev32q_s8(int8x16_t __p0) {
  int8x16_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 3, 2, 1, 0, 7, 6, 5, 4, 11, 10, 9, 8, 15, 14, 13, 12);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vrev32q_s16(int16x8_t __p0) {
  int16x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 1, 0, 3, 2, 5, 4, 7, 6);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vrev32_u8(uint8x8_t __p0) {
  uint8x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 3, 2, 1, 0, 7, 6, 5, 4);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vrev32_u16(uint16x4_t __p0) {
  uint16x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 1, 0, 3, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vrev32_s8(int8x8_t __p0) {
  int8x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 3, 2, 1, 0, 7, 6, 5, 4);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vrev32_s16(int16x4_t __p0) {
  int16x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 1, 0, 3, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x8_t vrev64_p8(poly8x8_t __p0) {
  poly8x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 7, 6, 5, 4, 3, 2, 1, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x4_t vrev64_p16(poly16x4_t __p0) {
  poly16x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 3, 2, 1, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x16_t vrev64q_p8(poly8x16_t __p0) {
  poly8x16_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 7, 6, 5, 4, 3, 2, 1, 0, 15, 14, 13, 12, 11, 10, 9, 8);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x8_t vrev64q_p16(poly16x8_t __p0) {
  poly16x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 3, 2, 1, 0, 7, 6, 5, 4);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vrev64q_u8(uint8x16_t __p0) {
  uint8x16_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 7, 6, 5, 4, 3, 2, 1, 0, 15, 14, 13, 12, 11, 10, 9, 8);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vrev64q_u32(uint32x4_t __p0) {
  uint32x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 1, 0, 3, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vrev64q_u16(uint16x8_t __p0) {
  uint16x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 3, 2, 1, 0, 7, 6, 5, 4);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vrev64q_s8(int8x16_t __p0) {
  int8x16_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 7, 6, 5, 4, 3, 2, 1, 0, 15, 14, 13, 12, 11, 10, 9, 8);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vrev64q_f32(float32x4_t __p0) {
  float32x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 1, 0, 3, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vrev64q_s32(int32x4_t __p0) {
  int32x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 1, 0, 3, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vrev64q_s16(int16x8_t __p0) {
  int16x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 3, 2, 1, 0, 7, 6, 5, 4);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vrev64_u8(uint8x8_t __p0) {
  uint8x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 7, 6, 5, 4, 3, 2, 1, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vrev64_u32(uint32x2_t __p0) {
  uint32x2_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 1, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vrev64_u16(uint16x4_t __p0) {
  uint16x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 3, 2, 1, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vrev64_s8(int8x8_t __p0) {
  int8x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 7, 6, 5, 4, 3, 2, 1, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vrev64_f32(float32x2_t __p0) {
  float32x2_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 1, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vrev64_s32(int32x2_t __p0) {
  int32x2_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 1, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vrev64_s16(int16x4_t __p0) {
  int16x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 3, 2, 1, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vrhaddq_u8(uint8x16_t __p0, uint8x16_t __p1) {
  uint8x16_t __ret;
  __ret = (uint8x16_t) __builtin_neon_vrhaddq_v((int8x16_t)__p0, (int8x16_t)__p1, 48);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vrhaddq_u32(uint32x4_t __p0, uint32x4_t __p1) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vrhaddq_v((int8x16_t)__p0, (int8x16_t)__p1, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vrhaddq_u16(uint16x8_t __p0, uint16x8_t __p1) {
  uint16x8_t __ret;
  __ret = (uint16x8_t) __builtin_neon_vrhaddq_v((int8x16_t)__p0, (int8x16_t)__p1, 49);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vrhaddq_s8(int8x16_t __p0, int8x16_t __p1) {
  int8x16_t __ret;
  __ret = (int8x16_t) __builtin_neon_vrhaddq_v((int8x16_t)__p0, (int8x16_t)__p1, 32);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vrhaddq_s32(int32x4_t __p0, int32x4_t __p1) {
  int32x4_t __ret;
  __ret = (int32x4_t) __builtin_neon_vrhaddq_v((int8x16_t)__p0, (int8x16_t)__p1, 34);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vrhaddq_s16(int16x8_t __p0, int16x8_t __p1) {
  int16x8_t __ret;
  __ret = (int16x8_t) __builtin_neon_vrhaddq_v((int8x16_t)__p0, (int8x16_t)__p1, 33);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vrhadd_u8(uint8x8_t __p0, uint8x8_t __p1) {
  uint8x8_t __ret;
  __ret = (uint8x8_t) __builtin_neon_vrhadd_v((int8x8_t)__p0, (int8x8_t)__p1, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vrhadd_u32(uint32x2_t __p0, uint32x2_t __p1) {
  uint32x2_t __ret;
  __ret = (uint32x2_t) __builtin_neon_vrhadd_v((int8x8_t)__p0, (int8x8_t)__p1, 18);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vrhadd_u16(uint16x4_t __p0, uint16x4_t __p1) {
  uint16x4_t __ret;
  __ret = (uint16x4_t) __builtin_neon_vrhadd_v((int8x8_t)__p0, (int8x8_t)__p1, 17);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vrhadd_s8(int8x8_t __p0, int8x8_t __p1) {
  int8x8_t __ret;
  __ret = (int8x8_t) __builtin_neon_vrhadd_v((int8x8_t)__p0, (int8x8_t)__p1, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vrhadd_s32(int32x2_t __p0, int32x2_t __p1) {
  int32x2_t __ret;
  __ret = (int32x2_t) __builtin_neon_vrhadd_v((int8x8_t)__p0, (int8x8_t)__p1, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vrhadd_s16(int16x4_t __p0, int16x4_t __p1) {
  int16x4_t __ret;
  __ret = (int16x4_t) __builtin_neon_vrhadd_v((int8x8_t)__p0, (int8x8_t)__p1, 1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vrshlq_u8(uint8x16_t __p0, int8x16_t __p1) {
  uint8x16_t __ret;
  __ret = (uint8x16_t) __builtin_neon_vrshlq_v((int8x16_t)__p0, (int8x16_t)__p1, 48);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vrshlq_u32(uint32x4_t __p0, int32x4_t __p1) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vrshlq_v((int8x16_t)__p0, (int8x16_t)__p1, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vrshlq_u64(uint64x2_t __p0, int64x2_t __p1) {
  uint64x2_t __ret;
  __ret = (uint64x2_t) __builtin_neon_vrshlq_v((int8x16_t)__p0, (int8x16_t)__p1, 51);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vrshlq_u16(uint16x8_t __p0, int16x8_t __p1) {
  uint16x8_t __ret;
  __ret = (uint16x8_t) __builtin_neon_vrshlq_v((int8x16_t)__p0, (int8x16_t)__p1, 49);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vrshlq_s8(int8x16_t __p0, int8x16_t __p1) {
  int8x16_t __ret;
  __ret = (int8x16_t) __builtin_neon_vrshlq_v((int8x16_t)__p0, (int8x16_t)__p1, 32);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vrshlq_s32(int32x4_t __p0, int32x4_t __p1) {
  int32x4_t __ret;
  __ret = (int32x4_t) __builtin_neon_vrshlq_v((int8x16_t)__p0, (int8x16_t)__p1, 34);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vrshlq_s64(int64x2_t __p0, int64x2_t __p1) {
  int64x2_t __ret;
  __ret = (int64x2_t) __builtin_neon_vrshlq_v((int8x16_t)__p0, (int8x16_t)__p1, 35);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vrshlq_s16(int16x8_t __p0, int16x8_t __p1) {
  int16x8_t __ret;
  __ret = (int16x8_t) __builtin_neon_vrshlq_v((int8x16_t)__p0, (int8x16_t)__p1, 33);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vrshl_u8(uint8x8_t __p0, int8x8_t __p1) {
  uint8x8_t __ret;
  __ret = (uint8x8_t) __builtin_neon_vrshl_v((int8x8_t)__p0, (int8x8_t)__p1, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vrshl_u32(uint32x2_t __p0, int32x2_t __p1) {
  uint32x2_t __ret;
  __ret = (uint32x2_t) __builtin_neon_vrshl_v((int8x8_t)__p0, (int8x8_t)__p1, 18);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vrshl_u64(uint64x1_t __p0, int64x1_t __p1) {
  uint64x1_t __ret;
  __ret = (uint64x1_t) __builtin_neon_vrshl_v((int8x8_t)__p0, (int8x8_t)__p1, 19);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vrshl_u16(uint16x4_t __p0, int16x4_t __p1) {
  uint16x4_t __ret;
  __ret = (uint16x4_t) __builtin_neon_vrshl_v((int8x8_t)__p0, (int8x8_t)__p1, 17);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vrshl_s8(int8x8_t __p0, int8x8_t __p1) {
  int8x8_t __ret;
  __ret = (int8x8_t) __builtin_neon_vrshl_v((int8x8_t)__p0, (int8x8_t)__p1, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vrshl_s32(int32x2_t __p0, int32x2_t __p1) {
  int32x2_t __ret;
  __ret = (int32x2_t) __builtin_neon_vrshl_v((int8x8_t)__p0, (int8x8_t)__p1, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x1_t vrshl_s64(int64x1_t __p0, int64x1_t __p1) {
  int64x1_t __ret;
  __ret = (int64x1_t) __builtin_neon_vrshl_v((int8x8_t)__p0, (int8x8_t)__p1, 3);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vrshl_s16(int16x4_t __p0, int16x4_t __p1) {
  int16x4_t __ret;
  __ret = (int16x4_t) __builtin_neon_vrshl_v((int8x8_t)__p0, (int8x8_t)__p1, 1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vrsqrteq_u32(uint32x4_t __p0) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vrsqrteq_v((int8x16_t)__p0, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vrsqrteq_f32(float32x4_t __p0) {
  float32x4_t __ret;
  __ret = (float32x4_t) __builtin_neon_vrsqrteq_v((int8x16_t)__p0, 41);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vrsqrte_u32(uint32x2_t __p0) {
  uint32x2_t __ret;
  __ret = (uint32x2_t) __builtin_neon_vrsqrte_v((int8x8_t)__p0, 18);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vrsqrte_f32(float32x2_t __p0) {
  float32x2_t __ret;
  __ret = (float32x2_t) __builtin_neon_vrsqrte_v((int8x8_t)__p0, 9);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vrsqrtsq_f32(float32x4_t __p0, float32x4_t __p1) {
  float32x4_t __ret;
  __ret = (float32x4_t) __builtin_neon_vrsqrtsq_v((int8x16_t)__p0, (int8x16_t)__p1, 41);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vrsqrts_f32(float32x2_t __p0, float32x2_t __p1) {
  float32x2_t __ret;
  __ret = (float32x2_t) __builtin_neon_vrsqrts_v((int8x8_t)__p0, (int8x8_t)__p1, 9);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vrsubhn_u32(uint32x4_t __p0, uint32x4_t __p1) {
  uint16x4_t __ret;
  __ret = (uint16x4_t) __builtin_neon_vrsubhn_v((int8x16_t)__p0, (int8x16_t)__p1, 17);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vrsubhn_u64(uint64x2_t __p0, uint64x2_t __p1) {
  uint32x2_t __ret;
  __ret = (uint32x2_t) __builtin_neon_vrsubhn_v((int8x16_t)__p0, (int8x16_t)__p1, 18);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vrsubhn_u16(uint16x8_t __p0, uint16x8_t __p1) {
  uint8x8_t __ret;
  __ret = (uint8x8_t) __builtin_neon_vrsubhn_v((int8x16_t)__p0, (int8x16_t)__p1, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vrsubhn_s32(int32x4_t __p0, int32x4_t __p1) {
  int16x4_t __ret;
  __ret = (int16x4_t) __builtin_neon_vrsubhn_v((int8x16_t)__p0, (int8x16_t)__p1, 1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vrsubhn_s64(int64x2_t __p0, int64x2_t __p1) {
  int32x2_t __ret;
  __ret = (int32x2_t) __builtin_neon_vrsubhn_v((int8x16_t)__p0, (int8x16_t)__p1, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vrsubhn_s16(int16x8_t __p0, int16x8_t __p1) {
  int8x8_t __ret;
  __ret = (int8x8_t) __builtin_neon_vrsubhn_v((int8x16_t)__p0, (int8x16_t)__p1, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vshlq_u8(uint8x16_t __p0, int8x16_t __p1) {
  uint8x16_t __ret;
  __ret = (uint8x16_t) __builtin_neon_vshlq_v((int8x16_t)__p0, (int8x16_t)__p1, 48);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vshlq_u32(uint32x4_t __p0, int32x4_t __p1) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vshlq_v((int8x16_t)__p0, (int8x16_t)__p1, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vshlq_u64(uint64x2_t __p0, int64x2_t __p1) {
  uint64x2_t __ret;
  __ret = (uint64x2_t) __builtin_neon_vshlq_v((int8x16_t)__p0, (int8x16_t)__p1, 51);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vshlq_u16(uint16x8_t __p0, int16x8_t __p1) {
  uint16x8_t __ret;
  __ret = (uint16x8_t) __builtin_neon_vshlq_v((int8x16_t)__p0, (int8x16_t)__p1, 49);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vshlq_s8(int8x16_t __p0, int8x16_t __p1) {
  int8x16_t __ret;
  __ret = (int8x16_t) __builtin_neon_vshlq_v((int8x16_t)__p0, (int8x16_t)__p1, 32);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vshlq_s32(int32x4_t __p0, int32x4_t __p1) {
  int32x4_t __ret;
  __ret = (int32x4_t) __builtin_neon_vshlq_v((int8x16_t)__p0, (int8x16_t)__p1, 34);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vshlq_s64(int64x2_t __p0, int64x2_t __p1) {
  int64x2_t __ret;
  __ret = (int64x2_t) __builtin_neon_vshlq_v((int8x16_t)__p0, (int8x16_t)__p1, 35);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vshlq_s16(int16x8_t __p0, int16x8_t __p1) {
  int16x8_t __ret;
  __ret = (int16x8_t) __builtin_neon_vshlq_v((int8x16_t)__p0, (int8x16_t)__p1, 33);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vshl_u8(uint8x8_t __p0, int8x8_t __p1) {
  uint8x8_t __ret;
  __ret = (uint8x8_t) __builtin_neon_vshl_v((int8x8_t)__p0, (int8x8_t)__p1, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vshl_u32(uint32x2_t __p0, int32x2_t __p1) {
  uint32x2_t __ret;
  __ret = (uint32x2_t) __builtin_neon_vshl_v((int8x8_t)__p0, (int8x8_t)__p1, 18);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vshl_u64(uint64x1_t __p0, int64x1_t __p1) {
  uint64x1_t __ret;
  __ret = (uint64x1_t) __builtin_neon_vshl_v((int8x8_t)__p0, (int8x8_t)__p1, 19);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vshl_u16(uint16x4_t __p0, int16x4_t __p1) {
  uint16x4_t __ret;
  __ret = (uint16x4_t) __builtin_neon_vshl_v((int8x8_t)__p0, (int8x8_t)__p1, 17);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vshl_s8(int8x8_t __p0, int8x8_t __p1) {
  int8x8_t __ret;
  __ret = (int8x8_t) __builtin_neon_vshl_v((int8x8_t)__p0, (int8x8_t)__p1, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vshl_s32(int32x2_t __p0, int32x2_t __p1) {
  int32x2_t __ret;
  __ret = (int32x2_t) __builtin_neon_vshl_v((int8x8_t)__p0, (int8x8_t)__p1, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x1_t vshl_s64(int64x1_t __p0, int64x1_t __p1) {
  int64x1_t __ret;
  __ret = (int64x1_t) __builtin_neon_vshl_v((int8x8_t)__p0, (int8x8_t)__p1, 3);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vshl_s16(int16x4_t __p0, int16x4_t __p1) {
  int16x4_t __ret;
  __ret = (int16x4_t) __builtin_neon_vshl_v((int8x8_t)__p0, (int8x8_t)__p1, 1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vsubq_u8(uint8x16_t __p0, uint8x16_t __p1) {
  uint8x16_t __ret;
  __ret = __p0 - __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vsubq_u32(uint32x4_t __p0, uint32x4_t __p1) {
  uint32x4_t __ret;
  __ret = __p0 - __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vsubq_u64(uint64x2_t __p0, uint64x2_t __p1) {
  uint64x2_t __ret;
  __ret = __p0 - __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vsubq_u16(uint16x8_t __p0, uint16x8_t __p1) {
  uint16x8_t __ret;
  __ret = __p0 - __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vsubq_s8(int8x16_t __p0, int8x16_t __p1) {
  int8x16_t __ret;
  __ret = __p0 - __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vsubq_f32(float32x4_t __p0, float32x4_t __p1) {
  float32x4_t __ret;
  __ret = __p0 - __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vsubq_s32(int32x4_t __p0, int32x4_t __p1) {
  int32x4_t __ret;
  __ret = __p0 - __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vsubq_s64(int64x2_t __p0, int64x2_t __p1) {
  int64x2_t __ret;
  __ret = __p0 - __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vsubq_s16(int16x8_t __p0, int16x8_t __p1) {
  int16x8_t __ret;
  __ret = __p0 - __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vsub_u8(uint8x8_t __p0, uint8x8_t __p1) {
  uint8x8_t __ret;
  __ret = __p0 - __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vsub_u32(uint32x2_t __p0, uint32x2_t __p1) {
  uint32x2_t __ret;
  __ret = __p0 - __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vsub_u64(uint64x1_t __p0, uint64x1_t __p1) {
  uint64x1_t __ret;
  __ret = __p0 - __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vsub_u16(uint16x4_t __p0, uint16x4_t __p1) {
  uint16x4_t __ret;
  __ret = __p0 - __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vsub_s8(int8x8_t __p0, int8x8_t __p1) {
  int8x8_t __ret;
  __ret = __p0 - __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vsub_f32(float32x2_t __p0, float32x2_t __p1) {
  float32x2_t __ret;
  __ret = __p0 - __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vsub_s32(int32x2_t __p0, int32x2_t __p1) {
  int32x2_t __ret;
  __ret = __p0 - __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x1_t vsub_s64(int64x1_t __p0, int64x1_t __p1) {
  int64x1_t __ret;
  __ret = __p0 - __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vsub_s16(int16x4_t __p0, int16x4_t __p1) {
  int16x4_t __ret;
  __ret = __p0 - __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vsubhn_u32(uint32x4_t __p0, uint32x4_t __p1) {
  uint16x4_t __ret;
  __ret = (uint16x4_t) __builtin_neon_vsubhn_v((int8x16_t)__p0, (int8x16_t)__p1, 17);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vsubhn_u64(uint64x2_t __p0, uint64x2_t __p1) {
  uint32x2_t __ret;
  __ret = (uint32x2_t) __builtin_neon_vsubhn_v((int8x16_t)__p0, (int8x16_t)__p1, 18);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vsubhn_u16(uint16x8_t __p0, uint16x8_t __p1) {
  uint8x8_t __ret;
  __ret = (uint8x8_t) __builtin_neon_vsubhn_v((int8x16_t)__p0, (int8x16_t)__p1, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vsubhn_s32(int32x4_t __p0, int32x4_t __p1) {
  int16x4_t __ret;
  __ret = (int16x4_t) __builtin_neon_vsubhn_v((int8x16_t)__p0, (int8x16_t)__p1, 1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vsubhn_s64(int64x2_t __p0, int64x2_t __p1) {
  int32x2_t __ret;
  __ret = (int32x2_t) __builtin_neon_vsubhn_v((int8x16_t)__p0, (int8x16_t)__p1, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vsubhn_s16(int16x8_t __p0, int16x8_t __p1) {
  int8x8_t __ret;
  __ret = (int8x8_t) __builtin_neon_vsubhn_v((int8x16_t)__p0, (int8x16_t)__p1, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vsubl_u8(uint8x8_t __p0, uint8x8_t __p1) {
  uint16x8_t __ret;
  __ret = vmovl_u8(__p0) - vmovl_u8(__p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vsubl_u32(uint32x2_t __p0, uint32x2_t __p1) {
  uint64x2_t __ret;
  __ret = vmovl_u32(__p0) - vmovl_u32(__p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vsubl_u16(uint16x4_t __p0, uint16x4_t __p1) {
  uint32x4_t __ret;
  __ret = vmovl_u16(__p0) - vmovl_u16(__p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vsubl_s8(int8x8_t __p0, int8x8_t __p1) {
  int16x8_t __ret;
  __ret = vmovl_s8(__p0) - vmovl_s8(__p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vsubl_s32(int32x2_t __p0, int32x2_t __p1) {
  int64x2_t __ret;
  __ret = vmovl_s32(__p0) - vmovl_s32(__p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vsubl_s16(int16x4_t __p0, int16x4_t __p1) {
  int32x4_t __ret;
  __ret = vmovl_s16(__p0) - vmovl_s16(__p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vsubw_u8(uint16x8_t __p0, uint8x8_t __p1) {
  uint16x8_t __ret;
  __ret = __p0 - vmovl_u8(__p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vsubw_u32(uint64x2_t __p0, uint32x2_t __p1) {
  uint64x2_t __ret;
  __ret = __p0 - vmovl_u32(__p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vsubw_u16(uint32x4_t __p0, uint16x4_t __p1) {
  uint32x4_t __ret;
  __ret = __p0 - vmovl_u16(__p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vsubw_s8(int16x8_t __p0, int8x8_t __p1) {
  int16x8_t __ret;
  __ret = __p0 - vmovl_s8(__p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vsubw_s32(int64x2_t __p0, int32x2_t __p1) {
  int64x2_t __ret;
  __ret = __p0 - vmovl_s32(__p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vsubw_s16(int32x4_t __p0, int16x4_t __p1) {
  int32x4_t __ret;
  __ret = __p0 - vmovl_s16(__p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x8_t vtbl1_p8(poly8x8_t __p0, uint8x8_t __p1) {
  poly8x8_t __ret;
  __ret = (poly8x8_t) __builtin_neon_vtbl1_v((int8x8_t)__p0, (int8x8_t)__p1, 4);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vtbl1_u8(uint8x8_t __p0, uint8x8_t __p1) {
  uint8x8_t __ret;
  __ret = (uint8x8_t) __builtin_neon_vtbl1_v((int8x8_t)__p0, (int8x8_t)__p1, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vtbl1_s8(int8x8_t __p0, int8x8_t __p1) {
  int8x8_t __ret;
  __ret = (int8x8_t) __builtin_neon_vtbl1_v((int8x8_t)__p0, (int8x8_t)__p1, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x8_t vtbl2_p8(poly8x8x2_t __p0, uint8x8_t __p1) {
  poly8x8_t __ret;
  __ret = (poly8x8_t) __builtin_neon_vtbl2_v((int8x8_t)__p0.val[0], (int8x8_t)__p0.val[1], (int8x8_t)__p1, 4);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vtbl2_u8(uint8x8x2_t __p0, uint8x8_t __p1) {
  uint8x8_t __ret;
  __ret = (uint8x8_t) __builtin_neon_vtbl2_v((int8x8_t)__p0.val[0], (int8x8_t)__p0.val[1], (int8x8_t)__p1, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vtbl2_s8(int8x8x2_t __p0, int8x8_t __p1) {
  int8x8_t __ret;
  __ret = (int8x8_t) __builtin_neon_vtbl2_v((int8x8_t)__p0.val[0], (int8x8_t)__p0.val[1], (int8x8_t)__p1, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x8_t vtbl3_p8(poly8x8x3_t __p0, uint8x8_t __p1) {
  poly8x8_t __ret;
  __ret = (poly8x8_t) __builtin_neon_vtbl3_v((int8x8_t)__p0.val[0], (int8x8_t)__p0.val[1], (int8x8_t)__p0.val[2], (int8x8_t)__p1, 4);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vtbl3_u8(uint8x8x3_t __p0, uint8x8_t __p1) {
  uint8x8_t __ret;
  __ret = (uint8x8_t) __builtin_neon_vtbl3_v((int8x8_t)__p0.val[0], (int8x8_t)__p0.val[1], (int8x8_t)__p0.val[2], (int8x8_t)__p1, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vtbl3_s8(int8x8x3_t __p0, int8x8_t __p1) {
  int8x8_t __ret;
  __ret = (int8x8_t) __builtin_neon_vtbl3_v((int8x8_t)__p0.val[0], (int8x8_t)__p0.val[1], (int8x8_t)__p0.val[2], (int8x8_t)__p1, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x8_t vtbl4_p8(poly8x8x4_t __p0, uint8x8_t __p1) {
  poly8x8_t __ret;
  __ret = (poly8x8_t) __builtin_neon_vtbl4_v((int8x8_t)__p0.val[0], (int8x8_t)__p0.val[1], (int8x8_t)__p0.val[2], (int8x8_t)__p0.val[3], (int8x8_t)__p1, 4);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vtbl4_u8(uint8x8x4_t __p0, uint8x8_t __p1) {
  uint8x8_t __ret;
  __ret = (uint8x8_t) __builtin_neon_vtbl4_v((int8x8_t)__p0.val[0], (int8x8_t)__p0.val[1], (int8x8_t)__p0.val[2], (int8x8_t)__p0.val[3], (int8x8_t)__p1, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vtbl4_s8(int8x8x4_t __p0, int8x8_t __p1) {
  int8x8_t __ret;
  __ret = (int8x8_t) __builtin_neon_vtbl4_v((int8x8_t)__p0.val[0], (int8x8_t)__p0.val[1], (int8x8_t)__p0.val[2], (int8x8_t)__p0.val[3], (int8x8_t)__p1, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x8_t vtbx1_p8(poly8x8_t __p0, poly8x8_t __p1, uint8x8_t __p2) {
  poly8x8_t __ret;
  __ret = (poly8x8_t) __builtin_neon_vtbx1_v((int8x8_t)__p0, (int8x8_t)__p1, (int8x8_t)__p2, 4);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vtbx1_u8(uint8x8_t __p0, uint8x8_t __p1, uint8x8_t __p2) {
  uint8x8_t __ret;
  __ret = (uint8x8_t) __builtin_neon_vtbx1_v((int8x8_t)__p0, (int8x8_t)__p1, (int8x8_t)__p2, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vtbx1_s8(int8x8_t __p0, int8x8_t __p1, int8x8_t __p2) {
  int8x8_t __ret;
  __ret = (int8x8_t) __builtin_neon_vtbx1_v((int8x8_t)__p0, (int8x8_t)__p1, (int8x8_t)__p2, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x8_t vtbx2_p8(poly8x8_t __p0, poly8x8x2_t __p1, uint8x8_t __p2) {
  poly8x8_t __ret;
  __ret = (poly8x8_t) __builtin_neon_vtbx2_v((int8x8_t)__p0, (int8x8_t)__p1.val[0], (int8x8_t)__p1.val[1], (int8x8_t)__p2, 4);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vtbx2_u8(uint8x8_t __p0, uint8x8x2_t __p1, uint8x8_t __p2) {
  uint8x8_t __ret;
  __ret = (uint8x8_t) __builtin_neon_vtbx2_v((int8x8_t)__p0, (int8x8_t)__p1.val[0], (int8x8_t)__p1.val[1], (int8x8_t)__p2, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vtbx2_s8(int8x8_t __p0, int8x8x2_t __p1, int8x8_t __p2) {
  int8x8_t __ret;
  __ret = (int8x8_t) __builtin_neon_vtbx2_v((int8x8_t)__p0, (int8x8_t)__p1.val[0], (int8x8_t)__p1.val[1], (int8x8_t)__p2, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x8_t vtbx3_p8(poly8x8_t __p0, poly8x8x3_t __p1, uint8x8_t __p2) {
  poly8x8_t __ret;
  __ret = (poly8x8_t) __builtin_neon_vtbx3_v((int8x8_t)__p0, (int8x8_t)__p1.val[0], (int8x8_t)__p1.val[1], (int8x8_t)__p1.val[2], (int8x8_t)__p2, 4);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vtbx3_u8(uint8x8_t __p0, uint8x8x3_t __p1, uint8x8_t __p2) {
  uint8x8_t __ret;
  __ret = (uint8x8_t) __builtin_neon_vtbx3_v((int8x8_t)__p0, (int8x8_t)__p1.val[0], (int8x8_t)__p1.val[1], (int8x8_t)__p1.val[2], (int8x8_t)__p2, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vtbx3_s8(int8x8_t __p0, int8x8x3_t __p1, int8x8_t __p2) {
  int8x8_t __ret;
  __ret = (int8x8_t) __builtin_neon_vtbx3_v((int8x8_t)__p0, (int8x8_t)__p1.val[0], (int8x8_t)__p1.val[1], (int8x8_t)__p1.val[2], (int8x8_t)__p2, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x8_t vtbx4_p8(poly8x8_t __p0, poly8x8x4_t __p1, uint8x8_t __p2) {
  poly8x8_t __ret;
  __ret = (poly8x8_t) __builtin_neon_vtbx4_v((int8x8_t)__p0, (int8x8_t)__p1.val[0], (int8x8_t)__p1.val[1], (int8x8_t)__p1.val[2], (int8x8_t)__p1.val[3], (int8x8_t)__p2, 4);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vtbx4_u8(uint8x8_t __p0, uint8x8x4_t __p1, uint8x8_t __p2) {
  uint8x8_t __ret;
  __ret = (uint8x8_t) __builtin_neon_vtbx4_v((int8x8_t)__p0, (int8x8_t)__p1.val[0], (int8x8_t)__p1.val[1], (int8x8_t)__p1.val[2], (int8x8_t)__p1.val[3], (int8x8_t)__p2, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vtbx4_s8(int8x8_t __p0, int8x8x4_t __p1, int8x8_t __p2) {
  int8x8_t __ret;
  __ret = (int8x8_t) __builtin_neon_vtbx4_v((int8x8_t)__p0, (int8x8_t)__p1.val[0], (int8x8_t)__p1.val[1], (int8x8_t)__p1.val[2], (int8x8_t)__p1.val[3], (int8x8_t)__p2, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x8x2_t vtrn_p8(poly8x8_t __p0, poly8x8_t __p1) {
  poly8x8x2_t __ret;
  __builtin_neon_vtrn_v(&__ret, (int8x8_t)__p0, (int8x8_t)__p1, 4);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x4x2_t vtrn_p16(poly16x4_t __p0, poly16x4_t __p1) {
  poly16x4x2_t __ret;
  __builtin_neon_vtrn_v(&__ret, (int8x8_t)__p0, (int8x8_t)__p1, 5);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x16x2_t vtrnq_p8(poly8x16_t __p0, poly8x16_t __p1) {
  poly8x16x2_t __ret;
  __builtin_neon_vtrnq_v(&__ret, (int8x16_t)__p0, (int8x16_t)__p1, 36);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x8x2_t vtrnq_p16(poly16x8_t __p0, poly16x8_t __p1) {
  poly16x8x2_t __ret;
  __builtin_neon_vtrnq_v(&__ret, (int8x16_t)__p0, (int8x16_t)__p1, 37);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16x2_t vtrnq_u8(uint8x16_t __p0, uint8x16_t __p1) {
  uint8x16x2_t __ret;
  __builtin_neon_vtrnq_v(&__ret, (int8x16_t)__p0, (int8x16_t)__p1, 48);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4x2_t vtrnq_u32(uint32x4_t __p0, uint32x4_t __p1) {
  uint32x4x2_t __ret;
  __builtin_neon_vtrnq_v(&__ret, (int8x16_t)__p0, (int8x16_t)__p1, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8x2_t vtrnq_u16(uint16x8_t __p0, uint16x8_t __p1) {
  uint16x8x2_t __ret;
  __builtin_neon_vtrnq_v(&__ret, (int8x16_t)__p0, (int8x16_t)__p1, 49);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16x2_t vtrnq_s8(int8x16_t __p0, int8x16_t __p1) {
  int8x16x2_t __ret;
  __builtin_neon_vtrnq_v(&__ret, (int8x16_t)__p0, (int8x16_t)__p1, 32);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4x2_t vtrnq_f32(float32x4_t __p0, float32x4_t __p1) {
  float32x4x2_t __ret;
  __builtin_neon_vtrnq_v(&__ret, (int8x16_t)__p0, (int8x16_t)__p1, 41);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4x2_t vtrnq_s32(int32x4_t __p0, int32x4_t __p1) {
  int32x4x2_t __ret;
  __builtin_neon_vtrnq_v(&__ret, (int8x16_t)__p0, (int8x16_t)__p1, 34);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8x2_t vtrnq_s16(int16x8_t __p0, int16x8_t __p1) {
  int16x8x2_t __ret;
  __builtin_neon_vtrnq_v(&__ret, (int8x16_t)__p0, (int8x16_t)__p1, 33);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8x2_t vtrn_u8(uint8x8_t __p0, uint8x8_t __p1) {
  uint8x8x2_t __ret;
  __builtin_neon_vtrn_v(&__ret, (int8x8_t)__p0, (int8x8_t)__p1, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2x2_t vtrn_u32(uint32x2_t __p0, uint32x2_t __p1) {
  uint32x2x2_t __ret;
  __builtin_neon_vtrn_v(&__ret, (int8x8_t)__p0, (int8x8_t)__p1, 18);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4x2_t vtrn_u16(uint16x4_t __p0, uint16x4_t __p1) {
  uint16x4x2_t __ret;
  __builtin_neon_vtrn_v(&__ret, (int8x8_t)__p0, (int8x8_t)__p1, 17);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8x2_t vtrn_s8(int8x8_t __p0, int8x8_t __p1) {
  int8x8x2_t __ret;
  __builtin_neon_vtrn_v(&__ret, (int8x8_t)__p0, (int8x8_t)__p1, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2x2_t vtrn_f32(float32x2_t __p0, float32x2_t __p1) {
  float32x2x2_t __ret;
  __builtin_neon_vtrn_v(&__ret, (int8x8_t)__p0, (int8x8_t)__p1, 9);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2x2_t vtrn_s32(int32x2_t __p0, int32x2_t __p1) {
  int32x2x2_t __ret;
  __builtin_neon_vtrn_v(&__ret, (int8x8_t)__p0, (int8x8_t)__p1, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4x2_t vtrn_s16(int16x4_t __p0, int16x4_t __p1) {
  int16x4x2_t __ret;
  __builtin_neon_vtrn_v(&__ret, (int8x8_t)__p0, (int8x8_t)__p1, 1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vtst_p8(poly8x8_t __p0, poly8x8_t __p1) {
  uint8x8_t __ret;
  __ret = (uint8x8_t) __builtin_neon_vtst_v((int8x8_t)__p0, (int8x8_t)__p1, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vtst_p16(poly16x4_t __p0, poly16x4_t __p1) {
  uint16x4_t __ret;
  __ret = (uint16x4_t) __builtin_neon_vtst_v((int8x8_t)__p0, (int8x8_t)__p1, 17);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vtstq_p8(poly8x16_t __p0, poly8x16_t __p1) {
  uint8x16_t __ret;
  __ret = (uint8x16_t) __builtin_neon_vtstq_v((int8x16_t)__p0, (int8x16_t)__p1, 48);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vtstq_p16(poly16x8_t __p0, poly16x8_t __p1) {
  uint16x8_t __ret;
  __ret = (uint16x8_t) __builtin_neon_vtstq_v((int8x16_t)__p0, (int8x16_t)__p1, 49);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vtstq_u8(uint8x16_t __p0, uint8x16_t __p1) {
  uint8x16_t __ret;
  __ret = (uint8x16_t) __builtin_neon_vtstq_v((int8x16_t)__p0, (int8x16_t)__p1, 48);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vtstq_u32(uint32x4_t __p0, uint32x4_t __p1) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vtstq_v((int8x16_t)__p0, (int8x16_t)__p1, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vtstq_u16(uint16x8_t __p0, uint16x8_t __p1) {
  uint16x8_t __ret;
  __ret = (uint16x8_t) __builtin_neon_vtstq_v((int8x16_t)__p0, (int8x16_t)__p1, 49);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vtstq_s8(int8x16_t __p0, int8x16_t __p1) {
  uint8x16_t __ret;
  __ret = (uint8x16_t) __builtin_neon_vtstq_v((int8x16_t)__p0, (int8x16_t)__p1, 48);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vtstq_s32(int32x4_t __p0, int32x4_t __p1) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vtstq_v((int8x16_t)__p0, (int8x16_t)__p1, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vtstq_s16(int16x8_t __p0, int16x8_t __p1) {
  uint16x8_t __ret;
  __ret = (uint16x8_t) __builtin_neon_vtstq_v((int8x16_t)__p0, (int8x16_t)__p1, 49);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vtst_u8(uint8x8_t __p0, uint8x8_t __p1) {
  uint8x8_t __ret;
  __ret = (uint8x8_t) __builtin_neon_vtst_v((int8x8_t)__p0, (int8x8_t)__p1, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vtst_u32(uint32x2_t __p0, uint32x2_t __p1) {
  uint32x2_t __ret;
  __ret = (uint32x2_t) __builtin_neon_vtst_v((int8x8_t)__p0, (int8x8_t)__p1, 18);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vtst_u16(uint16x4_t __p0, uint16x4_t __p1) {
  uint16x4_t __ret;
  __ret = (uint16x4_t) __builtin_neon_vtst_v((int8x8_t)__p0, (int8x8_t)__p1, 17);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vtst_s8(int8x8_t __p0, int8x8_t __p1) {
  uint8x8_t __ret;
  __ret = (uint8x8_t) __builtin_neon_vtst_v((int8x8_t)__p0, (int8x8_t)__p1, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vtst_s32(int32x2_t __p0, int32x2_t __p1) {
  uint32x2_t __ret;
  __ret = (uint32x2_t) __builtin_neon_vtst_v((int8x8_t)__p0, (int8x8_t)__p1, 18);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vtst_s16(int16x4_t __p0, int16x4_t __p1) {
  uint16x4_t __ret;
  __ret = (uint16x4_t) __builtin_neon_vtst_v((int8x8_t)__p0, (int8x8_t)__p1, 17);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x8x2_t vuzp_p8(poly8x8_t __p0, poly8x8_t __p1) {
  poly8x8x2_t __ret;
  __builtin_neon_vuzp_v(&__ret, (int8x8_t)__p0, (int8x8_t)__p1, 4);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x4x2_t vuzp_p16(poly16x4_t __p0, poly16x4_t __p1) {
  poly16x4x2_t __ret;
  __builtin_neon_vuzp_v(&__ret, (int8x8_t)__p0, (int8x8_t)__p1, 5);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x16x2_t vuzpq_p8(poly8x16_t __p0, poly8x16_t __p1) {
  poly8x16x2_t __ret;
  __builtin_neon_vuzpq_v(&__ret, (int8x16_t)__p0, (int8x16_t)__p1, 36);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x8x2_t vuzpq_p16(poly16x8_t __p0, poly16x8_t __p1) {
  poly16x8x2_t __ret;
  __builtin_neon_vuzpq_v(&__ret, (int8x16_t)__p0, (int8x16_t)__p1, 37);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16x2_t vuzpq_u8(uint8x16_t __p0, uint8x16_t __p1) {
  uint8x16x2_t __ret;
  __builtin_neon_vuzpq_v(&__ret, (int8x16_t)__p0, (int8x16_t)__p1, 48);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4x2_t vuzpq_u32(uint32x4_t __p0, uint32x4_t __p1) {
  uint32x4x2_t __ret;
  __builtin_neon_vuzpq_v(&__ret, (int8x16_t)__p0, (int8x16_t)__p1, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8x2_t vuzpq_u16(uint16x8_t __p0, uint16x8_t __p1) {
  uint16x8x2_t __ret;
  __builtin_neon_vuzpq_v(&__ret, (int8x16_t)__p0, (int8x16_t)__p1, 49);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16x2_t vuzpq_s8(int8x16_t __p0, int8x16_t __p1) {
  int8x16x2_t __ret;
  __builtin_neon_vuzpq_v(&__ret, (int8x16_t)__p0, (int8x16_t)__p1, 32);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4x2_t vuzpq_f32(float32x4_t __p0, float32x4_t __p1) {
  float32x4x2_t __ret;
  __builtin_neon_vuzpq_v(&__ret, (int8x16_t)__p0, (int8x16_t)__p1, 41);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4x2_t vuzpq_s32(int32x4_t __p0, int32x4_t __p1) {
  int32x4x2_t __ret;
  __builtin_neon_vuzpq_v(&__ret, (int8x16_t)__p0, (int8x16_t)__p1, 34);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8x2_t vuzpq_s16(int16x8_t __p0, int16x8_t __p1) {
  int16x8x2_t __ret;
  __builtin_neon_vuzpq_v(&__ret, (int8x16_t)__p0, (int8x16_t)__p1, 33);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8x2_t vuzp_u8(uint8x8_t __p0, uint8x8_t __p1) {
  uint8x8x2_t __ret;
  __builtin_neon_vuzp_v(&__ret, (int8x8_t)__p0, (int8x8_t)__p1, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2x2_t vuzp_u32(uint32x2_t __p0, uint32x2_t __p1) {
  uint32x2x2_t __ret;
  __builtin_neon_vuzp_v(&__ret, (int8x8_t)__p0, (int8x8_t)__p1, 18);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4x2_t vuzp_u16(uint16x4_t __p0, uint16x4_t __p1) {
  uint16x4x2_t __ret;
  __builtin_neon_vuzp_v(&__ret, (int8x8_t)__p0, (int8x8_t)__p1, 17);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8x2_t vuzp_s8(int8x8_t __p0, int8x8_t __p1) {
  int8x8x2_t __ret;
  __builtin_neon_vuzp_v(&__ret, (int8x8_t)__p0, (int8x8_t)__p1, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2x2_t vuzp_f32(float32x2_t __p0, float32x2_t __p1) {
  float32x2x2_t __ret;
  __builtin_neon_vuzp_v(&__ret, (int8x8_t)__p0, (int8x8_t)__p1, 9);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2x2_t vuzp_s32(int32x2_t __p0, int32x2_t __p1) {
  int32x2x2_t __ret;
  __builtin_neon_vuzp_v(&__ret, (int8x8_t)__p0, (int8x8_t)__p1, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4x2_t vuzp_s16(int16x4_t __p0, int16x4_t __p1) {
  int16x4x2_t __ret;
  __builtin_neon_vuzp_v(&__ret, (int8x8_t)__p0, (int8x8_t)__p1, 1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x8x2_t vzip_p8(poly8x8_t __p0, poly8x8_t __p1) {
  poly8x8x2_t __ret;
  __builtin_neon_vzip_v(&__ret, (int8x8_t)__p0, (int8x8_t)__p1, 4);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x4x2_t vzip_p16(poly16x4_t __p0, poly16x4_t __p1) {
  poly16x4x2_t __ret;
  __builtin_neon_vzip_v(&__ret, (int8x8_t)__p0, (int8x8_t)__p1, 5);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x16x2_t vzipq_p8(poly8x16_t __p0, poly8x16_t __p1) {
  poly8x16x2_t __ret;
  __builtin_neon_vzipq_v(&__ret, (int8x16_t)__p0, (int8x16_t)__p1, 36);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x8x2_t vzipq_p16(poly16x8_t __p0, poly16x8_t __p1) {
  poly16x8x2_t __ret;
  __builtin_neon_vzipq_v(&__ret, (int8x16_t)__p0, (int8x16_t)__p1, 37);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16x2_t vzipq_u8(uint8x16_t __p0, uint8x16_t __p1) {
  uint8x16x2_t __ret;
  __builtin_neon_vzipq_v(&__ret, (int8x16_t)__p0, (int8x16_t)__p1, 48);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4x2_t vzipq_u32(uint32x4_t __p0, uint32x4_t __p1) {
  uint32x4x2_t __ret;
  __builtin_neon_vzipq_v(&__ret, (int8x16_t)__p0, (int8x16_t)__p1, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8x2_t vzipq_u16(uint16x8_t __p0, uint16x8_t __p1) {
  uint16x8x2_t __ret;
  __builtin_neon_vzipq_v(&__ret, (int8x16_t)__p0, (int8x16_t)__p1, 49);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16x2_t vzipq_s8(int8x16_t __p0, int8x16_t __p1) {
  int8x16x2_t __ret;
  __builtin_neon_vzipq_v(&__ret, (int8x16_t)__p0, (int8x16_t)__p1, 32);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4x2_t vzipq_f32(float32x4_t __p0, float32x4_t __p1) {
  float32x4x2_t __ret;
  __builtin_neon_vzipq_v(&__ret, (int8x16_t)__p0, (int8x16_t)__p1, 41);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4x2_t vzipq_s32(int32x4_t __p0, int32x4_t __p1) {
  int32x4x2_t __ret;
  __builtin_neon_vzipq_v(&__ret, (int8x16_t)__p0, (int8x16_t)__p1, 34);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8x2_t vzipq_s16(int16x8_t __p0, int16x8_t __p1) {
  int16x8x2_t __ret;
  __builtin_neon_vzipq_v(&__ret, (int8x16_t)__p0, (int8x16_t)__p1, 33);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8x2_t vzip_u8(uint8x8_t __p0, uint8x8_t __p1) {
  uint8x8x2_t __ret;
  __builtin_neon_vzip_v(&__ret, (int8x8_t)__p0, (int8x8_t)__p1, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2x2_t vzip_u32(uint32x2_t __p0, uint32x2_t __p1) {
  uint32x2x2_t __ret;
  __builtin_neon_vzip_v(&__ret, (int8x8_t)__p0, (int8x8_t)__p1, 18);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4x2_t vzip_u16(uint16x4_t __p0, uint16x4_t __p1) {
  uint16x4x2_t __ret;
  __builtin_neon_vzip_v(&__ret, (int8x8_t)__p0, (int8x8_t)__p1, 17);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8x2_t vzip_s8(int8x8_t __p0, int8x8_t __p1) {
  int8x8x2_t __ret;
  __builtin_neon_vzip_v(&__ret, (int8x8_t)__p0, (int8x8_t)__p1, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2x2_t vzip_f32(float32x2_t __p0, float32x2_t __p1) {
  float32x2x2_t __ret;
  __builtin_neon_vzip_v(&__ret, (int8x8_t)__p0, (int8x8_t)__p1, 9);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2x2_t vzip_s32(int32x2_t __p0, int32x2_t __p1) {
  int32x2x2_t __ret;
  __builtin_neon_vzip_v(&__ret, (int8x8_t)__p0, (int8x8_t)__p1, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4x2_t vzip_s16(int16x4_t __p0, int16x4_t __p1) {
  int16x4x2_t __ret;
  __builtin_neon_vzip_v(&__ret, (int8x8_t)__p0, (int8x8_t)__p1, 1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float16x4_t vcvt_f16_f32(float32x4_t __p0) {
  float16x4_t __ret;
  __ret = (float16x4_t) __builtin_neon_vcvt_f16_f32((int8x16_t)__p0, 8);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vcvt_f32_f16(float16x4_t __p0) {
  float32x4_t __ret;
  __ret = (float32x4_t) __builtin_neon_vcvt_f32_f16((int8x8_t)__p0, 41);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vcvtaq_s32_f32(float32x4_t __p0) {
  int32x4_t __ret;
  __ret = (int32x4_t) __builtin_neon_vcvtaq_s32_v((int8x16_t)__p0, 34);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vcvta_s32_f32(float32x2_t __p0) {
  int32x2_t __ret;
  __ret = (int32x2_t) __builtin_neon_vcvta_s32_v((int8x8_t)__p0, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vcvtaq_u32_f32(float32x4_t __p0) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vcvtaq_u32_v((int8x16_t)__p0, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vcvta_u32_f32(float32x2_t __p0) {
  uint32x2_t __ret;
  __ret = (uint32x2_t) __builtin_neon_vcvta_u32_v((int8x8_t)__p0, 18);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vcvtmq_s32_f32(float32x4_t __p0) {
  int32x4_t __ret;
  __ret = (int32x4_t) __builtin_neon_vcvtmq_s32_v((int8x16_t)__p0, 34);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vcvtm_s32_f32(float32x2_t __p0) {
  int32x2_t __ret;
  __ret = (int32x2_t) __builtin_neon_vcvtm_s32_v((int8x8_t)__p0, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vcvtmq_u32_f32(float32x4_t __p0) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vcvtmq_u32_v((int8x16_t)__p0, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vcvtm_u32_f32(float32x2_t __p0) {
  uint32x2_t __ret;
  __ret = (uint32x2_t) __builtin_neon_vcvtm_u32_v((int8x8_t)__p0, 18);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vcvtnq_s32_f32(float32x4_t __p0) {
  int32x4_t __ret;
  __ret = (int32x4_t) __builtin_neon_vcvtnq_s32_v((int8x16_t)__p0, 34);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vcvtn_s32_f32(float32x2_t __p0) {
  int32x2_t __ret;
  __ret = (int32x2_t) __builtin_neon_vcvtn_s32_v((int8x8_t)__p0, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vcvtnq_u32_f32(float32x4_t __p0) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vcvtnq_u32_v((int8x16_t)__p0, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vcvtn_u32_f32(float32x2_t __p0) {
  uint32x2_t __ret;
  __ret = (uint32x2_t) __builtin_neon_vcvtn_u32_v((int8x8_t)__p0, 18);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vcvtpq_s32_f32(float32x4_t __p0) {
  int32x4_t __ret;
  __ret = (int32x4_t) __builtin_neon_vcvtpq_s32_v((int8x16_t)__p0, 34);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vcvtp_s32_f32(float32x2_t __p0) {
  int32x2_t __ret;
  __ret = (int32x2_t) __builtin_neon_vcvtp_s32_v((int8x8_t)__p0, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vcvtpq_u32_f32(float32x4_t __p0) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vcvtpq_u32_v((int8x16_t)__p0, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vcvtp_u32_f32(float32x2_t __p0) {
  uint32x2_t __ret;
  __ret = (uint32x2_t) __builtin_neon_vcvtp_u32_v((int8x8_t)__p0, 18);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vrndq_f32(float32x4_t __p0) {
  float32x4_t __ret;
  __ret = (float32x4_t) __builtin_neon_vrndq_v((int8x16_t)__p0, 41);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vrnd_f32(float32x2_t __p0) {
  float32x2_t __ret;
  __ret = (float32x2_t) __builtin_neon_vrnd_v((int8x8_t)__p0, 9);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vrndaq_f32(float32x4_t __p0) {
  float32x4_t __ret;
  __ret = (float32x4_t) __builtin_neon_vrndaq_v((int8x16_t)__p0, 41);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vrnda_f32(float32x2_t __p0) {
  float32x2_t __ret;
  __ret = (float32x2_t) __builtin_neon_vrnda_v((int8x8_t)__p0, 9);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vrndmq_f32(float32x4_t __p0) {
  float32x4_t __ret;
  __ret = (float32x4_t) __builtin_neon_vrndmq_v((int8x16_t)__p0, 41);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vrndm_f32(float32x2_t __p0) {
  float32x2_t __ret;
  __ret = (float32x2_t) __builtin_neon_vrndm_v((int8x8_t)__p0, 9);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vrndnq_f32(float32x4_t __p0) {
  float32x4_t __ret;
  __ret = (float32x4_t) __builtin_neon_vrndnq_v((int8x16_t)__p0, 41);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vrndn_f32(float32x2_t __p0) {
  float32x2_t __ret;
  __ret = (float32x2_t) __builtin_neon_vrndn_v((int8x8_t)__p0, 9);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vrndpq_f32(float32x4_t __p0) {
  float32x4_t __ret;
  __ret = (float32x4_t) __builtin_neon_vrndpq_v((int8x16_t)__p0, 41);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vrndp_f32(float32x2_t __p0) {
  float32x2_t __ret;
  __ret = (float32x2_t) __builtin_neon_vrndp_v((int8x8_t)__p0, 9);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vrndxq_f32(float32x4_t __p0) {
  float32x4_t __ret;
  __ret = (float32x4_t) __builtin_neon_vrndxq_v((int8x16_t)__p0, 41);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vrndx_f32(float32x2_t __p0) {
  float32x2_t __ret;
  __ret = (float32x2_t) __builtin_neon_vrndx_v((int8x8_t)__p0, 9);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vmaxnmq_f32(float32x4_t __p0, float32x4_t __p1) {
  float32x4_t __ret;
  __ret = (float32x4_t) __builtin_neon_vmaxnmq_v((int8x16_t)__p0, (int8x16_t)__p1, 41);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vmaxnm_f32(float32x2_t __p0, float32x2_t __p1) {
  float32x2_t __ret;
  __ret = (float32x2_t) __builtin_neon_vmaxnm_v((int8x8_t)__p0, (int8x8_t)__p1, 9);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vminnmq_f32(float32x4_t __p0, float32x4_t __p1) {
  float32x4_t __ret;
  __ret = (float32x4_t) __builtin_neon_vminnmq_v((int8x16_t)__p0, (int8x16_t)__p1, 41);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vminnm_f32(float32x2_t __p0, float32x2_t __p1) {
  float32x2_t __ret;
  __ret = (float32x2_t) __builtin_neon_vminnm_v((int8x8_t)__p0, (int8x8_t)__p1, 9);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vcvtaq_s64_f64(float64x2_t __p0) {
  int64x2_t __ret;
  __ret = (int64x2_t) __builtin_neon_vcvtaq_s64_v((int8x16_t)__p0, 35);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x1_t vcvta_s64_f64(float64x1_t __p0) {
  int64x1_t __ret;
  __ret = (int64x1_t) __builtin_neon_vcvta_s64_v((int8x8_t)__p0, 3);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vcvtaq_u64_f64(float64x2_t __p0) {
  uint64x2_t __ret;
  __ret = (uint64x2_t) __builtin_neon_vcvtaq_u64_v((int8x16_t)__p0, 51);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vcvta_u64_f64(float64x1_t __p0) {
  uint64x1_t __ret;
  __ret = (uint64x1_t) __builtin_neon_vcvta_u64_v((int8x8_t)__p0, 19);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vcvtmq_s64_f64(float64x2_t __p0) {
  int64x2_t __ret;
  __ret = (int64x2_t) __builtin_neon_vcvtmq_s64_v((int8x16_t)__p0, 35);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x1_t vcvtm_s64_f64(float64x1_t __p0) {
  int64x1_t __ret;
  __ret = (int64x1_t) __builtin_neon_vcvtm_s64_v((int8x8_t)__p0, 3);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vcvtmq_u64_f64(float64x2_t __p0) {
  uint64x2_t __ret;
  __ret = (uint64x2_t) __builtin_neon_vcvtmq_u64_v((int8x16_t)__p0, 51);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vcvtm_u64_f64(float64x1_t __p0) {
  uint64x1_t __ret;
  __ret = (uint64x1_t) __builtin_neon_vcvtm_u64_v((int8x8_t)__p0, 19);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vcvtnq_s64_f64(float64x2_t __p0) {
  int64x2_t __ret;
  __ret = (int64x2_t) __builtin_neon_vcvtnq_s64_v((int8x16_t)__p0, 35);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x1_t vcvtn_s64_f64(float64x1_t __p0) {
  int64x1_t __ret;
  __ret = (int64x1_t) __builtin_neon_vcvtn_s64_v((int8x8_t)__p0, 3);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vcvtnq_u64_f64(float64x2_t __p0) {
  uint64x2_t __ret;
  __ret = (uint64x2_t) __builtin_neon_vcvtnq_u64_v((int8x16_t)__p0, 51);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vcvtn_u64_f64(float64x1_t __p0) {
  uint64x1_t __ret;
  __ret = (uint64x1_t) __builtin_neon_vcvtn_u64_v((int8x8_t)__p0, 19);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vcvtpq_s64_f64(float64x2_t __p0) {
  int64x2_t __ret;
  __ret = (int64x2_t) __builtin_neon_vcvtpq_s64_v((int8x16_t)__p0, 35);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x1_t vcvtp_s64_f64(float64x1_t __p0) {
  int64x1_t __ret;
  __ret = (int64x1_t) __builtin_neon_vcvtp_s64_v((int8x8_t)__p0, 3);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vcvtpq_u64_f64(float64x2_t __p0) {
  uint64x2_t __ret;
  __ret = (uint64x2_t) __builtin_neon_vcvtpq_u64_v((int8x16_t)__p0, 51);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vcvtp_u64_f64(float64x1_t __p0) {
  uint64x1_t __ret;
  __ret = (uint64x1_t) __builtin_neon_vcvtp_u64_v((int8x8_t)__p0, 19);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x8_t vreinterpret_p8_p64(poly64x1_t __p0) {
  poly8x8_t __ret;
  __ret = (poly8x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x8_t vreinterpret_p8_p16(poly16x4_t __p0) {
  poly8x8_t __ret;
  __ret = (poly8x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x8_t vreinterpret_p8_u8(uint8x8_t __p0) {
  poly8x8_t __ret;
  __ret = (poly8x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x8_t vreinterpret_p8_u32(uint32x2_t __p0) {
  poly8x8_t __ret;
  __ret = (poly8x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x8_t vreinterpret_p8_u64(uint64x1_t __p0) {
  poly8x8_t __ret;
  __ret = (poly8x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x8_t vreinterpret_p8_u16(uint16x4_t __p0) {
  poly8x8_t __ret;
  __ret = (poly8x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x8_t vreinterpret_p8_s8(int8x8_t __p0) {
  poly8x8_t __ret;
  __ret = (poly8x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x8_t vreinterpret_p8_f64(float64x1_t __p0) {
  poly8x8_t __ret;
  __ret = (poly8x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x8_t vreinterpret_p8_f32(float32x2_t __p0) {
  poly8x8_t __ret;
  __ret = (poly8x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x8_t vreinterpret_p8_f16(float16x4_t __p0) {
  poly8x8_t __ret;
  __ret = (poly8x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x8_t vreinterpret_p8_s32(int32x2_t __p0) {
  poly8x8_t __ret;
  __ret = (poly8x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x8_t vreinterpret_p8_s64(int64x1_t __p0) {
  poly8x8_t __ret;
  __ret = (poly8x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x8_t vreinterpret_p8_s16(int16x4_t __p0) {
  poly8x8_t __ret;
  __ret = (poly8x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly64x1_t vreinterpret_p64_p8(poly8x8_t __p0) {
  poly64x1_t __ret;
  __ret = (poly64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly64x1_t vreinterpret_p64_p16(poly16x4_t __p0) {
  poly64x1_t __ret;
  __ret = (poly64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly64x1_t vreinterpret_p64_u8(uint8x8_t __p0) {
  poly64x1_t __ret;
  __ret = (poly64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly64x1_t vreinterpret_p64_u32(uint32x2_t __p0) {
  poly64x1_t __ret;
  __ret = (poly64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly64x1_t vreinterpret_p64_u64(uint64x1_t __p0) {
  poly64x1_t __ret;
  __ret = (poly64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly64x1_t vreinterpret_p64_u16(uint16x4_t __p0) {
  poly64x1_t __ret;
  __ret = (poly64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly64x1_t vreinterpret_p64_s8(int8x8_t __p0) {
  poly64x1_t __ret;
  __ret = (poly64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly64x1_t vreinterpret_p64_f64(float64x1_t __p0) {
  poly64x1_t __ret;
  __ret = (poly64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly64x1_t vreinterpret_p64_f32(float32x2_t __p0) {
  poly64x1_t __ret;
  __ret = (poly64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly64x1_t vreinterpret_p64_f16(float16x4_t __p0) {
  poly64x1_t __ret;
  __ret = (poly64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly64x1_t vreinterpret_p64_s32(int32x2_t __p0) {
  poly64x1_t __ret;
  __ret = (poly64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly64x1_t vreinterpret_p64_s64(int64x1_t __p0) {
  poly64x1_t __ret;
  __ret = (poly64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly64x1_t vreinterpret_p64_s16(int16x4_t __p0) {
  poly64x1_t __ret;
  __ret = (poly64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x4_t vreinterpret_p16_p8(poly8x8_t __p0) {
  poly16x4_t __ret;
  __ret = (poly16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x4_t vreinterpret_p16_p64(poly64x1_t __p0) {
  poly16x4_t __ret;
  __ret = (poly16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x4_t vreinterpret_p16_u8(uint8x8_t __p0) {
  poly16x4_t __ret;
  __ret = (poly16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x4_t vreinterpret_p16_u32(uint32x2_t __p0) {
  poly16x4_t __ret;
  __ret = (poly16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x4_t vreinterpret_p16_u64(uint64x1_t __p0) {
  poly16x4_t __ret;
  __ret = (poly16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x4_t vreinterpret_p16_u16(uint16x4_t __p0) {
  poly16x4_t __ret;
  __ret = (poly16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x4_t vreinterpret_p16_s8(int8x8_t __p0) {
  poly16x4_t __ret;
  __ret = (poly16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x4_t vreinterpret_p16_f64(float64x1_t __p0) {
  poly16x4_t __ret;
  __ret = (poly16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x4_t vreinterpret_p16_f32(float32x2_t __p0) {
  poly16x4_t __ret;
  __ret = (poly16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x4_t vreinterpret_p16_f16(float16x4_t __p0) {
  poly16x4_t __ret;
  __ret = (poly16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x4_t vreinterpret_p16_s32(int32x2_t __p0) {
  poly16x4_t __ret;
  __ret = (poly16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x4_t vreinterpret_p16_s64(int64x1_t __p0) {
  poly16x4_t __ret;
  __ret = (poly16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x4_t vreinterpret_p16_s16(int16x4_t __p0) {
  poly16x4_t __ret;
  __ret = (poly16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x16_t vreinterpretq_p8_p128(poly128_t __p0) {
  poly8x16_t __ret;
  __ret = (poly8x16_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x16_t vreinterpretq_p8_p64(poly64x2_t __p0) {
  poly8x16_t __ret;
  __ret = (poly8x16_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x16_t vreinterpretq_p8_p16(poly16x8_t __p0) {
  poly8x16_t __ret;
  __ret = (poly8x16_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x16_t vreinterpretq_p8_u8(uint8x16_t __p0) {
  poly8x16_t __ret;
  __ret = (poly8x16_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x16_t vreinterpretq_p8_u32(uint32x4_t __p0) {
  poly8x16_t __ret;
  __ret = (poly8x16_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x16_t vreinterpretq_p8_u64(uint64x2_t __p0) {
  poly8x16_t __ret;
  __ret = (poly8x16_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x16_t vreinterpretq_p8_u16(uint16x8_t __p0) {
  poly8x16_t __ret;
  __ret = (poly8x16_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x16_t vreinterpretq_p8_s8(int8x16_t __p0) {
  poly8x16_t __ret;
  __ret = (poly8x16_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x16_t vreinterpretq_p8_f64(float64x2_t __p0) {
  poly8x16_t __ret;
  __ret = (poly8x16_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x16_t vreinterpretq_p8_f32(float32x4_t __p0) {
  poly8x16_t __ret;
  __ret = (poly8x16_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x16_t vreinterpretq_p8_f16(float16x8_t __p0) {
  poly8x16_t __ret;
  __ret = (poly8x16_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x16_t vreinterpretq_p8_s32(int32x4_t __p0) {
  poly8x16_t __ret;
  __ret = (poly8x16_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x16_t vreinterpretq_p8_s64(int64x2_t __p0) {
  poly8x16_t __ret;
  __ret = (poly8x16_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x16_t vreinterpretq_p8_s16(int16x8_t __p0) {
  poly8x16_t __ret;
  __ret = (poly8x16_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly128_t vreinterpretq_p128_p8(poly8x16_t __p0) {
  poly128_t __ret;
  __ret = (poly128_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly128_t vreinterpretq_p128_p64(poly64x2_t __p0) {
  poly128_t __ret;
  __ret = (poly128_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly128_t vreinterpretq_p128_p16(poly16x8_t __p0) {
  poly128_t __ret;
  __ret = (poly128_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly128_t vreinterpretq_p128_u8(uint8x16_t __p0) {
  poly128_t __ret;
  __ret = (poly128_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly128_t vreinterpretq_p128_u32(uint32x4_t __p0) {
  poly128_t __ret;
  __ret = (poly128_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly128_t vreinterpretq_p128_u64(uint64x2_t __p0) {
  poly128_t __ret;
  __ret = (poly128_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly128_t vreinterpretq_p128_u16(uint16x8_t __p0) {
  poly128_t __ret;
  __ret = (poly128_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly128_t vreinterpretq_p128_s8(int8x16_t __p0) {
  poly128_t __ret;
  __ret = (poly128_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly128_t vreinterpretq_p128_f64(float64x2_t __p0) {
  poly128_t __ret;
  __ret = (poly128_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly128_t vreinterpretq_p128_f32(float32x4_t __p0) {
  poly128_t __ret;
  __ret = (poly128_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly128_t vreinterpretq_p128_f16(float16x8_t __p0) {
  poly128_t __ret;
  __ret = (poly128_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly128_t vreinterpretq_p128_s32(int32x4_t __p0) {
  poly128_t __ret;
  __ret = (poly128_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly128_t vreinterpretq_p128_s64(int64x2_t __p0) {
  poly128_t __ret;
  __ret = (poly128_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly128_t vreinterpretq_p128_s16(int16x8_t __p0) {
  poly128_t __ret;
  __ret = (poly128_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly64x2_t vreinterpretq_p64_p8(poly8x16_t __p0) {
  poly64x2_t __ret;
  __ret = (poly64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly64x2_t vreinterpretq_p64_p128(poly128_t __p0) {
  poly64x2_t __ret;
  __ret = (poly64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly64x2_t vreinterpretq_p64_p16(poly16x8_t __p0) {
  poly64x2_t __ret;
  __ret = (poly64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly64x2_t vreinterpretq_p64_u8(uint8x16_t __p0) {
  poly64x2_t __ret;
  __ret = (poly64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly64x2_t vreinterpretq_p64_u32(uint32x4_t __p0) {
  poly64x2_t __ret;
  __ret = (poly64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly64x2_t vreinterpretq_p64_u64(uint64x2_t __p0) {
  poly64x2_t __ret;
  __ret = (poly64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly64x2_t vreinterpretq_p64_u16(uint16x8_t __p0) {
  poly64x2_t __ret;
  __ret = (poly64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly64x2_t vreinterpretq_p64_s8(int8x16_t __p0) {
  poly64x2_t __ret;
  __ret = (poly64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly64x2_t vreinterpretq_p64_f64(float64x2_t __p0) {
  poly64x2_t __ret;
  __ret = (poly64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly64x2_t vreinterpretq_p64_f32(float32x4_t __p0) {
  poly64x2_t __ret;
  __ret = (poly64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly64x2_t vreinterpretq_p64_f16(float16x8_t __p0) {
  poly64x2_t __ret;
  __ret = (poly64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly64x2_t vreinterpretq_p64_s32(int32x4_t __p0) {
  poly64x2_t __ret;
  __ret = (poly64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly64x2_t vreinterpretq_p64_s64(int64x2_t __p0) {
  poly64x2_t __ret;
  __ret = (poly64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly64x2_t vreinterpretq_p64_s16(int16x8_t __p0) {
  poly64x2_t __ret;
  __ret = (poly64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x8_t vreinterpretq_p16_p8(poly8x16_t __p0) {
  poly16x8_t __ret;
  __ret = (poly16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x8_t vreinterpretq_p16_p128(poly128_t __p0) {
  poly16x8_t __ret;
  __ret = (poly16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x8_t vreinterpretq_p16_p64(poly64x2_t __p0) {
  poly16x8_t __ret;
  __ret = (poly16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x8_t vreinterpretq_p16_u8(uint8x16_t __p0) {
  poly16x8_t __ret;
  __ret = (poly16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x8_t vreinterpretq_p16_u32(uint32x4_t __p0) {
  poly16x8_t __ret;
  __ret = (poly16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x8_t vreinterpretq_p16_u64(uint64x2_t __p0) {
  poly16x8_t __ret;
  __ret = (poly16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x8_t vreinterpretq_p16_u16(uint16x8_t __p0) {
  poly16x8_t __ret;
  __ret = (poly16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x8_t vreinterpretq_p16_s8(int8x16_t __p0) {
  poly16x8_t __ret;
  __ret = (poly16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x8_t vreinterpretq_p16_f64(float64x2_t __p0) {
  poly16x8_t __ret;
  __ret = (poly16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x8_t vreinterpretq_p16_f32(float32x4_t __p0) {
  poly16x8_t __ret;
  __ret = (poly16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x8_t vreinterpretq_p16_f16(float16x8_t __p0) {
  poly16x8_t __ret;
  __ret = (poly16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x8_t vreinterpretq_p16_s32(int32x4_t __p0) {
  poly16x8_t __ret;
  __ret = (poly16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x8_t vreinterpretq_p16_s64(int64x2_t __p0) {
  poly16x8_t __ret;
  __ret = (poly16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x8_t vreinterpretq_p16_s16(int16x8_t __p0) {
  poly16x8_t __ret;
  __ret = (poly16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vreinterpretq_u8_p8(poly8x16_t __p0) {
  uint8x16_t __ret;
  __ret = (uint8x16_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vreinterpretq_u8_p128(poly128_t __p0) {
  uint8x16_t __ret;
  __ret = (uint8x16_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vreinterpretq_u8_p64(poly64x2_t __p0) {
  uint8x16_t __ret;
  __ret = (uint8x16_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vreinterpretq_u8_p16(poly16x8_t __p0) {
  uint8x16_t __ret;
  __ret = (uint8x16_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vreinterpretq_u8_u32(uint32x4_t __p0) {
  uint8x16_t __ret;
  __ret = (uint8x16_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vreinterpretq_u8_u64(uint64x2_t __p0) {
  uint8x16_t __ret;
  __ret = (uint8x16_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vreinterpretq_u8_u16(uint16x8_t __p0) {
  uint8x16_t __ret;
  __ret = (uint8x16_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vreinterpretq_u8_s8(int8x16_t __p0) {
  uint8x16_t __ret;
  __ret = (uint8x16_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vreinterpretq_u8_f64(float64x2_t __p0) {
  uint8x16_t __ret;
  __ret = (uint8x16_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vreinterpretq_u8_f32(float32x4_t __p0) {
  uint8x16_t __ret;
  __ret = (uint8x16_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vreinterpretq_u8_f16(float16x8_t __p0) {
  uint8x16_t __ret;
  __ret = (uint8x16_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vreinterpretq_u8_s32(int32x4_t __p0) {
  uint8x16_t __ret;
  __ret = (uint8x16_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vreinterpretq_u8_s64(int64x2_t __p0) {
  uint8x16_t __ret;
  __ret = (uint8x16_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vreinterpretq_u8_s16(int16x8_t __p0) {
  uint8x16_t __ret;
  __ret = (uint8x16_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vreinterpretq_u32_p8(poly8x16_t __p0) {
  uint32x4_t __ret;
  __ret = (uint32x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vreinterpretq_u32_p128(poly128_t __p0) {
  uint32x4_t __ret;
  __ret = (uint32x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vreinterpretq_u32_p64(poly64x2_t __p0) {
  uint32x4_t __ret;
  __ret = (uint32x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vreinterpretq_u32_p16(poly16x8_t __p0) {
  uint32x4_t __ret;
  __ret = (uint32x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vreinterpretq_u32_u8(uint8x16_t __p0) {
  uint32x4_t __ret;
  __ret = (uint32x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vreinterpretq_u32_u64(uint64x2_t __p0) {
  uint32x4_t __ret;
  __ret = (uint32x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vreinterpretq_u32_u16(uint16x8_t __p0) {
  uint32x4_t __ret;
  __ret = (uint32x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vreinterpretq_u32_s8(int8x16_t __p0) {
  uint32x4_t __ret;
  __ret = (uint32x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vreinterpretq_u32_f64(float64x2_t __p0) {
  uint32x4_t __ret;
  __ret = (uint32x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vreinterpretq_u32_f32(float32x4_t __p0) {
  uint32x4_t __ret;
  __ret = (uint32x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vreinterpretq_u32_f16(float16x8_t __p0) {
  uint32x4_t __ret;
  __ret = (uint32x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vreinterpretq_u32_s32(int32x4_t __p0) {
  uint32x4_t __ret;
  __ret = (uint32x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vreinterpretq_u32_s64(int64x2_t __p0) {
  uint32x4_t __ret;
  __ret = (uint32x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vreinterpretq_u32_s16(int16x8_t __p0) {
  uint32x4_t __ret;
  __ret = (uint32x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vreinterpretq_u64_p8(poly8x16_t __p0) {
  uint64x2_t __ret;
  __ret = (uint64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vreinterpretq_u64_p128(poly128_t __p0) {
  uint64x2_t __ret;
  __ret = (uint64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vreinterpretq_u64_p64(poly64x2_t __p0) {
  uint64x2_t __ret;
  __ret = (uint64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vreinterpretq_u64_p16(poly16x8_t __p0) {
  uint64x2_t __ret;
  __ret = (uint64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vreinterpretq_u64_u8(uint8x16_t __p0) {
  uint64x2_t __ret;
  __ret = (uint64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vreinterpretq_u64_u32(uint32x4_t __p0) {
  uint64x2_t __ret;
  __ret = (uint64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vreinterpretq_u64_u16(uint16x8_t __p0) {
  uint64x2_t __ret;
  __ret = (uint64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vreinterpretq_u64_s8(int8x16_t __p0) {
  uint64x2_t __ret;
  __ret = (uint64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vreinterpretq_u64_f64(float64x2_t __p0) {
  uint64x2_t __ret;
  __ret = (uint64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vreinterpretq_u64_f32(float32x4_t __p0) {
  uint64x2_t __ret;
  __ret = (uint64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vreinterpretq_u64_f16(float16x8_t __p0) {
  uint64x2_t __ret;
  __ret = (uint64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vreinterpretq_u64_s32(int32x4_t __p0) {
  uint64x2_t __ret;
  __ret = (uint64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vreinterpretq_u64_s64(int64x2_t __p0) {
  uint64x2_t __ret;
  __ret = (uint64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vreinterpretq_u64_s16(int16x8_t __p0) {
  uint64x2_t __ret;
  __ret = (uint64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vreinterpretq_u16_p8(poly8x16_t __p0) {
  uint16x8_t __ret;
  __ret = (uint16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vreinterpretq_u16_p128(poly128_t __p0) {
  uint16x8_t __ret;
  __ret = (uint16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vreinterpretq_u16_p64(poly64x2_t __p0) {
  uint16x8_t __ret;
  __ret = (uint16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vreinterpretq_u16_p16(poly16x8_t __p0) {
  uint16x8_t __ret;
  __ret = (uint16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vreinterpretq_u16_u8(uint8x16_t __p0) {
  uint16x8_t __ret;
  __ret = (uint16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vreinterpretq_u16_u32(uint32x4_t __p0) {
  uint16x8_t __ret;
  __ret = (uint16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vreinterpretq_u16_u64(uint64x2_t __p0) {
  uint16x8_t __ret;
  __ret = (uint16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vreinterpretq_u16_s8(int8x16_t __p0) {
  uint16x8_t __ret;
  __ret = (uint16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vreinterpretq_u16_f64(float64x2_t __p0) {
  uint16x8_t __ret;
  __ret = (uint16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vreinterpretq_u16_f32(float32x4_t __p0) {
  uint16x8_t __ret;
  __ret = (uint16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vreinterpretq_u16_f16(float16x8_t __p0) {
  uint16x8_t __ret;
  __ret = (uint16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vreinterpretq_u16_s32(int32x4_t __p0) {
  uint16x8_t __ret;
  __ret = (uint16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vreinterpretq_u16_s64(int64x2_t __p0) {
  uint16x8_t __ret;
  __ret = (uint16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vreinterpretq_u16_s16(int16x8_t __p0) {
  uint16x8_t __ret;
  __ret = (uint16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vreinterpretq_s8_p8(poly8x16_t __p0) {
  int8x16_t __ret;
  __ret = (int8x16_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vreinterpretq_s8_p128(poly128_t __p0) {
  int8x16_t __ret;
  __ret = (int8x16_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vreinterpretq_s8_p64(poly64x2_t __p0) {
  int8x16_t __ret;
  __ret = (int8x16_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vreinterpretq_s8_p16(poly16x8_t __p0) {
  int8x16_t __ret;
  __ret = (int8x16_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vreinterpretq_s8_u8(uint8x16_t __p0) {
  int8x16_t __ret;
  __ret = (int8x16_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vreinterpretq_s8_u32(uint32x4_t __p0) {
  int8x16_t __ret;
  __ret = (int8x16_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vreinterpretq_s8_u64(uint64x2_t __p0) {
  int8x16_t __ret;
  __ret = (int8x16_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vreinterpretq_s8_u16(uint16x8_t __p0) {
  int8x16_t __ret;
  __ret = (int8x16_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vreinterpretq_s8_f64(float64x2_t __p0) {
  int8x16_t __ret;
  __ret = (int8x16_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vreinterpretq_s8_f32(float32x4_t __p0) {
  int8x16_t __ret;
  __ret = (int8x16_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vreinterpretq_s8_f16(float16x8_t __p0) {
  int8x16_t __ret;
  __ret = (int8x16_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vreinterpretq_s8_s32(int32x4_t __p0) {
  int8x16_t __ret;
  __ret = (int8x16_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vreinterpretq_s8_s64(int64x2_t __p0) {
  int8x16_t __ret;
  __ret = (int8x16_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vreinterpretq_s8_s16(int16x8_t __p0) {
  int8x16_t __ret;
  __ret = (int8x16_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vreinterpretq_f64_p8(poly8x16_t __p0) {
  float64x2_t __ret;
  __ret = (float64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vreinterpretq_f64_p128(poly128_t __p0) {
  float64x2_t __ret;
  __ret = (float64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vreinterpretq_f64_p64(poly64x2_t __p0) {
  float64x2_t __ret;
  __ret = (float64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vreinterpretq_f64_p16(poly16x8_t __p0) {
  float64x2_t __ret;
  __ret = (float64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vreinterpretq_f64_u8(uint8x16_t __p0) {
  float64x2_t __ret;
  __ret = (float64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vreinterpretq_f64_u32(uint32x4_t __p0) {
  float64x2_t __ret;
  __ret = (float64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vreinterpretq_f64_u64(uint64x2_t __p0) {
  float64x2_t __ret;
  __ret = (float64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vreinterpretq_f64_u16(uint16x8_t __p0) {
  float64x2_t __ret;
  __ret = (float64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vreinterpretq_f64_s8(int8x16_t __p0) {
  float64x2_t __ret;
  __ret = (float64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vreinterpretq_f64_f32(float32x4_t __p0) {
  float64x2_t __ret;
  __ret = (float64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vreinterpretq_f64_f16(float16x8_t __p0) {
  float64x2_t __ret;
  __ret = (float64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vreinterpretq_f64_s32(int32x4_t __p0) {
  float64x2_t __ret;
  __ret = (float64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vreinterpretq_f64_s64(int64x2_t __p0) {
  float64x2_t __ret;
  __ret = (float64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vreinterpretq_f64_s16(int16x8_t __p0) {
  float64x2_t __ret;
  __ret = (float64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vreinterpretq_f32_p8(poly8x16_t __p0) {
  float32x4_t __ret;
  __ret = (float32x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vreinterpretq_f32_p128(poly128_t __p0) {
  float32x4_t __ret;
  __ret = (float32x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vreinterpretq_f32_p64(poly64x2_t __p0) {
  float32x4_t __ret;
  __ret = (float32x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vreinterpretq_f32_p16(poly16x8_t __p0) {
  float32x4_t __ret;
  __ret = (float32x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vreinterpretq_f32_u8(uint8x16_t __p0) {
  float32x4_t __ret;
  __ret = (float32x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vreinterpretq_f32_u32(uint32x4_t __p0) {
  float32x4_t __ret;
  __ret = (float32x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vreinterpretq_f32_u64(uint64x2_t __p0) {
  float32x4_t __ret;
  __ret = (float32x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vreinterpretq_f32_u16(uint16x8_t __p0) {
  float32x4_t __ret;
  __ret = (float32x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vreinterpretq_f32_s8(int8x16_t __p0) {
  float32x4_t __ret;
  __ret = (float32x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vreinterpretq_f32_f64(float64x2_t __p0) {
  float32x4_t __ret;
  __ret = (float32x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vreinterpretq_f32_f16(float16x8_t __p0) {
  float32x4_t __ret;
  __ret = (float32x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vreinterpretq_f32_s32(int32x4_t __p0) {
  float32x4_t __ret;
  __ret = (float32x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vreinterpretq_f32_s64(int64x2_t __p0) {
  float32x4_t __ret;
  __ret = (float32x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vreinterpretq_f32_s16(int16x8_t __p0) {
  float32x4_t __ret;
  __ret = (float32x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float16x8_t vreinterpretq_f16_p8(poly8x16_t __p0) {
  float16x8_t __ret;
  __ret = (float16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float16x8_t vreinterpretq_f16_p128(poly128_t __p0) {
  float16x8_t __ret;
  __ret = (float16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float16x8_t vreinterpretq_f16_p64(poly64x2_t __p0) {
  float16x8_t __ret;
  __ret = (float16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float16x8_t vreinterpretq_f16_p16(poly16x8_t __p0) {
  float16x8_t __ret;
  __ret = (float16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float16x8_t vreinterpretq_f16_u8(uint8x16_t __p0) {
  float16x8_t __ret;
  __ret = (float16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float16x8_t vreinterpretq_f16_u32(uint32x4_t __p0) {
  float16x8_t __ret;
  __ret = (float16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float16x8_t vreinterpretq_f16_u64(uint64x2_t __p0) {
  float16x8_t __ret;
  __ret = (float16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float16x8_t vreinterpretq_f16_u16(uint16x8_t __p0) {
  float16x8_t __ret;
  __ret = (float16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float16x8_t vreinterpretq_f16_s8(int8x16_t __p0) {
  float16x8_t __ret;
  __ret = (float16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float16x8_t vreinterpretq_f16_f64(float64x2_t __p0) {
  float16x8_t __ret;
  __ret = (float16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float16x8_t vreinterpretq_f16_f32(float32x4_t __p0) {
  float16x8_t __ret;
  __ret = (float16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float16x8_t vreinterpretq_f16_s32(int32x4_t __p0) {
  float16x8_t __ret;
  __ret = (float16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float16x8_t vreinterpretq_f16_s64(int64x2_t __p0) {
  float16x8_t __ret;
  __ret = (float16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float16x8_t vreinterpretq_f16_s16(int16x8_t __p0) {
  float16x8_t __ret;
  __ret = (float16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vreinterpretq_s32_p8(poly8x16_t __p0) {
  int32x4_t __ret;
  __ret = (int32x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vreinterpretq_s32_p128(poly128_t __p0) {
  int32x4_t __ret;
  __ret = (int32x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vreinterpretq_s32_p64(poly64x2_t __p0) {
  int32x4_t __ret;
  __ret = (int32x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vreinterpretq_s32_p16(poly16x8_t __p0) {
  int32x4_t __ret;
  __ret = (int32x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vreinterpretq_s32_u8(uint8x16_t __p0) {
  int32x4_t __ret;
  __ret = (int32x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vreinterpretq_s32_u32(uint32x4_t __p0) {
  int32x4_t __ret;
  __ret = (int32x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vreinterpretq_s32_u64(uint64x2_t __p0) {
  int32x4_t __ret;
  __ret = (int32x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vreinterpretq_s32_u16(uint16x8_t __p0) {
  int32x4_t __ret;
  __ret = (int32x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vreinterpretq_s32_s8(int8x16_t __p0) {
  int32x4_t __ret;
  __ret = (int32x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vreinterpretq_s32_f64(float64x2_t __p0) {
  int32x4_t __ret;
  __ret = (int32x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vreinterpretq_s32_f32(float32x4_t __p0) {
  int32x4_t __ret;
  __ret = (int32x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vreinterpretq_s32_f16(float16x8_t __p0) {
  int32x4_t __ret;
  __ret = (int32x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vreinterpretq_s32_s64(int64x2_t __p0) {
  int32x4_t __ret;
  __ret = (int32x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vreinterpretq_s32_s16(int16x8_t __p0) {
  int32x4_t __ret;
  __ret = (int32x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vreinterpretq_s64_p8(poly8x16_t __p0) {
  int64x2_t __ret;
  __ret = (int64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vreinterpretq_s64_p128(poly128_t __p0) {
  int64x2_t __ret;
  __ret = (int64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vreinterpretq_s64_p64(poly64x2_t __p0) {
  int64x2_t __ret;
  __ret = (int64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vreinterpretq_s64_p16(poly16x8_t __p0) {
  int64x2_t __ret;
  __ret = (int64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vreinterpretq_s64_u8(uint8x16_t __p0) {
  int64x2_t __ret;
  __ret = (int64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vreinterpretq_s64_u32(uint32x4_t __p0) {
  int64x2_t __ret;
  __ret = (int64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vreinterpretq_s64_u64(uint64x2_t __p0) {
  int64x2_t __ret;
  __ret = (int64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vreinterpretq_s64_u16(uint16x8_t __p0) {
  int64x2_t __ret;
  __ret = (int64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vreinterpretq_s64_s8(int8x16_t __p0) {
  int64x2_t __ret;
  __ret = (int64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vreinterpretq_s64_f64(float64x2_t __p0) {
  int64x2_t __ret;
  __ret = (int64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vreinterpretq_s64_f32(float32x4_t __p0) {
  int64x2_t __ret;
  __ret = (int64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vreinterpretq_s64_f16(float16x8_t __p0) {
  int64x2_t __ret;
  __ret = (int64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vreinterpretq_s64_s32(int32x4_t __p0) {
  int64x2_t __ret;
  __ret = (int64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vreinterpretq_s64_s16(int16x8_t __p0) {
  int64x2_t __ret;
  __ret = (int64x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vreinterpretq_s16_p8(poly8x16_t __p0) {
  int16x8_t __ret;
  __ret = (int16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vreinterpretq_s16_p128(poly128_t __p0) {
  int16x8_t __ret;
  __ret = (int16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vreinterpretq_s16_p64(poly64x2_t __p0) {
  int16x8_t __ret;
  __ret = (int16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vreinterpretq_s16_p16(poly16x8_t __p0) {
  int16x8_t __ret;
  __ret = (int16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vreinterpretq_s16_u8(uint8x16_t __p0) {
  int16x8_t __ret;
  __ret = (int16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vreinterpretq_s16_u32(uint32x4_t __p0) {
  int16x8_t __ret;
  __ret = (int16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vreinterpretq_s16_u64(uint64x2_t __p0) {
  int16x8_t __ret;
  __ret = (int16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vreinterpretq_s16_u16(uint16x8_t __p0) {
  int16x8_t __ret;
  __ret = (int16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vreinterpretq_s16_s8(int8x16_t __p0) {
  int16x8_t __ret;
  __ret = (int16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vreinterpretq_s16_f64(float64x2_t __p0) {
  int16x8_t __ret;
  __ret = (int16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vreinterpretq_s16_f32(float32x4_t __p0) {
  int16x8_t __ret;
  __ret = (int16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vreinterpretq_s16_f16(float16x8_t __p0) {
  int16x8_t __ret;
  __ret = (int16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vreinterpretq_s16_s32(int32x4_t __p0) {
  int16x8_t __ret;
  __ret = (int16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vreinterpretq_s16_s64(int64x2_t __p0) {
  int16x8_t __ret;
  __ret = (int16x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vreinterpret_u8_p8(poly8x8_t __p0) {
  uint8x8_t __ret;
  __ret = (uint8x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vreinterpret_u8_p64(poly64x1_t __p0) {
  uint8x8_t __ret;
  __ret = (uint8x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vreinterpret_u8_p16(poly16x4_t __p0) {
  uint8x8_t __ret;
  __ret = (uint8x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vreinterpret_u8_u32(uint32x2_t __p0) {
  uint8x8_t __ret;
  __ret = (uint8x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vreinterpret_u8_u64(uint64x1_t __p0) {
  uint8x8_t __ret;
  __ret = (uint8x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vreinterpret_u8_u16(uint16x4_t __p0) {
  uint8x8_t __ret;
  __ret = (uint8x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vreinterpret_u8_s8(int8x8_t __p0) {
  uint8x8_t __ret;
  __ret = (uint8x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vreinterpret_u8_f64(float64x1_t __p0) {
  uint8x8_t __ret;
  __ret = (uint8x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vreinterpret_u8_f32(float32x2_t __p0) {
  uint8x8_t __ret;
  __ret = (uint8x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vreinterpret_u8_f16(float16x4_t __p0) {
  uint8x8_t __ret;
  __ret = (uint8x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vreinterpret_u8_s32(int32x2_t __p0) {
  uint8x8_t __ret;
  __ret = (uint8x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vreinterpret_u8_s64(int64x1_t __p0) {
  uint8x8_t __ret;
  __ret = (uint8x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vreinterpret_u8_s16(int16x4_t __p0) {
  uint8x8_t __ret;
  __ret = (uint8x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vreinterpret_u32_p8(poly8x8_t __p0) {
  uint32x2_t __ret;
  __ret = (uint32x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vreinterpret_u32_p64(poly64x1_t __p0) {
  uint32x2_t __ret;
  __ret = (uint32x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vreinterpret_u32_p16(poly16x4_t __p0) {
  uint32x2_t __ret;
  __ret = (uint32x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vreinterpret_u32_u8(uint8x8_t __p0) {
  uint32x2_t __ret;
  __ret = (uint32x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vreinterpret_u32_u64(uint64x1_t __p0) {
  uint32x2_t __ret;
  __ret = (uint32x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vreinterpret_u32_u16(uint16x4_t __p0) {
  uint32x2_t __ret;
  __ret = (uint32x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vreinterpret_u32_s8(int8x8_t __p0) {
  uint32x2_t __ret;
  __ret = (uint32x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vreinterpret_u32_f64(float64x1_t __p0) {
  uint32x2_t __ret;
  __ret = (uint32x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vreinterpret_u32_f32(float32x2_t __p0) {
  uint32x2_t __ret;
  __ret = (uint32x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vreinterpret_u32_f16(float16x4_t __p0) {
  uint32x2_t __ret;
  __ret = (uint32x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vreinterpret_u32_s32(int32x2_t __p0) {
  uint32x2_t __ret;
  __ret = (uint32x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vreinterpret_u32_s64(int64x1_t __p0) {
  uint32x2_t __ret;
  __ret = (uint32x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vreinterpret_u32_s16(int16x4_t __p0) {
  uint32x2_t __ret;
  __ret = (uint32x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vreinterpret_u64_p8(poly8x8_t __p0) {
  uint64x1_t __ret;
  __ret = (uint64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vreinterpret_u64_p64(poly64x1_t __p0) {
  uint64x1_t __ret;
  __ret = (uint64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vreinterpret_u64_p16(poly16x4_t __p0) {
  uint64x1_t __ret;
  __ret = (uint64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vreinterpret_u64_u8(uint8x8_t __p0) {
  uint64x1_t __ret;
  __ret = (uint64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vreinterpret_u64_u32(uint32x2_t __p0) {
  uint64x1_t __ret;
  __ret = (uint64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vreinterpret_u64_u16(uint16x4_t __p0) {
  uint64x1_t __ret;
  __ret = (uint64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vreinterpret_u64_s8(int8x8_t __p0) {
  uint64x1_t __ret;
  __ret = (uint64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vreinterpret_u64_f64(float64x1_t __p0) {
  uint64x1_t __ret;
  __ret = (uint64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vreinterpret_u64_f32(float32x2_t __p0) {
  uint64x1_t __ret;
  __ret = (uint64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vreinterpret_u64_f16(float16x4_t __p0) {
  uint64x1_t __ret;
  __ret = (uint64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vreinterpret_u64_s32(int32x2_t __p0) {
  uint64x1_t __ret;
  __ret = (uint64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vreinterpret_u64_s64(int64x1_t __p0) {
  uint64x1_t __ret;
  __ret = (uint64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vreinterpret_u64_s16(int16x4_t __p0) {
  uint64x1_t __ret;
  __ret = (uint64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vreinterpret_u16_p8(poly8x8_t __p0) {
  uint16x4_t __ret;
  __ret = (uint16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vreinterpret_u16_p64(poly64x1_t __p0) {
  uint16x4_t __ret;
  __ret = (uint16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vreinterpret_u16_p16(poly16x4_t __p0) {
  uint16x4_t __ret;
  __ret = (uint16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vreinterpret_u16_u8(uint8x8_t __p0) {
  uint16x4_t __ret;
  __ret = (uint16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vreinterpret_u16_u32(uint32x2_t __p0) {
  uint16x4_t __ret;
  __ret = (uint16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vreinterpret_u16_u64(uint64x1_t __p0) {
  uint16x4_t __ret;
  __ret = (uint16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vreinterpret_u16_s8(int8x8_t __p0) {
  uint16x4_t __ret;
  __ret = (uint16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vreinterpret_u16_f64(float64x1_t __p0) {
  uint16x4_t __ret;
  __ret = (uint16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vreinterpret_u16_f32(float32x2_t __p0) {
  uint16x4_t __ret;
  __ret = (uint16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vreinterpret_u16_f16(float16x4_t __p0) {
  uint16x4_t __ret;
  __ret = (uint16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vreinterpret_u16_s32(int32x2_t __p0) {
  uint16x4_t __ret;
  __ret = (uint16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vreinterpret_u16_s64(int64x1_t __p0) {
  uint16x4_t __ret;
  __ret = (uint16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vreinterpret_u16_s16(int16x4_t __p0) {
  uint16x4_t __ret;
  __ret = (uint16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vreinterpret_s8_p8(poly8x8_t __p0) {
  int8x8_t __ret;
  __ret = (int8x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vreinterpret_s8_p64(poly64x1_t __p0) {
  int8x8_t __ret;
  __ret = (int8x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vreinterpret_s8_p16(poly16x4_t __p0) {
  int8x8_t __ret;
  __ret = (int8x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vreinterpret_s8_u8(uint8x8_t __p0) {
  int8x8_t __ret;
  __ret = (int8x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vreinterpret_s8_u32(uint32x2_t __p0) {
  int8x8_t __ret;
  __ret = (int8x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vreinterpret_s8_u64(uint64x1_t __p0) {
  int8x8_t __ret;
  __ret = (int8x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vreinterpret_s8_u16(uint16x4_t __p0) {
  int8x8_t __ret;
  __ret = (int8x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vreinterpret_s8_f64(float64x1_t __p0) {
  int8x8_t __ret;
  __ret = (int8x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vreinterpret_s8_f32(float32x2_t __p0) {
  int8x8_t __ret;
  __ret = (int8x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vreinterpret_s8_f16(float16x4_t __p0) {
  int8x8_t __ret;
  __ret = (int8x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vreinterpret_s8_s32(int32x2_t __p0) {
  int8x8_t __ret;
  __ret = (int8x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vreinterpret_s8_s64(int64x1_t __p0) {
  int8x8_t __ret;
  __ret = (int8x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vreinterpret_s8_s16(int16x4_t __p0) {
  int8x8_t __ret;
  __ret = (int8x8_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x1_t vreinterpret_f64_p8(poly8x8_t __p0) {
  float64x1_t __ret;
  __ret = (float64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x1_t vreinterpret_f64_p64(poly64x1_t __p0) {
  float64x1_t __ret;
  __ret = (float64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x1_t vreinterpret_f64_p16(poly16x4_t __p0) {
  float64x1_t __ret;
  __ret = (float64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x1_t vreinterpret_f64_u8(uint8x8_t __p0) {
  float64x1_t __ret;
  __ret = (float64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x1_t vreinterpret_f64_u32(uint32x2_t __p0) {
  float64x1_t __ret;
  __ret = (float64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x1_t vreinterpret_f64_u64(uint64x1_t __p0) {
  float64x1_t __ret;
  __ret = (float64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x1_t vreinterpret_f64_u16(uint16x4_t __p0) {
  float64x1_t __ret;
  __ret = (float64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x1_t vreinterpret_f64_s8(int8x8_t __p0) {
  float64x1_t __ret;
  __ret = (float64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x1_t vreinterpret_f64_f32(float32x2_t __p0) {
  float64x1_t __ret;
  __ret = (float64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x1_t vreinterpret_f64_f16(float16x4_t __p0) {
  float64x1_t __ret;
  __ret = (float64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x1_t vreinterpret_f64_s32(int32x2_t __p0) {
  float64x1_t __ret;
  __ret = (float64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x1_t vreinterpret_f64_s64(int64x1_t __p0) {
  float64x1_t __ret;
  __ret = (float64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x1_t vreinterpret_f64_s16(int16x4_t __p0) {
  float64x1_t __ret;
  __ret = (float64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vreinterpret_f32_p8(poly8x8_t __p0) {
  float32x2_t __ret;
  __ret = (float32x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vreinterpret_f32_p64(poly64x1_t __p0) {
  float32x2_t __ret;
  __ret = (float32x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vreinterpret_f32_p16(poly16x4_t __p0) {
  float32x2_t __ret;
  __ret = (float32x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vreinterpret_f32_u8(uint8x8_t __p0) {
  float32x2_t __ret;
  __ret = (float32x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vreinterpret_f32_u32(uint32x2_t __p0) {
  float32x2_t __ret;
  __ret = (float32x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vreinterpret_f32_u64(uint64x1_t __p0) {
  float32x2_t __ret;
  __ret = (float32x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vreinterpret_f32_u16(uint16x4_t __p0) {
  float32x2_t __ret;
  __ret = (float32x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vreinterpret_f32_s8(int8x8_t __p0) {
  float32x2_t __ret;
  __ret = (float32x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vreinterpret_f32_f64(float64x1_t __p0) {
  float32x2_t __ret;
  __ret = (float32x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vreinterpret_f32_f16(float16x4_t __p0) {
  float32x2_t __ret;
  __ret = (float32x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vreinterpret_f32_s32(int32x2_t __p0) {
  float32x2_t __ret;
  __ret = (float32x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vreinterpret_f32_s64(int64x1_t __p0) {
  float32x2_t __ret;
  __ret = (float32x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vreinterpret_f32_s16(int16x4_t __p0) {
  float32x2_t __ret;
  __ret = (float32x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float16x4_t vreinterpret_f16_p8(poly8x8_t __p0) {
  float16x4_t __ret;
  __ret = (float16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float16x4_t vreinterpret_f16_p64(poly64x1_t __p0) {
  float16x4_t __ret;
  __ret = (float16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float16x4_t vreinterpret_f16_p16(poly16x4_t __p0) {
  float16x4_t __ret;
  __ret = (float16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float16x4_t vreinterpret_f16_u8(uint8x8_t __p0) {
  float16x4_t __ret;
  __ret = (float16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float16x4_t vreinterpret_f16_u32(uint32x2_t __p0) {
  float16x4_t __ret;
  __ret = (float16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float16x4_t vreinterpret_f16_u64(uint64x1_t __p0) {
  float16x4_t __ret;
  __ret = (float16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float16x4_t vreinterpret_f16_u16(uint16x4_t __p0) {
  float16x4_t __ret;
  __ret = (float16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float16x4_t vreinterpret_f16_s8(int8x8_t __p0) {
  float16x4_t __ret;
  __ret = (float16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float16x4_t vreinterpret_f16_f64(float64x1_t __p0) {
  float16x4_t __ret;
  __ret = (float16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float16x4_t vreinterpret_f16_f32(float32x2_t __p0) {
  float16x4_t __ret;
  __ret = (float16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float16x4_t vreinterpret_f16_s32(int32x2_t __p0) {
  float16x4_t __ret;
  __ret = (float16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float16x4_t vreinterpret_f16_s64(int64x1_t __p0) {
  float16x4_t __ret;
  __ret = (float16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float16x4_t vreinterpret_f16_s16(int16x4_t __p0) {
  float16x4_t __ret;
  __ret = (float16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vreinterpret_s32_p8(poly8x8_t __p0) {
  int32x2_t __ret;
  __ret = (int32x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vreinterpret_s32_p64(poly64x1_t __p0) {
  int32x2_t __ret;
  __ret = (int32x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vreinterpret_s32_p16(poly16x4_t __p0) {
  int32x2_t __ret;
  __ret = (int32x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vreinterpret_s32_u8(uint8x8_t __p0) {
  int32x2_t __ret;
  __ret = (int32x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vreinterpret_s32_u32(uint32x2_t __p0) {
  int32x2_t __ret;
  __ret = (int32x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vreinterpret_s32_u64(uint64x1_t __p0) {
  int32x2_t __ret;
  __ret = (int32x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vreinterpret_s32_u16(uint16x4_t __p0) {
  int32x2_t __ret;
  __ret = (int32x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vreinterpret_s32_s8(int8x8_t __p0) {
  int32x2_t __ret;
  __ret = (int32x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vreinterpret_s32_f64(float64x1_t __p0) {
  int32x2_t __ret;
  __ret = (int32x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vreinterpret_s32_f32(float32x2_t __p0) {
  int32x2_t __ret;
  __ret = (int32x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vreinterpret_s32_f16(float16x4_t __p0) {
  int32x2_t __ret;
  __ret = (int32x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vreinterpret_s32_s64(int64x1_t __p0) {
  int32x2_t __ret;
  __ret = (int32x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vreinterpret_s32_s16(int16x4_t __p0) {
  int32x2_t __ret;
  __ret = (int32x2_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x1_t vreinterpret_s64_p8(poly8x8_t __p0) {
  int64x1_t __ret;
  __ret = (int64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x1_t vreinterpret_s64_p64(poly64x1_t __p0) {
  int64x1_t __ret;
  __ret = (int64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x1_t vreinterpret_s64_p16(poly16x4_t __p0) {
  int64x1_t __ret;
  __ret = (int64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x1_t vreinterpret_s64_u8(uint8x8_t __p0) {
  int64x1_t __ret;
  __ret = (int64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x1_t vreinterpret_s64_u32(uint32x2_t __p0) {
  int64x1_t __ret;
  __ret = (int64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x1_t vreinterpret_s64_u64(uint64x1_t __p0) {
  int64x1_t __ret;
  __ret = (int64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x1_t vreinterpret_s64_u16(uint16x4_t __p0) {
  int64x1_t __ret;
  __ret = (int64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x1_t vreinterpret_s64_s8(int8x8_t __p0) {
  int64x1_t __ret;
  __ret = (int64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x1_t vreinterpret_s64_f64(float64x1_t __p0) {
  int64x1_t __ret;
  __ret = (int64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x1_t vreinterpret_s64_f32(float32x2_t __p0) {
  int64x1_t __ret;
  __ret = (int64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x1_t vreinterpret_s64_f16(float16x4_t __p0) {
  int64x1_t __ret;
  __ret = (int64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x1_t vreinterpret_s64_s32(int32x2_t __p0) {
  int64x1_t __ret;
  __ret = (int64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x1_t vreinterpret_s64_s16(int16x4_t __p0) {
  int64x1_t __ret;
  __ret = (int64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vreinterpret_s16_p8(poly8x8_t __p0) {
  int16x4_t __ret;
  __ret = (int16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vreinterpret_s16_p64(poly64x1_t __p0) {
  int16x4_t __ret;
  __ret = (int16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vreinterpret_s16_p16(poly16x4_t __p0) {
  int16x4_t __ret;
  __ret = (int16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vreinterpret_s16_u8(uint8x8_t __p0) {
  int16x4_t __ret;
  __ret = (int16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vreinterpret_s16_u32(uint32x2_t __p0) {
  int16x4_t __ret;
  __ret = (int16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vreinterpret_s16_u64(uint64x1_t __p0) {
  int16x4_t __ret;
  __ret = (int16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vreinterpret_s16_u16(uint16x4_t __p0) {
  int16x4_t __ret;
  __ret = (int16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vreinterpret_s16_s8(int8x8_t __p0) {
  int16x4_t __ret;
  __ret = (int16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vreinterpret_s16_f64(float64x1_t __p0) {
  int16x4_t __ret;
  __ret = (int16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vreinterpret_s16_f32(float32x2_t __p0) {
  int16x4_t __ret;
  __ret = (int16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vreinterpret_s16_f16(float16x4_t __p0) {
  int16x4_t __ret;
  __ret = (int16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vreinterpret_s16_s32(int32x2_t __p0) {
  int16x4_t __ret;
  __ret = (int16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vreinterpret_s16_s64(int64x1_t __p0) {
  int16x4_t __ret;
  __ret = (int16x4_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vrndq_f64(float64x2_t __p0) {
  float64x2_t __ret;
  __ret = (float64x2_t) __builtin_neon_vrndq_v((int8x16_t)__p0, 42);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x1_t vrnd_f64(float64x1_t __p0) {
  float64x1_t __ret;
  __ret = (float64x1_t) __builtin_neon_vrnd_v((int8x8_t)__p0, 10);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vrndaq_f64(float64x2_t __p0) {
  float64x2_t __ret;
  __ret = (float64x2_t) __builtin_neon_vrndaq_v((int8x16_t)__p0, 42);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x1_t vrnda_f64(float64x1_t __p0) {
  float64x1_t __ret;
  __ret = (float64x1_t) __builtin_neon_vrnda_v((int8x8_t)__p0, 10);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vrndiq_f64(float64x2_t __p0) {
  float64x2_t __ret;
  __ret = (float64x2_t) __builtin_neon_vrndiq_v((int8x16_t)__p0, 42);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vrndiq_f32(float32x4_t __p0) {
  float32x4_t __ret;
  __ret = (float32x4_t) __builtin_neon_vrndiq_v((int8x16_t)__p0, 41);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x1_t vrndi_f64(float64x1_t __p0) {
  float64x1_t __ret;
  __ret = (float64x1_t) __builtin_neon_vrndi_v((int8x8_t)__p0, 10);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vrndi_f32(float32x2_t __p0) {
  float32x2_t __ret;
  __ret = (float32x2_t) __builtin_neon_vrndi_v((int8x8_t)__p0, 9);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vrndmq_f64(float64x2_t __p0) {
  float64x2_t __ret;
  __ret = (float64x2_t) __builtin_neon_vrndmq_v((int8x16_t)__p0, 42);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x1_t vrndm_f64(float64x1_t __p0) {
  float64x1_t __ret;
  __ret = (float64x1_t) __builtin_neon_vrndm_v((int8x8_t)__p0, 10);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vrndnq_f64(float64x2_t __p0) {
  float64x2_t __ret;
  __ret = (float64x2_t) __builtin_neon_vrndnq_v((int8x16_t)__p0, 42);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x1_t vrndn_f64(float64x1_t __p0) {
  float64x1_t __ret;
  __ret = (float64x1_t) __builtin_neon_vrndn_v((int8x8_t)__p0, 10);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vrndpq_f64(float64x2_t __p0) {
  float64x2_t __ret;
  __ret = (float64x2_t) __builtin_neon_vrndpq_v((int8x16_t)__p0, 42);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x1_t vrndp_f64(float64x1_t __p0) {
  float64x1_t __ret;
  __ret = (float64x1_t) __builtin_neon_vrndp_v((int8x8_t)__p0, 10);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vrndxq_f64(float64x2_t __p0) {
  float64x2_t __ret;
  __ret = (float64x2_t) __builtin_neon_vrndxq_v((int8x16_t)__p0, 42);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x1_t vrndx_f64(float64x1_t __p0) {
  float64x1_t __ret;
  __ret = (float64x1_t) __builtin_neon_vrndx_v((int8x8_t)__p0, 10);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vmaxnmq_f64(float64x2_t __p0, float64x2_t __p1) {
  float64x2_t __ret;
  __ret = (float64x2_t) __builtin_neon_vmaxnmq_v((int8x16_t)__p0, (int8x16_t)__p1, 42);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x1_t vmaxnm_f64(float64x1_t __p0, float64x1_t __p1) {
  float64x1_t __ret;
  __ret = (float64x1_t) __builtin_neon_vmaxnm_v((int8x8_t)__p0, (int8x8_t)__p1, 10);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vminnmq_f64(float64x2_t __p0, float64x2_t __p1) {
  float64x2_t __ret;
  __ret = (float64x2_t) __builtin_neon_vminnmq_v((int8x16_t)__p0, (int8x16_t)__p1, 42);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x1_t vminnm_f64(float64x1_t __p0, float64x1_t __p1) {
  float64x1_t __ret;
  __ret = (float64x1_t) __builtin_neon_vminnm_v((int8x8_t)__p0, (int8x8_t)__p1, 10);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vaesdq_u8(uint8x16_t __p0, uint8x16_t __p1) {
  uint8x16_t __ret;
  __ret = (uint8x16_t) __builtin_neon_vaesdq_v((int8x16_t)__p0, (int8x16_t)__p1, 48);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vaeseq_u8(uint8x16_t __p0, uint8x16_t __p1) {
  uint8x16_t __ret;
  __ret = (uint8x16_t) __builtin_neon_vaeseq_v((int8x16_t)__p0, (int8x16_t)__p1, 48);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vaesimcq_u8(uint8x16_t __p0) {
  uint8x16_t __ret;
  __ret = (uint8x16_t) __builtin_neon_vaesimcq_v((int8x16_t)__p0, 48);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vaesmcq_u8(uint8x16_t __p0) {
  uint8x16_t __ret;
  __ret = (uint8x16_t) __builtin_neon_vaesmcq_v((int8x16_t)__p0, 48);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vsha1cq_u32(uint32x4_t __p0, uint32_t __p1, uint32x4_t __p2) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vsha1cq_u32((int8x16_t)__p0, __p1, (int8x16_t)__p2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32_t vsha1h_u32(uint32_t __p0) {
  uint32_t __ret;
  __ret = (uint32_t) __builtin_neon_vsha1h_u32(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vsha1mq_u32(uint32x4_t __p0, uint32_t __p1, uint32x4_t __p2) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vsha1mq_u32((int8x16_t)__p0, __p1, (int8x16_t)__p2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vsha1pq_u32(uint32x4_t __p0, uint32_t __p1, uint32x4_t __p2) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vsha1pq_u32((int8x16_t)__p0, __p1, (int8x16_t)__p2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vsha1su0q_u32(uint32x4_t __p0, uint32x4_t __p1, uint32x4_t __p2) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vsha1su0q_v((int8x16_t)__p0, (int8x16_t)__p1, (int8x16_t)__p2, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vsha1su1q_u32(uint32x4_t __p0, uint32x4_t __p1) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vsha1su1q_v((int8x16_t)__p0, (int8x16_t)__p1, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vsha256hq_u32(uint32x4_t __p0, uint32x4_t __p1, uint32x4_t __p2) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vsha256hq_v((int8x16_t)__p0, (int8x16_t)__p1, (int8x16_t)__p2, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vsha256h2q_u32(uint32x4_t __p0, uint32x4_t __p1, uint32x4_t __p2) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vsha256h2q_v((int8x16_t)__p0, (int8x16_t)__p1, (int8x16_t)__p2, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vsha256su0q_u32(uint32x4_t __p0, uint32x4_t __p1) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vsha256su0q_v((int8x16_t)__p0, (int8x16_t)__p1, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vsha256su1q_u32(uint32x4_t __p0, uint32x4_t __p1, uint32x4_t __p2) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vsha256su1q_v((int8x16_t)__p0, (int8x16_t)__p1, (int8x16_t)__p2, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vfmaq_f32(float32x4_t __p0, float32x4_t __p1, float32x4_t __p2) {
  float32x4_t __ret;
  __ret = (float32x4_t) __builtin_neon_vfmaq_v((int8x16_t)__p0, (int8x16_t)__p1, (int8x16_t)__p2, 41);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vfma_f32(float32x2_t __p0, float32x2_t __p1, float32x2_t __p2) {
  float32x2_t __ret;
  __ret = (float32x2_t) __builtin_neon_vfma_v((int8x8_t)__p0, (int8x8_t)__p1, (int8x8_t)__p2, 9);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vfmsq_f32(float32x4_t __p0, float32x4_t __p1, float32x4_t __p2) {
  float32x4_t __ret;
  __ret = vfmaq_f32(__p0, -__p1, __p2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vfms_f32(float32x2_t __p0, float32x2_t __p1, float32x2_t __p2) {
  float32x2_t __ret;
  __ret = vfma_f32(__p0, -__p1, __p2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vabdq_f64(float64x2_t __p0, float64x2_t __p1) {
  float64x2_t __ret;
  __ret = (float64x2_t) __builtin_neon_vabdq_v((int8x16_t)__p0, (int8x16_t)__p1, 42);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x1_t vabd_f64(float64x1_t __p0, float64x1_t __p1) {
  float64x1_t __ret;
  __ret = (float64x1_t) __builtin_neon_vabd_v((int8x8_t)__p0, (int8x8_t)__p1, 10);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64_t vabdd_f64(float64_t __p0, float64_t __p1) {
  float64_t __ret;
  __ret = (float64_t) __builtin_neon_vabdd_f64(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32_t vabds_f32(float32_t __p0, float32_t __p1) {
  float32_t __ret;
  __ret = (float32_t) __builtin_neon_vabds_f32(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vabsq_f64(float64x2_t __p0) {
  float64x2_t __ret;
  __ret = (float64x2_t) __builtin_neon_vabsq_v((int8x16_t)__p0, 42);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vabsq_s64(int64x2_t __p0) {
  int64x2_t __ret;
  __ret = (int64x2_t) __builtin_neon_vabsq_v((int8x16_t)__p0, 35);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x1_t vabs_f64(float64x1_t __p0) {
  float64x1_t __ret;
  __ret = (float64x1_t) __builtin_neon_vabs_v((int8x8_t)__p0, 10);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x1_t vabs_s64(int64x1_t __p0) {
  int64x1_t __ret;
  __ret = (int64x1_t) __builtin_neon_vabs_v((int8x8_t)__p0, 3);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64_t vabsd_s64(int64_t __p0) {
  int64_t __ret;
  __ret = (int64_t) __builtin_neon_vabsd_s64(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vaddq_f64(float64x2_t __p0, float64x2_t __p1) {
  float64x2_t __ret;
  __ret = __p0 + __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x1_t vadd_f64(float64x1_t __p0, float64x1_t __p1) {
  float64x1_t __ret;
  __ret = __p0 + __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64_t vaddd_u64(uint64_t __p0, uint64_t __p1) {
  uint64_t __ret;
  __ret = (uint64_t) __builtin_neon_vaddd_u64(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64_t vaddd_s64(int64_t __p0, int64_t __p1) {
  int64_t __ret;
  __ret = (int64_t) __builtin_neon_vaddd_s64(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vaddhn_high_u32(uint16x4_t __p0, uint32x4_t __p1, uint32x4_t __p2) {
  uint16x8_t __ret;
  __ret = vcombine_u16(__p0, vaddhn_u32(__p1, __p2));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vaddhn_high_u64(uint32x2_t __p0, uint64x2_t __p1, uint64x2_t __p2) {
  uint32x4_t __ret;
  __ret = vcombine_u32(__p0, vaddhn_u64(__p1, __p2));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vaddhn_high_u16(uint8x8_t __p0, uint16x8_t __p1, uint16x8_t __p2) {
  uint8x16_t __ret;
  __ret = vcombine_u8(__p0, vaddhn_u16(__p1, __p2));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vaddhn_high_s32(int16x4_t __p0, int32x4_t __p1, int32x4_t __p2) {
  int16x8_t __ret;
  __ret = vcombine_s16(__p0, vaddhn_s32(__p1, __p2));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vaddhn_high_s64(int32x2_t __p0, int64x2_t __p1, int64x2_t __p2) {
  int32x4_t __ret;
  __ret = vcombine_s32(__p0, vaddhn_s64(__p1, __p2));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vaddhn_high_s16(int8x8_t __p0, int16x8_t __p1, int16x8_t __p2) {
  int8x16_t __ret;
  __ret = vcombine_s8(__p0, vaddhn_s16(__p1, __p2));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16_t vaddlvq_u8(uint8x16_t __p0) {
  uint16_t __ret;
  __ret = (uint16_t) __builtin_neon_vaddlvq_u8((int8x16_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64_t vaddlvq_u32(uint32x4_t __p0) {
  uint64_t __ret;
  __ret = (uint64_t) __builtin_neon_vaddlvq_u32((int8x16_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32_t vaddlvq_u16(uint16x8_t __p0) {
  uint32_t __ret;
  __ret = (uint32_t) __builtin_neon_vaddlvq_u16((int8x16_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16_t vaddlvq_s8(int8x16_t __p0) {
  int16_t __ret;
  __ret = (int16_t) __builtin_neon_vaddlvq_s8((int8x16_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64_t vaddlvq_s32(int32x4_t __p0) {
  int64_t __ret;
  __ret = (int64_t) __builtin_neon_vaddlvq_s32((int8x16_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32_t vaddlvq_s16(int16x8_t __p0) {
  int32_t __ret;
  __ret = (int32_t) __builtin_neon_vaddlvq_s16((int8x16_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16_t vaddlv_u8(uint8x8_t __p0) {
  uint16_t __ret;
  __ret = (uint16_t) __builtin_neon_vaddlv_u8((int8x8_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64_t vaddlv_u32(uint32x2_t __p0) {
  uint64_t __ret;
  __ret = (uint64_t) __builtin_neon_vaddlv_u32((int8x8_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32_t vaddlv_u16(uint16x4_t __p0) {
  uint32_t __ret;
  __ret = (uint32_t) __builtin_neon_vaddlv_u16((int8x8_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16_t vaddlv_s8(int8x8_t __p0) {
  int16_t __ret;
  __ret = (int16_t) __builtin_neon_vaddlv_s8((int8x8_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64_t vaddlv_s32(int32x2_t __p0) {
  int64_t __ret;
  __ret = (int64_t) __builtin_neon_vaddlv_s32((int8x8_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32_t vaddlv_s16(int16x4_t __p0) {
  int32_t __ret;
  __ret = (int32_t) __builtin_neon_vaddlv_s16((int8x8_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8_t vaddvq_u8(uint8x16_t __p0) {
  uint8_t __ret;
  __ret = (uint8_t) __builtin_neon_vaddvq_u8((int8x16_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32_t vaddvq_u32(uint32x4_t __p0) {
  uint32_t __ret;
  __ret = (uint32_t) __builtin_neon_vaddvq_u32((int8x16_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64_t vaddvq_u64(uint64x2_t __p0) {
  uint64_t __ret;
  __ret = (uint64_t) __builtin_neon_vaddvq_u64((int8x16_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16_t vaddvq_u16(uint16x8_t __p0) {
  uint16_t __ret;
  __ret = (uint16_t) __builtin_neon_vaddvq_u16((int8x16_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8_t vaddvq_s8(int8x16_t __p0) {
  int8_t __ret;
  __ret = (int8_t) __builtin_neon_vaddvq_s8((int8x16_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64_t vaddvq_f64(float64x2_t __p0) {
  float64_t __ret;
  __ret = (float64_t) __builtin_neon_vaddvq_f64((int8x16_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32_t vaddvq_f32(float32x4_t __p0) {
  float32_t __ret;
  __ret = (float32_t) __builtin_neon_vaddvq_f32((int8x16_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32_t vaddvq_s32(int32x4_t __p0) {
  int32_t __ret;
  __ret = (int32_t) __builtin_neon_vaddvq_s32((int8x16_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64_t vaddvq_s64(int64x2_t __p0) {
  int64_t __ret;
  __ret = (int64_t) __builtin_neon_vaddvq_s64((int8x16_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16_t vaddvq_s16(int16x8_t __p0) {
  int16_t __ret;
  __ret = (int16_t) __builtin_neon_vaddvq_s16((int8x16_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8_t vaddv_u8(uint8x8_t __p0) {
  uint8_t __ret;
  __ret = (uint8_t) __builtin_neon_vaddv_u8((int8x8_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32_t vaddv_u32(uint32x2_t __p0) {
  uint32_t __ret;
  __ret = (uint32_t) __builtin_neon_vaddv_u32((int8x8_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16_t vaddv_u16(uint16x4_t __p0) {
  uint16_t __ret;
  __ret = (uint16_t) __builtin_neon_vaddv_u16((int8x8_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8_t vaddv_s8(int8x8_t __p0) {
  int8_t __ret;
  __ret = (int8_t) __builtin_neon_vaddv_s8((int8x8_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32_t vaddv_f32(float32x2_t __p0) {
  float32_t __ret;
  __ret = (float32_t) __builtin_neon_vaddv_f32((int8x8_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32_t vaddv_s32(int32x2_t __p0) {
  int32_t __ret;
  __ret = (int32_t) __builtin_neon_vaddv_s32((int8x8_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16_t vaddv_s16(int16x4_t __p0) {
  int16_t __ret;
  __ret = (int16_t) __builtin_neon_vaddv_s16((int8x8_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly64x1_t vbsl_p64(uint64x1_t __p0, poly64x1_t __p1, poly64x1_t __p2) {
  poly64x1_t __ret;
  __ret = (poly64x1_t) __builtin_neon_vbsl_v((int8x8_t)__p0, (int8x8_t)__p1, (int8x8_t)__p2, 6);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly64x2_t vbslq_p64(uint64x2_t __p0, poly64x2_t __p1, poly64x2_t __p2) {
  poly64x2_t __ret;
  __ret = (poly64x2_t) __builtin_neon_vbslq_v((int8x16_t)__p0, (int8x16_t)__p1, (int8x16_t)__p2, 38);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vbslq_f64(uint64x2_t __p0, float64x2_t __p1, float64x2_t __p2) {
  float64x2_t __ret;
  __ret = (float64x2_t) __builtin_neon_vbslq_v((int8x16_t)__p0, (int8x16_t)__p1, (int8x16_t)__p2, 42);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x1_t vbsl_f64(uint64x1_t __p0, float64x1_t __p1, float64x1_t __p2) {
  float64x1_t __ret;
  __ret = (float64x1_t) __builtin_neon_vbsl_v((int8x8_t)__p0, (int8x8_t)__p1, (int8x8_t)__p2, 10);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vcageq_f64(float64x2_t __p0, float64x2_t __p1) {
  uint64x2_t __ret;
  __ret = (uint64x2_t) __builtin_neon_vcageq_v((int8x16_t)__p0, (int8x16_t)__p1, 51);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vcage_f64(float64x1_t __p0, float64x1_t __p1) {
  uint64x1_t __ret;
  __ret = (uint64x1_t) __builtin_neon_vcage_v((int8x8_t)__p0, (int8x8_t)__p1, 19);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64_t vcaged_f64(float64_t __p0, float64_t __p1) {
  uint64_t __ret;
  __ret = (uint64_t) __builtin_neon_vcaged_f64(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32_t vcages_f32(float32_t __p0, float32_t __p1) {
  uint32_t __ret;
  __ret = (uint32_t) __builtin_neon_vcages_f32(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vcagtq_f64(float64x2_t __p0, float64x2_t __p1) {
  uint64x2_t __ret;
  __ret = (uint64x2_t) __builtin_neon_vcagtq_v((int8x16_t)__p0, (int8x16_t)__p1, 51);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vcagt_f64(float64x1_t __p0, float64x1_t __p1) {
  uint64x1_t __ret;
  __ret = (uint64x1_t) __builtin_neon_vcagt_v((int8x8_t)__p0, (int8x8_t)__p1, 19);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64_t vcagtd_f64(float64_t __p0, float64_t __p1) {
  uint64_t __ret;
  __ret = (uint64_t) __builtin_neon_vcagtd_f64(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32_t vcagts_f32(float32_t __p0, float32_t __p1) {
  uint32_t __ret;
  __ret = (uint32_t) __builtin_neon_vcagts_f32(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vcaleq_f64(float64x2_t __p0, float64x2_t __p1) {
  uint64x2_t __ret;
  __ret = (uint64x2_t) __builtin_neon_vcaleq_v((int8x16_t)__p0, (int8x16_t)__p1, 51);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vcale_f64(float64x1_t __p0, float64x1_t __p1) {
  uint64x1_t __ret;
  __ret = (uint64x1_t) __builtin_neon_vcale_v((int8x8_t)__p0, (int8x8_t)__p1, 19);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64_t vcaled_f64(float64_t __p0, float64_t __p1) {
  uint64_t __ret;
  __ret = (uint64_t) __builtin_neon_vcaled_f64(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32_t vcales_f32(float32_t __p0, float32_t __p1) {
  uint32_t __ret;
  __ret = (uint32_t) __builtin_neon_vcales_f32(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vcaltq_f64(float64x2_t __p0, float64x2_t __p1) {
  uint64x2_t __ret;
  __ret = (uint64x2_t) __builtin_neon_vcaltq_v((int8x16_t)__p0, (int8x16_t)__p1, 51);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vcalt_f64(float64x1_t __p0, float64x1_t __p1) {
  uint64x1_t __ret;
  __ret = (uint64x1_t) __builtin_neon_vcalt_v((int8x8_t)__p0, (int8x8_t)__p1, 19);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64_t vcaltd_f64(float64_t __p0, float64_t __p1) {
  uint64_t __ret;
  __ret = (uint64_t) __builtin_neon_vcaltd_f64(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32_t vcalts_f32(float32_t __p0, float32_t __p1) {
  uint32_t __ret;
  __ret = (uint32_t) __builtin_neon_vcalts_f32(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vceq_p64(poly64x1_t __p0, poly64x1_t __p1) {
  uint64x1_t __ret;
  __ret = (uint64x1_t)(__p0 == __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vceqq_p64(poly64x2_t __p0, poly64x2_t __p1) {
  uint64x2_t __ret;
  __ret = (uint64x2_t)(__p0 == __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vceqq_u64(uint64x2_t __p0, uint64x2_t __p1) {
  uint64x2_t __ret;
  __ret = (uint64x2_t)(__p0 == __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vceqq_f64(float64x2_t __p0, float64x2_t __p1) {
  uint64x2_t __ret;
  __ret = (uint64x2_t)(__p0 == __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vceqq_s64(int64x2_t __p0, int64x2_t __p1) {
  uint64x2_t __ret;
  __ret = (uint64x2_t)(__p0 == __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vceq_u64(uint64x1_t __p0, uint64x1_t __p1) {
  uint64x1_t __ret;
  __ret = (uint64x1_t)(__p0 == __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vceq_f64(float64x1_t __p0, float64x1_t __p1) {
  uint64x1_t __ret;
  __ret = (uint64x1_t)(__p0 == __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vceq_s64(int64x1_t __p0, int64x1_t __p1) {
  uint64x1_t __ret;
  __ret = (uint64x1_t)(__p0 == __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64_t vceqd_u64(uint64_t __p0, uint64_t __p1) {
  uint64_t __ret;
  __ret = (uint64_t) __builtin_neon_vceqd_u64(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64_t vceqd_s64(int64_t __p0, int64_t __p1) {
  int64_t __ret;
  __ret = (int64_t) __builtin_neon_vceqd_s64(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64_t vceqd_f64(float64_t __p0, float64_t __p1) {
  uint64_t __ret;
  __ret = (uint64_t) __builtin_neon_vceqd_f64(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32_t vceqs_f32(float32_t __p0, float32_t __p1) {
  uint32_t __ret;
  __ret = (uint32_t) __builtin_neon_vceqs_f32(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vceqz_p8(poly8x8_t __p0) {
  uint8x8_t __ret;
  __ret = (uint8x8_t) __builtin_neon_vceqz_v((int8x8_t)__p0, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vceqz_p64(poly64x1_t __p0) {
  uint64x1_t __ret;
  __ret = (uint64x1_t) __builtin_neon_vceqz_v((int8x8_t)__p0, 19);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vceqz_p16(poly16x4_t __p0) {
  uint16x4_t __ret;
  __ret = (uint16x4_t) __builtin_neon_vceqz_v((int8x8_t)__p0, 17);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vceqzq_p8(poly8x16_t __p0) {
  uint8x16_t __ret;
  __ret = (uint8x16_t) __builtin_neon_vceqzq_v((int8x16_t)__p0, 48);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vceqzq_p64(poly64x2_t __p0) {
  uint64x2_t __ret;
  __ret = (uint64x2_t) __builtin_neon_vceqzq_v((int8x16_t)__p0, 51);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vceqzq_p16(poly16x8_t __p0) {
  uint16x8_t __ret;
  __ret = (uint16x8_t) __builtin_neon_vceqzq_v((int8x16_t)__p0, 49);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vceqzq_u8(uint8x16_t __p0) {
  uint8x16_t __ret;
  __ret = (uint8x16_t) __builtin_neon_vceqzq_v((int8x16_t)__p0, 48);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vceqzq_u32(uint32x4_t __p0) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vceqzq_v((int8x16_t)__p0, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vceqzq_u64(uint64x2_t __p0) {
  uint64x2_t __ret;
  __ret = (uint64x2_t) __builtin_neon_vceqzq_v((int8x16_t)__p0, 51);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vceqzq_u16(uint16x8_t __p0) {
  uint16x8_t __ret;
  __ret = (uint16x8_t) __builtin_neon_vceqzq_v((int8x16_t)__p0, 49);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vceqzq_s8(int8x16_t __p0) {
  uint8x16_t __ret;
  __ret = (uint8x16_t) __builtin_neon_vceqzq_v((int8x16_t)__p0, 48);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vceqzq_f64(float64x2_t __p0) {
  uint64x2_t __ret;
  __ret = (uint64x2_t) __builtin_neon_vceqzq_v((int8x16_t)__p0, 51);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vceqzq_f32(float32x4_t __p0) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vceqzq_v((int8x16_t)__p0, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vceqzq_s32(int32x4_t __p0) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vceqzq_v((int8x16_t)__p0, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vceqzq_s64(int64x2_t __p0) {
  uint64x2_t __ret;
  __ret = (uint64x2_t) __builtin_neon_vceqzq_v((int8x16_t)__p0, 51);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vceqzq_s16(int16x8_t __p0) {
  uint16x8_t __ret;
  __ret = (uint16x8_t) __builtin_neon_vceqzq_v((int8x16_t)__p0, 49);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vceqz_u8(uint8x8_t __p0) {
  uint8x8_t __ret;
  __ret = (uint8x8_t) __builtin_neon_vceqz_v((int8x8_t)__p0, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vceqz_u32(uint32x2_t __p0) {
  uint32x2_t __ret;
  __ret = (uint32x2_t) __builtin_neon_vceqz_v((int8x8_t)__p0, 18);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vceqz_u64(uint64x1_t __p0) {
  uint64x1_t __ret;
  __ret = (uint64x1_t) __builtin_neon_vceqz_v((int8x8_t)__p0, 19);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vceqz_u16(uint16x4_t __p0) {
  uint16x4_t __ret;
  __ret = (uint16x4_t) __builtin_neon_vceqz_v((int8x8_t)__p0, 17);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vceqz_s8(int8x8_t __p0) {
  uint8x8_t __ret;
  __ret = (uint8x8_t) __builtin_neon_vceqz_v((int8x8_t)__p0, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vceqz_f64(float64x1_t __p0) {
  uint64x1_t __ret;
  __ret = (uint64x1_t) __builtin_neon_vceqz_v((int8x8_t)__p0, 19);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vceqz_f32(float32x2_t __p0) {
  uint32x2_t __ret;
  __ret = (uint32x2_t) __builtin_neon_vceqz_v((int8x8_t)__p0, 18);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vceqz_s32(int32x2_t __p0) {
  uint32x2_t __ret;
  __ret = (uint32x2_t) __builtin_neon_vceqz_v((int8x8_t)__p0, 18);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vceqz_s64(int64x1_t __p0) {
  uint64x1_t __ret;
  __ret = (uint64x1_t) __builtin_neon_vceqz_v((int8x8_t)__p0, 19);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vceqz_s16(int16x4_t __p0) {
  uint16x4_t __ret;
  __ret = (uint16x4_t) __builtin_neon_vceqz_v((int8x8_t)__p0, 17);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64_t vceqzd_u64(uint64_t __p0) {
  uint64_t __ret;
  __ret = (uint64_t) __builtin_neon_vceqzd_u64(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64_t vceqzd_s64(int64_t __p0) {
  int64_t __ret;
  __ret = (int64_t) __builtin_neon_vceqzd_s64(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64_t vceqzd_f64(float64_t __p0) {
  uint64_t __ret;
  __ret = (uint64_t) __builtin_neon_vceqzd_f64(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32_t vceqzs_f32(float32_t __p0) {
  uint32_t __ret;
  __ret = (uint32_t) __builtin_neon_vceqzs_f32(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vcgeq_u64(uint64x2_t __p0, uint64x2_t __p1) {
  uint64x2_t __ret;
  __ret = (uint64x2_t)(__p0 >= __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vcgeq_f64(float64x2_t __p0, float64x2_t __p1) {
  uint64x2_t __ret;
  __ret = (uint64x2_t)(__p0 >= __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vcgeq_s64(int64x2_t __p0, int64x2_t __p1) {
  uint64x2_t __ret;
  __ret = (uint64x2_t)(__p0 >= __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vcge_u64(uint64x1_t __p0, uint64x1_t __p1) {
  uint64x1_t __ret;
  __ret = (uint64x1_t)(__p0 >= __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vcge_f64(float64x1_t __p0, float64x1_t __p1) {
  uint64x1_t __ret;
  __ret = (uint64x1_t)(__p0 >= __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vcge_s64(int64x1_t __p0, int64x1_t __p1) {
  uint64x1_t __ret;
  __ret = (uint64x1_t)(__p0 >= __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64_t vcged_s64(int64_t __p0, int64_t __p1) {
  int64_t __ret;
  __ret = (int64_t) __builtin_neon_vcged_s64(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64_t vcged_u64(uint64_t __p0, uint64_t __p1) {
  uint64_t __ret;
  __ret = (uint64_t) __builtin_neon_vcged_u64(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64_t vcged_f64(float64_t __p0, float64_t __p1) {
  uint64_t __ret;
  __ret = (uint64_t) __builtin_neon_vcged_f64(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32_t vcges_f32(float32_t __p0, float32_t __p1) {
  uint32_t __ret;
  __ret = (uint32_t) __builtin_neon_vcges_f32(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vcgezq_s8(int8x16_t __p0) {
  uint8x16_t __ret;
  __ret = (uint8x16_t) __builtin_neon_vcgezq_v((int8x16_t)__p0, 48);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vcgezq_f64(float64x2_t __p0) {
  uint64x2_t __ret;
  __ret = (uint64x2_t) __builtin_neon_vcgezq_v((int8x16_t)__p0, 51);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vcgezq_f32(float32x4_t __p0) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vcgezq_v((int8x16_t)__p0, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vcgezq_s32(int32x4_t __p0) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vcgezq_v((int8x16_t)__p0, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vcgezq_s64(int64x2_t __p0) {
  uint64x2_t __ret;
  __ret = (uint64x2_t) __builtin_neon_vcgezq_v((int8x16_t)__p0, 51);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vcgezq_s16(int16x8_t __p0) {
  uint16x8_t __ret;
  __ret = (uint16x8_t) __builtin_neon_vcgezq_v((int8x16_t)__p0, 49);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vcgez_s8(int8x8_t __p0) {
  uint8x8_t __ret;
  __ret = (uint8x8_t) __builtin_neon_vcgez_v((int8x8_t)__p0, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vcgez_f64(float64x1_t __p0) {
  uint64x1_t __ret;
  __ret = (uint64x1_t) __builtin_neon_vcgez_v((int8x8_t)__p0, 19);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vcgez_f32(float32x2_t __p0) {
  uint32x2_t __ret;
  __ret = (uint32x2_t) __builtin_neon_vcgez_v((int8x8_t)__p0, 18);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vcgez_s32(int32x2_t __p0) {
  uint32x2_t __ret;
  __ret = (uint32x2_t) __builtin_neon_vcgez_v((int8x8_t)__p0, 18);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vcgez_s64(int64x1_t __p0) {
  uint64x1_t __ret;
  __ret = (uint64x1_t) __builtin_neon_vcgez_v((int8x8_t)__p0, 19);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vcgez_s16(int16x4_t __p0) {
  uint16x4_t __ret;
  __ret = (uint16x4_t) __builtin_neon_vcgez_v((int8x8_t)__p0, 17);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64_t vcgezd_s64(int64_t __p0) {
  int64_t __ret;
  __ret = (int64_t) __builtin_neon_vcgezd_s64(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64_t vcgezd_f64(float64_t __p0) {
  uint64_t __ret;
  __ret = (uint64_t) __builtin_neon_vcgezd_f64(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32_t vcgezs_f32(float32_t __p0) {
  uint32_t __ret;
  __ret = (uint32_t) __builtin_neon_vcgezs_f32(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vcgtq_u64(uint64x2_t __p0, uint64x2_t __p1) {
  uint64x2_t __ret;
  __ret = (uint64x2_t)(__p0 > __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vcgtq_f64(float64x2_t __p0, float64x2_t __p1) {
  uint64x2_t __ret;
  __ret = (uint64x2_t)(__p0 > __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vcgtq_s64(int64x2_t __p0, int64x2_t __p1) {
  uint64x2_t __ret;
  __ret = (uint64x2_t)(__p0 > __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vcgt_u64(uint64x1_t __p0, uint64x1_t __p1) {
  uint64x1_t __ret;
  __ret = (uint64x1_t)(__p0 > __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vcgt_f64(float64x1_t __p0, float64x1_t __p1) {
  uint64x1_t __ret;
  __ret = (uint64x1_t)(__p0 > __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vcgt_s64(int64x1_t __p0, int64x1_t __p1) {
  uint64x1_t __ret;
  __ret = (uint64x1_t)(__p0 > __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64_t vcgtd_s64(int64_t __p0, int64_t __p1) {
  int64_t __ret;
  __ret = (int64_t) __builtin_neon_vcgtd_s64(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64_t vcgtd_u64(uint64_t __p0, uint64_t __p1) {
  uint64_t __ret;
  __ret = (uint64_t) __builtin_neon_vcgtd_u64(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64_t vcgtd_f64(float64_t __p0, float64_t __p1) {
  uint64_t __ret;
  __ret = (uint64_t) __builtin_neon_vcgtd_f64(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32_t vcgts_f32(float32_t __p0, float32_t __p1) {
  uint32_t __ret;
  __ret = (uint32_t) __builtin_neon_vcgts_f32(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vcgtzq_s8(int8x16_t __p0) {
  uint8x16_t __ret;
  __ret = (uint8x16_t) __builtin_neon_vcgtzq_v((int8x16_t)__p0, 48);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vcgtzq_f64(float64x2_t __p0) {
  uint64x2_t __ret;
  __ret = (uint64x2_t) __builtin_neon_vcgtzq_v((int8x16_t)__p0, 51);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vcgtzq_f32(float32x4_t __p0) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vcgtzq_v((int8x16_t)__p0, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vcgtzq_s32(int32x4_t __p0) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vcgtzq_v((int8x16_t)__p0, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vcgtzq_s64(int64x2_t __p0) {
  uint64x2_t __ret;
  __ret = (uint64x2_t) __builtin_neon_vcgtzq_v((int8x16_t)__p0, 51);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vcgtzq_s16(int16x8_t __p0) {
  uint16x8_t __ret;
  __ret = (uint16x8_t) __builtin_neon_vcgtzq_v((int8x16_t)__p0, 49);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vcgtz_s8(int8x8_t __p0) {
  uint8x8_t __ret;
  __ret = (uint8x8_t) __builtin_neon_vcgtz_v((int8x8_t)__p0, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vcgtz_f64(float64x1_t __p0) {
  uint64x1_t __ret;
  __ret = (uint64x1_t) __builtin_neon_vcgtz_v((int8x8_t)__p0, 19);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vcgtz_f32(float32x2_t __p0) {
  uint32x2_t __ret;
  __ret = (uint32x2_t) __builtin_neon_vcgtz_v((int8x8_t)__p0, 18);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vcgtz_s32(int32x2_t __p0) {
  uint32x2_t __ret;
  __ret = (uint32x2_t) __builtin_neon_vcgtz_v((int8x8_t)__p0, 18);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vcgtz_s64(int64x1_t __p0) {
  uint64x1_t __ret;
  __ret = (uint64x1_t) __builtin_neon_vcgtz_v((int8x8_t)__p0, 19);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vcgtz_s16(int16x4_t __p0) {
  uint16x4_t __ret;
  __ret = (uint16x4_t) __builtin_neon_vcgtz_v((int8x8_t)__p0, 17);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64_t vcgtzd_s64(int64_t __p0) {
  int64_t __ret;
  __ret = (int64_t) __builtin_neon_vcgtzd_s64(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64_t vcgtzd_f64(float64_t __p0) {
  uint64_t __ret;
  __ret = (uint64_t) __builtin_neon_vcgtzd_f64(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32_t vcgtzs_f32(float32_t __p0) {
  uint32_t __ret;
  __ret = (uint32_t) __builtin_neon_vcgtzs_f32(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vcleq_u64(uint64x2_t __p0, uint64x2_t __p1) {
  uint64x2_t __ret;
  __ret = (uint64x2_t)(__p0 <= __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vcleq_f64(float64x2_t __p0, float64x2_t __p1) {
  uint64x2_t __ret;
  __ret = (uint64x2_t)(__p0 <= __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vcleq_s64(int64x2_t __p0, int64x2_t __p1) {
  uint64x2_t __ret;
  __ret = (uint64x2_t)(__p0 <= __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vcle_u64(uint64x1_t __p0, uint64x1_t __p1) {
  uint64x1_t __ret;
  __ret = (uint64x1_t)(__p0 <= __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vcle_f64(float64x1_t __p0, float64x1_t __p1) {
  uint64x1_t __ret;
  __ret = (uint64x1_t)(__p0 <= __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vcle_s64(int64x1_t __p0, int64x1_t __p1) {
  uint64x1_t __ret;
  __ret = (uint64x1_t)(__p0 <= __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64_t vcled_u64(uint64_t __p0, uint64_t __p1) {
  uint64_t __ret;
  __ret = (uint64_t) __builtin_neon_vcled_u64(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64_t vcled_s64(int64_t __p0, int64_t __p1) {
  int64_t __ret;
  __ret = (int64_t) __builtin_neon_vcled_s64(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64_t vcled_f64(float64_t __p0, float64_t __p1) {
  uint64_t __ret;
  __ret = (uint64_t) __builtin_neon_vcled_f64(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32_t vcles_f32(float32_t __p0, float32_t __p1) {
  uint32_t __ret;
  __ret = (uint32_t) __builtin_neon_vcles_f32(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vclezq_s8(int8x16_t __p0) {
  uint8x16_t __ret;
  __ret = (uint8x16_t) __builtin_neon_vclezq_v((int8x16_t)__p0, 48);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vclezq_f64(float64x2_t __p0) {
  uint64x2_t __ret;
  __ret = (uint64x2_t) __builtin_neon_vclezq_v((int8x16_t)__p0, 51);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vclezq_f32(float32x4_t __p0) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vclezq_v((int8x16_t)__p0, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vclezq_s32(int32x4_t __p0) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vclezq_v((int8x16_t)__p0, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vclezq_s64(int64x2_t __p0) {
  uint64x2_t __ret;
  __ret = (uint64x2_t) __builtin_neon_vclezq_v((int8x16_t)__p0, 51);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vclezq_s16(int16x8_t __p0) {
  uint16x8_t __ret;
  __ret = (uint16x8_t) __builtin_neon_vclezq_v((int8x16_t)__p0, 49);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vclez_s8(int8x8_t __p0) {
  uint8x8_t __ret;
  __ret = (uint8x8_t) __builtin_neon_vclez_v((int8x8_t)__p0, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vclez_f64(float64x1_t __p0) {
  uint64x1_t __ret;
  __ret = (uint64x1_t) __builtin_neon_vclez_v((int8x8_t)__p0, 19);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vclez_f32(float32x2_t __p0) {
  uint32x2_t __ret;
  __ret = (uint32x2_t) __builtin_neon_vclez_v((int8x8_t)__p0, 18);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vclez_s32(int32x2_t __p0) {
  uint32x2_t __ret;
  __ret = (uint32x2_t) __builtin_neon_vclez_v((int8x8_t)__p0, 18);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vclez_s64(int64x1_t __p0) {
  uint64x1_t __ret;
  __ret = (uint64x1_t) __builtin_neon_vclez_v((int8x8_t)__p0, 19);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vclez_s16(int16x4_t __p0) {
  uint16x4_t __ret;
  __ret = (uint16x4_t) __builtin_neon_vclez_v((int8x8_t)__p0, 17);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64_t vclezd_s64(int64_t __p0) {
  int64_t __ret;
  __ret = (int64_t) __builtin_neon_vclezd_s64(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64_t vclezd_f64(float64_t __p0) {
  uint64_t __ret;
  __ret = (uint64_t) __builtin_neon_vclezd_f64(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32_t vclezs_f32(float32_t __p0) {
  uint32_t __ret;
  __ret = (uint32_t) __builtin_neon_vclezs_f32(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vcltq_u64(uint64x2_t __p0, uint64x2_t __p1) {
  uint64x2_t __ret;
  __ret = (uint64x2_t)(__p0 < __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vcltq_f64(float64x2_t __p0, float64x2_t __p1) {
  uint64x2_t __ret;
  __ret = (uint64x2_t)(__p0 < __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vcltq_s64(int64x2_t __p0, int64x2_t __p1) {
  uint64x2_t __ret;
  __ret = (uint64x2_t)(__p0 < __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vclt_u64(uint64x1_t __p0, uint64x1_t __p1) {
  uint64x1_t __ret;
  __ret = (uint64x1_t)(__p0 < __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vclt_f64(float64x1_t __p0, float64x1_t __p1) {
  uint64x1_t __ret;
  __ret = (uint64x1_t)(__p0 < __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vclt_s64(int64x1_t __p0, int64x1_t __p1) {
  uint64x1_t __ret;
  __ret = (uint64x1_t)(__p0 < __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64_t vcltd_u64(uint64_t __p0, uint64_t __p1) {
  uint64_t __ret;
  __ret = (uint64_t) __builtin_neon_vcltd_u64(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64_t vcltd_s64(int64_t __p0, int64_t __p1) {
  int64_t __ret;
  __ret = (int64_t) __builtin_neon_vcltd_s64(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64_t vcltd_f64(float64_t __p0, float64_t __p1) {
  uint64_t __ret;
  __ret = (uint64_t) __builtin_neon_vcltd_f64(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32_t vclts_f32(float32_t __p0, float32_t __p1) {
  uint32_t __ret;
  __ret = (uint32_t) __builtin_neon_vclts_f32(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vcltzq_s8(int8x16_t __p0) {
  uint8x16_t __ret;
  __ret = (uint8x16_t) __builtin_neon_vcltzq_v((int8x16_t)__p0, 48);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vcltzq_f64(float64x2_t __p0) {
  uint64x2_t __ret;
  __ret = (uint64x2_t) __builtin_neon_vcltzq_v((int8x16_t)__p0, 51);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vcltzq_f32(float32x4_t __p0) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vcltzq_v((int8x16_t)__p0, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vcltzq_s32(int32x4_t __p0) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vcltzq_v((int8x16_t)__p0, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vcltzq_s64(int64x2_t __p0) {
  uint64x2_t __ret;
  __ret = (uint64x2_t) __builtin_neon_vcltzq_v((int8x16_t)__p0, 51);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vcltzq_s16(int16x8_t __p0) {
  uint16x8_t __ret;
  __ret = (uint16x8_t) __builtin_neon_vcltzq_v((int8x16_t)__p0, 49);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vcltz_s8(int8x8_t __p0) {
  uint8x8_t __ret;
  __ret = (uint8x8_t) __builtin_neon_vcltz_v((int8x8_t)__p0, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vcltz_f64(float64x1_t __p0) {
  uint64x1_t __ret;
  __ret = (uint64x1_t) __builtin_neon_vcltz_v((int8x8_t)__p0, 19);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vcltz_f32(float32x2_t __p0) {
  uint32x2_t __ret;
  __ret = (uint32x2_t) __builtin_neon_vcltz_v((int8x8_t)__p0, 18);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vcltz_s32(int32x2_t __p0) {
  uint32x2_t __ret;
  __ret = (uint32x2_t) __builtin_neon_vcltz_v((int8x8_t)__p0, 18);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vcltz_s64(int64x1_t __p0) {
  uint64x1_t __ret;
  __ret = (uint64x1_t) __builtin_neon_vcltz_v((int8x8_t)__p0, 19);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vcltz_s16(int16x4_t __p0) {
  uint16x4_t __ret;
  __ret = (uint16x4_t) __builtin_neon_vcltz_v((int8x8_t)__p0, 17);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64_t vcltzd_s64(int64_t __p0) {
  int64_t __ret;
  __ret = (int64_t) __builtin_neon_vcltzd_s64(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64_t vcltzd_f64(float64_t __p0) {
  uint64_t __ret;
  __ret = (uint64_t) __builtin_neon_vcltzd_f64(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32_t vcltzs_f32(float32_t __p0) {
  uint32_t __ret;
  __ret = (uint32_t) __builtin_neon_vcltzs_f32(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly64x2_t vcombine_p64(poly64x1_t __p0, poly64x1_t __p1) {
  poly64x2_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vcombine_f64(float64x1_t __p0, float64x1_t __p1) {
  float64x2_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly64x1_t vcreate_p64(uint64_t __p0) {
  poly64x1_t __ret;
  __ret = (poly64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x1_t vcreate_f64(uint64_t __p0) {
  float64x1_t __ret;
  __ret = (float64x1_t)(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32_t vcvts_f32_s32(int32_t __p0) {
  float32_t __ret;
  __ret = (float32_t) __builtin_neon_vcvts_f32_s32(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32_t vcvts_f32_u32(uint32_t __p0) {
  float32_t __ret;
  __ret = (float32_t) __builtin_neon_vcvts_f32_u32(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vcvt_f32_f64(float64x2_t __p0) {
  float32x2_t __ret;
  __ret = (float32x2_t) __builtin_neon_vcvt_f32_f64((int8x16_t)__p0, 9);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64_t vcvtd_f64_s64(int64_t __p0) {
  float64_t __ret;
  __ret = (float64_t) __builtin_neon_vcvtd_f64_s64(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64_t vcvtd_f64_u64(uint64_t __p0) {
  float64_t __ret;
  __ret = (float64_t) __builtin_neon_vcvtd_f64_u64(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vcvtq_f64_u64(uint64x2_t __p0) {
  float64x2_t __ret;
  __ret = (float64x2_t) __builtin_neon_vcvtq_f64_v((int8x16_t)__p0, 51);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vcvtq_f64_s64(int64x2_t __p0) {
  float64x2_t __ret;
  __ret = (float64x2_t) __builtin_neon_vcvtq_f64_v((int8x16_t)__p0, 35);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x1_t vcvt_f64_u64(uint64x1_t __p0) {
  float64x1_t __ret;
  __ret = (float64x1_t) __builtin_neon_vcvt_f64_v((int8x8_t)__p0, 19);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x1_t vcvt_f64_s64(int64x1_t __p0) {
  float64x1_t __ret;
  __ret = (float64x1_t) __builtin_neon_vcvt_f64_v((int8x8_t)__p0, 3);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vcvt_f64_f32(float32x2_t __p0) {
  float64x2_t __ret;
  __ret = (float64x2_t) __builtin_neon_vcvt_f64_f32((int8x8_t)__p0, 42);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float16x8_t vcvt_high_f16_f32(float16x4_t __p0, float32x4_t __p1) {
  float16x8_t __ret;
  __ret = vcombine_f16(__p0, vcvt_f16_f32(__p1));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vcvt_high_f32_f16(float16x8_t __p0) {
  float32x4_t __ret;
  __ret = vcvt_f32_f16(vget_high_f16(__p0));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vcvt_high_f32_f64(float32x2_t __p0, float64x2_t __p1) {
  float32x4_t __ret;
  __ret = vcombine_f32(__p0, vcvt_f32_f64(__p1));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vcvt_high_f64_f32(float32x4_t __p0) {
  float64x2_t __ret;
  __ret = vcvt_f64_f32(vget_high_f32(__p0));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32_t vcvts_s32_f32(float32_t __p0) {
  int32_t __ret;
  __ret = (int32_t) __builtin_neon_vcvts_s32_f32(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64_t vcvtd_s64_f64(float64_t __p0) {
  int64_t __ret;
  __ret = (int64_t) __builtin_neon_vcvtd_s64_f64(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vcvtq_s64_f64(float64x2_t __p0) {
  int64x2_t __ret;
  __ret = (int64x2_t) __builtin_neon_vcvtq_s64_v((int8x16_t)__p0, 35);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x1_t vcvt_s64_f64(float64x1_t __p0) {
  int64x1_t __ret;
  __ret = (int64x1_t) __builtin_neon_vcvt_s64_v((int8x8_t)__p0, 3);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32_t vcvts_u32_f32(float32_t __p0) {
  uint32_t __ret;
  __ret = (uint32_t) __builtin_neon_vcvts_u32_f32(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64_t vcvtd_u64_f64(float64_t __p0) {
  uint64_t __ret;
  __ret = (uint64_t) __builtin_neon_vcvtd_u64_f64(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vcvtq_u64_f64(float64x2_t __p0) {
  uint64x2_t __ret;
  __ret = (uint64x2_t) __builtin_neon_vcvtq_u64_v((int8x16_t)__p0, 51);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vcvt_u64_f64(float64x1_t __p0) {
  uint64x1_t __ret;
  __ret = (uint64x1_t) __builtin_neon_vcvt_u64_v((int8x8_t)__p0, 19);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32_t vcvtas_s32_f32(float32_t __p0) {
  int32_t __ret;
  __ret = (int32_t) __builtin_neon_vcvtas_s32_f32(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64_t vcvtad_s64_f64(float64_t __p0) {
  int64_t __ret;
  __ret = (int64_t) __builtin_neon_vcvtad_s64_f64(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32_t vcvtas_u32_f32(float32_t __p0) {
  uint32_t __ret;
  __ret = (uint32_t) __builtin_neon_vcvtas_u32_f32(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64_t vcvtad_u64_f64(float64_t __p0) {
  uint64_t __ret;
  __ret = (uint64_t) __builtin_neon_vcvtad_u64_f64(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32_t vcvtms_s32_f32(float32_t __p0) {
  int32_t __ret;
  __ret = (int32_t) __builtin_neon_vcvtms_s32_f32(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64_t vcvtmd_s64_f64(float64_t __p0) {
  int64_t __ret;
  __ret = (int64_t) __builtin_neon_vcvtmd_s64_f64(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32_t vcvtms_u32_f32(float32_t __p0) {
  uint32_t __ret;
  __ret = (uint32_t) __builtin_neon_vcvtms_u32_f32(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64_t vcvtmd_u64_f64(float64_t __p0) {
  uint64_t __ret;
  __ret = (uint64_t) __builtin_neon_vcvtmd_u64_f64(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32_t vcvtns_s32_f32(float32_t __p0) {
  int32_t __ret;
  __ret = (int32_t) __builtin_neon_vcvtns_s32_f32(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64_t vcvtnd_s64_f64(float64_t __p0) {
  int64_t __ret;
  __ret = (int64_t) __builtin_neon_vcvtnd_s64_f64(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32_t vcvtns_u32_f32(float32_t __p0) {
  uint32_t __ret;
  __ret = (uint32_t) __builtin_neon_vcvtns_u32_f32(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64_t vcvtnd_u64_f64(float64_t __p0) {
  uint64_t __ret;
  __ret = (uint64_t) __builtin_neon_vcvtnd_u64_f64(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32_t vcvtps_s32_f32(float32_t __p0) {
  int32_t __ret;
  __ret = (int32_t) __builtin_neon_vcvtps_s32_f32(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64_t vcvtpd_s64_f64(float64_t __p0) {
  int64_t __ret;
  __ret = (int64_t) __builtin_neon_vcvtpd_s64_f64(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32_t vcvtps_u32_f32(float32_t __p0) {
  uint32_t __ret;
  __ret = (uint32_t) __builtin_neon_vcvtps_u32_f32(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64_t vcvtpd_u64_f64(float64_t __p0) {
  uint64_t __ret;
  __ret = (uint64_t) __builtin_neon_vcvtpd_u64_f64(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32_t vcvtxd_f32_f64(float64_t __p0) {
  float32_t __ret;
  __ret = (float32_t) __builtin_neon_vcvtxd_f32_f64(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vcvtx_f32_f64(float64x2_t __p0) {
  float32x2_t __ret;
  __ret = (float32x2_t) __builtin_neon_vcvtx_f32_v((int8x16_t)__p0, 42);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vcvtx_high_f32_f64(float32x2_t __p0, float64x2_t __p1) {
  float32x4_t __ret;
  __ret = vcombine_f32(__p0, vcvtx_f32_f64(__p1));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vdivq_f64(float64x2_t __p0, float64x2_t __p1) {
  float64x2_t __ret;
  __ret = __p0 / __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vdivq_f32(float32x4_t __p0, float32x4_t __p1) {
  float32x4_t __ret;
  __ret = __p0 / __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x1_t vdiv_f64(float64x1_t __p0, float64x1_t __p1) {
  float64x1_t __ret;
  __ret = __p0 / __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vdiv_f32(float32x2_t __p0, float32x2_t __p1) {
  float32x2_t __ret;
  __ret = __p0 / __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly64x1_t vdup_n_p64(poly64_t __p0) {
  poly64x1_t __ret;
  __ret = (poly64x1_t) {__p0};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly64x2_t vdupq_n_p64(poly64_t __p0) {
  poly64x2_t __ret;
  __ret = (poly64x2_t) {__p0, __p0};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vdupq_n_f64(float64_t __p0) {
  float64x2_t __ret;
  __ret = (float64x2_t) {__p0, __p0};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x1_t vdup_n_f64(float64_t __p0) {
  float64x1_t __ret;
  __ret = (float64x1_t) {__p0};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vfmaq_f64(float64x2_t __p0, float64x2_t __p1, float64x2_t __p2) {
  float64x2_t __ret;
  __ret = (float64x2_t) __builtin_neon_vfmaq_v((int8x16_t)__p0, (int8x16_t)__p1, (int8x16_t)__p2, 42);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x1_t vfma_f64(float64x1_t __p0, float64x1_t __p1, float64x1_t __p2) {
  float64x1_t __ret;
  __ret = (float64x1_t) __builtin_neon_vfma_v((int8x8_t)__p0, (int8x8_t)__p1, (int8x8_t)__p2, 10);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vfmaq_n_f64(float64x2_t __p0, float64x2_t __p1, float64_t __p2) {
  float64x2_t __ret;
  __ret = vfmaq_f64(__p0, __p1, (float64x2_t) {__p2, __p2});
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vfmaq_n_f32(float32x4_t __p0, float32x4_t __p1, float32_t __p2) {
  float32x4_t __ret;
  __ret = vfmaq_f32(__p0, __p1, (float32x4_t) {__p2, __p2, __p2, __p2});
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vfma_n_f32(float32x2_t __p0, float32x2_t __p1, float32_t __p2) {
  float32x2_t __ret;
  __ret = vfma_f32(__p0, __p1, (float32x2_t) {__p2, __p2});
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vfmsq_f64(float64x2_t __p0, float64x2_t __p1, float64x2_t __p2) {
  float64x2_t __ret;
  __ret = vfmaq_f64(__p0, -__p1, __p2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x1_t vfms_f64(float64x1_t __p0, float64x1_t __p1, float64x1_t __p2) {
  float64x1_t __ret;
  __ret = vfma_f64(__p0, -__p1, __p2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vfmsq_n_f64(float64x2_t __p0, float64x2_t __p1, float64_t __p2) {
  float64x2_t __ret;
  __ret = vfmaq_f64(__p0, -__p1, (float64x2_t) {__p2, __p2});
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vfmsq_n_f32(float32x4_t __p0, float32x4_t __p1, float32_t __p2) {
  float32x4_t __ret;
  __ret = vfmaq_f32(__p0, -__p1, (float32x4_t) {__p2, __p2, __p2, __p2});
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vfms_n_f32(float32x2_t __p0, float32x2_t __p1, float32_t __p2) {
  float32x2_t __ret;
  __ret = vfma_f32(__p0, -__p1, (float32x2_t) {__p2, __p2});
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly64x1_t vget_high_p64(poly64x2_t __p0) {
  poly64x1_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x1_t vget_high_f64(float64x2_t __p0) {
  float64x1_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly64x1_t vget_low_p64(poly64x2_t __p0) {
  poly64x1_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x1_t vget_low_f64(float64x2_t __p0) {
  float64x1_t __ret;
  __ret = __builtin_shufflevector(__p0, __p0, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vmaxq_f64(float64x2_t __p0, float64x2_t __p1) {
  float64x2_t __ret;
  __ret = (float64x2_t) __builtin_neon_vmaxq_v((int8x16_t)__p0, (int8x16_t)__p1, 42);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x1_t vmax_f64(float64x1_t __p0, float64x1_t __p1) {
  float64x1_t __ret;
  __ret = (float64x1_t) __builtin_neon_vmax_v((int8x8_t)__p0, (int8x8_t)__p1, 10);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64_t vmaxnmvq_f64(float64x2_t __p0) {
  float64_t __ret;
  __ret = (float64_t) __builtin_neon_vmaxnmvq_f64((int8x16_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32_t vmaxnmvq_f32(float32x4_t __p0) {
  float32_t __ret;
  __ret = (float32_t) __builtin_neon_vmaxnmvq_f32((int8x16_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32_t vmaxnmv_f32(float32x2_t __p0) {
  float32_t __ret;
  __ret = (float32_t) __builtin_neon_vmaxnmv_f32((int8x8_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8_t vmaxvq_u8(uint8x16_t __p0) {
  uint8_t __ret;
  __ret = (uint8_t) __builtin_neon_vmaxvq_u8((int8x16_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32_t vmaxvq_u32(uint32x4_t __p0) {
  uint32_t __ret;
  __ret = (uint32_t) __builtin_neon_vmaxvq_u32((int8x16_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16_t vmaxvq_u16(uint16x8_t __p0) {
  uint16_t __ret;
  __ret = (uint16_t) __builtin_neon_vmaxvq_u16((int8x16_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8_t vmaxvq_s8(int8x16_t __p0) {
  int8_t __ret;
  __ret = (int8_t) __builtin_neon_vmaxvq_s8((int8x16_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64_t vmaxvq_f64(float64x2_t __p0) {
  float64_t __ret;
  __ret = (float64_t) __builtin_neon_vmaxvq_f64((int8x16_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32_t vmaxvq_f32(float32x4_t __p0) {
  float32_t __ret;
  __ret = (float32_t) __builtin_neon_vmaxvq_f32((int8x16_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32_t vmaxvq_s32(int32x4_t __p0) {
  int32_t __ret;
  __ret = (int32_t) __builtin_neon_vmaxvq_s32((int8x16_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16_t vmaxvq_s16(int16x8_t __p0) {
  int16_t __ret;
  __ret = (int16_t) __builtin_neon_vmaxvq_s16((int8x16_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8_t vmaxv_u8(uint8x8_t __p0) {
  uint8_t __ret;
  __ret = (uint8_t) __builtin_neon_vmaxv_u8((int8x8_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32_t vmaxv_u32(uint32x2_t __p0) {
  uint32_t __ret;
  __ret = (uint32_t) __builtin_neon_vmaxv_u32((int8x8_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16_t vmaxv_u16(uint16x4_t __p0) {
  uint16_t __ret;
  __ret = (uint16_t) __builtin_neon_vmaxv_u16((int8x8_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8_t vmaxv_s8(int8x8_t __p0) {
  int8_t __ret;
  __ret = (int8_t) __builtin_neon_vmaxv_s8((int8x8_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32_t vmaxv_f32(float32x2_t __p0) {
  float32_t __ret;
  __ret = (float32_t) __builtin_neon_vmaxv_f32((int8x8_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32_t vmaxv_s32(int32x2_t __p0) {
  int32_t __ret;
  __ret = (int32_t) __builtin_neon_vmaxv_s32((int8x8_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16_t vmaxv_s16(int16x4_t __p0) {
  int16_t __ret;
  __ret = (int16_t) __builtin_neon_vmaxv_s16((int8x8_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vminq_f64(float64x2_t __p0, float64x2_t __p1) {
  float64x2_t __ret;
  __ret = (float64x2_t) __builtin_neon_vminq_v((int8x16_t)__p0, (int8x16_t)__p1, 42);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x1_t vmin_f64(float64x1_t __p0, float64x1_t __p1) {
  float64x1_t __ret;
  __ret = (float64x1_t) __builtin_neon_vmin_v((int8x8_t)__p0, (int8x8_t)__p1, 10);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64_t vminnmvq_f64(float64x2_t __p0) {
  float64_t __ret;
  __ret = (float64_t) __builtin_neon_vminnmvq_f64((int8x16_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32_t vminnmvq_f32(float32x4_t __p0) {
  float32_t __ret;
  __ret = (float32_t) __builtin_neon_vminnmvq_f32((int8x16_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32_t vminnmv_f32(float32x2_t __p0) {
  float32_t __ret;
  __ret = (float32_t) __builtin_neon_vminnmv_f32((int8x8_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8_t vminvq_u8(uint8x16_t __p0) {
  uint8_t __ret;
  __ret = (uint8_t) __builtin_neon_vminvq_u8((int8x16_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32_t vminvq_u32(uint32x4_t __p0) {
  uint32_t __ret;
  __ret = (uint32_t) __builtin_neon_vminvq_u32((int8x16_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16_t vminvq_u16(uint16x8_t __p0) {
  uint16_t __ret;
  __ret = (uint16_t) __builtin_neon_vminvq_u16((int8x16_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8_t vminvq_s8(int8x16_t __p0) {
  int8_t __ret;
  __ret = (int8_t) __builtin_neon_vminvq_s8((int8x16_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64_t vminvq_f64(float64x2_t __p0) {
  float64_t __ret;
  __ret = (float64_t) __builtin_neon_vminvq_f64((int8x16_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32_t vminvq_f32(float32x4_t __p0) {
  float32_t __ret;
  __ret = (float32_t) __builtin_neon_vminvq_f32((int8x16_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32_t vminvq_s32(int32x4_t __p0) {
  int32_t __ret;
  __ret = (int32_t) __builtin_neon_vminvq_s32((int8x16_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16_t vminvq_s16(int16x8_t __p0) {
  int16_t __ret;
  __ret = (int16_t) __builtin_neon_vminvq_s16((int8x16_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8_t vminv_u8(uint8x8_t __p0) {
  uint8_t __ret;
  __ret = (uint8_t) __builtin_neon_vminv_u8((int8x8_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32_t vminv_u32(uint32x2_t __p0) {
  uint32_t __ret;
  __ret = (uint32_t) __builtin_neon_vminv_u32((int8x8_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16_t vminv_u16(uint16x4_t __p0) {
  uint16_t __ret;
  __ret = (uint16_t) __builtin_neon_vminv_u16((int8x8_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8_t vminv_s8(int8x8_t __p0) {
  int8_t __ret;
  __ret = (int8_t) __builtin_neon_vminv_s8((int8x8_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32_t vminv_f32(float32x2_t __p0) {
  float32_t __ret;
  __ret = (float32_t) __builtin_neon_vminv_f32((int8x8_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32_t vminv_s32(int32x2_t __p0) {
  int32_t __ret;
  __ret = (int32_t) __builtin_neon_vminv_s32((int8x8_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16_t vminv_s16(int16x4_t __p0) {
  int16_t __ret;
  __ret = (int16_t) __builtin_neon_vminv_s16((int8x8_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vmlaq_f64(float64x2_t __p0, float64x2_t __p1, float64x2_t __p2) {
  float64x2_t __ret;
  __ret = __p0 + __p1 * __p2;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x1_t vmla_f64(float64x1_t __p0, float64x1_t __p1, float64x1_t __p2) {
  float64x1_t __ret;
  __ret = __p0 + __p1 * __p2;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vmlaq_n_f64(float64x2_t __p0, float64x2_t __p1, float64_t __p2) {
  float64x2_t __ret;
  __ret = __p0 + __p1 * (float64x2_t) {__p2, __p2};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vmlsq_f64(float64x2_t __p0, float64x2_t __p1, float64x2_t __p2) {
  float64x2_t __ret;
  __ret = __p0 - __p1 * __p2;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x1_t vmls_f64(float64x1_t __p0, float64x1_t __p1, float64x1_t __p2) {
  float64x1_t __ret;
  __ret = __p0 - __p1 * __p2;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vmlsq_n_f64(float64x2_t __p0, float64x2_t __p1, float64_t __p2) {
  float64x2_t __ret;
  __ret = __p0 - __p1 * (float64x2_t) {__p2, __p2};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly64x1_t vmov_n_p64(poly64_t __p0) {
  poly64x1_t __ret;
  __ret = (poly64x1_t) {__p0};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly64x2_t vmovq_n_p64(poly64_t __p0) {
  poly64x2_t __ret;
  __ret = (poly64x2_t) {__p0, __p0};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vmovq_n_f64(float64_t __p0) {
  float64x2_t __ret;
  __ret = (float64x2_t) {__p0, __p0};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x1_t vmov_n_f64(float64_t __p0) {
  float64x1_t __ret;
  __ret = (float64x1_t) {__p0};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vmovl_high_u8(uint8x16_t __p0_112) {
  uint16x8_t __ret_112;
  uint8x8_t __a1_112 = vget_high_u8(__p0_112);
  __ret_112 = (uint16x8_t)(__extension__ ({ uint8x8_t __s0 = __a1_112; uint16x8_t __ret; __ret = (uint16x8_t) __builtin_neon_vshll_n_v((int8x8_t)__s0, 0, 49); __ret; }));
  return __ret_112;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vmovl_high_u32(uint32x4_t __p0_115) {
  uint64x2_t __ret_115;
  uint32x2_t __a1_115 = vget_high_u32(__p0_115);
  __ret_115 = (uint64x2_t)(__extension__ ({ uint32x2_t __s0 = __a1_115; uint64x2_t __ret; __ret = (uint64x2_t) __builtin_neon_vshll_n_v((int8x8_t)__s0, 0, 51); __ret; }));
  return __ret_115;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vmovl_high_u16(uint16x8_t __p0_118) {
  uint32x4_t __ret_118;
  uint16x4_t __a1_118 = vget_high_u16(__p0_118);
  __ret_118 = (uint32x4_t)(__extension__ ({ uint16x4_t __s0 = __a1_118; uint32x4_t __ret; __ret = (uint32x4_t) __builtin_neon_vshll_n_v((int8x8_t)__s0, 0, 50); __ret; }));
  return __ret_118;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vmovl_high_s8(int8x16_t __p0_121) {
  int16x8_t __ret_121;
  int8x8_t __a1_121 = vget_high_s8(__p0_121);
  __ret_121 = (int16x8_t)(__extension__ ({ int8x8_t __s0 = __a1_121; int16x8_t __ret; __ret = (int16x8_t) __builtin_neon_vshll_n_v((int8x8_t)__s0, 0, 33); __ret; }));
  return __ret_121;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vmovl_high_s32(int32x4_t __p0_124) {
  int64x2_t __ret_124;
  int32x2_t __a1_124 = vget_high_s32(__p0_124);
  __ret_124 = (int64x2_t)(__extension__ ({ int32x2_t __s0 = __a1_124; int64x2_t __ret; __ret = (int64x2_t) __builtin_neon_vshll_n_v((int8x8_t)__s0, 0, 35); __ret; }));
  return __ret_124;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vmovl_high_s16(int16x8_t __p0_127) {
  int32x4_t __ret_127;
  int16x4_t __a1_127 = vget_high_s16(__p0_127);
  __ret_127 = (int32x4_t)(__extension__ ({ int16x4_t __s0 = __a1_127; int32x4_t __ret; __ret = (int32x4_t) __builtin_neon_vshll_n_v((int8x8_t)__s0, 0, 34); __ret; }));
  return __ret_127;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vmovn_high_u32(uint16x4_t __p0, uint32x4_t __p1) {
  uint16x8_t __ret;
  __ret = vcombine_u16(__p0, vmovn_u32(__p1));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vmovn_high_u64(uint32x2_t __p0, uint64x2_t __p1) {
  uint32x4_t __ret;
  __ret = vcombine_u32(__p0, vmovn_u64(__p1));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vmovn_high_u16(uint8x8_t __p0, uint16x8_t __p1) {
  uint8x16_t __ret;
  __ret = vcombine_u8(__p0, vmovn_u16(__p1));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vmovn_high_s32(int16x4_t __p0, int32x4_t __p1) {
  int16x8_t __ret;
  __ret = vcombine_s16(__p0, vmovn_s32(__p1));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vmovn_high_s64(int32x2_t __p0, int64x2_t __p1) {
  int32x4_t __ret;
  __ret = vcombine_s32(__p0, vmovn_s64(__p1));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vmovn_high_s16(int8x8_t __p0, int16x8_t __p1) {
  int8x16_t __ret;
  __ret = vcombine_s8(__p0, vmovn_s16(__p1));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vmulq_f64(float64x2_t __p0, float64x2_t __p1) {
  float64x2_t __ret;
  __ret = __p0 * __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x1_t vmul_f64(float64x1_t __p0, float64x1_t __p1) {
  float64x1_t __ret;
  __ret = __p0 * __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x1_t vmul_n_f64(float64x1_t __p0, float64_t __p1) {
  float64x1_t __ret;
  __ret = (float64x1_t) __builtin_neon_vmul_n_f64((int8x8_t)__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vmulq_n_f64(float64x2_t __p0, float64_t __p1) {
  float64x2_t __ret;
  __ret = __p0 * (float64x2_t) {__p1, __p1};
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly128_t vmull_p64(poly64_t __p0, poly64_t __p1) {
  poly128_t __ret;
  __ret = (poly128_t) __builtin_neon_vmull_p64(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x8_t vmull_high_p8(poly8x16_t __p0, poly8x16_t __p1) {
  poly16x8_t __ret;
  __ret = vmull_p8(vget_high_p8(__p0), vget_high_p8(__p1));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vmull_high_u8(uint8x16_t __p0, uint8x16_t __p1) {
  uint16x8_t __ret;
  __ret = vmull_u8(vget_high_u8(__p0), vget_high_u8(__p1));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vmull_high_u32(uint32x4_t __p0, uint32x4_t __p1) {
  uint64x2_t __ret;
  __ret = vmull_u32(vget_high_u32(__p0), vget_high_u32(__p1));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vmull_high_u16(uint16x8_t __p0, uint16x8_t __p1) {
  uint32x4_t __ret;
  __ret = vmull_u16(vget_high_u16(__p0), vget_high_u16(__p1));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vmull_high_s8(int8x16_t __p0, int8x16_t __p1) {
  int16x8_t __ret;
  __ret = vmull_s8(vget_high_s8(__p0), vget_high_s8(__p1));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vmull_high_s32(int32x4_t __p0, int32x4_t __p1) {
  int64x2_t __ret;
  __ret = vmull_s32(vget_high_s32(__p0), vget_high_s32(__p1));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vmull_high_s16(int16x8_t __p0, int16x8_t __p1) {
  int32x4_t __ret;
  __ret = vmull_s16(vget_high_s16(__p0), vget_high_s16(__p1));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly128_t vmull_high_p64(poly64x2_t __p0, poly64x2_t __p1) {
  poly128_t __ret;
  __ret = vmull_p64((poly64_t)(vget_high_p64(__p0)), (poly64_t)(vget_high_p64(__p1)));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vmull_high_n_u32(uint32x4_t __p0, uint32_t __p1) {
  uint64x2_t __ret;
  __ret = vmull_n_u32(vget_high_u32(__p0), __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vmull_high_n_u16(uint16x8_t __p0, uint16_t __p1) {
  uint32x4_t __ret;
  __ret = vmull_n_u16(vget_high_u16(__p0), __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vmull_high_n_s32(int32x4_t __p0, int32_t __p1) {
  int64x2_t __ret;
  __ret = vmull_n_s32(vget_high_s32(__p0), __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vmull_high_n_s16(int16x8_t __p0, int16_t __p1) {
  int32x4_t __ret;
  __ret = vmull_n_s16(vget_high_s16(__p0), __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vmulxq_f64(float64x2_t __p0, float64x2_t __p1) {
  float64x2_t __ret;
  __ret = (float64x2_t) __builtin_neon_vmulxq_v((int8x16_t)__p0, (int8x16_t)__p1, 42);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vmulxq_f32(float32x4_t __p0, float32x4_t __p1) {
  float32x4_t __ret;
  __ret = (float32x4_t) __builtin_neon_vmulxq_v((int8x16_t)__p0, (int8x16_t)__p1, 41);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x1_t vmulx_f64(float64x1_t __p0, float64x1_t __p1) {
  float64x1_t __ret;
  __ret = (float64x1_t) __builtin_neon_vmulx_v((int8x8_t)__p0, (int8x8_t)__p1, 10);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vmulx_f32(float32x2_t __p0, float32x2_t __p1) {
  float32x2_t __ret;
  __ret = (float32x2_t) __builtin_neon_vmulx_v((int8x8_t)__p0, (int8x8_t)__p1, 9);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64_t vmulxd_f64(float64_t __p0, float64_t __p1) {
  float64_t __ret;
  __ret = (float64_t) __builtin_neon_vmulxd_f64(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32_t vmulxs_f32(float32_t __p0, float32_t __p1) {
  float32_t __ret;
  __ret = (float32_t) __builtin_neon_vmulxs_f32(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vnegq_f64(float64x2_t __p0) {
  float64x2_t __ret;
  __ret = -__p0;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vnegq_s64(int64x2_t __p0) {
  int64x2_t __ret;
  __ret = -__p0;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x1_t vneg_f64(float64x1_t __p0) {
  float64x1_t __ret;
  __ret = -__p0;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x1_t vneg_s64(int64x1_t __p0) {
  int64x1_t __ret;
  __ret = -__p0;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64_t vnegd_s64(int64_t __p0) {
  int64_t __ret;
  __ret = (int64_t) __builtin_neon_vnegd_s64(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vpaddq_u8(uint8x16_t __p0, uint8x16_t __p1) {
  uint8x16_t __ret;
  __ret = (uint8x16_t) __builtin_neon_vpaddq_v((int8x16_t)__p0, (int8x16_t)__p1, 48);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vpaddq_u32(uint32x4_t __p0, uint32x4_t __p1) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vpaddq_v((int8x16_t)__p0, (int8x16_t)__p1, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vpaddq_u64(uint64x2_t __p0, uint64x2_t __p1) {
  uint64x2_t __ret;
  __ret = (uint64x2_t) __builtin_neon_vpaddq_v((int8x16_t)__p0, (int8x16_t)__p1, 51);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vpaddq_u16(uint16x8_t __p0, uint16x8_t __p1) {
  uint16x8_t __ret;
  __ret = (uint16x8_t) __builtin_neon_vpaddq_v((int8x16_t)__p0, (int8x16_t)__p1, 49);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vpaddq_s8(int8x16_t __p0, int8x16_t __p1) {
  int8x16_t __ret;
  __ret = (int8x16_t) __builtin_neon_vpaddq_v((int8x16_t)__p0, (int8x16_t)__p1, 32);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vpaddq_f64(float64x2_t __p0, float64x2_t __p1) {
  float64x2_t __ret;
  __ret = (float64x2_t) __builtin_neon_vpaddq_v((int8x16_t)__p0, (int8x16_t)__p1, 42);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vpaddq_f32(float32x4_t __p0, float32x4_t __p1) {
  float32x4_t __ret;
  __ret = (float32x4_t) __builtin_neon_vpaddq_v((int8x16_t)__p0, (int8x16_t)__p1, 41);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vpaddq_s32(int32x4_t __p0, int32x4_t __p1) {
  int32x4_t __ret;
  __ret = (int32x4_t) __builtin_neon_vpaddq_v((int8x16_t)__p0, (int8x16_t)__p1, 34);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vpaddq_s64(int64x2_t __p0, int64x2_t __p1) {
  int64x2_t __ret;
  __ret = (int64x2_t) __builtin_neon_vpaddq_v((int8x16_t)__p0, (int8x16_t)__p1, 35);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vpaddq_s16(int16x8_t __p0, int16x8_t __p1) {
  int16x8_t __ret;
  __ret = (int16x8_t) __builtin_neon_vpaddq_v((int8x16_t)__p0, (int8x16_t)__p1, 33);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64_t vpaddd_u64(uint64x2_t __p0) {
  uint64_t __ret;
  __ret = (uint64_t) __builtin_neon_vpaddd_u64((int8x16_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64_t vpaddd_f64(float64x2_t __p0) {
  float64_t __ret;
  __ret = (float64_t) __builtin_neon_vpaddd_f64((int8x16_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64_t vpaddd_s64(int64x2_t __p0) {
  int64_t __ret;
  __ret = (int64_t) __builtin_neon_vpaddd_s64((int8x16_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32_t vpadds_f32(float32x2_t __p0) {
  float32_t __ret;
  __ret = (float32_t) __builtin_neon_vpadds_f32((int8x8_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vpmaxq_u8(uint8x16_t __p0, uint8x16_t __p1) {
  uint8x16_t __ret;
  __ret = (uint8x16_t) __builtin_neon_vpmaxq_v((int8x16_t)__p0, (int8x16_t)__p1, 48);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vpmaxq_u32(uint32x4_t __p0, uint32x4_t __p1) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vpmaxq_v((int8x16_t)__p0, (int8x16_t)__p1, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vpmaxq_u16(uint16x8_t __p0, uint16x8_t __p1) {
  uint16x8_t __ret;
  __ret = (uint16x8_t) __builtin_neon_vpmaxq_v((int8x16_t)__p0, (int8x16_t)__p1, 49);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vpmaxq_s8(int8x16_t __p0, int8x16_t __p1) {
  int8x16_t __ret;
  __ret = (int8x16_t) __builtin_neon_vpmaxq_v((int8x16_t)__p0, (int8x16_t)__p1, 32);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vpmaxq_f64(float64x2_t __p0, float64x2_t __p1) {
  float64x2_t __ret;
  __ret = (float64x2_t) __builtin_neon_vpmaxq_v((int8x16_t)__p0, (int8x16_t)__p1, 42);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vpmaxq_f32(float32x4_t __p0, float32x4_t __p1) {
  float32x4_t __ret;
  __ret = (float32x4_t) __builtin_neon_vpmaxq_v((int8x16_t)__p0, (int8x16_t)__p1, 41);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vpmaxq_s32(int32x4_t __p0, int32x4_t __p1) {
  int32x4_t __ret;
  __ret = (int32x4_t) __builtin_neon_vpmaxq_v((int8x16_t)__p0, (int8x16_t)__p1, 34);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vpmaxq_s16(int16x8_t __p0, int16x8_t __p1) {
  int16x8_t __ret;
  __ret = (int16x8_t) __builtin_neon_vpmaxq_v((int8x16_t)__p0, (int8x16_t)__p1, 33);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64_t vpmaxqd_f64(float64x2_t __p0) {
  float64_t __ret;
  __ret = (float64_t) __builtin_neon_vpmaxqd_f64((int8x16_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32_t vpmaxs_f32(float32x2_t __p0) {
  float32_t __ret;
  __ret = (float32_t) __builtin_neon_vpmaxs_f32((int8x8_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vpmaxnmq_f64(float64x2_t __p0, float64x2_t __p1) {
  float64x2_t __ret;
  __ret = (float64x2_t) __builtin_neon_vpmaxnmq_v((int8x16_t)__p0, (int8x16_t)__p1, 42);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vpmaxnmq_f32(float32x4_t __p0, float32x4_t __p1) {
  float32x4_t __ret;
  __ret = (float32x4_t) __builtin_neon_vpmaxnmq_v((int8x16_t)__p0, (int8x16_t)__p1, 41);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vpmaxnm_f32(float32x2_t __p0, float32x2_t __p1) {
  float32x2_t __ret;
  __ret = (float32x2_t) __builtin_neon_vpmaxnm_v((int8x8_t)__p0, (int8x8_t)__p1, 9);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64_t vpmaxnmqd_f64(float64x2_t __p0) {
  float64_t __ret;
  __ret = (float64_t) __builtin_neon_vpmaxnmqd_f64((int8x16_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32_t vpmaxnms_f32(float32x2_t __p0) {
  float32_t __ret;
  __ret = (float32_t) __builtin_neon_vpmaxnms_f32((int8x8_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vpminq_u8(uint8x16_t __p0, uint8x16_t __p1) {
  uint8x16_t __ret;
  __ret = (uint8x16_t) __builtin_neon_vpminq_v((int8x16_t)__p0, (int8x16_t)__p1, 48);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vpminq_u32(uint32x4_t __p0, uint32x4_t __p1) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vpminq_v((int8x16_t)__p0, (int8x16_t)__p1, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vpminq_u16(uint16x8_t __p0, uint16x8_t __p1) {
  uint16x8_t __ret;
  __ret = (uint16x8_t) __builtin_neon_vpminq_v((int8x16_t)__p0, (int8x16_t)__p1, 49);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vpminq_s8(int8x16_t __p0, int8x16_t __p1) {
  int8x16_t __ret;
  __ret = (int8x16_t) __builtin_neon_vpminq_v((int8x16_t)__p0, (int8x16_t)__p1, 32);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vpminq_f64(float64x2_t __p0, float64x2_t __p1) {
  float64x2_t __ret;
  __ret = (float64x2_t) __builtin_neon_vpminq_v((int8x16_t)__p0, (int8x16_t)__p1, 42);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vpminq_f32(float32x4_t __p0, float32x4_t __p1) {
  float32x4_t __ret;
  __ret = (float32x4_t) __builtin_neon_vpminq_v((int8x16_t)__p0, (int8x16_t)__p1, 41);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vpminq_s32(int32x4_t __p0, int32x4_t __p1) {
  int32x4_t __ret;
  __ret = (int32x4_t) __builtin_neon_vpminq_v((int8x16_t)__p0, (int8x16_t)__p1, 34);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vpminq_s16(int16x8_t __p0, int16x8_t __p1) {
  int16x8_t __ret;
  __ret = (int16x8_t) __builtin_neon_vpminq_v((int8x16_t)__p0, (int8x16_t)__p1, 33);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64_t vpminqd_f64(float64x2_t __p0) {
  float64_t __ret;
  __ret = (float64_t) __builtin_neon_vpminqd_f64((int8x16_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32_t vpmins_f32(float32x2_t __p0) {
  float32_t __ret;
  __ret = (float32_t) __builtin_neon_vpmins_f32((int8x8_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vpminnmq_f64(float64x2_t __p0, float64x2_t __p1) {
  float64x2_t __ret;
  __ret = (float64x2_t) __builtin_neon_vpminnmq_v((int8x16_t)__p0, (int8x16_t)__p1, 42);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vpminnmq_f32(float32x4_t __p0, float32x4_t __p1) {
  float32x4_t __ret;
  __ret = (float32x4_t) __builtin_neon_vpminnmq_v((int8x16_t)__p0, (int8x16_t)__p1, 41);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vpminnm_f32(float32x2_t __p0, float32x2_t __p1) {
  float32x2_t __ret;
  __ret = (float32x2_t) __builtin_neon_vpminnm_v((int8x8_t)__p0, (int8x8_t)__p1, 9);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64_t vpminnmqd_f64(float64x2_t __p0) {
  float64_t __ret;
  __ret = (float64_t) __builtin_neon_vpminnmqd_f64((int8x16_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32_t vpminnms_f32(float32x2_t __p0) {
  float32_t __ret;
  __ret = (float32_t) __builtin_neon_vpminnms_f32((int8x8_t)__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vqabsq_s64(int64x2_t __p0) {
  int64x2_t __ret;
  __ret = (int64x2_t) __builtin_neon_vqabsq_v((int8x16_t)__p0, 35);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x1_t vqabs_s64(int64x1_t __p0) {
  int64x1_t __ret;
  __ret = (int64x1_t) __builtin_neon_vqabs_v((int8x8_t)__p0, 3);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8_t vqabsb_s8(int8_t __p0) {
  int8_t __ret;
  __ret = (int8_t) __builtin_neon_vqabsb_s8(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32_t vqabss_s32(int32_t __p0) {
  int32_t __ret;
  __ret = (int32_t) __builtin_neon_vqabss_s32(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64_t vqabsd_s64(int64_t __p0) {
  int64_t __ret;
  __ret = (int64_t) __builtin_neon_vqabsd_s64(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16_t vqabsh_s16(int16_t __p0) {
  int16_t __ret;
  __ret = (int16_t) __builtin_neon_vqabsh_s16(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8_t vqaddb_u8(uint8_t __p0, uint8_t __p1) {
  uint8_t __ret;
  __ret = (uint8_t) __builtin_neon_vqaddb_u8(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32_t vqadds_u32(uint32_t __p0, uint32_t __p1) {
  uint32_t __ret;
  __ret = (uint32_t) __builtin_neon_vqadds_u32(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64_t vqaddd_u64(uint64_t __p0, uint64_t __p1) {
  uint64_t __ret;
  __ret = (uint64_t) __builtin_neon_vqaddd_u64(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16_t vqaddh_u16(uint16_t __p0, uint16_t __p1) {
  uint16_t __ret;
  __ret = (uint16_t) __builtin_neon_vqaddh_u16(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8_t vqaddb_s8(int8_t __p0, int8_t __p1) {
  int8_t __ret;
  __ret = (int8_t) __builtin_neon_vqaddb_s8(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32_t vqadds_s32(int32_t __p0, int32_t __p1) {
  int32_t __ret;
  __ret = (int32_t) __builtin_neon_vqadds_s32(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64_t vqaddd_s64(int64_t __p0, int64_t __p1) {
  int64_t __ret;
  __ret = (int64_t) __builtin_neon_vqaddd_s64(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16_t vqaddh_s16(int16_t __p0, int16_t __p1) {
  int16_t __ret;
  __ret = (int16_t) __builtin_neon_vqaddh_s16(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64_t vqdmlals_s32(int64_t __p0, int32_t __p1, int32_t __p2) {
  int64_t __ret;
  __ret = (int64_t) __builtin_neon_vqdmlals_s32(__p0, __p1, __p2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32_t vqdmlalh_s16(int32_t __p0, int16_t __p1, int16_t __p2) {
  int32_t __ret;
  __ret = (int32_t) __builtin_neon_vqdmlalh_s16(__p0, __p1, __p2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vqdmlal_high_s32(int64x2_t __p0, int32x4_t __p1, int32x4_t __p2) {
  int64x2_t __ret;
  __ret = vqdmlal_s32(__p0, vget_high_s32(__p1), vget_high_s32(__p2));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vqdmlal_high_s16(int32x4_t __p0, int16x8_t __p1, int16x8_t __p2) {
  int32x4_t __ret;
  __ret = vqdmlal_s16(__p0, vget_high_s16(__p1), vget_high_s16(__p2));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vqdmlal_high_n_s32(int64x2_t __p0, int32x4_t __p1, int32_t __p2) {
  int64x2_t __ret;
  __ret = vqdmlal_n_s32(__p0, vget_high_s32(__p1), __p2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vqdmlal_high_n_s16(int32x4_t __p0, int16x8_t __p1, int16_t __p2) {
  int32x4_t __ret;
  __ret = vqdmlal_n_s16(__p0, vget_high_s16(__p1), __p2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64_t vqdmlsls_s32(int64_t __p0, int32_t __p1, int32_t __p2) {
  int64_t __ret;
  __ret = (int64_t) __builtin_neon_vqdmlsls_s32(__p0, __p1, __p2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32_t vqdmlslh_s16(int32_t __p0, int16_t __p1, int16_t __p2) {
  int32_t __ret;
  __ret = (int32_t) __builtin_neon_vqdmlslh_s16(__p0, __p1, __p2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vqdmlsl_high_s32(int64x2_t __p0, int32x4_t __p1, int32x4_t __p2) {
  int64x2_t __ret;
  __ret = vqdmlsl_s32(__p0, vget_high_s32(__p1), vget_high_s32(__p2));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vqdmlsl_high_s16(int32x4_t __p0, int16x8_t __p1, int16x8_t __p2) {
  int32x4_t __ret;
  __ret = vqdmlsl_s16(__p0, vget_high_s16(__p1), vget_high_s16(__p2));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vqdmlsl_high_n_s32(int64x2_t __p0, int32x4_t __p1, int32_t __p2) {
  int64x2_t __ret;
  __ret = vqdmlsl_n_s32(__p0, vget_high_s32(__p1), __p2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vqdmlsl_high_n_s16(int32x4_t __p0, int16x8_t __p1, int16_t __p2) {
  int32x4_t __ret;
  __ret = vqdmlsl_n_s16(__p0, vget_high_s16(__p1), __p2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32_t vqdmulhs_s32(int32_t __p0, int32_t __p1) {
  int32_t __ret;
  __ret = (int32_t) __builtin_neon_vqdmulhs_s32(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16_t vqdmulhh_s16(int16_t __p0, int16_t __p1) {
  int16_t __ret;
  __ret = (int16_t) __builtin_neon_vqdmulhh_s16(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64_t vqdmulls_s32(int32_t __p0, int32_t __p1) {
  int64_t __ret;
  __ret = (int64_t) __builtin_neon_vqdmulls_s32(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32_t vqdmullh_s16(int16_t __p0, int16_t __p1) {
  int32_t __ret;
  __ret = (int32_t) __builtin_neon_vqdmullh_s16(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vqdmull_high_s32(int32x4_t __p0, int32x4_t __p1) {
  int64x2_t __ret;
  __ret = vqdmull_s32(vget_high_s32(__p0), vget_high_s32(__p1));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vqdmull_high_s16(int16x8_t __p0, int16x8_t __p1) {
  int32x4_t __ret;
  __ret = vqdmull_s16(vget_high_s16(__p0), vget_high_s16(__p1));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vqdmull_high_n_s32(int32x4_t __p0, int32_t __p1) {
  int64x2_t __ret;
  __ret = vqdmull_n_s32(vget_high_s32(__p0), __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vqdmull_high_n_s16(int16x8_t __p0, int16_t __p1) {
  int32x4_t __ret;
  __ret = vqdmull_n_s16(vget_high_s16(__p0), __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16_t vqmovns_s32(int32_t __p0) {
  int16_t __ret;
  __ret = (int16_t) __builtin_neon_vqmovns_s32(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32_t vqmovnd_s64(int64_t __p0) {
  int32_t __ret;
  __ret = (int32_t) __builtin_neon_vqmovnd_s64(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8_t vqmovnh_s16(int16_t __p0) {
  int8_t __ret;
  __ret = (int8_t) __builtin_neon_vqmovnh_s16(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16_t vqmovns_u32(uint32_t __p0) {
  uint16_t __ret;
  __ret = (uint16_t) __builtin_neon_vqmovns_u32(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32_t vqmovnd_u64(uint64_t __p0) {
  uint32_t __ret;
  __ret = (uint32_t) __builtin_neon_vqmovnd_u64(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8_t vqmovnh_u16(uint16_t __p0) {
  uint8_t __ret;
  __ret = (uint8_t) __builtin_neon_vqmovnh_u16(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vqmovn_high_u32(uint16x4_t __p0, uint32x4_t __p1) {
  uint16x8_t __ret;
  __ret = vcombine_u16(__p0, vqmovn_u32(__p1));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vqmovn_high_u64(uint32x2_t __p0, uint64x2_t __p1) {
  uint32x4_t __ret;
  __ret = vcombine_u32(__p0, vqmovn_u64(__p1));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vqmovn_high_u16(uint8x8_t __p0, uint16x8_t __p1) {
  uint8x16_t __ret;
  __ret = vcombine_u8(__p0, vqmovn_u16(__p1));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vqmovn_high_s32(int16x4_t __p0, int32x4_t __p1) {
  int16x8_t __ret;
  __ret = vcombine_s16(__p0, vqmovn_s32(__p1));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vqmovn_high_s64(int32x2_t __p0, int64x2_t __p1) {
  int32x4_t __ret;
  __ret = vcombine_s32(__p0, vqmovn_s64(__p1));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vqmovn_high_s16(int8x8_t __p0, int16x8_t __p1) {
  int8x16_t __ret;
  __ret = vcombine_s8(__p0, vqmovn_s16(__p1));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16_t vqmovuns_s32(int32_t __p0) {
  int16_t __ret;
  __ret = (int16_t) __builtin_neon_vqmovuns_s32(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32_t vqmovund_s64(int64_t __p0) {
  int32_t __ret;
  __ret = (int32_t) __builtin_neon_vqmovund_s64(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8_t vqmovunh_s16(int16_t __p0) {
  int8_t __ret;
  __ret = (int8_t) __builtin_neon_vqmovunh_s16(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vqmovun_high_s32(int16x4_t __p0, int32x4_t __p1) {
  uint16x8_t __ret;
  __ret = vcombine_u16((uint16x4_t)(__p0), vqmovun_s32(__p1));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vqmovun_high_s64(int32x2_t __p0, int64x2_t __p1) {
  uint32x4_t __ret;
  __ret = vcombine_u32((uint32x2_t)(__p0), vqmovun_s64(__p1));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vqmovun_high_s16(int8x8_t __p0, int16x8_t __p1) {
  uint8x16_t __ret;
  __ret = vcombine_u8((uint8x8_t)(__p0), vqmovun_s16(__p1));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vqnegq_s64(int64x2_t __p0) {
  int64x2_t __ret;
  __ret = (int64x2_t) __builtin_neon_vqnegq_v((int8x16_t)__p0, 35);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x1_t vqneg_s64(int64x1_t __p0) {
  int64x1_t __ret;
  __ret = (int64x1_t) __builtin_neon_vqneg_v((int8x8_t)__p0, 3);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8_t vqnegb_s8(int8_t __p0) {
  int8_t __ret;
  __ret = (int8_t) __builtin_neon_vqnegb_s8(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32_t vqnegs_s32(int32_t __p0) {
  int32_t __ret;
  __ret = (int32_t) __builtin_neon_vqnegs_s32(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64_t vqnegd_s64(int64_t __p0) {
  int64_t __ret;
  __ret = (int64_t) __builtin_neon_vqnegd_s64(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16_t vqnegh_s16(int16_t __p0) {
  int16_t __ret;
  __ret = (int16_t) __builtin_neon_vqnegh_s16(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32_t vqrdmulhs_s32(int32_t __p0, int32_t __p1) {
  int32_t __ret;
  __ret = (int32_t) __builtin_neon_vqrdmulhs_s32(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16_t vqrdmulhh_s16(int16_t __p0, int16_t __p1) {
  int16_t __ret;
  __ret = (int16_t) __builtin_neon_vqrdmulhh_s16(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8_t vqrshlb_u8(uint8_t __p0, uint8_t __p1) {
  uint8_t __ret;
  __ret = (uint8_t) __builtin_neon_vqrshlb_u8(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32_t vqrshls_u32(uint32_t __p0, uint32_t __p1) {
  uint32_t __ret;
  __ret = (uint32_t) __builtin_neon_vqrshls_u32(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64_t vqrshld_u64(uint64_t __p0, uint64_t __p1) {
  uint64_t __ret;
  __ret = (uint64_t) __builtin_neon_vqrshld_u64(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16_t vqrshlh_u16(uint16_t __p0, uint16_t __p1) {
  uint16_t __ret;
  __ret = (uint16_t) __builtin_neon_vqrshlh_u16(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8_t vqrshlb_s8(int8_t __p0, int8_t __p1) {
  int8_t __ret;
  __ret = (int8_t) __builtin_neon_vqrshlb_s8(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32_t vqrshls_s32(int32_t __p0, int32_t __p1) {
  int32_t __ret;
  __ret = (int32_t) __builtin_neon_vqrshls_s32(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64_t vqrshld_s64(int64_t __p0, int64_t __p1) {
  int64_t __ret;
  __ret = (int64_t) __builtin_neon_vqrshld_s64(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16_t vqrshlh_s16(int16_t __p0, int16_t __p1) {
  int16_t __ret;
  __ret = (int16_t) __builtin_neon_vqrshlh_s16(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8_t vqshlb_u8(uint8_t __p0, uint8_t __p1) {
  uint8_t __ret;
  __ret = (uint8_t) __builtin_neon_vqshlb_u8(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32_t vqshls_u32(uint32_t __p0, uint32_t __p1) {
  uint32_t __ret;
  __ret = (uint32_t) __builtin_neon_vqshls_u32(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64_t vqshld_u64(uint64_t __p0, uint64_t __p1) {
  uint64_t __ret;
  __ret = (uint64_t) __builtin_neon_vqshld_u64(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16_t vqshlh_u16(uint16_t __p0, uint16_t __p1) {
  uint16_t __ret;
  __ret = (uint16_t) __builtin_neon_vqshlh_u16(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8_t vqshlb_s8(int8_t __p0, int8_t __p1) {
  int8_t __ret;
  __ret = (int8_t) __builtin_neon_vqshlb_s8(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32_t vqshls_s32(int32_t __p0, int32_t __p1) {
  int32_t __ret;
  __ret = (int32_t) __builtin_neon_vqshls_s32(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64_t vqshld_s64(int64_t __p0, int64_t __p1) {
  int64_t __ret;
  __ret = (int64_t) __builtin_neon_vqshld_s64(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16_t vqshlh_s16(int16_t __p0, int16_t __p1) {
  int16_t __ret;
  __ret = (int16_t) __builtin_neon_vqshlh_s16(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8_t vqsubb_u8(uint8_t __p0, uint8_t __p1) {
  uint8_t __ret;
  __ret = (uint8_t) __builtin_neon_vqsubb_u8(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32_t vqsubs_u32(uint32_t __p0, uint32_t __p1) {
  uint32_t __ret;
  __ret = (uint32_t) __builtin_neon_vqsubs_u32(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64_t vqsubd_u64(uint64_t __p0, uint64_t __p1) {
  uint64_t __ret;
  __ret = (uint64_t) __builtin_neon_vqsubd_u64(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16_t vqsubh_u16(uint16_t __p0, uint16_t __p1) {
  uint16_t __ret;
  __ret = (uint16_t) __builtin_neon_vqsubh_u16(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8_t vqsubb_s8(int8_t __p0, int8_t __p1) {
  int8_t __ret;
  __ret = (int8_t) __builtin_neon_vqsubb_s8(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32_t vqsubs_s32(int32_t __p0, int32_t __p1) {
  int32_t __ret;
  __ret = (int32_t) __builtin_neon_vqsubs_s32(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64_t vqsubd_s64(int64_t __p0, int64_t __p1) {
  int64_t __ret;
  __ret = (int64_t) __builtin_neon_vqsubd_s64(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16_t vqsubh_s16(int16_t __p0, int16_t __p1) {
  int16_t __ret;
  __ret = (int16_t) __builtin_neon_vqsubh_s16(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x8_t vqtbl1_p8(poly8x16_t __p0, uint8x8_t __p1) {
  poly8x8_t __ret;
  __ret = (poly8x8_t) __builtin_neon_vqtbl1_v((int8x16_t)__p0, (int8x8_t)__p1, 4);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x16_t vqtbl1q_p8(poly8x16_t __p0, uint8x16_t __p1) {
  poly8x16_t __ret;
  __ret = (poly8x16_t) __builtin_neon_vqtbl1q_v((int8x16_t)__p0, (int8x16_t)__p1, 36);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vqtbl1q_u8(uint8x16_t __p0, uint8x16_t __p1) {
  uint8x16_t __ret;
  __ret = (uint8x16_t) __builtin_neon_vqtbl1q_v((int8x16_t)__p0, (int8x16_t)__p1, 48);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vqtbl1q_s8(int8x16_t __p0, int8x16_t __p1) {
  int8x16_t __ret;
  __ret = (int8x16_t) __builtin_neon_vqtbl1q_v((int8x16_t)__p0, (int8x16_t)__p1, 32);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vqtbl1_u8(uint8x16_t __p0, uint8x8_t __p1) {
  uint8x8_t __ret;
  __ret = (uint8x8_t) __builtin_neon_vqtbl1_v((int8x16_t)__p0, (int8x8_t)__p1, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vqtbl1_s8(int8x16_t __p0, int8x8_t __p1) {
  int8x8_t __ret;
  __ret = (int8x8_t) __builtin_neon_vqtbl1_v((int8x16_t)__p0, (int8x8_t)__p1, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x8_t vqtbl2_p8(poly8x16x2_t __p0, uint8x8_t __p1) {
  poly8x8_t __ret;
  __ret = (poly8x8_t) __builtin_neon_vqtbl2_v((int8x16_t)__p0.val[0], (int8x16_t)__p0.val[1], (int8x8_t)__p1, 4);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x16_t vqtbl2q_p8(poly8x16x2_t __p0, uint8x16_t __p1) {
  poly8x16_t __ret;
  __ret = (poly8x16_t) __builtin_neon_vqtbl2q_v((int8x16_t)__p0.val[0], (int8x16_t)__p0.val[1], (int8x16_t)__p1, 36);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vqtbl2q_u8(uint8x16x2_t __p0, uint8x16_t __p1) {
  uint8x16_t __ret;
  __ret = (uint8x16_t) __builtin_neon_vqtbl2q_v((int8x16_t)__p0.val[0], (int8x16_t)__p0.val[1], (int8x16_t)__p1, 48);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vqtbl2q_s8(int8x16x2_t __p0, int8x16_t __p1) {
  int8x16_t __ret;
  __ret = (int8x16_t) __builtin_neon_vqtbl2q_v((int8x16_t)__p0.val[0], (int8x16_t)__p0.val[1], (int8x16_t)__p1, 32);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vqtbl2_u8(uint8x16x2_t __p0, uint8x8_t __p1) {
  uint8x8_t __ret;
  __ret = (uint8x8_t) __builtin_neon_vqtbl2_v((int8x16_t)__p0.val[0], (int8x16_t)__p0.val[1], (int8x8_t)__p1, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vqtbl2_s8(int8x16x2_t __p0, int8x8_t __p1) {
  int8x8_t __ret;
  __ret = (int8x8_t) __builtin_neon_vqtbl2_v((int8x16_t)__p0.val[0], (int8x16_t)__p0.val[1], (int8x8_t)__p1, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x8_t vqtbl3_p8(poly8x16x3_t __p0, uint8x8_t __p1) {
  poly8x8_t __ret;
  __ret = (poly8x8_t) __builtin_neon_vqtbl3_v((int8x16_t)__p0.val[0], (int8x16_t)__p0.val[1], (int8x16_t)__p0.val[2], (int8x8_t)__p1, 4);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x16_t vqtbl3q_p8(poly8x16x3_t __p0, uint8x16_t __p1) {
  poly8x16_t __ret;
  __ret = (poly8x16_t) __builtin_neon_vqtbl3q_v((int8x16_t)__p0.val[0], (int8x16_t)__p0.val[1], (int8x16_t)__p0.val[2], (int8x16_t)__p1, 36);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vqtbl3q_u8(uint8x16x3_t __p0, uint8x16_t __p1) {
  uint8x16_t __ret;
  __ret = (uint8x16_t) __builtin_neon_vqtbl3q_v((int8x16_t)__p0.val[0], (int8x16_t)__p0.val[1], (int8x16_t)__p0.val[2], (int8x16_t)__p1, 48);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vqtbl3q_s8(int8x16x3_t __p0, int8x16_t __p1) {
  int8x16_t __ret;
  __ret = (int8x16_t) __builtin_neon_vqtbl3q_v((int8x16_t)__p0.val[0], (int8x16_t)__p0.val[1], (int8x16_t)__p0.val[2], (int8x16_t)__p1, 32);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vqtbl3_u8(uint8x16x3_t __p0, uint8x8_t __p1) {
  uint8x8_t __ret;
  __ret = (uint8x8_t) __builtin_neon_vqtbl3_v((int8x16_t)__p0.val[0], (int8x16_t)__p0.val[1], (int8x16_t)__p0.val[2], (int8x8_t)__p1, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vqtbl3_s8(int8x16x3_t __p0, int8x8_t __p1) {
  int8x8_t __ret;
  __ret = (int8x8_t) __builtin_neon_vqtbl3_v((int8x16_t)__p0.val[0], (int8x16_t)__p0.val[1], (int8x16_t)__p0.val[2], (int8x8_t)__p1, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x8_t vqtbl4_p8(poly8x16x4_t __p0, uint8x8_t __p1) {
  poly8x8_t __ret;
  __ret = (poly8x8_t) __builtin_neon_vqtbl4_v((int8x16_t)__p0.val[0], (int8x16_t)__p0.val[1], (int8x16_t)__p0.val[2], (int8x16_t)__p0.val[3], (int8x8_t)__p1, 4);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x16_t vqtbl4q_p8(poly8x16x4_t __p0, uint8x16_t __p1) {
  poly8x16_t __ret;
  __ret = (poly8x16_t) __builtin_neon_vqtbl4q_v((int8x16_t)__p0.val[0], (int8x16_t)__p0.val[1], (int8x16_t)__p0.val[2], (int8x16_t)__p0.val[3], (int8x16_t)__p1, 36);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vqtbl4q_u8(uint8x16x4_t __p0, uint8x16_t __p1) {
  uint8x16_t __ret;
  __ret = (uint8x16_t) __builtin_neon_vqtbl4q_v((int8x16_t)__p0.val[0], (int8x16_t)__p0.val[1], (int8x16_t)__p0.val[2], (int8x16_t)__p0.val[3], (int8x16_t)__p1, 48);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vqtbl4q_s8(int8x16x4_t __p0, int8x16_t __p1) {
  int8x16_t __ret;
  __ret = (int8x16_t) __builtin_neon_vqtbl4q_v((int8x16_t)__p0.val[0], (int8x16_t)__p0.val[1], (int8x16_t)__p0.val[2], (int8x16_t)__p0.val[3], (int8x16_t)__p1, 32);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vqtbl4_u8(uint8x16x4_t __p0, uint8x8_t __p1) {
  uint8x8_t __ret;
  __ret = (uint8x8_t) __builtin_neon_vqtbl4_v((int8x16_t)__p0.val[0], (int8x16_t)__p0.val[1], (int8x16_t)__p0.val[2], (int8x16_t)__p0.val[3], (int8x8_t)__p1, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vqtbl4_s8(int8x16x4_t __p0, int8x8_t __p1) {
  int8x8_t __ret;
  __ret = (int8x8_t) __builtin_neon_vqtbl4_v((int8x16_t)__p0.val[0], (int8x16_t)__p0.val[1], (int8x16_t)__p0.val[2], (int8x16_t)__p0.val[3], (int8x8_t)__p1, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x8_t vqtbx1_p8(poly8x8_t __p0, poly8x16_t __p1, uint8x8_t __p2) {
  poly8x8_t __ret;
  __ret = (poly8x8_t) __builtin_neon_vqtbx1_v((int8x8_t)__p0, (int8x16_t)__p1, (int8x8_t)__p2, 4);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x16_t vqtbx1q_p8(poly8x16_t __p0, poly8x16_t __p1, uint8x16_t __p2) {
  poly8x16_t __ret;
  __ret = (poly8x16_t) __builtin_neon_vqtbx1q_v((int8x16_t)__p0, (int8x16_t)__p1, (int8x16_t)__p2, 36);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vqtbx1q_u8(uint8x16_t __p0, uint8x16_t __p1, uint8x16_t __p2) {
  uint8x16_t __ret;
  __ret = (uint8x16_t) __builtin_neon_vqtbx1q_v((int8x16_t)__p0, (int8x16_t)__p1, (int8x16_t)__p2, 48);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vqtbx1q_s8(int8x16_t __p0, int8x16_t __p1, int8x16_t __p2) {
  int8x16_t __ret;
  __ret = (int8x16_t) __builtin_neon_vqtbx1q_v((int8x16_t)__p0, (int8x16_t)__p1, (int8x16_t)__p2, 32);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vqtbx1_u8(uint8x8_t __p0, uint8x16_t __p1, uint8x8_t __p2) {
  uint8x8_t __ret;
  __ret = (uint8x8_t) __builtin_neon_vqtbx1_v((int8x8_t)__p0, (int8x16_t)__p1, (int8x8_t)__p2, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vqtbx1_s8(int8x8_t __p0, int8x16_t __p1, int8x8_t __p2) {
  int8x8_t __ret;
  __ret = (int8x8_t) __builtin_neon_vqtbx1_v((int8x8_t)__p0, (int8x16_t)__p1, (int8x8_t)__p2, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x8_t vqtbx2_p8(poly8x8_t __p0, poly8x16x2_t __p1, uint8x8_t __p2) {
  poly8x8_t __ret;
  __ret = (poly8x8_t) __builtin_neon_vqtbx2_v((int8x8_t)__p0, (int8x16_t)__p1.val[0], (int8x16_t)__p1.val[1], (int8x8_t)__p2, 4);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x16_t vqtbx2q_p8(poly8x16_t __p0, poly8x16x2_t __p1, uint8x16_t __p2) {
  poly8x16_t __ret;
  __ret = (poly8x16_t) __builtin_neon_vqtbx2q_v((int8x16_t)__p0, (int8x16_t)__p1.val[0], (int8x16_t)__p1.val[1], (int8x16_t)__p2, 36);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vqtbx2q_u8(uint8x16_t __p0, uint8x16x2_t __p1, uint8x16_t __p2) {
  uint8x16_t __ret;
  __ret = (uint8x16_t) __builtin_neon_vqtbx2q_v((int8x16_t)__p0, (int8x16_t)__p1.val[0], (int8x16_t)__p1.val[1], (int8x16_t)__p2, 48);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vqtbx2q_s8(int8x16_t __p0, int8x16x2_t __p1, int8x16_t __p2) {
  int8x16_t __ret;
  __ret = (int8x16_t) __builtin_neon_vqtbx2q_v((int8x16_t)__p0, (int8x16_t)__p1.val[0], (int8x16_t)__p1.val[1], (int8x16_t)__p2, 32);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vqtbx2_u8(uint8x8_t __p0, uint8x16x2_t __p1, uint8x8_t __p2) {
  uint8x8_t __ret;
  __ret = (uint8x8_t) __builtin_neon_vqtbx2_v((int8x8_t)__p0, (int8x16_t)__p1.val[0], (int8x16_t)__p1.val[1], (int8x8_t)__p2, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vqtbx2_s8(int8x8_t __p0, int8x16x2_t __p1, int8x8_t __p2) {
  int8x8_t __ret;
  __ret = (int8x8_t) __builtin_neon_vqtbx2_v((int8x8_t)__p0, (int8x16_t)__p1.val[0], (int8x16_t)__p1.val[1], (int8x8_t)__p2, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x8_t vqtbx3_p8(poly8x8_t __p0, poly8x16x3_t __p1, uint8x8_t __p2) {
  poly8x8_t __ret;
  __ret = (poly8x8_t) __builtin_neon_vqtbx3_v((int8x8_t)__p0, (int8x16_t)__p1.val[0], (int8x16_t)__p1.val[1], (int8x16_t)__p1.val[2], (int8x8_t)__p2, 4);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x16_t vqtbx3q_p8(poly8x16_t __p0, poly8x16x3_t __p1, uint8x16_t __p2) {
  poly8x16_t __ret;
  __ret = (poly8x16_t) __builtin_neon_vqtbx3q_v((int8x16_t)__p0, (int8x16_t)__p1.val[0], (int8x16_t)__p1.val[1], (int8x16_t)__p1.val[2], (int8x16_t)__p2, 36);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vqtbx3q_u8(uint8x16_t __p0, uint8x16x3_t __p1, uint8x16_t __p2) {
  uint8x16_t __ret;
  __ret = (uint8x16_t) __builtin_neon_vqtbx3q_v((int8x16_t)__p0, (int8x16_t)__p1.val[0], (int8x16_t)__p1.val[1], (int8x16_t)__p1.val[2], (int8x16_t)__p2, 48);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vqtbx3q_s8(int8x16_t __p0, int8x16x3_t __p1, int8x16_t __p2) {
  int8x16_t __ret;
  __ret = (int8x16_t) __builtin_neon_vqtbx3q_v((int8x16_t)__p0, (int8x16_t)__p1.val[0], (int8x16_t)__p1.val[1], (int8x16_t)__p1.val[2], (int8x16_t)__p2, 32);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vqtbx3_u8(uint8x8_t __p0, uint8x16x3_t __p1, uint8x8_t __p2) {
  uint8x8_t __ret;
  __ret = (uint8x8_t) __builtin_neon_vqtbx3_v((int8x8_t)__p0, (int8x16_t)__p1.val[0], (int8x16_t)__p1.val[1], (int8x16_t)__p1.val[2], (int8x8_t)__p2, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vqtbx3_s8(int8x8_t __p0, int8x16x3_t __p1, int8x8_t __p2) {
  int8x8_t __ret;
  __ret = (int8x8_t) __builtin_neon_vqtbx3_v((int8x8_t)__p0, (int8x16_t)__p1.val[0], (int8x16_t)__p1.val[1], (int8x16_t)__p1.val[2], (int8x8_t)__p2, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x8_t vqtbx4_p8(poly8x8_t __p0, poly8x16x4_t __p1, uint8x8_t __p2) {
  poly8x8_t __ret;
  __ret = (poly8x8_t) __builtin_neon_vqtbx4_v((int8x8_t)__p0, (int8x16_t)__p1.val[0], (int8x16_t)__p1.val[1], (int8x16_t)__p1.val[2], (int8x16_t)__p1.val[3], (int8x8_t)__p2, 4);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x16_t vqtbx4q_p8(poly8x16_t __p0, poly8x16x4_t __p1, uint8x16_t __p2) {
  poly8x16_t __ret;
  __ret = (poly8x16_t) __builtin_neon_vqtbx4q_v((int8x16_t)__p0, (int8x16_t)__p1.val[0], (int8x16_t)__p1.val[1], (int8x16_t)__p1.val[2], (int8x16_t)__p1.val[3], (int8x16_t)__p2, 36);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vqtbx4q_u8(uint8x16_t __p0, uint8x16x4_t __p1, uint8x16_t __p2) {
  uint8x16_t __ret;
  __ret = (uint8x16_t) __builtin_neon_vqtbx4q_v((int8x16_t)__p0, (int8x16_t)__p1.val[0], (int8x16_t)__p1.val[1], (int8x16_t)__p1.val[2], (int8x16_t)__p1.val[3], (int8x16_t)__p2, 48);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vqtbx4q_s8(int8x16_t __p0, int8x16x4_t __p1, int8x16_t __p2) {
  int8x16_t __ret;
  __ret = (int8x16_t) __builtin_neon_vqtbx4q_v((int8x16_t)__p0, (int8x16_t)__p1.val[0], (int8x16_t)__p1.val[1], (int8x16_t)__p1.val[2], (int8x16_t)__p1.val[3], (int8x16_t)__p2, 32);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vqtbx4_u8(uint8x8_t __p0, uint8x16x4_t __p1, uint8x8_t __p2) {
  uint8x8_t __ret;
  __ret = (uint8x8_t) __builtin_neon_vqtbx4_v((int8x8_t)__p0, (int8x16_t)__p1.val[0], (int8x16_t)__p1.val[1], (int8x16_t)__p1.val[2], (int8x16_t)__p1.val[3], (int8x8_t)__p2, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vqtbx4_s8(int8x8_t __p0, int8x16x4_t __p1, int8x8_t __p2) {
  int8x8_t __ret;
  __ret = (int8x8_t) __builtin_neon_vqtbx4_v((int8x8_t)__p0, (int8x16_t)__p1.val[0], (int8x16_t)__p1.val[1], (int8x16_t)__p1.val[2], (int8x16_t)__p1.val[3], (int8x8_t)__p2, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vraddhn_high_u32(uint16x4_t __p0, uint32x4_t __p1, uint32x4_t __p2) {
  uint16x8_t __ret;
  __ret = vcombine_u16(__p0, vraddhn_u32(__p1, __p2));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vraddhn_high_u64(uint32x2_t __p0, uint64x2_t __p1, uint64x2_t __p2) {
  uint32x4_t __ret;
  __ret = vcombine_u32(__p0, vraddhn_u64(__p1, __p2));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vraddhn_high_u16(uint8x8_t __p0, uint16x8_t __p1, uint16x8_t __p2) {
  uint8x16_t __ret;
  __ret = vcombine_u8(__p0, vraddhn_u16(__p1, __p2));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vraddhn_high_s32(int16x4_t __p0, int32x4_t __p1, int32x4_t __p2) {
  int16x8_t __ret;
  __ret = vcombine_s16(__p0, vraddhn_s32(__p1, __p2));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vraddhn_high_s64(int32x2_t __p0, int64x2_t __p1, int64x2_t __p2) {
  int32x4_t __ret;
  __ret = vcombine_s32(__p0, vraddhn_s64(__p1, __p2));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vraddhn_high_s16(int8x8_t __p0, int16x8_t __p1, int16x8_t __p2) {
  int8x16_t __ret;
  __ret = vcombine_s8(__p0, vraddhn_s16(__p1, __p2));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x8_t vrbit_p8(poly8x8_t __p0) {
  poly8x8_t __ret;
  __ret = (poly8x8_t) __builtin_neon_vrbit_v((int8x8_t)__p0, 4);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x16_t vrbitq_p8(poly8x16_t __p0) {
  poly8x16_t __ret;
  __ret = (poly8x16_t) __builtin_neon_vrbitq_v((int8x16_t)__p0, 36);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vrbitq_u8(uint8x16_t __p0) {
  uint8x16_t __ret;
  __ret = (uint8x16_t) __builtin_neon_vrbitq_v((int8x16_t)__p0, 48);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vrbitq_s8(int8x16_t __p0) {
  int8x16_t __ret;
  __ret = (int8x16_t) __builtin_neon_vrbitq_v((int8x16_t)__p0, 32);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vrbit_u8(uint8x8_t __p0) {
  uint8x8_t __ret;
  __ret = (uint8x8_t) __builtin_neon_vrbit_v((int8x8_t)__p0, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vrbit_s8(int8x8_t __p0) {
  int8x8_t __ret;
  __ret = (int8x8_t) __builtin_neon_vrbit_v((int8x8_t)__p0, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vrecpeq_f64(float64x2_t __p0) {
  float64x2_t __ret;
  __ret = (float64x2_t) __builtin_neon_vrecpeq_v((int8x16_t)__p0, 42);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x1_t vrecpe_f64(float64x1_t __p0) {
  float64x1_t __ret;
  __ret = (float64x1_t) __builtin_neon_vrecpe_v((int8x8_t)__p0, 10);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64_t vrecped_f64(float64_t __p0) {
  float64_t __ret;
  __ret = (float64_t) __builtin_neon_vrecped_f64(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32_t vrecpes_f32(float32_t __p0) {
  float32_t __ret;
  __ret = (float32_t) __builtin_neon_vrecpes_f32(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vrecpsq_f64(float64x2_t __p0, float64x2_t __p1) {
  float64x2_t __ret;
  __ret = (float64x2_t) __builtin_neon_vrecpsq_v((int8x16_t)__p0, (int8x16_t)__p1, 42);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x1_t vrecps_f64(float64x1_t __p0, float64x1_t __p1) {
  float64x1_t __ret;
  __ret = (float64x1_t) __builtin_neon_vrecps_v((int8x8_t)__p0, (int8x8_t)__p1, 10);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64_t vrecpsd_f64(float64_t __p0, float64_t __p1) {
  float64_t __ret;
  __ret = (float64_t) __builtin_neon_vrecpsd_f64(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32_t vrecpss_f32(float32_t __p0, float32_t __p1) {
  float32_t __ret;
  __ret = (float32_t) __builtin_neon_vrecpss_f32(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64_t vrecpxd_f64(float64_t __p0) {
  float64_t __ret;
  __ret = (float64_t) __builtin_neon_vrecpxd_f64(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32_t vrecpxs_f32(float32_t __p0) {
  float32_t __ret;
  __ret = (float32_t) __builtin_neon_vrecpxs_f32(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64_t vrshld_u64(uint64_t __p0, uint64_t __p1) {
  uint64_t __ret;
  __ret = (uint64_t) __builtin_neon_vrshld_u64(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64_t vrshld_s64(int64_t __p0, int64_t __p1) {
  int64_t __ret;
  __ret = (int64_t) __builtin_neon_vrshld_s64(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vrsqrteq_f64(float64x2_t __p0) {
  float64x2_t __ret;
  __ret = (float64x2_t) __builtin_neon_vrsqrteq_v((int8x16_t)__p0, 42);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x1_t vrsqrte_f64(float64x1_t __p0) {
  float64x1_t __ret;
  __ret = (float64x1_t) __builtin_neon_vrsqrte_v((int8x8_t)__p0, 10);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64_t vrsqrted_f64(float64_t __p0) {
  float64_t __ret;
  __ret = (float64_t) __builtin_neon_vrsqrted_f64(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32_t vrsqrtes_f32(float32_t __p0) {
  float32_t __ret;
  __ret = (float32_t) __builtin_neon_vrsqrtes_f32(__p0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vrsqrtsq_f64(float64x2_t __p0, float64x2_t __p1) {
  float64x2_t __ret;
  __ret = (float64x2_t) __builtin_neon_vrsqrtsq_v((int8x16_t)__p0, (int8x16_t)__p1, 42);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x1_t vrsqrts_f64(float64x1_t __p0, float64x1_t __p1) {
  float64x1_t __ret;
  __ret = (float64x1_t) __builtin_neon_vrsqrts_v((int8x8_t)__p0, (int8x8_t)__p1, 10);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64_t vrsqrtsd_f64(float64_t __p0, float64_t __p1) {
  float64_t __ret;
  __ret = (float64_t) __builtin_neon_vrsqrtsd_f64(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32_t vrsqrtss_f32(float32_t __p0, float32_t __p1) {
  float32_t __ret;
  __ret = (float32_t) __builtin_neon_vrsqrtss_f32(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vrsubhn_high_u32(uint16x4_t __p0, uint32x4_t __p1, uint32x4_t __p2) {
  uint16x8_t __ret;
  __ret = vcombine_u16(__p0, vrsubhn_u32(__p1, __p2));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vrsubhn_high_u64(uint32x2_t __p0, uint64x2_t __p1, uint64x2_t __p2) {
  uint32x4_t __ret;
  __ret = vcombine_u32(__p0, vrsubhn_u64(__p1, __p2));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vrsubhn_high_u16(uint8x8_t __p0, uint16x8_t __p1, uint16x8_t __p2) {
  uint8x16_t __ret;
  __ret = vcombine_u8(__p0, vrsubhn_u16(__p1, __p2));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vrsubhn_high_s32(int16x4_t __p0, int32x4_t __p1, int32x4_t __p2) {
  int16x8_t __ret;
  __ret = vcombine_s16(__p0, vrsubhn_s32(__p1, __p2));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vrsubhn_high_s64(int32x2_t __p0, int64x2_t __p1, int64x2_t __p2) {
  int32x4_t __ret;
  __ret = vcombine_s32(__p0, vrsubhn_s64(__p1, __p2));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vrsubhn_high_s16(int8x8_t __p0, int16x8_t __p1, int16x8_t __p2) {
  int8x16_t __ret;
  __ret = vcombine_s8(__p0, vrsubhn_s16(__p1, __p2));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64_t vshld_u64(uint64_t __p0, uint64_t __p1) {
  uint64_t __ret;
  __ret = (uint64_t) __builtin_neon_vshld_u64(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64_t vshld_s64(int64_t __p0, int64_t __p1) {
  int64_t __ret;
  __ret = (int64_t) __builtin_neon_vshld_s64(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8_t vsqaddb_u8(uint8_t __p0, uint8_t __p1) {
  uint8_t __ret;
  __ret = (uint8_t) __builtin_neon_vsqaddb_u8(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32_t vsqadds_u32(uint32_t __p0, uint32_t __p1) {
  uint32_t __ret;
  __ret = (uint32_t) __builtin_neon_vsqadds_u32(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64_t vsqaddd_u64(uint64_t __p0, uint64_t __p1) {
  uint64_t __ret;
  __ret = (uint64_t) __builtin_neon_vsqaddd_u64(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16_t vsqaddh_u16(uint16_t __p0, uint16_t __p1) {
  uint16_t __ret;
  __ret = (uint16_t) __builtin_neon_vsqaddh_u16(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vsqaddq_u8(uint8x16_t __p0, uint8x16_t __p1) {
  uint8x16_t __ret;
  __ret = (uint8x16_t) __builtin_neon_vsqaddq_v((int8x16_t)__p0, (int8x16_t)__p1, 48);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vsqaddq_u32(uint32x4_t __p0, uint32x4_t __p1) {
  uint32x4_t __ret;
  __ret = (uint32x4_t) __builtin_neon_vsqaddq_v((int8x16_t)__p0, (int8x16_t)__p1, 50);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vsqaddq_u64(uint64x2_t __p0, uint64x2_t __p1) {
  uint64x2_t __ret;
  __ret = (uint64x2_t) __builtin_neon_vsqaddq_v((int8x16_t)__p0, (int8x16_t)__p1, 51);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vsqaddq_u16(uint16x8_t __p0, uint16x8_t __p1) {
  uint16x8_t __ret;
  __ret = (uint16x8_t) __builtin_neon_vsqaddq_v((int8x16_t)__p0, (int8x16_t)__p1, 49);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vsqadd_u8(uint8x8_t __p0, uint8x8_t __p1) {
  uint8x8_t __ret;
  __ret = (uint8x8_t) __builtin_neon_vsqadd_v((int8x8_t)__p0, (int8x8_t)__p1, 16);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vsqadd_u32(uint32x2_t __p0, uint32x2_t __p1) {
  uint32x2_t __ret;
  __ret = (uint32x2_t) __builtin_neon_vsqadd_v((int8x8_t)__p0, (int8x8_t)__p1, 18);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vsqadd_u64(uint64x1_t __p0, uint64x1_t __p1) {
  uint64x1_t __ret;
  __ret = (uint64x1_t) __builtin_neon_vsqadd_v((int8x8_t)__p0, (int8x8_t)__p1, 19);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vsqadd_u16(uint16x4_t __p0, uint16x4_t __p1) {
  uint16x4_t __ret;
  __ret = (uint16x4_t) __builtin_neon_vsqadd_v((int8x8_t)__p0, (int8x8_t)__p1, 17);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vsqrtq_f64(float64x2_t __p0) {
  float64x2_t __ret;
  __ret = (float64x2_t) __builtin_neon_vsqrtq_v((int8x16_t)__p0, 42);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vsqrtq_f32(float32x4_t __p0) {
  float32x4_t __ret;
  __ret = (float32x4_t) __builtin_neon_vsqrtq_v((int8x16_t)__p0, 41);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x1_t vsqrt_f64(float64x1_t __p0) {
  float64x1_t __ret;
  __ret = (float64x1_t) __builtin_neon_vsqrt_v((int8x8_t)__p0, 10);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vsqrt_f32(float32x2_t __p0) {
  float32x2_t __ret;
  __ret = (float32x2_t) __builtin_neon_vsqrt_v((int8x8_t)__p0, 9);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64_t vsubd_u64(uint64_t __p0, uint64_t __p1) {
  uint64_t __ret;
  __ret = (uint64_t) __builtin_neon_vsubd_u64(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64_t vsubd_s64(int64_t __p0, int64_t __p1) {
  int64_t __ret;
  __ret = (int64_t) __builtin_neon_vsubd_s64(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vsubq_f64(float64x2_t __p0, float64x2_t __p1) {
  float64x2_t __ret;
  __ret = __p0 - __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x1_t vsub_f64(float64x1_t __p0, float64x1_t __p1) {
  float64x1_t __ret;
  __ret = __p0 - __p1;
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vsubhn_high_u32(uint16x4_t __p0, uint32x4_t __p1, uint32x4_t __p2) {
  uint16x8_t __ret;
  __ret = vcombine_u16(__p0, vsubhn_u32(__p1, __p2));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vsubhn_high_u64(uint32x2_t __p0, uint64x2_t __p1, uint64x2_t __p2) {
  uint32x4_t __ret;
  __ret = vcombine_u32(__p0, vsubhn_u64(__p1, __p2));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vsubhn_high_u16(uint8x8_t __p0, uint16x8_t __p1, uint16x8_t __p2) {
  uint8x16_t __ret;
  __ret = vcombine_u8(__p0, vsubhn_u16(__p1, __p2));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vsubhn_high_s32(int16x4_t __p0, int32x4_t __p1, int32x4_t __p2) {
  int16x8_t __ret;
  __ret = vcombine_s16(__p0, vsubhn_s32(__p1, __p2));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vsubhn_high_s64(int32x2_t __p0, int64x2_t __p1, int64x2_t __p2) {
  int32x4_t __ret;
  __ret = vcombine_s32(__p0, vsubhn_s64(__p1, __p2));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vsubhn_high_s16(int8x8_t __p0, int16x8_t __p1, int16x8_t __p2) {
  int8x16_t __ret;
  __ret = vcombine_s8(__p0, vsubhn_s16(__p1, __p2));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vsubl_high_u8(uint8x16_t __p0, uint8x16_t __p1) {
  uint16x8_t __ret;
  __ret = vmovl_high_u8(__p0) - vmovl_high_u8(__p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vsubl_high_u32(uint32x4_t __p0, uint32x4_t __p1) {
  uint64x2_t __ret;
  __ret = vmovl_high_u32(__p0) - vmovl_high_u32(__p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vsubl_high_u16(uint16x8_t __p0, uint16x8_t __p1) {
  uint32x4_t __ret;
  __ret = vmovl_high_u16(__p0) - vmovl_high_u16(__p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vsubl_high_s8(int8x16_t __p0, int8x16_t __p1) {
  int16x8_t __ret;
  __ret = vmovl_high_s8(__p0) - vmovl_high_s8(__p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vsubl_high_s32(int32x4_t __p0, int32x4_t __p1) {
  int64x2_t __ret;
  __ret = vmovl_high_s32(__p0) - vmovl_high_s32(__p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vsubl_high_s16(int16x8_t __p0, int16x8_t __p1) {
  int32x4_t __ret;
  __ret = vmovl_high_s16(__p0) - vmovl_high_s16(__p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vsubw_high_u8(uint16x8_t __p0, uint8x16_t __p1) {
  uint16x8_t __ret;
  __ret = __p0 - vmovl_high_u8(__p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vsubw_high_u32(uint64x2_t __p0, uint32x4_t __p1) {
  uint64x2_t __ret;
  __ret = __p0 - vmovl_high_u32(__p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vsubw_high_u16(uint32x4_t __p0, uint16x8_t __p1) {
  uint32x4_t __ret;
  __ret = __p0 - vmovl_high_u16(__p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vsubw_high_s8(int16x8_t __p0, int8x16_t __p1) {
  int16x8_t __ret;
  __ret = __p0 - vmovl_high_s8(__p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vsubw_high_s32(int64x2_t __p0, int32x4_t __p1) {
  int64x2_t __ret;
  __ret = __p0 - vmovl_high_s32(__p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vsubw_high_s16(int32x4_t __p0, int16x8_t __p1) {
  int32x4_t __ret;
  __ret = __p0 - vmovl_high_s16(__p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x8_t vtrn1_p8(poly8x8_t __p0, poly8x8_t __p1) {
  poly8x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 8, 2, 10, 4, 12, 6, 14);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x4_t vtrn1_p16(poly16x4_t __p0, poly16x4_t __p1) {
  poly16x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 4, 2, 6);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x16_t vtrn1q_p8(poly8x16_t __p0, poly8x16_t __p1) {
  poly8x16_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 16, 2, 18, 4, 20, 6, 22, 8, 24, 10, 26, 12, 28, 14, 30);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly64x2_t vtrn1q_p64(poly64x2_t __p0, poly64x2_t __p1) {
  poly64x2_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x8_t vtrn1q_p16(poly16x8_t __p0, poly16x8_t __p1) {
  poly16x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 8, 2, 10, 4, 12, 6, 14);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vtrn1q_u8(uint8x16_t __p0, uint8x16_t __p1) {
  uint8x16_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 16, 2, 18, 4, 20, 6, 22, 8, 24, 10, 26, 12, 28, 14, 30);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vtrn1q_u32(uint32x4_t __p0, uint32x4_t __p1) {
  uint32x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 4, 2, 6);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vtrn1q_u64(uint64x2_t __p0, uint64x2_t __p1) {
  uint64x2_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vtrn1q_u16(uint16x8_t __p0, uint16x8_t __p1) {
  uint16x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 8, 2, 10, 4, 12, 6, 14);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vtrn1q_s8(int8x16_t __p0, int8x16_t __p1) {
  int8x16_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 16, 2, 18, 4, 20, 6, 22, 8, 24, 10, 26, 12, 28, 14, 30);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vtrn1q_f64(float64x2_t __p0, float64x2_t __p1) {
  float64x2_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vtrn1q_f32(float32x4_t __p0, float32x4_t __p1) {
  float32x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 4, 2, 6);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vtrn1q_s32(int32x4_t __p0, int32x4_t __p1) {
  int32x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 4, 2, 6);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vtrn1q_s64(int64x2_t __p0, int64x2_t __p1) {
  int64x2_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vtrn1q_s16(int16x8_t __p0, int16x8_t __p1) {
  int16x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 8, 2, 10, 4, 12, 6, 14);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vtrn1_u8(uint8x8_t __p0, uint8x8_t __p1) {
  uint8x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 8, 2, 10, 4, 12, 6, 14);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vtrn1_u32(uint32x2_t __p0, uint32x2_t __p1) {
  uint32x2_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vtrn1_u16(uint16x4_t __p0, uint16x4_t __p1) {
  uint16x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 4, 2, 6);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vtrn1_s8(int8x8_t __p0, int8x8_t __p1) {
  int8x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 8, 2, 10, 4, 12, 6, 14);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vtrn1_f32(float32x2_t __p0, float32x2_t __p1) {
  float32x2_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vtrn1_s32(int32x2_t __p0, int32x2_t __p1) {
  int32x2_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vtrn1_s16(int16x4_t __p0, int16x4_t __p1) {
  int16x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 4, 2, 6);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x8_t vtrn2_p8(poly8x8_t __p0, poly8x8_t __p1) {
  poly8x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 1, 9, 3, 11, 5, 13, 7, 15);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x4_t vtrn2_p16(poly16x4_t __p0, poly16x4_t __p1) {
  poly16x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 1, 5, 3, 7);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x16_t vtrn2q_p8(poly8x16_t __p0, poly8x16_t __p1) {
  poly8x16_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 1, 17, 3, 19, 5, 21, 7, 23, 9, 25, 11, 27, 13, 29, 15, 31);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly64x2_t vtrn2q_p64(poly64x2_t __p0, poly64x2_t __p1) {
  poly64x2_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 1, 3);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x8_t vtrn2q_p16(poly16x8_t __p0, poly16x8_t __p1) {
  poly16x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 1, 9, 3, 11, 5, 13, 7, 15);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vtrn2q_u8(uint8x16_t __p0, uint8x16_t __p1) {
  uint8x16_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 1, 17, 3, 19, 5, 21, 7, 23, 9, 25, 11, 27, 13, 29, 15, 31);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vtrn2q_u32(uint32x4_t __p0, uint32x4_t __p1) {
  uint32x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 1, 5, 3, 7);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vtrn2q_u64(uint64x2_t __p0, uint64x2_t __p1) {
  uint64x2_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 1, 3);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vtrn2q_u16(uint16x8_t __p0, uint16x8_t __p1) {
  uint16x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 1, 9, 3, 11, 5, 13, 7, 15);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vtrn2q_s8(int8x16_t __p0, int8x16_t __p1) {
  int8x16_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 1, 17, 3, 19, 5, 21, 7, 23, 9, 25, 11, 27, 13, 29, 15, 31);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vtrn2q_f64(float64x2_t __p0, float64x2_t __p1) {
  float64x2_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 1, 3);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vtrn2q_f32(float32x4_t __p0, float32x4_t __p1) {
  float32x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 1, 5, 3, 7);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vtrn2q_s32(int32x4_t __p0, int32x4_t __p1) {
  int32x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 1, 5, 3, 7);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vtrn2q_s64(int64x2_t __p0, int64x2_t __p1) {
  int64x2_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 1, 3);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vtrn2q_s16(int16x8_t __p0, int16x8_t __p1) {
  int16x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 1, 9, 3, 11, 5, 13, 7, 15);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vtrn2_u8(uint8x8_t __p0, uint8x8_t __p1) {
  uint8x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 1, 9, 3, 11, 5, 13, 7, 15);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vtrn2_u32(uint32x2_t __p0, uint32x2_t __p1) {
  uint32x2_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 1, 3);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vtrn2_u16(uint16x4_t __p0, uint16x4_t __p1) {
  uint16x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 1, 5, 3, 7);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vtrn2_s8(int8x8_t __p0, int8x8_t __p1) {
  int8x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 1, 9, 3, 11, 5, 13, 7, 15);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vtrn2_f32(float32x2_t __p0, float32x2_t __p1) {
  float32x2_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 1, 3);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vtrn2_s32(int32x2_t __p0, int32x2_t __p1) {
  int32x2_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 1, 3);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vtrn2_s16(int16x4_t __p0, int16x4_t __p1) {
  int16x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 1, 5, 3, 7);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vtst_p64(poly64x1_t __p0, poly64x1_t __p1) {
  uint64x1_t __ret;
  __ret = (uint64x1_t) __builtin_neon_vtst_v((int8x8_t)__p0, (int8x8_t)__p1, 19);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vtstq_p64(poly64x2_t __p0, poly64x2_t __p1) {
  uint64x2_t __ret;
  __ret = (uint64x2_t) __builtin_neon_vtstq_v((int8x16_t)__p0, (int8x16_t)__p1, 51);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vtstq_u64(uint64x2_t __p0, uint64x2_t __p1) {
  uint64x2_t __ret;
  __ret = (uint64x2_t) __builtin_neon_vtstq_v((int8x16_t)__p0, (int8x16_t)__p1, 51);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vtstq_s64(int64x2_t __p0, int64x2_t __p1) {
  uint64x2_t __ret;
  __ret = (uint64x2_t) __builtin_neon_vtstq_v((int8x16_t)__p0, (int8x16_t)__p1, 51);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vtst_u64(uint64x1_t __p0, uint64x1_t __p1) {
  uint64x1_t __ret;
  __ret = (uint64x1_t) __builtin_neon_vtst_v((int8x8_t)__p0, (int8x8_t)__p1, 19);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x1_t vtst_s64(int64x1_t __p0, int64x1_t __p1) {
  uint64x1_t __ret;
  __ret = (uint64x1_t) __builtin_neon_vtst_v((int8x8_t)__p0, (int8x8_t)__p1, 19);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64_t vtstd_u64(uint64_t __p0, uint64_t __p1) {
  uint64_t __ret;
  __ret = (uint64_t) __builtin_neon_vtstd_u64(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64_t vtstd_s64(int64_t __p0, int64_t __p1) {
  int64_t __ret;
  __ret = (int64_t) __builtin_neon_vtstd_s64(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8_t vuqaddb_s8(int8_t __p0, int8_t __p1) {
  int8_t __ret;
  __ret = (int8_t) __builtin_neon_vuqaddb_s8(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32_t vuqadds_s32(int32_t __p0, int32_t __p1) {
  int32_t __ret;
  __ret = (int32_t) __builtin_neon_vuqadds_s32(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64_t vuqaddd_s64(int64_t __p0, int64_t __p1) {
  int64_t __ret;
  __ret = (int64_t) __builtin_neon_vuqaddd_s64(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16_t vuqaddh_s16(int16_t __p0, int16_t __p1) {
  int16_t __ret;
  __ret = (int16_t) __builtin_neon_vuqaddh_s16(__p0, __p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vuqaddq_s8(int8x16_t __p0, int8x16_t __p1) {
  int8x16_t __ret;
  __ret = (int8x16_t) __builtin_neon_vuqaddq_v((int8x16_t)__p0, (int8x16_t)__p1, 32);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vuqaddq_s32(int32x4_t __p0, int32x4_t __p1) {
  int32x4_t __ret;
  __ret = (int32x4_t) __builtin_neon_vuqaddq_v((int8x16_t)__p0, (int8x16_t)__p1, 34);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vuqaddq_s64(int64x2_t __p0, int64x2_t __p1) {
  int64x2_t __ret;
  __ret = (int64x2_t) __builtin_neon_vuqaddq_v((int8x16_t)__p0, (int8x16_t)__p1, 35);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vuqaddq_s16(int16x8_t __p0, int16x8_t __p1) {
  int16x8_t __ret;
  __ret = (int16x8_t) __builtin_neon_vuqaddq_v((int8x16_t)__p0, (int8x16_t)__p1, 33);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vuqadd_s8(int8x8_t __p0, int8x8_t __p1) {
  int8x8_t __ret;
  __ret = (int8x8_t) __builtin_neon_vuqadd_v((int8x8_t)__p0, (int8x8_t)__p1, 0);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vuqadd_s32(int32x2_t __p0, int32x2_t __p1) {
  int32x2_t __ret;
  __ret = (int32x2_t) __builtin_neon_vuqadd_v((int8x8_t)__p0, (int8x8_t)__p1, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x1_t vuqadd_s64(int64x1_t __p0, int64x1_t __p1) {
  int64x1_t __ret;
  __ret = (int64x1_t) __builtin_neon_vuqadd_v((int8x8_t)__p0, (int8x8_t)__p1, 3);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vuqadd_s16(int16x4_t __p0, int16x4_t __p1) {
  int16x4_t __ret;
  __ret = (int16x4_t) __builtin_neon_vuqadd_v((int8x8_t)__p0, (int8x8_t)__p1, 1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x8_t vuzp1_p8(poly8x8_t __p0, poly8x8_t __p1) {
  poly8x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 2, 4, 6, 8, 10, 12, 14);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x4_t vuzp1_p16(poly16x4_t __p0, poly16x4_t __p1) {
  poly16x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 2, 4, 6);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x16_t vuzp1q_p8(poly8x16_t __p0, poly8x16_t __p1) {
  poly8x16_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly64x2_t vuzp1q_p64(poly64x2_t __p0, poly64x2_t __p1) {
  poly64x2_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x8_t vuzp1q_p16(poly16x8_t __p0, poly16x8_t __p1) {
  poly16x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 2, 4, 6, 8, 10, 12, 14);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vuzp1q_u8(uint8x16_t __p0, uint8x16_t __p1) {
  uint8x16_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vuzp1q_u32(uint32x4_t __p0, uint32x4_t __p1) {
  uint32x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 2, 4, 6);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vuzp1q_u64(uint64x2_t __p0, uint64x2_t __p1) {
  uint64x2_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vuzp1q_u16(uint16x8_t __p0, uint16x8_t __p1) {
  uint16x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 2, 4, 6, 8, 10, 12, 14);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vuzp1q_s8(int8x16_t __p0, int8x16_t __p1) {
  int8x16_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vuzp1q_f64(float64x2_t __p0, float64x2_t __p1) {
  float64x2_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vuzp1q_f32(float32x4_t __p0, float32x4_t __p1) {
  float32x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 2, 4, 6);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vuzp1q_s32(int32x4_t __p0, int32x4_t __p1) {
  int32x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 2, 4, 6);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vuzp1q_s64(int64x2_t __p0, int64x2_t __p1) {
  int64x2_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vuzp1q_s16(int16x8_t __p0, int16x8_t __p1) {
  int16x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 2, 4, 6, 8, 10, 12, 14);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vuzp1_u8(uint8x8_t __p0, uint8x8_t __p1) {
  uint8x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 2, 4, 6, 8, 10, 12, 14);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vuzp1_u32(uint32x2_t __p0, uint32x2_t __p1) {
  uint32x2_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vuzp1_u16(uint16x4_t __p0, uint16x4_t __p1) {
  uint16x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 2, 4, 6);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vuzp1_s8(int8x8_t __p0, int8x8_t __p1) {
  int8x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 2, 4, 6, 8, 10, 12, 14);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vuzp1_f32(float32x2_t __p0, float32x2_t __p1) {
  float32x2_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vuzp1_s32(int32x2_t __p0, int32x2_t __p1) {
  int32x2_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vuzp1_s16(int16x4_t __p0, int16x4_t __p1) {
  int16x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 2, 4, 6);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x8_t vuzp2_p8(poly8x8_t __p0, poly8x8_t __p1) {
  poly8x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 1, 3, 5, 7, 9, 11, 13, 15);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x4_t vuzp2_p16(poly16x4_t __p0, poly16x4_t __p1) {
  poly16x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 1, 3, 5, 7);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x16_t vuzp2q_p8(poly8x16_t __p0, poly8x16_t __p1) {
  poly8x16_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly64x2_t vuzp2q_p64(poly64x2_t __p0, poly64x2_t __p1) {
  poly64x2_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 1, 3);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x8_t vuzp2q_p16(poly16x8_t __p0, poly16x8_t __p1) {
  poly16x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 1, 3, 5, 7, 9, 11, 13, 15);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vuzp2q_u8(uint8x16_t __p0, uint8x16_t __p1) {
  uint8x16_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vuzp2q_u32(uint32x4_t __p0, uint32x4_t __p1) {
  uint32x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 1, 3, 5, 7);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vuzp2q_u64(uint64x2_t __p0, uint64x2_t __p1) {
  uint64x2_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 1, 3);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vuzp2q_u16(uint16x8_t __p0, uint16x8_t __p1) {
  uint16x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 1, 3, 5, 7, 9, 11, 13, 15);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vuzp2q_s8(int8x16_t __p0, int8x16_t __p1) {
  int8x16_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vuzp2q_f64(float64x2_t __p0, float64x2_t __p1) {
  float64x2_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 1, 3);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vuzp2q_f32(float32x4_t __p0, float32x4_t __p1) {
  float32x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 1, 3, 5, 7);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vuzp2q_s32(int32x4_t __p0, int32x4_t __p1) {
  int32x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 1, 3, 5, 7);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vuzp2q_s64(int64x2_t __p0, int64x2_t __p1) {
  int64x2_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 1, 3);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vuzp2q_s16(int16x8_t __p0, int16x8_t __p1) {
  int16x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 1, 3, 5, 7, 9, 11, 13, 15);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vuzp2_u8(uint8x8_t __p0, uint8x8_t __p1) {
  uint8x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 1, 3, 5, 7, 9, 11, 13, 15);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vuzp2_u32(uint32x2_t __p0, uint32x2_t __p1) {
  uint32x2_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 1, 3);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vuzp2_u16(uint16x4_t __p0, uint16x4_t __p1) {
  uint16x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 1, 3, 5, 7);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vuzp2_s8(int8x8_t __p0, int8x8_t __p1) {
  int8x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 1, 3, 5, 7, 9, 11, 13, 15);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vuzp2_f32(float32x2_t __p0, float32x2_t __p1) {
  float32x2_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 1, 3);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vuzp2_s32(int32x2_t __p0, int32x2_t __p1) {
  int32x2_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 1, 3);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vuzp2_s16(int16x4_t __p0, int16x4_t __p1) {
  int16x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 1, 3, 5, 7);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x8_t vzip1_p8(poly8x8_t __p0, poly8x8_t __p1) {
  poly8x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 8, 1, 9, 2, 10, 3, 11);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x4_t vzip1_p16(poly16x4_t __p0, poly16x4_t __p1) {
  poly16x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 4, 1, 5);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x16_t vzip1q_p8(poly8x16_t __p0, poly8x16_t __p1) {
  poly8x16_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 16, 1, 17, 2, 18, 3, 19, 4, 20, 5, 21, 6, 22, 7, 23);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly64x2_t vzip1q_p64(poly64x2_t __p0, poly64x2_t __p1) {
  poly64x2_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x8_t vzip1q_p16(poly16x8_t __p0, poly16x8_t __p1) {
  poly16x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 8, 1, 9, 2, 10, 3, 11);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vzip1q_u8(uint8x16_t __p0, uint8x16_t __p1) {
  uint8x16_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 16, 1, 17, 2, 18, 3, 19, 4, 20, 5, 21, 6, 22, 7, 23);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vzip1q_u32(uint32x4_t __p0, uint32x4_t __p1) {
  uint32x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 4, 1, 5);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vzip1q_u64(uint64x2_t __p0, uint64x2_t __p1) {
  uint64x2_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vzip1q_u16(uint16x8_t __p0, uint16x8_t __p1) {
  uint16x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 8, 1, 9, 2, 10, 3, 11);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vzip1q_s8(int8x16_t __p0, int8x16_t __p1) {
  int8x16_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 16, 1, 17, 2, 18, 3, 19, 4, 20, 5, 21, 6, 22, 7, 23);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vzip1q_f64(float64x2_t __p0, float64x2_t __p1) {
  float64x2_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vzip1q_f32(float32x4_t __p0, float32x4_t __p1) {
  float32x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 4, 1, 5);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vzip1q_s32(int32x4_t __p0, int32x4_t __p1) {
  int32x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 4, 1, 5);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vzip1q_s64(int64x2_t __p0, int64x2_t __p1) {
  int64x2_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vzip1q_s16(int16x8_t __p0, int16x8_t __p1) {
  int16x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 8, 1, 9, 2, 10, 3, 11);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vzip1_u8(uint8x8_t __p0, uint8x8_t __p1) {
  uint8x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 8, 1, 9, 2, 10, 3, 11);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vzip1_u32(uint32x2_t __p0, uint32x2_t __p1) {
  uint32x2_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vzip1_u16(uint16x4_t __p0, uint16x4_t __p1) {
  uint16x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 4, 1, 5);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vzip1_s8(int8x8_t __p0, int8x8_t __p1) {
  int8x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 8, 1, 9, 2, 10, 3, 11);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vzip1_f32(float32x2_t __p0, float32x2_t __p1) {
  float32x2_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vzip1_s32(int32x2_t __p0, int32x2_t __p1) {
  int32x2_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vzip1_s16(int16x4_t __p0, int16x4_t __p1) {
  int16x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 0, 4, 1, 5);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x8_t vzip2_p8(poly8x8_t __p0, poly8x8_t __p1) {
  poly8x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 4, 12, 5, 13, 6, 14, 7, 15);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x4_t vzip2_p16(poly16x4_t __p0, poly16x4_t __p1) {
  poly16x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 2, 6, 3, 7);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly8x16_t vzip2q_p8(poly8x16_t __p0, poly8x16_t __p1) {
  poly8x16_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 8, 24, 9, 25, 10, 26, 11, 27, 12, 28, 13, 29, 14, 30, 15, 31);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly64x2_t vzip2q_p64(poly64x2_t __p0, poly64x2_t __p1) {
  poly64x2_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 1, 3);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) poly16x8_t vzip2q_p16(poly16x8_t __p0, poly16x8_t __p1) {
  poly16x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 4, 12, 5, 13, 6, 14, 7, 15);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vzip2q_u8(uint8x16_t __p0, uint8x16_t __p1) {
  uint8x16_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 8, 24, 9, 25, 10, 26, 11, 27, 12, 28, 13, 29, 14, 30, 15, 31);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vzip2q_u32(uint32x4_t __p0, uint32x4_t __p1) {
  uint32x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 2, 6, 3, 7);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vzip2q_u64(uint64x2_t __p0, uint64x2_t __p1) {
  uint64x2_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 1, 3);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vzip2q_u16(uint16x8_t __p0, uint16x8_t __p1) {
  uint16x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 4, 12, 5, 13, 6, 14, 7, 15);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vzip2q_s8(int8x16_t __p0, int8x16_t __p1) {
  int8x16_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 8, 24, 9, 25, 10, 26, 11, 27, 12, 28, 13, 29, 14, 30, 15, 31);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float64x2_t vzip2q_f64(float64x2_t __p0, float64x2_t __p1) {
  float64x2_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 1, 3);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x4_t vzip2q_f32(float32x4_t __p0, float32x4_t __p1) {
  float32x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 2, 6, 3, 7);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vzip2q_s32(int32x4_t __p0, int32x4_t __p1) {
  int32x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 2, 6, 3, 7);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vzip2q_s64(int64x2_t __p0, int64x2_t __p1) {
  int64x2_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 1, 3);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vzip2q_s16(int16x8_t __p0, int16x8_t __p1) {
  int16x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 4, 12, 5, 13, 6, 14, 7, 15);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vzip2_u8(uint8x8_t __p0, uint8x8_t __p1) {
  uint8x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 4, 12, 5, 13, 6, 14, 7, 15);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vzip2_u32(uint32x2_t __p0, uint32x2_t __p1) {
  uint32x2_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 1, 3);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vzip2_u16(uint16x4_t __p0, uint16x4_t __p1) {
  uint16x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 2, 6, 3, 7);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vzip2_s8(int8x8_t __p0, int8x8_t __p1) {
  int8x8_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 4, 12, 5, 13, 6, 14, 7, 15);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) float32x2_t vzip2_f32(float32x2_t __p0, float32x2_t __p1) {
  float32x2_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 1, 3);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vzip2_s32(int32x2_t __p0, int32x2_t __p1) {
  int32x2_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 1, 3);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vzip2_s16(int16x4_t __p0, int16x4_t __p1) {
  int16x4_t __ret;
  __ret = __builtin_shufflevector(__p0, __p1, 2, 6, 3, 7);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x16_t vabaq_u8(uint8x16_t __p0, uint8x16_t __p1, uint8x16_t __p2) {
  uint8x16_t __ret;
  __ret = __p0 + vabdq_u8(__p1, __p2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vabaq_u32(uint32x4_t __p0, uint32x4_t __p1, uint32x4_t __p2) {
  uint32x4_t __ret;
  __ret = __p0 + vabdq_u32(__p1, __p2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vabaq_u16(uint16x8_t __p0, uint16x8_t __p1, uint16x8_t __p2) {
  uint16x8_t __ret;
  __ret = __p0 + vabdq_u16(__p1, __p2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x16_t vabaq_s8(int8x16_t __p0, int8x16_t __p1, int8x16_t __p2) {
  int8x16_t __ret;
  __ret = __p0 + vabdq_s8(__p1, __p2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vabaq_s32(int32x4_t __p0, int32x4_t __p1, int32x4_t __p2) {
  int32x4_t __ret;
  __ret = __p0 + vabdq_s32(__p1, __p2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vabaq_s16(int16x8_t __p0, int16x8_t __p1, int16x8_t __p2) {
  int16x8_t __ret;
  __ret = __p0 + vabdq_s16(__p1, __p2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint8x8_t vaba_u8(uint8x8_t __p0, uint8x8_t __p1, uint8x8_t __p2) {
  uint8x8_t __ret;
  __ret = __p0 + vabd_u8(__p1, __p2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x2_t vaba_u32(uint32x2_t __p0, uint32x2_t __p1, uint32x2_t __p2) {
  uint32x2_t __ret;
  __ret = __p0 + vabd_u32(__p1, __p2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x4_t vaba_u16(uint16x4_t __p0, uint16x4_t __p1, uint16x4_t __p2) {
  uint16x4_t __ret;
  __ret = __p0 + vabd_u16(__p1, __p2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int8x8_t vaba_s8(int8x8_t __p0, int8x8_t __p1, int8x8_t __p2) {
  int8x8_t __ret;
  __ret = __p0 + vabd_s8(__p1, __p2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x2_t vaba_s32(int32x2_t __p0, int32x2_t __p1, int32x2_t __p2) {
  int32x2_t __ret;
  __ret = __p0 + vabd_s32(__p1, __p2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x4_t vaba_s16(int16x4_t __p0, int16x4_t __p1, int16x4_t __p2) {
  int16x4_t __ret;
  __ret = __p0 + vabd_s16(__p1, __p2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vabdl_u8(uint8x8_t __p0, uint8x8_t __p1) {
  uint16x8_t __ret;
  __ret = (uint16x8_t)(vmovl_u8((uint8x8_t)(vabd_u8(__p0, __p1))));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vabdl_u32(uint32x2_t __p0, uint32x2_t __p1) {
  uint64x2_t __ret;
  __ret = (uint64x2_t)(vmovl_u32((uint32x2_t)(vabd_u32(__p0, __p1))));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vabdl_u16(uint16x4_t __p0, uint16x4_t __p1) {
  uint32x4_t __ret;
  __ret = (uint32x4_t)(vmovl_u16((uint16x4_t)(vabd_u16(__p0, __p1))));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vabdl_s8(int8x8_t __p0, int8x8_t __p1) {
  int16x8_t __ret;
  __ret = (int16x8_t)(vmovl_u8((uint8x8_t)(vabd_s8(__p0, __p1))));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vabdl_s32(int32x2_t __p0, int32x2_t __p1) {
  int64x2_t __ret;
  __ret = (int64x2_t)(vmovl_u32((uint32x2_t)(vabd_s32(__p0, __p1))));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vabdl_s16(int16x4_t __p0, int16x4_t __p1) {
  int32x4_t __ret;
  __ret = (int32x4_t)(vmovl_u16((uint16x4_t)(vabd_s16(__p0, __p1))));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vaddl_u8(uint8x8_t __p0, uint8x8_t __p1) {
  uint16x8_t __ret;
  __ret = vmovl_u8(__p0) + vmovl_u8(__p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vaddl_u32(uint32x2_t __p0, uint32x2_t __p1) {
  uint64x2_t __ret;
  __ret = vmovl_u32(__p0) + vmovl_u32(__p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vaddl_u16(uint16x4_t __p0, uint16x4_t __p1) {
  uint32x4_t __ret;
  __ret = vmovl_u16(__p0) + vmovl_u16(__p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vaddl_s8(int8x8_t __p0, int8x8_t __p1) {
  int16x8_t __ret;
  __ret = vmovl_s8(__p0) + vmovl_s8(__p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vaddl_s32(int32x2_t __p0, int32x2_t __p1) {
  int64x2_t __ret;
  __ret = vmovl_s32(__p0) + vmovl_s32(__p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vaddl_s16(int16x4_t __p0, int16x4_t __p1) {
  int32x4_t __ret;
  __ret = vmovl_s16(__p0) + vmovl_s16(__p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vaddw_u8(uint16x8_t __p0, uint8x8_t __p1) {
  uint16x8_t __ret;
  __ret = __p0 + vmovl_u8(__p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vaddw_u32(uint64x2_t __p0, uint32x2_t __p1) {
  uint64x2_t __ret;
  __ret = __p0 + vmovl_u32(__p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vaddw_u16(uint32x4_t __p0, uint16x4_t __p1) {
  uint32x4_t __ret;
  __ret = __p0 + vmovl_u16(__p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vaddw_s8(int16x8_t __p0, int8x8_t __p1) {
  int16x8_t __ret;
  __ret = __p0 + vmovl_s8(__p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vaddw_s32(int64x2_t __p0, int32x2_t __p1) {
  int64x2_t __ret;
  __ret = __p0 + vmovl_s32(__p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vaddw_s16(int32x4_t __p0, int16x4_t __p1) {
  int32x4_t __ret;
  __ret = __p0 + vmovl_s16(__p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vmlal_u8(uint16x8_t __p0, uint8x8_t __p1, uint8x8_t __p2) {
  uint16x8_t __ret;
  __ret = __p0 + vmull_u8(__p1, __p2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vmlal_u32(uint64x2_t __p0, uint32x2_t __p1, uint32x2_t __p2) {
  uint64x2_t __ret;
  __ret = __p0 + vmull_u32(__p1, __p2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vmlal_u16(uint32x4_t __p0, uint16x4_t __p1, uint16x4_t __p2) {
  uint32x4_t __ret;
  __ret = __p0 + vmull_u16(__p1, __p2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vmlal_s8(int16x8_t __p0, int8x8_t __p1, int8x8_t __p2) {
  int16x8_t __ret;
  __ret = __p0 + vmull_s8(__p1, __p2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vmlal_s32(int64x2_t __p0, int32x2_t __p1, int32x2_t __p2) {
  int64x2_t __ret;
  __ret = __p0 + vmull_s32(__p1, __p2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vmlal_s16(int32x4_t __p0, int16x4_t __p1, int16x4_t __p2) {
  int32x4_t __ret;
  __ret = __p0 + vmull_s16(__p1, __p2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vmlal_n_u32(uint64x2_t __p0, uint32x2_t __p1, uint32_t __p2) {
  uint64x2_t __ret;
  __ret = __p0 + vmull_u32(__p1, (uint32x2_t) {__p2, __p2});
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vmlal_n_u16(uint32x4_t __p0, uint16x4_t __p1, uint16_t __p2) {
  uint32x4_t __ret;
  __ret = __p0 + vmull_u16(__p1, (uint16x4_t) {__p2, __p2, __p2, __p2});
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vmlal_n_s32(int64x2_t __p0, int32x2_t __p1, int32_t __p2) {
  int64x2_t __ret;
  __ret = __p0 + vmull_s32(__p1, (int32x2_t) {__p2, __p2});
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vmlal_n_s16(int32x4_t __p0, int16x4_t __p1, int16_t __p2) {
  int32x4_t __ret;
  __ret = __p0 + vmull_s16(__p1, (int16x4_t) {__p2, __p2, __p2, __p2});
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vmlsl_u8(uint16x8_t __p0, uint8x8_t __p1, uint8x8_t __p2) {
  uint16x8_t __ret;
  __ret = __p0 - vmull_u8(__p1, __p2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vmlsl_u32(uint64x2_t __p0, uint32x2_t __p1, uint32x2_t __p2) {
  uint64x2_t __ret;
  __ret = __p0 - vmull_u32(__p1, __p2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vmlsl_u16(uint32x4_t __p0, uint16x4_t __p1, uint16x4_t __p2) {
  uint32x4_t __ret;
  __ret = __p0 - vmull_u16(__p1, __p2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vmlsl_s8(int16x8_t __p0, int8x8_t __p1, int8x8_t __p2) {
  int16x8_t __ret;
  __ret = __p0 - vmull_s8(__p1, __p2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vmlsl_s32(int64x2_t __p0, int32x2_t __p1, int32x2_t __p2) {
  int64x2_t __ret;
  __ret = __p0 - vmull_s32(__p1, __p2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vmlsl_s16(int32x4_t __p0, int16x4_t __p1, int16x4_t __p2) {
  int32x4_t __ret;
  __ret = __p0 - vmull_s16(__p1, __p2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vmlsl_n_u32(uint64x2_t __p0, uint32x2_t __p1, uint32_t __p2) {
  uint64x2_t __ret;
  __ret = __p0 - vmull_u32(__p1, (uint32x2_t) {__p2, __p2});
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vmlsl_n_u16(uint32x4_t __p0, uint16x4_t __p1, uint16_t __p2) {
  uint32x4_t __ret;
  __ret = __p0 - vmull_u16(__p1, (uint16x4_t) {__p2, __p2, __p2, __p2});
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vmlsl_n_s32(int64x2_t __p0, int32x2_t __p1, int32_t __p2) {
  int64x2_t __ret;
  __ret = __p0 - vmull_s32(__p1, (int32x2_t) {__p2, __p2});
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vmlsl_n_s16(int32x4_t __p0, int16x4_t __p1, int16_t __p2) {
  int32x4_t __ret;
  __ret = __p0 - vmull_s16(__p1, (int16x4_t) {__p2, __p2, __p2, __p2});
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vabdl_high_u8(uint8x16_t __p0, uint8x16_t __p1) {
  uint16x8_t __ret;
  __ret = vabdl_u8(vget_high_u8(__p0), vget_high_u8(__p1));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vabdl_high_u32(uint32x4_t __p0, uint32x4_t __p1) {
  uint64x2_t __ret;
  __ret = vabdl_u32(vget_high_u32(__p0), vget_high_u32(__p1));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vabdl_high_u16(uint16x8_t __p0, uint16x8_t __p1) {
  uint32x4_t __ret;
  __ret = vabdl_u16(vget_high_u16(__p0), vget_high_u16(__p1));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vabdl_high_s8(int8x16_t __p0, int8x16_t __p1) {
  int16x8_t __ret;
  __ret = vabdl_s8(vget_high_s8(__p0), vget_high_s8(__p1));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vabdl_high_s32(int32x4_t __p0, int32x4_t __p1) {
  int64x2_t __ret;
  __ret = vabdl_s32(vget_high_s32(__p0), vget_high_s32(__p1));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vabdl_high_s16(int16x8_t __p0, int16x8_t __p1) {
  int32x4_t __ret;
  __ret = vabdl_s16(vget_high_s16(__p0), vget_high_s16(__p1));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vaddl_high_u8(uint8x16_t __p0, uint8x16_t __p1) {
  uint16x8_t __ret;
  __ret = vmovl_high_u8(__p0) + vmovl_high_u8(__p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vaddl_high_u32(uint32x4_t __p0, uint32x4_t __p1) {
  uint64x2_t __ret;
  __ret = vmovl_high_u32(__p0) + vmovl_high_u32(__p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vaddl_high_u16(uint16x8_t __p0, uint16x8_t __p1) {
  uint32x4_t __ret;
  __ret = vmovl_high_u16(__p0) + vmovl_high_u16(__p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vaddl_high_s8(int8x16_t __p0, int8x16_t __p1) {
  int16x8_t __ret;
  __ret = vmovl_high_s8(__p0) + vmovl_high_s8(__p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vaddl_high_s32(int32x4_t __p0, int32x4_t __p1) {
  int64x2_t __ret;
  __ret = vmovl_high_s32(__p0) + vmovl_high_s32(__p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vaddl_high_s16(int16x8_t __p0, int16x8_t __p1) {
  int32x4_t __ret;
  __ret = vmovl_high_s16(__p0) + vmovl_high_s16(__p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vaddw_high_u8(uint16x8_t __p0, uint8x16_t __p1) {
  uint16x8_t __ret;
  __ret = __p0 + vmovl_high_u8(__p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vaddw_high_u32(uint64x2_t __p0, uint32x4_t __p1) {
  uint64x2_t __ret;
  __ret = __p0 + vmovl_high_u32(__p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vaddw_high_u16(uint32x4_t __p0, uint16x8_t __p1) {
  uint32x4_t __ret;
  __ret = __p0 + vmovl_high_u16(__p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vaddw_high_s8(int16x8_t __p0, int8x16_t __p1) {
  int16x8_t __ret;
  __ret = __p0 + vmovl_high_s8(__p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vaddw_high_s32(int64x2_t __p0, int32x4_t __p1) {
  int64x2_t __ret;
  __ret = __p0 + vmovl_high_s32(__p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vaddw_high_s16(int32x4_t __p0, int16x8_t __p1) {
  int32x4_t __ret;
  __ret = __p0 + vmovl_high_s16(__p1);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vmlal_high_u8(uint16x8_t __p0, uint8x16_t __p1, uint8x16_t __p2) {
  uint16x8_t __ret;
  __ret = vmlal_u8(__p0, vget_high_u8(__p1), vget_high_u8(__p2));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vmlal_high_u32(uint64x2_t __p0, uint32x4_t __p1, uint32x4_t __p2) {
  uint64x2_t __ret;
  __ret = vmlal_u32(__p0, vget_high_u32(__p1), vget_high_u32(__p2));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vmlal_high_u16(uint32x4_t __p0, uint16x8_t __p1, uint16x8_t __p2) {
  uint32x4_t __ret;
  __ret = vmlal_u16(__p0, vget_high_u16(__p1), vget_high_u16(__p2));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vmlal_high_s8(int16x8_t __p0, int8x16_t __p1, int8x16_t __p2) {
  int16x8_t __ret;
  __ret = vmlal_s8(__p0, vget_high_s8(__p1), vget_high_s8(__p2));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vmlal_high_s32(int64x2_t __p0, int32x4_t __p1, int32x4_t __p2) {
  int64x2_t __ret;
  __ret = vmlal_s32(__p0, vget_high_s32(__p1), vget_high_s32(__p2));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vmlal_high_s16(int32x4_t __p0, int16x8_t __p1, int16x8_t __p2) {
  int32x4_t __ret;
  __ret = vmlal_s16(__p0, vget_high_s16(__p1), vget_high_s16(__p2));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vmlal_high_n_u32(uint64x2_t __p0, uint32x4_t __p1, uint32_t __p2) {
  uint64x2_t __ret;
  __ret = vmlal_n_u32(__p0, vget_high_u32(__p1), __p2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vmlal_high_n_u16(uint32x4_t __p0, uint16x8_t __p1, uint16_t __p2) {
  uint32x4_t __ret;
  __ret = vmlal_n_u16(__p0, vget_high_u16(__p1), __p2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vmlal_high_n_s32(int64x2_t __p0, int32x4_t __p1, int32_t __p2) {
  int64x2_t __ret;
  __ret = vmlal_n_s32(__p0, vget_high_s32(__p1), __p2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vmlal_high_n_s16(int32x4_t __p0, int16x8_t __p1, int16_t __p2) {
  int32x4_t __ret;
  __ret = vmlal_n_s16(__p0, vget_high_s16(__p1), __p2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vmlsl_high_u8(uint16x8_t __p0, uint8x16_t __p1, uint8x16_t __p2) {
  uint16x8_t __ret;
  __ret = vmlsl_u8(__p0, vget_high_u8(__p1), vget_high_u8(__p2));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vmlsl_high_u32(uint64x2_t __p0, uint32x4_t __p1, uint32x4_t __p2) {
  uint64x2_t __ret;
  __ret = vmlsl_u32(__p0, vget_high_u32(__p1), vget_high_u32(__p2));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vmlsl_high_u16(uint32x4_t __p0, uint16x8_t __p1, uint16x8_t __p2) {
  uint32x4_t __ret;
  __ret = vmlsl_u16(__p0, vget_high_u16(__p1), vget_high_u16(__p2));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vmlsl_high_s8(int16x8_t __p0, int8x16_t __p1, int8x16_t __p2) {
  int16x8_t __ret;
  __ret = vmlsl_s8(__p0, vget_high_s8(__p1), vget_high_s8(__p2));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vmlsl_high_s32(int64x2_t __p0, int32x4_t __p1, int32x4_t __p2) {
  int64x2_t __ret;
  __ret = vmlsl_s32(__p0, vget_high_s32(__p1), vget_high_s32(__p2));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vmlsl_high_s16(int32x4_t __p0, int16x8_t __p1, int16x8_t __p2) {
  int32x4_t __ret;
  __ret = vmlsl_s16(__p0, vget_high_s16(__p1), vget_high_s16(__p2));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vmlsl_high_n_u32(uint64x2_t __p0, uint32x4_t __p1, uint32_t __p2) {
  uint64x2_t __ret;
  __ret = vmlsl_n_u32(__p0, vget_high_u32(__p1), __p2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vmlsl_high_n_u16(uint32x4_t __p0, uint16x8_t __p1, uint16_t __p2) {
  uint32x4_t __ret;
  __ret = vmlsl_n_u16(__p0, vget_high_u16(__p1), __p2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vmlsl_high_n_s32(int64x2_t __p0, int32x4_t __p1, int32_t __p2) {
  int64x2_t __ret;
  __ret = vmlsl_n_s32(__p0, vget_high_s32(__p1), __p2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vmlsl_high_n_s16(int32x4_t __p0, int16x8_t __p1, int16_t __p2) {
  int32x4_t __ret;
  __ret = vmlsl_n_s16(__p0, vget_high_s16(__p1), __p2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vabal_u8(uint16x8_t __p0, uint8x8_t __p1, uint8x8_t __p2) {
  uint16x8_t __ret;
  __ret = __p0 + vabdl_u8(__p1, __p2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vabal_u32(uint64x2_t __p0, uint32x2_t __p1, uint32x2_t __p2) {
  uint64x2_t __ret;
  __ret = __p0 + vabdl_u32(__p1, __p2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vabal_u16(uint32x4_t __p0, uint16x4_t __p1, uint16x4_t __p2) {
  uint32x4_t __ret;
  __ret = __p0 + vabdl_u16(__p1, __p2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vabal_s8(int16x8_t __p0, int8x8_t __p1, int8x8_t __p2) {
  int16x8_t __ret;
  __ret = __p0 + vabdl_s8(__p1, __p2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vabal_s32(int64x2_t __p0, int32x2_t __p1, int32x2_t __p2) {
  int64x2_t __ret;
  __ret = __p0 + vabdl_s32(__p1, __p2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vabal_s16(int32x4_t __p0, int16x4_t __p1, int16x4_t __p2) {
  int32x4_t __ret;
  __ret = __p0 + vabdl_s16(__p1, __p2);
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint16x8_t vabal_high_u8(uint16x8_t __p0, uint8x16_t __p1, uint8x16_t __p2) {
  uint16x8_t __ret;
  __ret = vabal_u8(__p0, vget_high_u8(__p1), vget_high_u8(__p2));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint64x2_t vabal_high_u32(uint64x2_t __p0, uint32x4_t __p1, uint32x4_t __p2) {
  uint64x2_t __ret;
  __ret = vabal_u32(__p0, vget_high_u32(__p1), vget_high_u32(__p2));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) uint32x4_t vabal_high_u16(uint32x4_t __p0, uint16x8_t __p1, uint16x8_t __p2) {
  uint32x4_t __ret;
  __ret = vabal_u16(__p0, vget_high_u16(__p1), vget_high_u16(__p2));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int16x8_t vabal_high_s8(int16x8_t __p0, int8x16_t __p1, int8x16_t __p2) {
  int16x8_t __ret;
  __ret = vabal_s8(__p0, vget_high_s8(__p1), vget_high_s8(__p2));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int64x2_t vabal_high_s32(int64x2_t __p0, int32x4_t __p1, int32x4_t __p2) {
  int64x2_t __ret;
  __ret = vabal_s32(__p0, vget_high_s32(__p1), vget_high_s32(__p2));
  return __ret;
}
static inline __attribute__((__always_inline__, __nodebug__)) int32x4_t vabal_high_s16(int32x4_t __p0, int16x8_t __p1, int16x8_t __p2) {
  int32x4_t __ret;
  __ret = vabal_s16(__p0, vget_high_s16(__p1), vget_high_s16(__p2));
  return __ret;
}
typedef bool simd_bool;







typedef simd_bool __SIMD_BOOLEAN_TYPE__;








typedef char simd_char1;






typedef __attribute__((__ext_vector_type__(2))) char simd_char2;





typedef __attribute__((__ext_vector_type__(3))) char simd_char3;






typedef __attribute__((__ext_vector_type__(4))) char simd_char4;







typedef __attribute__((__ext_vector_type__(8))) char simd_char8;







typedef __attribute__((__ext_vector_type__(16))) char simd_char16;
typedef __attribute__((__ext_vector_type__(32))) char simd_char32;
typedef __attribute__((__ext_vector_type__(64))) char simd_char64;


typedef unsigned char simd_uchar1;







typedef __attribute__((__ext_vector_type__(2))) unsigned char simd_uchar2;





typedef __attribute__((__ext_vector_type__(3))) unsigned char simd_uchar3;







typedef __attribute__((__ext_vector_type__(4))) unsigned char simd_uchar4;







typedef __attribute__((__ext_vector_type__(8))) unsigned char simd_uchar8;







typedef __attribute__((__ext_vector_type__(16))) unsigned char simd_uchar16;







typedef __attribute__((__ext_vector_type__(32))) unsigned char simd_uchar32;







typedef __attribute__((__ext_vector_type__(64))) unsigned char simd_uchar64;


typedef short simd_short1;







typedef __attribute__((__ext_vector_type__(2))) short simd_short2;





typedef __attribute__((__ext_vector_type__(3))) short simd_short3;







typedef __attribute__((__ext_vector_type__(4))) short simd_short4;







typedef __attribute__((__ext_vector_type__(8))) short simd_short8;







typedef __attribute__((__ext_vector_type__(16))) short simd_short16;
typedef __attribute__((__ext_vector_type__(32))) short simd_short32;


typedef unsigned short simd_ushort1;







typedef __attribute__((__ext_vector_type__(2))) unsigned short simd_ushort2;





typedef __attribute__((__ext_vector_type__(3))) unsigned short simd_ushort3;







typedef __attribute__((__ext_vector_type__(4))) unsigned short simd_ushort4;







typedef __attribute__((__ext_vector_type__(8))) unsigned short simd_ushort8;







typedef __attribute__((__ext_vector_type__(16))) unsigned short simd_ushort16;







typedef __attribute__((__ext_vector_type__(32))) unsigned short simd_ushort32;


typedef int simd_int1;






typedef __attribute__((__ext_vector_type__(2))) int simd_int2;





typedef __attribute__((__ext_vector_type__(3))) int simd_int3;






typedef __attribute__((__ext_vector_type__(4))) int simd_int4;







typedef __attribute__((__ext_vector_type__(8))) int simd_int8;







typedef __attribute__((__ext_vector_type__(16))) int simd_int16;


typedef unsigned int simd_uint1;







typedef __attribute__((__ext_vector_type__(2))) unsigned int simd_uint2;





typedef __attribute__((__ext_vector_type__(3))) unsigned int simd_uint3;







typedef __attribute__((__ext_vector_type__(4))) unsigned int simd_uint4;







typedef __attribute__((__ext_vector_type__(8))) unsigned int simd_uint8;







typedef __attribute__((__ext_vector_type__(16))) unsigned int simd_uint16;


typedef float simd_float1;







typedef __attribute__((__ext_vector_type__(2))) float simd_float2;





typedef __attribute__((__ext_vector_type__(3))) float simd_float3;







typedef __attribute__((__ext_vector_type__(4))) float simd_float4;







typedef __attribute__((__ext_vector_type__(8))) float simd_float8;







typedef __attribute__((__ext_vector_type__(16))) float simd_float16;



typedef long simd_long1;
typedef __attribute__((__ext_vector_type__(2))) simd_long1 simd_long2;





typedef __attribute__((__ext_vector_type__(3))) simd_long1 simd_long3;







typedef __attribute__((__ext_vector_type__(4))) simd_long1 simd_long4;







typedef __attribute__((__ext_vector_type__(8))) simd_long1 simd_long8;



typedef unsigned long simd_ulong1;
typedef __attribute__((__ext_vector_type__(2))) simd_ulong1 simd_ulong2;





typedef __attribute__((__ext_vector_type__(3))) simd_ulong1 simd_ulong3;







typedef __attribute__((__ext_vector_type__(4))) simd_ulong1 simd_ulong4;







typedef __attribute__((__ext_vector_type__(8))) simd_ulong1 simd_ulong8;


typedef double simd_double1;







typedef __attribute__((__ext_vector_type__(2))) double simd_double2;





typedef __attribute__((__ext_vector_type__(3))) double simd_double3;







typedef __attribute__((__ext_vector_type__(4))) double simd_double4;







typedef __attribute__((__ext_vector_type__(8))) double simd_double8;







namespace simd {



typedef ::simd_char1 char1;







typedef ::simd_char2 char2;





typedef ::simd_char3 char3;







typedef ::simd_char4 char4;







typedef ::simd_char8 char8;







typedef ::simd_char16 char16;
typedef ::simd_char32 char32;
typedef ::simd_char64 char64;




typedef ::simd_uchar1 uchar1;







typedef ::simd_uchar2 uchar2;





typedef ::simd_uchar3 uchar3;







typedef ::simd_uchar4 uchar4;







typedef ::simd_uchar8 uchar8;







typedef ::simd_uchar16 uchar16;







typedef ::simd_uchar32 uchar32;







typedef ::simd_uchar64 uchar64;




typedef ::simd_short1 short1;







typedef ::simd_short2 short2;





typedef ::simd_short3 short3;







typedef ::simd_short4 short4;







typedef ::simd_short8 short8;
typedef ::simd_short16 short16;
typedef ::simd_short32 short32;




typedef ::simd_ushort1 ushort1;







typedef ::simd_ushort2 ushort2;





typedef ::simd_ushort3 ushort3;







typedef ::simd_ushort4 ushort4;







typedef ::simd_ushort8 ushort8;







typedef ::simd_ushort16 ushort16;







typedef ::simd_ushort32 ushort32;



typedef ::simd_int1 int1;






typedef ::simd_int2 int2;





typedef ::simd_int3 int3;






typedef ::simd_int4 int4;







typedef ::simd_int8 int8;
typedef ::simd_int16 int16;




typedef ::simd_uint1 uint1;







typedef ::simd_uint2 uint2;





typedef ::simd_uint3 uint3;







typedef ::simd_uint4 uint4;







typedef ::simd_uint8 uint8;







typedef ::simd_uint16 uint16;




typedef ::simd_float1 float1;







typedef ::simd_float2 float2;





typedef ::simd_float3 float3;







typedef ::simd_float4 float4;







typedef ::simd_float8 float8;







typedef ::simd_float16 float16;




typedef ::simd_long1 long1;







typedef ::simd_long2 long2;





typedef ::simd_long3 long3;







typedef ::simd_long4 long4;







typedef ::simd_long8 long8;




typedef ::simd_ulong1 ulong1;







typedef ::simd_ulong2 ulong2;





typedef ::simd_ulong3 ulong3;







typedef ::simd_ulong4 ulong4;







typedef ::simd_ulong8 ulong8;




typedef ::simd_double1 double1;







typedef ::simd_double2 double2;





typedef ::simd_double3 double3;







typedef ::simd_double4 double4;







typedef ::simd_double8 double8;

}
typedef simd_char2 vector_char2;




typedef simd_char3 vector_char3;




typedef simd_char4 vector_char4;




typedef simd_char8 vector_char8;




typedef simd_char16 vector_char16;





typedef simd_char32 vector_char32;




typedef simd_uchar2 vector_uchar2;




typedef simd_uchar3 vector_uchar3;




typedef simd_uchar4 vector_uchar4;




typedef simd_uchar8 vector_uchar8;




typedef simd_uchar16 vector_uchar16;




typedef simd_uchar32 vector_uchar32;




typedef simd_short2 vector_short2;




typedef simd_short3 vector_short3;




typedef simd_short4 vector_short4;




typedef simd_short8 vector_short8;




typedef simd_short16 vector_short16;





typedef simd_short32 vector_short32;




typedef simd_ushort2 vector_ushort2;




typedef simd_ushort3 vector_ushort3;




typedef simd_ushort4 vector_ushort4;




typedef simd_ushort8 vector_ushort8;




typedef simd_ushort16 vector_ushort16;




typedef simd_ushort32 vector_ushort32;




typedef simd_int2 vector_int2;




typedef simd_int3 vector_int3;




typedef simd_int4 vector_int4;




typedef simd_int8 vector_int8;




typedef simd_int16 vector_int16;




typedef simd_uint2 vector_uint2;




typedef simd_uint3 vector_uint3;




typedef simd_uint4 vector_uint4;




typedef simd_uint8 vector_uint8;




typedef simd_uint16 vector_uint16;




typedef simd_float2 vector_float2;




typedef simd_float3 vector_float3;




typedef simd_float4 vector_float4;




typedef simd_float8 vector_float8;




typedef simd_float16 vector_float16;




typedef simd_long1 vector_long1;




typedef simd_long2 vector_long2;




typedef simd_long3 vector_long3;




typedef simd_long4 vector_long4;




typedef simd_long8 vector_long8;




typedef simd_ulong1 vector_ulong1;




typedef simd_ulong2 vector_ulong2;




typedef simd_ulong3 vector_ulong3;




typedef simd_ulong4 vector_ulong4;




typedef simd_ulong8 vector_ulong8;




typedef simd_double2 vector_double2;




typedef simd_double3 vector_double3;




typedef simd_double4 vector_double4;




typedef simd_double8 vector_double8;
typedef struct { simd_float2 columns[2]; } simd_float2x2;


typedef struct { simd_float2 columns[3]; } simd_float3x2;


typedef struct { simd_float2 columns[4]; } simd_float4x2;


typedef struct { simd_float3 columns[2]; } simd_float2x3;


typedef struct { simd_float3 columns[3]; } simd_float3x3;


typedef struct { simd_float3 columns[4]; } simd_float4x3;


typedef struct { simd_float4 columns[2]; } simd_float2x4;


typedef struct { simd_float4 columns[3]; } simd_float3x4;


typedef struct { simd_float4 columns[4]; } simd_float4x4;


typedef struct { simd_double2 columns[2]; } simd_double2x2;


typedef struct { simd_double2 columns[3]; } simd_double3x2;


typedef struct { simd_double2 columns[4]; } simd_double4x2;


typedef struct { simd_double3 columns[2]; } simd_double2x3;


typedef struct { simd_double3 columns[3]; } simd_double3x3;


typedef struct { simd_double3 columns[4]; } simd_double4x3;


typedef struct { simd_double4 columns[2]; } simd_double2x4;


typedef struct { simd_double4 columns[3]; } simd_double3x4;


typedef struct { simd_double4 columns[4]; } simd_double4x4;
typedef struct { simd_float4 vector; } simd_quatf;


typedef struct { simd_double4 vector; } simd_quatd;



typedef simd_float2x2 matrix_float2x2;
typedef simd_float3x2 matrix_float3x2;
typedef simd_float4x2 matrix_float4x2;

typedef simd_float2x3 matrix_float2x3;
typedef simd_float3x3 matrix_float3x3;
typedef simd_float4x3 matrix_float4x3;

typedef simd_float2x4 matrix_float2x4;
typedef simd_float3x4 matrix_float3x4;
typedef simd_float4x4 matrix_float4x4;

typedef simd_double2x2 matrix_double2x2;
typedef simd_double3x2 matrix_double3x2;
typedef simd_double4x2 matrix_double4x2;

typedef simd_double2x3 matrix_double2x3;
typedef simd_double3x3 matrix_double3x3;
typedef simd_double4x3 matrix_double4x3;

typedef simd_double2x4 matrix_double2x4;
typedef simd_double3x4 matrix_double3x4;
typedef simd_double4x4 matrix_double4x4;
namespace simd {

  struct float2x2 : ::simd_float2x2 {
    float2x2() { columns[0] = 0; columns[1] = 0; }



    float2x2(float2 v) { columns[0] = (float2){v.x,0}; columns[1] = (float2){0,v.y}; }
    float2x2(float2 c0, float2 c1) { columns[0] = c0; columns[1] = c1; }
    float2x2(::simd_float2x2 m) : ::simd_float2x2(m) { }
  };

  struct float3x2 : ::simd_float3x2 {
    float3x2() { columns[0] = 0; columns[1] = 0; columns[2] = 0; }



    float3x2(float2 v) { columns[0] = (float2){v.x,0}; columns[1] = (float2){0,v.y}; columns[2] = 0; }
    float3x2(float2 c0, float2 c1, float2 c2) { columns[0] = c0; columns[1] = c1; columns[2] = c2; }
    float3x2(::simd_float3x2 m) : ::simd_float3x2(m) { }
  };

  struct float4x2 : ::simd_float4x2 {
    float4x2() { columns[0] = 0; columns[1] = 0; columns[2] = 0; columns[3] = 0; }



    float4x2(float2 v) { columns[0] = (float2){v.x,0}; columns[1] = (float2){0,v.y}; columns[2] = 0; columns[3] = 0; }
    float4x2(float2 c0, float2 c1, float2 c2, float2 c3) { columns[0] = c0; columns[1] = c1; columns[2] = c2; columns[3] = c3; }
    float4x2(::simd_float4x2 m) : ::simd_float4x2(m) { }
  };

  struct float2x3 : ::simd_float2x3 {
    float2x3() { columns[0] = 0; columns[1] = 0; }



    float2x3(float2 v) { columns[0] = (float3){v.x,0,0}; columns[1] = (float3){0,v.y,0}; }
    float2x3(float3 c0, float3 c1) { columns[0] = c0; columns[1] = c1; }
    float2x3(::simd_float2x3 m) : ::simd_float2x3(m) { }
  };

  struct float3x3 : ::simd_float3x3 {
    float3x3() { columns[0] = 0; columns[1] = 0; columns[2] = 0; }



    float3x3(float3 v) { columns[0] = (float3){v.x,0,0}; columns[1] = (float3){0,v.y,0}; columns[2] = (float3){0,0,v.z}; }
    float3x3(float3 c0, float3 c1, float3 c2) { columns[0] = c0; columns[1] = c1; columns[2] = c2; }
    float3x3(::simd_float3x3 m) : ::simd_float3x3(m) { }



  };

  struct float4x3 : ::simd_float4x3 {
    float4x3() { columns[0] = 0; columns[1] = 0; columns[2] = 0; columns[3] = 0; }



    float4x3(float3 v) { columns[0] = (float3){v.x,0,0}; columns[1] = (float3){0,v.y,0}; columns[2] = (float3){0,0,v.z}; columns[3] = 0; }
    float4x3(float3 c0, float3 c1, float3 c2, float3 c3) { columns[0] = c0; columns[1] = c1; columns[2] = c2; columns[3] = c3; }
    float4x3(::simd_float4x3 m) : ::simd_float4x3(m) { }
  };

  struct float2x4 : ::simd_float2x4 {
    float2x4() { columns[0] = 0; columns[1] = 0; }



    float2x4(float2 v) { columns[0] = (float4){v.x,0,0,0}; columns[1] = (float4){0,v.y,0,0}; }
    float2x4(float4 c0, float4 c1) { columns[0] = c0; columns[1] = c1; }
    float2x4(::simd_float2x4 m) : ::simd_float2x4(m) { }
  };

  struct float3x4 : ::simd_float3x4 {
    float3x4() { columns[0] = 0; columns[1] = 0; columns[2] = 0; }



    float3x4(float3 v) { columns[0] = (float4){v.x,0,0,0}; columns[1] = (float4){0,v.y,0,0}; columns[2] = (float4){0,0,v.z,0}; }
    float3x4(float4 c0, float4 c1, float4 c2) { columns[0] = c0; columns[1] = c1; columns[2] = c2; }
    float3x4(::simd_float3x4 m) : ::simd_float3x4(m) { }
  };

  struct float4x4 : ::simd_float4x4 {
    float4x4() { columns[0] = 0; columns[1] = 0; columns[2] = 0; columns[3] = 0; }



    float4x4(float4 v) { columns[0] = (float4){v.x,0,0,0}; columns[1] = (float4){0,v.y,0,0}; columns[2] = (float4){0,0,v.z,0}; columns[3] = (float4){0,0,0,v.w}; }
    float4x4(float4 c0, float4 c1, float4 c2, float4 c3) { columns[0] = c0; columns[1] = c1; columns[2] = c2; columns[3] = c3; }
    float4x4(::simd_float4x4 m) : ::simd_float4x4(m) { }



  };

  struct double2x2 : ::simd_double2x2 {
    double2x2() { columns[0] = 0; columns[1] = 0; }



    double2x2(double2 v) { columns[0] = (double2){v.x,0}; columns[1] = (double2){0,v.y}; }
    double2x2(double2 c0, double2 c1) { columns[0] = c0; columns[1] = c1; }
    double2x2(::simd_double2x2 m) : ::simd_double2x2(m) { }
  };

  struct double3x2 : ::simd_double3x2 {
    double3x2() { columns[0] = 0; columns[1] = 0; columns[2] = 0; }



    double3x2(double2 v) { columns[0] = (double2){v.x,0}; columns[1] = (double2){0,v.y}; columns[2] = 0; }
    double3x2(double2 c0, double2 c1, double2 c2) { columns[0] = c0; columns[1] = c1; columns[2] = c2; }
    double3x2(::simd_double3x2 m) : ::simd_double3x2(m) { }
  };

  struct double4x2 : ::simd_double4x2 {
    double4x2() { columns[0] = 0; columns[1] = 0; columns[2] = 0; columns[3] = 0; }



    double4x2(double2 v) { columns[0] = (double2){v.x,0}; columns[1] = (double2){0,v.y}; columns[2] = 0; columns[3] = 0; }
    double4x2(double2 c0, double2 c1, double2 c2, double2 c3) { columns[0] = c0; columns[1] = c1; columns[2] = c2; columns[3] = c3; }
    double4x2(::simd_double4x2 m) : ::simd_double4x2(m) { }
  };

  struct double2x3 : ::simd_double2x3 {
    double2x3() { columns[0] = 0; columns[1] = 0; }



    double2x3(double2 v) { columns[0] = (double3){v.x,0,0}; columns[1] = (double3){0,v.y,0}; }
    double2x3(double3 c0, double3 c1) { columns[0] = c0; columns[1] = c1; }
    double2x3(::simd_double2x3 m) : ::simd_double2x3(m) { }
  };

  struct double3x3 : ::simd_double3x3 {
    double3x3() { columns[0] = 0; columns[1] = 0; columns[2] = 0; }



    double3x3(double3 v) { columns[0] = (double3){v.x,0,0}; columns[1] = (double3){0,v.y,0}; columns[2] = (double3){0,0,v.z}; }
    double3x3(double3 c0, double3 c1, double3 c2) { columns[0] = c0; columns[1] = c1; columns[2] = c2; }
    double3x3(::simd_double3x3 m) : ::simd_double3x3(m) { }



  };

  struct double4x3 : ::simd_double4x3 {
    double4x3() { columns[0] = 0; columns[1] = 0; columns[2] = 0; columns[3] = 0; }



    double4x3(double3 v) { columns[0] = (double3){v.x,0,0}; columns[1] = (double3){0,v.y,0}; columns[2] = (double3){0,0,v.z}; columns[3] = 0; }
    double4x3(double3 c0, double3 c1, double3 c2, double3 c3) { columns[0] = c0; columns[1] = c1; columns[2] = c2; columns[3] = c3; }
    double4x3(::simd_double4x3 m) : ::simd_double4x3(m) { }
  };

  struct double2x4 : ::simd_double2x4 {
    double2x4() { columns[0] = 0; columns[1] = 0; }



    double2x4(double2 v) { columns[0] = (double4){v.x,0,0,0}; columns[1] = (double4){0,v.y,0,0}; }
    double2x4(double4 c0, double4 c1) { columns[0] = c0; columns[1] = c1; }
    double2x4(::simd_double2x4 m) : ::simd_double2x4(m) { }
  };

  struct double3x4 : ::simd_double3x4 {
    double3x4() { columns[0] = 0; columns[1] = 0; columns[2] = 0; }



    double3x4(double3 v) { columns[0] = (double4){v.x,0,0,0}; columns[1] = (double4){0,v.y,0,0}; columns[2] = (double4){0,0,v.z,0}; }
    double3x4(double4 c0, double4 c1, double4 c2) { columns[0] = c0; columns[1] = c1; columns[2] = c2; }
    double3x4(::simd_double3x4 m) : ::simd_double3x4(m) { }
  };

  struct double4x4 : ::simd_double4x4 {
    double4x4() { columns[0] = 0; columns[1] = 0; columns[2] = 0; columns[3] = 0; }



    double4x4(double4 v) { columns[0] = (double4){v.x,0,0,0}; columns[1] = (double4){0,v.y,0,0}; columns[2] = (double4){0,0,v.z,0}; columns[3] = (double4){0,0,0,v.w}; }
    double4x4(double4 c0, double4 c1, double4 c2, double4 c3) { columns[0] = c0; columns[1] = c1; columns[2] = c2; columns[3] = c3; }
    double4x4(::simd_double4x4 m) : ::simd_double4x4(m) { }



  };
}


#pragma clang assume_nonnull begin

// @class AVCameraCalibrationDataInternal;
#ifndef _REWRITER_typedef_AVCameraCalibrationDataInternal
#define _REWRITER_typedef_AVCameraCalibrationDataInternal
typedef struct objc_object AVCameraCalibrationDataInternal;
typedef struct {} _objc_exc_AVCameraCalibrationDataInternal;
#endif

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=11_0))) __attribute__((availability(tvos,introduced=11_0))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_AVCameraCalibrationData
#define _REWRITER_typedef_AVCameraCalibrationData
typedef struct objc_object AVCameraCalibrationData;
typedef struct {} _objc_exc_AVCameraCalibrationData;
#endif

struct AVCameraCalibrationData_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVCameraCalibrationDataInternal *__strong _internal;
};


// - (instancetype)init __attribute__((unavailable)); // + (instancetype)new __attribute__((unavailable));
// @property(nonatomic, readonly) matrix_float3x3 intrinsicMatrix;
// @property(nonatomic, readonly) CGSize intrinsicMatrixReferenceDimensions;
// @property(nonatomic, readonly) matrix_float4x3 extrinsicMatrix;






// @property(nonatomic, readonly) float pixelSize;
// @property(nonatomic, readonly) NSData *lensDistortionLookupTable;
// @property(nonatomic, readonly) NSData *inverseLensDistortionLookupTable;
// @property(nonatomic, readonly) CGPoint lensDistortionCenter;
/* @end */

#pragma clang assume_nonnull end




#pragma clang assume_nonnull begin
typedef NSInteger AVDepthDataQuality; enum {
    AVDepthDataQualityLow = 0,
    AVDepthDataQualityHigh = 1,
} __attribute__((availability(ios,introduced=11_0))) __attribute__((availability(tvos,introduced=11_0))) __attribute__((availability(watchos,unavailable)));
typedef NSInteger AVDepthDataAccuracy; enum {
    AVDepthDataAccuracyRelative = 0,
    AVDepthDataAccuracyAbsolute = 1,
} __attribute__((availability(ios,introduced=11_0))) __attribute__((availability(tvos,introduced=11_0))) __attribute__((availability(watchos,unavailable)));

// @class AVDepthDataInternal;
#ifndef _REWRITER_typedef_AVDepthDataInternal
#define _REWRITER_typedef_AVDepthDataInternal
typedef struct objc_object AVDepthDataInternal;
typedef struct {} _objc_exc_AVDepthDataInternal;
#endif

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=11_0))) __attribute__((availability(tvos,introduced=11_0))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_AVDepthData
#define _REWRITER_typedef_AVDepthData
typedef struct objc_object AVDepthData;
typedef struct {} _objc_exc_AVDepthData;
#endif

struct AVDepthData_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVDepthDataInternal *__strong _internal;
};


// - (instancetype)init __attribute__((unavailable)); // + (instancetype)new __attribute__((unavailable));
// + (nullable instancetype)depthDataFromDictionaryRepresentation:(NSDictionary *)imageSourceAuxDataInfoDictionary error:(NSError * _Nullable * _Nullable)outError;
// - (instancetype)depthDataByConvertingToDepthDataType:(OSType)depthDataType;
// - (instancetype)depthDataByApplyingExifOrientation:(CGImagePropertyOrientation)exifOrientation;
// - (nullable instancetype)depthDataByReplacingDepthDataMapWithPixelBuffer:(CVPixelBufferRef)pixelBuffer error:(NSError * _Nullable * _Nullable)outError;
// @property(readonly) NSArray<NSNumber *> *availableDepthDataTypes;
// - (nullable NSDictionary *)dictionaryRepresentationForAuxiliaryDataType:(NSString * _Nullable * _Nullable)outAuxDataType;
// @property(readonly) OSType depthDataType;
// @property(readonly) __attribute__((NSObject)) CVPixelBufferRef depthDataMap __attribute__((objc_returns_inner_pointer));
// @property(readonly) AVDepthDataQuality depthDataQuality;
// @property(readonly, getter=isDepthDataFiltered) BOOL depthDataFiltered;
// @property(readonly) AVDepthDataAccuracy depthDataAccuracy;
// @property(nullable, readonly) AVCameraCalibrationData *cameraCalibrationData;

/* @end */

#pragma clang assume_nonnull end
extern "C" NSString *const AVFoundationErrorDomain __attribute__((availability(ios,introduced=4_0)));

extern "C" NSString *const AVErrorDeviceKey __attribute__((availability(ios,introduced=4_0)));
extern "C" NSString *const AVErrorTimeKey __attribute__((availability(ios,introduced=4_0)));
extern "C" NSString *const AVErrorFileSizeKey __attribute__((availability(ios,introduced=4_0)));
extern "C" NSString *const AVErrorPIDKey __attribute__((availability(ios,introduced=4_0)));
extern "C" NSString *const AVErrorRecordingSuccessfullyFinishedKey __attribute__((availability(ios,introduced=4_0)));
extern "C" NSString *const AVErrorMediaTypeKey __attribute__((availability(ios,introduced=4_3)));
extern "C" NSString *const AVErrorMediaSubTypeKey __attribute__((availability(ios,introduced=4_3)));
extern "C" NSString *const AVErrorPresentationTimeStampKey __attribute__((availability(ios,introduced=8_0)));
extern "C" NSString *const AVErrorPersistentTrackIDKey __attribute__((availability(ios,introduced=8_0)));
extern "C" NSString *const AVErrorFileTypeKey __attribute__((availability(ios,introduced=8_0)));







typedef NSInteger AVError; enum {
    AVErrorUnknown = -11800,
    AVErrorOutOfMemory = -11801,
    AVErrorSessionNotRunning = -11803,
    AVErrorDeviceAlreadyUsedByAnotherSession = -11804,
    AVErrorNoDataCaptured = -11805,
    AVErrorSessionConfigurationChanged = -11806,
    AVErrorDiskFull = -11807,
    AVErrorDeviceWasDisconnected = -11808,
    AVErrorMediaChanged = -11809,
    AVErrorMaximumDurationReached = -11810,
    AVErrorMaximumFileSizeReached = -11811,
    AVErrorMediaDiscontinuity = -11812,
    AVErrorMaximumNumberOfSamplesForFileFormatReached = -11813,
    AVErrorDeviceNotConnected = -11814,
    AVErrorDeviceInUseByAnotherApplication = -11815,
    AVErrorDeviceLockedForConfigurationByAnotherProcess = -11817,

    AVErrorSessionWasInterrupted = -11818,
    AVErrorMediaServicesWereReset = -11819,

    AVErrorExportFailed = -11820,
    AVErrorDecodeFailed = -11821,
    AVErrorInvalidSourceMedia = -11822,
    AVErrorFileAlreadyExists = -11823,
    AVErrorCompositionTrackSegmentsNotContiguous = -11824,
    AVErrorInvalidCompositionTrackSegmentDuration = -11825,
    AVErrorInvalidCompositionTrackSegmentSourceStartTime= -11826,
    AVErrorInvalidCompositionTrackSegmentSourceDuration = -11827,
    AVErrorFileFormatNotRecognized = -11828,
    AVErrorFileFailedToParse = -11829,
    AVErrorMaximumStillImageCaptureRequestsExceeded = -11830,
    AVErrorContentIsProtected = -11831,
    AVErrorNoImageAtTime = -11832,
    AVErrorDecoderNotFound = -11833,
    AVErrorEncoderNotFound = -11834,
    AVErrorContentIsNotAuthorized = -11835,
    AVErrorApplicationIsNotAuthorized = -11836,

    AVErrorDeviceIsNotAvailableInBackground __attribute__((availability(ios,introduced=4_3,deprecated=9_0,message="" "AVCaptureSession no longer produces an AVCaptureSessionRuntimeErrorNotification with this error. See AVCaptureSessionInterruptionReasonVideoDeviceNotAvailableInBackground."))) = -11837,

    AVErrorOperationNotSupportedForAsset = -11838,

    AVErrorDecoderTemporarilyUnavailable = -11839,
    AVErrorEncoderTemporarilyUnavailable = -11840,
    AVErrorInvalidVideoComposition = -11841,
    AVErrorReferenceForbiddenByReferencePolicy = -11842,
    AVErrorInvalidOutputURLPathExtension = -11843,
    AVErrorScreenCaptureFailed = -11844,
    AVErrorDisplayWasDisabled = -11845,
    AVErrorTorchLevelUnavailable = -11846,

    AVErrorOperationInterrupted = -11847,

    AVErrorIncompatibleAsset = -11848,
    AVErrorFailedToLoadMediaData = -11849,
    AVErrorServerIncorrectlyConfigured = -11850,
 AVErrorApplicationIsNotAuthorizedToUseDevice = -11852,
    AVErrorFailedToParse __attribute__((availability(ios,introduced=8_0))) = -11853,
 AVErrorFileTypeDoesNotSupportSampleReferences __attribute__((availability(ios,introduced=8_0))) = -11854,
    AVErrorUndecodableMediaData __attribute__((availability(ios,introduced=8_0))) = -11855,
    AVErrorAirPlayControllerRequiresInternet __attribute__((availability(ios,introduced=8_3))) = -11856,
    AVErrorAirPlayReceiverRequiresInternet __attribute__((availability(ios,introduced=8_3))) = -11857,
    AVErrorVideoCompositorFailed __attribute__((availability(ios,introduced=9_0))) = -11858,

    AVErrorRecordingAlreadyInProgress __attribute__((availability(ios,introduced=9_0))) = -11859,




    AVErrorUnsupportedOutputSettings __attribute__((availability(ios,introduced=10_0))) = -11861,
 AVErrorOperationNotAllowed __attribute__((availability(ios,introduced=10_0))) = -11862,
 AVErrorContentIsUnavailable __attribute__((availability(ios,introduced=11_0))) = -11863,
 AVErrorFormatUnsupported __attribute__((availability(ios,introduced=11_0))) = -11864,
 AVErrorMalformedDepth __attribute__((availability(ios,introduced=11_0))) = -11865,
 AVErrorContentNotUpdated __attribute__((availability(ios,introduced=11_0))) = -11866,
 AVErrorNoLongerPlayable __attribute__((availability(ios,introduced=11_0))) = -11867,
 AVErrorNoCompatibleAlternatesForExternalDisplay __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,unavailable))) = -11868,
 AVErrorNoSourceTrack __attribute__((availability(macos,introduced=10.13.2))) __attribute__((availability(ios,introduced=11.2))) __attribute__((availability(tvos,introduced=11.2))) __attribute__((availability(watchos,unavailable))) = -11869,
};





















typedef int64_t AVAudioFramePosition;
typedef uint32_t AVAudioFrameCount;
typedef uint32_t AVAudioPacketCount;
typedef uint32_t AVAudioChannelCount;
typedef void (*AVAudioNodeCompletionHandler)(void);







typedef NSUInteger AVAudioNodeBus;
struct AVAudio3DPoint {
    float x;
    float y;
    float z;
};
typedef struct AVAudio3DPoint AVAudio3DPoint;




static __inline__ __attribute__((always_inline)) AVAudio3DPoint AVAudioMake3DPoint(float x, float y, float z) {
    AVAudio3DPoint p;
    p.x = x;
    p.y = y;
    p.z = z;
    return p;
}







typedef struct AVAudio3DPoint AVAudio3DVector;




static __inline__ __attribute__((always_inline)) AVAudio3DVector AVAudioMake3DVector(float x, float y, float z) {
    AVAudio3DVector v;
    v.x = x;
    v.y = y;
    v.z = z;
    return v;
}
struct AVAudio3DVectorOrientation {
    AVAudio3DVector forward;
    AVAudio3DVector up;
};
typedef struct AVAudio3DVectorOrientation AVAudio3DVectorOrientation;




static __inline__ __attribute__((always_inline)) AVAudio3DVectorOrientation AVAudioMake3DVectorOrientation(AVAudio3DVector forward, AVAudio3DVector up) {
    AVAudio3DVectorOrientation o;
    o.forward = forward;
    o.up = up;
    return o;
}
struct AVAudio3DAngularOrientation {
    float yaw;
    float pitch;
    float roll;
};
typedef struct AVAudio3DAngularOrientation AVAudio3DAngularOrientation;




static __inline__ __attribute__((always_inline)) AVAudio3DAngularOrientation AVAudioMake3DAngularOrientation(float yaw, float pitch, float roll) {
    AVAudio3DAngularOrientation o;
    o.yaw = yaw;
    o.pitch = pitch;
    o.roll = roll;
    return o;
}

#pragma clang assume_nonnull begin

// @class AVAudioFormat;
#ifndef _REWRITER_typedef_AVAudioFormat
#define _REWRITER_typedef_AVAudioFormat
typedef struct objc_object AVAudioFormat;
typedef struct {} _objc_exc_AVAudioFormat;
#endif

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))

#ifndef _REWRITER_typedef_AVAudioBuffer
#define _REWRITER_typedef_AVAudioBuffer
typedef struct objc_object AVAudioBuffer;
typedef struct {} _objc_exc_AVAudioBuffer;
#endif

struct AVAudioBuffer_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_impl;
};






// @property (nonatomic, readonly) AVAudioFormat *format;
// @property (nonatomic, readonly) const AudioBufferList *audioBufferList;
// @property (nonatomic, readonly) AudioBufferList *mutableAudioBufferList;

/* @end */

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))

#ifndef _REWRITER_typedef_AVAudioPCMBuffer
#define _REWRITER_typedef_AVAudioPCMBuffer
typedef struct objc_object AVAudioPCMBuffer;
typedef struct {} _objc_exc_AVAudioPCMBuffer;
#endif

struct AVAudioPCMBuffer_IMPL {
	struct AVAudioBuffer_IMPL AVAudioBuffer_IVARS;
};

// - (nullable instancetype)initWithPCMFormat:(AVAudioFormat *)format frameCapacity:(AVAudioFrameCount)frameCapacity __attribute__((objc_designated_initializer));





// @property (nonatomic, readonly) AVAudioFrameCount frameCapacity;
// @property (nonatomic) AVAudioFrameCount frameLength;






// @property (nonatomic, readonly) NSUInteger stride;
// @property (nonatomic, readonly) float * _Nonnull const * _Nullable floatChannelData;
// @property (nonatomic, readonly) int16_t * _Nonnull const * _Nullable int16ChannelData;
// @property (nonatomic, readonly) int32_t * _Nonnull const * _Nullable int32ChannelData;

/* @end */

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0)))

#ifndef _REWRITER_typedef_AVAudioCompressedBuffer
#define _REWRITER_typedef_AVAudioCompressedBuffer
typedef struct objc_object AVAudioCompressedBuffer;
typedef struct {} _objc_exc_AVAudioCompressedBuffer;
#endif

struct AVAudioCompressedBuffer_IMPL {
	struct AVAudioBuffer_IMPL AVAudioBuffer_IVARS;
};

// - (instancetype)initWithFormat:(AVAudioFormat *)format packetCapacity:(AVAudioPacketCount)packetCapacity maximumPacketSize:(NSInteger)maximumPacketSize;
// - (instancetype)initWithFormat:(AVAudioFormat *)format packetCapacity:(AVAudioPacketCount)packetCapacity;





// @property (nonatomic, readonly) AVAudioPacketCount packetCapacity;







// @property (nonatomic) AVAudioPacketCount packetCount;




// @property (nonatomic, readonly) NSInteger maximumPacketSize;




// @property (nonatomic, readonly) void *data;





// @property (nonatomic, readonly) uint32_t byteCapacity __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));







// @property (nonatomic) uint32_t byteLength __attribute__((availability(macosx,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));






// @property (nonatomic, readonly, nullable) AudioStreamPacketDescription *packetDescriptions;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin








__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))

#ifndef _REWRITER_typedef_AVAudioChannelLayout
#define _REWRITER_typedef_AVAudioChannelLayout
typedef struct objc_object AVAudioChannelLayout;
typedef struct {} _objc_exc_AVAudioChannelLayout;
#endif

struct AVAudioChannelLayout_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AudioChannelLayoutTag _layoutTag;
	AudioChannelLayout *_layout;
	void *_reserved;
};


// - (instancetype)init __attribute__((unavailable));
// - (nullable instancetype)initWithLayoutTag:(AudioChannelLayoutTag)layoutTag;
// - (instancetype)initWithLayout:(const AudioChannelLayout *)layout __attribute__((objc_designated_initializer));
// - (BOOL)isEqual:(id)object;




// + (instancetype)layoutWithLayoutTag:(AudioChannelLayoutTag)layoutTag;




// + (instancetype)layoutWithLayout:(const AudioChannelLayout *)layout;



// @property (nonatomic, readonly) AudioChannelLayoutTag layoutTag;



// @property (nonatomic, readonly) const AudioChannelLayout *layout;




// @property (nonatomic, readonly) AVAudioChannelCount channelCount;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class AVAudioNode;
#ifndef _REWRITER_typedef_AVAudioNode
#define _REWRITER_typedef_AVAudioNode
typedef struct objc_object AVAudioNode;
typedef struct {} _objc_exc_AVAudioNode;
#endif

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0)))

#ifndef _REWRITER_typedef_AVAudioConnectionPoint
#define _REWRITER_typedef_AVAudioConnectionPoint
typedef struct objc_object AVAudioConnectionPoint;
typedef struct {} _objc_exc_AVAudioConnectionPoint;
#endif

struct AVAudioConnectionPoint_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVAudioNode *__strong _node;
	AVAudioNodeBus _bus;
	void *_reserved;
};

// - (instancetype)initWithNode:(AVAudioNode *)node bus:(AVAudioNodeBus)bus __attribute__((objc_designated_initializer));

// - (instancetype)init __attribute__((unavailable));




// @property (nonatomic, readonly, weak) AVAudioNode *node;




// @property (nonatomic, readonly) AVAudioNodeBus bus;

/* @end */

#pragma clang assume_nonnull end








#pragma clang assume_nonnull begin
typedef NSUInteger AVAudioCommonFormat; enum {
 AVAudioOtherFormat = 0,
 AVAudioPCMFormatFloat32 = 1,
 AVAudioPCMFormatFloat64 = 2,
 AVAudioPCMFormatInt16 = 3,
 AVAudioPCMFormatInt32 = 4
} __attribute__((availability(ios,introduced=8_0)));
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))

#ifndef _REWRITER_typedef_AVAudioFormat
#define _REWRITER_typedef_AVAudioFormat
typedef struct objc_object AVAudioFormat;
typedef struct {} _objc_exc_AVAudioFormat;
#endif

struct AVAudioFormat_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AudioStreamBasicDescription _asbd;
	AVAudioChannelLayout *__strong _layout;
	AVAudioCommonFormat _commonFormat;
	void *_reserved;
};

// - (nullable instancetype)initWithStreamDescription:(const AudioStreamBasicDescription *)asbd;
// - (nullable instancetype)initWithStreamDescription:(const AudioStreamBasicDescription *)asbd channelLayout:(AVAudioChannelLayout * _Nullable)layout;
// - (nullable instancetype)initStandardFormatWithSampleRate:(double)sampleRate channels:(AVAudioChannelCount)channels;
// - (instancetype)initStandardFormatWithSampleRate:(double)sampleRate channelLayout:(AVAudioChannelLayout *)layout;
// - (nullable instancetype)initWithCommonFormat:(AVAudioCommonFormat)format sampleRate:(double)sampleRate channels:(AVAudioChannelCount)channels interleaved:(BOOL)interleaved;
// - (instancetype)initWithCommonFormat:(AVAudioCommonFormat)format sampleRate:(double)sampleRate interleaved:(BOOL)interleaved channelLayout:(AVAudioChannelLayout *)layout;
// - (nullable instancetype)initWithSettings:(NSDictionary<NSString *, id> *)settings;
// - (instancetype)initWithCMAudioFormatDescription:(CMAudioFormatDescriptionRef)formatDescription __attribute__((availability(ios,introduced=9_0)));
// - (BOOL)isEqual:(id)object;




// @property (nonatomic, readonly, getter=isStandard) BOOL standard;




// @property (nonatomic, readonly) AVAudioCommonFormat commonFormat;




// @property (nonatomic, readonly) AVAudioChannelCount channelCount;




// @property (nonatomic, readonly) double sampleRate;






// @property (nonatomic, readonly, getter=isInterleaved) BOOL interleaved;




// @property (nonatomic, readonly) const AudioStreamBasicDescription *streamDescription;






// @property (nonatomic, readonly, nullable) AVAudioChannelLayout *channelLayout;







// @property (nonatomic, retain, nullable) NSData *magicCookie __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));




// @property (nonatomic, readonly) NSDictionary<NSString *, id> *settings;






// @property (nonatomic, readonly) CMAudioFormatDescriptionRef formatDescription __attribute__((availability(ios,introduced=9_0)));


/* @end */

#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin
typedef NSInteger AVAudioConverterPrimeMethod; enum {
    AVAudioConverterPrimeMethod_Pre = 0,
    AVAudioConverterPrimeMethod_Normal = 1,
    AVAudioConverterPrimeMethod_None = 2
};
typedef struct AVAudioConverterPrimeInfo {
    AVAudioFrameCount leadingFrames;
    AVAudioFrameCount trailingFrames;
} AVAudioConverterPrimeInfo;
typedef NSInteger AVAudioConverterInputStatus; enum {
 AVAudioConverterInputStatus_HaveData = 0,
 AVAudioConverterInputStatus_NoDataNow = 1,
 AVAudioConverterInputStatus_EndOfStream = 2
} __attribute__((availability(ios,introduced=9_0)));
typedef NSInteger AVAudioConverterOutputStatus; enum {
 AVAudioConverterOutputStatus_HaveData = 0,
 AVAudioConverterOutputStatus_InputRanDry = 1,
 AVAudioConverterOutputStatus_EndOfStream = 2,
 AVAudioConverterOutputStatus_Error = 3
} __attribute__((availability(ios,introduced=9_0)));
typedef AVAudioBuffer * _Nullable (*AVAudioConverterInputBlock)(AVAudioPacketCount inNumberOfPackets, AVAudioConverterInputStatus* outStatus);







__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0)))

#ifndef _REWRITER_typedef_AVAudioConverter
#define _REWRITER_typedef_AVAudioConverter
typedef struct objc_object AVAudioConverter;
typedef struct {} _objc_exc_AVAudioConverter;
#endif

struct AVAudioConverter_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_impl;
};

// - (nullable instancetype)initFromFormat:(AVAudioFormat *)fromFormat toFormat:(AVAudioFormat *)toFormat;





// - (void)reset;




// @property (nonatomic, readonly) AVAudioFormat *inputFormat;




// @property (nonatomic, readonly) AVAudioFormat *outputFormat;
// @property (nonatomic, retain) NSArray<NSNumber *> *channelMap;




// @property (nonatomic, retain, nullable) NSData *magicCookie;




// @property (nonatomic) BOOL downmix;




// @property (nonatomic) BOOL dither;




// @property (nonatomic) NSInteger sampleRateConverterQuality;




// @property (nonatomic, retain, nullable) NSString *sampleRateConverterAlgorithm;




// @property (nonatomic) AVAudioConverterPrimeMethod primeMethod;




// @property (nonatomic) AVAudioConverterPrimeInfo primeInfo;
// - (BOOL)convertToBuffer:(AVAudioPCMBuffer *)outputBuffer fromBuffer:(const AVAudioPCMBuffer *)inputBuffer error:(NSError **)outError;
// - (AVAudioConverterOutputStatus)convertToBuffer:(AVAudioBuffer *)outputBuffer error:(NSError **)outError withInputFromBlock:(AVAudioConverterInputBlock)inputBlock;

/* @end */



// @interface AVAudioConverter (Encoding)




// @property (nonatomic) NSInteger bitRate;




// @property (nonatomic, retain, nullable) NSString *bitRateStrategy;





// @property (nonatomic, readonly) NSInteger maximumOutputPacketSize;




// @property (nonatomic, readonly, nullable) NSArray<NSNumber *> *availableEncodeBitRates;




// @property (nonatomic, readonly, nullable) NSArray<NSNumber *> *applicableEncodeBitRates;




// @property (nonatomic, readonly, nullable) NSArray<NSNumber *> *availableEncodeSampleRates;




// @property (nonatomic, readonly, nullable) NSArray<NSNumber *> *applicableEncodeSampleRates;




// @property (nonatomic, readonly, nullable) NSArray<NSNumber *> *availableEncodeChannelLayoutTags;

/* @end */

#pragma clang assume_nonnull end







#pragma clang assume_nonnull begin

// @class AVAudioEngine;
#ifndef _REWRITER_typedef_AVAudioEngine
#define _REWRITER_typedef_AVAudioEngine
typedef struct objc_object AVAudioEngine;
typedef struct {} _objc_exc_AVAudioEngine;
#endif

#ifndef _REWRITER_typedef_AVAudioFormat
#define _REWRITER_typedef_AVAudioFormat
typedef struct objc_object AVAudioFormat;
typedef struct {} _objc_exc_AVAudioFormat;
#endif

#ifndef _REWRITER_typedef_AVAudioInputNode
#define _REWRITER_typedef_AVAudioInputNode
typedef struct objc_object AVAudioInputNode;
typedef struct {} _objc_exc_AVAudioInputNode;
#endif

#ifndef _REWRITER_typedef_AVAudioMixerNode
#define _REWRITER_typedef_AVAudioMixerNode
typedef struct objc_object AVAudioMixerNode;
typedef struct {} _objc_exc_AVAudioMixerNode;
#endif

#ifndef _REWRITER_typedef_AVAudioOutputNode
#define _REWRITER_typedef_AVAudioOutputNode
typedef struct objc_object AVAudioOutputNode;
typedef struct {} _objc_exc_AVAudioOutputNode;
#endif

#ifndef _REWRITER_typedef_AVAudioPCMBuffer
#define _REWRITER_typedef_AVAudioPCMBuffer
typedef struct objc_object AVAudioPCMBuffer;
typedef struct {} _objc_exc_AVAudioPCMBuffer;
#endif

#ifndef _REWRITER_typedef_AVAudioTime
#define _REWRITER_typedef_AVAudioTime
typedef struct objc_object AVAudioTime;
typedef struct {} _objc_exc_AVAudioTime;
#endif



// @class AUAudioUnit;
#ifndef _REWRITER_typedef_AUAudioUnit
#define _REWRITER_typedef_AUAudioUnit
typedef struct objc_object AUAudioUnit;
typedef struct {} _objc_exc_AUAudioUnit;
#endif

typedef void (*AVAudioNodeTapBlock)(AVAudioPCMBuffer *buffer, AVAudioTime *when);
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))

#ifndef _REWRITER_typedef_AVAudioNode
#define _REWRITER_typedef_AVAudioNode
typedef struct objc_object AVAudioNode;
typedef struct {} _objc_exc_AVAudioNode;
#endif

struct AVAudioNode_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_impl;
};




// - (void)reset;




// - (AVAudioFormat *)inputFormatForBus:(AVAudioNodeBus)bus;




// - (AVAudioFormat *)outputFormatForBus:(AVAudioNodeBus)bus;




// - (nullable NSString *)nameForInputBus:(AVAudioNodeBus)bus;




// - (nullable NSString *)nameForOutputBus:(AVAudioNodeBus)bus;
// - (void)installTapOnBus:(AVAudioNodeBus)bus bufferSize:(AVAudioFrameCount)bufferSize format:(AVAudioFormat * _Nullable)format block:(AVAudioNodeTapBlock)tapBlock;
// - (void)removeTapOnBus:(AVAudioNodeBus)bus;




// @property (nonatomic, readonly, nullable) AVAudioEngine *engine;




// @property (nonatomic, readonly) NSUInteger numberOfInputs;




// @property (nonatomic, readonly) NSUInteger numberOfOutputs;







// @property (nonatomic, readonly, nullable) AVAudioTime *lastRenderTime;
// @property (nonatomic, readonly) AUAudioUnit *AUAudioUnit __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
// @property (nonatomic, readonly) NSTimeInterval latency __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
// @property (nonatomic, readonly) NSTimeInterval outputPresentationLatency __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class AVAudioNode;
#ifndef _REWRITER_typedef_AVAudioNode
#define _REWRITER_typedef_AVAudioNode
typedef struct objc_object AVAudioNode;
typedef struct {} _objc_exc_AVAudioNode;
#endif

#ifndef _REWRITER_typedef_AVAudioConnectionPoint
#define _REWRITER_typedef_AVAudioConnectionPoint
typedef struct objc_object AVAudioConnectionPoint;
typedef struct {} _objc_exc_AVAudioConnectionPoint;
#endif

#ifndef _REWRITER_typedef_AVAudioMixingDestination
#define _REWRITER_typedef_AVAudioMixingDestination
typedef struct objc_object AVAudioMixingDestination;
typedef struct {} _objc_exc_AVAudioMixingDestination;
#endif

// @protocol AVAudioStereoMixing;
// @protocol AVAudio3DMixing;
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))
// @protocol AVAudioMixing <AVAudioStereoMixing, AVAudio3DMixing>
// - (nullable AVAudioMixingDestination *)destinationForMixer:(AVAudioNode *)mixer bus:(AVAudioNodeBus)bus __attribute__((availability(ios,introduced=9_0)));
// @property (nonatomic) float volume;

/* @end */






__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))
// @protocol AVAudioStereoMixing <NSObject>
// @property (nonatomic) float pan;

/* @end */

typedef NSInteger AVAudio3DMixingRenderingAlgorithm; enum {
    AVAudio3DMixingRenderingAlgorithmEqualPowerPanning = 0,
    AVAudio3DMixingRenderingAlgorithmSphericalHead = 1,
    AVAudio3DMixingRenderingAlgorithmHRTF = 2,
    AVAudio3DMixingRenderingAlgorithmSoundField = 3,
    AVAudio3DMixingRenderingAlgorithmStereoPassThrough = 5,
    AVAudio3DMixingRenderingAlgorithmHRTFHQ = 6
} __attribute__((availability(ios,introduced=8_0)));





// @protocol AVAudio3DMixing <NSObject>
// @property (nonatomic) AVAudio3DMixingRenderingAlgorithm renderingAlgorithm __attribute__((availability(watchos,unavailable)));
// @property (nonatomic) float rate __attribute__((availability(watchos,unavailable)));
// @property (nonatomic) float reverbBlend __attribute__((availability(watchos,unavailable)));
// @property (nonatomic) float obstruction __attribute__((availability(watchos,unavailable)));
// @property (nonatomic) float occlusion __attribute__((availability(watchos,unavailable)));
// @property (nonatomic) AVAudio3DPoint position __attribute__((availability(watchos,unavailable)));

/* @end */

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0)))

#ifndef _REWRITER_typedef_AVAudioMixingDestination
#define _REWRITER_typedef_AVAudioMixingDestination
typedef struct objc_object AVAudioMixingDestination;
typedef struct {} _objc_exc_AVAudioMixingDestination;
#endif

struct AVAudioMixingDestination_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_impl;
};


// - (instancetype)init __attribute__((unavailable));




// @property (nonatomic, readonly) AVAudioConnectionPoint *connectionPoint;

/* @end */

#pragma clang assume_nonnull end





#pragma clang assume_nonnull begin
typedef const AudioBufferList * _Nullable (*AVAudioIONodeInputBlock)(AVAudioFrameCount inNumberOfFrames) __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))

#ifndef _REWRITER_typedef_AVAudioIONode
#define _REWRITER_typedef_AVAudioIONode
typedef struct objc_object AVAudioIONode;
typedef struct {} _objc_exc_AVAudioIONode;
#endif

struct AVAudioIONode_IMPL {
	struct AVAudioNode_IMPL AVAudioNode_IVARS;
};

// @property (nonatomic, readonly) NSTimeInterval presentationLatency;
// @property (nonatomic, readonly, nullable) AudioUnit audioUnit;


/* @end */

__attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)))

#ifndef _REWRITER_typedef_AVAudioInputNode
#define _REWRITER_typedef_AVAudioInputNode
typedef struct objc_object AVAudioInputNode;
typedef struct {} _objc_exc_AVAudioInputNode;
#endif

struct AVAudioInputNode_IMPL {
	struct AVAudioIONode_IMPL AVAudioIONode_IVARS;
};

// - (instancetype)init __attribute__((unavailable));
// - (BOOL)setManualRenderingInputPCMFormat:(AVAudioFormat *)format inputBlock:(AVAudioIONodeInputBlock)block __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
/* @end */

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))

#ifndef _REWRITER_typedef_AVAudioOutputNode
#define _REWRITER_typedef_AVAudioOutputNode
typedef struct objc_object AVAudioOutputNode;
typedef struct {} _objc_exc_AVAudioOutputNode;
#endif

struct AVAudioOutputNode_IMPL {
	struct AVAudioIONode_IMPL AVAudioIONode_IVARS;
};

// - (instancetype)init __attribute__((unavailable));
/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))

#ifndef _REWRITER_typedef_AVAudioTime
#define _REWRITER_typedef_AVAudioTime
typedef struct objc_object AVAudioTime;
typedef struct {} _objc_exc_AVAudioTime;
#endif

struct AVAudioTime_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AudioTimeStamp _ats;
	double _sampleRate;
	void *_reserved;
};




// - (instancetype)initWithAudioTimeStamp: (const AudioTimeStamp *)ts sampleRate: (double)sampleRate;



// - (instancetype)initWithHostTime:(uint64_t)hostTime;



// - (instancetype)initWithSampleTime:(AVAudioFramePosition)sampleTime atRate:(double)sampleRate;



// - (instancetype)initWithHostTime:(uint64_t)hostTime sampleTime:(AVAudioFramePosition)sampleTime atRate:(double)sampleRate;



// + (instancetype)timeWithAudioTimeStamp: (const AudioTimeStamp *)ts sampleRate: (double)sampleRate;



// + (instancetype)timeWithHostTime:(uint64_t)hostTime;



// + (instancetype)timeWithSampleTime:(AVAudioFramePosition)sampleTime atRate:(double)sampleRate;



// + (instancetype)timeWithHostTime:(uint64_t)hostTime sampleTime:(AVAudioFramePosition)sampleTime atRate:(double)sampleRate;




// + (uint64_t)hostTimeForSeconds:(NSTimeInterval)seconds;




// + (NSTimeInterval)secondsForHostTime:(uint64_t)hostTime;
// - (nullable AVAudioTime *)extrapolateTimeFromAnchor:(AVAudioTime *)anchorTime;





// @property (nonatomic, readonly, getter=isHostTimeValid) BOOL hostTimeValid;




// @property (nonatomic, readonly) uint64_t hostTime;




// @property (nonatomic, readonly, getter=isSampleTimeValid) BOOL sampleTimeValid;




// @property (nonatomic, readonly) AVAudioFramePosition sampleTime;




// @property (nonatomic, readonly) double sampleRate;






// @property (readonly, nonatomic) AudioTimeStamp audioTimeStamp;


/* @end */

#pragma clang assume_nonnull end






#pragma clang assume_nonnull begin

// @class AVAudioFormat;
#ifndef _REWRITER_typedef_AVAudioFormat
#define _REWRITER_typedef_AVAudioFormat
typedef struct objc_object AVAudioFormat;
typedef struct {} _objc_exc_AVAudioFormat;
#endif

#ifndef _REWRITER_typedef_AVAudioNode
#define _REWRITER_typedef_AVAudioNode
typedef struct objc_object AVAudioNode;
typedef struct {} _objc_exc_AVAudioNode;
#endif

#ifndef _REWRITER_typedef_AVAudioInputNode
#define _REWRITER_typedef_AVAudioInputNode
typedef struct objc_object AVAudioInputNode;
typedef struct {} _objc_exc_AVAudioInputNode;
#endif

#ifndef _REWRITER_typedef_AVAudioOutputNode
#define _REWRITER_typedef_AVAudioOutputNode
typedef struct objc_object AVAudioOutputNode;
typedef struct {} _objc_exc_AVAudioOutputNode;
#endif

#ifndef _REWRITER_typedef_AVAudioMixerNode
#define _REWRITER_typedef_AVAudioMixerNode
typedef struct objc_object AVAudioMixerNode;
typedef struct {} _objc_exc_AVAudioMixerNode;
#endif

typedef OSStatus AVAudioEngineManualRenderingError; enum {
 AVAudioEngineManualRenderingErrorInvalidMode = -80800,
 AVAudioEngineManualRenderingErrorInitialized = -80801,
 AVAudioEngineManualRenderingErrorNotRunning = -80802
} __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
typedef NSInteger AVAudioEngineManualRenderingStatus; enum {
 AVAudioEngineManualRenderingStatusError = -1,
 AVAudioEngineManualRenderingStatusSuccess = 0,
 AVAudioEngineManualRenderingStatusInsufficientDataFromInputNode = 1,
 AVAudioEngineManualRenderingStatusCannotDoInCurrentContext = 2
} __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
typedef NSInteger AVAudioEngineManualRenderingMode; enum {
 AVAudioEngineManualRenderingModeOffline = 0,
 AVAudioEngineManualRenderingModeRealtime = 1
} __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
typedef AVAudioEngineManualRenderingStatus (*AVAudioEngineManualRenderingBlock)(AVAudioFrameCount numberOfFrames, AudioBufferList *outBuffer, OSStatus * _Nullable outError) __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))

#ifndef _REWRITER_typedef_AVAudioEngine
#define _REWRITER_typedef_AVAudioEngine
typedef struct objc_object AVAudioEngine;
typedef struct {} _objc_exc_AVAudioEngine;
#endif

struct AVAudioEngine_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_impl;
};

// - (instancetype)init;
// - (void)attachNode:(AVAudioNode *)node;







// - (void)detachNode:(AVAudioNode *)node;
// - (void)connect:(AVAudioNode *)node1 to:(AVAudioNode *)node2 fromBus:(AVAudioNodeBus)bus1 toBus:(AVAudioNodeBus)bus2 format:(AVAudioFormat * _Nullable)format;
// - (void)connect:(AVAudioNode *)node1 to:(AVAudioNode *)node2 format:(AVAudioFormat * _Nullable)format;
// - (void)connect:(AVAudioNode *)sourceNode toConnectionPoints:(NSArray<AVAudioConnectionPoint *> *)destNodes fromBus:(AVAudioNodeBus)sourceBus format:(AVAudioFormat * _Nullable)format __attribute__((availability(ios,introduced=9_0)));
// - (void)disconnectNodeInput:(AVAudioNode *)node bus:(AVAudioNodeBus)bus;
// - (void)disconnectNodeInput:(AVAudioNode *)node;
// - (void)disconnectNodeOutput:(AVAudioNode *)node bus:(AVAudioNodeBus)bus;
// - (void)disconnectNodeOutput:(AVAudioNode *)node;
// - (void)prepare;
// - (BOOL)startAndReturnError:(NSError **)outError;
// - (void)pause;
// - (void)reset;
// - (void)stop;
// - (AVAudioConnectionPoint * _Nullable)inputConnectionPointForNode:(AVAudioNode *)node inputBus:(AVAudioNodeBus)bus __attribute__((availability(ios,introduced=9_0)));
// - (NSArray<AVAudioConnectionPoint *> *)outputConnectionPointsForNode:(AVAudioNode *)node outputBus:(AVAudioNodeBus)bus __attribute__((availability(ios,introduced=9_0)));






// @property (nonatomic, nullable) MusicSequence musicSequence;
// @property (readonly, nonatomic) AVAudioOutputNode *outputNode;
// @property (readonly, nonatomic) AVAudioInputNode *inputNode __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
// @property (readonly, nonatomic) AVAudioMixerNode *mainMixerNode;





// @property (readonly, nonatomic, getter=isRunning) BOOL running;
// @property (nonatomic, getter=isAutoShutdownEnabled) BOOL autoShutdownEnabled __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,unavailable)));
// - (BOOL)enableManualRenderingMode:(AVAudioEngineManualRenderingMode)mode format:(AVAudioFormat *)pcmFormat maximumFrameCount:(AVAudioFrameCount)maximumFrameCount error:(NSError **)outError __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
// - (void)disableManualRenderingMode __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
// - (AVAudioEngineManualRenderingStatus)renderOffline:(AVAudioFrameCount)numberOfFrames toBuffer:(AVAudioPCMBuffer *)buffer error:(NSError **)outError __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((swift_error(nonnull_error)));
// @property (readonly, nonatomic) AVAudioEngineManualRenderingBlock manualRenderingBlock __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));






// @property (readonly, nonatomic) BOOL isInManualRenderingMode __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
// @property (readonly, nonatomic) AVAudioEngineManualRenderingMode manualRenderingMode __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
// @property (readonly, nonatomic) AVAudioFormat *manualRenderingFormat __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
// @property (readonly, nonatomic) AVAudioFrameCount manualRenderingMaximumFrameCount __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
// @property (readonly, nonatomic) AVAudioFramePosition manualRenderingSampleTime __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));

/* @end */

extern "C"
NSString *const AVAudioEngineConfigurationChangeNotification __attribute__((availability(ios,introduced=8_0)));
#pragma clang assume_nonnull end






















#pragma clang assume_nonnull begin


// @class AUAudioUnit;
#ifndef _REWRITER_typedef_AUAudioUnit
#define _REWRITER_typedef_AUAudioUnit
typedef struct objc_object AUAudioUnit;
typedef struct {} _objc_exc_AUAudioUnit;
#endif

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_AVAudioUnit
#define _REWRITER_typedef_AVAudioUnit
typedef struct objc_object AVAudioUnit;
typedef struct {} _objc_exc_AVAudioUnit;
#endif

struct AVAudioUnit_IMPL {
	struct AVAudioNode_IMPL AVAudioNode_IVARS;
};

// + (void)instantiateWithComponentDescription:(AudioComponentDescription)audioComponentDescription options:(AudioComponentInstantiationOptions)options completionHandler:(void (^)(__kindof AVAudioUnit * _Nullable audioUnit, NSError * _Nullable error))completionHandler __attribute__((availability(ios,introduced=9_0)));
// - (BOOL)loadAudioUnitPresetAtURL:(NSURL *)url error:(NSError **)outError;




// @property (nonatomic, readonly) AudioComponentDescription audioComponentDescription;
// @property (nonatomic, readonly) AudioUnit audioUnit;
// @property (nonatomic, readonly) AUAudioUnit *AUAudioUnit __attribute__((availability(ios,introduced=9_0)));





// @property (nonatomic, readonly) NSString *name;




// @property (nonatomic, readonly) NSString *manufacturerName;




// @property (nonatomic, readonly) NSUInteger version;



/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_AVAudioUnitEffect
#define _REWRITER_typedef_AVAudioUnitEffect
typedef struct objc_object AVAudioUnitEffect;
typedef struct {} _objc_exc_AVAudioUnitEffect;
#endif

struct AVAudioUnitEffect_IMPL {
	struct AVAudioUnit_IMPL AVAudioUnit_IVARS;
};

// - (instancetype)initWithAudioComponentDescription:(AudioComponentDescription)audioComponentDescription;





// @property (nonatomic) BOOL bypass;

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin

typedef NSInteger AVAudioUnitReverbPreset; enum {
    AVAudioUnitReverbPresetSmallRoom = 0,
    AVAudioUnitReverbPresetMediumRoom = 1,
    AVAudioUnitReverbPresetLargeRoom = 2,
    AVAudioUnitReverbPresetMediumHall = 3,
    AVAudioUnitReverbPresetLargeHall = 4,
    AVAudioUnitReverbPresetPlate = 5,
    AVAudioUnitReverbPresetMediumChamber = 6,
    AVAudioUnitReverbPresetLargeChamber = 7,
    AVAudioUnitReverbPresetCathedral = 8,
    AVAudioUnitReverbPresetLargeRoom2 = 9,
    AVAudioUnitReverbPresetMediumHall2 = 10,
    AVAudioUnitReverbPresetMediumHall3 = 11,
    AVAudioUnitReverbPresetLargeHall2 = 12
} __attribute__((availability(ios,introduced=8_0)));
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_AVAudioUnitReverb
#define _REWRITER_typedef_AVAudioUnitReverb
typedef struct objc_object AVAudioUnitReverb;
typedef struct {} _objc_exc_AVAudioUnitReverb;
#endif

struct AVAudioUnitReverb_IMPL {
	struct AVAudioUnitEffect_IMPL AVAudioUnitEffect_IVARS;
};






// - (void)loadFactoryPreset:(AVAudioUnitReverbPreset)preset;







// @property (nonatomic) float wetDryMix;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin
typedef NSInteger AVAudioUnitEQFilterType; enum {
    AVAudioUnitEQFilterTypeParametric = 0,
    AVAudioUnitEQFilterTypeLowPass = 1,
    AVAudioUnitEQFilterTypeHighPass = 2,
    AVAudioUnitEQFilterTypeResonantLowPass = 3,
    AVAudioUnitEQFilterTypeResonantHighPass = 4,
    AVAudioUnitEQFilterTypeBandPass = 5,
    AVAudioUnitEQFilterTypeBandStop = 6,
    AVAudioUnitEQFilterTypeLowShelf = 7,
    AVAudioUnitEQFilterTypeHighShelf = 8,
    AVAudioUnitEQFilterTypeResonantLowShelf = 9,
    AVAudioUnitEQFilterTypeResonantHighShelf = 10,
} __attribute__((availability(ios,introduced=8_0)));
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))

#ifndef _REWRITER_typedef_AVAudioUnitEQFilterParameters
#define _REWRITER_typedef_AVAudioUnitEQFilterParameters
typedef struct objc_object AVAudioUnitEQFilterParameters;
typedef struct {} _objc_exc_AVAudioUnitEQFilterParameters;
#endif

struct AVAudioUnitEQFilterParameters_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_impl;
};


// - (instancetype)init __attribute__((unavailable));






// @property (nonatomic) AVAudioUnitEQFilterType filterType;







// @property (nonatomic) float frequency;







// @property (nonatomic) float bandwidth;
// @property (nonatomic) float gain;






// @property (nonatomic) BOOL bypass;

/* @end */







__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_AVAudioUnitEQ
#define _REWRITER_typedef_AVAudioUnitEQ
typedef struct objc_object AVAudioUnitEQ;
typedef struct {} _objc_exc_AVAudioUnitEQ;
#endif

struct AVAudioUnitEQ_IMPL {
	struct AVAudioUnitEffect_IMPL AVAudioUnitEffect_IVARS;
};







// - (instancetype)initWithNumberOfBands:(NSUInteger)numberOfBands;






// @property (nonatomic, readonly) NSArray<AVAudioUnitEQFilterParameters *> *bands;
// @property (nonatomic) float globalGain;

/* @end */

#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin
typedef NSInteger AVAudioEnvironmentDistanceAttenuationModel; enum {
    AVAudioEnvironmentDistanceAttenuationModelExponential = 1,
    AVAudioEnvironmentDistanceAttenuationModelInverse = 2,
    AVAudioEnvironmentDistanceAttenuationModelLinear = 3
} __attribute__((availability(ios,introduced=8_0)));
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))

#ifndef _REWRITER_typedef_AVAudioEnvironmentDistanceAttenuationParameters
#define _REWRITER_typedef_AVAudioEnvironmentDistanceAttenuationParameters
typedef struct objc_object AVAudioEnvironmentDistanceAttenuationParameters;
typedef struct {} _objc_exc_AVAudioEnvironmentDistanceAttenuationParameters;
#endif

struct AVAudioEnvironmentDistanceAttenuationParameters_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_impl;
};


// - (instancetype)init __attribute__((unavailable));






// @property (nonatomic) AVAudioEnvironmentDistanceAttenuationModel distanceAttenuationModel;
// @property (nonatomic) float referenceDistance;







// @property (nonatomic) float maximumDistance;
// @property (nonatomic) float rolloffFactor;

/* @end */

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))

#ifndef _REWRITER_typedef_AVAudioEnvironmentReverbParameters
#define _REWRITER_typedef_AVAudioEnvironmentReverbParameters
typedef struct objc_object AVAudioEnvironmentReverbParameters;
typedef struct {} _objc_exc_AVAudioEnvironmentReverbParameters;
#endif

struct AVAudioEnvironmentReverbParameters_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_impl;
};


// - (instancetype)init __attribute__((unavailable));






// @property (nonatomic) BOOL enable;







// @property (nonatomic) float level;




// @property (nonatomic, readonly) AVAudioUnitEQFilterParameters *filterParameters;
// - (void)loadFactoryReverbPreset:(AVAudioUnitReverbPreset)preset;

/* @end */

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_AVAudioEnvironmentNode
#define _REWRITER_typedef_AVAudioEnvironmentNode
typedef struct objc_object AVAudioEnvironmentNode;
typedef struct {} _objc_exc_AVAudioEnvironmentNode;
#endif

struct AVAudioEnvironmentNode_IMPL {
	struct AVAudioNode_IMPL AVAudioNode_IVARS;
};


// - (instancetype)init __attribute__((objc_designated_initializer));






// @property (nonatomic) float outputVolume;






// @property (nonatomic, readonly) AVAudioNodeBus nextAvailableInputBus;
// @property (nonatomic) AVAudio3DPoint listenerPosition;
// @property (nonatomic) AVAudio3DVectorOrientation listenerVectorOrientation;
// @property (nonatomic) AVAudio3DAngularOrientation listenerAngularOrientation;




// @property (nonatomic, readonly) AVAudioEnvironmentDistanceAttenuationParameters *distanceAttenuationParameters;




// @property (nonatomic, readonly) AVAudioEnvironmentReverbParameters *reverbParameters;
// @property (nonatomic, readonly) NSArray<NSNumber *> *applicableRenderingAlgorithms;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class NSURL;
#ifndef _REWRITER_typedef_NSURL
#define _REWRITER_typedef_NSURL
typedef struct objc_object NSURL;
typedef struct {} _objc_exc_NSURL;
#endif

// @class AVAudioPCMBuffer;
#ifndef _REWRITER_typedef_AVAudioPCMBuffer
#define _REWRITER_typedef_AVAudioPCMBuffer
typedef struct objc_object AVAudioPCMBuffer;
typedef struct {} _objc_exc_AVAudioPCMBuffer;
#endif

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))

#ifndef _REWRITER_typedef_AVAudioFile
#define _REWRITER_typedef_AVAudioFile
typedef struct objc_object AVAudioFile;
typedef struct {} _objc_exc_AVAudioFile;
#endif

struct AVAudioFile_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_impl;
};

// - (nullable instancetype)initForReading:(NSURL *)fileURL error:(NSError **)outError;
// - (nullable instancetype)initForReading:(NSURL *)fileURL commonFormat:(AVAudioCommonFormat)format interleaved:(BOOL)interleaved error:(NSError **)outError;
// - (nullable instancetype)initForWriting:(NSURL *)fileURL settings:(NSDictionary<NSString *, id> *)settings error:(NSError **)outError;
// - (nullable instancetype)initForWriting:(NSURL *)fileURL settings:(NSDictionary<NSString *, id> *)settings commonFormat:(AVAudioCommonFormat)format interleaved:(BOOL)interleaved error:(NSError **)outError;
// - (BOOL)readIntoBuffer:(AVAudioPCMBuffer *)buffer error:(NSError **)outError;
// - (BOOL)readIntoBuffer:(AVAudioPCMBuffer *)buffer frameCount:(AVAudioFrameCount)frames error:(NSError **)outError;
// - (BOOL)writeFromBuffer:(const AVAudioPCMBuffer *)buffer error:(NSError **)outError;




// @property (nonatomic, readonly) NSURL *url;




// @property (nonatomic, readonly) AVAudioFormat *fileFormat;




// @property (nonatomic, readonly) AVAudioFormat *processingFormat;






// @property (nonatomic, readonly) AVAudioFramePosition length;






// @property (nonatomic) AVAudioFramePosition framePosition;
/* @end */

#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))

#ifndef _REWRITER_typedef_AVAudioMixerNode
#define _REWRITER_typedef_AVAudioMixerNode
typedef struct objc_object AVAudioMixerNode;
typedef struct {} _objc_exc_AVAudioMixerNode;
#endif

struct AVAudioMixerNode_IMPL {
	struct AVAudioNode_IMPL AVAudioNode_IVARS;
};


// - (instancetype)init __attribute__((objc_designated_initializer));






// @property (nonatomic) float outputVolume;






// @property (nonatomic, readonly) AVAudioNodeBus nextAvailableInputBus;

/* @end */

#pragma clang assume_nonnull end



extern "C" NSString *const AVFormatIDKey;
extern "C" NSString *const AVSampleRateKey;
extern "C" NSString *const AVNumberOfChannelsKey;


extern "C" NSString *const AVLinearPCMBitDepthKey;
extern "C" NSString *const AVLinearPCMIsBigEndianKey;
extern "C" NSString *const AVLinearPCMIsFloatKey;

extern "C" NSString *const AVLinearPCMIsNonInterleaved __attribute__((availability(ios,introduced=4_0)));



extern "C" NSString *const AVAudioFileTypeKey __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));


extern "C" NSString *const AVEncoderAudioQualityKey;
extern "C" NSString *const AVEncoderAudioQualityForVBRKey __attribute__((availability(ios,introduced=7_0)));


extern "C" NSString *const AVEncoderBitRateKey;
extern "C" NSString *const AVEncoderBitRatePerChannelKey __attribute__((availability(ios,introduced=4_0)));
extern "C" NSString *const AVEncoderBitRateStrategyKey __attribute__((availability(ios,introduced=7_0)));
extern "C" NSString *const AVEncoderBitDepthHintKey;


extern "C" NSString *const AVSampleRateConverterAlgorithmKey __attribute__((availability(ios,introduced=7_0)));
extern "C" NSString *const AVSampleRateConverterAudioQualityKey;


extern "C" NSString *const AVChannelLayoutKey __attribute__((availability(ios,introduced=4_0)));





extern "C" NSString *const AVAudioBitRateStrategy_Constant __attribute__((availability(ios,introduced=7_0)));
extern "C" NSString *const AVAudioBitRateStrategy_LongTermAverage __attribute__((availability(ios,introduced=7_0)));
extern "C" NSString *const AVAudioBitRateStrategy_VariableConstrained __attribute__((availability(ios,introduced=7_0)));
extern "C" NSString *const AVAudioBitRateStrategy_Variable __attribute__((availability(ios,introduced=7_0)));


extern "C" NSString *const AVSampleRateConverterAlgorithm_Normal __attribute__((availability(ios,introduced=7_0)));
extern "C" NSString *const AVSampleRateConverterAlgorithm_Mastering __attribute__((availability(ios,introduced=7_0)));
extern "C" NSString *const AVSampleRateConverterAlgorithm_MinimumPhase __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

typedef NSInteger AVAudioQuality; enum {
 AVAudioQualityMin = 0,
 AVAudioQualityLow = 0x20,
 AVAudioQualityMedium = 0x40,
 AVAudioQualityHigh = 0x60,
 AVAudioQualityMax = 0x7F
};


#pragma clang assume_nonnull begin


// @protocol AVAudioSessionDelegate;
// @class NSError;
#ifndef _REWRITER_typedef_NSError
#define _REWRITER_typedef_NSError
typedef struct objc_object NSError;
typedef struct {} _objc_exc_NSError;
#endif

#ifndef _REWRITER_typedef_NSString
#define _REWRITER_typedef_NSString
typedef struct objc_object NSString;
typedef struct {} _objc_exc_NSString;
#endif

#ifndef _REWRITER_typedef_NSNumber
#define _REWRITER_typedef_NSNumber
typedef struct objc_object NSNumber;
typedef struct {} _objc_exc_NSNumber;
#endif

// @class AVAudioSessionChannelDescription;
#ifndef _REWRITER_typedef_AVAudioSessionChannelDescription
#define _REWRITER_typedef_AVAudioSessionChannelDescription
typedef struct objc_object AVAudioSessionChannelDescription;
typedef struct {} _objc_exc_AVAudioSessionChannelDescription;
#endif

#ifndef _REWRITER_typedef_AVAudioSessionPortDescription
#define _REWRITER_typedef_AVAudioSessionPortDescription
typedef struct objc_object AVAudioSessionPortDescription;
typedef struct {} _objc_exc_AVAudioSessionPortDescription;
#endif

#ifndef _REWRITER_typedef_AVAudioSessionRouteDescription
#define _REWRITER_typedef_AVAudioSessionRouteDescription
typedef struct objc_object AVAudioSessionRouteDescription;
typedef struct {} _objc_exc_AVAudioSessionRouteDescription;
#endif

#ifndef _REWRITER_typedef_AVAudioSessionDataSourceDescription
#define _REWRITER_typedef_AVAudioSessionDataSourceDescription
typedef struct objc_object AVAudioSessionDataSourceDescription;
typedef struct {} _objc_exc_AVAudioSessionDataSourceDescription;
#endif

typedef NSUInteger AVAudioSessionInterruptionOptions; enum
{
 AVAudioSessionInterruptionOptionShouldResume = 1
} __attribute__((availability(ios,introduced=6_0)));





typedef NSUInteger AVAudioSessionSetActiveOptions; enum
{
 AVAudioSessionSetActiveOptionNotifyOthersOnDeactivation = 1
} __attribute__((availability(ios,introduced=6_0)));







typedef NSUInteger AVAudioSessionPortOverride; enum
{
 AVAudioSessionPortOverrideNone = 0,
 AVAudioSessionPortOverrideSpeaker __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) = 'spkr'
} __attribute__((availability(ios,introduced=6_0)));
typedef NSUInteger AVAudioSessionRouteChangeReason; enum
{
 AVAudioSessionRouteChangeReasonUnknown = 0,
 AVAudioSessionRouteChangeReasonNewDeviceAvailable = 1,
 AVAudioSessionRouteChangeReasonOldDeviceUnavailable = 2,
 AVAudioSessionRouteChangeReasonCategoryChange = 3,
 AVAudioSessionRouteChangeReasonOverride = 4,
 AVAudioSessionRouteChangeReasonWakeFromSleep = 6,
 AVAudioSessionRouteChangeReasonNoSuitableRouteForCategory = 7,
 AVAudioSessionRouteChangeReasonRouteConfigurationChange __attribute__((availability(ios,introduced=7_0))) = 8
} __attribute__((availability(ios,introduced=6_0)));
typedef NSUInteger AVAudioSessionCategoryOptions; enum
{

 AVAudioSessionCategoryOptionMixWithOthers = 0x1,

 AVAudioSessionCategoryOptionDuckOthers = 0x2,

 AVAudioSessionCategoryOptionAllowBluetooth __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) = 0x4,

 AVAudioSessionCategoryOptionDefaultToSpeaker __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) = 0x8,

 AVAudioSessionCategoryOptionInterruptSpokenAudioAndMixWithOthers __attribute__((availability(ios,introduced=9_0))) = 0x11,

 AVAudioSessionCategoryOptionAllowBluetoothA2DP __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0))) = 0x20,

 AVAudioSessionCategoryOptionAllowAirPlay __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,unavailable))) = 0x40,
} __attribute__((availability(ios,introduced=6_0)));

typedef NSUInteger AVAudioSessionInterruptionType; enum
{
 AVAudioSessionInterruptionTypeBegan = 1,
 AVAudioSessionInterruptionTypeEnded = 0,
} __attribute__((availability(ios,introduced=6_0)));


typedef NSUInteger AVAudioSessionSilenceSecondaryAudioHintType; enum
{
 AVAudioSessionSilenceSecondaryAudioHintTypeBegin = 1,
 AVAudioSessionSilenceSecondaryAudioHintTypeEnd = 0,
} __attribute__((availability(ios,introduced=8_0)));
typedef NSUInteger AVAudioSessionRecordPermission; enum
{
 AVAudioSessionRecordPermissionUndetermined = 'undt',
 AVAudioSessionRecordPermissionDenied = 'deny',
 AVAudioSessionRecordPermissionGranted = 'grnt'
} __attribute__((availability(tvos,unavailable))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=4.0)));
typedef NSUInteger AVAudioSessionIOType; enum
{
 AVAudioSessionIOTypeNotSpecified = 0,
 AVAudioSessionIOTypeAggregated = 1
} __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
typedef NSUInteger AVAudioSessionRouteSharingPolicy; enum
{
 AVAudioSessionRouteSharingPolicyDefault = 0,
 AVAudioSessionRouteSharingPolicyLongForm = 1,
 AVAudioSessionRouteSharingPolicyIndependent = 2,
} __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,unavailable)));
typedef NSInteger AVAudioSessionErrorCode; enum
{
 AVAudioSessionErrorCodeNone = 0,
 AVAudioSessionErrorCodeMediaServicesFailed = 'msrv',
 AVAudioSessionErrorCodeIsBusy = '!act',
 AVAudioSessionErrorCodeIncompatibleCategory = '!cat',
 AVAudioSessionErrorCodeCannotInterruptOthers = '!int',
 AVAudioSessionErrorCodeMissingEntitlement = 'ent?',
 AVAudioSessionErrorCodeSiriIsRecording = 'siri',
 AVAudioSessionErrorCodeCannotStartPlaying = '!pla',
 AVAudioSessionErrorCodeCannotStartRecording = '!rec',
 AVAudioSessionErrorCodeBadParam = -50,
 AVAudioSessionErrorInsufficientPriority = '!pri',
 AVAudioSessionErrorCodeResourceNotAvailable = '!res',
 AVAudioSessionErrorCodeUnspecified = 'what'
} __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=2.0))) __attribute__((availability(tvos,introduced=7.0)));



__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=3_0)))

#ifndef _REWRITER_typedef_AVAudioSession
#define _REWRITER_typedef_AVAudioSession
typedef struct objc_object AVAudioSession;
typedef struct {} _objc_exc_AVAudioSession;
#endif

struct AVAudioSession_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_impl;
};



// + (AVAudioSession *)sharedInstance;






// - (BOOL)setActive:(BOOL)active error:(NSError **)outError;
// - (BOOL)setActive:(BOOL)active withOptions:(AVAudioSessionSetActiveOptions)options error:(NSError **)outError __attribute__((availability(ios,introduced=6_0)));



// @property (readonly) NSArray<NSString *> *availableCategories __attribute__((availability(ios,introduced=9_0)));


// - (BOOL)setCategory:(NSString *)category error:(NSError **)outError;

// - (BOOL)setCategory:(NSString *)category withOptions:(AVAudioSessionCategoryOptions)options error:(NSError **)outError __attribute__((availability(ios,introduced=6_0)));

// - (BOOL)setCategory:(NSString *)category mode:(NSString *)mode options:(AVAudioSessionCategoryOptions)options error:(NSError **)outError __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));






// - (BOOL)setCategory:(NSString *)category mode:(NSString *)mode routeSharingPolicy:(AVAudioSessionRouteSharingPolicy)policy options:(AVAudioSessionCategoryOptions)options error:(NSError **)outError __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,unavailable)));


// @property (readonly) NSString *category;


// @property (readonly) AVAudioSessionCategoryOptions categoryOptions __attribute__((availability(ios,introduced=6_0)));



// @property (readonly) AVAudioSessionRouteSharingPolicy routeSharingPolicy __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,unavailable)));







// @property (readonly) NSArray<NSString *> *availableModes __attribute__((availability(ios,introduced=9_0)));

// - (BOOL)setMode:(NSString *)mode error:(NSError **)outError __attribute__((availability(ios,introduced=5_0)));
// @property (readonly) NSString *mode __attribute__((availability(ios,introduced=5_0)));


// - (AVAudioSessionRecordPermission)recordPermission __attribute__((availability(tvos,unavailable))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(watchos,introduced=4.0)));






typedef void (*PermissionBlock)(BOOL granted);

// - (void)requestRecordPermission:(PermissionBlock)response __attribute__((availability(tvos,unavailable))) __attribute__((availability(ios,introduced=7.0))) __attribute__((availability(watchos,introduced=4.0)));

// - (BOOL)overrideOutputAudioPort:(AVAudioSessionPortOverride)portOverride error:(NSError **)outError __attribute__((availability(ios,introduced=6_0)));







// @property (readonly, getter=isOtherAudioPlaying) BOOL otherAudioPlaying __attribute__((availability(ios,introduced=6_0)));






// @property (readonly) BOOL secondaryAudioShouldBeSilencedHint __attribute__((availability(ios,introduced=8_0)));


// @property (readonly) AVAudioSessionRouteDescription *currentRoute __attribute__((availability(ios,introduced=6_0)));




// - (BOOL)setPreferredInput:(nullable AVAudioSessionPortDescription *)inPort error:(NSError **)outError __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(watchos,unavailable)));
// @property (readonly, nullable) AVAudioSessionPortDescription *preferredInput __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(watchos,unavailable)));



// @property (readonly, nullable) NSArray<AVAudioSessionPortDescription *> *availableInputs __attribute__((availability(ios,introduced=7_0)));

/* @end */





// @interface AVAudioSession (AVAudioSessionHardwareConfiguration)





// - (BOOL)setPreferredSampleRate:(double)sampleRate error:(NSError **)outError __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(watchos,unavailable)));
// @property (readonly) double preferredSampleRate __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(watchos,unavailable)));


// - (BOOL)setPreferredIOBufferDuration:(NSTimeInterval)duration error:(NSError **)outError __attribute__((availability(watchos,unavailable)));
// @property (readonly) NSTimeInterval preferredIOBufferDuration __attribute__((availability(watchos,unavailable)));


// - (BOOL)setPreferredInputNumberOfChannels:(NSInteger)count error:(NSError **)outError __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(watchos,unavailable)));
// @property (readonly) NSInteger preferredInputNumberOfChannels __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(watchos,unavailable)));


// - (BOOL)setPreferredOutputNumberOfChannels:(NSInteger)count error:(NSError **)outError __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(watchos,unavailable)));
// @property (readonly) NSInteger preferredOutputNumberOfChannels __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(watchos,unavailable)));


// @property (readonly) NSInteger maximumInputNumberOfChannels __attribute__((availability(ios,introduced=7_0)));


// @property (readonly) NSInteger maximumOutputNumberOfChannels __attribute__((availability(ios,introduced=7_0)));
// - (BOOL)setInputGain:(float)gain error:(NSError **)outError __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(watchos,unavailable)));
// @property (readonly) float inputGain __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(watchos,unavailable)));



// @property (readonly, getter=isInputGainSettable) BOOL inputGainSettable __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(watchos,unavailable)));


// @property (readonly, getter=isInputAvailable) BOOL inputAvailable __attribute__((availability(ios,introduced=6_0)));
// @property (readonly, nullable) NSArray<AVAudioSessionDataSourceDescription *> *inputDataSources __attribute__((availability(ios,introduced=6_0)));



// @property (readonly, nullable) AVAudioSessionDataSourceDescription *inputDataSource __attribute__((availability(ios,introduced=6_0)));
// - (BOOL)setInputDataSource:(nullable AVAudioSessionDataSourceDescription *)dataSource error:(NSError **)outError __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(watchos,unavailable)));


// @property (readonly, nullable) NSArray<AVAudioSessionDataSourceDescription *> *outputDataSources __attribute__((availability(ios,introduced=6_0)));



// @property (readonly, nullable) AVAudioSessionDataSourceDescription *outputDataSource __attribute__((availability(ios,introduced=6_0)));
// - (BOOL)setOutputDataSource:(nullable AVAudioSessionDataSourceDescription *)dataSource error:(NSError **)outError __attribute__((availability(ios,introduced=6_0))) __attribute__((availability(watchos,unavailable)));






// @property (readonly) double sampleRate __attribute__((availability(ios,introduced=6_0)));


// @property (readonly) NSInteger inputNumberOfChannels __attribute__((availability(ios,introduced=6_0)));


// @property (readonly) NSInteger outputNumberOfChannels __attribute__((availability(ios,introduced=6_0)));


// @property (readonly) float outputVolume __attribute__((availability(ios,introduced=6_0)));


// @property (readonly) NSTimeInterval inputLatency __attribute__((availability(ios,introduced=6_0)));


// @property (readonly) NSTimeInterval outputLatency __attribute__((availability(ios,introduced=6_0)));


// @property (readonly) NSTimeInterval IOBufferDuration __attribute__((availability(ios,introduced=6_0)));





// - (BOOL)setAggregatedIOPreference:(AVAudioSessionIOType)inIOType error:(NSError **)outError __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));

/* @end */

extern "C" NSString *const AVAudioSessionInterruptionNotification __attribute__((availability(ios,introduced=6_0)));




extern "C" NSString *const AVAudioSessionRouteChangeNotification __attribute__((availability(ios,introduced=6_0)));




extern "C" NSString *const AVAudioSessionMediaServicesWereLostNotification __attribute__((availability(ios,introduced=7_0)));




extern "C" NSString *const AVAudioSessionMediaServicesWereResetNotification __attribute__((availability(ios,introduced=6_0)));







extern "C" NSString *const AVAudioSessionSilenceSecondaryAudioHintNotification __attribute__((availability(ios,introduced=8_0)));





extern "C" NSString *const AVAudioSessionInterruptionTypeKey __attribute__((availability(ios,introduced=6_0)));


extern "C" NSString *const AVAudioSessionInterruptionOptionKey __attribute__((availability(ios,introduced=6_0)));
extern "C" NSString *const AVAudioSessionInterruptionWasSuspendedKey __attribute__((availability(ios,introduced=10_3)));



extern "C" NSString *const AVAudioSessionRouteChangeReasonKey __attribute__((availability(ios,introduced=6_0)));

extern "C" NSString *const AVAudioSessionRouteChangePreviousRouteKey __attribute__((availability(ios,introduced=6_0)));



extern "C" NSString *const AVAudioSessionSilenceSecondaryAudioHintTypeKey __attribute__((availability(ios,introduced=8_0)));





extern "C" NSString *const AVAudioSessionCategoryAmbient;


extern "C" NSString *const AVAudioSessionCategorySoloAmbient;


extern "C" NSString *const AVAudioSessionCategoryPlayback;


extern "C" NSString *const AVAudioSessionCategoryRecord;


extern "C" NSString *const AVAudioSessionCategoryPlayAndRecord;



extern "C" NSString *const AVAudioSessionCategoryAudioProcessing __attribute__((availability(ios,introduced=3_0,deprecated=10_0,message="" ))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
extern "C" NSString *const AVAudioSessionCategoryMultiRoute __attribute__((availability(ios,introduced=6_0)));
extern "C" NSString *const AVAudioSessionModeDefault __attribute__((availability(ios,introduced=5_0)));





extern "C" NSString *const AVAudioSessionModeVoiceChat __attribute__((availability(ios,introduced=5_0)));





extern "C" NSString *const AVAudioSessionModeGameChat __attribute__((availability(ios,introduced=5_0)));



extern "C" NSString *const AVAudioSessionModeVideoRecording __attribute__((availability(ios,introduced=5_0)));



extern "C" NSString *const AVAudioSessionModeMeasurement __attribute__((availability(ios,introduced=5_0)));



extern "C" NSString *const AVAudioSessionModeMoviePlayback __attribute__((availability(ios,introduced=6_0)));





extern "C" NSString *const AVAudioSessionModeVideoChat __attribute__((availability(ios,introduced=7_0)));




extern "C" NSString *const AVAudioSessionModeSpokenAudio __attribute__((availability(ios,introduced=9_0)));




extern "C" NSString *const AVAudioSessionPortLineIn __attribute__((availability(ios,introduced=6_0)));
extern "C" NSString *const AVAudioSessionPortBuiltInMic __attribute__((availability(ios,introduced=6_0)));
extern "C" NSString *const AVAudioSessionPortHeadsetMic __attribute__((availability(ios,introduced=6_0)));




extern "C" NSString *const AVAudioSessionPortLineOut __attribute__((availability(ios,introduced=6_0)));
extern "C" NSString *const AVAudioSessionPortHeadphones __attribute__((availability(ios,introduced=6_0)));
extern "C" NSString *const AVAudioSessionPortBluetoothA2DP __attribute__((availability(ios,introduced=6_0)));
extern "C" NSString *const AVAudioSessionPortBuiltInReceiver __attribute__((availability(ios,introduced=6_0)));
extern "C" NSString *const AVAudioSessionPortBuiltInSpeaker __attribute__((availability(ios,introduced=6_0)));
extern "C" NSString *const AVAudioSessionPortHDMI __attribute__((availability(ios,introduced=6_0)));
extern "C" NSString *const AVAudioSessionPortAirPlay __attribute__((availability(ios,introduced=6_0)));
extern "C" NSString *const AVAudioSessionPortBluetoothLE __attribute__((availability(ios,introduced=7_0)));


extern "C" NSString *const AVAudioSessionPortBluetoothHFP __attribute__((availability(ios,introduced=6_0)));
extern "C" NSString *const AVAudioSessionPortUSBAudio __attribute__((availability(ios,introduced=6_0)));
extern "C" NSString *const AVAudioSessionPortCarAudio __attribute__((availability(ios,introduced=7_0)));




extern "C" NSString *const AVAudioSessionLocationUpper __attribute__((availability(ios,introduced=7_0)));
extern "C" NSString *const AVAudioSessionLocationLower __attribute__((availability(ios,introduced=7_0)));


extern "C" NSString *const AVAudioSessionOrientationTop __attribute__((availability(ios,introduced=7_0)));
extern "C" NSString *const AVAudioSessionOrientationBottom __attribute__((availability(ios,introduced=7_0)));
extern "C" NSString *const AVAudioSessionOrientationFront __attribute__((availability(ios,introduced=7_0)));
extern "C" NSString *const AVAudioSessionOrientationBack __attribute__((availability(ios,introduced=7_0)));
extern "C" NSString *const AVAudioSessionOrientationLeft __attribute__((availability(ios,introduced=8_0)));
extern "C" NSString *const AVAudioSessionOrientationRight __attribute__((availability(ios,introduced=8_0)));


extern "C" NSString *const AVAudioSessionPolarPatternOmnidirectional __attribute__((availability(ios,introduced=7_0)));
extern "C" NSString *const AVAudioSessionPolarPatternCardioid __attribute__((availability(ios,introduced=7_0)));
extern "C" NSString *const AVAudioSessionPolarPatternSubcardioid __attribute__((availability(ios,introduced=7_0)));
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0)))

#ifndef _REWRITER_typedef_AVAudioSessionChannelDescription
#define _REWRITER_typedef_AVAudioSessionChannelDescription
typedef struct objc_object AVAudioSessionChannelDescription;
typedef struct {} _objc_exc_AVAudioSessionChannelDescription;
#endif

struct AVAudioSessionChannelDescription_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_impl;
};


// @property(readonly) NSString * channelName;
// @property(readonly) NSString * owningPortUID;
// @property(readonly) NSUInteger channelNumber;
// @property(readonly) AudioChannelLabel channelLabel;

/* @end */


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0)))

#ifndef _REWRITER_typedef_AVAudioSessionPortDescription
#define _REWRITER_typedef_AVAudioSessionPortDescription
typedef struct objc_object AVAudioSessionPortDescription;
typedef struct {} _objc_exc_AVAudioSessionPortDescription;
#endif

struct AVAudioSessionPortDescription_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_impl;
};



// @property (readonly) NSString *portType;


// @property (readonly) NSString *portName;


// @property (readonly) NSString *UID;







// @property (readonly) BOOL hasHardwareVoiceCallProcessing __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

// @property (readonly, nullable) NSArray<AVAudioSessionChannelDescription *> *channels;


// @property (readonly, nullable) NSArray<AVAudioSessionDataSourceDescription *> *dataSources __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(watchos,unavailable)));



// @property (readonly, nullable) AVAudioSessionDataSourceDescription *selectedDataSource __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(watchos,unavailable)));



// @property (readonly, nullable) AVAudioSessionDataSourceDescription *preferredDataSource __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(watchos,unavailable)));






// - (BOOL)setPreferredDataSource:(nullable AVAudioSessionDataSourceDescription *)dataSource error:(NSError **)outError __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(watchos,unavailable)));

/* @end */


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0)))

#ifndef _REWRITER_typedef_AVAudioSessionRouteDescription
#define _REWRITER_typedef_AVAudioSessionRouteDescription
typedef struct objc_object AVAudioSessionRouteDescription;
typedef struct {} _objc_exc_AVAudioSessionRouteDescription;
#endif

struct AVAudioSessionRouteDescription_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_impl;
};


// @property (readonly) NSArray<AVAudioSessionPortDescription *> *inputs;

// @property (readonly) NSArray<AVAudioSessionPortDescription *> *outputs;
/* @end */


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0)))

#ifndef _REWRITER_typedef_AVAudioSessionDataSourceDescription
#define _REWRITER_typedef_AVAudioSessionDataSourceDescription
typedef struct objc_object AVAudioSessionDataSourceDescription;
typedef struct {} _objc_exc_AVAudioSessionDataSourceDescription;
#endif

struct AVAudioSessionDataSourceDescription_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_impl;
};



// @property (readonly) NSNumber *dataSourceID;


// @property (readonly) NSString *dataSourceName;





// @property (readonly, nullable) NSString *location __attribute__((availability(ios,introduced=7_0)));


// @property (readonly, nullable) NSString *orientation __attribute__((availability(ios,introduced=7_0)));


// @property (readonly, nullable) NSArray<NSString *> *supportedPolarPatterns __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(watchos,unavailable)));


// @property (readonly, nullable) NSString *selectedPolarPattern __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(watchos,unavailable)));


// @property (readonly, nullable) NSString *preferredPolarPattern __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(watchos,unavailable)));






// - (BOOL)setPreferredPolarPattern:(nullable NSString *)pattern error:(NSError **)outError __attribute__((availability(ios,introduced=7_0))) __attribute__((availability(watchos,unavailable)));

/* @end */




// @interface AVAudioSession (AVAudioSessionDeprecated)
// @property (assign, nullable) id<AVAudioSessionDelegate> delegate __attribute__((availability(ios,introduced=4_0,deprecated=6_0,message="" ))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));


// - (instancetype)init __attribute__((availability(ios,introduced=3_0,deprecated=10_0,message="" ))) __attribute__((availability(watchos,unavailable)));

// - (BOOL)setActive:(BOOL)active withFlags:(NSInteger)flags error:(NSError **)outError __attribute__((availability(ios,introduced=4_0,deprecated=6_0,message="" ))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));

// @property (readonly) BOOL inputIsAvailable __attribute__((availability(ios,introduced=3_0,deprecated=6_0,message="" ))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));


// @property (readonly) double currentHardwareSampleRate __attribute__((availability(ios,introduced=3_0,deprecated=6_0,message="" ))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
// @property (readonly) NSInteger currentHardwareInputNumberOfChannels __attribute__((availability(ios,introduced=3_0,deprecated=6_0,message="" ))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
// @property (readonly) NSInteger currentHardwareOutputNumberOfChannels __attribute__((availability(ios,introduced=3_0,deprecated=6_0,message="" ))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
// - (BOOL)setPreferredHardwareSampleRate:(double)sampleRate error:(NSError **)outError __attribute__((availability(ios,introduced=3_0,deprecated=6_0,message="" ))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
// @property (readonly) double preferredHardwareSampleRate __attribute__((availability(ios,introduced=3_0,deprecated=6_0,message="" ))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));

/* @end */




__attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))
// @protocol AVAudioSessionDelegate <NSObject>
/* @optional */

// - (void)beginInterruption;


// - (void)endInterruptionWithFlags:(NSUInteger)flags __attribute__((availability(ios,introduced=4_0)));

// - (void)endInterruption;


// - (void)inputIsAvailableChanged:(BOOL)isInputAvailable;

/* @end */






enum {
 AVAudioSessionInterruptionFlags_ShouldResume = 1
} __attribute__((availability(ios,introduced=4_0,deprecated=6_0,message="" ))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));



enum {
 AVAudioSessionSetActiveFlags_NotifyOthersOnDeactivation = 1
} __attribute__((availability(ios,introduced=4_0,deprecated=6_0,message="" ))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
#pragma clang assume_nonnull end




#pragma clang assume_nonnull begin

// @class NSData;
#ifndef _REWRITER_typedef_NSData
#define _REWRITER_typedef_NSData
typedef struct objc_object NSData;
typedef struct {} _objc_exc_NSData;
#endif

#ifndef _REWRITER_typedef_NSURL
#define _REWRITER_typedef_NSURL
typedef struct objc_object NSURL;
typedef struct {} _objc_exc_NSURL;
#endif

#ifndef _REWRITER_typedef_NSError
#define _REWRITER_typedef_NSError
typedef struct objc_object NSError;
typedef struct {} _objc_exc_NSError;
#endif


// @class AVAudioSessionChannelDescription;
#ifndef _REWRITER_typedef_AVAudioSessionChannelDescription
#define _REWRITER_typedef_AVAudioSessionChannelDescription
typedef struct objc_object AVAudioSessionChannelDescription;
typedef struct {} _objc_exc_AVAudioSessionChannelDescription;
#endif


// @protocol AVAudioPlayerDelegate;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=2_2))) __attribute__((availability(watchos,introduced=3_0)))

#ifndef _REWRITER_typedef_AVAudioPlayer
#define _REWRITER_typedef_AVAudioPlayer
typedef struct objc_object AVAudioPlayer;
typedef struct {} _objc_exc_AVAudioPlayer;
#endif

struct AVAudioPlayer_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	__strong id _impl;
};







// - (nullable instancetype)initWithContentsOfURL:(NSURL *)url error:(NSError **)outError;
// - (nullable instancetype)initWithData:(NSData *)data error:(NSError **)outError;



// - (nullable instancetype)initWithContentsOfURL:(NSURL *)url fileTypeHint:(NSString * _Nullable)utiString error:(NSError **)outError __attribute__((availability(ios,introduced=7_0)));
// - (nullable instancetype)initWithData:(NSData *)data fileTypeHint:(NSString * _Nullable)utiString error:(NSError **)outError __attribute__((availability(ios,introduced=7_0)));



// - (BOOL)prepareToPlay;
// - (BOOL)play;
// - (BOOL)playAtTime:(NSTimeInterval)time __attribute__((availability(ios,introduced=4_0)));
// - (void)pause;
// - (void)stop;



// @property(readonly, getter=isPlaying) BOOL playing;

// @property(readonly) NSUInteger numberOfChannels;
// @property(readonly) NSTimeInterval duration;







// @property(assign, nullable) id<AVAudioPlayerDelegate> delegate;


// @property(readonly, nullable) NSURL *url;
// @property(readonly, nullable) NSData *data;

// @property float pan __attribute__((availability(ios,introduced=4_0)));
// @property float volume;
// - (void)setVolume:(float)volume fadeDuration:(NSTimeInterval)duration __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

// @property BOOL enableRate __attribute__((availability(ios,introduced=5_0)));
// @property float rate __attribute__((availability(ios,introduced=5_0)));




// @property NSTimeInterval currentTime;


// @property(readonly) NSTimeInterval deviceCurrentTime __attribute__((availability(ios,introduced=4_0)));






// @property NSInteger numberOfLoops;


// @property(readonly) NSDictionary<NSString *, id> *settings __attribute__((availability(ios,introduced=4_0)));


// @property(readonly) AVAudioFormat *format __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));



// @property(getter=isMeteringEnabled) BOOL meteringEnabled;

// - (void)updateMeters;

// - (float)peakPowerForChannel:(NSUInteger)channelNumber;
// - (float)averagePowerForChannel:(NSUInteger)channelNumber;





// @property(nonatomic, copy, nullable) NSArray<AVAudioSessionChannelDescription *> *channelAssignments __attribute__((availability(ios,introduced=7_0)));


/* @end */



__attribute__((availability(watchos,introduced=3_0)))
// @protocol AVAudioPlayerDelegate <NSObject>
/* @optional */

// - (void)audioPlayerDidFinishPlaying:(AVAudioPlayer *)player successfully:(BOOL)flag;


// - (void)audioPlayerDecodeErrorDidOccur:(AVAudioPlayer *)player error:(NSError * _Nullable)error;






// - (void)audioPlayerBeginInterruption:(AVAudioPlayer *)player __attribute__((availability(ios,introduced=2_2,deprecated=8_0,message="" )));



// - (void)audioPlayerEndInterruption:(AVAudioPlayer *)player withOptions:(NSUInteger)flags __attribute__((availability(ios,introduced=6_0,deprecated=8_0,message="" )));

// - (void)audioPlayerEndInterruption:(AVAudioPlayer *)player withFlags:(NSUInteger)flags __attribute__((availability(ios,introduced=4_0,deprecated=6_0,message="" )));


// - (void)audioPlayerEndInterruption:(AVAudioPlayer *)player __attribute__((availability(ios,introduced=2_2,deprecated=6_0,message="" )));



/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class AVAudioTime;
#ifndef _REWRITER_typedef_AVAudioTime
#define _REWRITER_typedef_AVAudioTime
typedef struct objc_object AVAudioTime;
typedef struct {} _objc_exc_AVAudioTime;
#endif

typedef NSUInteger AVAudioPlayerNodeBufferOptions; enum {
    AVAudioPlayerNodeBufferLoops = 1UL << 0,
 AVAudioPlayerNodeBufferInterrupts = 1UL << 1,
 AVAudioPlayerNodeBufferInterruptsAtLoop = 1UL << 2
} __attribute__((availability(ios,introduced=8_0)));
typedef NSInteger AVAudioPlayerNodeCompletionCallbackType; enum {
 AVAudioPlayerNodeCompletionDataConsumed = 0,
 AVAudioPlayerNodeCompletionDataRendered = 1,
 AVAudioPlayerNodeCompletionDataPlayedBack = 2,
} __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
typedef void (*AVAudioPlayerNodeCompletionHandler)(AVAudioPlayerNodeCompletionCallbackType callbackType) __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))

#ifndef _REWRITER_typedef_AVAudioPlayerNode
#define _REWRITER_typedef_AVAudioPlayerNode
typedef struct objc_object AVAudioPlayerNode;
typedef struct {} _objc_exc_AVAudioPlayerNode;
#endif

struct AVAudioPlayerNode_IMPL {
	struct AVAudioNode_IMPL AVAudioNode_IVARS;
};


// - (instancetype)init __attribute__((objc_designated_initializer));
// - (void)scheduleBuffer:(AVAudioPCMBuffer *)buffer completionHandler:(AVAudioNodeCompletionHandler _Nullable)completionHandler;
// - (void)scheduleBuffer:(AVAudioPCMBuffer *)buffer completionCallbackType:(AVAudioPlayerNodeCompletionCallbackType)callbackType completionHandler:(AVAudioPlayerNodeCompletionHandler _Nullable)completionHandler __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
// - (void)scheduleBuffer:(AVAudioPCMBuffer *)buffer atTime:(AVAudioTime * _Nullable)when options:(AVAudioPlayerNodeBufferOptions)options completionHandler:(AVAudioNodeCompletionHandler _Nullable)completionHandler;
#if 0
- (void)scheduleBuffer:(AVAudioPCMBuffer *)buffer atTime:(AVAudioTime * _Nullable)when options:(AVAudioPlayerNodeBufferOptions)options
  completionCallbackType:(AVAudioPlayerNodeCompletionCallbackType)callbackType completionHandler:(AVAudioPlayerNodeCompletionHandler _Nullable)completionHandler __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
#endif

// - (void)scheduleFile:(AVAudioFile *)file atTime:(AVAudioTime * _Nullable)when completionHandler:(AVAudioNodeCompletionHandler _Nullable)completionHandler;
// - (void)scheduleFile:(AVAudioFile *)file atTime:(AVAudioTime * _Nullable)when completionCallbackType:(AVAudioPlayerNodeCompletionCallbackType)callbackType completionHandler:(AVAudioPlayerNodeCompletionHandler _Nullable)completionHandler __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
// - (void)scheduleSegment:(AVAudioFile *)file startingFrame:(AVAudioFramePosition)startFrame frameCount:(AVAudioFrameCount)numberFrames atTime:(AVAudioTime * _Nullable)when completionHandler:(AVAudioNodeCompletionHandler _Nullable)completionHandler;
#if 0
- (void)scheduleSegment:(AVAudioFile *)file startingFrame:(AVAudioFramePosition)startFrame frameCount:(AVAudioFrameCount)numberFrames atTime:(AVAudioTime * _Nullable)when
 completionCallbackType:(AVAudioPlayerNodeCompletionCallbackType)callbackType completionHandler:(AVAudioPlayerNodeCompletionHandler _Nullable)completionHandler __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,introduced=11.0)));
#endif

// - (void)stop;







// - (void)prepareWithFrameCount:(AVAudioFrameCount)frameCount;






// - (void)play;
// - (void)playAtTime:(AVAudioTime * _Nullable)when;
// - (void)pause;
// - (AVAudioTime * _Nullable)nodeTimeForPlayerTime:(AVAudioTime *)playerTime;
// - (AVAudioTime * _Nullable)playerTimeForNodeTime:(AVAudioTime *)nodeTime;




// @property(nonatomic, readonly, getter=isPlaying) BOOL playing;


/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @protocol AVAudioRecorderDelegate;
// @class NSURL;
#ifndef _REWRITER_typedef_NSURL
#define _REWRITER_typedef_NSURL
typedef struct objc_object NSURL;
typedef struct {} _objc_exc_NSURL;
#endif

#ifndef _REWRITER_typedef_NSError
#define _REWRITER_typedef_NSError
typedef struct objc_object NSError;
typedef struct {} _objc_exc_NSError;
#endif



__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,unavailable)))

#ifndef _REWRITER_typedef_AVAudioRecorder
#define _REWRITER_typedef_AVAudioRecorder
typedef struct objc_object AVAudioRecorder;
typedef struct {} _objc_exc_AVAudioRecorder;
#endif

struct AVAudioRecorder_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_impl;
};




// - (nullable instancetype)initWithURL:(NSURL *)url settings:(NSDictionary<NSString *, id> *)settings error:(NSError **)outError;


// - (nullable instancetype)initWithURL:(NSURL *)url format:(AVAudioFormat *)format error:(NSError **)outError __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,unavailable)));



// - (BOOL)prepareToRecord;
// - (BOOL)record;
// - (BOOL)recordAtTime:(NSTimeInterval)time __attribute__((availability(ios,introduced=6_0)));
// - (BOOL)recordForDuration:(NSTimeInterval) duration;
// - (BOOL)recordAtTime:(NSTimeInterval)time forDuration:(NSTimeInterval) duration __attribute__((availability(ios,introduced=6_0)));
// - (void)pause;
// - (void)stop;

// - (BOOL)deleteRecording;



// @property(readonly, getter=isRecording) BOOL recording;

// @property(readonly) NSURL *url;


// @property(readonly) NSDictionary<NSString *, id> *settings;


// @property(readonly) AVAudioFormat *format __attribute__((availability(macos,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,unavailable)));


// @property(assign, nullable) id<AVAudioRecorderDelegate> delegate;


// @property(readonly) NSTimeInterval currentTime;

// @property(readonly) NSTimeInterval deviceCurrentTime __attribute__((availability(ios,introduced=6_0)));



// @property(getter=isMeteringEnabled) BOOL meteringEnabled;

// - (void)updateMeters;

// - (float)peakPowerForChannel:(NSUInteger)channelNumber;
// - (float)averagePowerForChannel:(NSUInteger)channelNumber;





// @property(nonatomic, copy, nullable) NSArray<AVAudioSessionChannelDescription *> *channelAssignments __attribute__((availability(ios,introduced=7_0)));


/* @end */




__attribute__((availability(macos,introduced=10.7))) __attribute__((availability(ios,introduced=3.0))) __attribute__((availability(watchos,introduced=4.0))) __attribute__((availability(tvos,unavailable)))
// @protocol AVAudioRecorderDelegate <NSObject>
/* @optional */


// - (void)audioRecorderDidFinishRecording:(AVAudioRecorder *)recorder successfully:(BOOL)flag;


// - (void)audioRecorderEncodeErrorDidOccur:(AVAudioRecorder *)recorder error:(NSError * _Nullable)error;






// - (void)audioRecorderBeginInterruption:(AVAudioRecorder *)recorder __attribute__((availability(ios,introduced=2_2,deprecated=8_0,message="" )));



// - (void)audioRecorderEndInterruption:(AVAudioRecorder *)recorder withOptions:(NSUInteger)flags __attribute__((availability(ios,introduced=6_0,deprecated=8_0,message="" )));

// - (void)audioRecorderEndInterruption:(AVAudioRecorder *)recorder withFlags:(NSUInteger)flags __attribute__((availability(ios,introduced=4_0,deprecated=6_0,message="" )));


// - (void)audioRecorderEndInterruption:(AVAudioRecorder *)recorder __attribute__((availability(ios,introduced=2_2,deprecated=6_0,message="" )));



/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class AVAudioUnit;
#ifndef _REWRITER_typedef_AVAudioUnit
#define _REWRITER_typedef_AVAudioUnit
typedef struct objc_object AVAudioUnit;
typedef struct {} _objc_exc_AVAudioUnit;
#endif

// @class AVAudioTime;
#ifndef _REWRITER_typedef_AVAudioTime
#define _REWRITER_typedef_AVAudioTime
typedef struct objc_object AVAudioTime;
typedef struct {} _objc_exc_AVAudioTime;
#endif

// @class AVAudioEngine;
#ifndef _REWRITER_typedef_AVAudioEngine
#define _REWRITER_typedef_AVAudioEngine
typedef struct objc_object AVAudioEngine;
typedef struct {} _objc_exc_AVAudioEngine;
#endif

// @class AVMusicTrack;
#ifndef _REWRITER_typedef_AVMusicTrack
#define _REWRITER_typedef_AVMusicTrack
typedef struct objc_object AVMusicTrack;
typedef struct {} _objc_exc_AVMusicTrack;
#endif

// @class AVMusicTrackEventIterator;
#ifndef _REWRITER_typedef_AVMusicTrackEventIterator
#define _REWRITER_typedef_AVMusicTrackEventIterator
typedef struct objc_object AVMusicTrackEventIterator;
typedef struct {} _objc_exc_AVMusicTrackEventIterator;
#endif

// @class AVAudioSequencer;
#ifndef _REWRITER_typedef_AVAudioSequencer
#define _REWRITER_typedef_AVAudioSequencer
typedef struct objc_object AVAudioSequencer;
typedef struct {} _objc_exc_AVAudioSequencer;
#endif

typedef Float64 AVMusicTimeStamp;
typedef NSUInteger AVMusicSequenceLoadOptions; enum {
 AVMusicSequenceLoadSMF_PreserveTracks = 0,
 AVMusicSequenceLoadSMF_ChannelsToTracks = (1UL << 0)
} __attribute__((availability(ios,introduced=9_0)));




typedef struct _AVBeatRange {
 AVMusicTimeStamp start;
 AVMusicTimeStamp length;
} AVBeatRange;

static __inline__ __attribute__((always_inline)) AVBeatRange AVMakeBeatRange(AVMusicTimeStamp startBeat, AVMusicTimeStamp lengthInBeats) {
 AVBeatRange r;
 r.start = startBeat;
 r.length = lengthInBeats;
 return r;
}




__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_AVAudioSequencer
#define _REWRITER_typedef_AVAudioSequencer
typedef struct objc_object AVAudioSequencer;
typedef struct {} _objc_exc_AVAudioSequencer;
#endif

struct AVAudioSequencer_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_impl;
};








// - (instancetype)init __attribute__((availability(tvos,unavailable)));





// - (instancetype)initWithAudioEngine:(AVAudioEngine *)engine;
// - (BOOL)loadFromURL:(NSURL *)fileURL options:(AVMusicSequenceLoadOptions)options error:(NSError **)outError;
// - (BOOL)loadFromData:(NSData *)data options:(AVMusicSequenceLoadOptions)options error:(NSError **)outError;
// - (BOOL)writeToURL:(NSURL *)fileURL SMPTEResolution:(NSInteger)resolution replaceExisting:(BOOL)replace error:(NSError **)outError;







// - (NSData *)dataWithSMPTEResolution:(NSInteger)SMPTEResolution error:(NSError **)outError;




// - (NSTimeInterval)secondsForBeats:(AVMusicTimeStamp)beats;




// - (AVMusicTimeStamp)beatsForSeconds:(NSTimeInterval)seconds;
// @property (nonatomic, readonly) NSArray<AVMusicTrack *> *tracks;
// @property (nonatomic, readonly) AVMusicTrack *tempoTrack;







// @property (nonatomic, readonly) NSDictionary<NSString *, id> *userInfo;

/* @end */


// @interface AVAudioSequencer(AVAudioSequencer_Player)







// @property(nonatomic) NSTimeInterval currentPositionInSeconds;







// @property(nonatomic) NSTimeInterval currentPositionInBeats;
// @property(nonatomic, readonly, getter=isPlaying) BOOL playing;






// @property (nonatomic) float rate;
// - (UInt64)hostTimeForBeats:(AVMusicTimeStamp)inBeats error:(NSError **)outError;
// - (AVMusicTimeStamp)beatsForHostTime:(UInt64)inHostTime error:(NSError **)outError;







// - (void)prepareToPlay;






// - (BOOL)startAndReturnError:(NSError **)outError;
// - (void)stop;

/* @end */







__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_AVMusicTrack
#define _REWRITER_typedef_AVMusicTrack
typedef struct objc_object AVMusicTrack;
typedef struct {} _objc_exc_AVMusicTrack;
#endif

struct AVMusicTrack_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_impl;
};

// @property (nonatomic, retain, nullable) AVAudioUnit *destinationAudioUnit;
// @property (nonatomic) MIDIEndpointRef destinationMIDIEndpoint;







// @property (nonatomic) AVBeatRange loopRange;






// @property (nonatomic,getter=isLoopingEnabled) BOOL loopingEnabled;

typedef NSInteger AVMusicTrackLoopCount; enum {
 AVMusicTrackLoopCountForever = -1
} __attribute__((availability(ios,introduced=8_0)));







// @property (nonatomic) NSInteger numberOfLoops;






// @property (nonatomic) AVMusicTimeStamp offsetTime;




// @property (nonatomic,getter=isMuted) BOOL muted;




// @property (nonatomic,getter=isSoloed) BOOL soloed;
// @property (nonatomic) AVMusicTimeStamp lengthInBeats;
// @property (nonatomic) NSTimeInterval lengthInSeconds;
// @property (nonatomic, readonly) NSUInteger timeResolution;

/* @end */

#pragma clang assume_nonnull end




#pragma clang assume_nonnull begin


extern "C" NSString * const AVAudioUnitTypeOutput __attribute__((availability(ios,introduced=9_0)));
extern "C" NSString * const AVAudioUnitTypeMusicDevice __attribute__((availability(ios,introduced=9_0)));
extern "C" NSString * const AVAudioUnitTypeMusicEffect __attribute__((availability(ios,introduced=9_0)));
extern "C" NSString * const AVAudioUnitTypeFormatConverter __attribute__((availability(ios,introduced=9_0)));
extern "C" NSString * const AVAudioUnitTypeEffect __attribute__((availability(ios,introduced=9_0)));
extern "C" NSString * const AVAudioUnitTypeMixer __attribute__((availability(ios,introduced=9_0)));
extern "C" NSString * const AVAudioUnitTypePanner __attribute__((availability(ios,introduced=9_0)));
extern "C" NSString * const AVAudioUnitTypeGenerator __attribute__((availability(ios,introduced=9_0)));
extern "C" NSString * const AVAudioUnitTypeOfflineEffect __attribute__((availability(ios,introduced=9_0)));
extern "C" NSString * const AVAudioUnitTypeMIDIProcessor __attribute__((availability(ios,introduced=9_0)));


extern "C" NSString * const AVAudioUnitManufacturerNameApple __attribute__((availability(ios,introduced=9_0)));
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_AVAudioUnitComponent
#define _REWRITER_typedef_AVAudioUnitComponent
typedef struct objc_object AVAudioUnitComponent;
typedef struct {} _objc_exc_AVAudioUnitComponent;
#endif

struct AVAudioUnitComponent_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_impl;
};




// @property (nonatomic, readonly) NSString *name;




// @property (nonatomic, readonly) NSString *typeName;




// @property (nonatomic, readonly) NSString *localizedTypeName;




// @property (nonatomic, readonly) NSString *manufacturerName;




// @property (nonatomic, readonly) NSUInteger version;




// @property (nonatomic, readonly) NSString *versionString;




// @property (nonatomic, readonly, nullable) NSURL *componentURL __attribute__((availability(ios,introduced=NA,deprecated=NA,message="" )));




// @property (nonatomic, readonly) NSArray<NSNumber *> *availableArchitectures __attribute__((availability(ios,introduced=NA)));





// @property (nonatomic, readonly, getter=isSandboxSafe) BOOL sandboxSafe;




// @property (nonatomic, readonly) BOOL hasMIDIInput;




// @property (nonatomic, readonly) BOOL hasMIDIOutput;





// @property (nonatomic, readonly) AudioComponent audioComponent;





// @property (copy) NSArray<NSString *> *userTagNames __attribute__((availability(ios,introduced=NA)));




// @property (nonatomic, readonly) NSArray<NSString *> *allTagNames;





// @property (nonatomic, readonly) AudioComponentDescription audioComponentDescription;






// @property (nonatomic, readonly, nullable) NSURL *iconURL __attribute__((availability(ios,introduced=NA)));
// @property (nonatomic, readonly) BOOL passesAUVal __attribute__((availability(ios,introduced=NA)));




// @property (nonatomic, readonly) BOOL hasCustomView __attribute__((availability(ios,introduced=NA)));





// @property (nonatomic, readonly) NSDictionary<NSString *, id> *configurationDictionary __attribute__((availability(ios,introduced=NA)));




// - (BOOL)supportsNumberInputChannels:(NSInteger)numInputChannels outputChannels:(NSInteger)numOutputChannels __attribute__((availability(ios,introduced=NA)));

/* @end */






extern "C" NSString * const AVAudioUnitComponentTagsDidChangeNotification __attribute__((availability(ios,introduced=9_0)));
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_AVAudioUnitComponentManager
#define _REWRITER_typedef_AVAudioUnitComponentManager
typedef struct objc_object AVAudioUnitComponentManager;
typedef struct {} _objc_exc_AVAudioUnitComponentManager;
#endif

struct AVAudioUnitComponentManager_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_impl;
};






// @property (nonatomic, readonly) NSArray<NSString *> *tagNames;





// @property (nonatomic, readonly) NSArray<NSString *> *standardLocalizedTagNames;


// + (instancetype)sharedAudioUnitComponentManager;
// - (NSArray<AVAudioUnitComponent *> *)componentsMatchingPredicate:(NSPredicate *)predicate;
// - (NSArray<AVAudioUnitComponent *> *)componentsPassingTest:(BOOL(^)(AVAudioUnitComponent *comp, BOOL *stop))testHandler;
// - (NSArray<AVAudioUnitComponent *> *)componentsMatchingDescription:(AudioComponentDescription)desc;


/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_AVAudioUnitDelay
#define _REWRITER_typedef_AVAudioUnitDelay
typedef struct objc_object AVAudioUnitDelay;
typedef struct {} _objc_exc_AVAudioUnitDelay;
#endif

struct AVAudioUnitDelay_IMPL {
	struct AVAudioUnitEffect_IMPL AVAudioUnitEffect_IVARS;
};

// @property (nonatomic) NSTimeInterval delayTime;
// @property (nonatomic) float feedback;
// @property (nonatomic) float lowPassCutoff;
// @property (nonatomic) float wetDryMix;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

typedef NSInteger AVAudioUnitDistortionPreset; enum {
    AVAudioUnitDistortionPresetDrumsBitBrush = 0,
    AVAudioUnitDistortionPresetDrumsBufferBeats = 1,
    AVAudioUnitDistortionPresetDrumsLoFi = 2,
    AVAudioUnitDistortionPresetMultiBrokenSpeaker = 3,
    AVAudioUnitDistortionPresetMultiCellphoneConcert = 4,
    AVAudioUnitDistortionPresetMultiDecimated1 = 5,
    AVAudioUnitDistortionPresetMultiDecimated2 = 6,
    AVAudioUnitDistortionPresetMultiDecimated3 = 7,
    AVAudioUnitDistortionPresetMultiDecimated4 = 8,
    AVAudioUnitDistortionPresetMultiDistortedFunk = 9,
    AVAudioUnitDistortionPresetMultiDistortedCubed = 10,
    AVAudioUnitDistortionPresetMultiDistortedSquared = 11,
    AVAudioUnitDistortionPresetMultiEcho1 = 12,
    AVAudioUnitDistortionPresetMultiEcho2 = 13,
    AVAudioUnitDistortionPresetMultiEchoTight1 = 14,
    AVAudioUnitDistortionPresetMultiEchoTight2 = 15,
    AVAudioUnitDistortionPresetMultiEverythingIsBroken = 16,
    AVAudioUnitDistortionPresetSpeechAlienChatter = 17,
    AVAudioUnitDistortionPresetSpeechCosmicInterference = 18,
    AVAudioUnitDistortionPresetSpeechGoldenPi = 19,
    AVAudioUnitDistortionPresetSpeechRadioTower = 20,
    AVAudioUnitDistortionPresetSpeechWaves = 21
} __attribute__((availability(ios,introduced=8_0)));





__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_AVAudioUnitDistortion
#define _REWRITER_typedef_AVAudioUnitDistortion
typedef struct objc_object AVAudioUnitDistortion;
typedef struct {} _objc_exc_AVAudioUnitDistortion;
#endif

struct AVAudioUnitDistortion_IMPL {
	struct AVAudioUnitEffect_IMPL AVAudioUnitEffect_IVARS;
};






// -(void)loadFactoryPreset:(AVAudioUnitDistortionPreset)preset;
// @property (nonatomic) float preGain;
// @property (nonatomic) float wetDryMix;

/* @end */

#pragma clang assume_nonnull end


#pragma clang assume_nonnull begin
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_AVAudioUnitGenerator
#define _REWRITER_typedef_AVAudioUnitGenerator
typedef struct objc_object AVAudioUnitGenerator;
typedef struct {} _objc_exc_AVAudioUnitGenerator;
#endif

struct AVAudioUnitGenerator_IMPL {
	struct AVAudioUnit_IMPL AVAudioUnit_IVARS;
};

// - (instancetype)initWithAudioComponentDescription:(AudioComponentDescription)audioComponentDescription;





// @property (nonatomic) BOOL bypass;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin








__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_AVAudioUnitMIDIInstrument
#define _REWRITER_typedef_AVAudioUnitMIDIInstrument
typedef struct objc_object AVAudioUnitMIDIInstrument;
typedef struct {} _objc_exc_AVAudioUnitMIDIInstrument;
#endif

struct AVAudioUnitMIDIInstrument_IMPL {
	struct AVAudioUnit_IMPL AVAudioUnit_IVARS;
};

// - (instancetype)initWithAudioComponentDescription:(AudioComponentDescription)description;
// - (void)startNote:(uint8_t)note withVelocity:(uint8_t)velocity onChannel:(uint8_t)channel;
// - (void)stopNote:(uint8_t)note onChannel:(uint8_t)channel;
// - (void)sendController:(uint8_t)controller withValue:(uint8_t)value onChannel:(uint8_t)channel;
// - (void)sendPitchBend:(uint16_t)pitchbend onChannel:(uint8_t)channel;
// - (void)sendPressure:(uint8_t)pressure onChannel:(uint8_t)channel;
// - (void)sendPressureForKey:(uint8_t)key withValue:(uint8_t)value onChannel:(uint8_t)channel;
// - (void)sendProgramChange:(uint8_t)program onChannel:(uint8_t)channel;
// - (void)sendProgramChange:(uint8_t)program bankMSB:(uint8_t)bankMSB bankLSB:(uint8_t)bankLSB onChannel:(uint8_t)channel;
// - (void)sendMIDIEvent:(uint8_t)midiStatus data1:(uint8_t)data1 data2:(uint8_t)data2;
// - (void)sendMIDIEvent:(uint8_t)midiStatus data1:(uint8_t)data1;







// - (void)sendMIDISysExEvent:(NSData *)midiData;

/* @end */

#pragma clang assume_nonnull end

#pragma clang assume_nonnull begin
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_AVAudioUnitSampler
#define _REWRITER_typedef_AVAudioUnitSampler
typedef struct objc_object AVAudioUnitSampler;
typedef struct {} _objc_exc_AVAudioUnitSampler;
#endif

struct AVAudioUnitSampler_IMPL {
	struct AVAudioUnitMIDIInstrument_IMPL AVAudioUnitMIDIInstrument_IVARS;
};

// - (BOOL)loadSoundBankInstrumentAtURL:(NSURL *)bankURL program:(uint8_t)program bankMSB:(uint8_t)bankMSB bankLSB:(uint8_t)bankLSB error:(NSError **)outError;
// - (BOOL)loadInstrumentAtURL:(NSURL *)instrumentURL error:(NSError **)outError;
// - (BOOL)loadAudioFilesAtURLs:(NSArray<NSURL *> *)audioFiles error:(NSError **)outError;







// @property (nonatomic) float stereoPan;







// @property (nonatomic) float masterGain;







// @property (nonatomic) float globalTuning;


/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_AVAudioUnitTimeEffect
#define _REWRITER_typedef_AVAudioUnitTimeEffect
typedef struct objc_object AVAudioUnitTimeEffect;
typedef struct {} _objc_exc_AVAudioUnitTimeEffect;
#endif

struct AVAudioUnitTimeEffect_IMPL {
	struct AVAudioUnit_IMPL AVAudioUnit_IVARS;
};

// - (instancetype)initWithAudioComponentDescription:(AudioComponentDescription)audioComponentDescription;





// @property (nonatomic) BOOL bypass;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin







__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_AVAudioUnitTimePitch
#define _REWRITER_typedef_AVAudioUnitTimePitch
typedef struct objc_object AVAudioUnitTimePitch;
typedef struct {} _objc_exc_AVAudioUnitTimePitch;
#endif

struct AVAudioUnitTimePitch_IMPL {
	struct AVAudioUnitTimeEffect_IMPL AVAudioUnitTimeEffect_IVARS;
};

// @property (nonatomic) float rate;
// @property (nonatomic) float pitch;
// @property (nonatomic) float overlap;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin




__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_AVAudioUnitVarispeed
#define _REWRITER_typedef_AVAudioUnitVarispeed
typedef struct objc_object AVAudioUnitVarispeed;
typedef struct {} _objc_exc_AVAudioUnitVarispeed;
#endif

struct AVAudioUnitVarispeed_IMPL {
	struct AVAudioUnitTimeEffect_IMPL AVAudioUnitTimeEffect_IVARS;
};

// @property (nonatomic) float rate;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class AVAudioTime;
#ifndef _REWRITER_typedef_AVAudioTime
#define _REWRITER_typedef_AVAudioTime
typedef struct objc_object AVAudioTime;
typedef struct {} _objc_exc_AVAudioTime;
#endif





typedef void (*AVMIDIPlayerCompletionHandler)(void);




__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_AVMIDIPlayer
#define _REWRITER_typedef_AVMIDIPlayer
typedef struct objc_object AVMIDIPlayer;
typedef struct {} _objc_exc_AVMIDIPlayer;
#endif

struct AVMIDIPlayer_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_impl;
};

// - (nullable instancetype)initWithContentsOfURL:(NSURL *)inURL soundBankURL:(NSURL * _Nullable)bankURL error:(NSError **)outError;
// - (nullable instancetype)initWithData:(NSData *)data soundBankURL:(NSURL * _Nullable)bankURL error:(NSError **)outError;
// - (void)prepareToPlay;




// - (void)play:(AVMIDIPlayerCompletionHandler _Nullable)completionHandler;




// - (void)stop;






// @property(nonatomic, readonly) NSTimeInterval duration;




// @property(nonatomic, readonly, getter=isPlaying) BOOL playing;






// @property (nonatomic) float rate;







// @property(nonatomic) NSTimeInterval currentPosition;

/* @end */

#pragma clang assume_nonnull end



// @class AVAudioSessionChannelDescription;
#ifndef _REWRITER_typedef_AVAudioSessionChannelDescription
#define _REWRITER_typedef_AVAudioSessionChannelDescription
typedef struct objc_object AVAudioSessionChannelDescription;
typedef struct {} _objc_exc_AVAudioSessionChannelDescription;
#endif


#pragma clang assume_nonnull begin

typedef NSInteger AVSpeechBoundary; enum {
    AVSpeechBoundaryImmediate,
    AVSpeechBoundaryWord
} __attribute__((availability(ios,introduced=7_0)));

typedef NSInteger AVSpeechSynthesisVoiceQuality; enum {
    AVSpeechSynthesisVoiceQualityDefault = 1,
    AVSpeechSynthesisVoiceQualityEnhanced
} __attribute__((availability(ios,introduced=9_0)));

extern "C" const float AVSpeechUtteranceMinimumSpeechRate __attribute__((availability(ios,introduced=7_0)));
extern "C" const float AVSpeechUtteranceMaximumSpeechRate __attribute__((availability(ios,introduced=7_0)));
extern "C" const float AVSpeechUtteranceDefaultSpeechRate __attribute__((availability(ios,introduced=7_0)));



extern "C" NSString *const AVSpeechSynthesisVoiceIdentifierAlex __attribute__((availability(ios,introduced=9_0)));


extern "C" NSString *const AVSpeechSynthesisIPANotationAttribute __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

// @protocol AVSpeechSynthesizerDelegate;
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0)))

#ifndef _REWRITER_typedef_AVSpeechSynthesisVoice
#define _REWRITER_typedef_AVSpeechSynthesisVoice
typedef struct objc_object AVSpeechSynthesisVoice;
typedef struct {} _objc_exc_AVSpeechSynthesisVoice;
#endif

struct AVSpeechSynthesisVoice_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// + (NSArray<AVSpeechSynthesisVoice *> *)speechVoices;
// + (NSString *)currentLanguageCode;
// + (nullable AVSpeechSynthesisVoice *)voiceWithLanguage:(nullable NSString *)languageCode;
// + (nullable AVSpeechSynthesisVoice *)voiceWithIdentifier:(NSString *)identifier __attribute__((availability(ios,introduced=9_0)));

// @property(nonatomic, readonly) NSString *language;
// @property(nonatomic, readonly) NSString *identifier __attribute__((availability(ios,introduced=9_0)));
// @property(nonatomic, readonly) NSString *name __attribute__((availability(ios,introduced=9_0)));
// @property(nonatomic, readonly) AVSpeechSynthesisVoiceQuality quality __attribute__((availability(ios,introduced=9_0)));

/* @end */

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0)))

#ifndef _REWRITER_typedef_AVSpeechUtterance
#define _REWRITER_typedef_AVSpeechUtterance
typedef struct objc_object AVSpeechUtterance;
typedef struct {} _objc_exc_AVSpeechUtterance;
#endif

struct AVSpeechUtterance_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// + (instancetype)speechUtteranceWithString:(NSString *)string;
// + (instancetype)speechUtteranceWithAttributedString:(NSAttributedString *)string __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

// - (instancetype)initWithString:(NSString *)string;
// - (instancetype)initWithAttributedString:(NSAttributedString *)string __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));


// @property(nonatomic, retain, nullable) AVSpeechSynthesisVoice *voice;

// @property(nonatomic, readonly) NSString *speechString;
// @property(nonatomic, readonly) NSAttributedString *attributedSpeechString __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));



// @property(nonatomic) float rate;
// @property(nonatomic) float pitchMultiplier;
// @property(nonatomic) float volume;

// @property(nonatomic) NSTimeInterval preUtteranceDelay;
// @property(nonatomic) NSTimeInterval postUtteranceDelay;


/* @end */

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0)))

#ifndef _REWRITER_typedef_AVSpeechSynthesizer
#define _REWRITER_typedef_AVSpeechSynthesizer
typedef struct objc_object AVSpeechSynthesizer;
typedef struct {} _objc_exc_AVSpeechSynthesizer;
#endif

struct AVSpeechSynthesizer_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property(nonatomic, weak, nullable) id<AVSpeechSynthesizerDelegate> delegate;

// @property(nonatomic, readonly, getter=isSpeaking) BOOL speaking;
// @property(nonatomic, readonly, getter=isPaused) BOOL paused;



// - (void)speakUtterance:(AVSpeechUtterance *)utterance;




// - (BOOL)stopSpeakingAtBoundary:(AVSpeechBoundary)boundary;
// - (BOOL)pauseSpeakingAtBoundary:(AVSpeechBoundary)boundary;
// - (BOOL)continueSpeaking;




// @property(nonatomic, retain, nullable) NSArray<AVAudioSessionChannelDescription *> *outputChannels __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) __attribute__((availability(tvos,introduced=10.0)));

/* @end */







// @protocol AVSpeechSynthesizerDelegate <NSObject>

/* @optional */
// - (void)speechSynthesizer:(AVSpeechSynthesizer *)synthesizer didStartSpeechUtterance:(AVSpeechUtterance *)utterance;
// - (void)speechSynthesizer:(AVSpeechSynthesizer *)synthesizer didFinishSpeechUtterance:(AVSpeechUtterance *)utterance;
// - (void)speechSynthesizer:(AVSpeechSynthesizer *)synthesizer didPauseSpeechUtterance:(AVSpeechUtterance *)utterance;
// - (void)speechSynthesizer:(AVSpeechSynthesizer *)synthesizer didContinueSpeechUtterance:(AVSpeechUtterance *)utterance;
// - (void)speechSynthesizer:(AVSpeechSynthesizer *)synthesizer didCancelSpeechUtterance:(AVSpeechUtterance *)utterance;

// - (void)speechSynthesizer:(AVSpeechSynthesizer *)synthesizer willSpeakRangeOfSpeechString:(NSRange)characterRange utterance:(AVSpeechUtterance *)utterance;
/* @end */

#pragma clang assume_nonnull end






typedef NSString * AVMetadataIdentifier __attribute__((swift_wrapper(struct)));


extern "C" AVMetadataIdentifier const AVMetadataCommonIdentifierTitle __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataCommonIdentifierCreator __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataCommonIdentifierSubject __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataCommonIdentifierDescription __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataCommonIdentifierPublisher __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataCommonIdentifierContributor __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataCommonIdentifierCreationDate __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataCommonIdentifierLastModifiedDate __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataCommonIdentifierType __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataCommonIdentifierFormat __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataCommonIdentifierAssetIdentifier __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataCommonIdentifierSource __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataCommonIdentifierLanguage __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataCommonIdentifierRelation __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataCommonIdentifierLocation __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataCommonIdentifierCopyrights __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataCommonIdentifierAlbumName __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataCommonIdentifierAuthor __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataCommonIdentifierArtist __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataCommonIdentifierArtwork __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataCommonIdentifierMake __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataCommonIdentifierModel __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataCommonIdentifierSoftware __attribute__((availability(ios,introduced=8_0)));


extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeUserDataAlbum __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeUserDataArranger __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeUserDataArtist __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeUserDataAuthor __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeUserDataChapter __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeUserDataComment __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeUserDataComposer __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeUserDataCopyright __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeUserDataCreationDate __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeUserDataDescription __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeUserDataDirector __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeUserDataDisclaimer __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeUserDataEncodedBy __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeUserDataFullName __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeUserDataGenre __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeUserDataHostComputer __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeUserDataInformation __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeUserDataKeywords __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeUserDataMake __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeUserDataModel __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeUserDataOriginalArtist __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeUserDataOriginalFormat __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeUserDataOriginalSource __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeUserDataPerformers __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeUserDataProducer __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeUserDataPublisher __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeUserDataProduct __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeUserDataSoftware __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeUserDataSpecialPlaybackRequirements __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeUserDataTrack __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeUserDataWarning __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeUserDataWriter __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeUserDataURLLink __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeUserDataLocationISO6709 __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeUserDataTrackName __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeUserDataCredits __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeUserDataPhonogramRights __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeUserDataTaggedCharacteristic __attribute__((availability(ios,introduced=8_0)));


extern "C" AVMetadataIdentifier const AVMetadataIdentifierISOUserDataCopyright __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierISOUserDataDate __attribute__((availability(ios,introduced=10_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierISOUserDataTaggedCharacteristic __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifier3GPUserDataCopyright __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifier3GPUserDataAuthor __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifier3GPUserDataPerformer __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifier3GPUserDataGenre __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifier3GPUserDataRecordingYear __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifier3GPUserDataLocation __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifier3GPUserDataTitle __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifier3GPUserDataDescription __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifier3GPUserDataCollection __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifier3GPUserDataUserRating __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifier3GPUserDataThumbnail __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifier3GPUserDataAlbumAndTrack __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifier3GPUserDataKeywordList __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifier3GPUserDataMediaClassification __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifier3GPUserDataMediaRating __attribute__((availability(ios,introduced=8_0)));


extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeMetadataAuthor __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeMetadataComment __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeMetadataCopyright __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeMetadataCreationDate __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeMetadataDirector __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeMetadataDisplayName __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeMetadataInformation __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeMetadataKeywords __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeMetadataProducer __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeMetadataPublisher __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeMetadataAlbum __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeMetadataArtist __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeMetadataArtwork __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeMetadataDescription __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeMetadataSoftware __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeMetadataYear __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeMetadataGenre __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeMetadataiXML __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeMetadataLocationISO6709 __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeMetadataMake __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeMetadataModel __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeMetadataArranger __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeMetadataEncodedBy __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeMetadataOriginalArtist __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeMetadataPerformer __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeMetadataComposer __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeMetadataCredits __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeMetadataPhonogramRights __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeMetadataCameraIdentifier __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeMetadataCameraFrameReadoutTime __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeMetadataTitle __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeMetadataCollectionUser __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeMetadataRatingUser __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeMetadataLocationName __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeMetadataLocationBody __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeMetadataLocationNote __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeMetadataLocationRole __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeMetadataLocationDate __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeMetadataDirectionFacing __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeMetadataDirectionMotion __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeMetadataPreferredAffineTransform __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeMetadataDetectedFace __attribute__((availability(ios,introduced=9_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeMetadataVideoOrientation __attribute__((availability(ios,introduced=9_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierQuickTimeMetadataContentIdentifier __attribute__((availability(ios,introduced=9_0)));


extern "C" AVMetadataIdentifier const AVMetadataIdentifieriTunesMetadataAlbum __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifieriTunesMetadataArtist __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifieriTunesMetadataUserComment __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifieriTunesMetadataCoverArt __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifieriTunesMetadataCopyright __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifieriTunesMetadataReleaseDate __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifieriTunesMetadataEncodedBy __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifieriTunesMetadataPredefinedGenre __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifieriTunesMetadataUserGenre __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifieriTunesMetadataSongName __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifieriTunesMetadataTrackSubTitle __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifieriTunesMetadataEncodingTool __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifieriTunesMetadataComposer __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifieriTunesMetadataAlbumArtist __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifieriTunesMetadataAccountKind __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifieriTunesMetadataAppleID __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifieriTunesMetadataArtistID __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifieriTunesMetadataSongID __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifieriTunesMetadataDiscCompilation __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifieriTunesMetadataDiscNumber __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifieriTunesMetadataGenreID __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifieriTunesMetadataGrouping __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifieriTunesMetadataPlaylistID __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifieriTunesMetadataContentRating __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifieriTunesMetadataBeatsPerMin __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifieriTunesMetadataTrackNumber __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifieriTunesMetadataArtDirector __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifieriTunesMetadataArranger __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifieriTunesMetadataAuthor __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifieriTunesMetadataLyrics __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifieriTunesMetadataAcknowledgement __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifieriTunesMetadataConductor __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifieriTunesMetadataDescription __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifieriTunesMetadataDirector __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifieriTunesMetadataEQ __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifieriTunesMetadataLinerNotes __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifieriTunesMetadataRecordCompany __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifieriTunesMetadataOriginalArtist __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifieriTunesMetadataPhonogramRights __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifieriTunesMetadataProducer __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifieriTunesMetadataPerformer __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifieriTunesMetadataPublisher __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifieriTunesMetadataSoundEngineer __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifieriTunesMetadataSoloist __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifieriTunesMetadataCredits __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifieriTunesMetadataThanks __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifieriTunesMetadataOnlineExtras __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifieriTunesMetadataExecProducer __attribute__((availability(ios,introduced=8_0)));


extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataAudioEncryption __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataAttachedPicture __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataAudioSeekPointIndex __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataComments __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataCommercial __attribute__((availability(ios,introduced=9_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataCommerical __attribute__((availability(ios,introduced=8_0,deprecated=9_0,message="" )));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataEncryption __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataEqualization __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataEqualization2 __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataEventTimingCodes __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataGeneralEncapsulatedObject __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataGroupIdentifier __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataInvolvedPeopleList_v23 __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataLink __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataMusicCDIdentifier __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataMPEGLocationLookupTable __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataOwnership __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataPrivate __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataPlayCounter __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataPopularimeter __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataPositionSynchronization __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataRecommendedBufferSize __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataRelativeVolumeAdjustment __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataRelativeVolumeAdjustment2 __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataReverb __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataSeek __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataSignature __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataSynchronizedLyric __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataSynchronizedTempoCodes __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataAlbumTitle __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataBeatsPerMinute __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataComposer __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataContentType __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataCopyright __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataDate __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataEncodingTime __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataPlaylistDelay __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataOriginalReleaseTime __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataRecordingTime __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataReleaseTime __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataTaggingTime __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataEncodedBy __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataLyricist __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataFileType __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataTime __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataInvolvedPeopleList_v24 __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataContentGroupDescription __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataTitleDescription __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataSubTitle __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataInitialKey __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataLanguage __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataLength __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataMusicianCreditsList __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataMediaType __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataMood __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataOriginalAlbumTitle __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataOriginalFilename __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataOriginalLyricist __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataOriginalArtist __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataOriginalReleaseYear __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataFileOwner __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataLeadPerformer __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataBand __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataConductor __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataModifiedBy __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataPartOfASet __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataProducedNotice __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataPublisher __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataTrackNumber __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataRecordingDates __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataInternetRadioStationName __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataInternetRadioStationOwner __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataSize __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataAlbumSortOrder __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataPerformerSortOrder __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataTitleSortOrder __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataInternationalStandardRecordingCode __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataEncodedWith __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataSetSubtitle __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataYear __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataUserText __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataUniqueFileIdentifier __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataTermsOfUse __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataUnsynchronizedLyric __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataCommercialInformation __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataCopyrightInformation __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataOfficialAudioFileWebpage __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataOfficialArtistWebpage __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataOfficialAudioSourceWebpage __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataOfficialInternetRadioStationHomepage __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataPayment __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataOfficialPublisherWebpage __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierID3MetadataUserURL __attribute__((availability(ios,introduced=8_0)));

extern "C" AVMetadataIdentifier const AVMetadataIdentifierIcyMetadataStreamTitle __attribute__((availability(ios,introduced=8_0)));
extern "C" AVMetadataIdentifier const AVMetadataIdentifierIcyMetadataStreamURL __attribute__((availability(ios,introduced=8_0)));
#pragma clang assume_nonnull begin

// @class AVMetadataItemFilter;
#ifndef _REWRITER_typedef_AVMetadataItemFilter
#define _REWRITER_typedef_AVMetadataItemFilter
typedef struct objc_object AVMetadataItemFilter;
typedef struct {} _objc_exc_AVMetadataItemFilter;
#endif

// @class AVMetadataItemInternal;
#ifndef _REWRITER_typedef_AVMetadataItemInternal
#define _REWRITER_typedef_AVMetadataItemInternal
typedef struct objc_object AVMetadataItemInternal;
typedef struct {} _objc_exc_AVMetadataItemInternal;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0)))

#ifndef _REWRITER_typedef_AVMetadataItem
#define _REWRITER_typedef_AVMetadataItem
typedef struct objc_object AVMetadataItem;
typedef struct {} _objc_exc_AVMetadataItem;
#endif

struct AVMetadataItem_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVMetadataItemInternal *__strong _priv;
};



// @property (nonatomic, readonly, copy, nullable) AVMetadataIdentifier identifier __attribute__((availability(ios,introduced=8_0)));


// @property (nonatomic, readonly, copy, nullable) NSString *extendedLanguageTag __attribute__((availability(ios,introduced=8_0)));


// @property (nonatomic, readonly, copy, nullable) NSLocale *locale;


// @property (nonatomic, readonly) CMTime time;


// @property (nonatomic, readonly) CMTime duration __attribute__((availability(ios,introduced=4_2)));


// @property (nonatomic, readonly, copy, nullable) NSString *dataType __attribute__((availability(ios,introduced=8_0)));


// @property (nonatomic, readonly, copy, nullable) id<NSObject, NSCopying> value;


// @property (nonatomic, readonly, copy, nullable) NSDictionary<AVMetadataExtraAttributeKey, id> *extraAttributes;

/* @end */



// @interface AVMetadataItem (AVMetadataItemDateRepresentation)


// @property (nonatomic, readonly, copy, nullable) NSDate *startDate __attribute__((availability(ios,introduced=9_0)));

/* @end */



// @interface AVMetadataItem (AVMetadataItemTypeCoercion)


// @property (nonatomic, readonly, nullable) NSString *stringValue;


// @property (nonatomic, readonly, nullable) NSNumber *numberValue;


// @property (nonatomic, readonly, nullable) NSDate *dateValue;


// @property (nonatomic, readonly, nullable) NSData *dataValue;

/* @end */



// @interface AVMetadataItem (AVAsynchronousKeyValueLoading)



// - (AVKeyValueStatus)statusOfValueForKey:(NSString *)key error:(NSError * _Nullable * _Nullable)outError __attribute__((availability(ios,introduced=4_2)));

// - (void)loadValuesAsynchronouslyForKeys:(NSArray<NSString *> *)keys completionHandler:(nullable void (^)(void))handler __attribute__((availability(ios,introduced=4_2)));

/* @end */



// @interface AVMetadataItem (AVMetadataItemArrayFiltering)
// + (NSArray<AVMetadataItem *> *)metadataItemsFromArray:(NSArray<AVMetadataItem *> *)metadataItems filteredAndSortedAccordingToPreferredLanguages:(NSArray<NSString *> *)preferredLanguages __attribute__((availability(ios,introduced=6_0)));
// + (NSArray<AVMetadataItem *> *)metadataItemsFromArray:(NSArray<AVMetadataItem *> *)metadataItems filteredByIdentifier:(AVMetadataIdentifier)identifier __attribute__((availability(ios,introduced=8_0)));
// + (NSArray<AVMetadataItem *> *)metadataItemsFromArray:(NSArray<AVMetadataItem *> *)metadataItems filteredByMetadataItemFilter:(AVMetadataItemFilter *)metadataItemFilter __attribute__((availability(ios,introduced=7_0)));

/* @end */


// @interface AVMetadataItem (AVMetadataItemKeyAndKeyspace)
// + (nullable AVMetadataIdentifier)identifierForKey:(id)key keySpace:(AVMetadataKeySpace)keySpace __attribute__((availability(ios,introduced=8_0)));


// + (nullable AVMetadataKeySpace)keySpaceForIdentifier:(AVMetadataIdentifier)identifier __attribute__((availability(ios,introduced=8_0)));


// + (nullable id)keyForIdentifier:(AVMetadataIdentifier)identifier __attribute__((availability(ios,introduced=8_0)));


// @property (nonatomic, readonly, copy, nullable) id<NSObject, NSCopying> key;


// @property (nonatomic, readonly, copy, nullable) AVMetadataKey commonKey;



// @property (nonatomic, readonly, copy, nullable) AVMetadataKeySpace keySpace;

/* @end */

// @class AVMutableMetadataItemInternal;
#ifndef _REWRITER_typedef_AVMutableMetadataItemInternal
#define _REWRITER_typedef_AVMutableMetadataItemInternal
typedef struct objc_object AVMutableMetadataItemInternal;
typedef struct {} _objc_exc_AVMutableMetadataItemInternal;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0)))

#ifndef _REWRITER_typedef_AVMutableMetadataItem
#define _REWRITER_typedef_AVMutableMetadataItem
typedef struct objc_object AVMutableMetadataItem;
typedef struct {} _objc_exc_AVMutableMetadataItem;
#endif

struct AVMutableMetadataItem_IMPL {
	struct AVMetadataItem_IMPL AVMetadataItem_IVARS;
	AVMutableMetadataItemInternal *__strong _mutablePriv;
};



// @property (nonatomic, readwrite, copy, nullable) AVMetadataIdentifier identifier __attribute__((availability(ios,introduced=8_0)));


// @property (nonatomic, readwrite, copy, nullable) NSString *extendedLanguageTag __attribute__((availability(ios,introduced=8_0)));


// @property (nonatomic, readwrite, copy, nullable) NSLocale *locale;


// @property (nonatomic, readwrite) CMTime time;


// @property (nonatomic, readwrite) CMTime duration __attribute__((availability(ios,introduced=4_2)));


// @property (nonatomic, readwrite, copy, nullable) NSString *dataType __attribute__((availability(ios,introduced=8_0)));


// @property (nonatomic, readwrite, copy, nullable) id<NSObject, NSCopying> value;


// @property (nonatomic, readwrite, copy, nullable) NSDictionary<AVMetadataExtraAttributeKey, id> *extraAttributes;





// + (AVMutableMetadataItem *)metadataItem;

/* @end */


// @interface AVMutableMetadataItem (AVMutableMetadataItemDateRepresentation)


// @property (nonatomic, readwrite, copy, nullable) NSDate *startDate __attribute__((availability(ios,introduced=9_0)));

/* @end */


// @interface AVMutableMetadataItem (AVMutableMetadataItemKeyAndKeyspace)


// @property (nonatomic, readwrite, copy, nullable) AVMetadataKeySpace keySpace;


// @property (nonatomic, readwrite, copy, nullable) id<NSObject, NSCopying> key;

/* @end */


// @class AVMetadataItemValueRequest;
#ifndef _REWRITER_typedef_AVMetadataItemValueRequest
#define _REWRITER_typedef_AVMetadataItemValueRequest
typedef struct objc_object AVMetadataItemValueRequest;
typedef struct {} _objc_exc_AVMetadataItemValueRequest;
#endif


// @interface AVMetadataItem (AVMetadataItemLazyValueLoading)
// + (AVMetadataItem *)metadataItemWithPropertiesOfMetadataItem:(AVMetadataItem *)metadataItem valueLoadingHandler:(void (^)(AVMetadataItemValueRequest *valueRequest))handler __attribute__((availability(ios,introduced=9_0)));

/* @end */


// @class AVMetadataItemValueRequestInternal;
#ifndef _REWRITER_typedef_AVMetadataItemValueRequestInternal
#define _REWRITER_typedef_AVMetadataItemValueRequestInternal
typedef struct objc_object AVMetadataItemValueRequestInternal;
typedef struct {} _objc_exc_AVMetadataItemValueRequestInternal;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0)))

#ifndef _REWRITER_typedef_AVMetadataItemValueRequest
#define _REWRITER_typedef_AVMetadataItemValueRequest
typedef struct objc_object AVMetadataItemValueRequest;
typedef struct {} _objc_exc_AVMetadataItemValueRequest;
#endif

struct AVMetadataItemValueRequest_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVMetadataItemValueRequestInternal *__strong _valueRequest;
};



// @property (readonly, weak) AVMetadataItem *metadataItem;







// - (void)respondWithValue:(id<NSObject, NSCopying>)value;







// - (void)respondWithError:(NSError *)error;

/* @end */

// @class AVMetadataItemFilterInternal;
#ifndef _REWRITER_typedef_AVMetadataItemFilterInternal
#define _REWRITER_typedef_AVMetadataItemFilterInternal
typedef struct objc_object AVMetadataItemFilterInternal;
typedef struct {} _objc_exc_AVMetadataItemFilterInternal;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0)))

#ifndef _REWRITER_typedef_AVMetadataItemFilter
#define _REWRITER_typedef_AVMetadataItemFilter
typedef struct objc_object AVMetadataItemFilter;
typedef struct {} _objc_exc_AVMetadataItemFilter;
#endif

struct AVMetadataItemFilter_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVMetadataItemFilterInternal *__strong _itemFilterInternal;
};



// + (AVMetadataItemFilter *)metadataItemFilterForSharing;

/* @end */


// @interface AVMetadataItem (AVMetadataItemArrayFilteringDeprecable)





// + (NSArray<AVMetadataItem *> *)metadataItemsFromArray:(NSArray<AVMetadataItem *> *)metadataItems withLocale:(NSLocale *)locale;





// + (NSArray<AVMetadataItem *> *)metadataItemsFromArray:(NSArray<AVMetadataItem *> *)metadataItems withKey:(nullable id)key keySpace:(nullable AVMetadataKeySpace)keySpace;

/* @end */

#pragma clang assume_nonnull end





#pragma clang assume_nonnull begin

typedef NSString * AVOutputSettingsPreset __attribute__((swift_wrapper(enum)));






extern "C" AVOutputSettingsPreset const AVOutputSettingsPreset640x480 __attribute__((availability(ios,introduced=7_0)));
extern "C" AVOutputSettingsPreset const AVOutputSettingsPreset960x540 __attribute__((availability(ios,introduced=7_0)));
extern "C" AVOutputSettingsPreset const AVOutputSettingsPreset1280x720 __attribute__((availability(ios,introduced=7_0)));
extern "C" AVOutputSettingsPreset const AVOutputSettingsPreset1920x1080 __attribute__((availability(ios,introduced=7_0)));
extern "C" AVOutputSettingsPreset const AVOutputSettingsPreset3840x2160 __attribute__((availability(ios,introduced=9_0)));
extern "C" AVOutputSettingsPreset const AVOutputSettingsPresetHEVC1920x1080 __attribute__((availability(ios,introduced=11_0)));
extern "C" AVOutputSettingsPreset const AVOutputSettingsPresetHEVC3840x2160 __attribute__((availability(ios,introduced=11_0)));

// @class AVOutputSettingsAssistantInternal;
#ifndef _REWRITER_typedef_AVOutputSettingsAssistantInternal
#define _REWRITER_typedef_AVOutputSettingsAssistantInternal
typedef struct objc_object AVOutputSettingsAssistantInternal;
typedef struct {} _objc_exc_AVOutputSettingsAssistantInternal;
#endif

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0)))

#ifndef _REWRITER_typedef_AVOutputSettingsAssistant
#define _REWRITER_typedef_AVOutputSettingsAssistant
typedef struct objc_object AVOutputSettingsAssistant;
typedef struct {} _objc_exc_AVOutputSettingsAssistant;
#endif

struct AVOutputSettingsAssistant_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVOutputSettingsAssistantInternal *__strong _internal;
};

// - (instancetype)init __attribute__((unavailable)); // + (instancetype)new __attribute__((unavailable));
// + (NSArray<AVOutputSettingsPreset> *)availableOutputSettingsPresets __attribute__((availability(ios,introduced=7_0)));
// + (nullable instancetype)outputSettingsAssistantWithPreset:(AVOutputSettingsPreset)presetIdentifier;
// @property (nonatomic, readonly, nullable) NSDictionary<NSString *, id> *audioSettings;
// @property (nonatomic, readonly, nullable) NSDictionary<NSString *, id> *videoSettings;
// @property (nonatomic, readonly) AVFileType outputFileType;

/* @end */




// @interface AVOutputSettingsAssistant (AVOutputSettingsAssistant_SourceInformation)
// @property (nonatomic, retain, nullable) __attribute__((NSObject)) CMAudioFormatDescriptionRef sourceAudioFormat;
// @property (nonatomic, retain, nullable) __attribute__((NSObject)) CMVideoFormatDescriptionRef sourceVideoFormat;
// @property (nonatomic) CMTime sourceVideoAverageFrameDuration;
// @property (nonatomic) CMTime sourceVideoMinFrameDuration __attribute__((availability(ios,introduced=7_0)));

/* @end */

#pragma clang assume_nonnull end
// @class AVPlayerItem;
#ifndef _REWRITER_typedef_AVPlayerItem
#define _REWRITER_typedef_AVPlayerItem
typedef struct objc_object AVPlayerItem;
typedef struct {} _objc_exc_AVPlayerItem;
#endif

// @class AVPlayerInternal;
#ifndef _REWRITER_typedef_AVPlayerInternal
#define _REWRITER_typedef_AVPlayerInternal
typedef struct objc_object AVPlayerInternal;
typedef struct {} _objc_exc_AVPlayerInternal;
#endif


#pragma clang assume_nonnull begin
typedef NSInteger AVPlayerStatus; enum {
 AVPlayerStatusUnknown,
 AVPlayerStatusReadyToPlay,
 AVPlayerStatusFailed
};

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0)))

#ifndef _REWRITER_typedef_AVPlayer
#define _REWRITER_typedef_AVPlayer
typedef struct objc_object AVPlayer;
typedef struct {} _objc_exc_AVPlayer;
#endif

struct AVPlayer_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVPlayerInternal *__strong _player;
};

// + (instancetype)playerWithURL:(NSURL *)URL;
// + (instancetype)playerWithPlayerItem:(nullable AVPlayerItem *)item;
// - (instancetype)initWithURL:(NSURL *)URL;
// - (instancetype)initWithPlayerItem:(nullable AVPlayerItem *)item;
// @property (nonatomic, readonly) AVPlayerStatus status;
// @property (nonatomic, readonly, nullable) NSError *error;

/* @end */



// @interface AVPlayer (AVPlayerPlaybackControl)
// @property (nonatomic) float rate;






// - (void)play;






// - (void)pause;
typedef NSInteger AVPlayerTimeControlStatus; enum {
 AVPlayerTimeControlStatusPaused,
 AVPlayerTimeControlStatusWaitingToPlayAtSpecifiedRate,
 AVPlayerTimeControlStatusPlaying
} __attribute__((availability(ios,introduced=10_0)));
// @property (nonatomic, readonly) AVPlayerTimeControlStatus timeControlStatus __attribute__((availability(ios,introduced=10_0)));






typedef NSString * AVPlayerWaitingReason __attribute__((swift_wrapper(enum)));
extern "C" AVPlayerWaitingReason const AVPlayerWaitingToMinimizeStallsReason __attribute__((availability(ios,introduced=10_0)));
extern "C" AVPlayerWaitingReason const AVPlayerWaitingWhileEvaluatingBufferingRateReason __attribute__((availability(ios,introduced=10_0)));







extern "C" AVPlayerWaitingReason const AVPlayerWaitingWithNoItemToPlayReason __attribute__((availability(ios,introduced=10_0)));
// @property (nonatomic, readonly, nullable) AVPlayerWaitingReason reasonForWaitingToPlay __attribute__((availability(ios,introduced=10_0)));
// - (void)playImmediatelyAtRate:(float)rate __attribute__((availability(ios,introduced=10_0)));

/* @end */



// @interface AVPlayer (AVPlayerItemControl)


// @property (nonatomic, readonly, nullable) AVPlayerItem *currentItem;
// - (void)replaceCurrentItemWithPlayerItem:(nullable AVPlayerItem *)item;
typedef NSInteger AVPlayerActionAtItemEnd; enum
{
    AVPlayerActionAtItemEndAdvance = 0,
 AVPlayerActionAtItemEndPause = 1,
 AVPlayerActionAtItemEndNone = 2,
};


// @property (nonatomic) AVPlayerActionAtItemEnd actionAtItemEnd;

/* @end */



// @interface AVPlayer (AVPlayerTimeControl)






// - (CMTime)currentTime;
// - (void)seekToDate:(NSDate *)date;
// - (void)seekToDate:(NSDate *)date completionHandler:(void (^)(BOOL finished))completionHandler __attribute__((availability(ios,introduced=5_0)));
// - (void)seekToTime:(CMTime)time;
// - (void)seekToTime:(CMTime)time toleranceBefore:(CMTime)toleranceBefore toleranceAfter:(CMTime)toleranceAfter;
// - (void)seekToTime:(CMTime)time completionHandler:(void (^)(BOOL finished))completionHandler __attribute__((availability(ios,introduced=5_0)));
// - (void)seekToTime:(CMTime)time toleranceBefore:(CMTime)toleranceBefore toleranceAfter:(CMTime)toleranceAfter completionHandler:(void (^)(BOOL finished))completionHandler __attribute__((availability(ios,introduced=5_0)));

/* @end */



// @interface AVPlayer (AVPlayerAdvancedRateControl)
// @property (nonatomic) BOOL automaticallyWaitsToMinimizeStalling __attribute__((availability(ios,introduced=10_0)));
// - (void)setRate:(float)rate time:(CMTime)itemTime atHostTime:(CMTime)hostClockTime __attribute__((availability(ios,introduced=6_0)));
// - (void)prerollAtRate:(float)rate completionHandler:(nullable void (^)(BOOL finished))completionHandler __attribute__((availability(ios,introduced=6_0)));






// - (void)cancelPendingPrerolls __attribute__((availability(ios,introduced=6_0)));


// @property (nonatomic, retain, nullable) __attribute__((NSObject)) CMClockRef masterClock __attribute__((availability(ios,introduced=6_0)));

/* @end */



// @interface AVPlayer (AVPlayerTimeObservation)
// - (id)addPeriodicTimeObserverForInterval:(CMTime)interval queue:(nullable dispatch_queue_t)queue usingBlock:(void (^)(CMTime time))block;
// - (id)addBoundaryTimeObserverForTimes:(NSArray<NSValue *> *)times queue:(nullable dispatch_queue_t)queue usingBlock:(void (^)(void))block;
// - (void)removeTimeObserver:(id)observer;

/* @end */



// @interface AVPlayer (AVPlayerMediaControl)





// @property (nonatomic) float volume __attribute__((availability(ios,introduced=7_0)));


// @property (nonatomic, getter=isMuted) BOOL muted __attribute__((availability(ios,introduced=7_0)));

/* @end */



// @class AVPlayerMediaSelectionCriteria;
#ifndef _REWRITER_typedef_AVPlayerMediaSelectionCriteria
#define _REWRITER_typedef_AVPlayerMediaSelectionCriteria
typedef struct objc_object AVPlayerMediaSelectionCriteria;
typedef struct {} _objc_exc_AVPlayerMediaSelectionCriteria;
#endif


// @interface AVPlayer (AVPlayerAutomaticMediaSelection)






// @property (nonatomic) BOOL appliesMediaSelectionCriteriaAutomatically __attribute__((availability(ios,introduced=7_0)));
// - (void)setMediaSelectionCriteria:(nullable AVPlayerMediaSelectionCriteria *)criteria forMediaCharacteristic:(AVMediaCharacteristic)mediaCharacteristic __attribute__((availability(ios,introduced=7_0)));







// - (nullable AVPlayerMediaSelectionCriteria *)mediaSelectionCriteriaForMediaCharacteristic:(AVMediaCharacteristic)mediaCharacteristic __attribute__((availability(ios,introduced=7_0)));

/* @end */



// @interface AVPlayer (AVPlayerAudioDeviceSupport)
// @property (nonatomic, copy, nullable) NSString *audioOutputDeviceUniqueID __attribute__((availability(ios,unavailable)));

/* @end */

// @interface AVPlayer (AVPlayerExternalPlaybackSupport)


// @property (nonatomic) BOOL allowsExternalPlayback __attribute__((availability(ios,introduced=6_0)));


// @property (nonatomic, readonly, getter=isExternalPlaybackActive) BOOL externalPlaybackActive __attribute__((availability(ios,introduced=6_0)));





// @property (nonatomic) BOOL usesExternalPlaybackWhileExternalScreenIsActive __attribute__((availability(ios,introduced=6_0)));


// @property (nonatomic, copy) AVLayerVideoGravity externalPlaybackVideoGravity __attribute__((availability(ios,introduced=6_0)));

/* @end */




// @interface AVPlayer (AVPlayerAirPlaySupport)



// @property (nonatomic) BOOL allowsAirPlayVideo __attribute__((availability(ios,introduced=5_0,deprecated=6_0,message="" )));



// @property (nonatomic, readonly, getter=isAirPlayVideoActive) BOOL airPlayVideoActive __attribute__((availability(ios,introduced=5_0,deprecated=6_0,message="" )));




// @property (nonatomic) BOOL usesAirPlayVideoWhileAirPlayScreenIsActive __attribute__((availability(ios,introduced=5_0,deprecated=6_0,message="" )));

/* @end */

// @interface AVPlayer (AVPlayerProtectedContent)
// @property (nonatomic, readonly) BOOL outputObscuredDueToInsufficientExternalProtection __attribute__((availability(ios,introduced=6_0)));

/* @end */

typedef NSInteger AVPlayerHDRMode; enum {
 AVPlayerHDRModeHLG = 0x1,
 AVPlayerHDRModeHDR10 = 0x2,
 AVPlayerHDRModeDolbyVision = 0x4,
} __attribute__((availability(ios,introduced=11.2))) __attribute__((availability(tvos,introduced=11.2))) __attribute__((availability(macos,unavailable))) __attribute__((availability(watchos,unavailable)));

// @interface AVPlayer (AVPlayerPlaybackCapabilities)
@property (class, nonatomic, readonly) AVPlayerHDRMode availableHDRModes __attribute__((availability(ios,introduced=11.2))) __attribute__((availability(tvos,introduced=11.2))) __attribute__((availability(macos,unavailable))) __attribute__((availability(watchos,unavailable)));
__attribute__((availability(ios,introduced=11.2))) __attribute__((availability(tvos,introduced=11.2))) __attribute__((availability(macos,unavailable))) __attribute__((availability(watchos,unavailable)))
extern "C" NSNotificationName const AVPlayerAvailableHDRModesDidChangeNotification;

/* @end */


// @interface AVPlayer (AVPlayerVideoDecoderGPUSupport)
// @property (nonatomic) uint64_t preferredVideoDecoderGPURegistryID __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));

/* @end */


// @interface AVPlayer (AVPlayerDeprecated)
// @property (nonatomic, getter=isClosedCaptionDisplayEnabled) BOOL closedCaptionDisplayEnabled __attribute__((availability(ios,introduced=4_0,deprecated=11_0,message="" "Allow AVPlayer to enable closed captions automatically according to user preferences by ensuring that the value of appliesMediaSelectionCriteriaAutomatically is YES.")));

/* @end */

// @class AVQueuePlayerInternal;
#ifndef _REWRITER_typedef_AVQueuePlayerInternal
#define _REWRITER_typedef_AVQueuePlayerInternal
typedef struct objc_object AVQueuePlayerInternal;
typedef struct {} _objc_exc_AVQueuePlayerInternal;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_1)))

#ifndef _REWRITER_typedef_AVQueuePlayer
#define _REWRITER_typedef_AVQueuePlayer
typedef struct objc_object AVQueuePlayer;
typedef struct {} _objc_exc_AVQueuePlayer;
#endif

struct AVQueuePlayer_IMPL {
	struct AVPlayer_IMPL AVPlayer_IVARS;
	AVQueuePlayerInternal *__strong _queuePlayer;
};

// + (instancetype)queuePlayerWithItems:(NSArray<AVPlayerItem *> *)items;
// - (AVQueuePlayer *)initWithItems:(NSArray<AVPlayerItem *> *)items;






// - (NSArray<AVPlayerItem *> *)items;






// - (void)advanceToNextItem;
// - (BOOL)canInsertItem:(AVPlayerItem *)item afterItem:(nullable AVPlayerItem *)afterItem;
// - (void)insertItem:(AVPlayerItem *)item afterItem:(nullable AVPlayerItem *)afterItem;
// - (void)removeItem:(AVPlayerItem *)item;






// - (void)removeAllItems;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin




extern "C" NSString *const AVPlayerItemTimeJumpedNotification __attribute__((availability(ios,introduced=5_0)));
extern "C" NSString *const AVPlayerItemDidPlayToEndTimeNotification __attribute__((availability(ios,introduced=4_0)));
extern "C" NSString *const AVPlayerItemFailedToPlayToEndTimeNotification __attribute__((availability(ios,introduced=4_3)));
extern "C" NSString *const AVPlayerItemPlaybackStalledNotification __attribute__((availability(ios,introduced=6_0)));
extern "C" NSString *const AVPlayerItemNewAccessLogEntryNotification __attribute__((availability(ios,introduced=6_0)));
extern "C" NSString *const AVPlayerItemNewErrorLogEntryNotification __attribute__((availability(ios,introduced=6_0)));


extern "C" NSString *const AVPlayerItemFailedToPlayToEndTimeErrorKey __attribute__((availability(ios,introduced=4_3)));
typedef NSInteger AVPlayerItemStatus; enum {
 AVPlayerItemStatusUnknown,
 AVPlayerItemStatusReadyToPlay,
 AVPlayerItemStatusFailed
};

// @class AVPlayer;
#ifndef _REWRITER_typedef_AVPlayer
#define _REWRITER_typedef_AVPlayer
typedef struct objc_object AVPlayer;
typedef struct {} _objc_exc_AVPlayer;
#endif

// @class AVAsset;
#ifndef _REWRITER_typedef_AVAsset
#define _REWRITER_typedef_AVAsset
typedef struct objc_object AVAsset;
typedef struct {} _objc_exc_AVAsset;
#endif

// @class AVAssetTrack;
#ifndef _REWRITER_typedef_AVAssetTrack
#define _REWRITER_typedef_AVAssetTrack
typedef struct objc_object AVAssetTrack;
typedef struct {} _objc_exc_AVAssetTrack;
#endif

// @class AVAudioMix;
#ifndef _REWRITER_typedef_AVAudioMix
#define _REWRITER_typedef_AVAudioMix
typedef struct objc_object AVAudioMix;
typedef struct {} _objc_exc_AVAudioMix;
#endif

// @class AVVideoComposition;
#ifndef _REWRITER_typedef_AVVideoComposition
#define _REWRITER_typedef_AVVideoComposition
typedef struct objc_object AVVideoComposition;
typedef struct {} _objc_exc_AVVideoComposition;
#endif

// @class AVMediaSelection;
#ifndef _REWRITER_typedef_AVMediaSelection
#define _REWRITER_typedef_AVMediaSelection
typedef struct objc_object AVMediaSelection;
typedef struct {} _objc_exc_AVMediaSelection;
#endif

// @class AVMediaSelectionGroup;
#ifndef _REWRITER_typedef_AVMediaSelectionGroup
#define _REWRITER_typedef_AVMediaSelectionGroup
typedef struct objc_object AVMediaSelectionGroup;
typedef struct {} _objc_exc_AVMediaSelectionGroup;
#endif

// @class AVMediaSelectionOption;
#ifndef _REWRITER_typedef_AVMediaSelectionOption
#define _REWRITER_typedef_AVMediaSelectionOption
typedef struct objc_object AVMediaSelectionOption;
typedef struct {} _objc_exc_AVMediaSelectionOption;
#endif

// @class AVPlayerItemInternal;
#ifndef _REWRITER_typedef_AVPlayerItemInternal
#define _REWRITER_typedef_AVPlayerItemInternal
typedef struct objc_object AVPlayerItemInternal;
typedef struct {} _objc_exc_AVPlayerItemInternal;
#endif

// @protocol AVVideoCompositing;

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0)))

#ifndef _REWRITER_typedef_AVPlayerItem
#define _REWRITER_typedef_AVPlayerItem
typedef struct objc_object AVPlayerItem;
typedef struct {} _objc_exc_AVPlayerItem;
#endif

struct AVPlayerItem_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVPlayerItemInternal *__strong _playerItem;
};

// - (instancetype)init __attribute__((unavailable)); // + (instancetype)new __attribute__((unavailable));
// + (instancetype)playerItemWithURL:(NSURL *)URL;
// + (instancetype)playerItemWithAsset:(AVAsset *)asset;
// + (instancetype)playerItemWithAsset:(AVAsset *)asset automaticallyLoadedAssetKeys:(nullable NSArray<NSString *> *)automaticallyLoadedAssetKeys __attribute__((availability(ios,introduced=7_0)));
// - (instancetype)initWithURL:(NSURL *)URL;
// - (instancetype)initWithAsset:(AVAsset *)asset;
// - (instancetype)initWithAsset:(AVAsset *)asset automaticallyLoadedAssetKeys:(nullable NSArray<NSString *> *)automaticallyLoadedAssetKeys __attribute__((objc_designated_initializer)) __attribute__((availability(ios,introduced=7_0)));
// @property (nonatomic, readonly) AVPlayerItemStatus status;
// @property (nonatomic, readonly, nullable) NSError *error;

/* @end */



// @class AVPlayerItemTrack;
#ifndef _REWRITER_typedef_AVPlayerItemTrack
#define _REWRITER_typedef_AVPlayerItemTrack
typedef struct objc_object AVPlayerItemTrack;
typedef struct {} _objc_exc_AVPlayerItemTrack;
#endif

// @class AVMetadataItem;
#ifndef _REWRITER_typedef_AVMetadataItem
#define _REWRITER_typedef_AVMetadataItem
typedef struct objc_object AVMetadataItem;
typedef struct {} _objc_exc_AVMetadataItem;
#endif


// @interface AVPlayerItem (AVPlayerItemInspection)





// @property (nonatomic, readonly) AVAsset *asset;
// @property (nonatomic, readonly) NSArray<AVPlayerItemTrack *> *tracks;
// @property (nonatomic, readonly) CMTime duration __attribute__((availability(ios,introduced=4_3)));
// @property (nonatomic, readonly) CGSize presentationSize;
// @property (nonatomic, readonly, nullable) NSArray<AVMetadataItem *> *timedMetadata;







// @property (nonatomic, readonly) NSArray<NSString *> *automaticallyLoadedAssetKeys __attribute__((availability(ios,introduced=7_0)));

/* @end */



// @interface AVPlayerItem (AVPlayerItemRateAndSteppingSupport)




// @property (nonatomic, readonly) BOOL canPlayFastForward __attribute__((availability(ios,introduced=5_0)));


// @property (nonatomic, readonly) BOOL canPlaySlowForward __attribute__((availability(ios,introduced=6_0)));


// @property (nonatomic, readonly) BOOL canPlayReverse __attribute__((availability(ios,introduced=6_0)));


// @property (nonatomic, readonly) BOOL canPlaySlowReverse __attribute__((availability(ios,introduced=6_0)));


// @property (nonatomic, readonly) BOOL canPlayFastReverse __attribute__((availability(ios,introduced=5_0)));


// @property (nonatomic, readonly) BOOL canStepForward __attribute__((availability(ios,introduced=6_0)));


// @property (nonatomic, readonly) BOOL canStepBackward __attribute__((availability(ios,introduced=6_0)));

/* @end */



// @interface AVPlayerItem (AVPlayerItemTimeControl)







// - (CMTime)currentTime;
// @property (nonatomic) CMTime forwardPlaybackEndTime;
// @property (nonatomic) CMTime reversePlaybackEndTime;






// @property (nonatomic, readonly) NSArray<NSValue *> *seekableTimeRanges;
// - (void)seekToTime:(CMTime)time completionHandler:(void (^_Nullable)(BOOL finished))completionHandler __attribute__((availability(ios,introduced=5_0)));
// - (void)seekToTime:(CMTime)time toleranceBefore:(CMTime)toleranceBefore toleranceAfter:(CMTime)toleranceAfter completionHandler:(void (^_Nullable)(BOOL finished))completionHandler __attribute__((availability(ios,introduced=5_0)));







// - (void)cancelPendingSeeks __attribute__((availability(ios,introduced=5_0)));






// - (nullable NSDate *)currentDate;
// - (BOOL)seekToDate:(NSDate *)date completionHandler:(void (^_Nullable)(BOOL finished))completionHandler __attribute__((availability(ios,introduced=6_0)));
// - (void)stepByCount:(NSInteger)stepCount;
// @property (nonatomic, readonly, nullable) __attribute__((NSObject)) CMTimebaseRef timebase __attribute__((availability(ios,introduced=6_0)));

/* @end */



// @class AVTextStyleRule;
#ifndef _REWRITER_typedef_AVTextStyleRule
#define _REWRITER_typedef_AVTextStyleRule
typedef struct objc_object AVTextStyleRule;
typedef struct {} _objc_exc_AVTextStyleRule;
#endif


// @interface AVPlayerItem (AVPlayerItemVisualPresentation)





// @property (nonatomic, copy, nullable) AVVideoComposition *videoComposition;
// @property (nonatomic, readonly, nullable) id<AVVideoCompositing> customVideoCompositor __attribute__((availability(ios,introduced=7_0)));
// @property (nonatomic) BOOL seekingWaitsForVideoCompositionRendering __attribute__((availability(ios,introduced=6_0)));
// @property (nonatomic, copy, nullable) NSArray<AVTextStyleRule *> *textStyleRules __attribute__((availability(ios,introduced=6_0)));







// @property (nonatomic, copy) AVVideoApertureMode videoApertureMode __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,unavailable)));

/* @end */



// @interface AVPlayerItem (AVPlayerItemAudioProcessing)
// @property (nonatomic, copy) AVAudioTimePitchAlgorithm audioTimePitchAlgorithm __attribute__((availability(ios,introduced=7_0)));







// @property (nonatomic, copy, nullable) AVAudioMix *audioMix;

/* @end */



// @interface AVPlayerItem (AVPlayerItemPlayability)






// @property (nonatomic, readonly) NSArray<NSValue *> *loadedTimeRanges;
// @property (nonatomic, readonly, getter=isPlaybackLikelyToKeepUp) BOOL playbackLikelyToKeepUp;
// @property (nonatomic, readonly, getter=isPlaybackBufferFull) BOOL playbackBufferFull;


// @property (nonatomic, readonly, getter=isPlaybackBufferEmpty) BOOL playbackBufferEmpty;
// @property (nonatomic, assign) BOOL canUseNetworkResourcesForLiveStreamingWhilePaused __attribute__((availability(ios,introduced=9_0)));
// @property (nonatomic) NSTimeInterval preferredForwardBufferDuration __attribute__((availability(ios,introduced=10_0)));

/* @end */



// @interface AVPlayerItem (AVPlayerItemVariantControl)
// @property (nonatomic) double preferredPeakBitRate __attribute__((availability(ios,introduced=8_0)));
// @property (nonatomic) CGSize preferredMaximumResolution __attribute__((availability(ios,introduced=11_0)));

/* @end */



// @interface AVPlayerItem (AVPlayerItemMediaSelection)
// - (void)selectMediaOption:(nullable AVMediaSelectionOption *)mediaSelectionOption inMediaSelectionGroup:(AVMediaSelectionGroup *)mediaSelectionGroup __attribute__((availability(ios,introduced=5_0)));
// - (void)selectMediaOptionAutomaticallyInMediaSelectionGroup:(AVMediaSelectionGroup *)mediaSelectionGroup __attribute__((availability(ios,introduced=7_0)));





// @property (nonatomic, readonly) AVMediaSelection *currentMediaSelection __attribute__((availability(ios,introduced=9_0)));

/* @end */



// @class AVPlayerItemAccessLog;
#ifndef _REWRITER_typedef_AVPlayerItemAccessLog
#define _REWRITER_typedef_AVPlayerItemAccessLog
typedef struct objc_object AVPlayerItemAccessLog;
typedef struct {} _objc_exc_AVPlayerItemAccessLog;
#endif

// @class AVPlayerItemErrorLog;
#ifndef _REWRITER_typedef_AVPlayerItemErrorLog
#define _REWRITER_typedef_AVPlayerItemErrorLog
typedef struct objc_object AVPlayerItemErrorLog;
typedef struct {} _objc_exc_AVPlayerItemErrorLog;
#endif

// @class AVPlayerItemAccessLogInternal;
#ifndef _REWRITER_typedef_AVPlayerItemAccessLogInternal
#define _REWRITER_typedef_AVPlayerItemAccessLogInternal
typedef struct objc_object AVPlayerItemAccessLogInternal;
typedef struct {} _objc_exc_AVPlayerItemAccessLogInternal;
#endif

// @class AVPlayerItemErrorLogInternal;
#ifndef _REWRITER_typedef_AVPlayerItemErrorLogInternal
#define _REWRITER_typedef_AVPlayerItemErrorLogInternal
typedef struct objc_object AVPlayerItemErrorLogInternal;
typedef struct {} _objc_exc_AVPlayerItemErrorLogInternal;
#endif

// @class AVPlayerItemAccessLogEventInternal;
#ifndef _REWRITER_typedef_AVPlayerItemAccessLogEventInternal
#define _REWRITER_typedef_AVPlayerItemAccessLogEventInternal
typedef struct objc_object AVPlayerItemAccessLogEventInternal;
typedef struct {} _objc_exc_AVPlayerItemAccessLogEventInternal;
#endif

// @class AVPlayerItemErrorLogEventInternal;
#ifndef _REWRITER_typedef_AVPlayerItemErrorLogEventInternal
#define _REWRITER_typedef_AVPlayerItemErrorLogEventInternal
typedef struct objc_object AVPlayerItemErrorLogEventInternal;
typedef struct {} _objc_exc_AVPlayerItemErrorLogEventInternal;
#endif


// @interface AVPlayerItem (AVPlayerItemLogging)
// - (nullable AVPlayerItemAccessLog *)accessLog __attribute__((availability(ios,introduced=4_3)));
// - (nullable AVPlayerItemErrorLog *)errorLog __attribute__((availability(ios,introduced=4_3)));

/* @end */


// @class AVPlayerItemOutput;
#ifndef _REWRITER_typedef_AVPlayerItemOutput
#define _REWRITER_typedef_AVPlayerItemOutput
typedef struct objc_object AVPlayerItemOutput;
typedef struct {} _objc_exc_AVPlayerItemOutput;
#endif


// @interface AVPlayerItem (AVPlayerItemOutputs)
// - (void)addOutput:(AVPlayerItemOutput *)output __attribute__((availability(ios,introduced=6_0)));
// - (void)removeOutput:(AVPlayerItemOutput *)output __attribute__((availability(ios,introduced=6_0)));






// @property (nonatomic, readonly) NSArray<AVPlayerItemOutput *> *outputs __attribute__((availability(ios,introduced=6_0)));

/* @end */


// @class AVPlayerItemMediaDataCollector;
#ifndef _REWRITER_typedef_AVPlayerItemMediaDataCollector
#define _REWRITER_typedef_AVPlayerItemMediaDataCollector
typedef struct objc_object AVPlayerItemMediaDataCollector;
typedef struct {} _objc_exc_AVPlayerItemMediaDataCollector;
#endif


// @interface AVPlayerItem (AVPlayerItemMediaDataCollectors)
// - (void)addMediaDataCollector:(AVPlayerItemMediaDataCollector *)collector __attribute__((availability(ios,introduced=9_3)));







// - (void)removeMediaDataCollector:(AVPlayerItemMediaDataCollector *)collector __attribute__((availability(ios,introduced=9_3)));





// @property (nonatomic, readonly) NSArray<AVPlayerItemMediaDataCollector *> *mediaDataCollectors __attribute__((availability(ios,introduced=9_3)));;

/* @end */


// @interface AVPlayerItem (AVPlayerItemDeprecated)
// - (void)seekToTime:(CMTime)time __attribute__((availability(ios,introduced=4_0,deprecated=11_0,message="" "Use -seekToTime:completionHandler:, passing nil for the completionHandler if you don't require notification of completion")));
// - (void)seekToTime:(CMTime)time toleranceBefore:(CMTime)toleranceBefore toleranceAfter:(CMTime)toleranceAfter __attribute__((availability(ios,introduced=4_0,deprecated=11_0,message="" "Use -seekToTime:toleranceBefore:toleranceAfter:completionHandler:, passing nil for the completionHandler if you don't require notification of completion")));
// - (BOOL)seekToDate:(NSDate *)date __attribute__((availability(ios,introduced=4_0,deprecated=11_0,message="" "Use -seekToDate:completionHandler:, passing nil for the completionHandler if you don't require notification of completion")));
// - (nullable AVMediaSelectionOption *)selectedMediaOptionInMediaSelectionGroup:(AVMediaSelectionGroup *)mediaSelectionGroup __attribute__((availability(ios,introduced=5_0,deprecated=11_0,message="" "Use currentMediaSelection to obtain an instance of AVMediaSelection, which encompasses the currently selected AVMediaSelectionOption in each of the available AVMediaSelectionGroups")));

/* @end */


// @class AVPlayerItemAccessLogEvent;
#ifndef _REWRITER_typedef_AVPlayerItemAccessLogEvent
#define _REWRITER_typedef_AVPlayerItemAccessLogEvent
typedef struct objc_object AVPlayerItemAccessLogEvent;
typedef struct {} _objc_exc_AVPlayerItemAccessLogEvent;
#endif

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_3)))

#ifndef _REWRITER_typedef_AVPlayerItemAccessLog
#define _REWRITER_typedef_AVPlayerItemAccessLog
typedef struct objc_object AVPlayerItemAccessLog;
typedef struct {} _objc_exc_AVPlayerItemAccessLog;
#endif

struct AVPlayerItemAccessLog_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVPlayerItemAccessLogInternal *__strong _playerItemAccessLog;
};

// - (instancetype)init __attribute__((unavailable)); // + (instancetype)new __attribute__((unavailable));
// - (nullable NSData *)extendedLogData;







 // @property (nonatomic, readonly) NSStringEncoding extendedLogDataStringEncoding;
// @property (nonatomic, readonly) NSArray<AVPlayerItemAccessLogEvent *> *events;

/* @end */


// @class AVPlayerItemErrorLogEvent;
#ifndef _REWRITER_typedef_AVPlayerItemErrorLogEvent
#define _REWRITER_typedef_AVPlayerItemErrorLogEvent
typedef struct objc_object AVPlayerItemErrorLogEvent;
typedef struct {} _objc_exc_AVPlayerItemErrorLogEvent;
#endif






__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_3)))

#ifndef _REWRITER_typedef_AVPlayerItemErrorLog
#define _REWRITER_typedef_AVPlayerItemErrorLog
typedef struct objc_object AVPlayerItemErrorLog;
typedef struct {} _objc_exc_AVPlayerItemErrorLog;
#endif

struct AVPlayerItemErrorLog_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVPlayerItemErrorLogInternal *__strong _playerItemErrorLog;
};

// - (instancetype)init __attribute__((unavailable)); // + (instancetype)new __attribute__((unavailable));
// - (nullable NSData *)extendedLogData;







 // @property (nonatomic, readonly) NSStringEncoding extendedLogDataStringEncoding;
// @property (nonatomic, readonly) NSArray<AVPlayerItemErrorLogEvent *> *events;

/* @end */

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_3)))

#ifndef _REWRITER_typedef_AVPlayerItemAccessLogEvent
#define _REWRITER_typedef_AVPlayerItemAccessLogEvent
typedef struct objc_object AVPlayerItemAccessLogEvent;
typedef struct {} _objc_exc_AVPlayerItemAccessLogEvent;
#endif

struct AVPlayerItemAccessLogEvent_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVPlayerItemAccessLogEventInternal *__strong _playerItemAccessLogEvent;
};

// - (instancetype)init __attribute__((unavailable)); // + (instancetype)new __attribute__((unavailable));
// @property (nonatomic, readonly) NSInteger numberOfSegmentsDownloaded __attribute__((availability(ios,introduced=4_3,deprecated=7_0,message="" )));
// @property (nonatomic, readonly) NSInteger numberOfMediaRequests __attribute__((availability(ios,introduced=6_0)));







// @property (nonatomic, readonly, nullable) NSDate *playbackStartDate;







// @property (nonatomic, readonly, nullable) NSString *URI;







// @property (nonatomic, readonly, nullable) NSString *serverAddress;







// @property (nonatomic, readonly) NSInteger numberOfServerAddressChanges;







// @property (nonatomic, readonly, nullable) NSString *playbackSessionID;







// @property (nonatomic, readonly) NSTimeInterval playbackStartOffset;







// @property (nonatomic, readonly) NSTimeInterval segmentsDownloadedDuration;







// @property (nonatomic, readonly) NSTimeInterval durationWatched;







// @property (nonatomic, readonly) NSInteger numberOfStalls;







// @property (nonatomic, readonly) long long numberOfBytesTransferred;







// @property (nonatomic, readonly) NSTimeInterval transferDuration __attribute__((availability(ios,introduced=7_0)));







// @property (nonatomic, readonly) double observedBitrate;







// @property (nonatomic, readonly) double indicatedBitrate;







// @property (nonatomic, readonly) double indicatedAverageBitrate __attribute__((availability(ios,introduced=10_0)));







// @property (nonatomic, readonly) double averageVideoBitrate __attribute__((availability(ios,introduced=10_0)));







// @property (nonatomic, readonly) double averageAudioBitrate __attribute__((availability(ios,introduced=10_0)));







// @property (nonatomic, readonly) NSInteger numberOfDroppedVideoFrames;







// @property (nonatomic, readonly) NSTimeInterval startupTime __attribute__((availability(ios,introduced=7_0)));







// @property (nonatomic, readonly) NSInteger downloadOverdue __attribute__((availability(ios,introduced=7_0)));







// @property (nonatomic, readonly) double observedMaxBitrate __attribute__((availability(ios,introduced=7_0)));







// @property (nonatomic, readonly) double observedMinBitrate __attribute__((availability(ios,introduced=7_0)));







// @property (nonatomic, readonly) double observedBitrateStandardDeviation __attribute__((availability(ios,introduced=7_0)));







// @property (nonatomic, readonly, nullable) NSString *playbackType __attribute__((availability(ios,introduced=7_0)));







// @property (nonatomic, readonly) NSInteger mediaRequestsWWAN __attribute__((availability(ios,introduced=7_0)));







// @property (nonatomic, readonly) double switchBitrate __attribute__((availability(ios,introduced=7_0)));

/* @end */








__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_3)))

#ifndef _REWRITER_typedef_AVPlayerItemErrorLogEvent
#define _REWRITER_typedef_AVPlayerItemErrorLogEvent
typedef struct objc_object AVPlayerItemErrorLogEvent;
typedef struct {} _objc_exc_AVPlayerItemErrorLogEvent;
#endif

struct AVPlayerItemErrorLogEvent_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVPlayerItemErrorLogEventInternal *__strong _playerItemErrorLogEvent;
};

// - (instancetype)init __attribute__((unavailable)); // + (instancetype)new __attribute__((unavailable));







// @property (nonatomic, readonly, nullable) NSDate *date;







// @property (nonatomic, readonly, nullable) NSString *URI;







// @property (nonatomic, readonly, nullable) NSString *serverAddress;







// @property (nonatomic, readonly, nullable) NSString *playbackSessionID;







// @property (nonatomic, readonly) NSInteger errorStatusCode;







// @property (nonatomic, readonly) NSString *errorDomain;







// @property (nonatomic, readonly, nullable) NSString *errorComment;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class AVPlayerItemMediaDataCollectorInternal;
#ifndef _REWRITER_typedef_AVPlayerItemMediaDataCollectorInternal
#define _REWRITER_typedef_AVPlayerItemMediaDataCollectorInternal
typedef struct objc_object AVPlayerItemMediaDataCollectorInternal;
typedef struct {} _objc_exc_AVPlayerItemMediaDataCollectorInternal;
#endif

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_3)))

#ifndef _REWRITER_typedef_AVPlayerItemMediaDataCollector
#define _REWRITER_typedef_AVPlayerItemMediaDataCollector
typedef struct objc_object AVPlayerItemMediaDataCollector;
typedef struct {} _objc_exc_AVPlayerItemMediaDataCollector;
#endif

struct AVPlayerItemMediaDataCollector_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVPlayerItemMediaDataCollectorInternal *__strong _collectorInternal;
};

/* @end */


// @protocol AVPlayerItemMetadataCollectorPushDelegate;
// @class AVPlayerItemMetadataCollectorInternal;
#ifndef _REWRITER_typedef_AVPlayerItemMetadataCollectorInternal
#define _REWRITER_typedef_AVPlayerItemMetadataCollectorInternal
typedef struct objc_object AVPlayerItemMetadataCollectorInternal;
typedef struct {} _objc_exc_AVPlayerItemMetadataCollectorInternal;
#endif

// @class AVDateRangeMetadataGroup;
#ifndef _REWRITER_typedef_AVDateRangeMetadataGroup
#define _REWRITER_typedef_AVDateRangeMetadataGroup
typedef struct objc_object AVDateRangeMetadataGroup;
typedef struct {} _objc_exc_AVDateRangeMetadataGroup;
#endif








__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_3)))

#ifndef _REWRITER_typedef_AVPlayerItemMetadataCollector
#define _REWRITER_typedef_AVPlayerItemMetadataCollector
typedef struct objc_object AVPlayerItemMetadataCollector;
typedef struct {} _objc_exc_AVPlayerItemMetadataCollector;
#endif

struct AVPlayerItemMetadataCollector_IMPL {
	struct AVPlayerItemMediaDataCollector_IMPL AVPlayerItemMediaDataCollector_IVARS;
	AVPlayerItemMetadataCollectorInternal *__strong _metadataCollectorInternal;
};

// - (instancetype)initWithIdentifiers:(nullable NSArray<NSString *> *)identifiers classifyingLabels:(nullable NSArray<NSString *> *)classifyingLabels;
// - (void)setDelegate:(nullable id <AVPlayerItemMetadataCollectorPushDelegate>)delegate queue:(nullable dispatch_queue_t)delegateQueue;







// @property (nonatomic, readonly, weak, nullable) id <AVPlayerItemMetadataCollectorPushDelegate> delegate;







// @property (nonatomic, readonly, nullable) dispatch_queue_t delegateQueue;

/* @end */


// @protocol AVPlayerItemMetadataCollectorPushDelegate <NSObject>
// - (void)metadataCollector:(AVPlayerItemMetadataCollector *)metadataCollector didCollectDateRangeMetadataGroups:(NSArray<AVDateRangeMetadataGroup *> *)metadataGroups indexesOfNewGroups:(NSIndexSet *)indexesOfNewGroups indexesOfModifiedGroups:(NSIndexSet *)indexesOfModifiedGroups;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin
// @class AVPlayerItemOutputInternal;
#ifndef _REWRITER_typedef_AVPlayerItemOutputInternal
#define _REWRITER_typedef_AVPlayerItemOutputInternal
typedef struct objc_object AVPlayerItemOutputInternal;
typedef struct {} _objc_exc_AVPlayerItemOutputInternal;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0)))

#ifndef _REWRITER_typedef_AVPlayerItemOutput
#define _REWRITER_typedef_AVPlayerItemOutput
typedef struct objc_object AVPlayerItemOutput;
typedef struct {} _objc_exc_AVPlayerItemOutput;
#endif

struct AVPlayerItemOutput_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVPlayerItemOutputInternal *__strong _outputInternal;
};

// - (CMTime)itemTimeForHostTime:(CFTimeInterval)hostTimeInSeconds;
// - (CMTime)itemTimeForMachAbsoluteTime:(int64_t)machAbsoluteTime;
// @property (nonatomic, readwrite) BOOL suppressesPlayerRendering __attribute__((availability(ios,introduced=6_0)));

/* @end */

// @protocol AVPlayerItemOutputPullDelegate;

// @class AVPlayerItemVideoOutputInternal;
#ifndef _REWRITER_typedef_AVPlayerItemVideoOutputInternal
#define _REWRITER_typedef_AVPlayerItemVideoOutputInternal
typedef struct objc_object AVPlayerItemVideoOutputInternal;
typedef struct {} _objc_exc_AVPlayerItemVideoOutputInternal;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0)))

#ifndef _REWRITER_typedef_AVPlayerItemVideoOutput
#define _REWRITER_typedef_AVPlayerItemVideoOutput
typedef struct objc_object AVPlayerItemVideoOutput;
typedef struct {} _objc_exc_AVPlayerItemVideoOutput;
#endif

struct AVPlayerItemVideoOutput_IMPL {
	struct AVPlayerItemOutput_IMPL AVPlayerItemOutput_IVARS;
	AVPlayerItemVideoOutputInternal *__strong _videoOutputInternal;
};

// - (instancetype)initWithPixelBufferAttributes:(nullable NSDictionary<NSString *, id> *)pixelBufferAttributes __attribute__((objc_designated_initializer));
// - (instancetype)initWithOutputSettings:(nullable NSDictionary<NSString *, id> *)outputSettings __attribute__((availability(ios,introduced=10_0))) __attribute__((objc_designated_initializer));
// - (BOOL)hasNewPixelBufferForItemTime:(CMTime)itemTime;
// - (nullable CVPixelBufferRef)copyPixelBufferForItemTime:(CMTime)itemTime itemTimeForDisplay:(nullable CMTime *)outItemTimeForDisplay __attribute__((cf_returns_retained));
// - (void)setDelegate:(nullable id<AVPlayerItemOutputPullDelegate>)delegate queue:(nullable dispatch_queue_t)delegateQueue;
// - (void)requestNotificationOfMediaDataChangeWithAdvanceInterval:(NSTimeInterval)interval;





// @property (nonatomic, readonly, assign, nullable) id<AVPlayerItemOutputPullDelegate> delegate;






// @property (nonatomic, readonly, nullable) dispatch_queue_t delegateQueue;

/* @end */







 // @protocol AVPlayerItemOutputPullDelegate <NSObject>

 /* @optional */
// - (void)outputMediaDataWillChange:(AVPlayerItemOutput *)sender __attribute__((availability(ios,introduced=6_0)));
// - (void)outputSequenceWasFlushed:(AVPlayerItemOutput *)output __attribute__((availability(ios,introduced=6_0)));

/* @end */



// @protocol AVPlayerItemLegibleOutputPushDelegate;
// @class AVPlayerItemLegibleOutputInternal;
#ifndef _REWRITER_typedef_AVPlayerItemLegibleOutputInternal
#define _REWRITER_typedef_AVPlayerItemLegibleOutputInternal
typedef struct objc_object AVPlayerItemLegibleOutputInternal;
typedef struct {} _objc_exc_AVPlayerItemLegibleOutputInternal;
#endif








__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0)))

#ifndef _REWRITER_typedef_AVPlayerItemLegibleOutput
#define _REWRITER_typedef_AVPlayerItemLegibleOutput
typedef struct objc_object AVPlayerItemLegibleOutput;
typedef struct {} _objc_exc_AVPlayerItemLegibleOutput;
#endif

struct AVPlayerItemLegibleOutput_IMPL {
	struct AVPlayerItemOutput_IMPL AVPlayerItemOutput_IVARS;
	AVPlayerItemLegibleOutputInternal *__strong _legibleOutputInternal;
};

// - (void)setDelegate:(nullable id <AVPlayerItemLegibleOutputPushDelegate>)delegate queue:(nullable dispatch_queue_t)delegateQueue;







// @property (nonatomic, readonly, weak, nullable) id <AVPlayerItemLegibleOutputPushDelegate> delegate;







// @property (nonatomic, readonly, nullable) dispatch_queue_t delegateQueue;







// @property (nonatomic, readwrite) NSTimeInterval advanceIntervalForDelegateInvocation;

/* @end */



// @interface AVPlayerItemLegibleOutput (AVPlayerItemLegibleOutput_NativeRepresentation)
// - (instancetype)initWithMediaSubtypesForNativeRepresentation:(NSArray<NSNumber *> *)subtypes;

/* @end */



// @interface AVPlayerItemLegibleOutput (AVPlayerItemLegibleOutput_TextStylingResolution)






typedef NSString * AVPlayerItemLegibleOutputTextStylingResolution __attribute__((swift_wrapper(enum)));





extern "C" AVPlayerItemLegibleOutputTextStylingResolution const AVPlayerItemLegibleOutputTextStylingResolutionDefault __attribute__((availability(ios,introduced=7_0)));







extern "C" AVPlayerItemLegibleOutputTextStylingResolution const AVPlayerItemLegibleOutputTextStylingResolutionSourceAndRulesOnly __attribute__((availability(ios,introduced=7_0)));







// @property (nonatomic, copy) AVPlayerItemLegibleOutputTextStylingResolution textStylingResolution;

/* @end */



// @protocol AVPlayerItemOutputPushDelegate;





// @protocol AVPlayerItemLegibleOutputPushDelegate <AVPlayerItemOutputPushDelegate>

/* @optional */
// - (void)legibleOutput:(AVPlayerItemLegibleOutput *)output didOutputAttributedStrings:(NSArray<NSAttributedString *> *)strings nativeSampleBuffers:(NSArray *)nativeSamples forItemTime:(CMTime)itemTime __attribute__((availability(ios,introduced=7_0)));

/* @end */







// @protocol AVPlayerItemOutputPushDelegate <NSObject>

/* @optional */







// - (void)outputSequenceWasFlushed:(AVPlayerItemOutput *)output;

/* @end */



// @protocol AVPlayerItemMetadataOutputPushDelegate;
// @class AVPlayerItemMetadataOutputInternal;
#ifndef _REWRITER_typedef_AVPlayerItemMetadataOutputInternal
#define _REWRITER_typedef_AVPlayerItemMetadataOutputInternal
typedef struct objc_object AVPlayerItemMetadataOutputInternal;
typedef struct {} _objc_exc_AVPlayerItemMetadataOutputInternal;
#endif

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=8_0)))

#ifndef _REWRITER_typedef_AVPlayerItemMetadataOutput
#define _REWRITER_typedef_AVPlayerItemMetadataOutput
typedef struct objc_object AVPlayerItemMetadataOutput;
typedef struct {} _objc_exc_AVPlayerItemMetadataOutput;
#endif

struct AVPlayerItemMetadataOutput_IMPL {
	struct AVPlayerItemOutput_IMPL AVPlayerItemOutput_IVARS;
	AVPlayerItemMetadataOutputInternal *__strong _metadataOutputInternal;
};

// - (instancetype)initWithIdentifiers:(nullable NSArray<NSString *> *)identifiers __attribute__((objc_designated_initializer));
// - (void)setDelegate:(nullable id <AVPlayerItemMetadataOutputPushDelegate>)delegate queue:(nullable dispatch_queue_t)delegateQueue;







// @property (nonatomic, readonly, weak, nullable) id <AVPlayerItemMetadataOutputPushDelegate> delegate;







// @property (nonatomic, readonly, nullable) dispatch_queue_t delegateQueue;







// @property (nonatomic, readwrite) NSTimeInterval advanceIntervalForDelegateInvocation;

/* @end */


// @class AVTimedMetadataGroup;
#ifndef _REWRITER_typedef_AVTimedMetadataGroup
#define _REWRITER_typedef_AVTimedMetadataGroup
typedef struct objc_object AVTimedMetadataGroup;
typedef struct {} _objc_exc_AVTimedMetadataGroup;
#endif

// @class AVPlayerItemTrack;
#ifndef _REWRITER_typedef_AVPlayerItemTrack
#define _REWRITER_typedef_AVPlayerItemTrack
typedef struct objc_object AVPlayerItemTrack;
typedef struct {} _objc_exc_AVPlayerItemTrack;
#endif






// @protocol AVPlayerItemMetadataOutputPushDelegate <AVPlayerItemOutputPushDelegate>

/* @optional */
// - (void)metadataOutput:(AVPlayerItemMetadataOutput *)output didOutputTimedMetadataGroups:(NSArray<AVTimedMetadataGroup *> *)groups fromPlayerItemTrack:(nullable AVPlayerItemTrack *)track __attribute__((availability(ios,introduced=8_0)));

/* @end */

#pragma clang assume_nonnull end



// @class AVPlayerImageProvider;
#ifndef _REWRITER_typedef_AVPlayerImageProvider
#define _REWRITER_typedef_AVPlayerImageProvider
typedef struct objc_object AVPlayerImageProvider;
typedef struct {} _objc_exc_AVPlayerImageProvider;
#endif

// @class AVAssetTrack;
#ifndef _REWRITER_typedef_AVAssetTrack
#define _REWRITER_typedef_AVAssetTrack
typedef struct objc_object AVAssetTrack;
typedef struct {} _objc_exc_AVAssetTrack;
#endif

// @class AVPlayerItemTrackInternal;
#ifndef _REWRITER_typedef_AVPlayerItemTrackInternal
#define _REWRITER_typedef_AVPlayerItemTrackInternal
typedef struct objc_object AVPlayerItemTrackInternal;
typedef struct {} _objc_exc_AVPlayerItemTrackInternal;
#endif


#pragma clang assume_nonnull begin
__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0)))

#ifndef _REWRITER_typedef_AVPlayerItemTrack
#define _REWRITER_typedef_AVPlayerItemTrack
typedef struct objc_object AVPlayerItemTrack;
typedef struct {} _objc_exc_AVPlayerItemTrack;
#endif

struct AVPlayerItemTrack_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVPlayerItemTrackInternal *__strong _playerItemTrack;
};

// @property (nonatomic, readonly) AVAssetTrack *assetTrack;





// @property (nonatomic, assign, getter=isEnabled) BOOL enabled;






// @property (nonatomic, readonly) float currentVideoFrameRate __attribute__((availability(ios,introduced=7_0)));
/* @end */

#pragma clang assume_nonnull end
// @class AVPlayer;
#ifndef _REWRITER_typedef_AVPlayer
#define _REWRITER_typedef_AVPlayer
typedef struct objc_object AVPlayer;
typedef struct {} _objc_exc_AVPlayer;
#endif

// @class AVPlayerLayerInternal;
#ifndef _REWRITER_typedef_AVPlayerLayerInternal
#define _REWRITER_typedef_AVPlayerLayerInternal
typedef struct objc_object AVPlayerLayerInternal;
typedef struct {} _objc_exc_AVPlayerLayerInternal;
#endif


#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0)))

#ifndef _REWRITER_typedef_AVPlayerLayer
#define _REWRITER_typedef_AVPlayerLayer
typedef struct objc_object AVPlayerLayer;
typedef struct {} _objc_exc_AVPlayerLayer;
#endif

struct AVPlayerLayer_IMPL {
	struct CALayer_IMPL CALayer_IVARS;
	AVPlayerLayerInternal *__strong _playerLayer;
};







// + (AVPlayerLayer *)playerLayerWithPlayer:(nullable AVPlayer *)player;





// @property (nonatomic, retain, nullable) AVPlayer *player;
// @property(copy) AVLayerVideoGravity videoGravity;
// @property(nonatomic, readonly, getter=isReadyForDisplay) BOOL readyForDisplay;





// @property (nonatomic, readonly) CGRect videoRect __attribute__((availability(ios,introduced=7_0)));






// @property (nonatomic, copy, nullable) NSDictionary<NSString *, id> *pixelBufferAttributes __attribute__((availability(ios,introduced=9_0)));

/* @end */

#pragma clang assume_nonnull end
// @class AVPlayerLooperInternal;
#ifndef _REWRITER_typedef_AVPlayerLooperInternal
#define _REWRITER_typedef_AVPlayerLooperInternal
typedef struct objc_object AVPlayerLooperInternal;
typedef struct {} _objc_exc_AVPlayerLooperInternal;
#endif


#pragma clang assume_nonnull begin
typedef NSInteger AVPlayerLooperStatus; enum {
    AVPlayerLooperStatusUnknown,
    AVPlayerLooperStatusReady,
    AVPlayerLooperStatusFailed,
    AVPlayerLooperStatusCancelled
};

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=10_0)))

#ifndef _REWRITER_typedef_AVPlayerLooper
#define _REWRITER_typedef_AVPlayerLooper
typedef struct objc_object AVPlayerLooper;
typedef struct {} _objc_exc_AVPlayerLooper;
#endif

struct AVPlayerLooper_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVPlayerLooperInternal *__strong _looper;
};

// - (instancetype)init __attribute__((unavailable)); // + (instancetype)new __attribute__((unavailable));
// + (instancetype)playerLooperWithPlayer:(AVQueuePlayer *)player templateItem:(AVPlayerItem *)itemToLoop timeRange:(CMTimeRange)loopRange;
// + (instancetype)playerLooperWithPlayer:(AVQueuePlayer *)player templateItem:(AVPlayerItem *)itemToLoop;
// - (instancetype)initWithPlayer:(AVQueuePlayer *)player templateItem:(AVPlayerItem *)itemToLoop timeRange:(CMTimeRange)loopRange __attribute__((objc_designated_initializer));
// @property (readonly) AVPlayerLooperStatus status;
// @property (readonly, nullable) NSError *error;
// - (void)disableLooping;
// @property (readonly) NSInteger loopCount;
// @property (nonatomic, readonly) NSArray<AVPlayerItem *> *loopingPlayerItems;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=7_0)))

#ifndef _REWRITER_typedef_AVPlayerMediaSelectionCriteria
#define _REWRITER_typedef_AVPlayerMediaSelectionCriteria
typedef struct objc_object AVPlayerMediaSelectionCriteria;
typedef struct {} _objc_exc_AVPlayerMediaSelectionCriteria;
#endif

struct AVPlayerMediaSelectionCriteria_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	void *_criteriaInternal;
};





// @property (nonatomic, readonly, nullable) NSArray<NSString *> *preferredLanguages;





// @property (nonatomic, readonly, nullable) NSArray<NSString *> *preferredMediaCharacteristics;
// - (instancetype)initWithPreferredLanguages:(nullable NSArray<NSString *> *)preferredLanguages preferredMediaCharacteristics:(nullable NSArray<AVMediaCharacteristic> *)preferredMediaCharacteristics;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin
typedef NSInteger AVQueuedSampleBufferRenderingStatus; enum {
 AVQueuedSampleBufferRenderingStatusUnknown,
 AVQueuedSampleBufferRenderingStatusRendering,
 AVQueuedSampleBufferRenderingStatusFailed
} __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(tvos,introduced=10.2))) __attribute__((availability(watchos,unavailable)));







__attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,unavailable)))
// @protocol AVQueuedSampleBufferRendering <NSObject>
// @property (retain, readonly) __attribute__((NSObject)) CMTimebaseRef timebase;
// - (void)enqueueSampleBuffer:(CMSampleBufferRef)sampleBuffer;
// - (void)flush;
// @property (readonly, getter=isReadyForMoreMediaData) BOOL readyForMoreMediaData;
// - (void)requestMediaDataWhenReadyOnQueue:(dispatch_queue_t)queue usingBlock:(void (^)(void))block;







// - (void)stopRequestingMediaData;

/* @end */

#pragma clang assume_nonnull end
// @class AVRouteDetectorInternal;
#ifndef _REWRITER_typedef_AVRouteDetectorInternal
#define _REWRITER_typedef_AVRouteDetectorInternal
typedef struct objc_object AVRouteDetectorInternal;
typedef struct {} _objc_exc_AVRouteDetectorInternal;
#endif


#pragma clang assume_nonnull begin








__attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_AVRouteDetector
#define _REWRITER_typedef_AVRouteDetector
typedef struct objc_object AVRouteDetector;
typedef struct {} _objc_exc_AVRouteDetector;
#endif

struct AVRouteDetector_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVRouteDetectorInternal *__strong _routeDetectorInternal;
};








// @property (getter=isRouteDetectionEnabled) BOOL routeDetectionEnabled;







// @property (readonly) BOOL multipleRoutesDetected;





extern "C" NSNotificationName const AVRouteDetectorMultipleRoutesDetectedDidChangeNotification __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,unavailable)));

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class AVSampleBufferAudioRendererInternal;
#ifndef _REWRITER_typedef_AVSampleBufferAudioRendererInternal
#define _REWRITER_typedef_AVSampleBufferAudioRendererInternal
typedef struct objc_object AVSampleBufferAudioRendererInternal;
typedef struct {} _objc_exc_AVSampleBufferAudioRendererInternal;
#endif








__attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_AVSampleBufferAudioRenderer
#define _REWRITER_typedef_AVSampleBufferAudioRenderer
typedef struct objc_object AVSampleBufferAudioRenderer;
typedef struct {} _objc_exc_AVSampleBufferAudioRenderer;
#endif

struct AVSampleBufferAudioRenderer_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVSampleBufferAudioRendererInternal *__strong _audioRendererInternal;
};

// @property (nonatomic, readonly) AVQueuedSampleBufferRenderingStatus status;







// @property (nonatomic, readonly, nullable) NSError *error;
// @property (nonatomic, copy, nullable) NSString *audioOutputDeviceUniqueID __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)));
// @property (nonatomic, copy) AVAudioTimePitchAlgorithm audioTimePitchAlgorithm;

/* @end */


// @interface AVSampleBufferAudioRenderer (AVSampleBufferAudioRendererVolumeControl)
// @property (nonatomic) float volume;







// @property (nonatomic, getter=isMuted) BOOL muted;

/* @end */


// @interface AVSampleBufferAudioRenderer (AVSampleBufferAudioRendererQueueManagement)
// - (void)flushFromSourceTime:(CMTime)time completionHandler:(void (^)(BOOL flushSucceeded))completionHandler;
extern "C" NSNotificationName const AVSampleBufferAudioRendererWasFlushedAutomaticallyNotification __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,unavailable)));







 extern "C" NSString * const AVSampleBufferAudioRendererFlushTimeKey __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,unavailable)));

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin

// @class AVSampleBufferDisplayLayerInternal;
#ifndef _REWRITER_typedef_AVSampleBufferDisplayLayerInternal
#define _REWRITER_typedef_AVSampleBufferDisplayLayerInternal
typedef struct objc_object AVSampleBufferDisplayLayerInternal;
typedef struct {} _objc_exc_AVSampleBufferDisplayLayerInternal;
#endif


extern "C" NSString *const AVSampleBufferDisplayLayerFailedToDecodeNotification __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(tvos,introduced=10.2))) __attribute__((availability(watchos,unavailable)));
extern "C" NSString *const AVSampleBufferDisplayLayerFailedToDecodeNotificationErrorKey __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(tvos,introduced=10.2))) __attribute__((availability(watchos,unavailable)));

__attribute__((availability(macos,introduced=10.8))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(tvos,introduced=10.2))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_AVSampleBufferDisplayLayer
#define _REWRITER_typedef_AVSampleBufferDisplayLayer
typedef struct objc_object AVSampleBufferDisplayLayer;
typedef struct {} _objc_exc_AVSampleBufferDisplayLayer;
#endif

struct AVSampleBufferDisplayLayer_IMPL {
	struct CALayer_IMPL CALayer_IVARS;
	AVSampleBufferDisplayLayerInternal *__strong _sampleBufferDisplayLayerInternal;
};

// @property (retain, nullable) __attribute__((NSObject)) CMTimebaseRef controlTimebase;
// @property(copy) AVLayerVideoGravity videoGravity;

/* @end */



// @interface AVSampleBufferDisplayLayer (AVSampleBufferDisplayLayerQueueManagement) <AVQueuedSampleBufferRendering>
// @property (nonatomic, readonly) AVQueuedSampleBufferRenderingStatus status __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(tvos,introduced=10.2))) __attribute__((availability(watchos,unavailable)));






// @property (nonatomic, readonly, nullable) NSError *error __attribute__((availability(macos,introduced=10.10))) __attribute__((availability(ios,introduced=8.0))) __attribute__((availability(tvos,introduced=10.2))) __attribute__((availability(watchos,unavailable)));
// - (void)enqueueSampleBuffer:(CMSampleBufferRef)sampleBuffer;
// - (void)flush;
// - (void)flushAndRemoveImage;
// @property (readonly, getter=isReadyForMoreMediaData) BOOL readyForMoreMediaData;
// - (void)requestMediaDataWhenReadyOnQueue:(dispatch_queue_t)queue usingBlock:(void (^)(void))block;






// - (void)stopRequestingMediaData;

/* @end */

#pragma clang assume_nonnull end
// @protocol AVQueuedSampleBufferRendering;
// @class AVSampleBufferRenderSynchronizerInternal;
#ifndef _REWRITER_typedef_AVSampleBufferRenderSynchronizerInternal
#define _REWRITER_typedef_AVSampleBufferRenderSynchronizerInternal
typedef struct objc_object AVSampleBufferRenderSynchronizerInternal;
typedef struct {} _objc_exc_AVSampleBufferRenderSynchronizerInternal;
#endif


#pragma clang assume_nonnull begin





__attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,unavailable)))

#ifndef _REWRITER_typedef_AVSampleBufferRenderSynchronizer
#define _REWRITER_typedef_AVSampleBufferRenderSynchronizer
typedef struct objc_object AVSampleBufferRenderSynchronizer;
typedef struct {} _objc_exc_AVSampleBufferRenderSynchronizer;
#endif

struct AVSampleBufferRenderSynchronizer_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVSampleBufferRenderSynchronizerInternal *__strong _synchronizerInternal;
};

// @property (retain, readonly) __attribute__((NSObject)) CMTimebaseRef timebase;







// @property (nonatomic, readwrite) float rate;
// - (void)setRate:(float)rate time:(CMTime)time;

/* @end */


// @interface AVSampleBufferRenderSynchronizer (AVSampleBufferRenderSynchronizerRendererManagement)
// @property (atomic, readonly) NSArray<__kindof id <AVQueuedSampleBufferRendering>> *renderers;
// - (void)addRenderer:(id <AVQueuedSampleBufferRendering>)renderer;
// - (void)removeRenderer:(id <AVQueuedSampleBufferRendering>)renderer atTime:(CMTime)time completionHandler:(nullable void (^)(BOOL didRemoveRenderer))completionHandler;

/* @end */


// @interface AVSampleBufferRenderSynchronizer (AVSampleBufferRenderSynchronizerTimeObservation)
// - (id)addPeriodicTimeObserverForInterval:(CMTime)interval queue:(nullable dispatch_queue_t)queue usingBlock:(void (^)(CMTime time))block;
// - (id)addBoundaryTimeObserverForTimes:(NSArray<NSValue *> *)times queue:(nullable dispatch_queue_t)queue usingBlock:(void (^)(void))block;
// - (void)removeTimeObserver:(id)observer;

/* @end */

#pragma clang assume_nonnull end




// @class AVPlayerItem;
#ifndef _REWRITER_typedef_AVPlayerItem
#define _REWRITER_typedef_AVPlayerItem
typedef struct objc_object AVPlayerItem;
typedef struct {} _objc_exc_AVPlayerItem;
#endif

// @class AVSynchronizedLayerInternal;
#ifndef _REWRITER_typedef_AVSynchronizedLayerInternal
#define _REWRITER_typedef_AVSynchronizedLayerInternal
typedef struct objc_object AVSynchronizedLayerInternal;
typedef struct {} _objc_exc_AVSynchronizedLayerInternal;
#endif


#pragma clang assume_nonnull begin

__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_0)))

#ifndef _REWRITER_typedef_AVSynchronizedLayer
#define _REWRITER_typedef_AVSynchronizedLayer
typedef struct objc_object AVSynchronizedLayer;
typedef struct {} _objc_exc_AVSynchronizedLayer;
#endif

struct AVSynchronizedLayer_IMPL {
	struct CALayer_IMPL CALayer_IVARS;
	AVSynchronizedLayerInternal *__strong _syncLayer;
};







// + (AVSynchronizedLayer *)synchronizedLayerWithPlayerItem:(AVPlayerItem *)playerItem;


// @property (nonatomic, retain, nullable) AVPlayerItem *playerItem;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin







// @class AVTextStyleRuleInternal;
#ifndef _REWRITER_typedef_AVTextStyleRuleInternal
#define _REWRITER_typedef_AVTextStyleRuleInternal
typedef struct objc_object AVTextStyleRuleInternal;
typedef struct {} _objc_exc_AVTextStyleRuleInternal;
#endif


__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=6_0)))

#ifndef _REWRITER_typedef_AVTextStyleRule
#define _REWRITER_typedef_AVTextStyleRule
typedef struct objc_object AVTextStyleRule;
typedef struct {} _objc_exc_AVTextStyleRule;
#endif

struct AVTextStyleRule_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
	AVTextStyleRuleInternal *__strong _textStyleRule;
};

// - (instancetype)init __attribute__((unavailable)); // + (instancetype)new __attribute__((unavailable));
// + (id)propertyListForTextStyleRules:(NSArray<AVTextStyleRule *> *)textStyleRules;
// + (nullable NSArray<AVTextStyleRule *> *)textStyleRulesFromPropertyList:(id)plist;
// + (nullable AVTextStyleRule *)textStyleRuleWithTextMarkupAttributes:(NSDictionary<NSString *, id> *)textMarkupAttributes;
// + (nullable AVTextStyleRule *)textStyleRuleWithTextMarkupAttributes:(NSDictionary<NSString *, id> *)textMarkupAttributes textSelector:(nullable NSString *)textSelector;
// - (nullable instancetype)initWithTextMarkupAttributes:(NSDictionary<NSString *, id> *)textMarkupAttributes;
// - (nullable instancetype)initWithTextMarkupAttributes:(NSDictionary<NSString *, id> *)textMarkupAttributes textSelector:(nullable NSString *)textSelector __attribute__((objc_designated_initializer));





// @property (nonatomic, readonly) NSDictionary<NSString *, id> *textMarkupAttributes;






// @property (nonatomic, readonly, nullable) NSString *textSelector;

/* @end */

#pragma clang assume_nonnull end
#pragma clang assume_nonnull begin
// @interface NSValue (NSValueAVFoundationExtensions)

// + (NSValue *)valueWithCMTime:(CMTime)time __attribute__((availability(ios,introduced=4_0)));
// @property (readonly) CMTime CMTimeValue __attribute__((availability(ios,introduced=4_0)));

// + (NSValue *)valueWithCMTimeRange:(CMTimeRange)timeRange __attribute__((availability(ios,introduced=4_0)));
// @property (readonly) CMTimeRange CMTimeRangeValue __attribute__((availability(ios,introduced=4_0)));

// + (NSValue *)valueWithCMTimeMapping:(CMTimeMapping)timeMapping __attribute__((availability(ios,introduced=4_0)));
// @property (readonly) CMTimeMapping CMTimeMappingValue __attribute__((availability(ios,introduced=4_0)));

/* @end */




// @interface NSCoder (AVTimeCoding)

// - (void)encodeCMTime:(CMTime)time forKey:(NSString *)key __attribute__((availability(ios,introduced=4_0)));
// - (CMTime)decodeCMTimeForKey:(NSString *)key __attribute__((availability(ios,introduced=4_0)));

// - (void)encodeCMTimeRange:(CMTimeRange)timeRange forKey:(NSString *)key __attribute__((availability(ios,introduced=4_0)));
// - (CMTimeRange)decodeCMTimeRangeForKey:(NSString *)key __attribute__((availability(ios,introduced=4_0)));

// - (void)encodeCMTimeMapping:(CMTimeMapping)timeMapping forKey:(NSString *)key __attribute__((availability(ios,introduced=4_0)));
// - (CMTimeMapping)decodeCMTimeMappingForKey:(NSString *)key __attribute__((availability(ios,introduced=4_0)));

/* @end */

#pragma clang assume_nonnull end
// @class AVTimedMetadataGroupInternal;
#ifndef _REWRITER_typedef_AVTimedMetadataGroupInternal
#define _REWRITER_typedef_AVTimedMetadataGroupInternal
typedef struct objc_object AVTimedMetadataGroupInternal;
typedef struct {} _objc_exc_AVTimedMetadataGroupInternal;
#endif

// @class AVDateRangeMetadataGroupInternal;
#ifndef _REWRITER_typedef_AVDateRangeMetadataGroupInternal
#define _REWRITER_typedef_AVDateRangeMetadataGroupInternal
typedef struct objc_object AVDateRangeMetadataGroupInternal;
typedef struct {} _objc_exc_AVDateRangeMetadataGroupInternal;
#endif

// @class AVMetadataItem;
#ifndef _REWRITER_typedef_AVMetadataItem
#define _REWRITER_typedef_AVMetadataItem
typedef struct objc_object AVMetadataItem;
typedef struct {} _objc_exc_AVMetadataItem;
#endif


#pragma clang assume_nonnull begin







__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0)))

#ifndef _REWRITER_typedef_AVMetadataGroup
#define _REWRITER_typedef_AVMetadataGroup
typedef struct objc_object AVMetadataGroup;
typedef struct {} _objc_exc_AVMetadataGroup;
#endif

struct AVMetadataGroup_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property (nonatomic, readonly, copy) NSArray<AVMetadataItem *> *items;

/* @end */


// @interface AVMetadataGroup (AVMetadataGroupIdentification)


// @property (nonatomic, readonly, nullable) NSString *classifyingLabel __attribute__((availability(ios,introduced=9_3)));


// @property (nonatomic, readonly, nullable) NSString *uniqueID __attribute__((availability(ios,introduced=9_3)));

/* @end */








__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_3)))

#ifndef _REWRITER_typedef_AVTimedMetadataGroup
#define _REWRITER_typedef_AVTimedMetadataGroup
typedef struct objc_object AVTimedMetadataGroup;
typedef struct {} _objc_exc_AVTimedMetadataGroup;
#endif

struct AVTimedMetadataGroup_IMPL {
	struct AVMetadataGroup_IMPL AVMetadataGroup_IVARS;
	AVTimedMetadataGroupInternal *__strong _priv;
};

// - (instancetype)initWithItems:(NSArray<AVMetadataItem *> *)items timeRange:(CMTimeRange)timeRange;
// - (nullable instancetype)initWithSampleBuffer:(CMSampleBufferRef)sampleBuffer __attribute__((availability(ios,introduced=8_0)));


// @property (nonatomic, readonly) CMTimeRange timeRange;


// @property (nonatomic, readonly, copy) NSArray<AVMetadataItem *> *items;

/* @end */


// @interface AVTimedMetadataGroup (AVTimedMetadataGroupSerializationSupport)
// - (nullable CMMetadataFormatDescriptionRef)copyFormatDescription __attribute__((availability(ios,introduced=8_0))) __attribute__((cf_returns_retained));

/* @end */








__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=4_3)))

#ifndef _REWRITER_typedef_AVMutableTimedMetadataGroup
#define _REWRITER_typedef_AVMutableTimedMetadataGroup
typedef struct objc_object AVMutableTimedMetadataGroup;
typedef struct {} _objc_exc_AVMutableTimedMetadataGroup;
#endif

struct AVMutableTimedMetadataGroup_IMPL {
	struct AVTimedMetadataGroup_IMPL AVTimedMetadataGroup_IVARS;
	AVTimedMetadataGroupInternal *__strong _mutablePriv;
};



// @property (nonatomic, readwrite) CMTimeRange timeRange;


// @property (nonatomic, readwrite, copy) NSArray<AVMetadataItem *> *items;

/* @end */








__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0)))

#ifndef _REWRITER_typedef_AVDateRangeMetadataGroup
#define _REWRITER_typedef_AVDateRangeMetadataGroup
typedef struct objc_object AVDateRangeMetadataGroup;
typedef struct {} _objc_exc_AVDateRangeMetadataGroup;
#endif

struct AVDateRangeMetadataGroup_IMPL {
	struct AVMetadataGroup_IMPL AVMetadataGroup_IVARS;
	AVDateRangeMetadataGroupInternal *__strong _priv;
};

// - (instancetype)initWithItems:(NSArray<AVMetadataItem *> *)items startDate:(NSDate *)startDate endDate:(nullable NSDate *)endDate;


// @property (nonatomic, readonly, copy) NSDate *startDate;


// @property (nonatomic, readonly, copy, nullable) NSDate *endDate;


// @property (nonatomic, readonly, copy) NSArray<AVMetadataItem *> *items;

/* @end */








__attribute__((visibility("default"))) __attribute__((availability(ios,introduced=9_0)))

#ifndef _REWRITER_typedef_AVMutableDateRangeMetadataGroup
#define _REWRITER_typedef_AVMutableDateRangeMetadataGroup
typedef struct objc_object AVMutableDateRangeMetadataGroup;
typedef struct {} _objc_exc_AVMutableDateRangeMetadataGroup;
#endif

struct AVMutableDateRangeMetadataGroup_IMPL {
	struct AVDateRangeMetadataGroup_IMPL AVDateRangeMetadataGroup_IVARS;
	AVDateRangeMetadataGroupInternal *__strong _mutablePriv;
};



// @property (nonatomic, readwrite, copy) NSDate *startDate;


// @property (nonatomic, readwrite, copy, nullable) NSDate *endDate;


// @property (nonatomic, readwrite, copy) NSArray<AVMetadataItem *> *items;

/* @end */

#pragma clang assume_nonnull end
extern "C" CGRect AVMakeRectWithAspectRatioInsideRect(CGSize aspectRatio, CGRect boundingRect) __attribute__((availability(ios,introduced=4_0)));


typedef void(*Block)(int number);

#ifndef _REWRITER_typedef_NSBookAD
#define _REWRITER_typedef_NSBookAD
typedef struct objc_object NSBookAD;
typedef struct {} _objc_exc_NSBookAD;
#endif

struct NSBookAD_IMPL {
	struct NSObject_IMPL NSObject_IVARS;
};


// @property (nonatomic,assign)NSInteger page;

// @property (nonatomic,copy) Block block;


/* @end */


// @interface BlockController ()
/* @end */



typedef void(*block3)(void);
// @implementation BlockController






struct __BlockController__block1_block_impl_0 {
  struct __block_impl impl;
  struct __BlockController__block1_block_desc_0* Desc;
  int age;
  __BlockController__block1_block_impl_0(void *fp, struct __BlockController__block1_block_desc_0 *desc, int _age, int flags=0) : age(_age) {
    impl.isa = &_NSConcreteStackBlock;
    impl.Flags = flags;
    impl.FuncPtr = fp;
    Desc = desc;
  }
};
static void __BlockController__block1_block_func_0(struct __BlockController__block1_block_impl_0 *__cself) {
  int age = __cself->age; // bound by copy


        NSLog((NSString *)&__NSConstantStringImpl__var_folders_yx_x0n54cd97rb9jb777qy7pncm0000gq_T_BlockController_369ade_mi_0,age);
    }

static struct __BlockController__block1_block_desc_0 {
  size_t reserved;
  size_t Block_size;
} __BlockController__block1_block_desc_0_DATA = { 0, sizeof(struct __BlockController__block1_block_impl_0)};

static void _I_BlockController_block1(BlockController * self, SEL _cmd) {
    int age = 20;
    void(*block)(void) = ((void (*)())&__BlockController__block1_block_impl_0((void *)__BlockController__block1_block_func_0, &__BlockController__block1_block_desc_0_DATA, age));

    ((void (*)(__block_impl *))((__block_impl *)block)->FuncPtr)((__block_impl *)block);
}


struct __BlockController__block2_block_impl_0 {
  struct __block_impl impl;
  struct __BlockController__block2_block_desc_0* Desc;
  int *age;
  __BlockController__block2_block_impl_0(void *fp, struct __BlockController__block2_block_desc_0 *desc, int *_age, int flags=0) : age(_age) {
    impl.isa = &_NSConcreteStackBlock;
    impl.Flags = flags;
    impl.FuncPtr = fp;
    Desc = desc;
  }
};
static void __BlockController__block2_block_func_0(struct __BlockController__block2_block_impl_0 *__cself) {
  int *age = __cself->age; // bound by copy

        *age = 100;
        NSLog((NSString *)&__NSConstantStringImpl__var_folders_yx_x0n54cd97rb9jb777qy7pncm0000gq_T_BlockController_369ade_mi_1,*age);
    }

static struct __BlockController__block2_block_desc_0 {
  size_t reserved;
  size_t Block_size;
} __BlockController__block2_block_desc_0_DATA = { 0, sizeof(struct __BlockController__block2_block_impl_0)};

static void _I_BlockController_block2(BlockController * self, SEL _cmd) {
    int age1 = 30;
    int *age = &age1;
    void(*block)(void) = ((void (*)())&__BlockController__block2_block_impl_0((void *)__BlockController__block2_block_func_0, &__BlockController__block2_block_desc_0_DATA, age));

    ((void (*)(__block_impl *))((__block_impl *)block)->FuncPtr)((__block_impl *)block);
    NSLog((NSString *)&__NSConstantStringImpl__var_folders_yx_x0n54cd97rb9jb777qy7pncm0000gq_T_BlockController_369ade_mi_2);
    NSLog((NSString *)&__NSConstantStringImpl__var_folders_yx_x0n54cd97rb9jb777qy7pncm0000gq_T_BlockController_369ade_mi_3,*age);
}


struct __BlockController__block3_block_impl_0 {
  struct __block_impl impl;
  struct __BlockController__block3_block_desc_0* Desc;
  __BlockController__block3_block_impl_0(void *fp, struct __BlockController__block3_block_desc_0 *desc, int flags=0) {
    impl.isa = &_NSConcreteStackBlock;
    impl.Flags = flags;
    impl.FuncPtr = fp;
    Desc = desc;
  }
};
static void __BlockController__block3_block_func_0(struct __BlockController__block3_block_impl_0 *__cself) {

        NSLog((NSString *)&__NSConstantStringImpl__var_folders_yx_x0n54cd97rb9jb777qy7pncm0000gq_T_BlockController_369ade_mi_4);
    }

static struct __BlockController__block3_block_desc_0 {
  size_t reserved;
  size_t Block_size;
} __BlockController__block3_block_desc_0_DATA = { 0, sizeof(struct __BlockController__block3_block_impl_0)};

struct __BlockController__block3_block_impl_1 {
  struct __block_impl impl;
  struct __BlockController__block3_block_desc_1* Desc;
  int age;
  __BlockController__block3_block_impl_1(void *fp, struct __BlockController__block3_block_desc_1 *desc, int _age, int flags=0) : age(_age) {
    impl.isa = &_NSConcreteStackBlock;
    impl.Flags = flags;
    impl.FuncPtr = fp;
    Desc = desc;
  }
};
static void __BlockController__block3_block_func_1(struct __BlockController__block3_block_impl_1 *__cself) {
  int age = __cself->age; // bound by copy

        NSLog((NSString *)&__NSConstantStringImpl__var_folders_yx_x0n54cd97rb9jb777qy7pncm0000gq_T_BlockController_369ade_mi_5, age);
    }

static struct __BlockController__block3_block_desc_1 {
  size_t reserved;
  size_t Block_size;
} __BlockController__block3_block_desc_1_DATA = { 0, sizeof(struct __BlockController__block3_block_impl_1)};

struct __BlockController__block3_block_impl_2 {
  struct __block_impl impl;
  struct __BlockController__block3_block_desc_2* Desc;
  int age;
  __BlockController__block3_block_impl_2(void *fp, struct __BlockController__block3_block_desc_2 *desc, int _age, int flags=0) : age(_age) {
    impl.isa = &_NSConcreteStackBlock;
    impl.Flags = flags;
    impl.FuncPtr = fp;
    Desc = desc;
  }
};
static void __BlockController__block3_block_func_2(struct __BlockController__block3_block_impl_2 *__cself) {
  int age = __cself->age; // bound by copy

       NSLog((NSString *)&__NSConstantStringImpl__var_folders_yx_x0n54cd97rb9jb777qy7pncm0000gq_T_BlockController_369ade_mi_7, age);
    }

static struct __BlockController__block3_block_desc_2 {
  size_t reserved;
  size_t Block_size;
} __BlockController__block3_block_desc_2_DATA = { 0, sizeof(struct __BlockController__block3_block_impl_2)};

struct __BlockController__block3_block_impl_3 {
  struct __block_impl impl;
  struct __BlockController__block3_block_desc_3* Desc;
  NSBookAD *__strong ac;
  __BlockController__block3_block_impl_3(void *fp, struct __BlockController__block3_block_desc_3 *desc, NSBookAD *__strong _ac, int flags=0) : ac(_ac) {
    impl.isa = &_NSConcreteStackBlock;
    impl.Flags = flags;
    impl.FuncPtr = fp;
    Desc = desc;
  }
};
static void __BlockController__block3_block_func_3(struct __BlockController__block3_block_impl_3 *__cself) {
  NSBookAD *__strong ac = __cself->ac; // bound by copy

            NSLog((NSString *)&__NSConstantStringImpl__var_folders_yx_x0n54cd97rb9jb777qy7pncm0000gq_T_BlockController_369ade_mi_8, (long)((NSInteger (*)(id, SEL))(void *)objc_msgSend)((id)ac, sel_registerName("page")));
        }
static void __BlockController__block3_block_copy_3(struct __BlockController__block3_block_impl_3*dst, struct __BlockController__block3_block_impl_3*src) {_Block_object_assign((void*)&dst->ac, (void*)src->ac, 3/*BLOCK_FIELD_IS_OBJECT*/);}

static void __BlockController__block3_block_dispose_3(struct __BlockController__block3_block_impl_3*src) {_Block_object_dispose((void*)src->ac, 3/*BLOCK_FIELD_IS_OBJECT*/);}

static struct __BlockController__block3_block_desc_3 {
  size_t reserved;
  size_t Block_size;
  void (*copy)(struct __BlockController__block3_block_impl_3*, struct __BlockController__block3_block_impl_3*);
  void (*dispose)(struct __BlockController__block3_block_impl_3*);
} __BlockController__block3_block_desc_3_DATA = { 0, sizeof(struct __BlockController__block3_block_impl_3), __BlockController__block3_block_copy_3, __BlockController__block3_block_dispose_3};

struct __BlockController__block3_block_impl_4 {
  struct __block_impl impl;
  struct __BlockController__block3_block_desc_4* Desc;
  NSBookAD *__strong ac;
  __BlockController__block3_block_impl_4(void *fp, struct __BlockController__block3_block_desc_4 *desc, NSBookAD *__strong _ac, int flags=0) : ac(_ac) {
    impl.isa = &_NSConcreteStackBlock;
    impl.Flags = flags;
    impl.FuncPtr = fp;
    Desc = desc;
  }
};
static void __BlockController__block3_block_func_4(struct __BlockController__block3_block_impl_4 *__cself) {
  NSBookAD *__strong ac = __cself->ac; // bound by copy

            NSLog((NSString *)&__NSConstantStringImpl__var_folders_yx_x0n54cd97rb9jb777qy7pncm0000gq_T_BlockController_369ade_mi_10, (long)((NSInteger (*)(id, SEL))(void *)objc_msgSend)((id)ac, sel_registerName("page")));
        }
static void __BlockController__block3_block_copy_4(struct __BlockController__block3_block_impl_4*dst, struct __BlockController__block3_block_impl_4*src) {_Block_object_assign((void*)&dst->ac, (void*)src->ac, 3/*BLOCK_FIELD_IS_OBJECT*/);}

static void __BlockController__block3_block_dispose_4(struct __BlockController__block3_block_impl_4*src) {_Block_object_dispose((void*)src->ac, 3/*BLOCK_FIELD_IS_OBJECT*/);}

static struct __BlockController__block3_block_desc_4 {
  size_t reserved;
  size_t Block_size;
  void (*copy)(struct __BlockController__block3_block_impl_4*, struct __BlockController__block3_block_impl_4*);
  void (*dispose)(struct __BlockController__block3_block_impl_4*);
} __BlockController__block3_block_desc_4_DATA = { 0, sizeof(struct __BlockController__block3_block_impl_4), __BlockController__block3_block_copy_4, __BlockController__block3_block_dispose_4};

static void _I_BlockController_block3(BlockController * self, SEL _cmd) {
    void (*block1)(void) = ((void (*)())&__BlockController__block3_block_impl_0((void *)__BlockController__block3_block_func_0, &__BlockController__block3_block_desc_0_DATA));

    int age = 10;
    void (*block2)(void) = ((void (*)())&__BlockController__block3_block_impl_1((void *)__BlockController__block3_block_func_1, &__BlockController__block3_block_desc_1_DATA, age));


    NSLog((NSString *)&__NSConstantStringImpl__var_folders_yx_x0n54cd97rb9jb777qy7pncm0000gq_T_BlockController_369ade_mi_6, ((Class (*)(id, SEL))(void *)objc_msgSend)((id)block1, sel_registerName("class")), ((Class (*)(id, SEL))(void *)objc_msgSend)((id)block2, sel_registerName("class")), ((Class (*)(id, SEL))(void *)objc_msgSend)((id)((void (*)())&__BlockController__block3_block_impl_2((void *)__BlockController__block3_block_func_2, &__BlockController__block3_block_desc_2_DATA, age)), sel_registerName("class")));
    {
        NSBookAD *ac = ((NSBookAD *(*)(id, SEL))(void *)objc_msgSend)((id)((NSBookAD *(*)(id, SEL))(void *)objc_msgSend)((id)objc_getClass("NSBookAD"), sel_registerName("alloc")), sel_registerName("init"));
        void(*block4)(void) = ((void (*)())&__BlockController__block3_block_impl_3((void *)__BlockController__block3_block_func_3, &__BlockController__block3_block_desc_3_DATA, ac, 570425344));
        NSLog((NSString *)&__NSConstantStringImpl__var_folders_yx_x0n54cd97rb9jb777qy7pncm0000gq_T_BlockController_369ade_mi_9,((Class (*)(id, SEL))(void *)objc_msgSend)((id)block4, sel_registerName("class")));

        ((void (*)(__block_impl *))((__block_impl *)block4)->FuncPtr)((__block_impl *)block4);
    }



    block3 b;

    {
        NSBookAD *ac = ((NSBookAD *(*)(id, SEL))(void *)objc_msgSend)((id)((NSBookAD *(*)(id, SEL))(void *)objc_msgSend)((id)objc_getClass("NSBookAD"), sel_registerName("alloc")), sel_registerName("init"));
        b = ((void (*)())&__BlockController__block3_block_impl_4((void *)__BlockController__block3_block_func_4, &__BlockController__block3_block_desc_4_DATA, ac, 570425344));
        NSLog((NSString *)&__NSConstantStringImpl__var_folders_yx_x0n54cd97rb9jb777qy7pncm0000gq_T_BlockController_369ade_mi_11,((Class (*)(id, SEL))(void *)objc_msgSend)((id)b, sel_registerName("class")));

    }
}


struct __Block_byref_fs_0 {
  void *__isa;
__Block_byref_fs_0 *__forwarding;
 int __flags;
 int __size;
 int fs;
};
struct __Block_byref_aaad_1 {
  void *__isa;
__Block_byref_aaad_1 *__forwarding;
 int __flags;
 int __size;
 void (*__Block_byref_id_object_copy)(void*, void*);
 void (*__Block_byref_id_object_dispose)(void*);
 NSBookAD *__strong aaad;
};

struct __BlockController__block4_block_impl_0 {
  struct __block_impl impl;
  struct __BlockController__block4_block_desc_0* Desc;
  __Block_byref_fs_0 *fs; // by ref
  __BlockController__block4_block_impl_0(void *fp, struct __BlockController__block4_block_desc_0 *desc, __Block_byref_fs_0 *_fs, int flags=0) : fs(_fs->__forwarding) {
    impl.isa = &_NSConcreteStackBlock;
    impl.Flags = flags;
    impl.FuncPtr = fp;
    Desc = desc;
  }
};
static void __BlockController__block4_block_func_0(struct __BlockController__block4_block_impl_0 *__cself) {
  __Block_byref_fs_0 *fs = __cself->fs; // bound by ref

        NSLog((NSString *)&__NSConstantStringImpl__var_folders_yx_x0n54cd97rb9jb777qy7pncm0000gq_T_BlockController_369ade_mi_12, (fs->__forwarding->fs));
    }
static void __BlockController__block4_block_copy_0(struct __BlockController__block4_block_impl_0*dst, struct __BlockController__block4_block_impl_0*src) {_Block_object_assign((void*)&dst->fs, (void*)src->fs, 8/*BLOCK_FIELD_IS_BYREF*/);}

static void __BlockController__block4_block_dispose_0(struct __BlockController__block4_block_impl_0*src) {_Block_object_dispose((void*)src->fs, 8/*BLOCK_FIELD_IS_BYREF*/);}

static struct __BlockController__block4_block_desc_0 {
  size_t reserved;
  size_t Block_size;
  void (*copy)(struct __BlockController__block4_block_impl_0*, struct __BlockController__block4_block_impl_0*);
  void (*dispose)(struct __BlockController__block4_block_impl_0*);
} __BlockController__block4_block_desc_0_DATA = { 0, sizeof(struct __BlockController__block4_block_impl_0), __BlockController__block4_block_copy_0, __BlockController__block4_block_dispose_0};

struct __BlockController__block4_block_impl_1 {
  struct __block_impl impl;
  struct __BlockController__block4_block_desc_1* Desc;
  __Block_byref_aaad_1 *aaad; // by ref
  __BlockController__block4_block_impl_1(void *fp, struct __BlockController__block4_block_desc_1 *desc, __Block_byref_aaad_1 *_aaad, int flags=0) : aaad(_aaad->__forwarding) {
    impl.isa = &_NSConcreteStackBlock;
    impl.Flags = flags;
    impl.FuncPtr = fp;
    Desc = desc;
  }
};
static void __BlockController__block4_block_func_1(struct __BlockController__block4_block_impl_1 *__cself) {
  __Block_byref_aaad_1 *aaad = __cself->aaad; // bound by ref

        NSLog((NSString *)&__NSConstantStringImpl__var_folders_yx_x0n54cd97rb9jb777qy7pncm0000gq_T_BlockController_369ade_mi_13, (long)((NSInteger (*)(id, SEL))(void *)objc_msgSend)((id)(aaad->__forwarding->aaad), sel_registerName("page")));
    }
static void __BlockController__block4_block_copy_1(struct __BlockController__block4_block_impl_1*dst, struct __BlockController__block4_block_impl_1*src) {_Block_object_assign((void*)&dst->aaad, (void*)src->aaad, 8/*BLOCK_FIELD_IS_BYREF*/);}

static void __BlockController__block4_block_dispose_1(struct __BlockController__block4_block_impl_1*src) {_Block_object_dispose((void*)src->aaad, 8/*BLOCK_FIELD_IS_BYREF*/);}

static struct __BlockController__block4_block_desc_1 {
  size_t reserved;
  size_t Block_size;
  void (*copy)(struct __BlockController__block4_block_impl_1*, struct __BlockController__block4_block_impl_1*);
  void (*dispose)(struct __BlockController__block4_block_impl_1*);
} __BlockController__block4_block_desc_1_DATA = { 0, sizeof(struct __BlockController__block4_block_impl_1), __BlockController__block4_block_copy_1, __BlockController__block4_block_dispose_1};

static void _I_BlockController_block4(BlockController * self, SEL _cmd) {
    __attribute__((__blocks__(byref))) __Block_byref_fs_0 fs = {(void*)0,(__Block_byref_fs_0 *)&fs, 0, sizeof(__Block_byref_fs_0), 100};
    void(*block5)(void) = ((void (*)())&__BlockController__block4_block_impl_0((void *)__BlockController__block4_block_func_0, &__BlockController__block4_block_desc_0_DATA, (__Block_byref_fs_0 *)&fs, 570425344));
    ((void (*)(__block_impl *))((__block_impl *)block5)->FuncPtr)((__block_impl *)block5);
    __attribute__((__blocks__(byref))) __Block_byref_aaad_1 aaad = {(void*)0,(__Block_byref_aaad_1 *)&aaad, 33554432, sizeof(__Block_byref_aaad_1), __Block_byref_id_object_copy_131, __Block_byref_id_object_dispose_131, ((NSBookAD *(*)(id, SEL))(void *)objc_msgSend)((id)((NSBookAD *(*)(id, SEL))(void *)objc_msgSend)((id)objc_getClass("NSBookAD"), sel_registerName("alloc")), sel_registerName("init"))};
    void(*block6)(void) = ((void (*)())&__BlockController__block4_block_impl_1((void *)__BlockController__block4_block_func_1, &__BlockController__block4_block_desc_1_DATA, (__Block_byref_aaad_1 *)&aaad, 570425344));
    ((void (*)(__block_impl *))((__block_impl *)block6)->FuncPtr)((__block_impl *)block6);
}


struct __BlockController__block5_block_impl_0 {
  struct __block_impl impl;
  struct __BlockController__block5_block_desc_0* Desc;
  NSBookAD *__strong aaad;
  __BlockController__block5_block_impl_0(void *fp, struct __BlockController__block5_block_desc_0 *desc, NSBookAD *__strong _aaad, int flags=0) : aaad(_aaad) {
    impl.isa = &_NSConcreteStackBlock;
    impl.Flags = flags;
    impl.FuncPtr = fp;
    Desc = desc;
  }
};
static void __BlockController__block5_block_func_0(struct __BlockController__block5_block_impl_0 *__cself, int number) {
  NSBookAD *__strong aaad = __cself->aaad; // bound by copy

            NSLog((NSString *)&__NSConstantStringImpl__var_folders_yx_x0n54cd97rb9jb777qy7pncm0000gq_T_BlockController_369ade_mi_14,((NSInteger (*)(id, SEL))(void *)objc_msgSend)((id)aaad, sel_registerName("page")));
        }
static void __BlockController__block5_block_copy_0(struct __BlockController__block5_block_impl_0*dst, struct __BlockController__block5_block_impl_0*src) {_Block_object_assign((void*)&dst->aaad, (void*)src->aaad, 3/*BLOCK_FIELD_IS_OBJECT*/);}

static void __BlockController__block5_block_dispose_0(struct __BlockController__block5_block_impl_0*src) {_Block_object_dispose((void*)src->aaad, 3/*BLOCK_FIELD_IS_OBJECT*/);}

static struct __BlockController__block5_block_desc_0 {
  size_t reserved;
  size_t Block_size;
  void (*copy)(struct __BlockController__block5_block_impl_0*, struct __BlockController__block5_block_impl_0*);
  void (*dispose)(struct __BlockController__block5_block_impl_0*);
} __BlockController__block5_block_desc_0_DATA = { 0, sizeof(struct __BlockController__block5_block_impl_0), __BlockController__block5_block_copy_0, __BlockController__block5_block_dispose_0};

struct __BlockController__block5_block_impl_1 {
  struct __block_impl impl;
  struct __BlockController__block5_block_desc_1* Desc;
  NSBookAD *__weak aaad3;
  __BlockController__block5_block_impl_1(void *fp, struct __BlockController__block5_block_desc_1 *desc, NSBookAD *__weak _aaad3, int flags=0) : aaad3(_aaad3) {
    impl.isa = &_NSConcreteStackBlock;
    impl.Flags = flags;
    impl.FuncPtr = fp;
    Desc = desc;
  }
};
static void __BlockController__block5_block_func_1(struct __BlockController__block5_block_impl_1 *__cself, int number) {
  NSBookAD *__weak aaad3 = __cself->aaad3; // bound by copy

            NSLog((NSString *)&__NSConstantStringImpl__var_folders_yx_x0n54cd97rb9jb777qy7pncm0000gq_T_BlockController_369ade_mi_15,(long)((NSInteger (*)(id, SEL))(void *)objc_msgSend)((id)aaad3, sel_registerName("page")));
        }
static void __BlockController__block5_block_copy_1(struct __BlockController__block5_block_impl_1*dst, struct __BlockController__block5_block_impl_1*src) {_Block_object_assign((void*)&dst->aaad3, (void*)src->aaad3, 3/*BLOCK_FIELD_IS_OBJECT*/);}

static void __BlockController__block5_block_dispose_1(struct __BlockController__block5_block_impl_1*src) {_Block_object_dispose((void*)src->aaad3, 3/*BLOCK_FIELD_IS_OBJECT*/);}

static struct __BlockController__block5_block_desc_1 {
  size_t reserved;
  size_t Block_size;
  void (*copy)(struct __BlockController__block5_block_impl_1*, struct __BlockController__block5_block_impl_1*);
  void (*dispose)(struct __BlockController__block5_block_impl_1*);
} __BlockController__block5_block_desc_1_DATA = { 0, sizeof(struct __BlockController__block5_block_impl_1), __BlockController__block5_block_copy_1, __BlockController__block5_block_dispose_1};

static void _I_BlockController_block5(BlockController * self, SEL _cmd) {


    {






        NSBookAD * aaad = ((NSBookAD *(*)(id, SEL))(void *)objc_msgSend)((id)((NSBookAD *(*)(id, SEL))(void *)objc_msgSend)((id)objc_getClass("NSBookAD"), sel_registerName("alloc")), sel_registerName("init"));
        ((void (*)(id, SEL, NSInteger))(void *)objc_msgSend)((id)aaad, sel_registerName("setPage:"), (NSInteger)100);
        ((void (*)(id, SEL, Block))(void *)objc_msgSend)((id)aaad, sel_registerName("setBlock:"), ((void (*)(int))&__BlockController__block5_block_impl_0((void *)__BlockController__block5_block_func_0, &__BlockController__block5_block_desc_0_DATA, aaad, 570425344)));


        NSBookAD * aaad2 = ((NSBookAD *(*)(id, SEL))(void *)objc_msgSend)((id)((NSBookAD *(*)(id, SEL))(void *)objc_msgSend)((id)objc_getClass("NSBookAD"), sel_registerName("alloc")), sel_registerName("init"));
        __attribute__((objc_ownership(weak))) NSBookAD * aaad3 = aaad2;
        ((void (*)(id, SEL, NSInteger))(void *)objc_msgSend)((id)aaad3, sel_registerName("setPage:"), (NSInteger)100);
        ((void (*)(id, SEL, Block))(void *)objc_msgSend)((id)aaad3, sel_registerName("setBlock:"), ((void (*)(int))&__BlockController__block5_block_impl_1((void *)__BlockController__block5_block_func_1, &__BlockController__block5_block_desc_1_DATA, aaad3, 570425344)));
    }

    NSLog((NSString *)&__NSConstantStringImpl__var_folders_yx_x0n54cd97rb9jb777qy7pncm0000gq_T_BlockController_369ade_mi_16);






}

static void _I_BlockController_viewDidLoad(BlockController * self, SEL _cmd) {
    ((void (*)(__rw_objc_super *, SEL))(void *)objc_msgSendSuper)((__rw_objc_super){(id)self, (id)class_getSuperclass(objc_getClass("BlockController"))}, sel_registerName("viewDidLoad"));
    ((void (*)(id, SEL))(void *)objc_msgSend)((id)self, sel_registerName("block5"));


}


// @end

struct _prop_t {
	const char *name;
	const char *attributes;
};

struct _protocol_t;

struct _objc_method {
	struct objc_selector * _cmd;
	const char *method_type;
	void  *_imp;
};

struct _protocol_t {
	void * isa;  // NULL
	const char *protocol_name;
	const struct _protocol_list_t * protocol_list; // super protocols
	const struct method_list_t *instance_methods;
	const struct method_list_t *class_methods;
	const struct method_list_t *optionalInstanceMethods;
	const struct method_list_t *optionalClassMethods;
	const struct _prop_list_t * properties;
	const unsigned int size;  // sizeof(struct _protocol_t)
	const unsigned int flags;  // = 0
	const char ** extendedMethodTypes;
};

struct _ivar_t {
	unsigned long int *offset;  // pointer to ivar offset location
	const char *name;
	const char *type;
	unsigned int alignment;
	unsigned int  size;
};

struct _class_ro_t {
	unsigned int flags;
	unsigned int instanceStart;
	unsigned int instanceSize;
	const unsigned char *ivarLayout;
	const char *name;
	const struct _method_list_t *baseMethods;
	const struct _objc_protocol_list *baseProtocols;
	const struct _ivar_list_t *ivars;
	const unsigned char *weakIvarLayout;
	const struct _prop_list_t *properties;
};

struct _class_t {
	struct _class_t *isa;
	struct _class_t *superclass;
	void *cache;
	void *vtable;
	struct _class_ro_t *ro;
};

struct _category_t {
	const char *name;
	struct _class_t *cls;
	const struct _method_list_t *instance_methods;
	const struct _method_list_t *class_methods;
	const struct _protocol_list_t *protocols;
	const struct _prop_list_t *properties;
};
extern "C" __declspec(dllimport) struct objc_cache _objc_empty_cache;
#pragma warning(disable:4273)

static struct /*_method_list_t*/ {
	unsigned int entsize;  // sizeof(struct _objc_method)
	unsigned int method_count;
	struct _objc_method method_list[6];
} _OBJC_$_INSTANCE_METHODS_BlockController __attribute__ ((used, section ("__DATA,__objc_const"))) = {
	sizeof(_objc_method),
	6,
	{{(struct objc_selector *)"block1", "v16@0:8", (void *)_I_BlockController_block1},
	{(struct objc_selector *)"block2", "v16@0:8", (void *)_I_BlockController_block2},
	{(struct objc_selector *)"block3", "v16@0:8", (void *)_I_BlockController_block3},
	{(struct objc_selector *)"block4", "v16@0:8", (void *)_I_BlockController_block4},
	{(struct objc_selector *)"block5", "v16@0:8", (void *)_I_BlockController_block5},
	{(struct objc_selector *)"viewDidLoad", "v16@0:8", (void *)_I_BlockController_viewDidLoad}}
};

static struct _class_ro_t _OBJC_METACLASS_RO_$_BlockController __attribute__ ((used, section ("__DATA,__objc_const"))) = {
	1, sizeof(struct _class_t), sizeof(struct _class_t), 
	0, 
	"BlockController",
	0, 
	0, 
	0, 
	0, 
	0, 
};

static struct _class_ro_t _OBJC_CLASS_RO_$_BlockController __attribute__ ((used, section ("__DATA,__objc_const"))) = {
	0, sizeof(struct BlockController_IMPL), sizeof(struct BlockController_IMPL), 
	0, 
	"BlockController",
	(const struct _method_list_t *)&_OBJC_$_INSTANCE_METHODS_BlockController,
	0, 
	0, 
	0, 
	0, 
};

extern "C" __declspec(dllimport) struct _class_t OBJC_METACLASS_$_UIViewController;
extern "C" __declspec(dllimport) struct _class_t OBJC_METACLASS_$_NSObject;

extern "C" __declspec(dllexport) struct _class_t OBJC_METACLASS_$_BlockController __attribute__ ((used, section ("__DATA,__objc_data"))) = {
	0, // &OBJC_METACLASS_$_NSObject,
	0, // &OBJC_METACLASS_$_UIViewController,
	0, // (void *)&_objc_empty_cache,
	0, // unused, was (void *)&_objc_empty_vtable,
	&_OBJC_METACLASS_RO_$_BlockController,
};

extern "C" __declspec(dllimport) struct _class_t OBJC_CLASS_$_UIViewController;

extern "C" __declspec(dllexport) struct _class_t OBJC_CLASS_$_BlockController __attribute__ ((used, section ("__DATA,__objc_data"))) = {
	0, // &OBJC_METACLASS_$_BlockController,
	0, // &OBJC_CLASS_$_UIViewController,
	0, // (void *)&_objc_empty_cache,
	0, // unused, was (void *)&_objc_empty_vtable,
	&_OBJC_CLASS_RO_$_BlockController,
};
static void OBJC_CLASS_SETUP_$_BlockController(void ) {
	OBJC_METACLASS_$_BlockController.isa = &OBJC_METACLASS_$_NSObject;
	OBJC_METACLASS_$_BlockController.superclass = &OBJC_METACLASS_$_UIViewController;
	OBJC_METACLASS_$_BlockController.cache = &_objc_empty_cache;
	OBJC_CLASS_$_BlockController.isa = &OBJC_METACLASS_$_BlockController;
	OBJC_CLASS_$_BlockController.superclass = &OBJC_CLASS_$_UIViewController;
	OBJC_CLASS_$_BlockController.cache = &_objc_empty_cache;
}
#pragma section(".objc_inithooks$B", long, read, write)
__declspec(allocate(".objc_inithooks$B")) static void *OBJC_CLASS_SETUP[] = {
	(void *)&OBJC_CLASS_SETUP_$_BlockController,
};
static struct _class_t *L_OBJC_LABEL_CLASS_$ [1] __attribute__((used, section ("__DATA, __objc_classlist,regular,no_dead_strip")))= {
	&OBJC_CLASS_$_BlockController,
};
static struct IMAGE_INFO { unsigned version; unsigned flag; } _OBJC_IMAGE_INFO = { 0, 2 };
